--lpm_counter DEVICE_FAMILY="Cyclone II" lpm_direction="UP" lpm_width=32 aclr clk_en clock q
--VERSION_BEGIN 4.1 cbx_cycloneii 2004:05:18:11:27:16:SJ cbx_lpm_add_sub 2004:06:23:12:24:04:SJ cbx_lpm_compare 2004:04:12:17:30:12:SJ cbx_lpm_counter 2004:07:12:18:53:30:SJ cbx_lpm_decode 2004:03:10:10:44:06:SJ cbx_mgl 2004:06:17:17:30:06:SJ cbx_stratix 2004:04:28:15:20:14:SJ cbx_stratixii 2004:05:18:11:28:28:SJ  VERSION_END


--  Copyright (C) 1988-2002 Altera Corporation
--  Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
--  support information,  device programming or simulation file,  and any other
--  associated  documentation or information  provided by  Altera  or a partner
--  under  Altera's   Megafunction   Partnership   Program  may  be  used  only
--  to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
--  other  use  of such  megafunction  design,  netlist,  support  information,
--  device programming or simulation file,  or any other  related documentation
--  or information  is prohibited  for  any  other purpose,  including, but not
--  limited to  modification,  reverse engineering,  de-compiling, or use  with
--  any other  silicon devices,  unless such use is  explicitly  licensed under
--  a separate agreement with  Altera  or a megafunction partner.  Title to the
--  intellectual property,  including patents,  copyrights,  trademarks,  trade
--  secrets,  or maskworks,  embodied in any such megafunction design, netlist,
--  support  information,  device programming or simulation file,  or any other
--  related documentation or information provided by  Altera  or a megafunction
--  partner, remains with Altera, the megafunction partner, or their respective
--  licensors. No other licenses, including any licenses needed under any third
--  party's intellectual property, are provided herein.


FUNCTION cycloneii_lcell_comb (cin, dataa, datab, datac, datad)
WITH ( 	LUT_MASK,	SUM_LUTC_INPUT) 
RETURNS ( combout, cout);
FUNCTION cycloneii_lcell_ff (aclr, clk, datain, ena, sclr, sdata, sload)
RETURNS ( regout);

--synthesis_resources = cycloneii_lcell_comb 32 cycloneii_lcell_ff 32 
SUBDESIGN cntr_t78
( 
	aclr	:	input;
	clk_en	:	input;
	clock	:	input;
	q[31..0]	:	output;
) 
VARIABLE 
	counter_comb_bita0 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita1 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita2 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita3 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita4 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita5 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita6 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita7 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita8 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita9 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita10 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita11 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita12 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita13 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita14 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita15 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita16 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita17 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita18 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita19 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita20 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita21 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita22 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita23 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita24 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita25 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita26 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita27 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita28 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita29 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita30 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_comb_bita31 : cycloneii_lcell_comb
		WITH (
			LUT_MASK = "5A90",
			SUM_LUTC_INPUT = "cin"
		);
	counter_reg_bit1a[31..0] : cycloneii_lcell_ff;
	a_val[31..0]	: WIRE;
	aclr_actual	: WIRE;
	cnt_en	: NODE;
	data[31..0]	: NODE;
	external_cin	: WIRE;
	ones[31..0]	: WIRE;
	s_val[31..0]	: WIRE;
	safe_q[31..0]	: WIRE;
	sclr	: NODE;
	sload	: NODE;
	sset	: NODE;
	time_to_clear	: WIRE;
	updown_dir	: WIRE;

BEGIN 
	counter_comb_bita[0].cin = external_cin;
	counter_comb_bita[1].cin = counter_comb_bita[0].cout;
	counter_comb_bita[2].cin = counter_comb_bita[1].cout;
	counter_comb_bita[3].cin = counter_comb_bita[2].cout;
	counter_comb_bita[4].cin = counter_comb_bita[3].cout;
	counter_comb_bita[5].cin = counter_comb_bita[4].cout;
	counter_comb_bita[6].cin = counter_comb_bita[5].cout;
	counter_comb_bita[7].cin = counter_comb_bita[6].cout;
	counter_comb_bita[8].cin = counter_comb_bita[7].cout;
	counter_comb_bita[9].cin = counter_comb_bita[8].cout;
	counter_comb_bita[10].cin = counter_comb_bita[9].cout;
	counter_comb_bita[11].cin = counter_comb_bita[10].cout;
	counter_comb_bita[12].cin = counter_comb_bita[11].cout;
	counter_comb_bita[13].cin = counter_comb_bita[12].cout;
	counter_comb_bita[14].cin = counter_comb_bita[13].cout;
	counter_comb_bita[15].cin = counter_comb_bita[14].cout;
	counter_comb_bita[16].cin = counter_comb_bita[15].cout;
	counter_comb_bita[17].cin = counter_comb_bita[16].cout;
	counter_comb_bita[18].cin = counter_comb_bita[17].cout;
	counter_comb_bita[19].cin = counter_comb_bita[18].cout;
	counter_comb_bita[20].cin = counter_comb_bita[19].cout;
	counter_comb_bita[21].cin = counter_comb_bita[20].cout;
	counter_comb_bita[22].cin = counter_comb_bita[21].cout;
	counter_comb_bita[23].cin = counter_comb_bita[22].cout;
	counter_comb_bita[24].cin = counter_comb_bita[23].cout;
	counter_comb_bita[25].cin = counter_comb_bita[24].cout;
	counter_comb_bita[26].cin = counter_comb_bita[25].cout;
	counter_comb_bita[27].cin = counter_comb_bita[26].cout;
	counter_comb_bita[28].cin = counter_comb_bita[27].cout;
	counter_comb_bita[29].cin = counter_comb_bita[28].cout;
	counter_comb_bita[30].cin = counter_comb_bita[29].cout;
	counter_comb_bita[31].cin = counter_comb_bita[30].cout;
	counter_comb_bita[0].dataa = counter_reg_bit1a[0].regout;
	counter_comb_bita[1].dataa = counter_reg_bit1a[1].regout;
	counter_comb_bita[2].dataa = counter_reg_bit1a[2].regout;
	counter_comb_bita[3].dataa = counter_reg_bit1a[3].regout;
	counter_comb_bita[4].dataa = counter_reg_bit1a[4].regout;
	counter_comb_bita[5].dataa = counter_reg_bit1a[5].regout;
	counter_comb_bita[6].dataa = counter_reg_bit1a[6].regout;
	counter_comb_bita[7].dataa = counter_reg_bit1a[7].regout;
	counter_comb_bita[8].dataa = counter_reg_bit1a[8].regout;
	counter_comb_bita[9].dataa = counter_reg_bit1a[9].regout;
	counter_comb_bita[10].dataa = counter_reg_bit1a[10].regout;
	counter_comb_bita[11].dataa = counter_reg_bit1a[11].regout;
	counter_comb_bita[12].dataa = counter_reg_bit1a[12].regout;
	counter_comb_bita[13].dataa = counter_reg_bit1a[13].regout;
	counter_comb_bita[14].dataa = counter_reg_bit1a[14].regout;
	counter_comb_bita[15].dataa = counter_reg_bit1a[15].regout;
	counter_comb_bita[16].dataa = counter_reg_bit1a[16].regout;
	counter_comb_bita[17].dataa = counter_reg_bit1a[17].regout;
	counter_comb_bita[18].dataa = counter_reg_bit1a[18].regout;
	counter_comb_bita[19].dataa = counter_reg_bit1a[19].regout;
	counter_comb_bita[20].dataa = counter_reg_bit1a[20].regout;
	counter_comb_bita[21].dataa = counter_reg_bit1a[21].regout;
	counter_comb_bita[22].dataa = counter_reg_bit1a[22].regout;
	counter_comb_bita[23].dataa = counter_reg_bit1a[23].regout;
	counter_comb_bita[24].dataa = counter_reg_bit1a[24].regout;
	counter_comb_bita[25].dataa = counter_reg_bit1a[25].regout;
	counter_comb_bita[26].dataa = counter_reg_bit1a[26].regout;
	counter_comb_bita[27].dataa = counter_reg_bit1a[27].regout;
	counter_comb_bita[28].dataa = counter_reg_bit1a[28].regout;
	counter_comb_bita[29].dataa = counter_reg_bit1a[29].regout;
	counter_comb_bita[30].dataa = counter_reg_bit1a[30].regout;
	counter_comb_bita[31].dataa = counter_reg_bit1a[31].regout;
	counter_comb_bita[0].datab = updown_dir;
	counter_comb_bita[1].datab = updown_dir;
	counter_comb_bita[2].datab = updown_dir;
	counter_comb_bita[3].datab = updown_dir;
	counter_comb_bita[4].datab = updown_dir;
	counter_comb_bita[5].datab = updown_dir;
	counter_comb_bita[6].datab = updown_dir;
	counter_comb_bita[7].datab = updown_dir;
	counter_comb_bita[8].datab = updown_dir;
	counter_comb_bita[9].datab = updown_dir;
	counter_comb_bita[10].datab = updown_dir;
	counter_comb_bita[11].datab = updown_dir;
	counter_comb_bita[12].datab = updown_dir;
	counter_comb_bita[13].datab = updown_dir;
	counter_comb_bita[14].datab = updown_dir;
	counter_comb_bita[15].datab = updown_dir;
	counter_comb_bita[16].datab = updown_dir;
	counter_comb_bita[17].datab = updown_dir;
	counter_comb_bita[18].datab = updown_dir;
	counter_comb_bita[19].datab = updown_dir;
	counter_comb_bita[20].datab = updown_dir;
	counter_comb_bita[21].datab = updown_dir;
	counter_comb_bita[22].datab = updown_dir;
	counter_comb_bita[23].datab = updown_dir;
	counter_comb_bita[24].datab = updown_dir;
	counter_comb_bita[25].datab = updown_dir;
	counter_comb_bita[26].datab = updown_dir;
	counter_comb_bita[27].datab = updown_dir;
	counter_comb_bita[28].datab = updown_dir;
	counter_comb_bita[29].datab = updown_dir;
	counter_comb_bita[30].datab = updown_dir;
	counter_comb_bita[31].datab = updown_dir;
	counter_comb_bita[0].datad = B"1";
	counter_comb_bita[1].datad = B"1";
	counter_comb_bita[2].datad = B"1";
	counter_comb_bita[3].datad = B"1";
	counter_comb_bita[4].datad = B"1";
	counter_comb_bita[5].datad = B"1";
	counter_comb_bita[6].datad = B"1";
	counter_comb_bita[7].datad = B"1";
	counter_comb_bita[8].datad = B"1";
	counter_comb_bita[9].datad = B"1";
	counter_comb_bita[10].datad = B"1";
	counter_comb_bita[11].datad = B"1";
	counter_comb_bita[12].datad = B"1";
	counter_comb_bita[13].datad = B"1";
	counter_comb_bita[14].datad = B"1";
	counter_comb_bita[15].datad = B"1";
	counter_comb_bita[16].datad = B"1";
	counter_comb_bita[17].datad = B"1";
	counter_comb_bita[18].datad = B"1";
	counter_comb_bita[19].datad = B"1";
	counter_comb_bita[20].datad = B"1";
	counter_comb_bita[21].datad = B"1";
	counter_comb_bita[22].datad = B"1";
	counter_comb_bita[23].datad = B"1";
	counter_comb_bita[24].datad = B"1";
	counter_comb_bita[25].datad = B"1";
	counter_comb_bita[26].datad = B"1";
	counter_comb_bita[27].datad = B"1";
	counter_comb_bita[28].datad = B"1";
	counter_comb_bita[29].datad = B"1";
	counter_comb_bita[30].datad = B"1";
	counter_comb_bita[31].datad = B"1";
	counter_reg_bit1a[].aclr = aclr_actual;
	counter_reg_bit1a[].clk = clock;
	counter_reg_bit1a[0].datain = counter_comb_bita[0].combout;
	counter_reg_bit1a[1].datain = counter_comb_bita[1].combout;
	counter_reg_bit1a[2].datain = counter_comb_bita[2].combout;
	counter_reg_bit1a[3].datain = counter_comb_bita[3].combout;
	counter_reg_bit1a[4].datain = counter_comb_bita[4].combout;
	counter_reg_bit1a[5].datain = counter_comb_bita[5].combout;
	counter_reg_bit1a[6].datain = counter_comb_bita[6].combout;
	counter_reg_bit1a[7].datain = counter_comb_bita[7].combout;
	counter_reg_bit1a[8].datain = counter_comb_bita[8].combout;
	counter_reg_bit1a[9].datain = counter_comb_bita[9].combout;
	counter_reg_bit1a[10].datain = counter_comb_bita[10].combout;
	counter_reg_bit1a[11].datain = counter_comb_bita[11].combout;
	counter_reg_bit1a[12].datain = counter_comb_bita[12].combout;
	counter_reg_bit1a[13].datain = counter_comb_bita[13].combout;
	counter_reg_bit1a[14].datain = counter_comb_bita[14].combout;
	counter_reg_bit1a[15].datain = counter_comb_bita[15].combout;
	counter_reg_bit1a[16].datain = counter_comb_bita[16].combout;
	counter_reg_bit1a[17].datain = counter_comb_bita[17].combout;
	counter_reg_bit1a[18].datain = counter_comb_bita[18].combout;
	counter_reg_bit1a[19].datain = counter_comb_bita[19].combout;
	counter_reg_bit1a[20].datain = counter_comb_bita[20].combout;
	counter_reg_bit1a[21].datain = counter_comb_bita[21].combout;
	counter_reg_bit1a[22].datain = counter_comb_bita[22].combout;
	counter_reg_bit1a[23].datain = counter_comb_bita[23].combout;
	counter_reg_bit1a[24].datain = counter_comb_bita[24].combout;
	counter_reg_bit1a[25].datain = counter_comb_bita[25].combout;
	counter_reg_bit1a[26].datain = counter_comb_bita[26].combout;
	counter_reg_bit1a[27].datain = counter_comb_bita[27].combout;
	counter_reg_bit1a[28].datain = counter_comb_bita[28].combout;
	counter_reg_bit1a[29].datain = counter_comb_bita[29].combout;
	counter_reg_bit1a[30].datain = counter_comb_bita[30].combout;
	counter_reg_bit1a[31].datain = counter_comb_bita[31].combout;
	counter_reg_bit1a[].ena = (clk_en & (((sclr # sset) # sload) # cnt_en));
	counter_reg_bit1a[].sdata = ((! sclr) & ((sset & s_val[]) # ((! sset) & data[])));
	counter_reg_bit1a[].sload = ((sclr # sset) # sload);
	a_val[] = ( ones[31..0]);
	aclr_actual = aclr;
	cnt_en = VCC;
	data[] = GND;
	external_cin = B"1";
	ones[] = B"11111111111111111111111111111111";
	q[] = safe_q[];
	s_val[] = ( ones[31..0]);
	safe_q[] = counter_reg_bit1a[].regout;
	sclr = GND;
	sload = GND;
	sset = GND;
	time_to_clear = B"0";
	updown_dir = B"1";
END;
--VALID FILE
