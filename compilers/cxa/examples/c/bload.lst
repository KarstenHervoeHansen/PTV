XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
C:\cxa\examples\c\bload.src
ADDR   CODE            LINE SOURCELINE
                          2 ; options: -IC:\cxa\include -Ml -Cxag3 -So -A1 -u -O1 -g
                          4 $NOZPAGE
                          5         NAME    BLOAD
000000                   44 BLOAD_PR        SEGMENT HCODE
000000                   45         RSEG    BLOAD_PR
                         46         ALIGN   1
                         48         PUBLIC  _update
000000                   49 _update:
000000 080337            54         CLR     0337H
000003 9918rrrr          56         MOV.W   R1,#SEG( _3 )
000007 9908rrrr          57         MOV.W   R0,#SOF( _3 )
00000B 0F03              58         PUSH.W  R0, R1
00000D 9918rrrr          60         MOV.W   R1,#SEG( _tbuff )
000011 9908rrrr          61         MOV.W   R0,#SOF( _tbuff )
                         62         CALL    _sprintf
000015 C4rrrrrr         +62 ;       FCALL   _sprintf
000019 A974              63         ADDS.W  R7,#04H
00001B 9918rrrr          66         MOV.W   R1,#SEG( _tbuff )
00001F 9908rrrr          67         MOV.W   R0,#SOF( _tbuff )
000023 C50018            68         CALL    _put_n
000026 081337            70         SETB    0337H
000029 D680              72         RET
00002B 00                74         ALIGN   1
                         76         PUBLIC  _erase_flash
00002C                   77 _erase_flash:
00002C D680              82         RET
                         84         ALIGN   1
                         86         PUBLIC  _receive_code
00002E                   87 _receive_code:
00002E 910800            92         MOV.B   R0L,#00H
000031 D680              94         RET
000033 00                96         ALIGN   1
                         98         PUBLIC  _fetch
000034                   99 _fetch:
000034 910831           106         MOV.B   R0L,#031H
000037 C50007           107         CALL    _put
00003A                  109 _4:
00003A 082300           110         MOV     C,0300H
00003D F0FE             111         BCC     _4
00003F 860460           113         MOV.B   R0L,0460H
000042 080300           116         CLR     0300H
000045 D680             118         RET
000047 00               121         ALIGN   1
                        123         PUBLIC  _put
000048                  124 _put:
000048 860C60           131         MOV.B   0460H,R0L
00004C                  133 _5:
00004C 082301           134         MOV     C,0301H
00004F F0FE             135         BCC     _5
000051 080301           137         CLR     0301H
000054 D680             139         RET
                        142         ALIGN   1
                        144         PUBLIC  _put_n
000056                  145 _put_n:
000056 0F30             149         PUSH.W  R4, R5
000058 8951             151         MOV.W   R5,R1
00005A 8940             152         MOV.W   R4,R0
00005C FE17             156         BR      _7
00005C FE17             156         BR      _7
00005E                  157 _6:
00005E 964842rr         159         MOV.B   ES,#SEG( _ud4buf )
000062 9908rrrr         160         MOV.W   R0,#SOF( _ud4buf )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
000066 8200             161         MOV.B   R0L,[R0]
000068 910710           162         XOR.B   R0L,#010H
00006B 964842rr         163         MOV.B   ES,#SEG( _ud4buf )
00006F 9918rrrr         164         MOV.W   R1,#SOF( _ud4buf )
000073 8209             165         MOV.B   [R1],R0L
000075 96484200         166         MOV.B   ES,#SEG( _ud4 )
000079 99188001         167         MOV.W   R1,#SOF( _ud4 )
00007D 8209             168         MOV.B   [R1],R0L
00007F 86AC42           170         MOV.B   ES,R5L
000082 8204             171         MOV.B   R0L,[R4]
000084 C5FFE1           172         CALL    _put
000087 99400001         173         ADD.W   R4,#01H
00008C                  175 _7:
00008C 86AC42           176         MOV.B   ES,R5L
00008F 8204             177         MOV.B   R0L,[R4]
000091 F2E6             178         BNE     _6
000093 2F30             180         POP.W   R4, R5
000095 D680             182         RET
000000                  188 BLOAD_CLR_FA    SEGMENT HDATA INSEGMENT CLEAR
000000                  189         RSEG    BLOAD_CLR_FA
000000                  190 _tbuff: DS      80
   |  RESERVED             
00004F
                        193         EXTRN   HCODE(_sprintf)
                        196         PUBLIC  _ud4buf
000050 RESERVED         197 _ud4buf:        DS      1
000050
000000                  198 BLOAD_INI_FA    SEGMENT HDATA INSEGMENT INIT
000000                  199         RSEG    BLOAD_INI_FA
000000 584120436F6D70   200 _3:     DB      058H,041H,020H,043H,06FH,06DH,070H,069H,06CH,065H,064H,020H
       696C656420           
00000C 424C4F41444552   201         DB      042H,04CH,04FH,041H,044H,045H,052H,020H,048H,065H,072H,065H
       2048657265           
000018 210A00           202         DB      021H,00AH,000H
008001                  205         HSEG AT 08001H
                        206         PUBLIC  _ud4
008001 RESERVED         207 _ud4:   DS      1
008001
                        208         EXTRN   DATA(__lc_ub_xvwbuffer)
                        209         EXTRN   DATA(__lc_ue_xvwbuffer)
                        210         CALLS   'update', 'sprintf'
                        211         CALLS   'update', 'put_n'
                        212         CALLS   'fetch', 'put'
                        213         CALLS   'put_n', 'put'
