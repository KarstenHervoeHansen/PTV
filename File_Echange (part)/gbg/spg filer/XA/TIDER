;$warnings_min
;
;THIS FILE WILL NOT MAKE IT THROUGH THE SIMULATOR!
;
; It is to show the opcodes only!
;
    org 0
    dw  $8F00,Start

my_bit bit $88

    org $100
Start:            ;WILL NOT SIMULATE!
; db $00
  nop
  add.b r0h,r0h
  add.b r1l,[r2]
  add.b r1h,[r3+]
  add.b r2l,[r4+$44]
  add.b r2h,[r5+$5555]
  add.b r3l,$066
  push.b R3l,r2h,r2l,r1l,r0h,r0l

    clr  my_bit
    setb my_bit
    mov  C,my_bit
    mov  my_bit,C
    anl  C,my_bit
    anl  C,/my_bit
    orl  C,my_bit
    orl  C,/my_bit

  add.w r9,r9
  add.w R10,[R0]
  add.w R11,[R0+]
  add.w R12,[R0+$0C]
  add.w R13,[R0+$0DDD]
  add.w R14,$EE
  push.w R7,R6,R5,R4,R3,R2,R1,R0

  db  $10
  addc.b R0h,R0h
  addc.b R1l,[R2]
  addc.b R1h,[R3+]
  addc.b R2l,[R4+$44]
  addc.b R2h,[R5+$5555]
  addc.b R3l,$66
  pushu.b R3l,r2h,r2l,r1l,r0h,r0l
  db  $18
  addc.w R9,r9
  addc.w r10,[r0]
  addc.w r11,[r0+]
  addc.w r12,[r0+$0C]
  addc.w r13,[r0+$0DDD]
  addc.w r14,$ee
  pushu.w r7,r6,r5,r4,r3,r2,r1,r0
$eject

  db $20
  sub.b r0h,r0h
  sub.b r1l,[r2]
  sub.b r1h,[r3+]
  sub.b r2l,[r4+$44]
  sub.b r2h,[r5+$5555]
  sub.b r3l,$066
  pop.b R3l,r2h,r2l,r1l,r0h,r0l
  db  $28
  sub.w r9,r9
  sub.w R10,[R0]
  sub.w R11,[R0+]
  sub.w R12,[R0+$0C]
  sub.w R13,[R0+$0DDD]
  sub.w R14,$EE
  pop.w R7,R6,R5,R4,R3,R2,R1,R0

  db $30
  subb.b r0h,r0h
  subb.b r1l,[r2]
  subb.b r1h,[r3+]
  subb.b r2l,[r4+$44]
  subb.b r2h,[r5+$5555]
  subb.b r3l,$066
  popu.b R3l,r2h,r2l,r1l,r0h,r0l
  db  $38
  subb.w r9,r9
  subb.w R10,[R0]
  subb.w R11,[R0+]
  subb.w R12,[R0+$0C]
  subb.w R13,[R0+$0DDD]
  subb.w R14,$EE
  popu.w R7,R6,R5,R4,R3,R2,R1,R0

$eject
; $40
  lea  R0,R0+0
  cmp.b r0h,r0h
  cmp.b r1l,[r2]
  cmp.b r1h,[r3+]
  cmp.b r2l,[r4+$44]
  cmp.b r2h,[r5+$5555]
  cmp.b r3l,$066
  push.b R7l,r6h,r6l,r5l,r4h,r4l
  lea   r0,R0+$88
  cmp.w r9,r9
  cmp.w R10,[R0]
  cmp.w R11,[R0+]
  cmp.w R12,[R0+$0C]
  cmp.w R13,[R0+$0DDD]
  cmp.w R14,$EE
  push.w R15,R14,R13,R12,R11,R10,R9,R8

; $50
  xch.b R0l,[R0]
  and.b r0h,r0h
  and.b r1l,[r2]
  and.b r1h,[r3+]
  and.b r2l,[r4+$44]
  and.b r2h,[r5+$5555]
  and.b r3l,$066
  pushu.b R7l,r6h,r6l,r5l,r4h,r4l
  xch.w  r8,[R0]
  and.w r9,r9
  and.w R10,[R0]
  and.w R11,[R0+]
  and.w R12,[R0+$0C]
  and.w R13,[R0+$0DDD]
  and.w R14,$EE
  pushu.w R15,R14,R13,R12,R11,R10,R9,R8

$eject

; $60
  xch.b R0l,R0l
  or.b r0h,r0h
  or.b r1l,[r2]
  or.b r1h,[r3+]
  or.b r2l,[r4+$44]
  or.b r2h,[r5+$5555]
  or.b r3l,$066
  pop.b R7l,r6h,r6l,r5l,r4h,r4l
  xch.w  r8,R8
  or.w r9,r9
  or.w R10,[R0]
  or.w R11,[R0+]
  or.w R12,[R0+$0C]
  or.w R13,[R0+$0DDD]
  or.w R14,$EE
  pop.w R15,R14,R13,R12,R11,R10,R9,R8

 db $70
  xor.b r0h,r0h
  xor.b r1l,[r2]
  xor.b r1h,[r3+]
  xor.b r2l,[r4+$44]
  xor.b r2h,[r5+$5555]
  xor.b r3l,$066
  popu.b R7l,r6h,r6l,r5l,r4h,r4l
 db $78
  xor.w r9,r9
  xor.w R10,[R0]
  xor.w R11,[R0+]
  xor.w R12,[R0+$0C]
  xor.w R13,[R0+$0DDD]
  xor.w R14,$EE
  popu.w R15,R14,R13,R12,R11,R10,R9,R8

$eject
; db $80
  movc.b r0l,[r0+] 	4
  mov.b r0h,r0h		3
  mov.b r1l,[r2]	3
  mov.b r1h,[r3+]	4
  mov.b r2l,[r4+$44]	5
  mov.b r2h,[r5+$5555]	5
  mov.b r3l,$066	3
    popu.b  $77
    pop.b   $77
    pushu.b $77
    push.b  $77
    djnz.b  r3h,$
  movc.w R8,[R0+]	4
  mov.w r9,r9		3
  mov.w R10,[R0]	3
  mov.w R11,[R0+]	4
  mov.w R12,[R0+$0C]	5
  mov.w R13,[R0+$0DDD]	5
  mov.w R14,$EE		3
    popu.w  $fe
    pop.w   $fe
    pushu.w $fe
    push.w  $fe
    djnz.w  r15,dummy


; db $90
dummy:
    mov.b [r0+],[r0+]
    da    r0l
    cpl.b r0l
    neg.b r0l
    mov   R0,USP
    movc  A,[A+PC]
    movc  A,[A+DPTR]
  add.b r0h,#$11
  add.b [r2],#$22
  add.b [r3+],#$33
  add.b [r4+$44],#$44
  add.b [r5+$5555],#$55
  add.b $066,#$66
  mov.b $77,$77		3
    jb  my_bit,$
    jnb my_bit,$
    jbc my_bit,$
    mov.w [r0+],[r0+]
    mov   USP,R8
    sext  r8
    cpl.w r8
    neg.w r8
  add.w r9,#$9999
  add.w [R0],#$AAAA
  add.w [R0+],#$BBBB
  add.w [R0+$0C],#$CCCC
  add.w [R0+$0DDD],#$0DDD
  add.w $EE,#$EEEE
  mov.w $fe,$fe		3
$eject

; db $A0
  mov.b [r0],00
    xch.b r0l,0
    mov.b 00,[R0]
  adds.b r0h,#$1
  adds.b [r2],#$2
  adds.b [r3+],#$3
  adds.b [r4+$44],#$4
  adds.b [r5+$5555],#$5
  adds.b $066,#$6
  movx.b r3h,[r7]
  mov.w [r0],$88
    mov.w $88,[R0]
    xch.w R8,$88
  adds.w r9,#-7
  adds.w [R0],#-6
  adds.w [R0+],#-5
  adds.w [R0+$0C],#-4
  adds.w [R0+$0DDD],#-3
  adds.w $EE,#-2
  movx.w r15,[r0]

; db $B0
  rr.b   r0l,#00
  movs.b r0h,#$1
  movs.b [r2],#$2
  movs.b [r3+],#$3
  movs.b [r4+$44],#$4
  movs.b [r5+$5555],#$5
  movs.b $066,#$6
  rrc.b  r4h,#$7
  rr.w   r8,#$8
  movs.w r9,#-7
  movs.w [R0],#-6
  movs.w [R0+],#-5
  movs.w [R0+$0C],#-4
  movs.w [R0+$0DDD],#-3
  movs.w $EE,#-2
  rrc.w r15,#$f

$eject
; db $C0
  lsr.b  r0l,r0l
  asl.b  r0h,r0h
  asr.b  r1l,r1l
  norm.b r1h,r1h
  fcall  $443322
  call   $5566
  call   [R6]
  db     $C7
  lsr.w  R8,R0l
  asl.w  R9,R0l
  asr.w  R10,R0l
  norm.w R11,R0l
  lsr.d  R1,R0l
  asl.d  R3,R0l
  asr.d  R5,R0l
  norm.d R7,R0l

; db $D0

  lsr.b  r0l,#0
  asl.b  r0h,#1
  asr.b  r1l,#2
  rl.b   r1h,#3
  fjmp   $443322
  jmp    $5566
  reset
    trap #0
    trap #1
    trap #2
    trap #3
    trap #4
    trap #5
    trap #6
    trap #7
    trap #8
    trap #9
    trap #10
    trap #11
    trap #12
    trap #13
    trap #14
    trap #15
    jmp  [a+dptr]
    jmp  [[R0+]]
    jmp  [R6]
    ret
    reti
  rlc.b  R4h,#7
  lsr.w  R8,#8
  asl.w  R9,#9
  asr.w  R10,#10
  rl.w   R11,#11
  lsr.d  R1,#12
  asl.d  R3,#13
  asr.d  R5,#14
  rlc.w  R7,#15
$eject

; db $E0
dummy1:
  mulu.b R0l,R0l
  divu.b  R0h,R0h
  cjne.b R1l,$22,dummy1
    djnz.b $222,dummy1
  cjne.b R1h,#$33,dummy1
    cjne.b [R3],#33,dummy1
  mulu.w R4,R4
  divu.w R5,R2h
  mul.w  R6,R6
  div.w  R7,R3h
  mulu.b R4l,#$88
    divu.b  R4l,#$88
    divu.w R8,#88
    div.w  R8,#88
  mulu.w R9,#$99
    mul.w  R9,#$99
    divu.d R9,#$99
    div.d  R9,#$99
  cjne.w R10,$1AA,dummy1
    djnz.w $1AA,dummy1
  cjne.w R11,#$BBBB,dummy1
    cjne.w [R0],#$BBBB,dummy1
  jz  dummy1
  divu.d R13,R13
  jnz dummy1
  div.d  R15,R15

; db $F0
dummy2:
  bcc dummy2
  bcs dummy2
  bne dummy2
  beq dummy2
  bnv dummy2
  bov dummy2
  bpl dummy2
  bmi dummy2
  bg  dummy2
  bl  dummy2
  bge dummy2
  blt dummy2
  bgt dummy2
  ble dummy2
  br  dummy2
  bkpt
