<HTML>
<HEAD>
   <TITLE>SMPTE EBU timecode by Phil Rees</TITLE>

   <META NAME="description" CONTENT="Technical description of SMPTE timecode
   - a signal which encodes time information for sychronisation purposes,
   usually on a recording tape.">

   <META NAME="author" CONTENT="Philip Rees">

   <META NAME="keywords" CONTENT="SMPTE,stripe,sync,synch,synchronisation,
   synchroniser,synchronization,synchronizer,tape recorder,TimeCode,Time Code,
   time code,time-code,hours,minutes,seconds,frames,track,edit,editing,audio,
   video,videotape,drop-frame,drop frame,fps,EBU,VTR,chase,lock,MTC,FSK
   SMPTE LTC,SMPTE VITC,color frame,colour frame,color-frame,colour-frame,
   PAL,NTSC,field sequence,binary coded decimal,BCD,MIDI,field-sequence,
   sequencer,cubase,cakewalk,logic,music,user bits,binary group,bi-phase mark,
   sinc,sink,simpty,SMPTE time code,vitsy,smpte,computer,pc,mac,atari,SMPTE/EBU
   Philip Rees,Modern Music Technology,Phil Rees Music Tech">

</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<DIV ALIGN=right><P><FONT SIZE=1>Phil Rees on SMPTE/EBU timecode</FONT></P></DIV>

<CENTER><P><A NAME="top"></A><IMG SRC="../pix/bookend.gif" ALT=""
HEIGHT=36 WIDTH=92>

<A HREF="../products/tapesync.htm"><IMG SRC="../pix/bann-ts1.gif" ALT="[LINK -
our simpty midi tape synch box]" BORDER=0 HEIGHT=36 WIDTH=310></A>

<IMG SRC="../pix/bookend.gif" ALT="" HEIGHT=36 WIDTH=92></P></CENTER>

<P><A HREF="../index.htm"><IMG SRC="../pix/tochome.gif" HSPACE=10 HEIGHT=14 WIDTH=20 ALIGN=BOTTOM></A><A HREF="../index.htm">
<FONT FACE="Arial,Helvetica,Geneva,Verdana">to Phil Rees home
page</FONT> </A></P>

<H1><FONT FACE="Arial,Helvetica,Geneva,Verdana">Synchronisation
and SMPTE timecode</FONT></H1>

<P><A HREF="../products/tapesync.htm"><IMG SRC="pix/ts1wee.jpg" HSPACE=10
VSPACE=5 BORDER=0 ALT="[Photo: Philip Rees SMPTE MTC unit]" HEIGHT=97 WIDTH=86
ALIGN=LEFT></A> <FONT FACE="Arial,Helvetica,Geneva,Verdana">This document is a
description (mainly technical, but not requiring extensive prior knowledge) of
the <A HREF="#smpte">SMPTE timecode</A> synchronization system, especially the
<A HREF="#mod">bi-phase mark</A> &quot;LTC&quot; sync tone which can be
recorded onto the audio track of a video tape or onto an audio tape. Other <A
HREF="#vitc">time code variants, such as VITC</A> are also mentioned. Some
supporting information on the related subjects of <A HREF="#pal">colour
television standards</A> and <A HREF="#colfrm">field sequences</A> is
included. There is also a concise description of the <A HREF="#bcd">binary
coded decimal (BCD)</A> representation as used in the SMPTE (or EBU) time-code
<A HREF="#word">data word</A>.</FONT></P>

<P><A HREF="../index.htm"><IMG SRC="../pix/minifist.gif" HSPACE=10 VSPACE=5
BORDER=0 ALT="" HEIGHT=66 WIDTH=66 ALIGN=RIGHT></A> <FONT
FACE="Arial,Helvetica,Geneva,Verdana">My original reason for exploring this
subject technically was to develop a low cost <A
HREF="../products/tapesync.htm">MIDI tape sync unit</A>, which was a frequent
customer request, and a logical addition to <A HREF="../products/index.htm">our
range of electronic music gadgets</A>. Our tape sync unit, which supports
SMPTE (including <A HREF="#drop">Drop Frame</A> format) and <A
HREF="#mtc">MIDI Time Code</A>, is called the <B><I>TS1</I></B> and is now a
successful and highly-respected product.</FONT></P>

<H3><A NAME="sync"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">Synchronisation
systems</FONT></H3>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">When you require
pieces of audio, video, or music technology equipment (eg. tape recorder and
sequencer) to work together, you may need some means to make sure that they play
in time with each other. This is called 'synchronisation' or 'synchronization',
which gets shortened to 'sync' or even 'synch'. </FONT></P>

<!-- copyright 1997 Philip Rees
     Not to be reproduced without permission of the author. -->
 
<P><A NAME="stripe"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">A
magnetic tape-recorder track is the region of the tape that is scanned
by one recording head element. It can, for example, carry an audio signal,
that is an electronic analogue of a stream of sound. In order to use an
audio track to record sync information, the information must be encoded
into an audio-compatible signal, called a sync tone. An audio tape track
on which a sync tone has been recorded is called a 'stripe'. It is desirable
that the synchronised devices can join in wherever you start up the sync
tone, even if it is not at the beginning of the stripe; this is called
'chasing'. The SMPTE/EBU timecode standard defines the predominant internationally
accepted standard for a sync tone and it allows devices to 'chase' or locate
to a precise position. </FONT></P>
 
<P><A HREF="../products/tapesync.htm#fskplus"><IMG SRC="../products/pix/fskplus.gif" ALT="[LINK: FSKplus]" HSPACE=5 BORDER=0 HEIGHT=32 WIDTH=68 ALIGN=RIGHT></A>
<FONT FACE="Arial,Helvetica,Geneva,Verdana">In music technology
applications, with equipment which is not timecode compatible, you may
be able to use a tape sync unit by way of a tempo-relative stripe system.
Examples of such systems are traditional <I>FSK</I> (Frequency Shift Key)
and the <I>Philip Rees</I> proprietary <I><A HREF="../products/tapesync.htm#fskplus">FSKplus</A></I>
format.</FONT></P>

<H3><A NAME="smpte"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">The
SMPTE/EBU timecode standard</FONT></H3>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Until the advent
of video recording, there was mechanical sound to film synchronisation.
This mainly relied on sprockets (a row of neat holes) in the film and in
special sprocketed recording tape. Relative timing adjustments could be
made by slipping sprocket holes. The same sprocket holes were used to maintain
synchronisation. Video tape hasn't got any sprocket holes, so when video
arrived an electronic equivalent was needed to take the place of mechanical
methods of synchronisation.</FONT></P>

<P><A HREF="http://www.smpte.org"><IMG SRC="pix/smptebaj.gif" ALT="[SMPTE badge: all rights acknowledged]"
BORDER=0 HSPACE=2 VSPACE=2 HEIGHT=80 WIDTH=80 ALIGN=RIGHT></A><FONT FACE="
Arial,Helvetica,Geneva,Verdana">In 1967, The US <A HREF="http://www.smpte.org">Society of Motion Picture
and Television Engineers</A> introduced that which we call SMPTE
(&quot;simpty&quot;) timecode. The audio sync tone version of SMPTE is called
linear or longitudinal timecode or LTC. By the way, there are also versions of
timecode which can be <A HREF="#vitc">inserted into a video signal</A> or sent
<A HREF="#mtc">via a MIDI connection</A>.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The original
uses of SMPTE timecode include accurate video editing and synchronising
film sound-tracks. The timing data in SMPTE takes the form of an eight
digit twenty-four hour clock. The count consists of 0 to 59 seconds, 0
to 59 minutes and 0 to 23 hours. The second is subdivided into a number
of frames, which may be varied to match the various frame-rates used around
the world. The frame-rate is the number of times a second that the picture
is updated so as to give the illusion of continuous movement.</FONT></P>

<H3><A NAME="fps"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">Frame-rate
formats</FONT></H3>

<P><IMG SRC="pix/film.gif" ALT="" HSPACE=5 VSPACE=5 HEIGHT=80 WIDTH=50
ALIGN=LEFT><FONT FACE="Arial,Helvetica,Geneva,Verdana">There are four
standard frame-rate formats: The SMPTE frame-rate of thirty frames per second
(fps) is often used for audio in America. It is used with the Sony 1630 format
for CD mastering. It has its origins in the obsolete American mono television
standard. The <A HREF="#drop">American colour television standard</A> has a
slightly different frame-rate of about <NOBR>29.97 fps.</NOBR> This is
accommodated by the SMPTE format known as thirty <A HREF="#drop">Drop
Frame</A> and is required for video work in America, Japan and generally the
<NOBR>60 Hz</NOBR> (mains frequency), NTSC (television standard) world. The
number of frames in each second is not an integer, so an approximation is
used; it is based on <NOBR>30 fps,</NOBR> but two frames counts are dropped
(skipped) at the start of every minute, except for every tenth minute. The <A
HREF="http://www.ebu.ch">EBU (European Broadcasting Union)</A> standard of
<NOBR>25 fps</NOBR> is used throughout Europe, Australia and wherever the
mains frequency is <NOBR>50 Hz</NOBR> and the colour TV system is <A
HREF="#pal">PAL or SECAM</A>. The remaining rate of <NOBR>24 fps</NOBR> is
required for film work, it is rarely used for audio. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">In audio post-production,
SMPTE has been adopted for machine synchronisation and as a reference of
tape position. Essentially, the choice of <A HREF="#rates">frame rate for
audio work</A> is usually arbitrary.</FONT></P>

<H3><A NAME="mod"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">The
modulation scheme of SMPTE LTC</FONT></H3>

<P><IMG SRC="pix/biphase.gif" ALT="[Diagram: bi-phase mark modulation scheme,described in text below]" HSPACE=5 HEIGHT=175 WIDTH=196 ALIGN=RIGHT>
<FONT FACE="Arial,Helvetica,Geneva,Verdana">A bit is a binary
digit (which can take only the value 0 or 1). The value of a bit is often
represented by the 'off' and 'on' states of an electronic switch. When
the sequence of binary digits must pass through a channel designed for
analogue audio signals the 'on' and 'off' states ('phase') cannot be reliably
distinguished. However, audio frequencies are reproduced faithfully; to
exploit this property, SMPTE Longitudinal TimeCode encodes its data into
the rate (frequency) of electronic state transitions. The binary value
0 is represented by a single transition at the start (or 'boundary') of
the bit-period (or bit 'cell'). The binary value 1 is represented by a
two transitions - one at the start and the second in the middle of the
bit period. This scheme is called 'bi-phase mark' or &quot;Manchester encoding&quot;and
closely resembles frequency modulation ('FM'); that is, a stream of binary
ones is represented by a burst of audio at double the frequency of a burst
of audio which is used to represent a stream of a binary zeros. This straightforward
scheme of modulation is amazingly robust and compatible with a range of
real world audio channels, including tape recorder tracks. To ensure good
performance in audio channels, the <A HREF="#wave">rise-time of the waveform</A>
is also specified.</FONT></P>

<H3><A NAME="word"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">The
data organisation of the SMPTE LTC frame</FONT></H3>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The datastream
for each video frame of Longitudinal TimeCode consists of eighty bit-periods
(bit cells). At the original American frame-rate of <NOBR>30 fps</NOBR>, the bit rate
would work out to 30 x 80, that is 2400 bits per second. The frequency
for a stream of zeros would be <NOBR>1.2 kHz</NOBR> and for a stream of ones it would
be <NOBR>2.4 kHz.</NOBR> The corresponding bit rate for the European <NOBR>25 fps</NOBR> frame-rate
is 2000 bits per second. in this case, the frequency for a stream of zeros
would be <NOBR>1.0 kHz</NOBR> and for a stream of ones it would be <NOBR>2.0 kHz.</NOBR> All these
frequencies are safely within the audio range, so the <A HREF="#wave">SMPTE
LTC sync tone waveform</A> can be recorded easily on any half decent audio
track. </FONT></P>

<P><IMG SRC="pix/smptefmt.gif" ALT="The eighty SMPTE LTC frame word Bits are
allocated as follows:Bits 0..3 = FRAME UNITS / Bits 4..7 = USER BITS 1/ Bits
8,9 = FRAME TENS / Bit 10 = DFbit / Bit 11 = col.frm /Bits 12..15 = USER BITS
2 / Bits 16..19 = SECS UNITS / Bits 20..23 = USER BITS 3 / Bits 24..26 = SECS
TENS / Bit 27 BI-PHASE MARK PHASE CORRECTION / Bits 28..31 = USER BITS 4 /
Bits 32..35 = MINS UNITS / Bits 36..39 = USER BITS 5 / Bits 40..42 = SECS TENS
/ Bit 43 BINARY GROUP FLAG BIT / Bits 44..47 = USER BITS 6 / Bits 48..52 =
HOURS UNITS / Bits 52..55 = USER BITS 7 / Bits 56,57 = HOURS TENS / Bit 58
RESERVED / Bit 59 BINARY GROUP FLAG BIT / Bits 60..63 = USER BITS 6 / Bits
64..79 = SYNC WORD" HEIGHT=162 WIDTH=994></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">In each frame,
twenty six of the eighty bits carry the SMPTE time or 'address', in <A HREF="#bcd">binary
coded decimal</A>. In the diagram above, these Bits are shown as</FONT><TT>
FRAME UNITS, FRAME TENS, SECS UNITS, SECS TENS, MINS UNITS, MINS TENS,
HOURS UNITS </TT><FONT FACE="Arial,Helvetica,Geneva,Verdana">and</FONT>
<TT>HOURS TENS.</TT><FONT FACE="Arial,Helvetica,Geneva,Verdana"> The BCD
digits are loaded 'least significant bit first'.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana"><A NAME="user"></A>Thirty two bits
are assigned as eight groups of four</FONT><TT> USER BITS</TT><FONT
FACE="Arial,Helvetica,Geneva,Verdana">, also sometimes called the &quot;Binary
Groups&quot;.  This capacity is generally used to carry extra info such as
reel number and date.  The User Bits may be allocated howsoever one
wishes as long as both <A HREF="#bgfb">Binary Group Flag Bits</A> are cleared.
The User Bits do not usually vary in the course of a timecode stream.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The last sixteen
Bits make up the</FONT><TT> SYNC WORD</TT><FONT FACE="
Arial,Helvetica,Geneva,Verdana">.
A timecode reader uses these Bits to find the frame boundary, the tape
direction, and the bit-rate of the sync tone. The values of these Bits are
fixed as </FONT><NOBR><TT>0011 1111 1111 1101</TT></NOBR></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The <A HREF="#mod">Bi-Phase
Mark</A> Phase Correction Bit </FONT><TT>bPMPC</TT><FONT
FACE="Arial,Helvetica,Geneva,Verdana"> is Bit 27. This bit shall may be set or
cleared in order that every 80-bit word contains an even number of zeroes. This
means that the phase (or logical sense) of the pulse train every Sync Word
will be tha same.  I am not aware of any timecode readers which require that
this bit be so used, and better compatibilty may even be achieved by setting
this bit to zero.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Bit 58 is not required for the
<A HREF="#bcd">BCD</A> count for HOURS TENS (which has a maximum value of two)
and has not been given any other special purpose so remains unassigned. This
Bit has been </FONT><TT>RESERVED</TT> <FONT
FACE="Arial,Helvetica,Geneva,Verdana">for future assignment.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana"> <A NAME="bgfb"></A>Bits 43 and
59 are assigned as the Binary Group Flag Bits </FONT><TT>bGFb</TT><FONT
FACE="Arial,Helvetica,Geneva,Verdana">. These Bits are used to indicate when a
standard character set is used to format the <A HREF="#user">User Bits</A>
data. The Binary Group Flag Bits should be used only as shoen in the truth
table below. The Unassigned entries in the table should not be used, as they
may be allocated specific meanings in the future.</FONT>

<pre>                                Bit 43  Bit 59
No User Bits format specified      0       0
Eight-bit character set            1       0
Unassigned (Reserved)              0       1
Unassigned (Reserved)              1       1 </pre></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">
If you were designing a timecode reader to be able to read stripes from other
writers, you would be best advised to make the reader ignore (mask out)
Bits 27, 43, 58 and 59. If you were designing a writer to produce portable
SMPTE timecode (for good compatibility) you should allocate zero values to
these Bits; this is because some readers may interpret these Bits as part of
the SMPTE frame 'address'; the result would appear to be invalid or illegal
BCD values.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The Drop Frame
flag</FONT><TT> DF bit </TT><FONT FACE="Arial,Helvetica,Geneva,Verdana">is
Bit 10; if the <A HREF="#drop">Drop Frame format</A> is in use, this bit
is set. The Colour Frame Flag </FONT><TT>col.frm</TT> <FONT FACE="Arial,Helvetica,Geneva,Verdana">is
Bit 11; if the timecode intentionally synchronized to a <A HREF="#colfrm">colour TV field
sequence</A>, this bit is set.</FONT></P>


<H3><A NAME="drop"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">NTSC
and <I>Drop Frame</I> format</FONT></H3>

<P><IMG SRC="pix/tv-set.gif" ALT="" HSPACE=6 VSPACE=6 HEIGHT=38 WIDTH=53
ALIGN=LEFT><FONT FACE="Arial,Helvetica,Geneva,Verdana"> Electronic
television was invented in the US by <A HREF="http://www.songs.com/philo/">Philo
T. Farnsworth</A>, and his system had 300 lines per frame.  Because of patent
litigation in the US, this technology was first exploited in Britain. The
original (now obsolete) British electronic television system used <NOBR>25
fps</NOBR> and 405 lines. in 1941, the American monochrome television
standard was specified to be somewhat superior, it had a frame rate of <NOBR>30
fps</NOBR> with 525 lines. The audio signal was combined with the video signal
by modulating a subcarrier wave at a frequency of <NOBR>4.5
MHz.</NOBR></FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">In 1953, the
American NTSC (National Television System Committee) specified a colour
television standard which would be compatible with the existing black-and-white
receivers. <IMG SRC="pix/amp-mod.gif" ALT="[Diagram: amplitude modulation]" HSPACE=10 VSPACE=5 HEIGHT=141 WIDTH=410 ALIGN=RIGHT>The
two extra colour (chrominance) video components are combined with the monochrome
(luminance) video signal by modulating additional subcarrier waves. They
found that, with only minor problems, they could get away with selecting
a frequency for these subcarriers which lay within the bandwidth of the
main luminance component. This meant that a new colour TV channel would
occupy the same bandwidth as an existing monochrome channel. The frequency
for the the two chrominance components was set to be the same (227.5 times
line frequency) but 90 degrees (quarter of a cycle) out of phase. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">It was found however that there
was a troublesome interaction between the line frequency and both subcarrier
frequencies. They could probably have put this right by slightly altering the
audio subcarrier frequency <NOBR>(4.5 MHz).</NOBR> Instead, they slightly
altered all the other frequencies, increasing the frame period by 0.1%. This
results in: a frame rate of <NOBR>(30 &times; 1000 / 1001) fps,</NOBR> that is
about <NOBR>29.97 fps</NOBR>; a <A HREF="#colfrm">field rate</A> of twice the
frame rate, that is about <NOBR>59.94 Hz;</NOBR> a line rate of <NOBR>(525
&times; 30 &times; 1000 / 1001) Hz</NOBR>, that is about <NOBR>15.73 kHz</NOBR>;
the colour subcarrier ends up at <NOBR>(227.5 &times; 525 &times; 30 &times;
1000 / 1001) MHz</NOBR>, that is about <NOBR>3.579545 MHz.</NOBR></FONT>
<FONT SIZE=1> [Please note: &times; is the symbol
for the multiply operator.]</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The dropped frames
compensate for the fact that 29.97 is not an integral (whole) number of
frames per second. This is achieved by regularly bumping forward the value
of the frame count to make the slow-running clock catch up with an actual
clock. This resembles, in an opposite way, how February 29th compensates
for the fact that an astronomical year is not an integral number of days
long. It is not so much <B>frames</B> which are dropped as frame <B>numbers</B>
which are skipped. <I>Drop Frame</I> counting misses out frame numbers
0 and 1 in the first second of every minute. For example, timecode
address 11:41:59:29 is immediately followed by 11:42:00:02. However, skipping
two frame numbers per minute slightly over-compensates, so no frame numbers
are dropped each when the minute number is exactly divisible by ten. For
example, timecode address 11:49:59:29 is immediately followed by 11:50:00:00.
By this technique, a stream of timecode running at about <NOBR>29.97 fps</NOBR> will
continually jump back into sync with an actual clock.</FONT></P>

<P><IMG SRC="pix/dropping.gif" ALT="[Diagram: how dropping helps] Caption:" HSPACE=10 HEIGHT=116 WIDTH=220 ALIGN=CENTER><I><FONT FACE="Arial,Helvetica,Geneva,Verdana"><FONT SIZE=2>Here's
a general idea of why frames are dropped</FONT></FONT></I></P>

<P><A NAME="rates"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">If
you are working with <A HREF="#pal">European video</A>, or are working
on your own with audio, you can avoid the pitfalls of <NOBR>30 fps</NOBR> SMPTE formats
by sticking with the EBU <NOBR>25 fps</NOBR> standard. If you are working with American
video, you will actually be working with approximately <NOBR>29.97 fps</NOBR>. If you
use this American TV frame-rate with so-called 30 non-drop timecode the
clock will actually run slow by about 1.8 seconds per hour. If you use the
American TV frame-rate with the special 30 <I>Drop Frame</I> format the clock
will stay correct to within a theoretical 75ms in 24 hours. If you are working
with just audio, you can use 30 non-drop at a true frame-rate of <NOBR>30 fps</NOBR>; many
people do, especially in America, but this format is not truly compatible with
any non-obsolete video format. Greater timing precision is sometimes cited as
a reason for choosing 30 non-drop for audio work; in practice, however, the
benefit is too small to be significant.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">
When an American TV frame-rate video production must be edited to actual clock
time, Drop Frame timecode must be used. If staying in time with an actual
clock not important, especially on short video productions like commercials,
the bastard 29.97 fps non-Drop Frame timecode is often be used. Some editors
prefer this as accurate calculations readily be made without the aid of a
<A HREF="http://www.ipgnet.com/%7Eadam/dftc.html">java applet</A>, computer
program or special calculator. </FONT></P>

<H3><A NAME="level"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">SMPTE
stripe signal levels</FONT></H3>

<P><IMG SRC="pix/vumeter.gif" ALT="" HSPACE=6 VSPACE=1 HEIGHT=49 WIDTH=55 ALIGN=LEFT>
<FONT FACE="Arial,Helvetica,Geneva,Verdana">You should make
sure that a SMPTE Longitudinal TimeCode <A HREF="#stripe">stripe</A> is
recorded and played back at suitable levels. It is definitely not the case
that higher levels are better. SMPTE timecode is a pulse or rectangular
<A HREF="#wave">wave</A> signal, where signal levels do matter. The most
common error is recording at too high a level which causes waveform distortions
leading to errors. Recording at too high a level will also exacerbate audio
crosstalk, breakthrough of the sync tone onto audio signals. Recording
at too low a level may make the stripe replay susceptible to crosstalk,
leading to corruption of the signal seen by the timecode reader. Excessive
volume in the stripe replay path may swamp the input circuits of a timecode
reader, impairing its ability to interpret the sync signal. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">A SMPTE Longitudinal
TimeCode stripe is best recorded at just a few dB above the minimum level
which allows correct reading. the best way to arrive at appropriate working
level settings is usually trial-and-error. Most audio tape tracks and one-inch
Video Tape Recorders will work well with the stripe recorded as low as
<NOBR>10 dB</NOBR> below reference level. Audio tracks with noise reduction and Video
Cassette Recorders may work better with stripes recorded as high as just
<NOBR>3 dB</NOBR> below reference level. </FONT></P>

<H3><A NAME="wave"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">SMPTE
LTC sync tone waveform</FONT></H3>

<P><IMG SRC="pix/risetime.gif" ALT="[Diagram: Rise time and time constant]"
HSPACE=8 HEIGHT=302 WIDTH=260 ALIGN=RIGHT> <FONT
FACE="Arial,Helvetica,Geneva,Verdana">The audio-compatible SMPTE Longitudinal
TimeCode signal uses the <A HREF="#mod">bi-phase mark modulation scheme</A>.
The data for each frame period is contained in an <A HREF="#word">eighty bit
word format</A>. The modulation scheme, frame-rate and word length determine
the range of pulse frequencies required by the LTC signal at normal speed;
<NOBR>960 Hz</NOBR> (zeroes at <NOBR>24 fps)</NOBR> to <NOBR>2400 Hz</NOBR>
(ones at <NOBR>30 fps)</NOBR>. </FONT></P>

<P><IMG SRC="pix/lowpass1.gif" ALT="[Diagram: Step function and low pass
filter]" HSPACE=8 HEIGHT=41 WIDTH=165 ALIGN=LEFT><FONT FACE="
Arial,Helvetica,Geneva,Verdana"> The <STRONG>rise time</STRONG> is the time it
takes the step reponse to traverse between ten percent and ninety percent of
the full step amplitude. The <STRONG>time constant</STRONG> is the time it
would take for the variable to traverse the full step amplitude, if its rate
of change was the same as at the very start of the step response.
The time constant approximately equals the rise time divided by 2.2. Where
<I>t</I><SUB>c</SUB> is the time constant in ms, the formula for -3 dB cut-off
frequency <I>f</I><SUB>c</SUB> in kHz is: <BR><IMG SRC="pix/freq-tc.gif"
ALT="fc = 1 / (2 x pi x tc)" ALIGN=BOTTOM WIDTH=50 HEIGHT=32></FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The standard specifies that the
LTC signal should have a rise time of 25 &micro;s &plusmn; 5 &micro;s. This
means that the pulse waveform must be low pass filtered. If the filter is of
the first order <NOBR>(6 dB/octave),</NOBR> the 25 &micro;s rise time
corresponds to a time constant of about 11.5 &micro;s. This also corresponds to
a <NOBR>-3 dB</NOBR> cut-off frequency (channel bandwidth) of about <NOBR>14
kHz.</NOBR> The resultant waveform does not have excessive high frequency
energy, and is easily accommodated by a standard audio channel.</FONT> <FONT
SIZE=1> [Please note: &micro; is the symbol for 'micro', &plusmn; is the
symbol for '+/-'.]</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">In practice, the
most common form of degradation to a SMPTE signal is loss of high frequencies:
you may be able to recover such a waveform by passing through a band boost of
a few dB at about <NOBR>2 KHz</NOBR> with a Q of about 1, or a low order shelf filter which
boosts <NOBR>2 kHz</NOBR> with respect to <NOBR>1 kHz.</NOBR>  Other forms of degradation are crosstalk
and noise: you may be able to reduce the effects of these by passing the
signal through a high pass filter with a low frequency roll-off below about
<NOBR>800 Hz.</NOBR> The other main form of degradation is jitter; the only way for the
user might help with this is careful <A HREF="#level">adjustment of
levels</A>. The sync tone input of the <I>Philip Rees <B>TS1</B></I> MIDI Tape
has good jitter tolerance and several automatic features for waveform
restitution.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Generally, the
SMPTE sync tone can be handled in the same ways as an ordinary audio signal.
The SMPTE LTC signal can use balanced or single-ended interconnects as
required. In professional installations a balanced signal using screened
pair audio cable is usually for timecode distribution. The SMPTE sync tone
is an obtrusive noise and often a fairly high level signal; so it is necessary
to route cables so as to avoid crosstalk. The SMPTE signal should not be
subjected to audio processing (such as expansion, compression, equalization,
noise reduction and automatic gain controls), which can render the waveform
unreadable. The <I>Philip Rees <B>TS1</B></I> has such a clever sync tone
input that it can even decipher a SMPTE signal that has been recorded and
played back through <B>dbx</B> processing.</FONT></P>

<H3><A NAME="vitc"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">SMPTE
VITC and special timecode variants</FONT></H3>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">LTC is 'longitudinal'
because it is usually recorded along the length of a tape. It is an audio-like
signal, which can only be read while the tape is moving relative to the
tape head. In video tape systems, LTC is used at normal or higher speeds.
</FONT></P>

<P><IMG SRC="pix/burn-in.gif" ALT="" HSPACE=5 VSPACE=5
HEIGHT=120 WIDTH=160 ALIGN=RIGHT><FONT FACE="Arial,Helvetica,Geneva,Verdana">In video tape
systems, an alternative type of timecode may be inserted into the vertical
sync period of the video frame signal, so it can be read even while the
video tape is paused - this is called Vertical Interval Time Code or VITC
(&quot;vitsy&quot;). Both SMPTE timecode types encode the time into a frame
with a similar data format. SMPTE LTC can be overdubbed onto an already
recorded video tape, whereas SMPTE VITC usually cannot (it needs to be
incorporated into into the video signal during the initial recording or
while copying between tapes). VITC is part of the video signal and is used
at normal or lower speeds. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Many modern video
recording and audio recording formats make special provision to record
the timecode data. This may allow time code to be overdubbed onto an already
recorded video tape without copying; yet it also avoids occupying an audio
track. Even when the recorded signal is different, as with SMPTE VITC,
the output datastream is usually presented in <A HREF="#mod">SMPTE LTC
format</A>. </FONT></P>

<H3><A NAME="mtc"></A><A HREF="../products/tapesync.htm"><IMG SRC="../products/pix/ts1app.gif" ALT="" HSPACE=10 VSPACE=5 BORDER=0 HEIGHT=280 WIDTH=205 ALIGN=RIGHT></A><FONT FACE="
Arial,Helvetica,Geneva,Verdana">MIDI
Time Code</FONT></H3>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">A supplement
to the MIDI specification defines a standard whereby the timing information
(in hours, minutes, seconds, and, frames) found in SMPTE timecode can carried
by a MIDI connection. In this way, a suitably equipped MIDI sequencer may
be synchronised to an absolute timing reference. This standard is called
MIDI Time Code or MTC.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">MTC acts as a
bridge between SMPTE and the accepted standard system for controlling musical
equipment, MIDI. MTC makes it possible to employ a single timing reference
throughout a video, audio and MIDI system. Once MTC is implemented, a user
may avoid the need to convert manually between absolute SMPTE time and
tempo-relative bar and beat numbers.</FONT></P>

<P><A HREF="../products/tapesync.htm"><IMG SRC="pix/ts1wee.jpg"
ALT="[Photo:Philip Rees SMPTE/MTC and FSKplus/SRT timecode unit]"
VSPACE=5 HSPACE=10 BORDER=0 HEIGHT=195 WIDTH=172 ALIGN=LEFT></A>
<FONT FACE="Arial,Helvetica,Geneva,Verdana">The <I>Philip Rees
<A HREF="../products/tapesync.htm">TS1</A></I><A HREF="../products/tapesync.htm">
MIDI Tape Sync Unit</A> will convert a SMPTE Longitudinal TimeCode stream
into a corresponding MTC stream. Even if your sequencer is not MTC capable,
you can use the <B><I>TS1</I></B> by way of its <I>FSKplus</I> format.
</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The <B><I>TS1</I></B>
is amazingly good at reading dodgy stripes because of its special signal
conditioning. A level adjustment preset is provided for the TAPE IN port.
The <B><I>TS1</I></B> merges MIDI data received with the its own timing
datastream. This lets you overlay new sequencer tracks in sync with your
tape. When syncing, you are free shuttle your tape backward or forward,
and the synchronisation should pick up wherever you start to play. You
can also use the <B><I>TS1</I></B> to copy a stripe from one tape track to
another with waveform regeneration.</FONT></P>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">The <B><I>TS1</I></B>
can also generate all four SMPTE frame rate formats. By using a little
pushbutton or special MIDI commands, any SMPTE start time can be selected.
The SMPTE <A HREF="#word">USER BITS</A> can be set via MIDI commands. A
level adjustment preset is provided for the TAPE OUT port. </FONT></P>
 
<P>
<HR ALIGN=LEFT WIDTH=100% SIZE=2><BR>
</P>
 
<H3><A NAME="bcd"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">Binary
Coded Decimal </FONT></H3>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">As with all digital
electronic systems, the information in a SMPTE timecode signal is held
in <A HREF="#mod">binary (base two) format</A>. Within the <A HREF="#word">SMPTE
LTC word</A> the numbers of the SMPTE timecode frame address are in binary
coded decimal representation.</FONT></P>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Binary Coded
Decimal (often shortened to BCD) is a method of representing base ten (decimal)
numbers using binary (base two) codes. Each decimal digit occupies four
binary digits (bits). The four bits provide <NOBR>2<SUP>4</NOBR></SUP>
(that is sixteen) possible bit patterns. Ten of these patterns are used
by the BCD system to represent the decimal values zero to nine inclusive.
The remaining six patterns do not correspond to legal BCD values.</FONT>
<FONT SIZE=1> [Please note: <NOBR>2<SUP>4</NOBR></SUP>
above represents two raised to the power of four.
The following is an HTML table, also <A HREF="bcdtab.txt">available as plain
text</A>.]</FONT></P>

<TABLE BORDER=2 CELLSPACING=2 CELLPADDING=3 BGCOLOR="#FFFF00" >
<TR><TD><CENTER><B>BINARY CODE</B></CENTER></TD>
<TD><CENTER><B>DECIMAL</B></CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0000</TT></CENTER></TD>
<TD><CENTER>0</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0001</TT></CENTER></TD>
<TD><CENTER>1</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0010</TT></CENTER></TD>
<TD><CENTER>2</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0011</TT></CENTER></TD>
<TD><CENTER>3</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0100</TT></CENTER></TD>
<TD><CENTER>4</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0101</TT></CENTER></TD>
<TD><CENTER>5</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0110</TT></CENTER></TD>
<TD><CENTER>6</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>0111</TT></CENTER></TD>
<TD><CENTER>7</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1000</TT></CENTER></TD>
<TD><CENTER>8</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1001</TT></CENTER></TD>
<TD><CENTER>9</CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1010</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1011</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>

<TR><TD><CENTER><TT>1100</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>

<TR><TD><CENTER><TT>1101</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1110</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>
 
<TR><TD><CENTER><TT>1111</TT></CENTER></TD>
<TD><CENTER><I>not legal BCD</I></CENTER></TD></TR>
</TABLE>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Because some
possible bit patterns are not used, a value represented as a BCD number
is less compact (that is it occupies more bit cells) than the same value
represented in plain binary. BCD numbers are also generally more difficult
for computers to manipulate than plain binary numbers. Consequently, BCD
is less commonly chosen as a number format nowadays. However, it was often
preferred back when SMPTE timecode was specified, because in those days
it was comparatively complex to convert data between base ten representation
and base two representation. </FONT></P>

<H3><A NAME="colfrm"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">Colour
TV field sequences</FONT></H3>
 
<P><IMG SRC="pix/interlac.gif" ALT="" HSPACE=10 HEIGHT=115 WIDTH=139 ALIGN=RIGHT><FONT FACE="Arial,Helvetica,Geneva,Verdana">To
reduce the perceived screen flicker on a television, a technique called
'interlacing' is employed. Interlacing divides each video frame into two
fields; the first field consists of the odd scan lines of the image, and
the second field of each frame consists even scan lines. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">'Component video'
is employed in certain professional video formats; luminance (brightness),
chrominance (colour) and colour burst, blanking and sync pulse components
are kept separate optimise quality. Each successive frame of black-and-white
or component colour video can be edited at any frame boundary, in a manner
similar to cutting and splicing film. </FONT></P>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">A 'composite
video' signal is one in which the luminance, chrominance and other components
have been combined into a single signal. In the various world colour TV
standards (<A HREF="#drop">NTSC</A>, <A HREF="#pal">PAL or SECAM</A>) the
schemes of component combination are somewhat different. </FONT></P>
 
<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">In the established
systems, the colour subcarrier frequency (used to superimpose the chrominance
component on the luminance component) is not an integer multiple of the
frame-rate. Significant phase discontinuities in the colour subcarrier
cannot be tolerated. Consequently, the overall pattern of the composite
signal repeats over a period longer than a single frame. The accepted repetition
period is four frames in PAL, and the pattern is called the eight field
sequence. The repetition period is two frames in NTSC or SECAM, and the
pattern is called the four field sequence. In order to avoid picture degradation,
an edit should not disrupt these sequences. To maintain the sequences across
edits, the timecode (used to synchronise the video sources) must be able
to keep track of the sequence position of each frame. </FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">With a four field
(two frame) sequence at <A HREF="#drop"><NOBR>30 fps</NOBR> Drop Frame</A>, the field
sequence synchronisation just consists of odd and even frames. In timecode,
the pattern is not broken by the <I>Dropped Frames</I> (as these come in
pairs) nor by the resetting of the frame count when the seconds count is
incremented (there are always an even number of frames in each second).
The sequence position of each frame is simply indicated by the state of
the least significant bit of the frame units count, that is Bit 0 of each
<A HREF="#word">SMPTE word</A>.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">With a four field
(two frame) sequence at <NOBR>25 fps</NOBR>, field sequence position can be
indicated via timecode from the <A HREF="#exor">'exclusive or' (XOR)</A> of the
least significant bits of the FRAMES UNITS and SECONDS UNITS.</FONT></P>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana"><A NAME="eight"></A>With an
eight field (four frame) sequence at <NOBR>25 fps</NOBR> (as in regular <A
HREF="#pal">PAL</A>), field sequence position can be indicated in timecode by
the first taking the <A HREF="#sum">SUM</A> of the two least significant bits
of the FRAMES UNITS and two least significant bits of the SECS UNITS, ignoring
the carry-out. The more significant bit of the two-bit result of the SUM
should be <A HREF="#exor">XOR'ed</A> in turn with the next-to-least
significant bits of both the FRAMES TENS and SECS TENS; this corrects for the
effect of resetting of the UNITS digits when the TENS digits are incremented.
Fortunately, at <NOBR>25 fps,</NOBR> there are no <I>Dropped Frames</I> to
complicate matters, and the pattern is not broken by the resetting of the
seconds count when the minute count is incremented (sixty is divisible by
four). The two least significant bits of the frame units count are Bits 0 and
1 of each <A HREF="#word">SMPTE word</A>. The two least significant bits of
the seconds units count are Bits 16 and 17 of each <A HREF="#word">SMPTE
word</A>.  The next-to-least significant bit of FRAMES TENS is Bit 9, and the
next-to-least significant bit of SECS TENS is Bit 25. </FONT></P>

<P><A NAME="exor"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">The
'exclusive or' (XOR) is a Boolean operator, its basic form has two <A HREF="#mod">binary</A>
inputs and one binary output. When the inputs are equal the output is zero.
When the inputs are non-equal the output is one. In the computer language
'C' this operator is shown by the character '^'. The XOR truth table is
shown below:</FONT></P>

<PRE>0 ^ 0 = 0
0 ^ 1 = 1
1 ^ 0 = 1
1 ^ 1 = 0</PRE>

<P><A NAME="sum"></A><FONT FACE="Arial,Helvetica,Geneva,Verdana">Binary
addition is very similar to ordinary decimal addition, except that all
the digits can only take the value 0 or 1. The '+' sign here indicates
addition.</FONT></P>

<PRE>0 + 0 = 00
0 + 1 = 01
1 + 0 = 01
1 + 1 = 10
</PRE>

<P><FONT FACE="Arial,Helvetica,Geneva,Verdana">Along with a couple of XOR
operatios, a SUM function is needed to derive the eight field sequence position
as <A HREF="#eight">described above</A>. This two-bit (binary digit) addition
has the carry-out discarded, so the results are as follows:</FONT></P>

<PRE>00 + 00 = 00       00 + 01 = 01       00 + 10 = 10       00 + 11 = 11
01 + 00 = 01       01 + 01 = 10       01 + 10 = 11       01 + 11 = 00
10 + 00 = 10       10 + 01 = 11       10 + 10 = 00       10 + 11 = 01
11 + 00 = 11       11 + 01 = 00       11 + 10 = 01       11 + 11 = 10</PRE>
 
<P><A NAME="pal"></A><IMG SRC="pix/colorbar.gif" ALT="" HSPACE=5 VSPACE=5
HEIGHT=60 WIDTH=80 ALIGN=RIGHT><FONT FACE="
Arial,Helvetica,Geneva,Verdana">The acronym PAL stands for 'Phase Alternation
by Line', or words to that effect. This is the colour television standard widely
used in Europe (including the UK), invariably with 625 lines and <NOBR>25 fps.</NOBR> PAL is
a derivative of the American <A HREF="#drop">NTSC</A> system, but the carrier
phase of the one of the colour components is inverted on alternate lines; this
compensates for hue shifts which can otherwise be caused by phase distortion.
The acronym SECAM stands for 'Syst&egrave;me Electronique Couleur Avec Memoire'.
This is the colour television standard used in France, many former communist
bloc countries, and a sprinkling of other territories that De Gaulle was able to
lean on. This standard is nowadays also associated with 625 lines and <NOBR>25 fps.</NOBR> In
SECAM the two colour components are each carried alternately on alternate lines.
Video production for SECAM is often performed in PAL, the signal being converted
to SECAM for transmission.</FONT></P>

<P>
<HR ALIGN=LEFT WIDTH=100% SIZE=2><BR>
</P>
 
<P><A HREF="../index.htm"><IMG SRC="../pix/tochome.gif" HSPACE=10 HEIGHT=14 WIDTH=20 ALIGN=BOTTOM></A>
 <FONT FACE="Arial,Helvetica,Geneva,Verdana"><A HREF="../index.htm">
to Phil Rees home page</A></FONT></P>
 
<P><A HREF="../products/tapesync.htm"><IMG SRC="../pix/tocprod.gif" HSPACE=10 HEIGHT=14 WIDTH=20 ALIGN=BOTTOM></A>
 <FONT FACE="Arial,Helvetica,Geneva,Verdana"><A HREF="../products/tapesync.htm">
to Phil Rees <EM>TS1 MIDI Tape Sync Unit</EM> product description</A></FONT></P>
 
<P><A HREF="#top"><IMG SRC="../pix/toctop.gif" HSPACE=10 HEIGHT=14 WIDTH=20 ALIGN=BOTTOM></A><FONT FACE="Arial,Helvetica,Geneva,Verdana"><A HREF="#top">
to top of this page</A> </FONT></P>

<!-- copyright 1997 Philip Rees
     Not to be reproduced without permission of the author. -->

<DIV ALIGN=right><P><FONT SIZE=1>&copy; 1997 Philip Rees<BR>
This document is not to be reproduced without permission of the author.<BR>
No liability can be accepted for errors and omissions.<BR>
All trademarks acknowledged as the property of their owners.</FONT>

<!-- copyright 1997 Philip Rees --></P></DIV>

</BODY>
</HTML>


