XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
C:\cxa\examples\xvw\demo.src
ADDR   CODE            LINE SOURCELINE
                          2 ; options: -IC:\cxa\include -Mt -So -w -A1 -O1 -g
                          4 $ZPAGE
                          5         NAME    DEMO
000000                   19 DEMO_INI_NE     SEGMENT DATA INIT
000000                   20         RSEG    DEMO_INI_NE
                         24         PUBLIC  _table
                         25         ALIGN   1
000000 00000000          26 _table: DD      000000000H
000004 00000000000000    27         DB      000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
       0000000000           
000010 00000000000000    28         DB      000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
       0000000000           
00001C 00000000          29         DB      000H,000H,000H,000H
                         32         PUBLIC  _initval
                         33         ALIGN   1
000020                   34 _initval:
000020 00000000          35         DD      000000000H
                         39         PUBLIC  _bell
000024 0700              47 _bell:  DB      007H,000H
                         50         PUBLIC  _recordvar
                         51         ALIGN   1
000026                   52 _recordvar:
000026 FFFF              53         DW      0FFFFH
000028 5461736B696E67    54         DB      054H,061H,073H,06BH,069H,06EH,067H,000H,000H,000H,000H,000H
       0000000000           
000034 00000000          55         DB      000H,000H,000H,000H
000038 39300000          56         DD      000003039H
00003C 0200              57         DW      00002H
                         59         ALIGN   1
00003E                   60 _statrec:
00003E 3900              61         DW      00039H
000040 68656C6C6F2C77    62         DB      068H,065H,06CH,06CH,06FH,02CH,077H,06FH,072H,06CH,064H,000H
       6F726C6400           
00004C 00000000          63         DB      000H,000H,000H,000H
000050 31D40000          64         DD      00000D431H
000054 0000              65         DW      00000H
000000                   66 DEMO_PR SEGMENT CODE
000000                   67         RSEG    DEMO_PR
                         68         ALIGN   1
                         70         PUBLIC  _main
000000                   71 _main:
000000 A97A              75         ADDS.W  R7,#0AH
000002 BEr0rr            89         MOV.W   _initval+2,#00H
000005 9Er8rr0011        90         MOV.W   _initval,#011H
00000A 8E0rrr            92         MOV.W   R0,_recordvar
00000D 9819              93         SEXT.W  R1
00000F 99140000          94         CMP.W   R1,#00H
000013 FC08              95         BGT     _7
000015 FB04              96         BLT     _15
000017 99040011          97         CMP.W   R0,#011H
00001B F004              98         BCC     _7
00001B F00400            98         BCC     _7
00001E                   99 _15:
00001E BC7002           101         MOV.W   [R7+2],#00H
000021 BA70             102         MOV.W   [R7],#00H
000024                  105 _7:
000024 B960             107         MOV.W   R6,#00H
000026 9948rrrr         109         MOV.W   R4,#_table
00002A                  111 _8:
00002A 8906             113         MOV.W   R0,R6
00002C C50049           116         CALL    _factorial
00002F 8A0C             119         MOV.W   [R4],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
000031 8C1C02           120         MOV.W   [R4+2],R1
000034 8C3702           122         MOV.W   R3,[R7+2]
000037 8A27             123         MOV.W   R2,[R7]
000039 0902             124         ADD.W   R0,R2
00003B 1913             125         ADDC.W  R1,R3
00003D 8C1F02           128         MOV.W   [R7+2],R1
000040 8A0F             129         MOV.W   [R7],R0
000042 A944             133         ADDS.W  R4,#04H
000044 A961             136         ADDS.W  R6,#01H
000046 9944rrrr         139         CMP.W   R4,#_table+36
00004A F1EF             140         BCS     _8
00004C 8C5702           142         MOV.W   R5,[R7+2]
00004F 8A47             143         MOV.W   R4,[R7]
000051 0E4rrr           144         ADD.W   R4,_initval
000054 1E5rrr           145         ADDC.W  R5,_initval+2
000057 99540000         152         CMP.W   R5,#00H
00005B F203             153         BNE     _17
00005D 9944172B         154         CMP.W   R4,#0172BH
00005D 9944172B00       154         CMP.W   R4,#0172BH
000062                  155 _17:
000062 F205             156         BNE     _9
000064 9908rrrr         158         MOV.W   R0,#_3
000068 C5003C           159         CALL    _myputs
00006B FE05             161         BR      _10
00006B FE0500           161         BR      _10
00006E                  162 _9:
00006E 9908rrrr         164         MOV.W   R0,#_4
000072 C50037           165         CALL    _myputs
000076                  167 _10:
000076 BEr0rr           169         MOV.W   _recordvar+22,#00H
000079 9908rrrr         171         MOV.W   R0,#_recordvar+2
00007D C5rrrr           172         CALL    _strlen
000080 8E0rrr           173         MOV.W   _recordvar,R0
000083 FE05             175         BR      _12
000083 FE0500           175         BR      _12
000086                  176 _11:
000086 99400001         178         ADD.W   R4,#01H
00008A 99510000         179         ADDC.W  R5,#00H
00008E                  183 _12:
00008E 6966             184         OR.W    R6,R6
000090 F2FA             185         BNE     _11
000092 BEr2rr           187         MOV.W   _recordvar+22,#02H
000095 B905             189         MOV.W   R0,#05H
000097 C5rrrr           190         CALL    _addone
00009A 9908rrrr         192         MOV.W   R0,#_5
00009E C50021           193         CALL    _myputs
0000A1 400704           195         LEA     R0,R7+4
0000A4 C5002E           196         CALL    _mygetchar
0000A7 94740479         198         CMP.B   [R7+4],#079H
0000AB F204             199         BNE     _13
0000AD 9908rrrr         201         MOV.W   R0,#_bell
0000B1 C50017           202         CALL    _myputs
0000B4                  204 _13:
0000B4 9908rrrr         206         MOV.W   R0,#_6
0000B8 C50014           207         CALL    _myputs
0000BB A976             209         ADDS.W  R7,#06H
0000BD D680             211         RET
0000BF 00               215         ALIGN   1
                        217         PUBLIC  _factorial
0000C0                  218 _factorial:
0000C0 0F30             222         PUSH.W  R4, R5
0000C2 99040002         229         CMP.W   R0,#02H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
0000C6 FA03             230         BGE     _21
0000C8 B910             232         MOV.W   R1,#00H
0000CA B901             233         MOV.W   R0,#01H
0000CC FE08             235         BR      _22
0000CC FE08             235         BR      _22
0000CE                  236 _21:
0000CE 8940             239         MOV.W   R4,R0
0000D0 9859             240         SEXT.W  R5
0000D2 A90F             241         ADDS.W  R0,#0FH
0000D4 C5FFF5           243         CALL    _factorial
0000D7 8935             244         MOV.W   R3,R5
0000D9 8924             245         MOV.W   R2,R4
0000DB C5rrrr           246         CALL    __MULL
0000DE                  248 _22:
0000DE 2F30             249         POP.W   R4, R5
0000E0 D680             251         RET
                        253         ALIGN   1
                        255         PUBLIC  _myputs
0000E2                  256 _myputs:
0000E2 A97E             262         ADDS.W  R7,#0EH
0000E4 9918rrrr         267         MOV.W   R1,#_outbuf
0000E8 8A0F             268         MOV.W   [R7],R0
0000EA 8901             271         MOV.W   R0,R1
0000EC 8A17             272         MOV.W   R1,[R7]
0000EE C5rrrr           273         CALL    _strcpy
0000F1 B901             278         MOV.W   R0,#01H
0000F3 99280050         279         MOV.W   R2,#050H
0000F7 9918rrrr         280         MOV.W   R1,#_outbuf
0000FB C5rrrr           281         CALL    __simo
0000FE A972             283         ADDS.W  R7,#02H
000100 D680             285         RET
                        287         ALIGN   1
                        289         PUBLIC  _mygetchar
000102                  290 _mygetchar:
000102 0F10             294         PUSH.W  R4
000104 8940             297         MOV.W   R4,R0
000106 B900             302         MOV.W   R0,#00H
000108 9918rrrr         303         MOV.W   R1,#_inbuf
00010C B922             304         MOV.W   R2,#02H
00010E C5rrrr           305         CALL    __simi
000111 A04rrr           307         MOV.B   [R4],_inbuf
000114 2F10             309         POP.W   R4
000116 D680             311         RET
000056                  316         RSEG    DEMO_INI_NE
000056 706173730A00     317 _3:     DB      070H,061H,073H,073H,00AH,000H
                        320         EXTRN   CODE(_strlen)
00005C 6661696C0A00     321 _4:     DB      066H,061H,069H,06CH,00AH,000H
                        324         EXTRN   CODE(__simi)
                        327         EXTRN   CODE(__simo)
                        330         EXTRN   CODE(_strcpy)
000000                  333 DEMO_CLR_NE     SEGMENT DATA CLEAR
000000                  334         RSEG    DEMO_CLR_NE
                        335         PUBLIC  _inbuf
000000                  336 _inbuf: DS      2
   |  RESERVED             
000001
                        337         EXTRN   CODE(__MULL)
                        341         PUBLIC  _outbuf
000002                  342 _outbuf:        DS      80
   |  RESERVED             
000051
000062                  343         RSEG    DEMO_INI_NE
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
000062 446F20796F7520   344 _5:     DB      044H,06FH,020H,079H,06FH,075H,020H,077H,061H,06EH,074H,020H
       77616E7420           
00006E 746F2072696E67   345         DB      074H,06FH,020H,072H,069H,06EH,067H,020H,074H,068H,065H,020H
       2074686520           
00007A 62656C6C202879   346         DB      062H,065H,06CH,06CH,020H,028H,079H,020H,06FH,072H,020H,06EH
       206F72206E           
000086 293F2000         347         DB      029H,03FH,020H,000H
00008A 456E64206F6620   348 _6:     DB      045H,06EH,064H,020H,06FH,066H,020H,064H,065H,06DH,06FH,00AH
       64656D6F0A           
000096 00               349         DB      000H
                        352         EXTRN   CODE(_addone)
                        353         EXTRN   CODE(__START)
                        354         EXTRN   DATA(__lc_ub_xvwbuffer)
                        355         EXTRN   DATA(__lc_ue_xvwbuffer)
                        356         CALLS   'main', 'factorial'
                        357         CALLS   'main', 'myputs'
                        358         CALLS   'main', 'strlen'
                        359         CALLS   'main', 'addone'
                        360         CALLS   'main', 'myputs'
                        361         CALLS   'main', 'mygetchar'
                        362         CALLS   'main', 'myputs'
                        363         CALLS   'factorial', 'factorial'
                        364         CALLS   'myputs', 'strcpy'
                        365         CALLS   'myputs', '_simo'
                        366         CALLS   'mygetchar', '_simi'
