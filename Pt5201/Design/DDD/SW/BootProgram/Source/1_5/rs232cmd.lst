XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
U:\Pt5201\Design\DDD\SW\BootProgram\Source\1_5\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          2 ; options: -IC:\cxa\include -Ml -Cxag3 -Sd -A1 -O1 -DWritableSector=0
                          3 ;          -DBootProgram=1 -g
                          5 $NOZPAGE
                          6         NAME    RS232CMD
000000                   47 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                   48         RSEG    RS232CMD_RO
                         52         PUBLIC  _SWTypeTxt
000000                   53 _SWTypeTxt:
000000 50543532303120    54         DB      050H,054H,035H,032H,030H,031H,020H,042H,04FH,04FH,054H,05FH
       424F4F545F           
00000C 50524F4752414D    55         DB      050H,052H,04FH,047H,052H,041H,04DH,028H,043H,029H,000H
       28432900             
                         58         PUBLIC  _CompanyTxt
000017                   59 _CompanyTxt:
000017 50545600          60         DB      050H,054H,056H,000H
                         63         PUBLIC  _SWDateTxt
00001B                   64 _SWDateTxt:
00001B 31343037323030    65         DB      031H,034H,030H,037H,032H,030H,030H,030H,000H
       3000                 
                         68         PUBLIC  _SWVersionTxt
000024                   69 _SWVersionTxt:
000024 30322E3000        70         DB      030H,032H,02EH,030H,000H
                         73         PUBLIC  _PLDNotLoadedTxt
000029                   74 _PLDNotLoadedTxt:
000029 504C44204E4F54    75         DB      050H,04CH,044H,020H,04EH,04FH,054H,020H,04CH,04FH,041H,044H
       204C4F4144           
000035 454400            76         DB      045H,044H,000H
                         79         PUBLIC  _TestPLDNotAvailableTxt
000038                   80 _TestPLDNotAvailableTxt:
000038 5445535420504C    81         DB      054H,045H,053H,054H,020H,050H,04CH,044H,020H,04EH,04FH,054H
       44204E4F54           
000044 20415641494C41    82         DB      020H,041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       424C4500             
                         85         PUBLIC  _CmdNotAvailableTxt
00004F                   86 _CmdNotAvailableTxt:
00004F 434F4D4D414E44    87         DB      043H,04FH,04DH,04DH,041H,04EH,044H,020H,04EH,04FH,054H,020H
       204E4F5420           
00005B 415641494C4142    88         DB      041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       4C4500               
                         91         PUBLIC  _ErasingSectorTxt
000065                   92 _ErasingSectorTxt:
000065 45524153494E47    93         DB      045H,052H,041H,053H,049H,04EH,047H,020H,053H,045H,043H,054H
       2053454354           
000071 4F5200            94         DB      04FH,052H,000H
                         97         PUBLIC  _ErasedTxt
000074                   98 _ErasedTxt:
000074 45524153454400    99         DB      045H,052H,041H,053H,045H,044H,000H
                        102         PUBLIC  _NewlineTxt
00007B                  103 _NewlineTxt:
00007B 0D0A00           104         DB      00DH,00AH,000H
                        107         PUBLIC  _OKTxt
00007E 4F4B00           108 _OKTxt: DB      04FH,04BH,000H
                        111         PUBLIC  _ERRORTxt
000081                  112 _ERRORTxt:
000081 4552524F5200     113         DB      045H,052H,052H,04FH,052H,000H
                        116         PUBLIC  _IDNCmdTxt
000087                  117 _IDNCmdTxt:
000087 49444E00         118         DB      049H,044H,04EH,000H
                        121         PUBLIC  _ERRORCmdTxt
00008B                  122 _ERRORCmdTxt:
00008B 4552524F5200     123         DB      045H,052H,052H,04FH,052H,000H
                        126         PUBLIC  _ERRCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
000091                  127 _ERRCmdTxt:
000091 45525200         128         DB      045H,052H,052H,000H
                        131         PUBLIC  _HWINFOCmdTxt
000095                  132 _HWINFOCmdTxt:
000095 4857494E464F00   133         DB      048H,057H,049H,04EH,046H,04FH,000H
                        136         PUBLIC  _HWINCmdTxt
00009C                  137 _HWINCmdTxt:
00009C 4857494E00       138         DB      048H,057H,049H,04EH,000H
                        141         PUBLIC  _HWTESTCmdTxt
0000A1                  142 _HWTESTCmdTxt:
0000A1 48575445535400   143         DB      048H,057H,054H,045H,053H,054H,000H
                        146         PUBLIC  _HWTCmdTxt
0000A8                  147 _HWTCmdTxt:
0000A8 48575400         148         DB      048H,057H,054H,000H
                        151         PUBLIC  _TKCALIBRATECmdTxt
0000AC                  152 _TKCALIBRATECmdTxt:
0000AC 544B43414C4942   153         DB      054H,04BH,043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       5241544500           
                        156         PUBLIC  _TKCCmdTxt
0000B8                  157 _TKCCmdTxt:
0000B8 544B4300         158         DB      054H,04BH,043H,000H
                        161         PUBLIC  _FRESETCmdTxt
0000BC                  162 _FRESETCmdTxt:
0000BC 46524553455400   163         DB      046H,052H,045H,053H,045H,054H,000H
                        166         PUBLIC  _FRESCmdTxt
0000C3                  167 _FRESCmdTxt:
0000C3 4652455300       168         DB      046H,052H,045H,053H,000H
                        171         PUBLIC  _FINFOCmdTxt
0000C8                  172 _FINFOCmdTxt:
0000C8 46494E464F00     173         DB      046H,049H,04EH,046H,04FH,000H
                        176         PUBLIC  _FINFCmdTxt
0000CE                  177 _FINFCmdTxt:
0000CE 46494E4600       178         DB      046H,049H,04EH,046H,000H
                        181         PUBLIC  _FSTATUSCmdTxt
0000D3                  182 _FSTATUSCmdTxt:
0000D3 46535441545553   183         DB      046H,053H,054H,041H,054H,055H,053H,000H
       00                   
                        186         PUBLIC  _FSTCmdTxt
0000DB                  187 _FSTCmdTxt:
0000DB 46535400         188         DB      046H,053H,054H,000H
                        191         PUBLIC  _FCHECKSUMCmdTxt
0000DF                  192 _FCHECKSUMCmdTxt:
0000DF 46434845434B53   193         DB      046H,043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       554D00               
                        196         PUBLIC  _FCHCmdTxt
0000E9                  197 _FCHCmdTxt:
0000E9 46434800         198         DB      046H,043H,048H,000H
                        201         PUBLIC  _FSSIZECmdTxt
0000ED                  202 _FSSIZECmdTxt:
0000ED 465353495A4500   203         DB      046H,053H,053H,049H,05AH,045H,000H
                        206         PUBLIC  _FSSCmdTxt
0000F4                  207 _FSSCmdTxt:
0000F4 46535300         208         DB      046H,053H,053H,000H
                        211         PUBLIC  _FSPVERIFYCmdTxt
0000F8                  212 _FSPVERIFYCmdTxt:
0000F8 46535056455249   213         DB      046H,053H,050H,056H,045H,052H,049H,046H,059H,000H
       465900               
                        216         PUBLIC  _FSPVCmdTxt
000102                  217 _FSPVCmdTxt:
000102 4653505600       218         DB      046H,053H,050H,056H,000H
                        221         PUBLIC  _FSERASECmdTxt
000107                  222 _FSERASECmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
000107 46534552415345   223         DB      046H,053H,045H,052H,041H,053H,045H,000H
       00                   
                        226         PUBLIC  _FSERCmdTxt
00010F                  227 _FSERCmdTxt:
00010F 4653455200       228         DB      046H,053H,045H,052H,000H
                        231         PUBLIC  _FBERASECmdTxt
000114                  232 _FBERASECmdTxt:
000114 46424552415345   233         DB      046H,042H,045H,052H,041H,053H,045H,000H
       00                   
                        236         PUBLIC  _FBERCmdTxt
00011C                  237 _FBERCmdTxt:
00011C 4642455200       238         DB      046H,042H,045H,052H,000H
                        241         PUBLIC  _FREADCmdTxt
000121                  242 _FREADCmdTxt:
000121 465245414400     243         DB      046H,052H,045H,041H,044H,000H
                        246         PUBLIC  _FRECmdTxt
000127                  247 _FRECmdTxt:
000127 46524500         248         DB      046H,052H,045H,000H
                        251         PUBLIC  _ExtLinAddrRecTxt
00012B                  252 _ExtLinAddrRecTxt:
00012B 3A303230303030   253         DB      03AH,030H,032H,030H,030H,030H,030H,030H,034H,000H
       303400               
                        256         PUBLIC  _EndOfFileRecTxt
000135                  257 _EndOfFileRecTxt:
000135 3A303030303030   258         DB      03AH,030H,030H,030H,030H,030H,030H,030H,031H,046H,046H,000H
       3031464600           
                        274         PUBLIC  _Subsystem
000141 RESERVED         275         ALIGN   1
000141
000142                  276 _Subsystem:
000142 rrrrrrrrrrrrrr   277         DD      _IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00014A rrrrrrrrrrrrrr   278         DD      _Subsystem+16
       rr                   
00014E rrrrrrrrrrrrrr   279         DD      _SystemIDN,_ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00015A rrrrrrrrrrrrrr   280         DD      _Subsystem+32
       rr                   
00015E rrrrrrrrrrrrrr   281         DD      _SystemError,_HWINFOCmdTxt,_HWINCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00016A rrrrrrrrrrrrrr   282         DD      _Subsystem+48
       rr                   
00016E rrrrrrrrrrrrrr   283         DD      _HWInfo,_HWTESTCmdTxt,_HWTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00017A rrrrrrrrrrrrrr   284         DD      _Subsystem+64
       rr                   
00017E rrrrrrrrrrrrrr   285         DD      _HWTest,_FRESETCmdTxt,_FRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00018A rrrrrrrrrrrrrr   286         DD      _Subsystem+80
       rr                   
00018E rrrrrrrrrrrrrr   287         DD      _FlashReset,_TKCALIBRATECmdTxt,_TKCCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00019A rrrrrrrrrrrrrr   288         DD      _Subsystem+96
       rr                   
00019E rrrrrrrrrrrrrr   289         DD      _TKCalibrate,_FINFOCmdTxt,_FINFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001AA rrrrrrrrrrrrrr   290         DD      _Subsystem+112
       rr                   
0001AE rrrrrrrrrrrrrr   291         DD      _FlashInfo,_FSTATUSCmdTxt,_FSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001BA rrrrrrrrrrrrrr   292         DD      _Subsystem+128
       rr                   
0001BE rrrrrrrrrrrrrr   293         DD      _FlashStatus,_FCHECKSUMCmdTxt,_FCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001CA rrrrrrrrrrrrrr   294         DD      _Subsystem+144
       rr                   
0001CE rrrrrrrrrrrrrr   295         DD      _FlashChecksum,_FSSIZECmdTxt,_FSSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001DA rrrrrrrrrrrrrr   296         DD      _Subsystem+160
       rr                   
0001DE rrrrrrrrrrrrrr   297         DD      _FlashSectorSize,_FSPVERIFYCmdTxt,_FSPVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001EA rrrrrrrrrrrrrr   298         DD      _Subsystem+176
       rr                   
0001EE rrrrrrrrrrrrrr   299         DD      _FlashSectorProtectVerify,_FSERASECmdTxt,_FSERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001FA rrrrrrrrrrrrrr   300         DD      _Subsystem+192
       rr                   
0001FE rrrrrrrrrrrrrr   301         DD      _FlashSectorErase,_FBERASECmdTxt,_FBERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00020A rrrrrrrrrrrrrr   302         DD      _Subsystem+208
       rr                   
00020E rrrrrrrrrrrrrr   303         DD      _FlashBankErase,_FREADCmdTxt,_FRECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00021A 00000000         304         DD      000000000H
00021E rrrrrrrrrrrrrr   305         DD      _FlashRead
       rr                   
000000                  306 RS232CMD_PR     SEGMENT HCODE
000000                  307         RSEG    RS232CMD_PR
                        308         ALIGN   1
                        310         PUBLIC  _SystemIDN
000000                  311 _SystemIDN:
000000 860rrr           316         MOV.B   R0L,_ParameterType
000003 F302             317         BEQ     _3
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000008                  320 _3:
000008 082rrr           322         MOV     C,_CmdExecute
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
00000B F031             323         BCC     _7
00000D 8E0rrr           324         MOV.W   R0,_SCPIError
000010 F22E             325         BNE     _7
000012 082rrr           327         MOV     C,_CmdRequest
000015 F02A             328         BCC     _4
000017 9918rrrr         330         MOV.W   R1,#SEG( _CompanyTxt )
00001B 9908rrrr         331         MOV.W   R0,#SOF( _CompanyTxt )
                        332         CALL    _Udr_CPutNChar
00001F C4rrrrrr        +332 ;       FCALL   _Udr_CPutNChar
000023 91082C           334         MOV.B   R0L,#02CH
                        335         CALL    _Udr_PutChar
000026 C4rrrrrr        +335 ;       FCALL   _Udr_PutChar
00002A 9918rrrr         337         MOV.W   R1,#SEG( _SWTypeTxt )
00002E 9908rrrr         338         MOV.W   R0,#SOF( _SWTypeTxt )
                        339         CALL    _Udr_CPutNChar
000032 C4rrrrrr        +339 ;       FCALL   _Udr_CPutNChar
000036 91082C           340         MOV.B   R0L,#02CH
                        342         CALL    _Udr_PutChar
000039 C4rrrrrr        +342 ;       FCALL   _Udr_PutChar
00003D 9918rrrr         344         MOV.W   R1,#SEG( _SWDateTxt )
000041 9908rrrr         345         MOV.W   R0,#SOF( _SWDateTxt )
                        346         CALL    _Udr_CPutNChar
000045 C4rrrrrr        +346 ;       FCALL   _Udr_CPutNChar
000049 91082C           348         MOV.B   R0L,#02CH
                        349         CALL    _Udr_PutChar
00004C C4rrrrrr        +349 ;       FCALL   _Udr_PutChar
000050 9918rrrr         351         MOV.W   R1,#SEG( _SWVersionTxt )
000054 9908rrrr         352         MOV.W   R0,#SOF( _SWVersionTxt )
                        353         CALL    _Udr_CPutNChar
000058 C4rrrrrr        +353 ;       FCALL   _Udr_CPutNChar
00005C 9918rrrr         355         MOV.W   R1,#SEG( _NewlineTxt )
000060 9908rrrr         356         MOV.W   R0,#SOF( _NewlineTxt )
                        357         CALL    _Udr_CPutNChar
000064 C4rrrrrr        +357 ;       FCALL   _Udr_CPutNChar
000068 D680             359         RET
000068 D680             359         RET
00006A                  360 _4:
00006A BEr3rr           362         MOV.W   _SCPIError,#03H
00006E                  364 _7:
00006E D680             366         RET
                        368         ALIGN   1
                        370         PUBLIC  _SystemError
000070                  371 _SystemError:
000070 0F70             375         PUSH.W  R4, R5, R6
000072 A97E             377         ADDS.W  R7,#0EH
000074 860rrr           384         MOV.B   R0L,_ParameterType
000077 F302             385         BEQ     _8
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
00007C                  388 _8:
00007C 082rrr           390         MOV     C,_CmdExecute
00007F F054             391         BCC     _14
000081 8E0rrr           392         MOV.W   R0,_SCPIError
000084 F251             393         BNE     _14
000086 082rrr           395         MOV     C,_CmdRequest
000089 F04D             396         BCC     _10
                        398         CALL    _ReadErrorEventQueue
00008B C4rrrrrr        +398 ;       FCALL   _ReadErrorEventQueue
00008F 99040000         400         CMP.W   R0,#00H
000093 F14A             401         BCS     _14
000095 E9000006         403         MULU.W  R0,#06H
000099 8A0F             405         MOV.W   [R7],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
00009B 8920             406         MOV.W   R2,R0
00009D B930             407         MOVS.W  R3,#00H
00009F 9918rrrr         408         MOV.W   R1,#SEG( _ErrorTxt_Array )
0000A3 9908rrrr         409         MOV.W   R0,#SOF( _ErrorTxt_Array )
0000A7 0902             410         ADD.W   R0,R2
0000A9 1913             411         ADDC.W  R1,R3
0000AB 862C43           412         MOV.B   CS,R1L
0000AE 8810             413         MOVC.W  R1,[R0+]
0000B0 981B             414         NEG.W   R1
0000B2 8961             415         MOV.W   R6,R1
0000B4 8906             418         MOV.W   R0,R6
0000B6 B910             419         MOVS.W  R1,#00H
0000B8 9928rrrr         420         MOV.W   R2,#SOF( _strout )
0000BC 8942             421         MOV.W   R4,R2
0000BE B950             422         MOVS.W  R5,#00H
0000C0 8935             423         MOV.W   R3,R5
0000C2 8924             424         MOV.W   R2,R4
                        425         CALL    _dwordtoa
0000C4 C4rrrrrr        +425 ;       FCALL   _dwordtoa
0000C8 6966             427         OR.W    R6,R6
0000CA F304             428         BEQ     _9
0000CC 91082D           430         MOV.B   R0L,#02DH
                        431         CALL    _Udr_PutChar
0000CF C4rrrrrr        +431 ;       FCALL   _Udr_PutChar
0000CF C4rrrrrr00      +431 ;       FCALL   _Udr_PutChar
0000D4                  432 _9:
0000D4 8915             434         MOV.W   R1,R5
0000D6 8904             435         MOV.W   R0,R4
                        436         CALL    _Udr_PutNChar
0000D8 C4rrrrrr        +436 ;       FCALL   _Udr_PutNChar
0000DC 91082C           438         MOV.B   R0L,#02CH
                        439         CALL    _Udr_PutChar
0000DF C4rrrrrr        +439 ;       FCALL   _Udr_PutChar
0000E3 910822           441         MOV.B   R0L,#022H
                        442         CALL    _Udr_PutChar
0000E6 C4rrrrrr        +442 ;       FCALL   _Udr_PutChar
0000EA 8A07             444         MOV.W   R0,[R7]
0000EC B910             445         MOVS.W  R1,#00H
0000EE 9938rrrr         446         MOV.W   R3,#SEG( _ErrorTxt_Array+2 )
0000F2 9928rrrr         447         MOV.W   R2,#SOF( _ErrorTxt_Array+2 )
0000F6 0920             448         ADD.W   R2,R0
0000F8 1931             449         ADDC.W  R3,R1
0000FA 866C43           450         MOV.B   CS,R3L
0000FD 8802             451         MOVC.W  R0,[R2+]
0000FF 99240000         452         CMP.W   R2,#00H
000103 F202             453         BNE     _16
000105 A64143           454         ADDS.B  CS,#01H
000105 A64143           454         ADDS.B  CS,#01H
000108                  455 _16:
000108 8812             456         MOVC.W  R1,[R2+]
                        457         CALL    _Udr_CPutNChar
00010A C4rrrrrr        +457 ;       FCALL   _Udr_CPutNChar
00010E 910822           459         MOV.B   R0L,#022H
                        460         CALL    _Udr_PutChar
000111 C4rrrrrr        +460 ;       FCALL   _Udr_PutChar
000115 9918rrrr         462         MOV.W   R1,#SEG( _NewlineTxt )
000119 9908rrrr         463         MOV.W   R0,#SOF( _NewlineTxt )
                        464         CALL    _Udr_CPutNChar
00011D C4rrrrrr        +464 ;       FCALL   _Udr_CPutNChar
000121 FE03             466         BR      _14
000121 FE0300           466         BR      _14
000124                  467 _10:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000124 BEr3rr           469         MOV.W   _SCPIError,#03H
000128                  471 _14:
000128 A972             473         ADDS.W  R7,#02H
00012A 2F70             475         POP.W   R4, R5, R6
00012C D680             477         RET
                        480         ALIGN   1
                        482         PUBLIC  _HWInfo
00012E                  483 _HWInfo:
00012E BEr3rr           488         MOV.W   _SCPIError,#03H
000131 D680             490         RET
000133 00               492         ALIGN   1
                        494         PUBLIC  _HWTest
000134                  495 _HWTest:
000134 BEr3rr           500         MOV.W   _SCPIError,#03H
000137 D680             502         RET
000139 00               504         ALIGN   1
                        506         PUBLIC  _FlashReset
00013A                  507 _FlashReset:
00013A 860rrr           512         MOV.B   R0L,_ParameterType
00013D F302             513         BEQ     _17
00013F BEr6rr           515         MOV.W   _SCPIError,#06H
00013F BEr6rr           515         MOV.W   _SCPIError,#06H
000142                  516 _17:
000142 082rrr           518         MOV     C,_CmdExecute
000145 F00A             519         BCC     _21
000147 8E0rrr           520         MOV.W   R0,_SCPIError
00014A F207             521         BNE     _21
00014C 082rrr           523         MOV     C,_CmdRequest
00014F F003             524         BCC     _18
000151 BEr3rr           526         MOV.W   _SCPIError,#03H
000154 D680             527         RET
000154 D680             527         RET
000156                  528 _18:
                        530         CALL    _flash_reset
000156 C4rrrrrr        +530 ;       FCALL   _flash_reset
00015A                  532 _21:
00015A D680             534         RET
                        536         ALIGN   1
                        538         PUBLIC  _TKCalibrate
00015C                  539 _TKCalibrate:
00015C BEr3rr           544         MOV.W   _SCPIError,#03H
00015F D680             546         RET
000161 00               548         ALIGN   1
                        550         PUBLIC  _FlashInfo
000162                  551 _FlashInfo:
000162 0F30             555         PUSH.W  R4, R5
000164 A97C             557         ADDS.W  R7,#0CH
000166 860rrr           562         MOV.B   R0L,_ParameterType
000169 F302             563         BEQ     _22
00016B BEr6rr           565         MOV.W   _SCPIError,#06H
00016B BEr6rr           565         MOV.W   _SCPIError,#06H
00016E                  566 _22:
00016E 082rrr           568         MOV     C,_CmdExecute
000171 F045             569         BCC     _26
000173 8E0rrr           570         MOV.W   R0,_SCPIError
000176 F242             571         BNE     _26
000178 082rrr           573         MOV     C,_CmdRequest
00017B F03E             574         BCC     _23
00017D 9128rr           576         MOV.B   R1L,#SEG( __lc_bs )
000180 7133             577         XOR.B   R1H,R1H
000182 400702           578         LEA     R0,R7+2
000185 9168rr           579         MOV.B   R3L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
000188 7177             580         XOR.B   R3H,R3H
00018A 8927             581         MOV.W   R2,R7
                        582         CALL    _flash_get_device_info
00018C C4rrrrrr        +582 ;       FCALL   _flash_get_device_info
000190 840702           584         MOV.B   R0L,[R7+2]
000193 B110             585         MOVS.B  R0H,#00H
000195 B910             586         MOVS.W  R1,#00H
000197 9928rrrr         587         MOV.W   R2,#SOF( _strout )
00019B 8942             588         MOV.W   R4,R2
00019D B950             589         MOVS.W  R5,#00H
00019F 8935             590         MOV.W   R3,R5
0001A1 8924             591         MOV.W   R2,R4
                        592         CALL    _dwordtoa
0001A3 C4rrrrrr        +592 ;       FCALL   _dwordtoa
0001A7 8915             593         MOV.W   R1,R5
0001A9 8904             594         MOV.W   R0,R4
                        596         CALL    _Udr_PutNChar
0001AB C4rrrrrr        +596 ;       FCALL   _Udr_PutNChar
0001AF 91082C           598         MOV.B   R0L,#02CH
                        599         CALL    _Udr_PutChar
0001B2 C4rrrrrr        +599 ;       FCALL   _Udr_PutChar
0001B6 8A07             601         MOV.W   R0,[R7]
0001B8 B910             602         MOVS.W  R1,#00H
0001BA 8935             603         MOV.W   R3,R5
0001BC 8924             604         MOV.W   R2,R4
                        605         CALL    _dwordtoa
0001BE C4rrrrrr        +605 ;       FCALL   _dwordtoa
0001C2 8915             606         MOV.W   R1,R5
0001C4 8904             607         MOV.W   R0,R4
                        609         CALL    _Udr_PutNChar
0001C6 C4rrrrrr        +609 ;       FCALL   _Udr_PutNChar
0001CA 91082C           611         MOV.B   R0L,#02CH
                        612         CALL    _Udr_PutChar
0001CD C4rrrrrr        +612 ;       FCALL   _Udr_PutChar
                        614         CALL    _flash_get_numsectors
0001D1 C4rrrrrr        +614 ;       FCALL   _flash_get_numsectors
0001D5 B110             615         MOVS.B  R0H,#00H
0001D7 B910             616         MOVS.W  R1,#00H
0001D9 8935             617         MOV.W   R3,R5
0001DB 8924             618         MOV.W   R2,R4
                        619         CALL    _dwordtoa
0001DD C4rrrrrr        +619 ;       FCALL   _dwordtoa
0001E1 8915             621         MOV.W   R1,R5
0001E3 8904             622         MOV.W   R0,R4
                        623         CALL    _Udr_PutNChar
0001E5 C4rrrrrr        +623 ;       FCALL   _Udr_PutNChar
0001E9 9918rrrr         625         MOV.W   R1,#SEG( _NewlineTxt )
0001ED 9908rrrr         626         MOV.W   R0,#SOF( _NewlineTxt )
                        627         CALL    _Udr_CPutNChar
0001F1 C4rrrrrr        +627 ;       FCALL   _Udr_CPutNChar
0001F5 FE03             629         BR      _26
0001F5 FE0300           629         BR      _26
0001F8                  630 _23:
0001F8 BEr3rr           632         MOV.W   _SCPIError,#03H
0001FC                  634 _26:
0001FC A974             636         ADDS.W  R7,#04H
0001FE 2F30             638         POP.W   R4, R5
000200 D680             640         RET
                        642         ALIGN   1
                        644         PUBLIC  _FlashStatus
000202                  645 _FlashStatus:
000202 860rrr           650         MOV.B   R0L,_ParameterType
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
000205 F302             651         BEQ     _27
000207 BEr6rr           653         MOV.W   _SCPIError,#06H
000207 BEr6rr           653         MOV.W   _SCPIError,#06H
00020A                  654 _27:
00020A 082rrr           656         MOV     C,_CmdExecute
00020D F03C             657         BCC     _41
00020F 8E0rrr           658         MOV.W   R0,_SCPIError
000212 F239             659         BNE     _41
000214 082rrr           661         MOV     C,_CmdRequest
000217 F035             662         BCC     _33
000219 910800           664         MOV.B   R0L,#00H
                        665         CALL    _flash_get_status
00021C C4rrrrrr        +665 ;       FCALL   _flash_get_status
000220 910400           666         CMP.B   R0L,#00H
000223 F30C             667         BEQ     _28
000225 910401           668         CMP.B   R0L,#01H
000228 F310             669         BEQ     _29
00022A 910402           670         CMP.B   R0L,#02H
00022D F315             671         BEQ     _30
00022F 910403           672         CMP.B   R0L,#03H
000232 F319             673         BEQ     _31
000234 910407           674         CMP.B   R0L,#07H
000237 F31E             675         BEQ     _32
000239 D680             676         RET
00023C                  678 _28:
00023C 9918rrrr         680         MOV.W   R1,#SEG( __FL_STATUSREADYTxt )
000240 9908rrrr         681         MOV.W   R0,#SOF( __FL_STATUSREADYTxt )
                        682         CALL    _Udr_CPutNChar
000244 C4rrrrrr        +682 ;       FCALL   _Udr_CPutNChar
000248 D680             684         RET
00024A                  686 _29:
00024A 9918rrrr         688         MOV.W   R1,#SEG( __FL_STATUSBUSYTxt )
00024E 9908rrrr         689         MOV.W   R0,#SOF( __FL_STATUSBUSYTxt )
                        690         CALL    _Udr_CPutNChar
000252 C4rrrrrr        +690 ;       FCALL   _Udr_CPutNChar
000256 D680             692         RET
000258                  694 _30:
000258 9918rrrr         696         MOV.W   R1,#SEG( __FL_STATUSERSUSPTxt )
00025C 9908rrrr         697         MOV.W   R0,#SOF( __FL_STATUSERSUSPTxt )
                        698         CALL    _Udr_CPutNChar
000260 C4rrrrrr        +698 ;       FCALL   _Udr_CPutNChar
000264 D680             700         RET
000266                  702 _31:
000266 9918rrrr         704         MOV.W   R1,#SEG( __FL_STATUSTIMEOUTTxt )
00026A 9908rrrr         705         MOV.W   R0,#SOF( __FL_STATUSTIMEOUTTxt )
                        706         CALL    _Udr_CPutNChar
00026E C4rrrrrr        +706 ;       FCALL   _Udr_CPutNChar
000272 D680             708         RET
000274                  710 _32:
000274 9918rrrr         712         MOV.W   R1,#SEG( __FL_STATUSERRORTxt )
000278 9908rrrr         713         MOV.W   R0,#SOF( __FL_STATUSERRORTxt )
                        714         CALL    _Udr_CPutNChar
00027C C4rrrrrr        +714 ;       FCALL   _Udr_CPutNChar
000280 D680             716         RET
000280 D680             716         RET
000282                  717 _33:
000282 BEr3rr           719         MOV.W   _SCPIError,#03H
000286                  721 _41:
000286 D680             723         RET
                        725         ALIGN   1
                        727         PUBLIC  _FlashChecksum
000288                  728 _FlashChecksum:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
000288 0F70             732         PUSH.W  R4, R5, R6
00028A A97C             734         ADDS.W  R7,#0CH
00028C 96r4rr00         743         CMP.B   _ParameterType,#00H
000290 F304             744         BEQ     _42
000292 96r4rr02         745         CMP.B   _ParameterType,#02H
000296 F304             746         BEQ     _43
000298 FE47             747         BR      _49
00029A                  749 _42:
00029A B6r0rr           751         MOV.B   _ParState,#00H
00029D FE47             753         BR      _55
0002A0                  755 _43:
0002A0 96r4rr00         757         CMP.B   _ParState,#00H
0002A4 F304             758         BEQ     _44
0002A6 96r4rr01         759         CMP.B   _ParState,#01H
0002AA F31E             760         BEQ     _46
0002AC FE3A             761         BR      _48
0002AE                  763 _44:
0002AE A6r1rr           765         ADDS.B  _ParState,#01H
0002B1 9908rrrr         767         MOV.W   R0,#SOF( _Cmd )
0002B5 8940             768         MOV.W   R4,R0
0002B7 B950             769         MOVS.W  R5,#00H
0002B9 8915             770         MOV.W   R1,R5
0002BB 8904             771         MOV.W   R0,R4
                        772         CALL    _atol
0002BD C4rrrrrr        +772 ;       FCALL   _atol
0002C1 9914000F         773         CMP.W   R1,#0FH
0002C5 FB09             774         BLT     _45
0002C7 FC04             775         BGT     _75
0002C9 9904FFFF         776         CMP.W   R0,#0FFFFH
0002CD F905             777         BL      _45
0002CD F90500           777         BL      _45
0002D0                  778 _75:
0002D0 9Er8rr0020       780         MOV.W   _SCPIError,#020H
0002D5 FE2B             781         BR      _55
0002D5 FE2B00           781         BR      _55
0002D8                  782 _45:
0002D8 8915             784         MOV.W   R1,R5
0002DA 8904             785         MOV.W   R0,R4
                        786         CALL    _atol
0002DC C4rrrrrr        +786 ;       FCALL   _atol
0002E0 8E1rrr           787         MOV.W   _dwordVal1+2,R1
0002E3 8E0rrr           788         MOV.W   _dwordVal1,R0
0002E6 FE22             790         BR      _55
0002E8                  792 _46:
0002E8 A6r1rr           794         ADDS.B  _ParState,#01H
0002EB 9908rrrr         796         MOV.W   R0,#SOF( _Cmd )
0002EF 8940             797         MOV.W   R4,R0
0002F1 B950             798         MOVS.W  R5,#00H
0002F3 8915             799         MOV.W   R1,R5
0002F5 8904             800         MOV.W   R0,R4
                        801         CALL    _atol
0002F7 C4rrrrrr        +801 ;       FCALL   _atol
0002FB 9914000F         802         CMP.W   R1,#0FH
0002FF FB09             803         BLT     _47
000301 FC04             804         BGT     _76
000303 9904FFFF         805         CMP.W   R0,#0FFFFH
000307 F905             806         BL      _47
000307 F90500           806         BL      _47
00030A                  807 _76:
00030A 9Er8rr0020       809         MOV.W   _SCPIError,#020H
00030F FE0E             810         BR      _55
00030F FE0E00           810         BR      _55
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
000312                  811 _47:
000312 8915             813         MOV.W   R1,R5
000314 8904             814         MOV.W   R0,R4
                        815         CALL    _atol
000316 C4rrrrrr        +815 ;       FCALL   _atol
00031A 8E1rrr           816         MOV.W   _dwordVal2+2,R1
00031D 8E0rrr           817         MOV.W   _dwordVal2,R0
000320 FE05             819         BR      _55
000322                  821 _48:
000322 BEr5rr           823         MOV.W   _SCPIError,#05H
000325 FE03             825         BR      _55
000328                  827 _49:
000328 BEr5rr           829         MOV.W   _SCPIError,#05H
00032C                  831 _55:
00032C 082rrr           833         MOV     C,_CmdExecute
                        834         BCC     _74
00032F F102            +834 ;       BCS     _LG_76
000331 D500CE          +834 ;       JMP.L   _74
000331 D500CE          +834 ;       JMP.L   _74
000334                 +834 _LG_76:
000334 8E0rrr           835         MOV.W   R0,_SCPIError
                        836         BNE     _74
000337 F302            +836 ;       BEQ     _LG_78
000339 D500CA          +836 ;       JMP.L   _74
000339 D500CA          +836 ;       JMP.L   _74
00033C                 +836 _LG_78:
00033C 082rrr           838         MOV     C,_CmdRequest
                        839         BCC     _66
00033F F102            +839 ;       BCS     _LG_80
000341 D500C4          +839 ;       JMP.L   _66
000341 D500C4          +839 ;       JMP.L   _66
000344                 +839 _LG_80:
000344 860rrr           841         MOV.B   R0L,_ParState
000347 F204             842         BNE     _56
000349 BEr7rr           844         MOV.W   _SCPIError,#07H
                        845         BR      _74
00034C D500C1          +845         JMP.L   _74
00034C D500C100        +845         JMP.L   _74
000350                  846 _56:
000350 860rrr           847         MOV.B   _ParState,R0L
000353 96r4rr01         849         CMP.B   _ParState,#01H
000357 F305             850         BEQ     _57
000359 96r4rr02         851         CMP.B   _ParState,#02H
00035D F374             852         BEQ     _61
                        853         BR      _65
00035F D500B2          +853         JMP.L   _65
000362                  855 _57:
000362 8E1rrr           857         MOV.W   R1,_dwordVal1+2
000365 8E0rrr           858         MOV.W   R0,_dwordVal1
000368 8E3rrr           859         MOV.W   R3,_meminfo+2
00036B 8E2rrr           860         MOV.W   R2,_meminfo
00036E 99200004         861         ADD.W   R2,#04H
000372 99310000         862         ADDC.W  R3,#00H
000376 866C43           863         MOV.B   CS,R3L
000379 8832             864         MOVC.W  R3,[R2+]
00037B 8923             865         MOV.W   R2,R3
00037D 9839             866         SEXT.W  R3
00037F 4913             867         CMP.W   R1,R3
000381 F202             868         BNE     _77
000383 4902             869         CMP.W   R0,R2
000383 490200           869         CMP.W   R0,R2
000386                  870 _77:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
000386 F903             871         BL      _58
000388 BEr3rr           873         MOV.W   _SCPIError,#03H
                        874         BR      _74
00038B D500A1          +874         JMP.L   _74
00038B D500A1          +874         JMP.L   _74
00038E                  875 _58:
00038E B960             877         MOV.W   R6,#00H
000390 B930             880         MOV.W   R3,#00H
000392 9928000A         881         MOV.W   R2,#0AH
000396 C4rrrrrr         882         FCALL   __MULL
00039A 8E5rrr           883         MOV.W   R5,_meminfo+2
00039D 8E4rrr           884         MOV.W   R4,_meminfo
0003A0 9940000E         885         ADD.W   R4,#0EH
0003A4 99510000         886         ADDC.W  R5,#00H
0003A8 0940             887         ADD.W   R4,R0
0003AA 1951             888         ADDC.W  R5,R1
0003AC 86AC43           889         MOV.B   CS,R5L
0003AF 8824             890         MOVC.W  R2,[R4+]
0003B1 99440000         891         CMP.W   R4,#00H
0003B5 F202             892         BNE     _78
0003B7 A64143           893         ADDS.B  CS,#01H
0003B7 A64143           893         ADDS.B  CS,#01H
0003BA                  894 _78:
0003BA 8834             895         MOVC.W  R3,[R4+]
0003BC 8E5rrr           897         MOV.W   R5,_meminfo+2
0003BF 8E4rrr           898         MOV.W   R4,_meminfo
0003C2 99400018         899         ADD.W   R4,#018H
0003C6 99510000         900         ADDC.W  R5,#00H
0003CA 0904             901         ADD.W   R0,R4
0003CC 1915             902         ADDC.W  R1,R5
0003CE 8C1F02           903         MOV.W   [R7+2],R1
0003D1 8A0F             904         MOV.W   [R7],R0
0003D3 FE15             905         BR      _60
0003D3 FE1500           905         BR      _60
0003D6                  906 _59:
0003D6 8913             908         MOV.W   R1,R3
0003D8 8902             909         MOV.W   R0,R2
0003DA 99170008         910         XOR.W   R1,#08H
0003DE 862C43           911         MOV.B   CS,R1L
0003E1 8810             912         MOVC.W  R1,[R0+]
0003E3 8941             915         MOV.W   R4,R1
0003E5 8904             916         MOV.W   R0,R4
0003E7 D848             917         LSR.W   R4,#08H
0003E9 7911             920         XOR.W   R1,R1
0003EB E9010100         921         DIVU.D  R0,#0100H
0003EF 8904             922         MOV.W   R0,R4
0003F1 0901             923         ADD.W   R0,R1
0003F3 0960             925         ADD.W   R6,R0
0003F5 99200002         929         ADD.W   R2,#02H
0003F9 99310000         930         ADDC.W  R3,#00H
0003FE                  933 _60:
0003FE 8C5702           934         MOV.W   R5,[R7+2]
000401 8A47             935         MOV.W   R4,[R7]
000403 86AC43           936         MOV.B   CS,R5L
000406 8804             937         MOVC.W  R0,[R4+]
000408 99440000         938         CMP.W   R4,#00H
00040C F202             939         BNE     _79
00040E A64143           940         ADDS.B  CS,#01H
00040E A6414300         940         ADDS.B  CS,#01H
000412                  941 _79:
000412 8814             942         MOVC.W  R1,[R4+]
000414 4931             943         CMP.W   R3,R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
000416 F201             944         BNE     _80
000418 4920             945         CMP.W   R2,R0
000418 4920             945         CMP.W   R2,R0
00041A                  946 _80:
00041A F1DD             947         BCS     _59
00041C 8906             949         MOV.W   R0,R6
00041E B910             950         MOVS.W  R1,#00H
000420 9928rrrr         951         MOV.W   R2,#SOF( _strout )
000424 8942             953         MOV.W   R4,R2
000426 B950             954         MOVS.W  R5,#00H
000428 8935             955         MOV.W   R3,R5
00042A 8924             956         MOV.W   R2,R4
                        957         CALL    _dwordtoa
00042C C4rrrrrr        +957 ;       FCALL   _dwordtoa
000430 8915             959         MOV.W   R1,R5
000432 8904             960         MOV.W   R0,R4
                        961         CALL    _Udr_PutNChar
000434 C4rrrrrr        +961 ;       FCALL   _Udr_PutNChar
000438 9918rrrr         963         MOV.W   R1,#SEG( _NewlineTxt )
00043C 9908rrrr         964         MOV.W   R0,#SOF( _NewlineTxt )
                        965         CALL    _Udr_CPutNChar
000440 C4rrrrrr        +965 ;       FCALL   _Udr_CPutNChar
000444 FE45             967         BR      _74
000446                  969 _61:
000446 8E1rrr           971         MOV.W   R1,_dwordVal1+2
000449 8E0rrr           972         MOV.W   R0,_dwordVal1
00044C 4E1rrr           973         CMP.W   _dwordVal2+2,R1
00044F F202             974         BNE     _81
000451 4E0rrr           975         CMP.W   _dwordVal2,R0
000451 4E0rrr           975         CMP.W   _dwordVal2,R0
000454                  976 _81:
000454 F003             977         BCC     _62
000456 BEr3rr           979         MOV.W   _SCPIError,#03H
000459 FE3B             980         BR      _74
000459 FE3B00           980         BR      _74
00045C                  981 _62:
00045C B920             983         MOV.W   R2,#00H
00045E 8E1rrr           986         MOV.W   _dwordVal1+2,R1
000461 8E0rrr           987         MOV.W   _dwordVal1,R0
000464 8E1rrr           989         MOV.W   R1,_dwordVal1+2
000467 8E0rrr           990         MOV.W   R0,_dwordVal1
00046A FE13             992         BR      _64
00046A FE13             992         BR      _64
00046C                  993 _63:
00046C 8951             995         MOV.W   R5,R1
00046E 8940             996         MOV.W   R4,R0
000470 99570008         997         XOR.W   R5,#08H
000474 86AC43           998         MOV.B   CS,R5L
000477 8854             999         MOVC.W  R5,[R4+]
000479 8935            1002         MOV.W   R3,R5
00047B 8943            1003         MOV.W   R4,R3
00047D D838            1004         LSR.W   R3,#08H
00047F 7955            1007         XOR.W   R5,R5
000481 E9410100        1008         DIVU.D  R4,#0100H
000485 0935            1009         ADD.W   R3,R5
000487 0923            1010         ADD.W   R2,R3
000489 99000002        1014         ADD.W   R0,#02H
00048D 99110000        1015         ADDC.W  R1,#00H
000492                 1018 _64:
000492 4E1rrr          1019         CMP.W   R1,_dwordVal2+2
000495 F202            1020         BNE     _82
000497 4E0rrr          1021         CMP.W   R0,_dwordVal2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
000497 4E0rrr          1021         CMP.W   R0,_dwordVal2
00049A                 1022 _82:
00049A F1E8            1023         BCS     _63
00049C 8902            1025         MOV.W   R0,R2
00049E B910            1026         MOVS.W  R1,#00H
0004A0 9928rrrr        1028         MOV.W   R2,#SOF( _strout )
0004A4 8942            1030         MOV.W   R4,R2
0004A6 B950            1031         MOVS.W  R5,#00H
0004A8 8935            1033         MOV.W   R3,R5
0004AA 8924            1034         MOV.W   R2,R4
                       1035         CALL    _dwordtoa
0004AC C4rrrrrr       +1035 ;       FCALL   _dwordtoa
0004B0 8915            1037         MOV.W   R1,R5
0004B2 8904            1038         MOV.W   R0,R4
                       1039         CALL    _Udr_PutNChar
0004B4 C4rrrrrr       +1039 ;       FCALL   _Udr_PutNChar
0004B8 9918rrrr        1041         MOV.W   R1,#SEG( _NewlineTxt )
0004BC 9908rrrr        1042         MOV.W   R0,#SOF( _NewlineTxt )
                       1043         CALL    _Udr_CPutNChar
0004C0 C4rrrrrr       +1043 ;       FCALL   _Udr_CPutNChar
0004C4 FE05            1045         BR      _74
0004C6                 1047 _65:
0004C6 BEr3rr          1049         MOV.W   _SCPIError,#03H
0004C9 FE03            1051         BR      _74
0004C9 FE0300          1051         BR      _74
0004CC                 1052 _66:
0004CC BEr3rr          1054         MOV.W   _SCPIError,#03H
0004D0                 1056 _74:
0004D0 A974            1058         ADDS.W  R7,#04H
0004D2 2F70            1060         POP.W   R4, R5, R6
0004D4 D680            1062         RET
                       1064         ALIGN   1
                       1066         PUBLIC  _FlashSectorSize
0004D6                 1067 _FlashSectorSize:
0004D6 0F30            1071         PUSH.W  R4, R5
0004D8 96r4rr00        1074         CMP.B   _ParameterType,#00H
0004DC F304            1075         BEQ     _83
0004DE 96r4rr02        1076         CMP.B   _ParameterType,#02H
0004E2 F304            1077         BEQ     _84
0004E4 FE2A            1078         BR      _87
0004E6                 1080 _83:
0004E6 B6r0rr          1082         MOV.B   _ParState,#00H
0004E9 FE2A            1084         BR      _91
0004EC                 1086 _84:
0004EC 860rrr          1088         MOV.B   R0L,_ParState
0004EF F222            1089         BNE     _86
0004F1 860rrr          1091         MOV.B   _ParState,R0L
0004F4 A6r1rr          1092         ADDS.B  _ParState,#01H
0004F7 9908rrrr        1094         MOV.W   R0,#SOF( _Cmd )
0004FB 8940            1095         MOV.W   R4,R0
0004FD B950            1096         MOVS.W  R5,#00H
0004FF 8915            1097         MOV.W   R1,R5
000501 8904            1098         MOV.W   R0,R4
                       1099         CALL    _atoi
000503 C4rrrrrr       +1099 ;       FCALL   _atoi
000507 8E3rrr          1100         MOV.W   R3,_meminfo+2
00050A 8E2rrr          1101         MOV.W   R2,_meminfo
00050D 99200004        1102         ADD.W   R2,#04H
000511 99310000        1103         ADDC.W  R3,#00H
000515 866C43          1104         MOV.B   CS,R3L
000518 8832            1105         MOVC.W  R3,[R2+]
00051A 4903            1106         CMP.W   R0,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
00051C FD04            1107         BLE     _85
00051E 9Er8rr0020      1109         MOV.W   _SCPIError,#020H
000523 FE0D            1110         BR      _91
000523 FE0D00          1110         BR      _91
000526                 1111 _85:
000526 8915            1113         MOV.W   R1,R5
000528 8904            1114         MOV.W   R0,R4
                       1115         CALL    _atoi
00052A C4rrrrrr       +1115 ;       FCALL   _atoi
00052E 860rrr          1116         MOV.B   _byteVal,R0L
000531 FE06            1118         BR      _91
000531 FE0600          1118         BR      _91
000534                 1119 _86:
000534 BEr5rr          1121         MOV.W   _SCPIError,#05H
000537 FE03            1123         BR      _91
00053A                 1125 _87:
00053A BEr5rr          1127         MOV.W   _SCPIError,#05H
00053E                 1129 _91:
00053E 082rrr          1131         MOV     C,_CmdExecute
000541 F024            1132         BCC     _97
000543 8E0rrr          1133         MOV.W   R0,_SCPIError
000546 F221            1134         BNE     _97
000548 082rrr          1136         MOV     C,_CmdRequest
00054B F01D            1137         BCC     _93
00054D 860rrr          1139         MOV.B   R0L,_ParState
000550 F203            1140         BNE     _92
000552 BEr7rr          1142         MOV.W   _SCPIError,#07H
000555 FE1A            1143         BR      _97
000555 FE1A00          1143         BR      _97
000558                 1144 _92:
000558 860rrr          1146         MOV.B   R0L,_byteVal
                       1147         CALL    _flash_get_sector_size
00055B C4rrrrrr       +1147 ;       FCALL   _flash_get_sector_size
00055F 9928rrrr        1148         MOV.W   R2,#SOF( _strout )
000563 8942            1149         MOV.W   R4,R2
000565 B950            1150         MOVS.W  R5,#00H
000567 8935            1151         MOV.W   R3,R5
000569 8924            1152         MOV.W   R2,R4
                       1153         CALL    _dwordtoa
00056B C4rrrrrr       +1153 ;       FCALL   _dwordtoa
00056F 8915            1155         MOV.W   R1,R5
000571 8904            1156         MOV.W   R0,R4
                       1157         CALL    _Udr_PutNChar
000573 C4rrrrrr       +1157 ;       FCALL   _Udr_PutNChar
000577 9918rrrr        1159         MOV.W   R1,#SEG( _NewlineTxt )
00057B 9908rrrr        1160         MOV.W   R0,#SOF( _NewlineTxt )
                       1161         CALL    _Udr_CPutNChar
00057F C4rrrrrr       +1161 ;       FCALL   _Udr_CPutNChar
000583 FE03            1163         BR      _97
000583 FE0300          1163         BR      _97
000586                 1164 _93:
000586 BEr3rr          1166         MOV.W   _SCPIError,#03H
00058A                 1168 _97:
00058A 2F30            1170         POP.W   R4, R5
00058C D680            1172         RET
                       1174         ALIGN   1
                       1176         PUBLIC  _FlashSectorProtectVerify
00058E                 1177 _FlashSectorProtectVerify:
00058E BEr3rr          1182         MOV.W   _SCPIError,#03H
000591 D680            1184         RET
000593 00              1186         ALIGN   1
                       1188         PUBLIC  _FlashSectorErase
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
000594                 1189 _FlashSectorErase:
000594 0F30            1193         PUSH.W  R4, R5
000596 96r4rr00        1198         CMP.B   _ParameterType,#00H
00059A F304            1199         BEQ     _99
00059C 96r4rr02        1200         CMP.B   _ParameterType,#02H
0005A0 F304            1201         BEQ     _100
0005A2 FE2F            1202         BR      _103
0005A4                 1204 _99:
0005A4 B6r0rr          1206         MOV.B   _ParState,#00H
0005A7 FE2F            1208         BR      _107
0005AA                 1210 _100:
0005AA 860rrr          1212         MOV.B   R0L,_ParState
0005AD F227            1213         BNE     _102
0005AF 860rrr          1215         MOV.B   _ParState,R0L
0005B2 A6r1rr          1216         ADDS.B  _ParState,#01H
0005B5 9908rrrr        1218         MOV.W   R0,#SOF( _Cmd )
0005B9 8940            1219         MOV.W   R4,R0
0005BB B950            1220         MOVS.W  R5,#00H
0005BD 8915            1221         MOV.W   R1,R5
0005BF 8904            1222         MOV.W   R0,R4
                       1223         CALL    _atol
0005C1 C4rrrrrr       +1223 ;       FCALL   _atol
0005C5 8E3rrr          1224         MOV.W   R3,_meminfo+2
0005C8 8E2rrr          1225         MOV.W   R2,_meminfo
0005CB 99200004        1226         ADD.W   R2,#04H
0005CF 99310000        1227         ADDC.W  R3,#00H
0005D3 866C43          1228         MOV.B   CS,R3L
0005D6 8832            1229         MOVC.W  R3,[R2+]
0005D8 8923            1230         MOV.W   R2,R3
0005DA 9839            1231         SEXT.W  R3
0005DC 4913            1232         CMP.W   R1,R3
0005DE FB07            1233         BLT     _101
0005E0 FC02            1234         BGT     _115
0005E2 4902            1235         CMP.W   R0,R2
0005E4 F104            1236         BCS     _101
0005E4 F104            1236         BCS     _101
0005E6                 1237 _115:
0005E6 9Er8rr0020      1239         MOV.W   _SCPIError,#020H
0005EB FE0D            1240         BR      _107
0005EB FE0D00          1240         BR      _107
0005EE                 1241 _101:
0005EE 8915            1243         MOV.W   R1,R5
0005F0 8904            1244         MOV.W   R0,R4
                       1245         CALL    _atoi
0005F2 C4rrrrrr       +1245 ;       FCALL   _atoi
0005F6 860rrr          1246         MOV.B   _byteVal,R0L
0005F9 FE06            1248         BR      _107
0005F9 FE0600          1248         BR      _107
0005FC                 1249 _102:
0005FC BEr6rr          1251         MOV.W   _SCPIError,#06H
0005FF FE03            1253         BR      _107
000602                 1255 _103:
000602 BEr5rr          1257         MOV.W   _SCPIError,#05H
000606                 1259 _107:
000606 082rrr          1261         MOV     C,_CmdExecute
000609 F04A            1262         BCC     _114
00060B 8E0rrr          1263         MOV.W   R0,_SCPIError
00060E F247            1264         BNE     _114
000610 082rrr          1266         MOV     C,_CmdRequest
000613 F003            1267         BCC     _108
000615 BEr3rr          1269         MOV.W   _SCPIError,#03H
000618 FE42            1270         BR      _114
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
000618 FE42            1270         BR      _114
00061A                 1271 _108:
00061A 860rrr          1273         MOV.B   R0L,_ParState
00061D F203            1274         BNE     _109
00061F BEr7rr          1276         MOV.W   _SCPIError,#07H
000622 FE3D            1277         BR      _114
000622 FE3D            1277         BR      _114
000624                 1278 _109:
000624 9918rrrr        1280         MOV.W   R1,#SEG( _ErasingSectorTxt )
000628 9908rrrr        1281         MOV.W   R0,#SOF( _ErasingSectorTxt )
                       1282         CALL    _Udr_CPutNChar
00062C C4rrrrrr       +1282 ;       FCALL   _Udr_CPutNChar
000630 910828          1284         MOV.B   R0L,#028H
                       1285         CALL    _Udr_PutChar
000633 C4rrrrrr       +1285 ;       FCALL   _Udr_PutChar
000637 860rrr          1287         MOV.B   R0L,_byteVal
00063A B110            1288         MOVS.B  R0H,#00H
00063C B910            1289         MOVS.W  R1,#00H
00063E 9928rrrr        1290         MOV.W   R2,#SOF( _strout )
000642 8942            1291         MOV.W   R4,R2
000644 B950            1292         MOVS.W  R5,#00H
000646 8935            1293         MOV.W   R3,R5
000648 8924            1294         MOV.W   R2,R4
                       1295         CALL    _dwordtoa
00064A C4rrrrrr       +1295 ;       FCALL   _dwordtoa
00064E 8915            1297         MOV.W   R1,R5
000650 8904            1298         MOV.W   R0,R4
                       1299         CALL    _Udr_PutNChar
000652 C4rrrrrr       +1299 ;       FCALL   _Udr_PutNChar
000656 910829          1301         MOV.B   R0L,#029H
                       1302         CALL    _Udr_PutChar
000659 C4rrrrrr       +1302 ;       FCALL   _Udr_PutChar
00065D 910820          1304         MOV.B   R0L,#020H
                       1305         CALL    _Udr_PutChar
000660 C4rrrrrr       +1305 ;       FCALL   _Udr_PutChar
000664 860rrr          1307         MOV.B   R0L,_byteVal
                       1308         CALL    _flash_sector_erase_int
000667 C4rrrrrr       +1308 ;       FCALL   _flash_sector_erase_int
00066B 8110            1309         MOV.B   R0H,R0L
00066D F30C            1310         BEQ     _110
00066F B110            1312         MOVS.B  R0H,#00H
000671 D902            1313         ASL.W   R0,#02H
000673 B910            1314         MOVS.W  R1,#00H
000675 964842rr        1315         MOV.B   ES,#SEG( __FL_STATUS )
000679 8D10rrrr        1316         MOV.W   R1,[R0+SOF( __FL_STATUS+2 )]
00067D 8D00rrrr        1317         MOV.W   R0,[R0+SOF( __FL_STATUS )]
                       1318         CALL    _Udr_CPutNChar
000681 C4rrrrrr       +1318 ;       FCALL   _Udr_CPutNChar
000681 C4rrrrrr00     +1318 ;       FCALL   _Udr_CPutNChar
000686                 1319 _110:
000686 9918rrrr        1321         MOV.W   R1,#SEG( _ErasedTxt )
00068A 9908rrrr        1322         MOV.W   R0,#SOF( _ErasedTxt )
                       1323         CALL    _Udr_CPutNChar
00068E C4rrrrrr       +1323 ;       FCALL   _Udr_CPutNChar
000692 9918rrrr        1325         MOV.W   R1,#SEG( _NewlineTxt )
000696 9908rrrr        1326         MOV.W   R0,#SOF( _NewlineTxt )
                       1327         CALL    _Udr_CPutNChar
00069A C4rrrrrr       +1327 ;       FCALL   _Udr_CPutNChar
00069E                 1329 _114:
00069E 2F30            1331         POP.W   R4, R5
0006A0 D680            1333         RET
                       1335         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
                       1337         PUBLIC  _FlashBankErase
0006A2                 1338 _FlashBankErase:
0006A2 0F30            1342         PUSH.W  R4, R5
0006A4 A97C            1344         ADDS.W  R7,#0CH
0006A6 96r4rr00        1351         CMP.B   _ParameterType,#00H
0006AA F304            1352         BEQ     _116
0006AC 96r4rr02        1353         CMP.B   _ParameterType,#02H
0006B0 F304            1354         BEQ     _117
0006B2 FE25            1355         BR      _120
0006B4                 1357 _116:
0006B4 B6r0rr          1359         MOV.B   _ParState,#00H
0006B7 FE25            1361         BR      _124
0006BA                 1363 _117:
0006BA 860rrr          1365         MOV.B   R0L,_ParState
0006BD F21D            1366         BNE     _119
0006BF 860rrr          1368         MOV.B   _ParState,R0L
0006C2 A6r1rr          1369         ADDS.B  _ParState,#01H
0006C5 9908rrrr        1371         MOV.W   R0,#SOF( _Cmd )
0006C9 8940            1372         MOV.W   R4,R0
0006CB B950            1373         MOVS.W  R5,#00H
0006CD 8915            1374         MOV.W   R1,R5
0006CF 8904            1375         MOV.W   R0,R4
                       1376         CALL    _atol
0006D1 C4rrrrrr       +1376 ;       FCALL   _atol
0006D5 99140000        1377         CMP.W   R1,#00H
0006D9 F203            1378         BNE     _134
0006DB 99040002        1379         CMP.W   R0,#02H
0006DB 9904000200      1379         CMP.W   R0,#02H
0006E0                 1380 _134:
0006E0 F304            1381         BEQ     _118
0006E2 9Er8rr0020      1383         MOV.W   _SCPIError,#020H
0006E7 FE0D            1384         BR      _124
0006E7 FE0D00          1384         BR      _124
0006EA                 1385 _118:
0006EA 8915            1387         MOV.W   R1,R5
0006EC 8904            1388         MOV.W   R0,R4
                       1389         CALL    _atoi
0006EE C4rrrrrr       +1389 ;       FCALL   _atoi
0006F2 860rrr          1390         MOV.B   _byteVal,R0L
0006F5 FE06            1392         BR      _124
0006F5 FE0600          1392         BR      _124
0006F8                 1393 _119:
0006F8 BEr6rr          1395         MOV.W   _SCPIError,#06H
0006FB FE03            1397         BR      _124
0006FE                 1399 _120:
0006FE BEr5rr          1401         MOV.W   _SCPIError,#05H
000702                 1403 _124:
000702 082rrr          1405         MOV     C,_CmdExecute
000705 F057            1406         BCC     _133
000707 8E0rrr          1407         MOV.W   R0,_SCPIError
00070A F254            1408         BNE     _133
00070C 082rrr          1410         MOV     C,_CmdRequest
00070F F003            1411         BCC     _125
000711 BEr3rr          1413         MOV.W   _SCPIError,#03H
000714 FE4F            1414         BR      _133
000714 FE4F            1414         BR      _133
000716                 1415 _125:
000716 860rrr          1417         MOV.B   R0L,_ParState
000719 F203            1418         BNE     _126
00071B BEr7rr          1420         MOV.W   _SCPIError,#07H
00071E FE4A            1421         BR      _133
00071E FE4A            1421         BR      _133
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
000720                 1422 _126:
000720 9918rrrr        1424         MOV.W   R1,#SEG( _ErasingSectorTxt )
000724 9908rrrr        1425         MOV.W   R0,#SOF( _ErasingSectorTxt )
                       1426         CALL    _Udr_CPutNChar
000728 C4rrrrrr       +1426 ;       FCALL   _Udr_CPutNChar
00072C 918800          1428         MOV.B   R4L,#00H
00072F FE28            1430         BR      _129
00072F FE2800          1430         BR      _129
000732                 1431 _127:
000732 910828          1433         MOV.B   R0L,#028H
                       1434         CALL    _Udr_PutChar
000735 C4rrrrrr       +1434 ;       FCALL   _Udr_PutChar
000739 8108            1436         MOV.B   R0L,R4L
00073B B110            1437         MOVS.B  R0H,#00H
00073D B910            1438         MOVS.W  R1,#00H
00073F 9928rrrr        1439         MOV.W   R2,#SOF( _strout )
000743 B930            1440         MOVS.W  R3,#00H
000745 8C3F02          1441         MOV.W   [R7+2],R3
000748 8A2F            1442         MOV.W   [R7],R2
                       1443         CALL    _dwordtoa
00074A C4rrrrrr       +1443 ;       FCALL   _dwordtoa
00074E 8C1702          1445         MOV.W   R1,[R7+2]
000751 8A07            1446         MOV.W   R0,[R7]
                       1447         CALL    _Udr_PutNChar
000753 C4rrrrrr       +1447 ;       FCALL   _Udr_PutNChar
000757 910829          1449         MOV.B   R0L,#029H
                       1450         CALL    _Udr_PutChar
00075A C4rrrrrr       +1450 ;       FCALL   _Udr_PutChar
00075E 8108            1451         MOV.B   R0L,R4L
                       1455         CALL    _flash_sector_erase_int
000760 C4rrrrrr       +1455 ;       FCALL   _flash_sector_erase_int
000764 8110            1458         MOV.B   R0H,R0L
000766 F30B            1459         BEQ     _128
000768 B110            1461         MOVS.B  R0H,#00H
00076A D902            1462         ASL.W   R0,#02H
00076C B910            1463         MOVS.W  R1,#00H
00076E 964842rr        1464         MOV.B   ES,#SEG( __FL_STATUS )
000772 8D10rrrr        1465         MOV.W   R1,[R0+SOF( __FL_STATUS+2 )]
000776 8D00rrrr        1466         MOV.W   R0,[R0+SOF( __FL_STATUS )]
                       1467         CALL    _Udr_CPutNChar
00077A C4rrrrrr       +1467 ;       FCALL   _Udr_CPutNChar
00077A C4rrrrrr       +1467 ;       FCALL   _Udr_CPutNChar
00077E                 1468 _128:
00077E A181            1470         ADDS.B  R4L,#01H
000780                 1473 _129:
000780 8148            1474         MOV.B   R2L,R4L
000782 B150            1475         MOVS.B  R2H,#00H
000784 8E1rrr          1476         MOV.W   R1,_meminfo+2
000787 8E0rrr          1477         MOV.W   R0,_meminfo
00078A 99000004        1478         ADD.W   R0,#04H
00078E 99110000        1479         ADDC.W  R1,#00H
000792 862C43          1480         MOV.B   CS,R1L
000795 8810            1481         MOVC.W  R1,[R0+]
000797 4921            1482         CMP.W   R2,R1
000799 FBCC            1483         BLT     _127
00079B 9918rrrr        1485         MOV.W   R1,#SEG( _ErasedTxt )
00079F 9908rrrr        1486         MOV.W   R0,#SOF( _ErasedTxt )
                       1487         CALL    _Udr_CPutNChar
0007A3 C4rrrrrr       +1487 ;       FCALL   _Udr_CPutNChar
0007A7 9918rrrr        1489         MOV.W   R1,#SEG( _NewlineTxt )
0007AB 9908rrrr        1490         MOV.W   R0,#SOF( _NewlineTxt )
                       1491         CALL    _Udr_CPutNChar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
0007AF C4rrrrrr       +1491 ;       FCALL   _Udr_CPutNChar
0007B4                 1493 _133:
0007B4 A974            1495         ADDS.W  R7,#04H
0007B6 2F30            1497         POP.W   R4, R5
0007B8 D680            1499         RET
                       1502         ALIGN   1
                       1504         PUBLIC  _FlashRead
0007BA                 1505 _FlashRead:
0007BA 0F70            1509         PUSH.W  R4, R5, R6
0007BC A978            1511         ADDS.W  R7,#08H
0007BE 96r4rr00        1522         CMP.B   _ParameterType,#00H
0007C2 F304            1523         BEQ     _136
0007C4 96r4rr02        1524         CMP.B   _ParameterType,#02H
0007C8 F304            1525         BEQ     _137
0007CA FE47            1526         BR      _143
0007CC                 1528 _136:
0007CC B6r0rr          1530         MOV.B   _ParState,#00H
0007CF FE47            1532         BR      _149
0007D2                 1534 _137:
0007D2 96r4rr00        1536         CMP.B   _ParState,#00H
0007D6 F304            1537         BEQ     _138
0007D8 96r4rr01        1538         CMP.B   _ParState,#01H
0007DC F31E            1539         BEQ     _140
0007DE FE3A            1540         BR      _142
0007E0                 1542 _138:
0007E0 A6r1rr          1544         ADDS.B  _ParState,#01H
0007E3 9908rrrr        1546         MOV.W   R0,#SOF( _Cmd )
0007E7 8940            1547         MOV.W   R4,R0
0007E9 B950            1548         MOVS.W  R5,#00H
0007EB 8915            1549         MOV.W   R1,R5
0007ED 8904            1550         MOV.W   R0,R4
                       1551         CALL    _atol
0007EF C4rrrrrr       +1551 ;       FCALL   _atol
0007F3 9914000F        1552         CMP.W   R1,#0FH
0007F7 FB09            1553         BLT     _139
0007F9 FC04            1554         BGT     _170
0007FB 9904FFFF        1555         CMP.W   R0,#0FFFFH
0007FF F905            1556         BL      _139
0007FF F90500          1556         BL      _139
000802                 1557 _170:
000802 9Er8rr0020      1559         MOV.W   _SCPIError,#020H
000807 FE2B            1560         BR      _149
000807 FE2B00          1560         BR      _149
00080A                 1561 _139:
00080A 8915            1563         MOV.W   R1,R5
00080C 8904            1564         MOV.W   R0,R4
                       1565         CALL    _atol
00080E C4rrrrrr       +1565 ;       FCALL   _atol
000812 8E1rrr          1566         MOV.W   _dwordVal1+2,R1
000815 8E0rrr          1567         MOV.W   _dwordVal1,R0
000818 FE22            1569         BR      _149
00081A                 1571 _140:
00081A A6r1rr          1573         ADDS.B  _ParState,#01H
00081D 9908rrrr        1575         MOV.W   R0,#SOF( _Cmd )
000821 8940            1576         MOV.W   R4,R0
000823 B950            1577         MOVS.W  R5,#00H
000825 8915            1578         MOV.W   R1,R5
000827 8904            1579         MOV.W   R0,R4
                       1580         CALL    _atol
000829 C4rrrrrr       +1580 ;       FCALL   _atol
00082D 9914000F        1581         CMP.W   R1,#0FH
000831 FB09            1582         BLT     _141
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
000833 FC04            1583         BGT     _171
000835 9904FFFF        1584         CMP.W   R0,#0FFFFH
000839 F905            1585         BL      _141
000839 F90500          1585         BL      _141
00083C                 1586 _171:
00083C 9Er8rr0020      1588         MOV.W   _SCPIError,#020H
000841 FE0E            1589         BR      _149
000841 FE0E00          1589         BR      _149
000844                 1590 _141:
000844 8915            1592         MOV.W   R1,R5
000846 8904            1593         MOV.W   R0,R4
                       1594         CALL    _atol
000848 C4rrrrrr       +1594 ;       FCALL   _atol
00084C 8E1rrr          1595         MOV.W   _dwordVal2+2,R1
00084F 8E0rrr          1596         MOV.W   _dwordVal2,R0
000852 FE05            1598         BR      _149
000854                 1600 _142:
000854 BEr5rr          1602         MOV.W   _SCPIError,#05H
000857 FE03            1604         BR      _149
00085A                 1606 _143:
00085A BEr5rr          1608         MOV.W   _SCPIError,#05H
00085E                 1610 _149:
00085E 082rrr          1612         MOV     C,_CmdExecute
                       1613         BCC     _169
000861 F102           +1613 ;       BCS     _LG_188
000863 D50185         +1613 ;       JMP.L   _169
000863 D50185         +1613 ;       JMP.L   _169
000866                +1613 _LG_188:
000866 8E0rrr          1614         MOV.W   R0,_SCPIError
                       1615         BNE     _169
000869 F302           +1615 ;       BEQ     _LG_190
00086B D50181         +1615 ;       JMP.L   _169
00086B D50181         +1615 ;       JMP.L   _169
00086E                +1615 _LG_190:
00086E 082rrr          1617         MOV     C,_CmdRequest
                       1618         BCC     _163
000871 F102           +1618 ;       BCS     _LG_192
000873 D5017B         +1618 ;       JMP.L   _163
000873 D5017B         +1618 ;       JMP.L   _163
000876                +1618 _LG_192:
000876 864rrr          1620         MOV.B   R2L,_ParState
000879 F204            1621         BNE     _150
00087B BEr7rr          1623         MOV.W   _SCPIError,#07H
                       1624         BR      _169
00087E D50178         +1624         JMP.L   _169
00087E D5017800       +1624         JMP.L   _169
000882                 1625 _150:
000882 914402          1627         CMP.B   R2L,#02H
000885 F904            1628         BL      _151
000887 BEr3rr          1630         MOV.W   _SCPIError,#03H
                       1631         BR      _169
00088A D50172         +1631         JMP.L   _169
00088A D5017200       +1631         JMP.L   _169
00088E                 1632 _151:
00088E 8E1rrr          1634         MOV.W   R1,_dwordVal1+2
000891 8E0rrr          1635         MOV.W   R0,_dwordVal1
000894 99050001        1636         AND.W   R0,#01H
000898 99150000        1637         AND.W   R1,#00H
00089C 6910            1638         OR.W    R1,R0
00089E F305            1639         BEQ     _152
0008A0 9Er2rr0001      1641         SUB.W   _dwordVal1,#01H
0008A5 9Er3rr0000      1642         SUBB.W  _dwordVal1+2,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
0008A5 9Er3rr0000      1642         SUBB.W  _dwordVal1+2,#00H
0008AA                 1643 _152:
0008AA 864rrr          1645         MOV.B   _ParState,R2L
0008AD 96r4rr01        1646         CMP.B   _ParState,#01H
0008B1 F20B            1647         BNE     _153
0008B3 8E1rrr          1649         MOV.W   R1,_dwordVal1+2
0008B6 8E0rrr          1650         MOV.W   R0,_dwordVal1
0008B9 99000020        1651         ADD.W   R0,#020H
0008BD 99110000        1652         ADDC.W  R1,#00H
0008C1 8E1rrr          1653         MOV.W   _dwordVal2+2,R1
0008C4 8E0rrr          1654         MOV.W   _dwordVal2,R0
0008C4 8E0rrr00        1654         MOV.W   _dwordVal2,R0
0008C8                 1655 _153:
0008C8 8E1rrr          1657         MOV.W   R1,_dwordVal2+2
0008CB 8E0rrr          1658         MOV.W   R0,_dwordVal2
0008CE 99050001        1659         AND.W   R0,#01H
0008D2 99150000        1660         AND.W   R1,#00H
0008D6 6910            1661         OR.W    R1,R0
0008D8 F305            1662         BEQ     _154
0008DA 9Er2rr0001      1664         SUB.W   _dwordVal2,#01H
0008DF 9Er3rr0000      1665         SUBB.W  _dwordVal2+2,#00H
0008DF 9Er3rr0000      1665         SUBB.W  _dwordVal2+2,#00H
0008E4                 1666 _154:
0008E4 8E1rrr          1668         MOV.W   R1,_dwordVal1+2
0008E7 8E0rrr          1669         MOV.W   R0,_dwordVal1
0008EA 4E1rrr          1670         CMP.W   _dwordVal2+2,R1
0008ED F202            1671         BNE     _174
0008EF 4E0rrr          1672         CMP.W   _dwordVal2,R0
0008EF 4E0rrr          1672         CMP.W   _dwordVal2,R0
0008F2                 1673 _174:
0008F2 F003            1674         BCC     _155
0008F4 BEr3rr          1676         MOV.W   _SCPIError,#03H
                       1677         BR      _169
0008F7 D5013B         +1677         JMP.L   _169
0008F7 D5013B         +1677         JMP.L   _169
0008FA                 1678 _155:
0008FA 9918rrrr        1680         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
0008FE 9908rrrr        1681         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1682         CALL    _Udr_CPutNChar
000902 C4rrrrrr       +1682 ;       FCALL   _Udr_CPutNChar
000906 8E5rrr          1684         MOV.W   R5,_dwordVal1+2
000909 8E4rrr          1685         MOV.W   R4,_dwordVal1
00090C DC50            1686         LSR.D   R4,#010H
00090E 9908rrrr        1689         MOV.W   R0,#SOF( _strout )
000912 8920            1690         MOV.W   R2,R0
000914 B930            1691         MOVS.W  R3,#00H
000916 8C3F06          1692         MOV.W   [R7+6],R3
000919 8C2F04          1693         MOV.W   [R7+4],R2
00091C 8904            1694         MOV.W   R0,R4
                       1695         CALL    _wordtohex
00091E C4rrrrrr       +1695 ;       FCALL   _wordtohex
000922 8C1706          1696         MOV.W   R1,[R7+6]
000925 8C0704          1697         MOV.W   R0,[R7+4]
                       1699         CALL    _Udr_PutNChar
000928 C4rrrrrr       +1699 ;       FCALL   _Udr_PutNChar
00092C 8108            1702         MOV.B   R0L,R4L
00092E A106            1703         ADDS.B  R0L,#06H
000930 9107FF          1704         XOR.B   R0L,#0FFH
000933 A101            1705         ADDS.B  R0L,#01H
000935 8C3706          1706         MOV.W   R3,[R7+6]
000938 8C2704          1707         MOV.W   R2,[R7+4]
                       1708         CALL    _bytetohex
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
00093B C4rrrrrr       +1708 ;       FCALL   _bytetohex
00093F 8C1706          1709         MOV.W   R1,[R7+6]
000942 8C0704          1710         MOV.W   R0,[R7+4]
                       1712         CALL    _Udr_PutNChar
000945 C4rrrrrr       +1712 ;       FCALL   _Udr_PutNChar
000949 9918rrrr        1714         MOV.W   R1,#SEG( _NewlineTxt )
00094D 9908rrrr        1715         MOV.W   R0,#SOF( _NewlineTxt )
                       1716         CALL    _Udr_CPutNChar
000951 C4rrrrrr       +1716 ;       FCALL   _Udr_CPutNChar
000955 91D800          1718         MOV.B   R6H,#00H
000958                 1721 _156:
000958 8E1rrr          1723         MOV.W   R1,_dwordVal1+2
00095B 8E0rrr          1724         MOV.W   R0,_dwordVal1
00095E 818D            1725         MOV.B   R4L,R6H
000960 B190            1726         MOVS.B  R4H,#00H
000962 B950            1727         MOVS.W  R5,#00H
000964 8931            1728         MOV.W   R3,R1
000966 8920            1729         MOV.W   R2,R0
000968 0924            1730         ADD.W   R2,R4
00096A 1935            1731         ADDC.W  R3,R5
00096C 99250000        1732         AND.W   R2,#00H
000970 99350001        1733         AND.W   R3,#01H
000974 99050000        1734         AND.W   R0,#00H
000978 99150001        1735         AND.W   R1,#01H
00097C 4931            1736         CMP.W   R3,R1
00097E F201            1737         BNE     _175
000980 4920            1738         CMP.W   R2,R0
000980 4920            1738         CMP.W   R2,R0
000982                 1739 _175:
000982 F32D            1740         BEQ     _157
000984 9918rrrr        1741         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
000988 9908rrrr        1742         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1744         CALL    _Udr_CPutNChar
00098C C4rrrrrr       +1744 ;       FCALL   _Udr_CPutNChar
000990 8E1rrr          1746         MOV.W   R1,_dwordVal1+2
000993 8E0rrr          1747         MOV.W   R0,_dwordVal1
000996 0904            1748         ADD.W   R0,R4
000998 1915            1749         ADDC.W  R1,R5
00099A DC10            1750         LSR.D   R0,#010H
00099C 8C3706          1752         MOV.W   R3,[R7+6]
00099F 8C2704          1753         MOV.W   R2,[R7+4]
0009A2 8960            1754         MOV.W   R6,R0
0009A4 8906            1755         MOV.W   R0,R6
                       1760         CALL    _wordtohex
0009A6 C4rrrrrr       +1760 ;       FCALL   _wordtohex
0009AA 8C1706          1761         MOV.W   R1,[R7+6]
0009AD 8C0704          1762         MOV.W   R0,[R7+4]
                       1764         CALL    _Udr_PutNChar
0009B0 C4rrrrrr       +1764 ;       FCALL   _Udr_PutNChar
0009B4 810C            1767         MOV.B   R0L,R6L
0009B6 A106            1768         ADDS.B  R0L,#06H
0009B8 9107FF          1769         XOR.B   R0L,#0FFH
0009BB A101            1770         ADDS.B  R0L,#01H
0009BD 8C3706          1771         MOV.W   R3,[R7+6]
0009C0 8C2704          1772         MOV.W   R2,[R7+4]
                       1773         CALL    _bytetohex
0009C3 C4rrrrrr       +1773 ;       FCALL   _bytetohex
0009C7 8C1706          1774         MOV.W   R1,[R7+6]
0009CA 8C0704          1775         MOV.W   R0,[R7+4]
                       1777         CALL    _Udr_PutNChar
0009CD C4rrrrrr       +1777 ;       FCALL   _Udr_PutNChar
0009D1 9918rrrr        1778         MOV.W   R1,#SEG( _NewlineTxt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
0009D5 9908rrrr        1779         MOV.W   R0,#SOF( _NewlineTxt )
                       1781         CALL    _Udr_CPutNChar
0009D9 C4rrrrrr       +1781 ;       FCALL   _Udr_CPutNChar
0009DE                 1783 _157:
0009DE 0E4rrr          1785         ADD.W   _dwordVal1,R4
0009E1 1E5rrr          1786         ADDC.W  _dwordVal1+2,R5
0009E4 8E5rrr          1788         MOV.W   R5,_dwordVal2+2
0009E7 8E4rrr          1789         MOV.W   R4,_dwordVal2
0009EA 8E3rrr          1790         MOV.W   R3,_dwordVal1+2
0009ED 8E2rrr          1791         MOV.W   R2,_dwordVal1
0009F0 8915            1792         MOV.W   R1,R5
0009F2 8904            1793         MOV.W   R0,R4
0009F4 2E0rrr          1794         SUB.W   R0,_dwordVal1
0009F7 3E1rrr          1795         SUBB.W  R1,_dwordVal1+2
0009FA 99140000        1796         CMP.W   R1,#00H
0009FE F202            1797         BNE     _176
000A00 99040020        1798         CMP.W   R0,#020H
000A00 99040020        1798         CMP.W   R0,#020H
000A04                 1799 _176:
000A04 F903            1800         BL      _158
000A06 91D820          1802         MOV.B   R6H,#020H
000A09 FE05            1804         BR      _159
000A09 FE0500          1804         BR      _159
000A0C                 1805 _158:
000A0C 8913            1807         MOV.W   R1,R3
000A0E 8902            1808         MOV.W   R0,R2
000A10 2180            1809         SUB.B   R4L,R0L
000A12 81D8            1810         MOV.B   R6H,R4L
000A14                 1813 _159:
000A14 810D            1815         MOV.B   R0L,R6H
000A16 B110            1816         MOVS.B  R0H,#00H
000A18 B910            1817         MOVS.W  R1,#00H
000A1A 0902            1818         ADD.W   R0,R2
000A1C 1913            1819         ADDC.W  R1,R3
000A1E 8951            1820         MOV.W   R5,R1
000A20 8940            1821         MOV.W   R4,R0
000A22 99450000        1822         AND.W   R4,#00H
000A26 99550001        1823         AND.W   R5,#01H
000A2A 8913            1824         MOV.W   R1,R3
000A2C 8902            1825         MOV.W   R0,R2
000A2E 99050000        1826         AND.W   R0,#00H
000A32 99150001        1827         AND.W   R1,#01H
000A36 4951            1828         CMP.W   R5,R1
000A38 F201            1829         BNE     _177
000A3A 4940            1830         CMP.W   R4,R0
000A3A 4940            1830         CMP.W   R4,R0
000A3C                 1831 _177:
000A3C F306            1832         BEQ     _160
000A3E 8104            1834         MOV.B   R0L,R2L
000A40 A100            1835         ADDS.B  R0L,#00H
000A42 910500          1836         AND.B   R0L,#00H
000A45 2104            1837         SUB.B   R0L,R2L
000A47 81D0            1838         MOV.B   R6H,R0L
000A4A                 1841 _160:
000A4A 91083A          1843         MOV.B   R0L,#03AH
                       1844         CALL    _Udr_PutChar
000A4D C4rrrrrr       +1844 ;       FCALL   _Udr_PutChar
000A51 8C3706          1846         MOV.W   R3,[R7+6]
000A54 8C2704          1847         MOV.W   R2,[R7+4]
000A57 810D            1848         MOV.B   R0L,R6H
                       1851         CALL    _bytetohex
000A59 C4rrrrrr       +1851 ;       FCALL   _bytetohex
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
000A5D 8C1706          1854         MOV.W   R1,[R7+6]
000A60 8C0704          1855         MOV.W   R0,[R7+4]
                       1857         CALL    _Udr_PutNChar
000A63 C4rrrrrr       +1857 ;       FCALL   _Udr_PutNChar
000A67 8E1rrr          1859         MOV.W   R1,_dwordVal1+2
000A6A 8E0rrr          1860         MOV.W   R0,_dwordVal1
000A6D B931            1861         MOV.W   R3,#01H
000A6F B920            1862         MOV.W   R2,#00H
000A71 C4rrrrrr        1863         FCALL   __UMODL
000A75 8951            1864         MOV.W   R5,R1
000A77 8940            1865         MOV.W   R4,R0
000A79 8C3706          1867         MOV.W   R3,[R7+6]
000A7C 8C2704          1868         MOV.W   R2,[R7+4]
000A7F 8904            1869         MOV.W   R0,R4
                       1871         CALL    _wordtohex
000A81 C4rrrrrr       +1871 ;       FCALL   _wordtohex
000A85 8C1706          1872         MOV.W   R1,[R7+6]
000A88 8C0704          1873         MOV.W   R0,[R7+4]
                       1875         CALL    _Udr_PutNChar
000A8B C4rrrrrr       +1875 ;       FCALL   _Udr_PutNChar
000A8F 910830          1877         MOV.B   R0L,#030H
                       1878         CALL    _Udr_PutChar
000A92 C4rrrrrr       +1878 ;       FCALL   _Udr_PutChar
000A96 910830          1880         MOV.B   R0L,#030H
                       1881         CALL    _Udr_PutChar
000A99 C4rrrrrr       +1881 ;       FCALL   _Udr_PutChar
000A9D 8914            1883         MOV.W   R1,R4
000A9F D818            1884         LSR.W   R1,#08H
000AA1 7955            1885         XOR.W   R5,R5
000AA3 E9410100        1886         DIVU.D  R4,#0100H
000AA7 012A            1887         ADD.B   R1L,R5L
000AA9 912020          1888         ADD.B   R1L,#020H
000AAC 81C2            1889         MOV.B   R6L,R1L
000AAE B910            1892         MOV.W   R1,#00H
000AB0 B900            1893         MOV.W   R0,#00H
000AB2 FE2A            1895         BR      _162
000AB2 FE2A            1895         BR      _162
000AB4                 1896 _161:
000AB4 8E5rrr          1898         MOV.W   R5,_dwordVal1+2
000AB7 8E4rrr          1899         MOV.W   R4,_dwordVal1
000ABA 8C1F02          1901         MOV.W   [R7+2],R1
000ABD 8A0F            1902         MOV.W   [R7],R0
000ABF 0940            1903         ADD.W   R4,R0
000AC1 1951            1904         ADDC.W  R5,R1
000AC3 99570008        1907         XOR.W   R5,#08H
000AC7 86AC43          1908         MOV.B   CS,R5L
000ACA 8854            1909         MOVC.W  R5,[R4+]
000ACC 8945            1912         MOV.W   R4,R5
000ACE D848            1913         LSR.W   R4,#08H
000AD0 8905            1914         MOV.W   R0,R5
000AD2 D908            1915         ASL.W   R0,#08H
000AD4 0904            1916         ADD.W   R0,R4
000AD6 8C3706          1917         MOV.W   R3,[R7+6]
000AD9 8C2704          1918         MOV.W   R2,[R7+4]
                       1919         CALL    _wordtohex
000ADC C4rrrrrr       +1919 ;       FCALL   _wordtohex
000AE0 8914            1921         MOV.W   R1,R4
000AE2 8945            1922         MOV.W   R4,R5
000AE4 7955            1923         XOR.W   R5,R5
000AE6 E9410100        1924         DIVU.D  R4,#0100H
000AEA 8102            1927         MOV.B   R0L,R1L
000AEC 010A            1928         ADD.B   R0L,R5L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
000AEE 01C0            1929         ADD.B   R6L,R0L
000AF0 8C1706          1932         MOV.W   R1,[R7+6]
000AF3 8C0704          1933         MOV.W   R0,[R7+4]
                       1935         CALL    _Udr_PutNChar
000AF6 C4rrrrrr       +1935 ;       FCALL   _Udr_PutNChar
000AFA 8C1702          1937         MOV.W   R1,[R7+2]
000AFD 8A07            1938         MOV.W   R0,[R7]
000AFF 99000002        1939         ADD.W   R0,#02H
000B03 99110000        1940         ADDC.W  R1,#00H
000B08                 1945 _162:
000B08 818D            1946         MOV.B   R4L,R6H
000B0A B190            1947         MOVS.B  R4H,#00H
000B0C B950            1948         MOVS.W  R5,#00H
000B0E 4915            1950         CMP.W   R1,R5
000B10 F201            1951         BNE     _178
000B12 4904            1952         CMP.W   R0,R4
000B12 4904            1952         CMP.W   R0,R4
000B14                 1953 _178:
000B14 F1CF            1954         BCS     _161
000B16 810C            1956         MOV.B   R0L,R6L
000B18 9107FF          1957         XOR.B   R0L,#0FFH
000B1B A101            1962         ADDS.B  R0L,#01H
000B1D 8C3706          1963         MOV.W   R3,[R7+6]
000B20 8C2704          1964         MOV.W   R2,[R7+4]
                       1965         CALL    _bytetohex
000B23 C4rrrrrr       +1965 ;       FCALL   _bytetohex
000B27 8C1706          1966         MOV.W   R1,[R7+6]
000B2A 8C0704          1967         MOV.W   R0,[R7+4]
                       1969         CALL    _Udr_PutNChar
000B2D C4rrrrrr       +1969 ;       FCALL   _Udr_PutNChar
000B31 9918rrrr        1970         MOV.W   R1,#SEG( _NewlineTxt )
000B35 9908rrrr        1971         MOV.W   R0,#SOF( _NewlineTxt )
                       1973         CALL    _Udr_CPutNChar
000B39 C4rrrrrr       +1973 ;       FCALL   _Udr_CPutNChar
000B3D 0E4rrr          1975         ADD.W   R4,_dwordVal1
000B40 1E5rrr          1976         ADDC.W  R5,_dwordVal1+2
000B43 4E5rrr          1977         CMP.W   R5,_dwordVal2+2
000B46 F202            1978         BNE     _179
000B48 4E4rrr          1979         CMP.W   R4,_dwordVal2
000B48 4E4rrr00        1979         CMP.W   R4,_dwordVal2
000B4C                 1980 _179:
                       1981         BCS     _156
000B4C F002           +1981 ;       BCC     _LG_226
000B4E D5FF04         +1981 ;       JMP.L   _156
000B4E D5FF0400       +1981 ;       JMP.L   _156
000B52                +1981 _LG_226:
000B52 9918rrrr        1983         MOV.W   R1,#SEG( _EndOfFileRecTxt )
000B56 9908rrrr        1984         MOV.W   R0,#SOF( _EndOfFileRecTxt )
                       1985         CALL    _Udr_CPutNChar
000B5A C4rrrrrr       +1985 ;       FCALL   _Udr_CPutNChar
000B5E 9918rrrr        1987         MOV.W   R1,#SEG( _NewlineTxt )
000B62 9908rrrr        1988         MOV.W   R0,#SOF( _NewlineTxt )
                       1989         CALL    _Udr_CPutNChar
000B66 C4rrrrrr       +1989 ;       FCALL   _Udr_CPutNChar
000B6A FE02            1991         BR      _169
000B6A FE02            1991         BR      _169
000B6C                 1992 _163:
000B6C BEr3rr          1994         MOV.W   _SCPIError,#03H
000B70                 1996 _169:
000B70 99700008        1998         ADD.W   R7,#08H
000B74 2F70            2000         POP.W   R4, R5, R6
000B76 D680            2002         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
                       2005         ALIGN   1
                       2007         PUBLIC  _FindParameter
000B78                 2008 _FindParameter:
000B78 0F70            2020         PUSH.W  R4, R5, R6
000B7A A97C            2022         ADDS.W  R7,#0CH
000B7C 8951            2026         MOV.W   R5,R1
000B7E 8940            2027         MOV.W   R4,R0
000B80 91C800          2035         MOV.B   R6L,#00H
000B83 FE3A            2038         BR      _181
000B83 FE3A00          2038         BR      _181
000B86                 2039 _180:
000B86 8C1F02          2043         MOV.W   [R7+2],R1
000B89 8A0F            2044         MOV.W   [R7],R0
000B8B 862C43          2045         MOV.B   CS,R1L
000B8E 8820            2046         MOVC.W  R2,[R0+]
000B90 99040000        2047         CMP.W   R0,#00H
000B94 F202            2048         BNE     _185
000B96 A64143          2049         ADDS.B  CS,#01H
000B96 A6414300        2049         ADDS.B  CS,#01H
000B9A                 2050 _185:
000B9A 8830            2051         MOVC.W  R3,[R0+]
000B9C 8915            2054         MOV.W   R1,R5
000B9E 8904            2055         MOV.W   R0,R4
                       2058         CALL    _Cstrcmp
000BA0 C4rrrrrr       +2058 ;       FCALL   _Cstrcmp
000BA4 6900            2061         OR.W    R0,R0
000BA6 F32C            2062         BEQ     _184
000BA8 8C1702          2063         MOV.W   R1,[R7+2]
000BAB 8A07            2064         MOV.W   R0,[R7]
000BAD 99000004        2065         ADD.W   R0,#04H
000BB1 99110000        2066         ADDC.W  R1,#00H
000BB5 862C43          2067         MOV.B   CS,R1L
000BB8 8820            2068         MOVC.W  R2,[R0+]
000BBA 99040000        2069         CMP.W   R0,#00H
000BBE F202            2070         BNE     _186
000BC0 A64143          2071         ADDS.B  CS,#01H
000BC0 A6414300        2071         ADDS.B  CS,#01H
000BC4                 2072 _186:
000BC4 8830            2073         MOVC.W  R3,[R0+]
000BC6 8915            2074         MOV.W   R1,R5
000BC8 8904            2075         MOV.W   R0,R4
                       2078         CALL    _Cstrcmp
000BCA C4rrrrrr       +2078 ;       FCALL   _Cstrcmp
000BCE 6900            2081         OR.W    R0,R0
000BD0 F317            2082         BEQ     _184
000BD2 8C1702          2084         MOV.W   R1,[R7+2]
000BD5 8A07            2085         MOV.W   R0,[R7]
000BD7 99000008        2086         ADD.W   R0,#08H
000BDB 99110000        2087         ADDC.W  R1,#00H
000BDF 862C43          2091         MOV.B   CS,R1L
000BE2 8820            2092         MOVC.W  R2,[R0+]
000BE4 99040000        2093         CMP.W   R0,#00H
000BE8 F202            2094         BNE     _187
000BEA A64143          2095         ADDS.B  CS,#01H
000BEA A6414300        2095         ADDS.B  CS,#01H
000BEE                 2096 _187:
000BEE 8830            2097         MOVC.W  R3,[R0+]
000BF0 91C4FF          2100         CMP.B   R6L,#0FFH
000BF3 F006            2101         BCC     _184
000BF5 A1C1            2103         ADDS.B  R6L,#01H
000BF8                 2107 _181:
000BF8 8913            2108         MOV.W   R1,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
000BFA 8902            2109         MOV.W   R0,R2
000BFC 6932            2110         OR.W    R3,R2
000BFE F2C3            2113         BNE     _180
000C00                 2115 _184:
000C00 810C            2117         MOV.B   R0L,R6L
000C02 A974            2122         ADDS.W  R7,#04H
000C04 2F70            2124         POP.W   R4, R5, R6
000C06 D680            2126         RET
                       2134         EXTRN   HCODE(_flash_get_numsectors)
                       2136         EXTRN   BIT(_CmdExecute)
000000                 2138 RS232CMD_CLR_NE@DS      SEGMENT DATA JOIN CLEAR
000000                 2139         RSEG    RS232CMD_CLR_NE@DS
000000 RESERVED        2140 _ParState:      DS      1
000000
                       2141         EXTRN   HCODE(__UMODL)
                       2144         EXTRN   HCODE(_Cstrcmp)
                       2147         EXTRN   HCODE(_ReadErrorEventQueue)
                       2149         EXTRN   HCODE(__FL_STATUSBUSYTxt)
000001                 2152 _strout:        DS      8
   |  RESERVED             
000008
                       2154         EXTRN   HCODE(__FL_STATUSERSUSPTxt)
                       2157         EXTRN   HCODE(_atoi)
                       2160         EXTRN   HCODE(_atol)
                       2163         EXTRN   HCODE(_flash_reset)
                       2166         EXTRN   HCODE(_Udr_CPutNChar)
                       2168         EXTRN   HCODE(__FL_STATUSREADYTxt)
                       2171         EXTRN   HCODE(_wordtohex)
                       2173         EXTRN   HCODE(__FL_STATUSERRORTxt)
                       2176         EXTRN   DATA(_Cmd)
000009 RESERVED        2178         ALIGN   1
000009
00000A                 2179 _dwordVal1:     DS      4
   |  RESERVED             
00000D
                       2182         EXTRN   HDATA(__FL_STATUS)
                       2184         ALIGN   1
00000E                 2185 _dwordVal2:     DS      4
   |  RESERVED             
000011
                       2187         EXTRN   HCODE(__FL_STATUSTIMEOUTTxt)
                       2188         EXTRN   HCODE(__MULL)
                       2190         EXTRN   BIT(_CmdRequest)
                       2196         EXTRN   HCODE(_ErrorTxt_Array)
                       2199         EXTRN   HCODE(_flash_get_sector_size)
                       2202         EXTRN   HCODE(_bytetohex)
                       2205         EXTRN   HCODE(_flash_get_status)
                       2212         EXTRN   HCODE(_flash_get_device_info)
000012 RESERVED        2214 _byteVal:       DS      1
000012
                       2216         EXTRN   DATA(_ParameterType)
                       2231         EXTRN   DATA(_meminfo)
                       2232         EXTRN   IDATA(__lc_bs)
                       2235         EXTRN   HCODE(_flash_sector_erase_int)
                       2238         EXTRN   HCODE(_Udr_PutNChar)
                       2240         EXTRN   DATA(_SCPIError)
                       2243         EXTRN   HCODE(_dwordtoa)
                       2246         EXTRN   HCODE(_Udr_PutChar)
                       2247         EXTRN   DATA(__lc_ub_xvwbuffer)
                       2248         EXTRN   DATA(__lc_ue_xvwbuffer)
                       2249         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2250         CALLS   'SystemIDN', 'Udr_PutChar'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
                       2251         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2252         CALLS   'SystemIDN', 'Udr_PutChar'
                       2253         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2254         CALLS   'SystemIDN', 'Udr_PutChar'
                       2255         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2256         CALLS   'SystemError', 'ReadErrorEventQueue'
                       2257         CALLS   'SystemError', 'dwordtoa'
                       2258         CALLS   'SystemError', 'Udr_PutChar'
                       2259         CALLS   'SystemError', 'Udr_PutNChar'
                       2260         CALLS   'SystemError', 'Udr_PutChar'
                       2261         CALLS   'SystemError', 'Udr_CPutNChar'
                       2262         CALLS   'SystemError', 'Udr_PutChar'
                       2263         CALLS   'SystemError', 'Udr_CPutNChar'
                       2264         CALLS   'FlashReset', 'flash_reset'
                       2265         CALLS   'FlashInfo', 'flash_get_device_info'
                       2266         CALLS   'FlashInfo', 'dwordtoa'
                       2267         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2268         CALLS   'FlashInfo', 'Udr_PutChar'
                       2269         CALLS   'FlashInfo', 'dwordtoa'
                       2270         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2271         CALLS   'FlashInfo', 'Udr_PutChar'
                       2272         CALLS   'FlashInfo', 'flash_get_numsectors'
                       2273         CALLS   'FlashInfo', 'dwordtoa'
                       2274         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2275         CALLS   'FlashInfo', 'Udr_CPutNChar'
                       2276         CALLS   'FlashStatus', 'flash_get_status'
                       2277         CALLS   'FlashStatus', 'Udr_CPutNChar'
                       2278         CALLS   'FlashChecksum', 'atol'
                       2279         CALLS   'FlashChecksum', 'dwordtoa'
                       2280         CALLS   'FlashChecksum', 'Udr_PutNChar'
                       2281         CALLS   'FlashChecksum', 'Udr_CPutNChar'
                       2282         CALLS   'FlashChecksum', 'dwordtoa'
                       2283         CALLS   'FlashChecksum', 'Udr_PutNChar'
                       2284         CALLS   'FlashChecksum', 'Udr_CPutNChar'
                       2285         CALLS   'FlashSectorSize', 'atoi'
                       2286         CALLS   'FlashSectorSize', 'flash_get_sector_size'
                       2287         CALLS   'FlashSectorSize', 'dwordtoa'
                       2288         CALLS   'FlashSectorSize', 'Udr_PutNChar'
                       2289         CALLS   'FlashSectorSize', 'Udr_CPutNChar'
                       2290         CALLS   'FlashSectorErase', 'atol'
                       2291         CALLS   'FlashSectorErase', 'atoi'
                       2292         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       2293         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       2294         CALLS   'FlashSectorErase', 'dwordtoa'
                       2295         CALLS   'FlashSectorErase', 'Udr_PutNChar'
                       2296         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       2297         CALLS   'FlashSectorErase', 'flash_sector_erase_int'
                       2298         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       2299         CALLS   'FlashBankErase', 'atol'
                       2300         CALLS   'FlashBankErase', 'atoi'
                       2301         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       2302         CALLS   'FlashBankErase', 'Udr_PutChar'
                       2303         CALLS   'FlashBankErase', 'dwordtoa'
                       2304         CALLS   'FlashBankErase', 'Udr_PutNChar'
                       2305         CALLS   'FlashBankErase', 'Udr_PutChar'
                       2306         CALLS   'FlashBankErase', 'flash_sector_erase_int'
                       2307         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       2308         CALLS   'FlashRead', 'atol'
                       2309         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2310         CALLS   'FlashRead', 'wordtohex'
                       2311         CALLS   'FlashRead', 'Udr_PutNChar'
                       2312         CALLS   'FlashRead', 'bytetohex'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
                       2313         CALLS   'FlashRead', 'Udr_PutNChar'
                       2314         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2315         CALLS   'FlashRead', 'wordtohex'
                       2316         CALLS   'FlashRead', 'Udr_PutNChar'
                       2317         CALLS   'FlashRead', 'bytetohex'
                       2318         CALLS   'FlashRead', 'Udr_PutNChar'
                       2319         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2320         CALLS   'FlashRead', 'Udr_PutChar'
                       2321         CALLS   'FlashRead', 'bytetohex'
                       2322         CALLS   'FlashRead', 'Udr_PutNChar'
                       2323         CALLS   'FlashRead', 'wordtohex'
                       2324         CALLS   'FlashRead', 'Udr_PutNChar'
                       2325         CALLS   'FlashRead', 'Udr_PutChar'
                       2326         CALLS   'FlashRead', 'wordtohex'
                       2327         CALLS   'FlashRead', 'Udr_PutNChar'
                       2328         CALLS   'FlashRead', 'bytetohex'
                       2329         CALLS   'FlashRead', 'Udr_PutNChar'
                       2330         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2331         CALLS   'FindParameter', 'Cstrcmp'
