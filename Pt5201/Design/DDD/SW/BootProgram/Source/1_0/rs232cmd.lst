XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
U:\Pt5201\Design\DDD\SW\BootProgram\Source\work\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          2 ; options: -IC:\cxa\include -Ml -Cxag3 -Sd -A1 -O1 -DWritableSector=0
                          3 ;          -DBootProgram=1 -g
                          5 $NOZPAGE
                          6         NAME    RS232CMD
000000                   47 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                   48         RSEG    RS232CMD_RO
                         52         PUBLIC  _SWTypeTxt
000000                   53 _SWTypeTxt:
000000 50543532303120    54         DB      050H,054H,035H,032H,030H,031H,020H,042H,04FH,04FH,054H,05FH
       424F4F545F           
00000C 50524F4752414D    55         DB      050H,052H,04FH,047H,052H,041H,04DH,028H,043H,029H,000H
       28432900             
                         58         PUBLIC  _CompanyTxt
000017                   59 _CompanyTxt:
000017 50545600          60         DB      050H,054H,056H,000H
                         63         PUBLIC  _SWDateTxt
00001B                   64 _SWDateTxt:
00001B 31343033323030    65         DB      031H,034H,030H,033H,032H,030H,030H,030H,000H
       3000                 
                         68         PUBLIC  _SWVersionTxt
000024                   69 _SWVersionTxt:
000024 30312E3100        70         DB      030H,031H,02EH,031H,000H
                         73         PUBLIC  _PLDNotLoadedTxt
000029                   74 _PLDNotLoadedTxt:
000029 504C44204E4F54    75         DB      050H,04CH,044H,020H,04EH,04FH,054H,020H,04CH,04FH,041H,044H
       204C4F4144           
000035 454400            76         DB      045H,044H,000H
                         79         PUBLIC  _TestPLDNotAvailableTxt
000038                   80 _TestPLDNotAvailableTxt:
000038 5445535420504C    81         DB      054H,045H,053H,054H,020H,050H,04CH,044H,020H,04EH,04FH,054H
       44204E4F54           
000044 20415641494C41    82         DB      020H,041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       424C4500             
                         85         PUBLIC  _CmdNotAvailableTxt
00004F                   86 _CmdNotAvailableTxt:
00004F 434F4D4D414E44    87         DB      043H,04FH,04DH,04DH,041H,04EH,044H,020H,04EH,04FH,054H,020H
       204E4F5420           
00005B 415641494C4142    88         DB      041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       4C4500               
                         91         PUBLIC  _ErasingSectorTxt
000065                   92 _ErasingSectorTxt:
000065 45524153494E47    93         DB      045H,052H,041H,053H,049H,04EH,047H,020H,053H,045H,043H,054H
       2053454354           
000071 4F5200            94         DB      04FH,052H,000H
                         97         PUBLIC  _ErasedTxt
000074                   98 _ErasedTxt:
000074 45524153454400    99         DB      045H,052H,041H,053H,045H,044H,000H
                        102         PUBLIC  _NewlineTxt
00007B                  103 _NewlineTxt:
00007B 0D0A00           104         DB      00DH,00AH,000H
                        107         PUBLIC  _OKTxt
00007E 4F4B00           108 _OKTxt: DB      04FH,04BH,000H
                        111         PUBLIC  _ERRORTxt
000081                  112 _ERRORTxt:
000081 4552524F5200     113         DB      045H,052H,052H,04FH,052H,000H
                        116         PUBLIC  _IDNCmdTxt
000087                  117 _IDNCmdTxt:
000087 49444E00         118         DB      049H,044H,04EH,000H
                        121         PUBLIC  _ERRORCmdTxt
00008B                  122 _ERRORCmdTxt:
00008B 4552524F5200     123         DB      045H,052H,052H,04FH,052H,000H
                        126         PUBLIC  _ERRCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
000091                  127 _ERRCmdTxt:
000091 45525200         128         DB      045H,052H,052H,000H
                        131         PUBLIC  _HWINFOCmdTxt
000095                  132 _HWINFOCmdTxt:
000095 4857494E464F00   133         DB      048H,057H,049H,04EH,046H,04FH,000H
                        136         PUBLIC  _HWINCmdTxt
00009C                  137 _HWINCmdTxt:
00009C 4857494E00       138         DB      048H,057H,049H,04EH,000H
                        141         PUBLIC  _HWTESTCmdTxt
0000A1                  142 _HWTESTCmdTxt:
0000A1 48575445535400   143         DB      048H,057H,054H,045H,053H,054H,000H
                        146         PUBLIC  _HWTCmdTxt
0000A8                  147 _HWTCmdTxt:
0000A8 48575400         148         DB      048H,057H,054H,000H
                        151         PUBLIC  _TKCALIBRATECmdTxt
0000AC                  152 _TKCALIBRATECmdTxt:
0000AC 544B43414C4942   153         DB      054H,04BH,043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       5241544500           
                        156         PUBLIC  _TKCCmdTxt
0000B8                  157 _TKCCmdTxt:
0000B8 544B4300         158         DB      054H,04BH,043H,000H
                        161         PUBLIC  _FRESETCmdTxt
0000BC                  162 _FRESETCmdTxt:
0000BC 46524553455400   163         DB      046H,052H,045H,053H,045H,054H,000H
                        166         PUBLIC  _FRESCmdTxt
0000C3                  167 _FRESCmdTxt:
0000C3 4652455300       168         DB      046H,052H,045H,053H,000H
                        171         PUBLIC  _FINFOCmdTxt
0000C8                  172 _FINFOCmdTxt:
0000C8 46494E464F00     173         DB      046H,049H,04EH,046H,04FH,000H
                        176         PUBLIC  _FINFCmdTxt
0000CE                  177 _FINFCmdTxt:
0000CE 46494E4600       178         DB      046H,049H,04EH,046H,000H
                        181         PUBLIC  _FSTATUSCmdTxt
0000D3                  182 _FSTATUSCmdTxt:
0000D3 46535441545553   183         DB      046H,053H,054H,041H,054H,055H,053H,000H
       00                   
                        186         PUBLIC  _FSTCmdTxt
0000DB                  187 _FSTCmdTxt:
0000DB 46535400         188         DB      046H,053H,054H,000H
                        191         PUBLIC  _FCHECKSUMCmdTxt
0000DF                  192 _FCHECKSUMCmdTxt:
0000DF 46434845434B53   193         DB      046H,043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       554D00               
                        196         PUBLIC  _FCHCmdTxt
0000E9                  197 _FCHCmdTxt:
0000E9 46434800         198         DB      046H,043H,048H,000H
                        201         PUBLIC  _FSSIZECmdTxt
0000ED                  202 _FSSIZECmdTxt:
0000ED 465353495A4500   203         DB      046H,053H,053H,049H,05AH,045H,000H
                        206         PUBLIC  _FSSCmdTxt
0000F4                  207 _FSSCmdTxt:
0000F4 46535300         208         DB      046H,053H,053H,000H
                        211         PUBLIC  _FSPVERIFYCmdTxt
0000F8                  212 _FSPVERIFYCmdTxt:
0000F8 46535056455249   213         DB      046H,053H,050H,056H,045H,052H,049H,046H,059H,000H
       465900               
                        216         PUBLIC  _FSPVCmdTxt
000102                  217 _FSPVCmdTxt:
000102 4653505600       218         DB      046H,053H,050H,056H,000H
                        221         PUBLIC  _FSERASECmdTxt
000107                  222 _FSERASECmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
000107 46534552415345   223         DB      046H,053H,045H,052H,041H,053H,045H,000H
       00                   
                        226         PUBLIC  _FSERCmdTxt
00010F                  227 _FSERCmdTxt:
00010F 4653455200       228         DB      046H,053H,045H,052H,000H
                        231         PUBLIC  _FBERASECmdTxt
000114                  232 _FBERASECmdTxt:
000114 46424552415345   233         DB      046H,042H,045H,052H,041H,053H,045H,000H
       00                   
                        236         PUBLIC  _FBERCmdTxt
00011C                  237 _FBERCmdTxt:
00011C 4642455200       238         DB      046H,042H,045H,052H,000H
                        241         PUBLIC  _FREADCmdTxt
000121                  242 _FREADCmdTxt:
000121 465245414400     243         DB      046H,052H,045H,041H,044H,000H
                        246         PUBLIC  _FRECmdTxt
000127                  247 _FRECmdTxt:
000127 46524500         248         DB      046H,052H,045H,000H
                        251         PUBLIC  _ExtLinAddrRecTxt
00012B                  252 _ExtLinAddrRecTxt:
00012B 3A303230303030   253         DB      03AH,030H,032H,030H,030H,030H,030H,030H,034H,000H
       303400               
                        256         PUBLIC  _EndOfFileRecTxt
000135                  257 _EndOfFileRecTxt:
000135 3A303030303030   258         DB      03AH,030H,030H,030H,030H,030H,030H,030H,031H,046H,046H,000H
       3031464600           
                        274         PUBLIC  _Subsystem
000141 RESERVED         275         ALIGN   1
000141
000142                  276 _Subsystem:
000142 rrrrrrrrrrrrrr   277         DD      _IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00014A rrrrrrrrrrrrrr   278         DD      _Subsystem+16
       rr                   
00014E rrrrrrrrrrrrrr   279         DD      _SystemIDN,_ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00015A rrrrrrrrrrrrrr   280         DD      _Subsystem+32
       rr                   
00015E rrrrrrrrrrrrrr   281         DD      _SystemError,_HWINFOCmdTxt,_HWINCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00016A rrrrrrrrrrrrrr   282         DD      _Subsystem+48
       rr                   
00016E rrrrrrrrrrrrrr   283         DD      _HWInfo,_HWTESTCmdTxt,_HWTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00017A rrrrrrrrrrrrrr   284         DD      _Subsystem+64
       rr                   
00017E rrrrrrrrrrrrrr   285         DD      _HWTest,_FRESETCmdTxt,_FRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00018A rrrrrrrrrrrrrr   286         DD      _Subsystem+80
       rr                   
00018E rrrrrrrrrrrrrr   287         DD      _FlashReset,_TKCALIBRATECmdTxt,_TKCCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00019A rrrrrrrrrrrrrr   288         DD      _Subsystem+96
       rr                   
00019E rrrrrrrrrrrrrr   289         DD      _TKCalibrate,_FINFOCmdTxt,_FINFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001AA rrrrrrrrrrrrrr   290         DD      _Subsystem+112
       rr                   
0001AE rrrrrrrrrrrrrr   291         DD      _FlashInfo,_FSTATUSCmdTxt,_FSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001BA rrrrrrrrrrrrrr   292         DD      _Subsystem+128
       rr                   
0001BE rrrrrrrrrrrrrr   293         DD      _FlashStatus,_FCHECKSUMCmdTxt,_FCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001CA rrrrrrrrrrrrrr   294         DD      _Subsystem+144
       rr                   
0001CE rrrrrrrrrrrrrr   295         DD      _FlashChecksum,_FSSIZECmdTxt,_FSSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001DA rrrrrrrrrrrrrr   296         DD      _Subsystem+160
       rr                   
0001DE rrrrrrrrrrrrrr   297         DD      _FlashSectorSize,_FSPVERIFYCmdTxt,_FSPVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001EA rrrrrrrrrrrrrr   298         DD      _Subsystem+176
       rr                   
0001EE rrrrrrrrrrrrrr   299         DD      _FlashSectorProtectVerify,_FSERASECmdTxt,_FSERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001FA rrrrrrrrrrrrrr   300         DD      _Subsystem+192
       rr                   
0001FE rrrrrrrrrrrrrr   301         DD      _FlashSectorErase,_FBERASECmdTxt,_FBERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00020A rrrrrrrrrrrrrr   302         DD      _Subsystem+208
       rr                   
00020E rrrrrrrrrrrrrr   303         DD      _FlashBankErase,_FREADCmdTxt,_FRECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00021A 00000000         304         DD      000000000H
00021E rrrrrrrrrrrrrr   305         DD      _FlashRead
       rr                   
000000                  306 RS232CMD_PR     SEGMENT HCODE
000000                  307         RSEG    RS232CMD_PR
                        308         ALIGN   1
                        310         PUBLIC  _SystemIDN
000000                  311 _SystemIDN:
000000 860rrr           316         MOV.B   R0L,_ParameterType
000003 F302             317         BEQ     _3
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000008                  320 _3:
000008 082rrr           322         MOV     C,_CmdExecute
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
00000B F031             323         BCC     _7
00000D 8E0rrr           324         MOV.W   R0,_SCPIError
000010 F22E             325         BNE     _7
000012 082rrr           327         MOV     C,_CmdRequest
000015 F02A             328         BCC     _4
000017 9918rrrr         330         MOV.W   R1,#SEG( _CompanyTxt )
00001B 9908rrrr         331         MOV.W   R0,#SOF( _CompanyTxt )
                        332         CALL    _Udr_CPutNChar
00001F C4rrrrrr        +332 ;       FCALL   _Udr_CPutNChar
000023 91082C           334         MOV.B   R0L,#02CH
                        335         CALL    _Udr_PutChar
000026 C4rrrrrr        +335 ;       FCALL   _Udr_PutChar
00002A 9918rrrr         337         MOV.W   R1,#SEG( _SWTypeTxt )
00002E 9908rrrr         338         MOV.W   R0,#SOF( _SWTypeTxt )
                        339         CALL    _Udr_CPutNChar
000032 C4rrrrrr        +339 ;       FCALL   _Udr_CPutNChar
000036 91082C           340         MOV.B   R0L,#02CH
                        342         CALL    _Udr_PutChar
000039 C4rrrrrr        +342 ;       FCALL   _Udr_PutChar
00003D 9918rrrr         344         MOV.W   R1,#SEG( _SWDateTxt )
000041 9908rrrr         345         MOV.W   R0,#SOF( _SWDateTxt )
                        346         CALL    _Udr_CPutNChar
000045 C4rrrrrr        +346 ;       FCALL   _Udr_CPutNChar
000049 91082C           348         MOV.B   R0L,#02CH
                        349         CALL    _Udr_PutChar
00004C C4rrrrrr        +349 ;       FCALL   _Udr_PutChar
000050 9918rrrr         351         MOV.W   R1,#SEG( _SWVersionTxt )
000054 9908rrrr         352         MOV.W   R0,#SOF( _SWVersionTxt )
                        353         CALL    _Udr_CPutNChar
000058 C4rrrrrr        +353 ;       FCALL   _Udr_CPutNChar
00005C 9918rrrr         355         MOV.W   R1,#SEG( _NewlineTxt )
000060 9908rrrr         356         MOV.W   R0,#SOF( _NewlineTxt )
                        357         CALL    _Udr_CPutNChar
000064 C4rrrrrr        +357 ;       FCALL   _Udr_CPutNChar
000068 D680             359         RET
000068 D680             359         RET
00006A                  360 _4:
00006A BEr3rr           362         MOV.W   _SCPIError,#03H
00006E                  364 _7:
00006E D680             366         RET
                        368         ALIGN   1
                        370         PUBLIC  _SystemError
000070                  371 _SystemError:
000070 0F70             375         PUSH.W  R4, R5, R6
000072 A97E             377         ADDS.W  R7,#0EH
000074 860rrr           384         MOV.B   R0L,_ParameterType
000077 F302             385         BEQ     _8
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
00007C                  388 _8:
00007C 082rrr           390         MOV     C,_CmdExecute
00007F F054             391         BCC     _14
000081 8E0rrr           392         MOV.W   R0,_SCPIError
000084 F251             393         BNE     _14
000086 082rrr           395         MOV     C,_CmdRequest
000089 F04D             396         BCC     _10
                        398         CALL    _ReadErrorEventQueue
00008B C4rrrrrr        +398 ;       FCALL   _ReadErrorEventQueue
00008F 99040000         400         CMP.W   R0,#00H
000093 F14A             401         BCS     _14
000095 E9000006         403         MULU.W  R0,#06H
000099 8A0F             405         MOV.W   [R7],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
00009B 8920             406         MOV.W   R2,R0
00009D B930             407         MOVS.W  R3,#00H
00009F 9918rrrr         408         MOV.W   R1,#SEG( _ErrorTxt_Array )
0000A3 9908rrrr         409         MOV.W   R0,#SOF( _ErrorTxt_Array )
0000A7 0902             410         ADD.W   R0,R2
0000A9 1913             411         ADDC.W  R1,R3
0000AB 862C43           412         MOV.B   CS,R1L
0000AE 8810             413         MOVC.W  R1,[R0+]
0000B0 981B             414         NEG.W   R1
0000B2 8961             415         MOV.W   R6,R1
0000B4 8906             418         MOV.W   R0,R6
0000B6 B910             419         MOVS.W  R1,#00H
0000B8 9928rrrr         420         MOV.W   R2,#SOF( _strout )
0000BC 8942             421         MOV.W   R4,R2
0000BE B950             422         MOVS.W  R5,#00H
0000C0 8935             423         MOV.W   R3,R5
0000C2 8924             424         MOV.W   R2,R4
                        425         CALL    _dwordtoa
0000C4 C4rrrrrr        +425 ;       FCALL   _dwordtoa
0000C8 6966             427         OR.W    R6,R6
0000CA F304             428         BEQ     _9
0000CC 91082D           430         MOV.B   R0L,#02DH
                        431         CALL    _Udr_PutChar
0000CF C4rrrrrr        +431 ;       FCALL   _Udr_PutChar
0000CF C4rrrrrr00      +431 ;       FCALL   _Udr_PutChar
0000D4                  432 _9:
0000D4 8915             434         MOV.W   R1,R5
0000D6 8904             435         MOV.W   R0,R4
                        436         CALL    _Udr_PutNChar
0000D8 C4rrrrrr        +436 ;       FCALL   _Udr_PutNChar
0000DC 91082C           438         MOV.B   R0L,#02CH
                        439         CALL    _Udr_PutChar
0000DF C4rrrrrr        +439 ;       FCALL   _Udr_PutChar
0000E3 910822           441         MOV.B   R0L,#022H
                        442         CALL    _Udr_PutChar
0000E6 C4rrrrrr        +442 ;       FCALL   _Udr_PutChar
0000EA 8A07             444         MOV.W   R0,[R7]
0000EC B910             445         MOVS.W  R1,#00H
0000EE 9938rrrr         446         MOV.W   R3,#SEG( _ErrorTxt_Array+2 )
0000F2 9928rrrr         447         MOV.W   R2,#SOF( _ErrorTxt_Array+2 )
0000F6 0920             448         ADD.W   R2,R0
0000F8 1931             449         ADDC.W  R3,R1
0000FA 866C43           450         MOV.B   CS,R3L
0000FD 8802             451         MOVC.W  R0,[R2+]
0000FF 99240000         452         CMP.W   R2,#00H
000103 F202             453         BNE     _16
000105 A64143           454         ADDS.B  CS,#01H
000105 A64143           454         ADDS.B  CS,#01H
000108                  455 _16:
000108 8812             456         MOVC.W  R1,[R2+]
                        457         CALL    _Udr_CPutNChar
00010A C4rrrrrr        +457 ;       FCALL   _Udr_CPutNChar
00010E 910822           459         MOV.B   R0L,#022H
                        460         CALL    _Udr_PutChar
000111 C4rrrrrr        +460 ;       FCALL   _Udr_PutChar
000115 9918rrrr         462         MOV.W   R1,#SEG( _NewlineTxt )
000119 9908rrrr         463         MOV.W   R0,#SOF( _NewlineTxt )
                        464         CALL    _Udr_CPutNChar
00011D C4rrrrrr        +464 ;       FCALL   _Udr_CPutNChar
000121 FE03             466         BR      _14
000121 FE0300           466         BR      _14
000124                  467 _10:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000124 BEr3rr           469         MOV.W   _SCPIError,#03H
000128                  471 _14:
000128 A972             473         ADDS.W  R7,#02H
00012A 2F70             475         POP.W   R4, R5, R6
00012C D680             477         RET
                        480         ALIGN   1
                        482         PUBLIC  _HWInfo
00012E                  483 _HWInfo:
00012E BEr3rr           488         MOV.W   _SCPIError,#03H
000131 D680             490         RET
000133 00               492         ALIGN   1
                        494         PUBLIC  _HWTest
000134                  495 _HWTest:
000134 BEr3rr           500         MOV.W   _SCPIError,#03H
000137 D680             502         RET
000139 00               504         ALIGN   1
                        506         PUBLIC  _FlashReset
00013A                  507 _FlashReset:
00013A 860rrr           512         MOV.B   R0L,_ParameterType
00013D F302             513         BEQ     _17
00013F BEr6rr           515         MOV.W   _SCPIError,#06H
00013F BEr6rr           515         MOV.W   _SCPIError,#06H
000142                  516 _17:
000142 082rrr           518         MOV     C,_CmdExecute
000145 F00A             519         BCC     _21
000147 8E0rrr           520         MOV.W   R0,_SCPIError
00014A F207             521         BNE     _21
00014C 082rrr           523         MOV     C,_CmdRequest
00014F F003             524         BCC     _18
000151 BEr3rr           526         MOV.W   _SCPIError,#03H
000154 D680             527         RET
000154 D680             527         RET
000156                  528 _18:
                        530         CALL    _flash_reset
000156 C4rrrrrr        +530 ;       FCALL   _flash_reset
00015A                  532 _21:
00015A D680             534         RET
                        536         ALIGN   1
                        538         PUBLIC  _TKCalibrate
00015C                  539 _TKCalibrate:
00015C BEr3rr           544         MOV.W   _SCPIError,#03H
00015F D680             546         RET
000161 00               548         ALIGN   1
                        550         PUBLIC  _FlashInfo
000162                  551 _FlashInfo:
000162 0F30             555         PUSH.W  R4, R5
000164 A97C             557         ADDS.W  R7,#0CH
000166 860rrr           562         MOV.B   R0L,_ParameterType
000169 F302             563         BEQ     _22
00016B BEr6rr           565         MOV.W   _SCPIError,#06H
00016B BEr6rr           565         MOV.W   _SCPIError,#06H
00016E                  566 _22:
00016E 082rrr           568         MOV     C,_CmdExecute
000171 F048             569         BCC     _26
000173 8E0rrr           570         MOV.W   R0,_SCPIError
000176 F245             571         BNE     _26
000178 082rrr           573         MOV     C,_CmdRequest
00017B F041             574         BCC     _23
00017D 910800           576         MOV.B   R0L,#00H
000180 9168rr           577         MOV.B   R3L,#SEG( __lc_bs )
000183 7177             578         XOR.B   R3H,R3H
000185 402702           579         LEA     R2,R7+2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
000188 91A8rr           580         MOV.B   R5L,#SEG( __lc_bs )
00018B 71BB             581         XOR.B   R5H,R5H
00018D 8947             582         MOV.W   R4,R7
00018F 0F30             583         PUSH.W  R4, R5
                        585         CALL    _flash_get_device_info
000191 C4rrrrrr        +585 ;       FCALL   _flash_get_device_info
000195 A974             586         ADDS.W  R7,#04H
000197 840702           589         MOV.B   R0L,[R7+2]
00019A B110             590         MOVS.B  R0H,#00H
00019C B910             591         MOVS.W  R1,#00H
00019E 9928rrrr         592         MOV.W   R2,#SOF( _strout )
0001A2 8942             593         MOV.W   R4,R2
0001A4 B950             594         MOVS.W  R5,#00H
0001A6 8935             595         MOV.W   R3,R5
0001A8 8924             596         MOV.W   R2,R4
                        597         CALL    _dwordtoa
0001AA C4rrrrrr        +597 ;       FCALL   _dwordtoa
0001AE 8915             598         MOV.W   R1,R5
0001B0 8904             599         MOV.W   R0,R4
                        601         CALL    _Udr_PutNChar
0001B2 C4rrrrrr        +601 ;       FCALL   _Udr_PutNChar
0001B6 91082C           603         MOV.B   R0L,#02CH
                        604         CALL    _Udr_PutChar
0001B9 C4rrrrrr        +604 ;       FCALL   _Udr_PutChar
0001BD 8A07             606         MOV.W   R0,[R7]
0001BF B910             607         MOVS.W  R1,#00H
0001C1 8935             608         MOV.W   R3,R5
0001C3 8924             609         MOV.W   R2,R4
                        610         CALL    _dwordtoa
0001C5 C4rrrrrr        +610 ;       FCALL   _dwordtoa
0001C9 8915             611         MOV.W   R1,R5
0001CB 8904             612         MOV.W   R0,R4
                        614         CALL    _Udr_PutNChar
0001CD C4rrrrrr        +614 ;       FCALL   _Udr_PutNChar
0001D1 91082C           616         MOV.B   R0L,#02CH
                        617         CALL    _Udr_PutChar
0001D4 C4rrrrrr        +617 ;       FCALL   _Udr_PutChar
                        619         CALL    _flash_get_numsectors
0001D8 C4rrrrrr        +619 ;       FCALL   _flash_get_numsectors
0001DC B110             620         MOVS.B  R0H,#00H
0001DE B910             621         MOVS.W  R1,#00H
0001E0 8935             622         MOV.W   R3,R5
0001E2 8924             623         MOV.W   R2,R4
                        624         CALL    _dwordtoa
0001E4 C4rrrrrr        +624 ;       FCALL   _dwordtoa
0001E8 8915             626         MOV.W   R1,R5
0001EA 8904             627         MOV.W   R0,R4
                        628         CALL    _Udr_PutNChar
0001EC C4rrrrrr        +628 ;       FCALL   _Udr_PutNChar
0001F0 9918rrrr         630         MOV.W   R1,#SEG( _NewlineTxt )
0001F4 9908rrrr         631         MOV.W   R0,#SOF( _NewlineTxt )
                        632         CALL    _Udr_CPutNChar
0001F8 C4rrrrrr        +632 ;       FCALL   _Udr_CPutNChar
0001FC FE02             634         BR      _26
0001FC FE02             634         BR      _26
0001FE                  635 _23:
0001FE BEr3rr           637         MOV.W   _SCPIError,#03H
000202                  639 _26:
000202 A974             641         ADDS.W  R7,#04H
000204 2F30             643         POP.W   R4, R5
000206 D680             645         RET
                        647         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
                        649         PUBLIC  _FlashStatus
000208                  650 _FlashStatus:
000208 860rrr           655         MOV.B   R0L,_ParameterType
00020B F302             656         BEQ     _27
00020D BEr6rr           658         MOV.W   _SCPIError,#06H
00020D BEr6rr           658         MOV.W   _SCPIError,#06H
000210                  659 _27:
000210 082rrr           661         MOV     C,_CmdExecute
000213 F03C             662         BCC     _41
000215 8E0rrr           663         MOV.W   R0,_SCPIError
000218 F239             664         BNE     _41
00021A 082rrr           666         MOV     C,_CmdRequest
00021D F035             667         BCC     _33
00021F 910800           669         MOV.B   R0L,#00H
                        670         CALL    _flash_get_status
000222 C4rrrrrr        +670 ;       FCALL   _flash_get_status
000226 910400           671         CMP.B   R0L,#00H
000229 F30C             672         BEQ     _28
00022B 910401           673         CMP.B   R0L,#01H
00022E F310             674         BEQ     _29
000230 910402           675         CMP.B   R0L,#02H
000233 F315             676         BEQ     _30
000235 910403           677         CMP.B   R0L,#03H
000238 F319             678         BEQ     _31
00023A 910404           679         CMP.B   R0L,#04H
00023D F31E             680         BEQ     _32
00023F D680             681         RET
000242                  683 _28:
000242 9918rrrr         685         MOV.W   R1,#SEG( __FL_STATUSREADYTxt )
000246 9908rrrr         686         MOV.W   R0,#SOF( __FL_STATUSREADYTxt )
                        687         CALL    _Udr_CPutNChar
00024A C4rrrrrr        +687 ;       FCALL   _Udr_CPutNChar
00024E D680             689         RET
000250                  691 _29:
000250 9918rrrr         693         MOV.W   R1,#SEG( __FL_STATUSBUSYTxt )
000254 9908rrrr         694         MOV.W   R0,#SOF( __FL_STATUSBUSYTxt )
                        695         CALL    _Udr_CPutNChar
000258 C4rrrrrr        +695 ;       FCALL   _Udr_CPutNChar
00025C D680             697         RET
00025E                  699 _30:
00025E 9918rrrr         701         MOV.W   R1,#SEG( __FL_STATUSERSUSPTxt )
000262 9908rrrr         702         MOV.W   R0,#SOF( __FL_STATUSERSUSPTxt )
                        703         CALL    _Udr_CPutNChar
000266 C4rrrrrr        +703 ;       FCALL   _Udr_CPutNChar
00026A D680             705         RET
00026C                  707 _31:
00026C 9918rrrr         709         MOV.W   R1,#SEG( __FL_STATUSTIMEOUTTxt )
000270 9908rrrr         710         MOV.W   R0,#SOF( __FL_STATUSTIMEOUTTxt )
                        711         CALL    _Udr_CPutNChar
000274 C4rrrrrr        +711 ;       FCALL   _Udr_CPutNChar
000278 D680             713         RET
00027A                  715 _32:
00027A 9918rrrr         717         MOV.W   R1,#SEG( __FL_STATUSERRORTxt )
00027E 9908rrrr         718         MOV.W   R0,#SOF( __FL_STATUSERRORTxt )
                        719         CALL    _Udr_CPutNChar
000282 C4rrrrrr        +719 ;       FCALL   _Udr_CPutNChar
000286 D680             721         RET
000286 D680             721         RET
000288                  722 _33:
000288 BEr3rr           724         MOV.W   _SCPIError,#03H
00028C                  726 _41:
00028C D680             728         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
                        730         ALIGN   1
                        732         PUBLIC  _FlashChecksum
00028E                  733 _FlashChecksum:
00028E BEr3rr           738         MOV.W   _SCPIError,#03H
000291 D680             740         RET
000293 00               742         ALIGN   1
                        744         PUBLIC  _FlashSectorSize
000294                  745 _FlashSectorSize:
000294 0F30             749         PUSH.W  R4, R5
000296 96r4rr00         752         CMP.B   _ParameterType,#00H
00029A F304             753         BEQ     _42
00029C 96r4rr02         754         CMP.B   _ParameterType,#02H
0002A0 F304             755         BEQ     _43
0002A2 FE2A             756         BR      _46
0002A4                  758 _42:
0002A4 B6r0rr           760         MOV.B   _ParState,#00H
0002A7 FE2A             762         BR      _50
0002AA                  764 _43:
0002AA 860rrr           766         MOV.B   R0L,_ParState
0002AD F222             767         BNE     _45
0002AF 860rrr           769         MOV.B   _ParState,R0L
0002B2 A6r1rr           770         ADDS.B  _ParState,#01H
0002B5 9908rrrr         772         MOV.W   R0,#SOF( _Cmd )
0002B9 8940             773         MOV.W   R4,R0
0002BB B950             774         MOVS.W  R5,#00H
0002BD 8915             775         MOV.W   R1,R5
0002BF 8904             776         MOV.W   R0,R4
                        777         CALL    _atoi
0002C1 C4rrrrrr        +777 ;       FCALL   _atoi
0002C5 8E3rrr           778         MOV.W   R3,_meminfo+2
0002C8 8E2rrr           779         MOV.W   R2,_meminfo
0002CB 99200004         780         ADD.W   R2,#04H
0002CF 99310000         781         ADDC.W  R3,#00H
0002D3 866C43           782         MOV.B   CS,R3L
0002D6 8832             783         MOVC.W  R3,[R2+]
0002D8 4903             784         CMP.W   R0,R3
0002DA FD04             785         BLE     _44
0002DC 9Er8rr0020       787         MOV.W   _SCPIError,#020H
0002E1 FE0D             788         BR      _50
0002E1 FE0D00           788         BR      _50
0002E4                  789 _44:
0002E4 8915             791         MOV.W   R1,R5
0002E6 8904             792         MOV.W   R0,R4
                        793         CALL    _atoi
0002E8 C4rrrrrr        +793 ;       FCALL   _atoi
0002EC 860rrr           794         MOV.B   _byteVal,R0L
0002EF FE06             796         BR      _50
0002EF FE0600           796         BR      _50
0002F2                  797 _45:
0002F2 BEr5rr           799         MOV.W   _SCPIError,#05H
0002F5 FE03             801         BR      _50
0002F8                  803 _46:
0002F8 BEr5rr           805         MOV.W   _SCPIError,#05H
0002FC                  807 _50:
0002FC 082rrr           809         MOV     C,_CmdExecute
0002FF F024             810         BCC     _56
000301 8E0rrr           811         MOV.W   R0,_SCPIError
000304 F221             812         BNE     _56
000306 082rrr           814         MOV     C,_CmdRequest
000309 F01D             815         BCC     _52
00030B 860rrr           817         MOV.B   R0L,_ParState
00030E F203             818         BNE     _51
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
000310 BEr7rr           820         MOV.W   _SCPIError,#07H
000313 FE1A             821         BR      _56
000313 FE1A00           821         BR      _56
000316                  822 _51:
000316 860rrr           824         MOV.B   R0L,_byteVal
                        825         CALL    _flash_get_sector_size
000319 C4rrrrrr        +825 ;       FCALL   _flash_get_sector_size
00031D 9928rrrr         826         MOV.W   R2,#SOF( _strout )
000321 8942             827         MOV.W   R4,R2
000323 B950             828         MOVS.W  R5,#00H
000325 8935             829         MOV.W   R3,R5
000327 8924             830         MOV.W   R2,R4
                        831         CALL    _dwordtoa
000329 C4rrrrrr        +831 ;       FCALL   _dwordtoa
00032D 8915             833         MOV.W   R1,R5
00032F 8904             834         MOV.W   R0,R4
                        835         CALL    _Udr_PutNChar
000331 C4rrrrrr        +835 ;       FCALL   _Udr_PutNChar
000335 9918rrrr         837         MOV.W   R1,#SEG( _NewlineTxt )
000339 9908rrrr         838         MOV.W   R0,#SOF( _NewlineTxt )
                        839         CALL    _Udr_CPutNChar
00033D C4rrrrrr        +839 ;       FCALL   _Udr_CPutNChar
000341 FE03             841         BR      _56
000341 FE0300           841         BR      _56
000344                  842 _52:
000344 BEr3rr           844         MOV.W   _SCPIError,#03H
000348                  846 _56:
000348 2F30             848         POP.W   R4, R5
00034A D680             850         RET
                        852         ALIGN   1
                        854         PUBLIC  _FlashSectorProtectVerify
00034C                  855 _FlashSectorProtectVerify:
00034C BEr3rr           860         MOV.W   _SCPIError,#03H
00034F D680             862         RET
000351 00               864         ALIGN   1
                        866         PUBLIC  _FlashSectorErase
000352                  867 _FlashSectorErase:
000352 0F30             871         PUSH.W  R4, R5
000354 96r4rr00         874         CMP.B   _ParameterType,#00H
000358 F304             875         BEQ     _58
00035A 96r4rr02         876         CMP.B   _ParameterType,#02H
00035E F304             877         BEQ     _59
000360 FE2F             878         BR      _62
000362                  880 _58:
000362 B6r0rr           882         MOV.B   _ParState,#00H
000365 FE2F             884         BR      _66
000368                  886 _59:
000368 860rrr           888         MOV.B   R0L,_ParState
00036B F227             889         BNE     _61
00036D 860rrr           891         MOV.B   _ParState,R0L
000370 A6r1rr           892         ADDS.B  _ParState,#01H
000373 9908rrrr         894         MOV.W   R0,#SOF( _Cmd )
000377 8940             895         MOV.W   R4,R0
000379 B950             896         MOVS.W  R5,#00H
00037B 8915             897         MOV.W   R1,R5
00037D 8904             898         MOV.W   R0,R4
                        899         CALL    _atol
00037F C4rrrrrr        +899 ;       FCALL   _atol
000383 8E3rrr           900         MOV.W   R3,_meminfo+2
000386 8E2rrr           901         MOV.W   R2,_meminfo
000389 99200004         902         ADD.W   R2,#04H
00038D 99310000         903         ADDC.W  R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
000391 866C43           904         MOV.B   CS,R3L
000394 8832             905         MOVC.W  R3,[R2+]
000396 8923             906         MOV.W   R2,R3
000398 9839             907         SEXT.W  R3
00039A 4913             908         CMP.W   R1,R3
00039C FB07             909         BLT     _60
00039E FC02             910         BGT     _73
0003A0 4902             911         CMP.W   R0,R2
0003A2 F104             912         BCS     _60
0003A2 F104             912         BCS     _60
0003A4                  913 _73:
0003A4 9Er8rr0020       915         MOV.W   _SCPIError,#020H
0003A9 FE0D             916         BR      _66
0003A9 FE0D00           916         BR      _66
0003AC                  917 _60:
0003AC 8915             919         MOV.W   R1,R5
0003AE 8904             920         MOV.W   R0,R4
                        921         CALL    _atoi
0003B0 C4rrrrrr        +921 ;       FCALL   _atoi
0003B4 860rrr           922         MOV.B   _byteVal,R0L
0003B7 FE06             924         BR      _66
0003B7 FE0600           924         BR      _66
0003BA                  925 _61:
0003BA BEr6rr           927         MOV.W   _SCPIError,#06H
0003BD FE03             929         BR      _66
0003C0                  931 _62:
0003C0 BEr5rr           933         MOV.W   _SCPIError,#05H
0003C4                  935 _66:
0003C4 082rrr           937         MOV     C,_CmdExecute
0003C7 F03D             938         BCC     _72
0003C9 8E0rrr           939         MOV.W   R0,_SCPIError
0003CC F23A             940         BNE     _72
0003CE 082rrr           942         MOV     C,_CmdRequest
0003D1 F003             943         BCC     _67
0003D3 BEr3rr           945         MOV.W   _SCPIError,#03H
0003D6 FE35             946         BR      _72
0003D6 FE35             946         BR      _72
0003D8                  947 _67:
0003D8 860rrr           949         MOV.B   R0L,_ParState
0003DB F203             950         BNE     _68
0003DD BEr7rr           952         MOV.W   _SCPIError,#07H
0003E0 FE30             953         BR      _72
0003E0 FE30             953         BR      _72
0003E2                  954 _68:
0003E2 9918rrrr         956         MOV.W   R1,#SEG( _ErasingSectorTxt )
0003E6 9908rrrr         957         MOV.W   R0,#SOF( _ErasingSectorTxt )
                        958         CALL    _Udr_CPutNChar
0003EA C4rrrrrr        +958 ;       FCALL   _Udr_CPutNChar
0003EE 910828           960         MOV.B   R0L,#028H
                        961         CALL    _Udr_PutChar
0003F1 C4rrrrrr        +961 ;       FCALL   _Udr_PutChar
0003F5 860rrr           963         MOV.B   R0L,_byteVal
0003F8 B110             964         MOVS.B  R0H,#00H
0003FA B910             965         MOVS.W  R1,#00H
0003FC 9928rrrr         966         MOV.W   R2,#SOF( _strout )
000400 8942             967         MOV.W   R4,R2
000402 B950             968         MOVS.W  R5,#00H
000404 8935             969         MOV.W   R3,R5
000406 8924             970         MOV.W   R2,R4
                        971         CALL    _dwordtoa
000408 C4rrrrrr        +971 ;       FCALL   _dwordtoa
00040C 8915             973         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
00040E 8904             974         MOV.W   R0,R4
                        975         CALL    _Udr_PutNChar
000410 C4rrrrrr        +975 ;       FCALL   _Udr_PutNChar
000414 910829           977         MOV.B   R0L,#029H
                        978         CALL    _Udr_PutChar
000417 C4rrrrrr        +978 ;       FCALL   _Udr_PutChar
00041B 910820           980         MOV.B   R0L,#020H
                        981         CALL    _Udr_PutChar
00041E C4rrrrrr        +981 ;       FCALL   _Udr_PutChar
000422 860rrr           983         MOV.B   R0L,_byteVal
                        984         CALL    _flash_sector_erase_int
000425 C4rrrrrr        +984 ;       FCALL   _flash_sector_erase_int
000429 9918rrrr         986         MOV.W   R1,#SEG( _ErasedTxt )
00042D 9908rrrr         987         MOV.W   R0,#SOF( _ErasedTxt )
                        988         CALL    _Udr_CPutNChar
000431 C4rrrrrr        +988 ;       FCALL   _Udr_CPutNChar
000435 9918rrrr         990         MOV.W   R1,#SEG( _NewlineTxt )
000439 9908rrrr         991         MOV.W   R0,#SOF( _NewlineTxt )
                        992         CALL    _Udr_CPutNChar
00043D C4rrrrrr        +992 ;       FCALL   _Udr_CPutNChar
000442                  994 _72:
000442 2F30             996         POP.W   R4, R5
000444 D680             998         RET
                       1000         ALIGN   1
                       1002         PUBLIC  _FlashBankErase
000446                 1003 _FlashBankErase:
000446 0F30            1007         PUSH.W  R4, R5
000448 A97C            1009         ADDS.W  R7,#0CH
00044A 96r4rr00        1014         CMP.B   _ParameterType,#00H
00044E F304            1015         BEQ     _74
000450 96r4rr02        1016         CMP.B   _ParameterType,#02H
000454 F304            1017         BEQ     _75
000456 FE25            1018         BR      _78
000458                 1020 _74:
000458 B6r0rr          1022         MOV.B   _ParState,#00H
00045B FE25            1024         BR      _82
00045E                 1026 _75:
00045E 860rrr          1028         MOV.B   R0L,_ParState
000461 F21D            1029         BNE     _77
000463 860rrr          1031         MOV.B   _ParState,R0L
000466 A6r1rr          1032         ADDS.B  _ParState,#01H
000469 9908rrrr        1034         MOV.W   R0,#SOF( _Cmd )
00046D 8940            1035         MOV.W   R4,R0
00046F B950            1036         MOVS.W  R5,#00H
000471 8915            1037         MOV.W   R1,R5
000473 8904            1038         MOV.W   R0,R4
                       1039         CALL    _atol
000475 C4rrrrrr       +1039 ;       FCALL   _atol
000479 99140000        1040         CMP.W   R1,#00H
00047D F203            1041         BNE     _91
00047F 99040002        1042         CMP.W   R0,#02H
00047F 9904000200      1042         CMP.W   R0,#02H
000484                 1043 _91:
000484 F304            1044         BEQ     _76
000486 9Er8rr0020      1046         MOV.W   _SCPIError,#020H
00048B FE0D            1047         BR      _82
00048B FE0D00          1047         BR      _82
00048E                 1048 _76:
00048E 8915            1050         MOV.W   R1,R5
000490 8904            1051         MOV.W   R0,R4
                       1052         CALL    _atoi
000492 C4rrrrrr       +1052 ;       FCALL   _atoi
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
000496 860rrr          1053         MOV.B   _byteVal,R0L
000499 FE06            1055         BR      _82
000499 FE0600          1055         BR      _82
00049C                 1056 _77:
00049C BEr6rr          1058         MOV.W   _SCPIError,#06H
00049F FE03            1060         BR      _82
0004A2                 1062 _78:
0004A2 BEr5rr          1064         MOV.W   _SCPIError,#05H
0004A6                 1066 _82:
0004A6 082rrr          1068         MOV     C,_CmdExecute
0004A9 F04A            1069         BCC     _90
0004AB 8E0rrr          1070         MOV.W   R0,_SCPIError
0004AE F247            1071         BNE     _90
0004B0 082rrr          1073         MOV     C,_CmdRequest
0004B3 F003            1074         BCC     _83
0004B5 BEr3rr          1076         MOV.W   _SCPIError,#03H
0004B8 FE42            1077         BR      _90
0004B8 FE42            1077         BR      _90
0004BA                 1078 _83:
0004BA 860rrr          1080         MOV.B   R0L,_ParState
0004BD F203            1081         BNE     _84
0004BF BEr7rr          1083         MOV.W   _SCPIError,#07H
0004C2 FE3D            1084         BR      _90
0004C2 FE3D            1084         BR      _90
0004C4                 1085 _84:
0004C4 9918rrrr        1087         MOV.W   R1,#SEG( _ErasingSectorTxt )
0004C8 9908rrrr        1088         MOV.W   R0,#SOF( _ErasingSectorTxt )
                       1089         CALL    _Udr_CPutNChar
0004CC C4rrrrrr       +1089 ;       FCALL   _Udr_CPutNChar
0004D0 918800          1091         MOV.B   R4L,#00H
0004D3 FE1B            1093         BR      _86
0004D3 FE1B00          1093         BR      _86
0004D6                 1094 _85:
0004D6 910828          1096         MOV.B   R0L,#028H
                       1097         CALL    _Udr_PutChar
0004D9 C4rrrrrr       +1097 ;       FCALL   _Udr_PutChar
0004DD 8108            1099         MOV.B   R0L,R4L
0004DF B110            1100         MOVS.B  R0H,#00H
0004E1 B910            1101         MOVS.W  R1,#00H
0004E3 9928rrrr        1102         MOV.W   R2,#SOF( _strout )
0004E7 B930            1103         MOVS.W  R3,#00H
0004E9 8C3F02          1104         MOV.W   [R7+2],R3
0004EC 8A2F            1105         MOV.W   [R7],R2
                       1106         CALL    _dwordtoa
0004EE C4rrrrrr       +1106 ;       FCALL   _dwordtoa
0004F2 8C1702          1108         MOV.W   R1,[R7+2]
0004F5 8A07            1109         MOV.W   R0,[R7]
                       1110         CALL    _Udr_PutNChar
0004F7 C4rrrrrr       +1110 ;       FCALL   _Udr_PutNChar
0004FB 910829          1112         MOV.B   R0L,#029H
                       1113         CALL    _Udr_PutChar
0004FE C4rrrrrr       +1113 ;       FCALL   _Udr_PutChar
000502 8108            1114         MOV.B   R0L,R4L
                       1118         CALL    _flash_sector_erase_int
000504 C4rrrrrr       +1118 ;       FCALL   _flash_sector_erase_int
000508 A181            1122         ADDS.B  R4L,#01H
00050A                 1125 _86:
00050A 8148            1126         MOV.B   R2L,R4L
00050C B150            1127         MOVS.B  R2H,#00H
00050E 8E1rrr          1128         MOV.W   R1,_meminfo+2
000511 8E0rrr          1129         MOV.W   R0,_meminfo
000514 99000004        1130         ADD.W   R0,#04H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
000518 99110000        1131         ADDC.W  R1,#00H
00051C 862C43          1132         MOV.B   CS,R1L
00051F 8810            1133         MOVC.W  R1,[R0+]
000521 4921            1134         CMP.W   R2,R1
000523 FBD9            1135         BLT     _85
000525 9918rrrr        1137         MOV.W   R1,#SEG( _ErasedTxt )
000529 9908rrrr        1138         MOV.W   R0,#SOF( _ErasedTxt )
                       1139         CALL    _Udr_CPutNChar
00052D C4rrrrrr       +1139 ;       FCALL   _Udr_CPutNChar
000531 9918rrrr        1141         MOV.W   R1,#SEG( _NewlineTxt )
000535 9908rrrr        1142         MOV.W   R0,#SOF( _NewlineTxt )
                       1143         CALL    _Udr_CPutNChar
000539 C4rrrrrr       +1143 ;       FCALL   _Udr_CPutNChar
00053E                 1145 _90:
00053E A974            1147         ADDS.W  R7,#04H
000540 2F30            1149         POP.W   R4, R5
000542 D680            1151         RET
                       1154         ALIGN   1
                       1156         PUBLIC  _FlashRead
000544                 1157 _FlashRead:
000544 0F70            1161         PUSH.W  R4, R5, R6
000546 A978            1163         ADDS.W  R7,#08H
000548 96r4rr00        1174         CMP.B   _ParameterType,#00H
00054C F304            1175         BEQ     _93
00054E 96r4rr02        1176         CMP.B   _ParameterType,#02H
000552 F304            1177         BEQ     _94
000554 FE47            1178         BR      _100
000556                 1180 _93:
000556 B6r0rr          1182         MOV.B   _ParState,#00H
000559 FE47            1184         BR      _106
00055C                 1186 _94:
00055C 96r4rr00        1188         CMP.B   _ParState,#00H
000560 F304            1189         BEQ     _95
000562 96r4rr01        1190         CMP.B   _ParState,#01H
000566 F31E            1191         BEQ     _97
000568 FE3A            1192         BR      _99
00056A                 1194 _95:
00056A A6r1rr          1196         ADDS.B  _ParState,#01H
00056D 9908rrrr        1198         MOV.W   R0,#SOF( _Cmd )
000571 8940            1199         MOV.W   R4,R0
000573 B950            1200         MOVS.W  R5,#00H
000575 8915            1201         MOV.W   R1,R5
000577 8904            1202         MOV.W   R0,R4
                       1203         CALL    _atol
000579 C4rrrrrr       +1203 ;       FCALL   _atol
00057D 9914000F        1204         CMP.W   R1,#0FH
000581 FB09            1205         BLT     _96
000583 FC04            1206         BGT     _127
000585 9904FFFF        1207         CMP.W   R0,#0FFFFH
000589 F905            1208         BL      _96
000589 F90500          1208         BL      _96
00058C                 1209 _127:
00058C 9Er8rr0020      1211         MOV.W   _SCPIError,#020H
000591 FE2B            1212         BR      _106
000591 FE2B00          1212         BR      _106
000594                 1213 _96:
000594 8915            1215         MOV.W   R1,R5
000596 8904            1216         MOV.W   R0,R4
                       1217         CALL    _atol
000598 C4rrrrrr       +1217 ;       FCALL   _atol
00059C 8E1rrr          1218         MOV.W   _dwordVal1+2,R1
00059F 8E0rrr          1219         MOV.W   _dwordVal1,R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
0005A2 FE22            1221         BR      _106
0005A4                 1223 _97:
0005A4 A6r1rr          1225         ADDS.B  _ParState,#01H
0005A7 9908rrrr        1227         MOV.W   R0,#SOF( _Cmd )
0005AB 8940            1228         MOV.W   R4,R0
0005AD B950            1229         MOVS.W  R5,#00H
0005AF 8915            1230         MOV.W   R1,R5
0005B1 8904            1231         MOV.W   R0,R4
                       1232         CALL    _atol
0005B3 C4rrrrrr       +1232 ;       FCALL   _atol
0005B7 9914000F        1233         CMP.W   R1,#0FH
0005BB FB09            1234         BLT     _98
0005BD FC04            1235         BGT     _128
0005BF 9904FFFF        1236         CMP.W   R0,#0FFFFH
0005C3 F905            1237         BL      _98
0005C3 F90500          1237         BL      _98
0005C6                 1238 _128:
0005C6 9Er8rr0020      1240         MOV.W   _SCPIError,#020H
0005CB FE0E            1241         BR      _106
0005CB FE0E00          1241         BR      _106
0005CE                 1242 _98:
0005CE 8915            1244         MOV.W   R1,R5
0005D0 8904            1245         MOV.W   R0,R4
                       1246         CALL    _atol
0005D2 C4rrrrrr       +1246 ;       FCALL   _atol
0005D6 8E1rrr          1247         MOV.W   _dwordVal2+2,R1
0005D9 8E0rrr          1248         MOV.W   _dwordVal2,R0
0005DC FE05            1250         BR      _106
0005DE                 1252 _99:
0005DE BEr5rr          1254         MOV.W   _SCPIError,#05H
0005E1 FE03            1256         BR      _106
0005E4                 1258 _100:
0005E4 BEr5rr          1260         MOV.W   _SCPIError,#05H
0005E8                 1262 _106:
0005E8 082rrr          1264         MOV     C,_CmdExecute
                       1265         BCC     _126
0005EB F102           +1265 ;       BCS     _LG_132
0005ED D50185         +1265 ;       JMP.L   _126
0005ED D50185         +1265 ;       JMP.L   _126
0005F0                +1265 _LG_132:
0005F0 8E0rrr          1266         MOV.W   R0,_SCPIError
                       1267         BNE     _126
0005F3 F302           +1267 ;       BEQ     _LG_134
0005F5 D50181         +1267 ;       JMP.L   _126
0005F5 D50181         +1267 ;       JMP.L   _126
0005F8                +1267 _LG_134:
0005F8 082rrr          1269         MOV     C,_CmdRequest
                       1270         BCC     _120
0005FB F102           +1270 ;       BCS     _LG_136
0005FD D5017B         +1270 ;       JMP.L   _120
0005FD D5017B         +1270 ;       JMP.L   _120
000600                +1270 _LG_136:
000600 864rrr          1272         MOV.B   R2L,_ParState
000603 F204            1273         BNE     _107
000605 BEr7rr          1275         MOV.W   _SCPIError,#07H
                       1276         BR      _126
000608 D50178         +1276         JMP.L   _126
000608 D5017800       +1276         JMP.L   _126
00060C                 1277 _107:
00060C 914402          1279         CMP.B   R2L,#02H
00060F F904            1280         BL      _108
000611 BEr3rr          1282         MOV.W   _SCPIError,#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
                       1283         BR      _126
000614 D50172         +1283         JMP.L   _126
000614 D5017200       +1283         JMP.L   _126
000618                 1284 _108:
000618 8E1rrr          1286         MOV.W   R1,_dwordVal1+2
00061B 8E0rrr          1287         MOV.W   R0,_dwordVal1
00061E 99050001        1288         AND.W   R0,#01H
000622 99150000        1289         AND.W   R1,#00H
000626 6910            1290         OR.W    R1,R0
000628 F305            1291         BEQ     _109
00062A 9Er2rr0001      1293         SUB.W   _dwordVal1,#01H
00062F 9Er3rr0000      1294         SUBB.W  _dwordVal1+2,#00H
00062F 9Er3rr0000      1294         SUBB.W  _dwordVal1+2,#00H
000634                 1295 _109:
000634 864rrr          1297         MOV.B   _ParState,R2L
000637 96r4rr01        1298         CMP.B   _ParState,#01H
00063B F20B            1299         BNE     _110
00063D 8E1rrr          1301         MOV.W   R1,_dwordVal1+2
000640 8E0rrr          1302         MOV.W   R0,_dwordVal1
000643 99000020        1303         ADD.W   R0,#020H
000647 99110000        1304         ADDC.W  R1,#00H
00064B 8E1rrr          1305         MOV.W   _dwordVal2+2,R1
00064E 8E0rrr          1306         MOV.W   _dwordVal2,R0
00064E 8E0rrr00        1306         MOV.W   _dwordVal2,R0
000652                 1307 _110:
000652 8E1rrr          1309         MOV.W   R1,_dwordVal2+2
000655 8E0rrr          1310         MOV.W   R0,_dwordVal2
000658 99050001        1311         AND.W   R0,#01H
00065C 99150000        1312         AND.W   R1,#00H
000660 6910            1313         OR.W    R1,R0
000662 F305            1314         BEQ     _111
000664 9Er2rr0001      1316         SUB.W   _dwordVal2,#01H
000669 9Er3rr0000      1317         SUBB.W  _dwordVal2+2,#00H
000669 9Er3rr0000      1317         SUBB.W  _dwordVal2+2,#00H
00066E                 1318 _111:
00066E 8E1rrr          1320         MOV.W   R1,_dwordVal1+2
000671 8E0rrr          1321         MOV.W   R0,_dwordVal1
000674 4E1rrr          1322         CMP.W   _dwordVal2+2,R1
000677 F202            1323         BNE     _131
000679 4E0rrr          1324         CMP.W   _dwordVal2,R0
000679 4E0rrr          1324         CMP.W   _dwordVal2,R0
00067C                 1325 _131:
00067C F003            1326         BCC     _112
00067E BEr3rr          1328         MOV.W   _SCPIError,#03H
                       1329         BR      _126
000681 D5013B         +1329         JMP.L   _126
000681 D5013B         +1329         JMP.L   _126
000684                 1330 _112:
000684 9918rrrr        1332         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
000688 9908rrrr        1333         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1334         CALL    _Udr_CPutNChar
00068C C4rrrrrr       +1334 ;       FCALL   _Udr_CPutNChar
000690 8E5rrr          1336         MOV.W   R5,_dwordVal1+2
000693 8E4rrr          1337         MOV.W   R4,_dwordVal1
000696 DC50            1338         LSR.D   R4,#010H
000698 9908rrrr        1341         MOV.W   R0,#SOF( _strout )
00069C 8920            1342         MOV.W   R2,R0
00069E B930            1343         MOVS.W  R3,#00H
0006A0 8C3F06          1344         MOV.W   [R7+6],R3
0006A3 8C2F04          1345         MOV.W   [R7+4],R2
0006A6 8904            1346         MOV.W   R0,R4
                       1347         CALL    _wordtohex
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
0006A8 C4rrrrrr       +1347 ;       FCALL   _wordtohex
0006AC 8C1706          1348         MOV.W   R1,[R7+6]
0006AF 8C0704          1349         MOV.W   R0,[R7+4]
                       1351         CALL    _Udr_PutNChar
0006B2 C4rrrrrr       +1351 ;       FCALL   _Udr_PutNChar
0006B6 8108            1354         MOV.B   R0L,R4L
0006B8 A106            1355         ADDS.B  R0L,#06H
0006BA 9107FF          1356         XOR.B   R0L,#0FFH
0006BD A101            1357         ADDS.B  R0L,#01H
0006BF 8C3706          1358         MOV.W   R3,[R7+6]
0006C2 8C2704          1359         MOV.W   R2,[R7+4]
                       1360         CALL    _bytetohex
0006C5 C4rrrrrr       +1360 ;       FCALL   _bytetohex
0006C9 8C1706          1361         MOV.W   R1,[R7+6]
0006CC 8C0704          1362         MOV.W   R0,[R7+4]
                       1364         CALL    _Udr_PutNChar
0006CF C4rrrrrr       +1364 ;       FCALL   _Udr_PutNChar
0006D3 9918rrrr        1366         MOV.W   R1,#SEG( _NewlineTxt )
0006D7 9908rrrr        1367         MOV.W   R0,#SOF( _NewlineTxt )
                       1368         CALL    _Udr_CPutNChar
0006DB C4rrrrrr       +1368 ;       FCALL   _Udr_CPutNChar
0006DF 91D800          1370         MOV.B   R6H,#00H
0006E2                 1373 _113:
0006E2 8E1rrr          1375         MOV.W   R1,_dwordVal1+2
0006E5 8E0rrr          1376         MOV.W   R0,_dwordVal1
0006E8 818D            1377         MOV.B   R4L,R6H
0006EA B190            1378         MOVS.B  R4H,#00H
0006EC B950            1379         MOVS.W  R5,#00H
0006EE 8931            1380         MOV.W   R3,R1
0006F0 8920            1381         MOV.W   R2,R0
0006F2 0924            1382         ADD.W   R2,R4
0006F4 1935            1383         ADDC.W  R3,R5
0006F6 99250000        1384         AND.W   R2,#00H
0006FA 99350001        1385         AND.W   R3,#01H
0006FE 99050000        1386         AND.W   R0,#00H
000702 99150001        1387         AND.W   R1,#01H
000706 4931            1388         CMP.W   R3,R1
000708 F201            1389         BNE     _132
00070A 4920            1390         CMP.W   R2,R0
00070A 4920            1390         CMP.W   R2,R0
00070C                 1391 _132:
00070C F32D            1392         BEQ     _114
00070E 9918rrrr        1393         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
000712 9908rrrr        1394         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1396         CALL    _Udr_CPutNChar
000716 C4rrrrrr       +1396 ;       FCALL   _Udr_CPutNChar
00071A 8E1rrr          1398         MOV.W   R1,_dwordVal1+2
00071D 8E0rrr          1399         MOV.W   R0,_dwordVal1
000720 0904            1400         ADD.W   R0,R4
000722 1915            1401         ADDC.W  R1,R5
000724 DC10            1402         LSR.D   R0,#010H
000726 8C3706          1404         MOV.W   R3,[R7+6]
000729 8C2704          1405         MOV.W   R2,[R7+4]
00072C 8960            1406         MOV.W   R6,R0
00072E 8906            1407         MOV.W   R0,R6
                       1412         CALL    _wordtohex
000730 C4rrrrrr       +1412 ;       FCALL   _wordtohex
000734 8C1706          1413         MOV.W   R1,[R7+6]
000737 8C0704          1414         MOV.W   R0,[R7+4]
                       1416         CALL    _Udr_PutNChar
00073A C4rrrrrr       +1416 ;       FCALL   _Udr_PutNChar
00073E 810C            1419         MOV.B   R0L,R6L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
000740 A106            1420         ADDS.B  R0L,#06H
000742 9107FF          1421         XOR.B   R0L,#0FFH
000745 A101            1422         ADDS.B  R0L,#01H
000747 8C3706          1423         MOV.W   R3,[R7+6]
00074A 8C2704          1424         MOV.W   R2,[R7+4]
                       1425         CALL    _bytetohex
00074D C4rrrrrr       +1425 ;       FCALL   _bytetohex
000751 8C1706          1426         MOV.W   R1,[R7+6]
000754 8C0704          1427         MOV.W   R0,[R7+4]
                       1429         CALL    _Udr_PutNChar
000757 C4rrrrrr       +1429 ;       FCALL   _Udr_PutNChar
00075B 9918rrrr        1430         MOV.W   R1,#SEG( _NewlineTxt )
00075F 9908rrrr        1431         MOV.W   R0,#SOF( _NewlineTxt )
                       1433         CALL    _Udr_CPutNChar
000763 C4rrrrrr       +1433 ;       FCALL   _Udr_CPutNChar
000768                 1435 _114:
000768 0E4rrr          1437         ADD.W   _dwordVal1,R4
00076B 1E5rrr          1438         ADDC.W  _dwordVal1+2,R5
00076E 8E5rrr          1440         MOV.W   R5,_dwordVal2+2
000771 8E4rrr          1441         MOV.W   R4,_dwordVal2
000774 8E3rrr          1442         MOV.W   R3,_dwordVal1+2
000777 8E2rrr          1443         MOV.W   R2,_dwordVal1
00077A 8915            1444         MOV.W   R1,R5
00077C 8904            1445         MOV.W   R0,R4
00077E 2E0rrr          1446         SUB.W   R0,_dwordVal1
000781 3E1rrr          1447         SUBB.W  R1,_dwordVal1+2
000784 99140000        1448         CMP.W   R1,#00H
000788 F202            1449         BNE     _133
00078A 99040020        1450         CMP.W   R0,#020H
00078A 99040020        1450         CMP.W   R0,#020H
00078E                 1451 _133:
00078E F903            1452         BL      _115
000790 91D820          1454         MOV.B   R6H,#020H
000793 FE05            1456         BR      _116
000793 FE0500          1456         BR      _116
000796                 1457 _115:
000796 8913            1459         MOV.W   R1,R3
000798 8902            1460         MOV.W   R0,R2
00079A 2180            1461         SUB.B   R4L,R0L
00079C 81D8            1462         MOV.B   R6H,R4L
00079E                 1465 _116:
00079E 810D            1467         MOV.B   R0L,R6H
0007A0 B110            1468         MOVS.B  R0H,#00H
0007A2 B910            1469         MOVS.W  R1,#00H
0007A4 0902            1470         ADD.W   R0,R2
0007A6 1913            1471         ADDC.W  R1,R3
0007A8 8951            1472         MOV.W   R5,R1
0007AA 8940            1473         MOV.W   R4,R0
0007AC 99450000        1474         AND.W   R4,#00H
0007B0 99550001        1475         AND.W   R5,#01H
0007B4 8913            1476         MOV.W   R1,R3
0007B6 8902            1477         MOV.W   R0,R2
0007B8 99050000        1478         AND.W   R0,#00H
0007BC 99150001        1479         AND.W   R1,#01H
0007C0 4951            1480         CMP.W   R5,R1
0007C2 F201            1481         BNE     _134
0007C4 4940            1482         CMP.W   R4,R0
0007C4 4940            1482         CMP.W   R4,R0
0007C6                 1483 _134:
0007C6 F306            1484         BEQ     _117
0007C8 8104            1486         MOV.B   R0L,R2L
0007CA A100            1487         ADDS.B  R0L,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
0007CC 910500          1488         AND.B   R0L,#00H
0007CF 2104            1489         SUB.B   R0L,R2L
0007D1 81D0            1490         MOV.B   R6H,R0L
0007D4                 1493 _117:
0007D4 91083A          1495         MOV.B   R0L,#03AH
                       1496         CALL    _Udr_PutChar
0007D7 C4rrrrrr       +1496 ;       FCALL   _Udr_PutChar
0007DB 8C3706          1498         MOV.W   R3,[R7+6]
0007DE 8C2704          1499         MOV.W   R2,[R7+4]
0007E1 810D            1500         MOV.B   R0L,R6H
                       1503         CALL    _bytetohex
0007E3 C4rrrrrr       +1503 ;       FCALL   _bytetohex
0007E7 8C1706          1506         MOV.W   R1,[R7+6]
0007EA 8C0704          1507         MOV.W   R0,[R7+4]
                       1509         CALL    _Udr_PutNChar
0007ED C4rrrrrr       +1509 ;       FCALL   _Udr_PutNChar
0007F1 8E1rrr          1511         MOV.W   R1,_dwordVal1+2
0007F4 8E0rrr          1512         MOV.W   R0,_dwordVal1
0007F7 B931            1513         MOV.W   R3,#01H
0007F9 B920            1514         MOV.W   R2,#00H
0007FB C4rrrrrr        1515         FCALL   __UMODL
0007FF 8951            1516         MOV.W   R5,R1
000801 8940            1517         MOV.W   R4,R0
000803 8C3706          1519         MOV.W   R3,[R7+6]
000806 8C2704          1520         MOV.W   R2,[R7+4]
000809 8904            1521         MOV.W   R0,R4
                       1523         CALL    _wordtohex
00080B C4rrrrrr       +1523 ;       FCALL   _wordtohex
00080F 8C1706          1524         MOV.W   R1,[R7+6]
000812 8C0704          1525         MOV.W   R0,[R7+4]
                       1527         CALL    _Udr_PutNChar
000815 C4rrrrrr       +1527 ;       FCALL   _Udr_PutNChar
000819 910830          1529         MOV.B   R0L,#030H
                       1530         CALL    _Udr_PutChar
00081C C4rrrrrr       +1530 ;       FCALL   _Udr_PutChar
000820 910830          1532         MOV.B   R0L,#030H
                       1533         CALL    _Udr_PutChar
000823 C4rrrrrr       +1533 ;       FCALL   _Udr_PutChar
000827 8914            1535         MOV.W   R1,R4
000829 D818            1536         LSR.W   R1,#08H
00082B 7955            1537         XOR.W   R5,R5
00082D E9410100        1538         DIVU.D  R4,#0100H
000831 012A            1539         ADD.B   R1L,R5L
000833 912020          1540         ADD.B   R1L,#020H
000836 81C2            1541         MOV.B   R6L,R1L
000838 B910            1544         MOV.W   R1,#00H
00083A B900            1545         MOV.W   R0,#00H
00083C FE2A            1547         BR      _119
00083C FE2A            1547         BR      _119
00083E                 1548 _118:
00083E 8E5rrr          1550         MOV.W   R5,_dwordVal1+2
000841 8E4rrr          1551         MOV.W   R4,_dwordVal1
000844 8C1F02          1553         MOV.W   [R7+2],R1
000847 8A0F            1554         MOV.W   [R7],R0
000849 0940            1555         ADD.W   R4,R0
00084B 1951            1556         ADDC.W  R5,R1
00084D 99570008        1559         XOR.W   R5,#08H
000851 86AC43          1560         MOV.B   CS,R5L
000854 8854            1561         MOVC.W  R5,[R4+]
000856 8945            1564         MOV.W   R4,R5
000858 D848            1565         LSR.W   R4,#08H
00085A 8905            1566         MOV.W   R0,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
00085C D908            1567         ASL.W   R0,#08H
00085E 0904            1568         ADD.W   R0,R4
000860 8C3706          1569         MOV.W   R3,[R7+6]
000863 8C2704          1570         MOV.W   R2,[R7+4]
                       1571         CALL    _wordtohex
000866 C4rrrrrr       +1571 ;       FCALL   _wordtohex
00086A 8914            1573         MOV.W   R1,R4
00086C 8945            1574         MOV.W   R4,R5
00086E 7955            1575         XOR.W   R5,R5
000870 E9410100        1576         DIVU.D  R4,#0100H
000874 8102            1579         MOV.B   R0L,R1L
000876 010A            1580         ADD.B   R0L,R5L
000878 01C0            1581         ADD.B   R6L,R0L
00087A 8C1706          1584         MOV.W   R1,[R7+6]
00087D 8C0704          1585         MOV.W   R0,[R7+4]
                       1587         CALL    _Udr_PutNChar
000880 C4rrrrrr       +1587 ;       FCALL   _Udr_PutNChar
000884 8C1702          1589         MOV.W   R1,[R7+2]
000887 8A07            1590         MOV.W   R0,[R7]
000889 99000002        1591         ADD.W   R0,#02H
00088D 99110000        1592         ADDC.W  R1,#00H
000892                 1597 _119:
000892 818D            1598         MOV.B   R4L,R6H
000894 B190            1599         MOVS.B  R4H,#00H
000896 B950            1600         MOVS.W  R5,#00H
000898 4915            1602         CMP.W   R1,R5
00089A F201            1603         BNE     _135
00089C 4904            1604         CMP.W   R0,R4
00089C 4904            1604         CMP.W   R0,R4
00089E                 1605 _135:
00089E F1CF            1606         BCS     _118
0008A0 810C            1608         MOV.B   R0L,R6L
0008A2 9107FF          1609         XOR.B   R0L,#0FFH
0008A5 A101            1614         ADDS.B  R0L,#01H
0008A7 8C3706          1615         MOV.W   R3,[R7+6]
0008AA 8C2704          1616         MOV.W   R2,[R7+4]
                       1617         CALL    _bytetohex
0008AD C4rrrrrr       +1617 ;       FCALL   _bytetohex
0008B1 8C1706          1618         MOV.W   R1,[R7+6]
0008B4 8C0704          1619         MOV.W   R0,[R7+4]
                       1621         CALL    _Udr_PutNChar
0008B7 C4rrrrrr       +1621 ;       FCALL   _Udr_PutNChar
0008BB 9918rrrr        1622         MOV.W   R1,#SEG( _NewlineTxt )
0008BF 9908rrrr        1623         MOV.W   R0,#SOF( _NewlineTxt )
                       1625         CALL    _Udr_CPutNChar
0008C3 C4rrrrrr       +1625 ;       FCALL   _Udr_CPutNChar
0008C7 0E4rrr          1627         ADD.W   R4,_dwordVal1
0008CA 1E5rrr          1628         ADDC.W  R5,_dwordVal1+2
0008CD 4E5rrr          1629         CMP.W   R5,_dwordVal2+2
0008D0 F202            1630         BNE     _136
0008D2 4E4rrr          1631         CMP.W   R4,_dwordVal2
0008D2 4E4rrr00        1631         CMP.W   R4,_dwordVal2
0008D6                 1632 _136:
                       1633         BCS     _113
0008D6 F002           +1633 ;       BCC     _LG_170
0008D8 D5FF04         +1633 ;       JMP.L   _113
0008D8 D5FF0400       +1633 ;       JMP.L   _113
0008DC                +1633 _LG_170:
0008DC 9918rrrr        1635         MOV.W   R1,#SEG( _EndOfFileRecTxt )
0008E0 9908rrrr        1636         MOV.W   R0,#SOF( _EndOfFileRecTxt )
                       1637         CALL    _Udr_CPutNChar
0008E4 C4rrrrrr       +1637 ;       FCALL   _Udr_CPutNChar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
0008E8 9918rrrr        1639         MOV.W   R1,#SEG( _NewlineTxt )
0008EC 9908rrrr        1640         MOV.W   R0,#SOF( _NewlineTxt )
                       1641         CALL    _Udr_CPutNChar
0008F0 C4rrrrrr       +1641 ;       FCALL   _Udr_CPutNChar
0008F4 FE02            1643         BR      _126
0008F4 FE02            1643         BR      _126
0008F6                 1644 _120:
0008F6 BEr3rr          1646         MOV.W   _SCPIError,#03H
0008FA                 1648 _126:
0008FA 99700008        1650         ADD.W   R7,#08H
0008FE 2F70            1652         POP.W   R4, R5, R6
000900 D680            1654         RET
                       1657         ALIGN   1
                       1659         PUBLIC  _FindParameter
000902                 1660 _FindParameter:
000902 0F70            1672         PUSH.W  R4, R5, R6
000904 A97C            1674         ADDS.W  R7,#0CH
000906 8951            1678         MOV.W   R5,R1
000908 8940            1679         MOV.W   R4,R0
00090A 91C800          1687         MOV.B   R6L,#00H
00090D FE3A            1690         BR      _138
00090D FE3A00          1690         BR      _138
000910                 1691 _137:
000910 8C1F02          1695         MOV.W   [R7+2],R1
000913 8A0F            1696         MOV.W   [R7],R0
000915 862C43          1697         MOV.B   CS,R1L
000918 8820            1698         MOVC.W  R2,[R0+]
00091A 99040000        1699         CMP.W   R0,#00H
00091E F202            1700         BNE     _142
000920 A64143          1701         ADDS.B  CS,#01H
000920 A6414300        1701         ADDS.B  CS,#01H
000924                 1702 _142:
000924 8830            1703         MOVC.W  R3,[R0+]
000926 8915            1706         MOV.W   R1,R5
000928 8904            1707         MOV.W   R0,R4
                       1710         CALL    _Cstrcmp
00092A C4rrrrrr       +1710 ;       FCALL   _Cstrcmp
00092E 6900            1713         OR.W    R0,R0
000930 F32C            1714         BEQ     _141
000932 8C1702          1715         MOV.W   R1,[R7+2]
000935 8A07            1716         MOV.W   R0,[R7]
000937 99000004        1717         ADD.W   R0,#04H
00093B 99110000        1718         ADDC.W  R1,#00H
00093F 862C43          1719         MOV.B   CS,R1L
000942 8820            1720         MOVC.W  R2,[R0+]
000944 99040000        1721         CMP.W   R0,#00H
000948 F202            1722         BNE     _143
00094A A64143          1723         ADDS.B  CS,#01H
00094A A6414300        1723         ADDS.B  CS,#01H
00094E                 1724 _143:
00094E 8830            1725         MOVC.W  R3,[R0+]
000950 8915            1726         MOV.W   R1,R5
000952 8904            1727         MOV.W   R0,R4
                       1730         CALL    _Cstrcmp
000954 C4rrrrrr       +1730 ;       FCALL   _Cstrcmp
000958 6900            1733         OR.W    R0,R0
00095A F317            1734         BEQ     _141
00095C 8C1702          1736         MOV.W   R1,[R7+2]
00095F 8A07            1737         MOV.W   R0,[R7]
000961 99000008        1738         ADD.W   R0,#08H
000965 99110000        1739         ADDC.W  R1,#00H
000969 862C43          1743         MOV.B   CS,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
00096C 8820            1744         MOVC.W  R2,[R0+]
00096E 99040000        1745         CMP.W   R0,#00H
000972 F202            1746         BNE     _144
000974 A64143          1747         ADDS.B  CS,#01H
000974 A6414300        1747         ADDS.B  CS,#01H
000978                 1748 _144:
000978 8830            1749         MOVC.W  R3,[R0+]
00097A 91C4FF          1752         CMP.B   R6L,#0FFH
00097D F006            1753         BCC     _141
00097F A1C1            1755         ADDS.B  R6L,#01H
000982                 1759 _138:
000982 8913            1760         MOV.W   R1,R3
000984 8902            1761         MOV.W   R0,R2
000986 6932            1762         OR.W    R3,R2
000988 F2C3            1765         BNE     _137
00098A                 1767 _141:
00098A 810C            1769         MOV.B   R0L,R6L
00098C A974            1774         ADDS.W  R7,#04H
00098E 2F70            1776         POP.W   R4, R5, R6
000990 D680            1778         RET
                       1786         EXTRN   HCODE(_flash_get_numsectors)
                       1788         EXTRN   BIT(_CmdExecute)
000000                 1790 RS232CMD_CLR_NE@DS      SEGMENT DATA JOIN CLEAR
000000                 1791         RSEG    RS232CMD_CLR_NE@DS
000000 RESERVED        1792 _ParState:      DS      1
000000
                       1793         EXTRN   HCODE(__UMODL)
                       1796         EXTRN   HCODE(_Cstrcmp)
                       1799         EXTRN   HCODE(_ReadErrorEventQueue)
                       1801         EXTRN   HCODE(__FL_STATUSBUSYTxt)
000001                 1804 _strout:        DS      8
   |  RESERVED             
000008
                       1806         EXTRN   HCODE(__FL_STATUSERSUSPTxt)
                       1809         EXTRN   HCODE(_atoi)
                       1812         EXTRN   HCODE(_atol)
                       1815         EXTRN   HCODE(_flash_reset)
                       1818         EXTRN   HCODE(_Udr_CPutNChar)
                       1820         EXTRN   HCODE(__FL_STATUSREADYTxt)
                       1823         EXTRN   HCODE(_wordtohex)
                       1825         EXTRN   HCODE(__FL_STATUSERRORTxt)
                       1828         EXTRN   DATA(_Cmd)
000009 RESERVED        1830         ALIGN   1
000009
00000A                 1831 _dwordVal1:     DS      4
   |  RESERVED             
00000D
                       1833         ALIGN   1
00000E                 1834 _dwordVal2:     DS      4
   |  RESERVED             
000011
                       1836         EXTRN   HCODE(__FL_STATUSTIMEOUTTxt)
                       1838         EXTRN   BIT(_CmdRequest)
                       1844         EXTRN   HCODE(_ErrorTxt_Array)
                       1847         EXTRN   HCODE(_flash_get_sector_size)
                       1850         EXTRN   HCODE(_bytetohex)
                       1853         EXTRN   HCODE(_flash_get_status)
                       1860         EXTRN   HCODE(_flash_get_device_info)
000012 RESERVED        1862 _byteVal:       DS      1
000012
                       1864         EXTRN   DATA(_ParameterType)
                       1879         EXTRN   DATA(_meminfo)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
                       1880         EXTRN   IDATA(__lc_bs)
                       1883         EXTRN   HCODE(_flash_sector_erase_int)
                       1886         EXTRN   HCODE(_Udr_PutNChar)
                       1888         EXTRN   DATA(_SCPIError)
                       1891         EXTRN   HCODE(_dwordtoa)
                       1894         EXTRN   HCODE(_Udr_PutChar)
                       1895         EXTRN   DATA(__lc_ub_xvwbuffer)
                       1896         EXTRN   DATA(__lc_ue_xvwbuffer)
                       1897         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       1898         CALLS   'SystemIDN', 'Udr_PutChar'
                       1899         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       1900         CALLS   'SystemIDN', 'Udr_PutChar'
                       1901         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       1902         CALLS   'SystemIDN', 'Udr_PutChar'
                       1903         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       1904         CALLS   'SystemError', 'ReadErrorEventQueue'
                       1905         CALLS   'SystemError', 'dwordtoa'
                       1906         CALLS   'SystemError', 'Udr_PutChar'
                       1907         CALLS   'SystemError', 'Udr_PutNChar'
                       1908         CALLS   'SystemError', 'Udr_PutChar'
                       1909         CALLS   'SystemError', 'Udr_CPutNChar'
                       1910         CALLS   'SystemError', 'Udr_PutChar'
                       1911         CALLS   'SystemError', 'Udr_CPutNChar'
                       1912         CALLS   'FlashReset', 'flash_reset'
                       1913         CALLS   'FlashInfo', 'flash_get_device_info'
                       1914         CALLS   'FlashInfo', 'dwordtoa'
                       1915         CALLS   'FlashInfo', 'Udr_PutNChar'
                       1916         CALLS   'FlashInfo', 'Udr_PutChar'
                       1917         CALLS   'FlashInfo', 'dwordtoa'
                       1918         CALLS   'FlashInfo', 'Udr_PutNChar'
                       1919         CALLS   'FlashInfo', 'Udr_PutChar'
                       1920         CALLS   'FlashInfo', 'flash_get_numsectors'
                       1921         CALLS   'FlashInfo', 'dwordtoa'
                       1922         CALLS   'FlashInfo', 'Udr_PutNChar'
                       1923         CALLS   'FlashInfo', 'Udr_CPutNChar'
                       1924         CALLS   'FlashStatus', 'flash_get_status'
                       1925         CALLS   'FlashStatus', 'Udr_CPutNChar'
                       1926         CALLS   'FlashSectorSize', 'atoi'
                       1927         CALLS   'FlashSectorSize', 'flash_get_sector_size'
                       1928         CALLS   'FlashSectorSize', 'dwordtoa'
                       1929         CALLS   'FlashSectorSize', 'Udr_PutNChar'
                       1930         CALLS   'FlashSectorSize', 'Udr_CPutNChar'
                       1931         CALLS   'FlashSectorErase', 'atol'
                       1932         CALLS   'FlashSectorErase', 'atoi'
                       1933         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       1934         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       1935         CALLS   'FlashSectorErase', 'dwordtoa'
                       1936         CALLS   'FlashSectorErase', 'Udr_PutNChar'
                       1937         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       1938         CALLS   'FlashSectorErase', 'flash_sector_erase_int'
                       1939         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       1940         CALLS   'FlashBankErase', 'atol'
                       1941         CALLS   'FlashBankErase', 'atoi'
                       1942         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       1943         CALLS   'FlashBankErase', 'Udr_PutChar'
                       1944         CALLS   'FlashBankErase', 'dwordtoa'
                       1945         CALLS   'FlashBankErase', 'Udr_PutNChar'
                       1946         CALLS   'FlashBankErase', 'Udr_PutChar'
                       1947         CALLS   'FlashBankErase', 'flash_sector_erase_int'
                       1948         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       1949         CALLS   'FlashRead', 'atol'
                       1950         CALLS   'FlashRead', 'Udr_CPutNChar'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
                       1951         CALLS   'FlashRead', 'wordtohex'
                       1952         CALLS   'FlashRead', 'Udr_PutNChar'
                       1953         CALLS   'FlashRead', 'bytetohex'
                       1954         CALLS   'FlashRead', 'Udr_PutNChar'
                       1955         CALLS   'FlashRead', 'Udr_CPutNChar'
                       1956         CALLS   'FlashRead', 'wordtohex'
                       1957         CALLS   'FlashRead', 'Udr_PutNChar'
                       1958         CALLS   'FlashRead', 'bytetohex'
                       1959         CALLS   'FlashRead', 'Udr_PutNChar'
                       1960         CALLS   'FlashRead', 'Udr_CPutNChar'
                       1961         CALLS   'FlashRead', 'Udr_PutChar'
                       1962         CALLS   'FlashRead', 'bytetohex'
                       1963         CALLS   'FlashRead', 'Udr_PutNChar'
                       1964         CALLS   'FlashRead', 'wordtohex'
                       1965         CALLS   'FlashRead', 'Udr_PutNChar'
                       1966         CALLS   'FlashRead', 'Udr_PutChar'
                       1967         CALLS   'FlashRead', 'wordtohex'
                       1968         CALLS   'FlashRead', 'Udr_PutNChar'
                       1969         CALLS   'FlashRead', 'bytetohex'
                       1970         CALLS   'FlashRead', 'Udr_PutNChar'
                       1971         CALLS   'FlashRead', 'Udr_CPutNChar'
                       1972         CALLS   'FindParameter', 'Cstrcmp'
