XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
D:\PROJECT\pt5201\BootLoader\Source\work\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          2 ; options: -IC:\cxa\include -Ml -Cxag3 -Sd -A1 -O1 -DWritableSector=14
                          3 ;          -DBootProgram=0 -g
                          5 $NOZPAGE
                          6         NAME    RS232CMD
000000                   47 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                   48         RSEG    RS232CMD_RO
                         52         PUBLIC  _SWTypeTxt
000000                   53 _SWTypeTxt:
000000 50543532303120    54         DB      050H,054H,035H,032H,030H,031H,020H,042H,04FH,04FH,054H,05FH
       424F4F545F           
00000C 4C4F4144455228    55         DB      04CH,04FH,041H,044H,045H,052H,028H,043H,029H,000H
       432900               
                         58         PUBLIC  _CompanyTxt
000016                   59 _CompanyTxt:
000016 50545600          60         DB      050H,054H,056H,000H
                         63         PUBLIC  _SWDateTxt
00001A                   64 _SWDateTxt:
00001A 30373033323030    65         DB      030H,037H,030H,033H,032H,030H,030H,030H,000H
       3000                 
                         68         PUBLIC  _SWVersionTxt
000023                   69 _SWVersionTxt:
000023 30312E3000        70         DB      030H,031H,02EH,030H,000H
                         73         PUBLIC  _PLDNotLoadedTxt
000028                   74 _PLDNotLoadedTxt:
000028 504C44204E4F54    75         DB      050H,04CH,044H,020H,04EH,04FH,054H,020H,04CH,04FH,041H,044H
       204C4F4144           
000034 454400            76         DB      045H,044H,000H
                         79         PUBLIC  _TestPLDNotAvailableTxt
000037                   80 _TestPLDNotAvailableTxt:
000037 5445535420504C    81         DB      054H,045H,053H,054H,020H,050H,04CH,044H,020H,04EH,04FH,054H
       44204E4F54           
000043 20415641494C41    82         DB      020H,041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       424C4500             
                         85         PUBLIC  _CmdNotAvailableTxt
00004E                   86 _CmdNotAvailableTxt:
00004E 434F4D4D414E44    87         DB      043H,04FH,04DH,04DH,041H,04EH,044H,020H,04EH,04FH,054H,020H
       204E4F5420           
00005A 415641494C4142    88         DB      041H,056H,041H,049H,04CH,041H,042H,04CH,045H,000H
       4C4500               
                         91         PUBLIC  _ErasingSectorTxt
000064                   92 _ErasingSectorTxt:
000064 45524153494E47    93         DB      045H,052H,041H,053H,049H,04EH,047H,020H,053H,045H,043H,054H
       2053454354           
000070 4F5200            94         DB      04FH,052H,000H
                         97         PUBLIC  _ErasedTxt
000073                   98 _ErasedTxt:
000073 45524153454400    99         DB      045H,052H,041H,053H,045H,044H,000H
                        102         PUBLIC  _NewlineTxt
00007A                  103 _NewlineTxt:
00007A 0D0A00           104         DB      00DH,00AH,000H
                        107         PUBLIC  _OKTxt
00007D 4F4B00           108 _OKTxt: DB      04FH,04BH,000H
                        111         PUBLIC  _ERRORTxt
000080                  112 _ERRORTxt:
000080 4552524F5200     113         DB      045H,052H,052H,04FH,052H,000H
                        116         PUBLIC  _IDNCmdTxt
000086                  117 _IDNCmdTxt:
000086 49444E00         118         DB      049H,044H,04EH,000H
                        121         PUBLIC  _ERRORCmdTxt
00008A                  122 _ERRORCmdTxt:
00008A 4552524F5200     123         DB      045H,052H,052H,04FH,052H,000H
                        126         PUBLIC  _ERRCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
000090                  127 _ERRCmdTxt:
000090 45525200         128         DB      045H,052H,052H,000H
                        131         PUBLIC  _HWINFOCmdTxt
000094                  132 _HWINFOCmdTxt:
000094 4857494E464F00   133         DB      048H,057H,049H,04EH,046H,04FH,000H
                        136         PUBLIC  _HWINCmdTxt
00009B                  137 _HWINCmdTxt:
00009B 4857494E00       138         DB      048H,057H,049H,04EH,000H
                        141         PUBLIC  _HWTESTCmdTxt
0000A0                  142 _HWTESTCmdTxt:
0000A0 48575445535400   143         DB      048H,057H,054H,045H,053H,054H,000H
                        146         PUBLIC  _HWTCmdTxt
0000A7                  147 _HWTCmdTxt:
0000A7 48575400         148         DB      048H,057H,054H,000H
                        151         PUBLIC  _TKCALIBRATECmdTxt
0000AB                  152 _TKCALIBRATECmdTxt:
0000AB 544B43414C4942   153         DB      054H,04BH,043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       5241544500           
                        156         PUBLIC  _TKCCmdTxt
0000B7                  157 _TKCCmdTxt:
0000B7 544B4300         158         DB      054H,04BH,043H,000H
                        161         PUBLIC  _FRESETCmdTxt
0000BB                  162 _FRESETCmdTxt:
0000BB 46524553455400   163         DB      046H,052H,045H,053H,045H,054H,000H
                        166         PUBLIC  _FRESCmdTxt
0000C2                  167 _FRESCmdTxt:
0000C2 4652455300       168         DB      046H,052H,045H,053H,000H
                        171         PUBLIC  _FINFOCmdTxt
0000C7                  172 _FINFOCmdTxt:
0000C7 46494E464F00     173         DB      046H,049H,04EH,046H,04FH,000H
                        176         PUBLIC  _FINFCmdTxt
0000CD                  177 _FINFCmdTxt:
0000CD 46494E4600       178         DB      046H,049H,04EH,046H,000H
                        181         PUBLIC  _FSTATUSCmdTxt
0000D2                  182 _FSTATUSCmdTxt:
0000D2 46535441545553   183         DB      046H,053H,054H,041H,054H,055H,053H,000H
       00                   
                        186         PUBLIC  _FSTCmdTxt
0000DA                  187 _FSTCmdTxt:
0000DA 46535400         188         DB      046H,053H,054H,000H
                        191         PUBLIC  _FCHECKSUMCmdTxt
0000DE                  192 _FCHECKSUMCmdTxt:
0000DE 46434845434B53   193         DB      046H,043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       554D00               
                        196         PUBLIC  _FCHCmdTxt
0000E8                  197 _FCHCmdTxt:
0000E8 46434800         198         DB      046H,043H,048H,000H
                        201         PUBLIC  _FSSIZECmdTxt
0000EC                  202 _FSSIZECmdTxt:
0000EC 465353495A4500   203         DB      046H,053H,053H,049H,05AH,045H,000H
                        206         PUBLIC  _FSSCmdTxt
0000F3                  207 _FSSCmdTxt:
0000F3 46535300         208         DB      046H,053H,053H,000H
                        211         PUBLIC  _FSPVERIFYCmdTxt
0000F7                  212 _FSPVERIFYCmdTxt:
0000F7 46535056455249   213         DB      046H,053H,050H,056H,045H,052H,049H,046H,059H,000H
       465900               
                        216         PUBLIC  _FSPVCmdTxt
000101                  217 _FSPVCmdTxt:
000101 4653505600       218         DB      046H,053H,050H,056H,000H
                        221         PUBLIC  _FSERASECmdTxt
000106                  222 _FSERASECmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
000106 46534552415345   223         DB      046H,053H,045H,052H,041H,053H,045H,000H
       00                   
                        226         PUBLIC  _FSERCmdTxt
00010E                  227 _FSERCmdTxt:
00010E 4653455200       228         DB      046H,053H,045H,052H,000H
                        231         PUBLIC  _FBERASECmdTxt
000113                  232 _FBERASECmdTxt:
000113 46424552415345   233         DB      046H,042H,045H,052H,041H,053H,045H,000H
       00                   
                        236         PUBLIC  _FBERCmdTxt
00011B                  237 _FBERCmdTxt:
00011B 4642455200       238         DB      046H,042H,045H,052H,000H
                        241         PUBLIC  _FREADCmdTxt
000120                  242 _FREADCmdTxt:
000120 465245414400     243         DB      046H,052H,045H,041H,044H,000H
                        246         PUBLIC  _FRECmdTxt
000126                  247 _FRECmdTxt:
000126 46524500         248         DB      046H,052H,045H,000H
                        251         PUBLIC  _ExtLinAddrRecTxt
00012A                  252 _ExtLinAddrRecTxt:
00012A 3A303230303030   253         DB      03AH,030H,032H,030H,030H,030H,030H,030H,034H,000H
       303400               
                        256         PUBLIC  _EndOfFileRecTxt
000134                  257 _EndOfFileRecTxt:
000134 3A303030303030   258         DB      03AH,030H,030H,030H,030H,030H,030H,030H,031H,046H,046H,000H
       3031464600           
                        274         PUBLIC  _Subsystem
                        275         ALIGN   1
000140                  276 _Subsystem:
000140 rrrrrrrrrrrrrr   277         DD      _IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000148 rrrrrrrrrrrrrr   278         DD      _Subsystem+16
       rr                   
00014C rrrrrrrrrrrrrr   279         DD      _SystemIDN,_ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000158 rrrrrrrrrrrrrr   280         DD      _Subsystem+32
       rr                   
00015C rrrrrrrrrrrrrr   281         DD      _SystemError,_HWINFOCmdTxt,_HWINCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000168 rrrrrrrrrrrrrr   282         DD      _Subsystem+48
       rr                   
00016C rrrrrrrrrrrrrr   283         DD      _HWInfo,_HWTESTCmdTxt,_HWTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000178 rrrrrrrrrrrrrr   284         DD      _Subsystem+64
       rr                   
00017C rrrrrrrrrrrrrr   285         DD      _HWTest,_FRESETCmdTxt,_FRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000188 rrrrrrrrrrrrrr   286         DD      _Subsystem+80
       rr                   
00018C rrrrrrrrrrrrrr   287         DD      _FlashReset,_TKCALIBRATECmdTxt,_TKCCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
000198 rrrrrrrrrrrrrr   288         DD      _Subsystem+96
       rr                   
00019C rrrrrrrrrrrrrr   289         DD      _TKCalibrate,_FINFOCmdTxt,_FINFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001A8 rrrrrrrrrrrrrr   290         DD      _Subsystem+112
       rr                   
0001AC rrrrrrrrrrrrrr   291         DD      _FlashInfo,_FSTATUSCmdTxt,_FSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001B8 rrrrrrrrrrrrrr   292         DD      _Subsystem+128
       rr                   
0001BC rrrrrrrrrrrrrr   293         DD      _FlashStatus,_FCHECKSUMCmdTxt,_FCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001C8 rrrrrrrrrrrrrr   294         DD      _Subsystem+144
       rr                   
0001CC rrrrrrrrrrrrrr   295         DD      _FlashChecksum,_FSSIZECmdTxt,_FSSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001D8 rrrrrrrrrrrrrr   296         DD      _Subsystem+160
       rr                   
0001DC rrrrrrrrrrrrrr   297         DD      _FlashSectorSize,_FSPVERIFYCmdTxt,_FSPVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001E8 rrrrrrrrrrrrrr   298         DD      _Subsystem+176
       rr                   
0001EC rrrrrrrrrrrrrr   299         DD      _FlashSectorProtectVerify,_FSERASECmdTxt,_FSERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0001F8 rrrrrrrrrrrrrr   300         DD      _Subsystem+192
       rr                   
0001FC rrrrrrrrrrrrrr   301         DD      _FlashSectorErase,_FBERASECmdTxt,_FBERCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000208 rrrrrrrrrrrrrr   302         DD      _Subsystem+208
       rr                   
00020C rrrrrrrrrrrrrr   303         DD      _FlashBankErase,_FREADCmdTxt,_FRECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000218 00000000         304         DD      000000000H
00021C rrrrrrrrrrrrrr   305         DD      _FlashRead
       rr                   
000000                  306 RS232CMD_PR     SEGMENT HCODE
000000                  307         RSEG    RS232CMD_PR
                        308         ALIGN   1
                        310         PUBLIC  _SystemIDN
000000                  311 _SystemIDN:
000000 860rrr           316         MOV.B   R0L,_ParameterType
000003 F302             317         BEQ     _3
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000005 BEr6rr           319         MOV.W   _SCPIError,#06H
000008                  320 _3:
000008 082rrr           322         MOV     C,_CmdExecute
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
00000B F031             323         BCC     _7
00000D 8E0rrr           324         MOV.W   R0,_SCPIError
000010 F22E             325         BNE     _7
000012 082rrr           327         MOV     C,_CmdRequest
000015 F02A             328         BCC     _4
000017 9918rrrr         330         MOV.W   R1,#SEG( _CompanyTxt )
00001B 9908rrrr         331         MOV.W   R0,#SOF( _CompanyTxt )
                        332         CALL    _Udr_CPutNChar
00001F C4rrrrrr        +332 ;       FCALL   _Udr_CPutNChar
000023 91082C           334         MOV.B   R0L,#02CH
                        335         CALL    _Udr_PutChar
000026 C4rrrrrr        +335 ;       FCALL   _Udr_PutChar
00002A 9918rrrr         337         MOV.W   R1,#SEG( _SWTypeTxt )
00002E 9908rrrr         338         MOV.W   R0,#SOF( _SWTypeTxt )
                        339         CALL    _Udr_CPutNChar
000032 C4rrrrrr        +339 ;       FCALL   _Udr_CPutNChar
000036 91082C           340         MOV.B   R0L,#02CH
                        342         CALL    _Udr_PutChar
000039 C4rrrrrr        +342 ;       FCALL   _Udr_PutChar
00003D 9918rrrr         344         MOV.W   R1,#SEG( _SWDateTxt )
000041 9908rrrr         345         MOV.W   R0,#SOF( _SWDateTxt )
                        346         CALL    _Udr_CPutNChar
000045 C4rrrrrr        +346 ;       FCALL   _Udr_CPutNChar
000049 91082C           348         MOV.B   R0L,#02CH
                        349         CALL    _Udr_PutChar
00004C C4rrrrrr        +349 ;       FCALL   _Udr_PutChar
000050 9918rrrr         351         MOV.W   R1,#SEG( _SWVersionTxt )
000054 9908rrrr         352         MOV.W   R0,#SOF( _SWVersionTxt )
                        353         CALL    _Udr_CPutNChar
000058 C4rrrrrr        +353 ;       FCALL   _Udr_CPutNChar
00005C 9918rrrr         355         MOV.W   R1,#SEG( _NewlineTxt )
000060 9908rrrr         356         MOV.W   R0,#SOF( _NewlineTxt )
                        357         CALL    _Udr_CPutNChar
000064 C4rrrrrr        +357 ;       FCALL   _Udr_CPutNChar
000068 D680             359         RET
000068 D680             359         RET
00006A                  360 _4:
00006A BEr3rr           362         MOV.W   _SCPIError,#03H
00006E                  364 _7:
00006E D680             366         RET
                        368         ALIGN   1
                        370         PUBLIC  _SystemError
000070                  371 _SystemError:
000070 0F70             375         PUSH.W  R4, R5, R6
000072 A97E             377         ADDS.W  R7,#0EH
000074 860rrr           384         MOV.B   R0L,_ParameterType
000077 F302             385         BEQ     _8
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
000079 BEr6rr           387         MOV.W   _SCPIError,#06H
00007C                  388 _8:
00007C 082rrr           390         MOV     C,_CmdExecute
00007F F054             391         BCC     _14
000081 8E0rrr           392         MOV.W   R0,_SCPIError
000084 F251             393         BNE     _14
000086 082rrr           395         MOV     C,_CmdRequest
000089 F04D             396         BCC     _10
                        398         CALL    _ReadErrorEventQueue
00008B C4rrrrrr        +398 ;       FCALL   _ReadErrorEventQueue
00008F 99040000         400         CMP.W   R0,#00H
000093 F14A             401         BCS     _14
000095 E9000006         403         MULU.W  R0,#06H
000099 8A0F             405         MOV.W   [R7],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
00009B 8920             406         MOV.W   R2,R0
00009D B930             407         MOVS.W  R3,#00H
00009F 9918rrrr         408         MOV.W   R1,#SEG( _ErrorTxt_Array )
0000A3 9908rrrr         409         MOV.W   R0,#SOF( _ErrorTxt_Array )
0000A7 0902             410         ADD.W   R0,R2
0000A9 1913             411         ADDC.W  R1,R3
0000AB 862C43           412         MOV.B   CS,R1L
0000AE 8810             413         MOVC.W  R1,[R0+]
0000B0 981B             414         NEG.W   R1
0000B2 8961             415         MOV.W   R6,R1
0000B4 8906             418         MOV.W   R0,R6
0000B6 B910             419         MOVS.W  R1,#00H
0000B8 9928rrrr         420         MOV.W   R2,#SOF( _strout )
0000BC 8942             421         MOV.W   R4,R2
0000BE B950             422         MOVS.W  R5,#00H
0000C0 8935             423         MOV.W   R3,R5
0000C2 8924             424         MOV.W   R2,R4
                        425         CALL    _dwordtoa
0000C4 C4rrrrrr        +425 ;       FCALL   _dwordtoa
0000C8 6966             427         OR.W    R6,R6
0000CA F304             428         BEQ     _9
0000CC 91082D           430         MOV.B   R0L,#02DH
                        431         CALL    _Udr_PutChar
0000CF C4rrrrrr        +431 ;       FCALL   _Udr_PutChar
0000CF C4rrrrrr00      +431 ;       FCALL   _Udr_PutChar
0000D4                  432 _9:
0000D4 8915             434         MOV.W   R1,R5
0000D6 8904             435         MOV.W   R0,R4
                        436         CALL    _Udr_PutNChar
0000D8 C4rrrrrr        +436 ;       FCALL   _Udr_PutNChar
0000DC 91082C           438         MOV.B   R0L,#02CH
                        439         CALL    _Udr_PutChar
0000DF C4rrrrrr        +439 ;       FCALL   _Udr_PutChar
0000E3 910822           441         MOV.B   R0L,#022H
                        442         CALL    _Udr_PutChar
0000E6 C4rrrrrr        +442 ;       FCALL   _Udr_PutChar
0000EA 8A07             444         MOV.W   R0,[R7]
0000EC B910             445         MOVS.W  R1,#00H
0000EE 9938rrrr         446         MOV.W   R3,#SEG( _ErrorTxt_Array+2 )
0000F2 9928rrrr         447         MOV.W   R2,#SOF( _ErrorTxt_Array+2 )
0000F6 0920             448         ADD.W   R2,R0
0000F8 1931             449         ADDC.W  R3,R1
0000FA 866C43           450         MOV.B   CS,R3L
0000FD 8802             451         MOVC.W  R0,[R2+]
0000FF 99240000         452         CMP.W   R2,#00H
000103 F202             453         BNE     _16
000105 A64143           454         ADDS.B  CS,#01H
000105 A64143           454         ADDS.B  CS,#01H
000108                  455 _16:
000108 8812             456         MOVC.W  R1,[R2+]
                        457         CALL    _Udr_CPutNChar
00010A C4rrrrrr        +457 ;       FCALL   _Udr_CPutNChar
00010E 910822           459         MOV.B   R0L,#022H
                        460         CALL    _Udr_PutChar
000111 C4rrrrrr        +460 ;       FCALL   _Udr_PutChar
000115 9918rrrr         462         MOV.W   R1,#SEG( _NewlineTxt )
000119 9908rrrr         463         MOV.W   R0,#SOF( _NewlineTxt )
                        464         CALL    _Udr_CPutNChar
00011D C4rrrrrr        +464 ;       FCALL   _Udr_CPutNChar
000121 FE03             466         BR      _14
000121 FE0300           466         BR      _14
000124                  467 _10:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000124 BEr3rr           469         MOV.W   _SCPIError,#03H
000128                  471 _14:
000128 A972             473         ADDS.W  R7,#02H
00012A 2F70             475         POP.W   R4, R5, R6
00012C D680             477         RET
                        480         ALIGN   1
                        482         PUBLIC  _HWInfo
00012E                  483 _HWInfo:
00012E BEr3rr           488         MOV.W   _SCPIError,#03H
000131 D680             490         RET
000133 00               492         ALIGN   1
                        494         PUBLIC  _HWTest
000134                  495 _HWTest:
000134 0F30             499         PUSH.W  R4, R5
000136 96r4rr00         502         CMP.B   _ParameterType,#00H
00013A F304             503         BEQ     _17
00013C 96r4rr02         504         CMP.B   _ParameterType,#02H
000140 F304             505         BEQ     _18
000142 FE28             506         BR      _22
000144                  508 _17:
000144 B6r0rr           510         MOV.B   _ParState,#00H
000147 FE28             512         BR      _26
00014A                  514 _18:
00014A 860rrr           516         MOV.B   R0L,_ParState
00014D F220             517         BNE     _21
00014F 860rrr           519         MOV.B   _ParState,R0L
000152 A6r1rr           520         ADDS.B  _ParState,#01H
000155 9908rrrr         522         MOV.W   R0,#SOF( _Cmd )
000159 8940             523         MOV.W   R4,R0
00015B B950             524         MOVS.W  R5,#00H
00015D 8915             525         MOV.W   R1,R5
00015F 8904             526         MOV.W   R0,R4
                        527         CALL    _atoi
000161 C4rrrrrr        +527 ;       FCALL   _atoi
000165 6900             528         OR.W    R0,R0
000167 F308             529         BEQ     _19
000169 8915             530         MOV.W   R1,R5
00016B 8904             531         MOV.W   R0,R4
                        532         CALL    _atoi
00016D C4rrrrrr        +532 ;       FCALL   _atoi
000171 99040002         533         CMP.W   R0,#02H
000175 FD05             534         BLE     _20
000175 FD0500           534         BLE     _20
000178                  535 _19:
000178 9Er8rr0020       537         MOV.W   _SCPIError,#020H
00017D FE0D             538         BR      _26
00017D FE0D00           538         BR      _26
000180                  539 _20:
000180 8915             541         MOV.W   R1,R5
000182 8904             542         MOV.W   R0,R4
                        543         CALL    _atoi
000184 C4rrrrrr        +543 ;       FCALL   _atoi
000188 860rrr           544         MOV.B   _byteVal,R0L
00018B FE06             546         BR      _26
00018B FE0600           546         BR      _26
00018E                  547 _21:
00018E BEr5rr           549         MOV.W   _SCPIError,#05H
000191 FE03             551         BR      _26
000194                  553 _22:
000194 BEr5rr           555         MOV.W   _SCPIError,#05H
000198                  557 _26:
000198 082rrr           559         MOV     C,_CmdExecute
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
00019B F028             560         BCC     _36
00019D 8E0rrr           561         MOV.W   R0,_SCPIError
0001A0 F225             562         BNE     _36
0001A2 082rrr           564         MOV     C,_CmdRequest
0001A5 F021             565         BCC     _32
0001A7 860rrr           567         MOV.B   R0L,_ParState
0001AA F203             568         BNE     _27
0001AC BEr7rr           570         MOV.W   _SCPIError,#07H
0001AF FE1E             571         BR      _36
0001AF FE1E00           571         BR      _36
0001B2                  572 _27:
0001B2 96r4rr01         574         CMP.B   _byteVal,#01H
0001B6 F304             575         BEQ     _28
0001B8 96r4rr02         576         CMP.B   _byteVal,#02H
0001BC F308             577         BEQ     _29
0001BE FE0D             578         BR      _31
0001C0                  580 _28:
                        582         CALL    _user_memory_test
0001C0 C4rrrrrr        +582 ;       FCALL   _user_memory_test
0001C4 910030           583         ADD.B   R0L,#030H
                        584         CALL    _Udr_PutChar
0001C7 C4rrrrrr        +584 ;       FCALL   _Udr_PutChar
0001CB FE07             586         BR      _31
0001CE                  588 _29:
                        590         CALL    _NVRAM_memory_test
0001CE C4rrrrrr        +590 ;       FCALL   _NVRAM_memory_test
0001D2 910030           591         ADD.B   R0L,#030H
                        592         CALL    _Udr_PutChar
0001D5 C4rrrrrr        +592 ;       FCALL   _Udr_PutChar
0001DA                  594 _31:
0001DA 9918rrrr         596         MOV.W   R1,#SEG( _NewlineTxt )
0001DE 9908rrrr         597         MOV.W   R0,#SOF( _NewlineTxt )
                        598         CALL    _Udr_CPutNChar
0001E2 C4rrrrrr        +598 ;       FCALL   _Udr_CPutNChar
0001E6 FE02             600         BR      _36
0001E6 FE02             600         BR      _36
0001E8                  601 _32:
0001E8 BEr3rr           603         MOV.W   _SCPIError,#03H
0001EC                  605 _36:
0001EC 2F30             607         POP.W   R4, R5
0001EE D680             609         RET
                        611         ALIGN   1
                        613         PUBLIC  _FlashReset
0001F0                  614 _FlashReset:
0001F0 860rrr           619         MOV.B   R0L,_ParameterType
0001F3 F302             620         BEQ     _38
0001F5 BEr6rr           622         MOV.W   _SCPIError,#06H
0001F5 BEr6rr           622         MOV.W   _SCPIError,#06H
0001F8                  623 _38:
0001F8 082rrr           625         MOV     C,_CmdExecute
0001FB F00A             626         BCC     _42
0001FD 8E0rrr           627         MOV.W   R0,_SCPIError
000200 F207             628         BNE     _42
000202 082rrr           630         MOV     C,_CmdRequest
000205 F003             631         BCC     _39
000207 BEr3rr           633         MOV.W   _SCPIError,#03H
00020A D680             634         RET
00020A D680             634         RET
00020C                  635 _39:
                        637         CALL    _flash_reset
00020C C4rrrrrr        +637 ;       FCALL   _flash_reset
000210                  639 _42:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
000210 D680             641         RET
                        643         ALIGN   1
                        645         PUBLIC  _TKCalibrate
000212                  646 _TKCalibrate:
000212 BEr3rr           651         MOV.W   _SCPIError,#03H
000215 D680             653         RET
000217 00               655         ALIGN   1
                        657         PUBLIC  _FlashInfo
000218                  658 _FlashInfo:
000218 0F30             662         PUSH.W  R4, R5
00021A A97C             664         ADDS.W  R7,#0CH
00021C 860rrr           669         MOV.B   R0L,_ParameterType
00021F F302             670         BEQ     _43
000221 BEr6rr           672         MOV.W   _SCPIError,#06H
000221 BEr6rr           672         MOV.W   _SCPIError,#06H
000224                  673 _43:
000224 082rrr           675         MOV     C,_CmdExecute
000227 F048             676         BCC     _47
000229 8E0rrr           677         MOV.W   R0,_SCPIError
00022C F245             678         BNE     _47
00022E 082rrr           680         MOV     C,_CmdRequest
000231 F041             681         BCC     _44
000233 91080E           683         MOV.B   R0L,#0EH
000236 9168rr           684         MOV.B   R3L,#SEG( __lc_bs )
000239 7177             685         XOR.B   R3H,R3H
00023B 402702           686         LEA     R2,R7+2
00023E 91A8rr           687         MOV.B   R5L,#SEG( __lc_bs )
000241 71BB             688         XOR.B   R5H,R5H
000243 8947             689         MOV.W   R4,R7
000245 0F30             690         PUSH.W  R4, R5
                        692         CALL    _flash_get_device_info
000247 C4rrrrrr        +692 ;       FCALL   _flash_get_device_info
00024B A974             693         ADDS.W  R7,#04H
00024D 840702           696         MOV.B   R0L,[R7+2]
000250 B110             697         MOVS.B  R0H,#00H
000252 B910             698         MOVS.W  R1,#00H
000254 9928rrrr         699         MOV.W   R2,#SOF( _strout )
000258 8942             700         MOV.W   R4,R2
00025A B950             701         MOVS.W  R5,#00H
00025C 8935             702         MOV.W   R3,R5
00025E 8924             703         MOV.W   R2,R4
                        704         CALL    _dwordtoa
000260 C4rrrrrr        +704 ;       FCALL   _dwordtoa
000264 8915             705         MOV.W   R1,R5
000266 8904             706         MOV.W   R0,R4
                        708         CALL    _Udr_PutNChar
000268 C4rrrrrr        +708 ;       FCALL   _Udr_PutNChar
00026C 91082C           710         MOV.B   R0L,#02CH
                        711         CALL    _Udr_PutChar
00026F C4rrrrrr        +711 ;       FCALL   _Udr_PutChar
000273 8A07             713         MOV.W   R0,[R7]
000275 B910             714         MOVS.W  R1,#00H
000277 8935             715         MOV.W   R3,R5
000279 8924             716         MOV.W   R2,R4
                        717         CALL    _dwordtoa
00027B C4rrrrrr        +717 ;       FCALL   _dwordtoa
00027F 8915             718         MOV.W   R1,R5
000281 8904             719         MOV.W   R0,R4
                        721         CALL    _Udr_PutNChar
000283 C4rrrrrr        +721 ;       FCALL   _Udr_PutNChar
000287 91082C           723         MOV.B   R0L,#02CH
                        724         CALL    _Udr_PutChar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
00028A C4rrrrrr        +724 ;       FCALL   _Udr_PutChar
                        726         CALL    _flash_get_numsectors
00028E C4rrrrrr        +726 ;       FCALL   _flash_get_numsectors
000292 B110             727         MOVS.B  R0H,#00H
000294 B910             728         MOVS.W  R1,#00H
000296 8935             729         MOV.W   R3,R5
000298 8924             730         MOV.W   R2,R4
                        731         CALL    _dwordtoa
00029A C4rrrrrr        +731 ;       FCALL   _dwordtoa
00029E 8915             733         MOV.W   R1,R5
0002A0 8904             734         MOV.W   R0,R4
                        735         CALL    _Udr_PutNChar
0002A2 C4rrrrrr        +735 ;       FCALL   _Udr_PutNChar
0002A6 9918rrrr         737         MOV.W   R1,#SEG( _NewlineTxt )
0002AA 9908rrrr         738         MOV.W   R0,#SOF( _NewlineTxt )
                        739         CALL    _Udr_CPutNChar
0002AE C4rrrrrr        +739 ;       FCALL   _Udr_CPutNChar
0002B2 FE02             741         BR      _47
0002B2 FE02             741         BR      _47
0002B4                  742 _44:
0002B4 BEr3rr           744         MOV.W   _SCPIError,#03H
0002B8                  746 _47:
0002B8 A974             748         ADDS.W  R7,#04H
0002BA 2F30             750         POP.W   R4, R5
0002BC D680             752         RET
                        754         ALIGN   1
                        756         PUBLIC  _FlashStatus
0002BE                  757 _FlashStatus:
0002BE 860rrr           762         MOV.B   R0L,_ParameterType
0002C1 F302             763         BEQ     _48
0002C3 BEr6rr           765         MOV.W   _SCPIError,#06H
0002C3 BEr6rr           765         MOV.W   _SCPIError,#06H
0002C6                  766 _48:
0002C6 082rrr           768         MOV     C,_CmdExecute
0002C9 F03C             769         BCC     _62
0002CB 8E0rrr           770         MOV.W   R0,_SCPIError
0002CE F239             771         BNE     _62
0002D0 082rrr           773         MOV     C,_CmdRequest
0002D3 F035             774         BCC     _54
0002D5 91080E           776         MOV.B   R0L,#0EH
                        777         CALL    _flash_get_status
0002D8 C4rrrrrr        +777 ;       FCALL   _flash_get_status
0002DC 910400           778         CMP.B   R0L,#00H
0002DF F30C             779         BEQ     _49
0002E1 910401           780         CMP.B   R0L,#01H
0002E4 F310             781         BEQ     _50
0002E6 910402           782         CMP.B   R0L,#02H
0002E9 F315             783         BEQ     _51
0002EB 910403           784         CMP.B   R0L,#03H
0002EE F319             785         BEQ     _52
0002F0 910404           786         CMP.B   R0L,#04H
0002F3 F31E             787         BEQ     _53
0002F5 D680             788         RET
0002F8                  790 _49:
0002F8 9918rrrr         792         MOV.W   R1,#SEG( __FL_STATUSREADYTxt )
0002FC 9908rrrr         793         MOV.W   R0,#SOF( __FL_STATUSREADYTxt )
                        794         CALL    _Udr_CPutNChar
000300 C4rrrrrr        +794 ;       FCALL   _Udr_CPutNChar
000304 D680             796         RET
000306                  798 _50:
000306 9918rrrr         800         MOV.W   R1,#SEG( __FL_STATUSBUSYTxt )
00030A 9908rrrr         801         MOV.W   R0,#SOF( __FL_STATUSBUSYTxt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
                        802         CALL    _Udr_CPutNChar
00030E C4rrrrrr        +802 ;       FCALL   _Udr_CPutNChar
000312 D680             804         RET
000314                  806 _51:
000314 9918rrrr         808         MOV.W   R1,#SEG( __FL_STATUSERSUSPTxt )
000318 9908rrrr         809         MOV.W   R0,#SOF( __FL_STATUSERSUSPTxt )
                        810         CALL    _Udr_CPutNChar
00031C C4rrrrrr        +810 ;       FCALL   _Udr_CPutNChar
000320 D680             812         RET
000322                  814 _52:
000322 9918rrrr         816         MOV.W   R1,#SEG( __FL_STATUSTIMEOUTTxt )
000326 9908rrrr         817         MOV.W   R0,#SOF( __FL_STATUSTIMEOUTTxt )
                        818         CALL    _Udr_CPutNChar
00032A C4rrrrrr        +818 ;       FCALL   _Udr_CPutNChar
00032E D680             820         RET
000330                  822 _53:
000330 9918rrrr         824         MOV.W   R1,#SEG( __FL_STATUSERRORTxt )
000334 9908rrrr         825         MOV.W   R0,#SOF( __FL_STATUSERRORTxt )
                        826         CALL    _Udr_CPutNChar
000338 C4rrrrrr        +826 ;       FCALL   _Udr_CPutNChar
00033C D680             828         RET
00033C D680             828         RET
00033E                  829 _54:
00033E BEr3rr           831         MOV.W   _SCPIError,#03H
000342                  833 _62:
000342 D680             835         RET
                        837         ALIGN   1
                        839         PUBLIC  _FlashChecksum
000344                  840 _FlashChecksum:
000344 BEr3rr           845         MOV.W   _SCPIError,#03H
000347 D680             847         RET
000349 00               849         ALIGN   1
                        851         PUBLIC  _FlashSectorSize
00034A                  852 _FlashSectorSize:
00034A 0F30             856         PUSH.W  R4, R5
00034C 96r4rr00         859         CMP.B   _ParameterType,#00H
000350 F304             860         BEQ     _63
000352 96r4rr02         861         CMP.B   _ParameterType,#02H
000356 F304             862         BEQ     _64
000358 FE2A             863         BR      _67
00035A                  865 _63:
00035A B6r0rr           867         MOV.B   _ParState,#00H
00035D FE2A             869         BR      _71
000360                  871 _64:
000360 860rrr           873         MOV.B   R0L,_ParState
000363 F222             874         BNE     _66
000365 860rrr           876         MOV.B   _ParState,R0L
000368 A6r1rr           877         ADDS.B  _ParState,#01H
00036B 9908rrrr         879         MOV.W   R0,#SOF( _Cmd )
00036F 8940             880         MOV.W   R4,R0
000371 B950             881         MOVS.W  R5,#00H
000373 8915             882         MOV.W   R1,R5
000375 8904             883         MOV.W   R0,R4
                        884         CALL    _atoi
000377 C4rrrrrr        +884 ;       FCALL   _atoi
00037B 8E3rrr           885         MOV.W   R3,_meminfo+2
00037E 8E2rrr           886         MOV.W   R2,_meminfo
000381 99200004         887         ADD.W   R2,#04H
000385 99310000         888         ADDC.W  R3,#00H
000389 866C43           889         MOV.B   CS,R3L
00038C 8832             890         MOVC.W  R3,[R2+]
00038E 4903             891         CMP.W   R0,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
000390 FD04             892         BLE     _65
000392 9Er8rr0020       894         MOV.W   _SCPIError,#020H
000397 FE0D             895         BR      _71
000397 FE0D00           895         BR      _71
00039A                  896 _65:
00039A 8915             898         MOV.W   R1,R5
00039C 8904             899         MOV.W   R0,R4
                        900         CALL    _atoi
00039E C4rrrrrr        +900 ;       FCALL   _atoi
0003A2 860rrr           901         MOV.B   _byteVal,R0L
0003A5 FE06             903         BR      _71
0003A5 FE0600           903         BR      _71
0003A8                  904 _66:
0003A8 BEr5rr           906         MOV.W   _SCPIError,#05H
0003AB FE03             908         BR      _71
0003AE                  910 _67:
0003AE BEr5rr           912         MOV.W   _SCPIError,#05H
0003B2                  914 _71:
0003B2 082rrr           916         MOV     C,_CmdExecute
0003B5 F024             917         BCC     _77
0003B7 8E0rrr           918         MOV.W   R0,_SCPIError
0003BA F221             919         BNE     _77
0003BC 082rrr           921         MOV     C,_CmdRequest
0003BF F01D             922         BCC     _73
0003C1 860rrr           924         MOV.B   R0L,_ParState
0003C4 F203             925         BNE     _72
0003C6 BEr7rr           927         MOV.W   _SCPIError,#07H
0003C9 FE1A             928         BR      _77
0003C9 FE1A00           928         BR      _77
0003CC                  929 _72:
0003CC 860rrr           931         MOV.B   R0L,_byteVal
                        932         CALL    _flash_get_sector_size
0003CF C4rrrrrr        +932 ;       FCALL   _flash_get_sector_size
0003D3 9928rrrr         933         MOV.W   R2,#SOF( _strout )
0003D7 8942             934         MOV.W   R4,R2
0003D9 B950             935         MOVS.W  R5,#00H
0003DB 8935             936         MOV.W   R3,R5
0003DD 8924             937         MOV.W   R2,R4
                        938         CALL    _dwordtoa
0003DF C4rrrrrr        +938 ;       FCALL   _dwordtoa
0003E3 8915             940         MOV.W   R1,R5
0003E5 8904             941         MOV.W   R0,R4
                        942         CALL    _Udr_PutNChar
0003E7 C4rrrrrr        +942 ;       FCALL   _Udr_PutNChar
0003EB 9918rrrr         944         MOV.W   R1,#SEG( _NewlineTxt )
0003EF 9908rrrr         945         MOV.W   R0,#SOF( _NewlineTxt )
                        946         CALL    _Udr_CPutNChar
0003F3 C4rrrrrr        +946 ;       FCALL   _Udr_CPutNChar
0003F7 FE03             948         BR      _77
0003F7 FE0300           948         BR      _77
0003FA                  949 _73:
0003FA BEr3rr           951         MOV.W   _SCPIError,#03H
0003FE                  953 _77:
0003FE 2F30             955         POP.W   R4, R5
000400 D680             957         RET
                        959         ALIGN   1
                        961         PUBLIC  _FlashSectorProtectVerify
000402                  962 _FlashSectorProtectVerify:
000402 BEr3rr           967         MOV.W   _SCPIError,#03H
000405 D680             969         RET
000407 00               971         ALIGN   1
                        973         PUBLIC  _FlashSectorErase
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
000408                  974 _FlashSectorErase:
000408 0F30             978         PUSH.W  R4, R5
00040A 96r4rr00         981         CMP.B   _ParameterType,#00H
00040E F304             982         BEQ     _79
000410 96r4rr02         983         CMP.B   _ParameterType,#02H
000414 F304             984         BEQ     _80
000416 FE2F             985         BR      _83
000418                  987 _79:
000418 B6r0rr           989         MOV.B   _ParState,#00H
00041B FE2F             991         BR      _87
00041E                  993 _80:
00041E 860rrr           995         MOV.B   R0L,_ParState
000421 F227             996         BNE     _82
000423 860rrr           998         MOV.B   _ParState,R0L
000426 A6r1rr           999         ADDS.B  _ParState,#01H
000429 9908rrrr        1001         MOV.W   R0,#SOF( _Cmd )
00042D 8940            1002         MOV.W   R4,R0
00042F B950            1003         MOVS.W  R5,#00H
000431 8915            1004         MOV.W   R1,R5
000433 8904            1005         MOV.W   R0,R4
                       1006         CALL    _atol
000435 C4rrrrrr       +1006 ;       FCALL   _atol
000439 8E3rrr          1007         MOV.W   R3,_meminfo+2
00043C 8E2rrr          1008         MOV.W   R2,_meminfo
00043F 99200004        1009         ADD.W   R2,#04H
000443 99310000        1010         ADDC.W  R3,#00H
000447 866C43          1011         MOV.B   CS,R3L
00044A 8832            1012         MOVC.W  R3,[R2+]
00044C 8923            1013         MOV.W   R2,R3
00044E 9839            1014         SEXT.W  R3
000450 4913            1015         CMP.W   R1,R3
000452 FB07            1016         BLT     _81
000454 FC02            1017         BGT     _94
000456 4902            1018         CMP.W   R0,R2
000458 F104            1019         BCS     _81
000458 F104            1019         BCS     _81
00045A                 1020 _94:
00045A 9Er8rr0020      1022         MOV.W   _SCPIError,#020H
00045F FE0D            1023         BR      _87
00045F FE0D00          1023         BR      _87
000462                 1024 _81:
000462 8915            1026         MOV.W   R1,R5
000464 8904            1027         MOV.W   R0,R4
                       1028         CALL    _atoi
000466 C4rrrrrr       +1028 ;       FCALL   _atoi
00046A 860rrr          1029         MOV.B   _byteVal,R0L
00046D FE06            1031         BR      _87
00046D FE0600          1031         BR      _87
000470                 1032 _82:
000470 BEr6rr          1034         MOV.W   _SCPIError,#06H
000473 FE03            1036         BR      _87
000476                 1038 _83:
000476 BEr5rr          1040         MOV.W   _SCPIError,#05H
00047A                 1042 _87:
00047A 082rrr          1044         MOV     C,_CmdExecute
00047D F03D            1045         BCC     _93
00047F 8E0rrr          1046         MOV.W   R0,_SCPIError
000482 F23A            1047         BNE     _93
000484 082rrr          1049         MOV     C,_CmdRequest
000487 F003            1050         BCC     _88
000489 BEr3rr          1052         MOV.W   _SCPIError,#03H
00048C FE35            1053         BR      _93
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
00048C FE35            1053         BR      _93
00048E                 1054 _88:
00048E 860rrr          1056         MOV.B   R0L,_ParState
000491 F203            1057         BNE     _89
000493 BEr7rr          1059         MOV.W   _SCPIError,#07H
000496 FE30            1060         BR      _93
000496 FE30            1060         BR      _93
000498                 1061 _89:
000498 9918rrrr        1063         MOV.W   R1,#SEG( _ErasingSectorTxt )
00049C 9908rrrr        1064         MOV.W   R0,#SOF( _ErasingSectorTxt )
                       1065         CALL    _Udr_CPutNChar
0004A0 C4rrrrrr       +1065 ;       FCALL   _Udr_CPutNChar
0004A4 910828          1067         MOV.B   R0L,#028H
                       1068         CALL    _Udr_PutChar
0004A7 C4rrrrrr       +1068 ;       FCALL   _Udr_PutChar
0004AB 860rrr          1070         MOV.B   R0L,_byteVal
0004AE B110            1071         MOVS.B  R0H,#00H
0004B0 B910            1072         MOVS.W  R1,#00H
0004B2 9928rrrr        1073         MOV.W   R2,#SOF( _strout )
0004B6 8942            1074         MOV.W   R4,R2
0004B8 B950            1075         MOVS.W  R5,#00H
0004BA 8935            1076         MOV.W   R3,R5
0004BC 8924            1077         MOV.W   R2,R4
                       1078         CALL    _dwordtoa
0004BE C4rrrrrr       +1078 ;       FCALL   _dwordtoa
0004C2 8915            1080         MOV.W   R1,R5
0004C4 8904            1081         MOV.W   R0,R4
                       1082         CALL    _Udr_PutNChar
0004C6 C4rrrrrr       +1082 ;       FCALL   _Udr_PutNChar
0004CA 910829          1084         MOV.B   R0L,#029H
                       1085         CALL    _Udr_PutChar
0004CD C4rrrrrr       +1085 ;       FCALL   _Udr_PutChar
0004D1 910820          1087         MOV.B   R0L,#020H
                       1088         CALL    _Udr_PutChar
0004D4 C4rrrrrr       +1088 ;       FCALL   _Udr_PutChar
0004D8 860rrr          1090         MOV.B   R0L,_byteVal
                       1091         CALL    _flash_sector_erase_int
0004DB C4rrrrrr       +1091 ;       FCALL   _flash_sector_erase_int
0004DF 9918rrrr        1093         MOV.W   R1,#SEG( _ErasedTxt )
0004E3 9908rrrr        1094         MOV.W   R0,#SOF( _ErasedTxt )
                       1095         CALL    _Udr_CPutNChar
0004E7 C4rrrrrr       +1095 ;       FCALL   _Udr_CPutNChar
0004EB 9918rrrr        1097         MOV.W   R1,#SEG( _NewlineTxt )
0004EF 9908rrrr        1098         MOV.W   R0,#SOF( _NewlineTxt )
                       1099         CALL    _Udr_CPutNChar
0004F3 C4rrrrrr       +1099 ;       FCALL   _Udr_CPutNChar
0004F8                 1101 _93:
0004F8 2F30            1103         POP.W   R4, R5
0004FA D680            1105         RET
                       1107         ALIGN   1
                       1109         PUBLIC  _FlashBankErase
0004FC                 1110 _FlashBankErase:
0004FC 0F30            1114         PUSH.W  R4, R5
0004FE A97C            1116         ADDS.W  R7,#0CH
000500 96r4rr00        1121         CMP.B   _ParameterType,#00H
000504 F304            1122         BEQ     _95
000506 96r4rr02        1123         CMP.B   _ParameterType,#02H
00050A F304            1124         BEQ     _96
00050C FE25            1125         BR      _99
00050E                 1127 _95:
00050E B6r0rr          1129         MOV.B   _ParState,#00H
000511 FE25            1131         BR      _103
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
000514                 1133 _96:
000514 860rrr          1135         MOV.B   R0L,_ParState
000517 F21D            1136         BNE     _98
000519 860rrr          1138         MOV.B   _ParState,R0L
00051C A6r1rr          1139         ADDS.B  _ParState,#01H
00051F 9908rrrr        1141         MOV.W   R0,#SOF( _Cmd )
000523 8940            1142         MOV.W   R4,R0
000525 B950            1143         MOVS.W  R5,#00H
000527 8915            1144         MOV.W   R1,R5
000529 8904            1145         MOV.W   R0,R4
                       1146         CALL    _atol
00052B C4rrrrrr       +1146 ;       FCALL   _atol
00052F 99140000        1147         CMP.W   R1,#00H
000533 F203            1148         BNE     _112
000535 99040001        1149         CMP.W   R0,#01H
000535 9904000100      1149         CMP.W   R0,#01H
00053A                 1150 _112:
00053A F304            1151         BEQ     _97
00053C 9Er8rr0020      1153         MOV.W   _SCPIError,#020H
000541 FE0D            1154         BR      _103
000541 FE0D00          1154         BR      _103
000544                 1155 _97:
000544 8915            1157         MOV.W   R1,R5
000546 8904            1158         MOV.W   R0,R4
                       1159         CALL    _atoi
000548 C4rrrrrr       +1159 ;       FCALL   _atoi
00054C 860rrr          1160         MOV.B   _byteVal,R0L
00054F FE06            1162         BR      _103
00054F FE0600          1162         BR      _103
000552                 1163 _98:
000552 BEr6rr          1165         MOV.W   _SCPIError,#06H
000555 FE03            1167         BR      _103
000558                 1169 _99:
000558 BEr5rr          1171         MOV.W   _SCPIError,#05H
00055C                 1173 _103:
00055C 082rrr          1175         MOV     C,_CmdExecute
00055F F04A            1176         BCC     _111
000561 8E0rrr          1177         MOV.W   R0,_SCPIError
000564 F247            1178         BNE     _111
000566 082rrr          1180         MOV     C,_CmdRequest
000569 F003            1181         BCC     _104
00056B BEr3rr          1183         MOV.W   _SCPIError,#03H
00056E FE42            1184         BR      _111
00056E FE42            1184         BR      _111
000570                 1185 _104:
000570 860rrr          1187         MOV.B   R0L,_ParState
000573 F203            1188         BNE     _105
000575 BEr7rr          1190         MOV.W   _SCPIError,#07H
000578 FE3D            1191         BR      _111
000578 FE3D            1191         BR      _111
00057A                 1192 _105:
00057A 9918rrrr        1194         MOV.W   R1,#SEG( _ErasingSectorTxt )
00057E 9908rrrr        1195         MOV.W   R0,#SOF( _ErasingSectorTxt )
                       1196         CALL    _Udr_CPutNChar
000582 C4rrrrrr       +1196 ;       FCALL   _Udr_CPutNChar
000586 918800          1198         MOV.B   R4L,#00H
000589 FE1B            1200         BR      _107
000589 FE1B00          1200         BR      _107
00058C                 1201 _106:
00058C 910828          1203         MOV.B   R0L,#028H
                       1204         CALL    _Udr_PutChar
00058F C4rrrrrr       +1204 ;       FCALL   _Udr_PutChar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
000593 8108            1206         MOV.B   R0L,R4L
000595 B110            1207         MOVS.B  R0H,#00H
000597 B910            1208         MOVS.W  R1,#00H
000599 9928rrrr        1209         MOV.W   R2,#SOF( _strout )
00059D B930            1210         MOVS.W  R3,#00H
00059F 8C3F02          1211         MOV.W   [R7+2],R3
0005A2 8A2F            1212         MOV.W   [R7],R2
                       1213         CALL    _dwordtoa
0005A4 C4rrrrrr       +1213 ;       FCALL   _dwordtoa
0005A8 8C1702          1215         MOV.W   R1,[R7+2]
0005AB 8A07            1216         MOV.W   R0,[R7]
                       1217         CALL    _Udr_PutNChar
0005AD C4rrrrrr       +1217 ;       FCALL   _Udr_PutNChar
0005B1 910829          1219         MOV.B   R0L,#029H
                       1220         CALL    _Udr_PutChar
0005B4 C4rrrrrr       +1220 ;       FCALL   _Udr_PutChar
0005B8 8108            1221         MOV.B   R0L,R4L
                       1225         CALL    _flash_sector_erase_int
0005BA C4rrrrrr       +1225 ;       FCALL   _flash_sector_erase_int
0005BE A181            1229         ADDS.B  R4L,#01H
0005C0                 1232 _107:
0005C0 8148            1233         MOV.B   R2L,R4L
0005C2 B150            1234         MOVS.B  R2H,#00H
0005C4 8E1rrr          1235         MOV.W   R1,_meminfo+2
0005C7 8E0rrr          1236         MOV.W   R0,_meminfo
0005CA 99000004        1237         ADD.W   R0,#04H
0005CE 99110000        1238         ADDC.W  R1,#00H
0005D2 862C43          1239         MOV.B   CS,R1L
0005D5 8810            1240         MOVC.W  R1,[R0+]
0005D7 4921            1241         CMP.W   R2,R1
0005D9 FBD9            1242         BLT     _106
0005DB 9918rrrr        1244         MOV.W   R1,#SEG( _ErasedTxt )
0005DF 9908rrrr        1245         MOV.W   R0,#SOF( _ErasedTxt )
                       1246         CALL    _Udr_CPutNChar
0005E3 C4rrrrrr       +1246 ;       FCALL   _Udr_CPutNChar
0005E7 9918rrrr        1248         MOV.W   R1,#SEG( _NewlineTxt )
0005EB 9908rrrr        1249         MOV.W   R0,#SOF( _NewlineTxt )
                       1250         CALL    _Udr_CPutNChar
0005EF C4rrrrrr       +1250 ;       FCALL   _Udr_CPutNChar
0005F4                 1252 _111:
0005F4 A974            1254         ADDS.W  R7,#04H
0005F6 2F30            1256         POP.W   R4, R5
0005F8 D680            1258         RET
                       1261         ALIGN   1
                       1263         PUBLIC  _FlashRead
0005FA                 1264 _FlashRead:
0005FA 0F70            1268         PUSH.W  R4, R5, R6
0005FC A978            1270         ADDS.W  R7,#08H
0005FE 96r4rr00        1281         CMP.B   _ParameterType,#00H
000602 F304            1282         BEQ     _114
000604 96r4rr02        1283         CMP.B   _ParameterType,#02H
000608 F304            1284         BEQ     _115
00060A FE47            1285         BR      _121
00060C                 1287 _114:
00060C B6r0rr          1289         MOV.B   _ParState,#00H
00060F FE47            1291         BR      _127
000612                 1293 _115:
000612 96r4rr00        1295         CMP.B   _ParState,#00H
000616 F304            1296         BEQ     _116
000618 96r4rr01        1297         CMP.B   _ParState,#01H
00061C F31E            1298         BEQ     _118
00061E FE3A            1299         BR      _120
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
000620                 1301 _116:
000620 A6r1rr          1303         ADDS.B  _ParState,#01H
000623 9908rrrr        1305         MOV.W   R0,#SOF( _Cmd )
000627 8940            1306         MOV.W   R4,R0
000629 B950            1307         MOVS.W  R5,#00H
00062B 8915            1308         MOV.W   R1,R5
00062D 8904            1309         MOV.W   R0,R4
                       1310         CALL    _atol
00062F C4rrrrrr       +1310 ;       FCALL   _atol
000633 9914000F        1311         CMP.W   R1,#0FH
000637 FB09            1312         BLT     _117
000639 FC04            1313         BGT     _148
00063B 9904FFFF        1314         CMP.W   R0,#0FFFFH
00063F F905            1315         BL      _117
00063F F90500          1315         BL      _117
000642                 1316 _148:
000642 9Er8rr0020      1318         MOV.W   _SCPIError,#020H
000647 FE2B            1319         BR      _127
000647 FE2B00          1319         BR      _127
00064A                 1320 _117:
00064A 8915            1322         MOV.W   R1,R5
00064C 8904            1323         MOV.W   R0,R4
                       1324         CALL    _atol
00064E C4rrrrrr       +1324 ;       FCALL   _atol
000652 8E1rrr          1325         MOV.W   _dwordVal1+2,R1
000655 8E0rrr          1326         MOV.W   _dwordVal1,R0
000658 FE22            1328         BR      _127
00065A                 1330 _118:
00065A A6r1rr          1332         ADDS.B  _ParState,#01H
00065D 9908rrrr        1334         MOV.W   R0,#SOF( _Cmd )
000661 8940            1335         MOV.W   R4,R0
000663 B950            1336         MOVS.W  R5,#00H
000665 8915            1337         MOV.W   R1,R5
000667 8904            1338         MOV.W   R0,R4
                       1339         CALL    _atol
000669 C4rrrrrr       +1339 ;       FCALL   _atol
00066D 9914000F        1340         CMP.W   R1,#0FH
000671 FB09            1341         BLT     _119
000673 FC04            1342         BGT     _149
000675 9904FFFF        1343         CMP.W   R0,#0FFFFH
000679 F905            1344         BL      _119
000679 F90500          1344         BL      _119
00067C                 1345 _149:
00067C 9Er8rr0020      1347         MOV.W   _SCPIError,#020H
000681 FE0E            1348         BR      _127
000681 FE0E00          1348         BR      _127
000684                 1349 _119:
000684 8915            1351         MOV.W   R1,R5
000686 8904            1352         MOV.W   R0,R4
                       1353         CALL    _atol
000688 C4rrrrrr       +1353 ;       FCALL   _atol
00068C 8E1rrr          1354         MOV.W   _dwordVal2+2,R1
00068F 8E0rrr          1355         MOV.W   _dwordVal2,R0
000692 FE05            1357         BR      _127
000694                 1359 _120:
000694 BEr5rr          1361         MOV.W   _SCPIError,#05H
000697 FE03            1363         BR      _127
00069A                 1365 _121:
00069A BEr5rr          1367         MOV.W   _SCPIError,#05H
00069E                 1369 _127:
00069E 082rrr          1371         MOV     C,_CmdExecute
                       1372         BCC     _147
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
0006A1 F102           +1372 ;       BCS     _LG_154
0006A3 D50183         +1372 ;       JMP.L   _147
0006A3 D50183         +1372 ;       JMP.L   _147
0006A6                +1372 _LG_154:
0006A6 8E0rrr          1373         MOV.W   R0,_SCPIError
                       1374         BNE     _147
0006A9 F302           +1374 ;       BEQ     _LG_156
0006AB D5017F         +1374 ;       JMP.L   _147
0006AB D5017F         +1374 ;       JMP.L   _147
0006AE                +1374 _LG_156:
0006AE 082rrr          1376         MOV     C,_CmdRequest
                       1377         BCC     _141
0006B1 F102           +1377 ;       BCS     _LG_158
0006B3 D50179         +1377 ;       JMP.L   _141
0006B3 D50179         +1377 ;       JMP.L   _141
0006B6                +1377 _LG_158:
0006B6 864rrr          1379         MOV.B   R2L,_ParState
0006B9 F204            1380         BNE     _128
0006BB BEr7rr          1382         MOV.W   _SCPIError,#07H
                       1383         BR      _147
0006BE D50176         +1383         JMP.L   _147
0006BE D5017600       +1383         JMP.L   _147
0006C2                 1384 _128:
0006C2 914402          1386         CMP.B   R2L,#02H
0006C5 F904            1387         BL      _129
0006C7 BEr3rr          1389         MOV.W   _SCPIError,#03H
                       1390         BR      _147
0006CA D50170         +1390         JMP.L   _147
0006CA D5017000       +1390         JMP.L   _147
0006CE                 1391 _129:
0006CE 8E1rrr          1393         MOV.W   R1,_dwordVal1+2
0006D1 8E0rrr          1394         MOV.W   R0,_dwordVal1
0006D4 99050001        1395         AND.W   R0,#01H
0006D8 99150000        1396         AND.W   R1,#00H
0006DC 6910            1397         OR.W    R1,R0
0006DE F305            1398         BEQ     _130
0006E0 9Er2rr0001      1400         SUB.W   _dwordVal1,#01H
0006E5 9Er3rr0000      1401         SUBB.W  _dwordVal1+2,#00H
0006E5 9Er3rr0000      1401         SUBB.W  _dwordVal1+2,#00H
0006EA                 1402 _130:
0006EA 864rrr          1404         MOV.B   _ParState,R2L
0006ED 96r4rr01        1405         CMP.B   _ParState,#01H
0006F1 F20B            1406         BNE     _131
0006F3 8E1rrr          1408         MOV.W   R1,_dwordVal1+2
0006F6 8E0rrr          1409         MOV.W   R0,_dwordVal1
0006F9 99000020        1410         ADD.W   R0,#020H
0006FD 99110000        1411         ADDC.W  R1,#00H
000701 8E1rrr          1412         MOV.W   _dwordVal2+2,R1
000704 8E0rrr          1413         MOV.W   _dwordVal2,R0
000704 8E0rrr00        1413         MOV.W   _dwordVal2,R0
000708                 1414 _131:
000708 8E1rrr          1416         MOV.W   R1,_dwordVal2+2
00070B 8E0rrr          1417         MOV.W   R0,_dwordVal2
00070E 99050001        1418         AND.W   R0,#01H
000712 99150000        1419         AND.W   R1,#00H
000716 6910            1420         OR.W    R1,R0
000718 F305            1421         BEQ     _132
00071A 9Er2rr0001      1423         SUB.W   _dwordVal2,#01H
00071F 9Er3rr0000      1424         SUBB.W  _dwordVal2+2,#00H
00071F 9Er3rr0000      1424         SUBB.W  _dwordVal2+2,#00H
000724                 1425 _132:
000724 8E1rrr          1427         MOV.W   R1,_dwordVal1+2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
000727 8E0rrr          1428         MOV.W   R0,_dwordVal1
00072A 4E1rrr          1429         CMP.W   _dwordVal2+2,R1
00072D F202            1430         BNE     _152
00072F 4E0rrr          1431         CMP.W   _dwordVal2,R0
00072F 4E0rrr          1431         CMP.W   _dwordVal2,R0
000732                 1432 _152:
000732 F003            1433         BCC     _133
000734 BEr3rr          1435         MOV.W   _SCPIError,#03H
                       1436         BR      _147
000737 D50139         +1436         JMP.L   _147
000737 D50139         +1436         JMP.L   _147
00073A                 1437 _133:
00073A 9918rrrr        1439         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
00073E 9908rrrr        1440         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1441         CALL    _Udr_CPutNChar
000742 C4rrrrrr       +1441 ;       FCALL   _Udr_CPutNChar
000746 8E5rrr          1443         MOV.W   R5,_dwordVal1+2
000749 8E4rrr          1444         MOV.W   R4,_dwordVal1
00074C DC50            1445         LSR.D   R4,#010H
00074E 9908rrrr        1448         MOV.W   R0,#SOF( _strout )
000752 8920            1449         MOV.W   R2,R0
000754 B930            1450         MOVS.W  R3,#00H
000756 8C3F06          1451         MOV.W   [R7+6],R3
000759 8C2F04          1452         MOV.W   [R7+4],R2
00075C 8904            1453         MOV.W   R0,R4
                       1454         CALL    _wordtohex
00075E C4rrrrrr       +1454 ;       FCALL   _wordtohex
000762 8C1706          1455         MOV.W   R1,[R7+6]
000765 8C0704          1456         MOV.W   R0,[R7+4]
                       1458         CALL    _Udr_PutNChar
000768 C4rrrrrr       +1458 ;       FCALL   _Udr_PutNChar
00076C 8108            1461         MOV.B   R0L,R4L
00076E A106            1462         ADDS.B  R0L,#06H
000770 9107FF          1463         XOR.B   R0L,#0FFH
000773 A101            1464         ADDS.B  R0L,#01H
000775 8C3706          1465         MOV.W   R3,[R7+6]
000778 8C2704          1466         MOV.W   R2,[R7+4]
                       1467         CALL    _bytetohex
00077B C4rrrrrr       +1467 ;       FCALL   _bytetohex
00077F 8C1706          1468         MOV.W   R1,[R7+6]
000782 8C0704          1469         MOV.W   R0,[R7+4]
                       1471         CALL    _Udr_PutNChar
000785 C4rrrrrr       +1471 ;       FCALL   _Udr_PutNChar
000789 9918rrrr        1473         MOV.W   R1,#SEG( _NewlineTxt )
00078D 9908rrrr        1474         MOV.W   R0,#SOF( _NewlineTxt )
                       1475         CALL    _Udr_CPutNChar
000791 C4rrrrrr       +1475 ;       FCALL   _Udr_CPutNChar
000795 91D800          1477         MOV.B   R6H,#00H
000798                 1480 _134:
000798 8E1rrr          1482         MOV.W   R1,_dwordVal1+2
00079B 8E0rrr          1483         MOV.W   R0,_dwordVal1
00079E 818D            1484         MOV.B   R4L,R6H
0007A0 B190            1485         MOVS.B  R4H,#00H
0007A2 B950            1486         MOVS.W  R5,#00H
0007A4 8931            1487         MOV.W   R3,R1
0007A6 8920            1488         MOV.W   R2,R0
0007A8 0924            1489         ADD.W   R2,R4
0007AA 1935            1490         ADDC.W  R3,R5
0007AC 99250000        1491         AND.W   R2,#00H
0007B0 99350001        1492         AND.W   R3,#01H
0007B4 99050000        1493         AND.W   R0,#00H
0007B8 99150001        1494         AND.W   R1,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
0007BC 4931            1495         CMP.W   R3,R1
0007BE F201            1496         BNE     _153
0007C0 4920            1497         CMP.W   R2,R0
0007C0 4920            1497         CMP.W   R2,R0
0007C2                 1498 _153:
0007C2 F32D            1499         BEQ     _135
0007C4 9918rrrr        1500         MOV.W   R1,#SEG( _ExtLinAddrRecTxt )
0007C8 9908rrrr        1501         MOV.W   R0,#SOF( _ExtLinAddrRecTxt )
                       1503         CALL    _Udr_CPutNChar
0007CC C4rrrrrr       +1503 ;       FCALL   _Udr_CPutNChar
0007D0 8E1rrr          1505         MOV.W   R1,_dwordVal1+2
0007D3 8E0rrr          1506         MOV.W   R0,_dwordVal1
0007D6 0904            1507         ADD.W   R0,R4
0007D8 1915            1508         ADDC.W  R1,R5
0007DA DC10            1509         LSR.D   R0,#010H
0007DC 8C3706          1511         MOV.W   R3,[R7+6]
0007DF 8C2704          1512         MOV.W   R2,[R7+4]
0007E2 8960            1513         MOV.W   R6,R0
0007E4 8906            1514         MOV.W   R0,R6
                       1519         CALL    _wordtohex
0007E6 C4rrrrrr       +1519 ;       FCALL   _wordtohex
0007EA 8C1706          1520         MOV.W   R1,[R7+6]
0007ED 8C0704          1521         MOV.W   R0,[R7+4]
                       1523         CALL    _Udr_PutNChar
0007F0 C4rrrrrr       +1523 ;       FCALL   _Udr_PutNChar
0007F4 810C            1526         MOV.B   R0L,R6L
0007F6 A106            1527         ADDS.B  R0L,#06H
0007F8 9107FF          1528         XOR.B   R0L,#0FFH
0007FB A101            1529         ADDS.B  R0L,#01H
0007FD 8C3706          1530         MOV.W   R3,[R7+6]
000800 8C2704          1531         MOV.W   R2,[R7+4]
                       1532         CALL    _bytetohex
000803 C4rrrrrr       +1532 ;       FCALL   _bytetohex
000807 8C1706          1533         MOV.W   R1,[R7+6]
00080A 8C0704          1534         MOV.W   R0,[R7+4]
                       1536         CALL    _Udr_PutNChar
00080D C4rrrrrr       +1536 ;       FCALL   _Udr_PutNChar
000811 9918rrrr        1537         MOV.W   R1,#SEG( _NewlineTxt )
000815 9908rrrr        1538         MOV.W   R0,#SOF( _NewlineTxt )
                       1540         CALL    _Udr_CPutNChar
000819 C4rrrrrr       +1540 ;       FCALL   _Udr_CPutNChar
00081E                 1542 _135:
00081E 0E4rrr          1544         ADD.W   _dwordVal1,R4
000821 1E5rrr          1545         ADDC.W  _dwordVal1+2,R5
000824 8E5rrr          1547         MOV.W   R5,_dwordVal2+2
000827 8E4rrr          1548         MOV.W   R4,_dwordVal2
00082A 8E3rrr          1549         MOV.W   R3,_dwordVal1+2
00082D 8E2rrr          1550         MOV.W   R2,_dwordVal1
000830 8915            1551         MOV.W   R1,R5
000832 8904            1552         MOV.W   R0,R4
000834 2E0rrr          1553         SUB.W   R0,_dwordVal1
000837 3E1rrr          1554         SUBB.W  R1,_dwordVal1+2
00083A 99140000        1555         CMP.W   R1,#00H
00083E F202            1556         BNE     _154
000840 99040020        1557         CMP.W   R0,#020H
000840 99040020        1557         CMP.W   R0,#020H
000844                 1558 _154:
000844 F903            1559         BL      _136
000846 91D820          1561         MOV.B   R6H,#020H
000849 FE05            1563         BR      _137
000849 FE0500          1563         BR      _137
00084C                 1564 _136:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
00084C 8913            1566         MOV.W   R1,R3
00084E 8902            1567         MOV.W   R0,R2
000850 2180            1568         SUB.B   R4L,R0L
000852 81D8            1569         MOV.B   R6H,R4L
000854                 1572 _137:
000854 810D            1574         MOV.B   R0L,R6H
000856 B110            1575         MOVS.B  R0H,#00H
000858 B910            1576         MOVS.W  R1,#00H
00085A 0902            1577         ADD.W   R0,R2
00085C 1913            1578         ADDC.W  R1,R3
00085E 8951            1579         MOV.W   R5,R1
000860 8940            1580         MOV.W   R4,R0
000862 99450000        1581         AND.W   R4,#00H
000866 99550001        1582         AND.W   R5,#01H
00086A 8913            1583         MOV.W   R1,R3
00086C 8902            1584         MOV.W   R0,R2
00086E 99050000        1585         AND.W   R0,#00H
000872 99150001        1586         AND.W   R1,#01H
000876 4951            1587         CMP.W   R5,R1
000878 F201            1588         BNE     _155
00087A 4940            1589         CMP.W   R4,R0
00087A 4940            1589         CMP.W   R4,R0
00087C                 1590 _155:
00087C F306            1591         BEQ     _138
00087E 8104            1593         MOV.B   R0L,R2L
000880 A100            1594         ADDS.B  R0L,#00H
000882 910500          1595         AND.B   R0L,#00H
000885 2104            1596         SUB.B   R0L,R2L
000887 81D0            1597         MOV.B   R6H,R0L
00088A                 1600 _138:
00088A 91083A          1602         MOV.B   R0L,#03AH
                       1603         CALL    _Udr_PutChar
00088D C4rrrrrr       +1603 ;       FCALL   _Udr_PutChar
000891 8C3706          1605         MOV.W   R3,[R7+6]
000894 8C2704          1606         MOV.W   R2,[R7+4]
000897 810D            1607         MOV.B   R0L,R6H
                       1610         CALL    _bytetohex
000899 C4rrrrrr       +1610 ;       FCALL   _bytetohex
00089D 8C1706          1613         MOV.W   R1,[R7+6]
0008A0 8C0704          1614         MOV.W   R0,[R7+4]
                       1616         CALL    _Udr_PutNChar
0008A3 C4rrrrrr       +1616 ;       FCALL   _Udr_PutNChar
0008A7 8E1rrr          1618         MOV.W   R1,_dwordVal1+2
0008AA 8E0rrr          1619         MOV.W   R0,_dwordVal1
0008AD B931            1620         MOV.W   R3,#01H
0008AF B920            1621         MOV.W   R2,#00H
0008B1 C4rrrrrr        1622         FCALL   __UMODL
0008B5 8951            1623         MOV.W   R5,R1
0008B7 8940            1624         MOV.W   R4,R0
0008B9 8C3706          1626         MOV.W   R3,[R7+6]
0008BC 8C2704          1627         MOV.W   R2,[R7+4]
0008BF 8904            1628         MOV.W   R0,R4
                       1630         CALL    _wordtohex
0008C1 C4rrrrrr       +1630 ;       FCALL   _wordtohex
0008C5 8C1706          1631         MOV.W   R1,[R7+6]
0008C8 8C0704          1632         MOV.W   R0,[R7+4]
                       1634         CALL    _Udr_PutNChar
0008CB C4rrrrrr       +1634 ;       FCALL   _Udr_PutNChar
0008CF 910830          1636         MOV.B   R0L,#030H
                       1637         CALL    _Udr_PutChar
0008D2 C4rrrrrr       +1637 ;       FCALL   _Udr_PutChar
0008D6 910830          1639         MOV.B   R0L,#030H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
                       1640         CALL    _Udr_PutChar
0008D9 C4rrrrrr       +1640 ;       FCALL   _Udr_PutChar
0008DD 8914            1642         MOV.W   R1,R4
0008DF D818            1643         LSR.W   R1,#08H
0008E1 7955            1644         XOR.W   R5,R5
0008E3 E9410100        1645         DIVU.D  R4,#0100H
0008E7 012A            1646         ADD.B   R1L,R5L
0008E9 912020          1647         ADD.B   R1L,#020H
0008EC 81C2            1648         MOV.B   R6L,R1L
0008EE B910            1651         MOV.W   R1,#00H
0008F0 B900            1652         MOV.W   R0,#00H
0008F2 FE28            1654         BR      _140
0008F2 FE28            1654         BR      _140
0008F4                 1655 _139:
0008F4 8E5rrr          1657         MOV.W   R5,_dwordVal1+2
0008F7 8E4rrr          1658         MOV.W   R4,_dwordVal1
0008FA 8C1F02          1660         MOV.W   [R7+2],R1
0008FD 8A0F            1661         MOV.W   [R7],R0
0008FF 0940            1662         ADD.W   R4,R0
000901 1951            1663         ADDC.W  R5,R1
000903 86AC43          1666         MOV.B   CS,R5L
000906 8854            1667         MOVC.W  R5,[R4+]
000908 8945            1670         MOV.W   R4,R5
00090A D848            1671         LSR.W   R4,#08H
00090C 8905            1672         MOV.W   R0,R5
00090E D908            1673         ASL.W   R0,#08H
000910 0904            1674         ADD.W   R0,R4
000912 8C3706          1675         MOV.W   R3,[R7+6]
000915 8C2704          1676         MOV.W   R2,[R7+4]
                       1677         CALL    _wordtohex
000918 C4rrrrrr       +1677 ;       FCALL   _wordtohex
00091C 8914            1679         MOV.W   R1,R4
00091E 8945            1680         MOV.W   R4,R5
000920 7955            1681         XOR.W   R5,R5
000922 E9410100        1682         DIVU.D  R4,#0100H
000926 8102            1685         MOV.B   R0L,R1L
000928 010A            1686         ADD.B   R0L,R5L
00092A 01C0            1687         ADD.B   R6L,R0L
00092C 8C1706          1690         MOV.W   R1,[R7+6]
00092F 8C0704          1691         MOV.W   R0,[R7+4]
                       1693         CALL    _Udr_PutNChar
000932 C4rrrrrr       +1693 ;       FCALL   _Udr_PutNChar
000936 8C1702          1695         MOV.W   R1,[R7+2]
000939 8A07            1696         MOV.W   R0,[R7]
00093B 99000002        1697         ADD.W   R0,#02H
00093F 99110000        1698         ADDC.W  R1,#00H
000944                 1703 _140:
000944 818D            1704         MOV.B   R4L,R6H
000946 B190            1705         MOVS.B  R4H,#00H
000948 B950            1706         MOVS.W  R5,#00H
00094A 4915            1708         CMP.W   R1,R5
00094C F201            1709         BNE     _156
00094E 4904            1710         CMP.W   R0,R4
00094E 4904            1710         CMP.W   R0,R4
000950                 1711 _156:
000950 F1D1            1712         BCS     _139
000952 810C            1714         MOV.B   R0L,R6L
000954 9107FF          1715         XOR.B   R0L,#0FFH
000957 A101            1720         ADDS.B  R0L,#01H
000959 8C3706          1721         MOV.W   R3,[R7+6]
00095C 8C2704          1722         MOV.W   R2,[R7+4]
                       1723         CALL    _bytetohex
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
00095F C4rrrrrr       +1723 ;       FCALL   _bytetohex
000963 8C1706          1724         MOV.W   R1,[R7+6]
000966 8C0704          1725         MOV.W   R0,[R7+4]
                       1727         CALL    _Udr_PutNChar
000969 C4rrrrrr       +1727 ;       FCALL   _Udr_PutNChar
00096D 9918rrrr        1728         MOV.W   R1,#SEG( _NewlineTxt )
000971 9908rrrr        1729         MOV.W   R0,#SOF( _NewlineTxt )
                       1731         CALL    _Udr_CPutNChar
000975 C4rrrrrr       +1731 ;       FCALL   _Udr_CPutNChar
000979 0E4rrr          1733         ADD.W   R4,_dwordVal1
00097C 1E5rrr          1734         ADDC.W  R5,_dwordVal1+2
00097F 4E5rrr          1735         CMP.W   R5,_dwordVal2+2
000982 F202            1736         BNE     _157
000984 4E4rrr          1737         CMP.W   R4,_dwordVal2
000984 4E4rrr00        1737         CMP.W   R4,_dwordVal2
000988                 1738 _157:
                       1739         BCS     _134
000988 F002           +1739 ;       BCC     _LG_192
00098A D5FF06         +1739 ;       JMP.L   _134
00098A D5FF0600       +1739 ;       JMP.L   _134
00098E                +1739 _LG_192:
00098E 9918rrrr        1741         MOV.W   R1,#SEG( _EndOfFileRecTxt )
000992 9908rrrr        1742         MOV.W   R0,#SOF( _EndOfFileRecTxt )
                       1743         CALL    _Udr_CPutNChar
000996 C4rrrrrr       +1743 ;       FCALL   _Udr_CPutNChar
00099A 9918rrrr        1745         MOV.W   R1,#SEG( _NewlineTxt )
00099E 9908rrrr        1746         MOV.W   R0,#SOF( _NewlineTxt )
                       1747         CALL    _Udr_CPutNChar
0009A2 C4rrrrrr       +1747 ;       FCALL   _Udr_CPutNChar
0009A6 FE02            1749         BR      _147
0009A6 FE02            1749         BR      _147
0009A8                 1750 _141:
0009A8 BEr3rr          1752         MOV.W   _SCPIError,#03H
0009AC                 1754 _147:
0009AC BEr3rr          1756         MOV.W   _SCPIError,#03H
0009AF 99700008        1758         ADD.W   R7,#08H
0009B3 2F70            1760         POP.W   R4, R5, R6
0009B5 D680            1762         RET
0009B7 00              1765         ALIGN   1
                       1767         PUBLIC  _FindParameter
0009B8                 1768 _FindParameter:
0009B8 0F70            1780         PUSH.W  R4, R5, R6
0009BA A97C            1782         ADDS.W  R7,#0CH
0009BC 8951            1786         MOV.W   R5,R1
0009BE 8940            1787         MOV.W   R4,R0
0009C0 91C800          1795         MOV.B   R6L,#00H
0009C3 FE3A            1798         BR      _159
0009C3 FE3A00          1798         BR      _159
0009C6                 1799 _158:
0009C6 8C1F02          1803         MOV.W   [R7+2],R1
0009C9 8A0F            1804         MOV.W   [R7],R0
0009CB 862C43          1805         MOV.B   CS,R1L
0009CE 8820            1806         MOVC.W  R2,[R0+]
0009D0 99040000        1807         CMP.W   R0,#00H
0009D4 F202            1808         BNE     _163
0009D6 A64143          1809         ADDS.B  CS,#01H
0009D6 A6414300        1809         ADDS.B  CS,#01H
0009DA                 1810 _163:
0009DA 8830            1811         MOVC.W  R3,[R0+]
0009DC 8915            1814         MOV.W   R1,R5
0009DE 8904            1815         MOV.W   R0,R4
                       1818         CALL    _Cstrcmp
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
0009E0 C4rrrrrr       +1818 ;       FCALL   _Cstrcmp
0009E4 6900            1821         OR.W    R0,R0
0009E6 F32C            1822         BEQ     _162
0009E8 8C1702          1823         MOV.W   R1,[R7+2]
0009EB 8A07            1824         MOV.W   R0,[R7]
0009ED 99000004        1825         ADD.W   R0,#04H
0009F1 99110000        1826         ADDC.W  R1,#00H
0009F5 862C43          1827         MOV.B   CS,R1L
0009F8 8820            1828         MOVC.W  R2,[R0+]
0009FA 99040000        1829         CMP.W   R0,#00H
0009FE F202            1830         BNE     _164
000A00 A64143          1831         ADDS.B  CS,#01H
000A00 A6414300        1831         ADDS.B  CS,#01H
000A04                 1832 _164:
000A04 8830            1833         MOVC.W  R3,[R0+]
000A06 8915            1834         MOV.W   R1,R5
000A08 8904            1835         MOV.W   R0,R4
                       1838         CALL    _Cstrcmp
000A0A C4rrrrrr       +1838 ;       FCALL   _Cstrcmp
000A0E 6900            1841         OR.W    R0,R0
000A10 F317            1842         BEQ     _162
000A12 8C1702          1844         MOV.W   R1,[R7+2]
000A15 8A07            1845         MOV.W   R0,[R7]
000A17 99000008        1846         ADD.W   R0,#08H
000A1B 99110000        1847         ADDC.W  R1,#00H
000A1F 862C43          1851         MOV.B   CS,R1L
000A22 8820            1852         MOVC.W  R2,[R0+]
000A24 99040000        1853         CMP.W   R0,#00H
000A28 F202            1854         BNE     _165
000A2A A64143          1855         ADDS.B  CS,#01H
000A2A A6414300        1855         ADDS.B  CS,#01H
000A2E                 1856 _165:
000A2E 8830            1857         MOVC.W  R3,[R0+]
000A30 91C4FF          1860         CMP.B   R6L,#0FFH
000A33 F006            1861         BCC     _162
000A35 A1C1            1863         ADDS.B  R6L,#01H
000A38                 1867 _159:
000A38 8913            1868         MOV.W   R1,R3
000A3A 8902            1869         MOV.W   R0,R2
000A3C 6932            1870         OR.W    R3,R2
000A3E F2C3            1873         BNE     _158
000A40                 1875 _162:
000A40 810C            1877         MOV.B   R0L,R6L
000A42 A974            1882         ADDS.W  R7,#04H
000A44 2F70            1884         POP.W   R4, R5, R6
000A46 D680            1886         RET
                       1894         EXTRN   HCODE(_flash_get_numsectors)
                       1896         EXTRN   BIT(_CmdExecute)
000000                 1898 RS232CMD_CLR_NE@DS      SEGMENT DATA JOIN CLEAR
000000                 1899         RSEG    RS232CMD_CLR_NE@DS
000000 RESERVED        1900 _ParState:      DS      1
000000
                       1901         EXTRN   HCODE(__UMODL)
                       1904         EXTRN   HCODE(_Cstrcmp)
                       1907         EXTRN   HCODE(_ReadErrorEventQueue)
                       1909         EXTRN   HCODE(__FL_STATUSBUSYTxt)
000001                 1912 _strout:        DS      8
   |  RESERVED             
000008
                       1914         EXTRN   HCODE(__FL_STATUSERSUSPTxt)
                       1917         EXTRN   HCODE(_atoi)
                       1920         EXTRN   HCODE(_atol)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
                       1923         EXTRN   HCODE(_flash_reset)
                       1926         EXTRN   HCODE(_Udr_CPutNChar)
                       1928         EXTRN   HCODE(__FL_STATUSREADYTxt)
                       1931         EXTRN   HCODE(_wordtohex)
                       1933         EXTRN   HCODE(__FL_STATUSERRORTxt)
                       1936         EXTRN   DATA(_Cmd)
000009 RESERVED        1938         ALIGN   1
000009
00000A                 1939 _dwordVal1:     DS      4
   |  RESERVED             
00000D
                       1941         ALIGN   1
00000E                 1942 _dwordVal2:     DS      4
   |  RESERVED             
000011
                       1944         EXTRN   HCODE(__FL_STATUSTIMEOUTTxt)
                       1946         EXTRN   BIT(_CmdRequest)
                       1949         EXTRN   HCODE(_user_memory_test)
                       1955         EXTRN   HCODE(_ErrorTxt_Array)
                       1958         EXTRN   HCODE(_flash_get_sector_size)
                       1961         EXTRN   HCODE(_bytetohex)
                       1964         EXTRN   HCODE(_flash_get_status)
                       1971         EXTRN   HCODE(_flash_get_device_info)
000012 RESERVED        1973 _byteVal:       DS      1
000012
                       1975         EXTRN   DATA(_ParameterType)
                       1990         EXTRN   DATA(_meminfo)
                       1991         EXTRN   IDATA(__lc_bs)
                       1994         EXTRN   HCODE(_flash_sector_erase_int)
                       1997         EXTRN   HCODE(_Udr_PutNChar)
                       2000         EXTRN   HCODE(_NVRAM_memory_test)
                       2002         EXTRN   DATA(_SCPIError)
                       2005         EXTRN   HCODE(_dwordtoa)
                       2008         EXTRN   HCODE(_Udr_PutChar)
                       2009         EXTRN   DATA(__lc_ub_xvwbuffer)
                       2010         EXTRN   DATA(__lc_ue_xvwbuffer)
                       2011         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2012         CALLS   'SystemIDN', 'Udr_PutChar'
                       2013         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2014         CALLS   'SystemIDN', 'Udr_PutChar'
                       2015         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2016         CALLS   'SystemIDN', 'Udr_PutChar'
                       2017         CALLS   'SystemIDN', 'Udr_CPutNChar'
                       2018         CALLS   'SystemError', 'ReadErrorEventQueue'
                       2019         CALLS   'SystemError', 'dwordtoa'
                       2020         CALLS   'SystemError', 'Udr_PutChar'
                       2021         CALLS   'SystemError', 'Udr_PutNChar'
                       2022         CALLS   'SystemError', 'Udr_PutChar'
                       2023         CALLS   'SystemError', 'Udr_CPutNChar'
                       2024         CALLS   'SystemError', 'Udr_PutChar'
                       2025         CALLS   'SystemError', 'Udr_CPutNChar'
                       2026         CALLS   'HWTest', 'atoi'
                       2027         CALLS   'HWTest', 'user_memory_test'
                       2028         CALLS   'HWTest', 'Udr_PutChar'
                       2029         CALLS   'HWTest', 'NVRAM_memory_test'
                       2030         CALLS   'HWTest', 'Udr_PutChar'
                       2031         CALLS   'HWTest', 'Udr_CPutNChar'
                       2032         CALLS   'FlashReset', 'flash_reset'
                       2033         CALLS   'FlashInfo', 'flash_get_device_info'
                       2034         CALLS   'FlashInfo', 'dwordtoa'
                       2035         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2036         CALLS   'FlashInfo', 'Udr_PutChar'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
                       2037         CALLS   'FlashInfo', 'dwordtoa'
                       2038         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2039         CALLS   'FlashInfo', 'Udr_PutChar'
                       2040         CALLS   'FlashInfo', 'flash_get_numsectors'
                       2041         CALLS   'FlashInfo', 'dwordtoa'
                       2042         CALLS   'FlashInfo', 'Udr_PutNChar'
                       2043         CALLS   'FlashInfo', 'Udr_CPutNChar'
                       2044         CALLS   'FlashStatus', 'flash_get_status'
                       2045         CALLS   'FlashStatus', 'Udr_CPutNChar'
                       2046         CALLS   'FlashSectorSize', 'atoi'
                       2047         CALLS   'FlashSectorSize', 'flash_get_sector_size'
                       2048         CALLS   'FlashSectorSize', 'dwordtoa'
                       2049         CALLS   'FlashSectorSize', 'Udr_PutNChar'
                       2050         CALLS   'FlashSectorSize', 'Udr_CPutNChar'
                       2051         CALLS   'FlashSectorErase', 'atol'
                       2052         CALLS   'FlashSectorErase', 'atoi'
                       2053         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       2054         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       2055         CALLS   'FlashSectorErase', 'dwordtoa'
                       2056         CALLS   'FlashSectorErase', 'Udr_PutNChar'
                       2057         CALLS   'FlashSectorErase', 'Udr_PutChar'
                       2058         CALLS   'FlashSectorErase', 'flash_sector_erase_int'
                       2059         CALLS   'FlashSectorErase', 'Udr_CPutNChar'
                       2060         CALLS   'FlashBankErase', 'atol'
                       2061         CALLS   'FlashBankErase', 'atoi'
                       2062         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       2063         CALLS   'FlashBankErase', 'Udr_PutChar'
                       2064         CALLS   'FlashBankErase', 'dwordtoa'
                       2065         CALLS   'FlashBankErase', 'Udr_PutNChar'
                       2066         CALLS   'FlashBankErase', 'Udr_PutChar'
                       2067         CALLS   'FlashBankErase', 'flash_sector_erase_int'
                       2068         CALLS   'FlashBankErase', 'Udr_CPutNChar'
                       2069         CALLS   'FlashRead', 'atol'
                       2070         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2071         CALLS   'FlashRead', 'wordtohex'
                       2072         CALLS   'FlashRead', 'Udr_PutNChar'
                       2073         CALLS   'FlashRead', 'bytetohex'
                       2074         CALLS   'FlashRead', 'Udr_PutNChar'
                       2075         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2076         CALLS   'FlashRead', 'wordtohex'
                       2077         CALLS   'FlashRead', 'Udr_PutNChar'
                       2078         CALLS   'FlashRead', 'bytetohex'
                       2079         CALLS   'FlashRead', 'Udr_PutNChar'
                       2080         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2081         CALLS   'FlashRead', 'Udr_PutChar'
                       2082         CALLS   'FlashRead', 'bytetohex'
                       2083         CALLS   'FlashRead', 'Udr_PutNChar'
                       2084         CALLS   'FlashRead', 'wordtohex'
                       2085         CALLS   'FlashRead', 'Udr_PutNChar'
                       2086         CALLS   'FlashRead', 'Udr_PutChar'
                       2087         CALLS   'FlashRead', 'wordtohex'
                       2088         CALLS   'FlashRead', 'Udr_PutNChar'
                       2089         CALLS   'FlashRead', 'bytetohex'
                       2090         CALLS   'FlashRead', 'Udr_PutNChar'
                       2091         CALLS   'FlashRead', 'Udr_CPutNChar'
                       2092         CALLS   'FindParameter', 'Cstrcmp'
