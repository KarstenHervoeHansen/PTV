; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
; options: -IC:\cxa\include -Ml -Cxag3 -Sd -A1 -O1 -DWritableSector=14
;          -DBootProgram=0 -g
$CASE
$NOZPAGE
	NAME	FLASH
	SYMB	TOOL, "XA C compiler v2.0", 1
	SYMB	TYPE, 256, "bit", 'g', 0, 1
	SYMB	FILE, "flash.c"
	SYMB	FILE, "system.h"
	SYMB	ENDF
	SYMB	FILE, "C:\\cxa\\include\\string.h"
	SYMB	TYPE, 257, "size_t", 'T', #18
	SYMB	ENDF
	SYMB	FILE, "flash.h"
	SYMB	TYPE, 258, "byte", 'T', #3
	SYMB	TYPE, 259, "word", 'T', #5
	SYMB	TYPE, 260, "dword", 'T', #7
	SYMB	ENDF
FLASH_RO	SEGMENT	HCODE ROMDATA
	RSEG	FLASH_RO
	SYMB	TYPE, 261, 'Z', #2, -1
	SYMB	IDEN, "_FL_STATUSREADYTxt", __FL_STATUSREADYTxt, #261, 129, 0
	SYMB	ALAB, __FL_STATUSREADYTxt, #261
	PUBLIC	__FL_STATUSREADYTxt
__FL_STATUSREADYTxt:
	DB	052H,045H,041H,044H,059H,00DH,00AH,000H
	SYMB	IDEN, "_FL_STATUSBUSYTxt", __FL_STATUSBUSYTxt, #261, 129, 0
	SYMB	ALAB, __FL_STATUSBUSYTxt, #261
	PUBLIC	__FL_STATUSBUSYTxt
__FL_STATUSBUSYTxt:
	DB	042H,055H,053H,059H,00DH,00AH,000H
	SYMB	IDEN, "_FL_STATUSERSUSPTxt", __FL_STATUSERSUSPTxt, #261, 129, 0
	SYMB	ALAB, __FL_STATUSERSUSPTxt, #261
	PUBLIC	__FL_STATUSERSUSPTxt
__FL_STATUSERSUSPTxt:
	DB	045H,052H,041H,053H,045H,020H,053H,055H,053H,050H,045H,04EH
	DB	044H,045H,044H,00DH,00AH,000H
	SYMB	IDEN, "_FL_STATUSTIMEOUTTxt", __FL_STATUSTIMEOUTTxt, #261, 129, 0
	SYMB	ALAB, __FL_STATUSTIMEOUTTxt, #261
	PUBLIC	__FL_STATUSTIMEOUTTxt
__FL_STATUSTIMEOUTTxt:
	DB	054H,049H,04DH,045H,02DH,04FH,055H,054H,00DH,00AH,000H
	SYMB	IDEN, "_FL_STATUSERRORTxt", __FL_STATUSERRORTxt, #261, 129, 0
	SYMB	ALAB, __FL_STATUSERRORTxt, #261
	PUBLIC	__FL_STATUSERRORTxt
__FL_STATUSERRORTxt:
	DB	045H,052H,052H,04FH,052H,00DH,00AH,000H
	SYMB	IDEN, "_FL_ONTxt", __FL_ONTxt, #261, 129, 0
	SYMB	ALAB, __FL_ONTxt, #261
	PUBLIC	__FL_ONTxt
__FL_ONTxt:
	DB	04FH,04EH,00DH,00AH,000H
	SYMB	IDEN, "_FL_OFFTxt", __FL_OFFTxt, #261, 129, 0
	SYMB	ALAB, __FL_OFFTxt, #261
	PUBLIC	__FL_OFFTxt
__FL_OFFTxt:
	DB	04FH,046H,046H,00DH,00AH,000H
	SYMB	TYPE, 263, 'n', #2, 130
	SYMB	TYPE, 264, 'P', #263
	SYMB	TYPE, 265, 'S', 10,\
		 "size", #7, 0,\
		 "base", #7, 4,\
		 "bank", #16, 8
	SYMB	TYPE, 266, 'Z', #265, 22
	SYMB	TYPE, 268, "flashinfo", 'S', 240,\
		 "name", #264, 0,\
		 "nsect", #16, 4,\
		 "bank1start", #16, 6,\
		 "bank2start", #16, 8,\
		 "sec", #266, 10
	SYMB	TYPE, 269, 'Z', #268, 3
	SYMB	IDEN, "memdesc", _memdesc, #269, 129, 0
	SYMB	ALAB, _memdesc, #269
	PUBLIC	_memdesc
	ALIGN	1
_memdesc:
	DD	_3
	DW	00016H,0000EH,00000H
	DD	000010000H,000000000H
	DW	00002H
	DD	000010000H,000010000H
	DW	00002H
	DD	000010000H,000020000H
	DW	00002H
	DD	000010000H,000030000H
	DW	00002H
	DD	000010000H,000040000H
	DW	00002H
	DD	000010000H,000050000H
	DW	00002H
	DD	000010000H,000060000H
	DW	00002H
	DD	000010000H,000070000H
	DW	00002H
	DD	000010000H,000080000H
	DW	00002H
	DD	000010000H,000090000H
	DW	00002H
	DD	000010000H,0000A0000H
	DW	00002H
	DD	000010000H,0000B0000H
	DW	00002H
	DD	000010000H,0000C0000H
	DW	00002H
	DD	000010000H,0000D0000H
	DW	00002H
	DD	000004000H,0000E0000H
	DW	00001H
	DD	000008000H,0000E4000H
	DW	00001H
	DD	000002000H,0000EC000H
	DW	00001H
	DD	000002000H,0000EE000H
	DW	00001H
	DD	000002000H,0000F0000H
	DW	00001H
	DD	000002000H,0000F2000H
	DW	00001H
	DD	000008000H,0000F4000H
	DW	00001H
	DD	000004000H,0000FC000H
	DW	00001H
	DD	000000000H,000100000H
	DW	00001H
	DD	_4
	DW	00016H,00000H,00008H
	DD	000004000H,000000000H
	DW	00001H
	DD	000008000H,000004000H
	DW	00001H
	DD	000002000H,00000C000H
	DW	00001H
	DD	000002000H,00000E000H
	DW	00001H
	DD	000002000H,000010000H
	DW	00001H
	DD	000002000H,000012000H
	DW	00001H
	DD	000008000H,000014000H
	DW	00001H
	DD	000004000H,00001C000H
	DW	00001H
	DD	000010000H,000020000H
	DW	00002H
	DD	000010000H,000030000H
	DW	00002H
	DD	000010000H,000040000H
	DW	00002H
	DD	000010000H,000050000H
	DW	00002H
	DD	000010000H,000060000H
	DW	00002H
	DD	000010000H,000070000H
	DW	00002H
	DD	000010000H,000080000H
	DW	00002H
	DD	000010000H,000090000H
	DW	00002H
	DD	000010000H,0000A0000H
	DW	00002H
	DD	000010000H,0000B0000H
	DW	00002H
	DD	000010000H,0000C0000H
	DW	00002H
	DD	000010000H,0000D0000H
	DW	00002H
	DD	000010000H,0000E0000H
	DW	00002H
	DD	000010000H,0000F0000H
	DW	00002H
	DD	000000000H,000100000H
	DW	00002H
	DD	_5
	DW	0000BH,00000H,00000H
	DD	000010000H,000000000H
	DW	00001H
	DD	000010000H,000010000H
	DW	00001H
	DD	000010000H,000020000H
	DW	00001H
	DD	000010000H,000030000H
	DW	00001H
	DD	000010000H,000040000H
	DW	00001H
	DD	000010000H,000050000H
	DW	00001H
	DD	000010000H,000060000H
	DW	00001H
	DD	000008000H,000070000H
	DW	00001H
	DD	000002000H,000078000H
	DW	00001H
	DD	000002000H,00007A000H
	DW	00001H
	DD	000004000H,00007C000H
	DW	00001H
	DD	000000000H,000080000H
	DW	00001H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H
	DD	_6
	DW	0000BH,00000H,00000H
	DD	000004000H,000000000H
	DW	00001H
	DD	000002000H,000004000H
	DW	00001H
	DD	000002000H,000006000H
	DW	00001H
	DD	000008000H,000008000H
	DW	00001H
	DD	000010000H,000010000H
	DW	00001H
	DD	000010000H,000020000H
	DW	00001H
	DD	000010000H,000030000H
	DW	00001H
	DD	000010000H,000040000H
	DW	00001H
	DD	000010000H,000050000H
	DW	00001H
	DD	000010000H,000060000H
	DW	00001H
	DD	000010000H,000070000H
	DW	00001H
	DD	000000000H,000080000H
	DW	00001H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H,000H
	DB	000H,000H
FLASH_PR	SEGMENT	HCODE
	RSEG	FLASH_PR
	ALIGN	1
	SYMB	LINE, 141
	PUBLIC	_flash_init
_flash_init:
	SYMB	TYPE, 271, 'X', 12, #1, 30, 1, #258
	SYMB	GFUN, "flash_init", _flash_init, #271, 0, 0, 0
	SYMB	ALAB, _flash_init, #271
	SYMB	LTIM, "flash_type", 0, 0, 2253
	SYMB	IDEN, "flash_type", 0, #258, 0, 2061
	SYMB	TYPE, 272, 'n', #259, 130
	SYMB	TYPE, 273, 'P', #272
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LINE, 145
	MULU.B	R0L,#0F0H
	SYMB	LTIM, "flash_type", 0, 0, 2125
	MOVS.W	R1,#00H
	ADD.W	R0,#SOF( _memdesc )
	ADDC.W	R1,#SEG( _memdesc )
	MOV.W	_meminfo+2,R1
	MOV.W	_meminfo,R0
	SYMB	LINE, 153
	MOV.B	ES,#SEG( 00H )
	MOV.W	R0,#00H
	MOV.W	[R0],#0F0H
	SYMB	LINE, 154
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 167
	PUBLIC	_flash_reset
_flash_reset:
	SYMB	TYPE, 274, 'X', 12, #1, 30, 0
	SYMB	GFUN, "flash_reset", _flash_reset, #274, 0, 0, 0
	SYMB	ALAB, _flash_reset, #274
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LINE, 177
	MOV.B	ES,#SEG( 00H )
	MOV.W	R0,#00H
	MOV.W	[R0],#0F0H
	SYMB	LINE, 178
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 192
	PUBLIC	_flash_status
_flash_status:
	SYMB	TYPE, 275, 'X', 12, #258, 30, 1, #273
	SYMB	GFUN, "flash_status", _flash_status, #275, 0, 0, 16
	SYMB	ALAB, _flash_status, #275
	PUSH.W	R4
	SYMB	SOFF, 2
	SYMB	LTIM, "address", 3, 0, 2253
	SYMB	IDEN, "address", 3, #273, 0, 2061
	SYMB	IDEN, "val", -1, #259, 130, 5
	SYMB	LTIM, "val", -1, 0, 69
	SYMB	IDEN, "toggle", -1, #259, 130, 5
	SYMB	LTIM, "toggle", -1, 0, 69
	SYMB	IDEN, "retry", -1, #258, 130, 5
	SYMB	LTIM, "retry", -1, 0, 69
	SYMB	LINE, 195
	MOV.B	R3L,#01H
	SYMB	LTIM, "retry", 12, 0, 205
	SYMB	LINE, 197
_7:
	SYMB	LINE, 198
	MOV.B	ES,R1L
	MOV.W	R4,[R0]
	SYMB	LTIM, "val", 18, 0, 205
	MOV.W	R2,R4
	SYMB	LINE, 199
	MOV.B	ES,R1L
	XOR.W	R2,[R0]
	SYMB	LTIM, "toggle", 10, 0, 205
	SYMB	LINE, 201
	BNE	_8
	SYMB	LINE, 202
	MOV.B	R0L,#00H
	SYMB	LTIM, "address", 3, 0, 2125
	BR	_16
_8:
	SYMB	LTIM, "address", 3, 0, 2253
	SYMB	LTIM, "retry", 12, 0, 77
	SYMB	LTIM, "retry", 12, 0, 205
	SYMB	LTIM, "toggle", 10, 0, 77
	SYMB	LTIM, "toggle", 10, 0, 205
	SYMB	LTIM, "val", 18, 0, 77
	SYMB	LINE, 204
	CMP.W	R2,#04H
	BNE	_9
	SYMB	LINE, 205
	OR.B	R3L,R3L
	BNE	_12
	SYMB	LINE, 206
	MOV.B	R0L,#02H
	SYMB	LTIM, "address", 3, 0, 2125
	BR	_16
	SYMB	LINE, 207
_9:
	SYMB	LTIM, "address", 3, 0, 2253
	SYMB	LTIM, "retry", 12, 0, 77
	SYMB	LTIM, "retry", 12, 0, 205
	SYMB	LTIM, "toggle", 10, 0, 77
	SYMB	LTIM, "toggle", 10, 0, 205
	SYMB	LINE, 209
	AND.W	R2,#040H
	SYMB	LTIM, "toggle", 10, 0, 77
	BEQ	_12
	SYMB	LINE, 210
	AND.W	R4,#020H
	BEQ	_10
	SYMB	LINE, 211
	MOV.B	R0L,#03H
	SYMB	LTIM, "address", 3, 0, 2125
	BR	_16
_10:
	SYMB	LINE, 213
	MOV.B	R0L,#01H
	BR	_16
	SYMB	LINE, 215
_12:
	SYMB	LTIM, "address", 3, 0, 2253
	SYMB	LTIM, "retry", 12, 0, 77
	SYMB	LTIM, "retry", 12, 0, 205
	SYMB	LINE, 217
	MOV.B	R2L,R3L
	SYMB	LTIM, "retry", 12, 0, 77
	SYMB	LTIM, "retry", 8, 0, 205
	ADDS.B	R3L,#0FH
	SYMB	LTIM, "retry", 8, 0, 77
	SYMB	LTIM, "retry", 12, 0, 205
	OR.B	R2L,R2L
	BNE	_7
	SYMB	LINE, 219
	MOV.B	R0L,#04H
	SYMB	LTIM, "address", 3, 0, 2125
	SYMB	LINE, 220
_16:
	POP.W	R4
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "retry", 12, 0, 77
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 234
	PUBLIC	_flash_get_device_info
_flash_get_device_info:
	SYMB	TYPE, 277, 'n', #258, 130
	SYMB	TYPE, 278, 'P', #277
	SYMB	TYPE, 276, 'X', 12, #1, 30, 3, #258, #278, #273
	SYMB	GFUN, "flash_get_device_info", _flash_get_device_info, #276, 0, 0, 48
	SYMB	ALAB, _flash_get_device_info, #276
	PUSH.W	R4, R5
	SYMB	SOFF, 4
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	LTIM, "manufacturer", 11, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	IDEN, "manufacturer", 11, #278, 0, 2061
	SYMB	IDEN, "ID", 4, #273, 130, 2053
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LINE, 241
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R0,R0
	SEXT.W	R1
	MOV.W	R5,_meminfo+2
	MOV.W	R4,_meminfo
	ADD.W	R4,#0EH
	ADDC.W	R5,#00H
	ADD.W	R4,R0
	ADDC.W	R5,R1
	MOV.B	CS,R5L
	MOVC.W	R0,[R4+]
	CMP.W	R4,#00H
	BNE	_18
	ADDS.B	CS,#01H
_18:
	MOVC.W	R1,[R4+]
	SYMB	LTIM, "address", 3, 0, 205
	SYMB	LINE, 244
	MOV.B	ES,R1L
	MOV.W	[R0],#0F0H
	SYMB	LINE, 246
	MOV.B	ES,R1L
	MOV.W	[R0+2730],#0AAH
	SYMB	LINE, 247
	MOV.B	ES,R1L
	MOV.W	[R0+1364],#055H
	SYMB	LINE, 248
	MOV.B	ES,R1L
	MOV.W	[R0+2730],#090H
	SYMB	LINE, 250
	MOV.B	ES,R1L
	MOV.W	R4,[R0]
	AND.B	R4L,#0FFH
	MOV.B	ES,R3L
	MOV.B	[R2],R4L
	SYMB	LINE, 251
	MOV.B	ES,R1L
	MOV.W	R2,[R0+2]
	SYMB	LTIM, "manufacturer", 11, 0, 2125
	MOV.W	R5,[R7+10]
	MOV.W	R4,[R7+8]
	MOV.B	ES,R5L
	MOV.W	[R4],R2
	SYMB	LINE, 253
	MOV.B	ES,R1L
	MOV.W	[R0],#0F0H
	SYMB	LINE, 254
	POP.W	R4, R5
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "address", 3, 0, 77
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 267
	PUBLIC	_flash_get_status
_flash_get_status:
	SYMB	TYPE, 279, 'X', 12, #258, 30, 1, #258
	SYMB	GFUN, "flash_get_status", _flash_get_status, #279, 0, 0, 0
	SYMB	ALAB, _flash_get_status, #279
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	LINE, 272
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R2,R0
	SEXT.W	R3
	MOV.W	R1,_meminfo+2
	MOV.W	R0,_meminfo
	ADD.W	R0,#0EH
	ADDC.W	R1,#00H
	ADD.W	R0,R2
	ADDC.W	R1,R3
	MOV.B	CS,R1L
	MOVC.W	R2,[R0+]
	CMP.W	R0,#00H
	BNE	_19
	ADDS.B	CS,#01H
_19:
	MOVC.W	R3,[R0+]
	MOV.W	R1,R3
	MOV.W	R0,R2
	CALL	_flash_status
	SYMB	LINE, 274
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 288
	PUBLIC	_flash_sector_protect_verify
_flash_sector_protect_verify:
	SYMB	TYPE, 280, 'X', 12, #258, 30, 1, #258
	SYMB	GFUN, "flash_sector_protect_verify", _flash_sector_protect_verify, #280, 0, 0, 0
	SYMB	ALAB, _flash_sector_protect_verify, #280
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	IDEN, "answer", -1, #258, 130, 5
	SYMB	LTIM, "answer", -1, 0, 69
	SYMB	LINE, 296
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R2,R0
	SEXT.W	R3
	MOV.W	R1,_meminfo+2
	MOV.W	R0,_meminfo
	ADD.W	R0,#0EH
	ADDC.W	R1,#00H
	ADD.W	R0,R2
	ADDC.W	R1,R3
	MOV.B	CS,R1L
	MOVC.W	R2,[R0+]
	CMP.W	R0,#00H
	BNE	_20
	ADDS.B	CS,#01H
_20:
	MOVC.W	R3,[R0+]
	SYMB	LTIM, "address", 11, 0, 205
	SYMB	LINE, 299
	MOV.B	ES,R3L
	MOV.W	[R2],#0F0H
	SYMB	LINE, 301
	MOV.B	ES,R3L
	MOV.W	[R2+2730],#0AAH
	SYMB	LINE, 302
	MOV.B	ES,R3L
	MOV.W	[R2+1364],#055H
	SYMB	LINE, 303
	MOV.B	ES,R3L
	MOV.W	[R2+2730],#090H
	SYMB	LINE, 305
	MOV.B	ES,R3L
	MOV.W	R0,[R2]
	AND.B	R0L,#01H
	SYMB	LTIM, "answer", 0, 0, 205
	SYMB	LINE, 307
	MOV.B	ES,R3L
	MOV.W	[R2],#0F0H
	SYMB	LINE, 310
	RET
	SYMB	LTIM, "answer", 0, 0, 77
	SYMB	LTIM, "address", 11, 0, 77
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 323
	PUBLIC	_flash_sector_erase
_flash_sector_erase:
	SYMB	TYPE, 281, 'X', 12, #1, 30, 1, #258
	SYMB	GFUN, "flash_sector_erase", _flash_sector_erase, #281, 0, 0, 0
	SYMB	ALAB, _flash_sector_erase, #281
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LINE, 330
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R0,R0
	SEXT.W	R1
	MOV.W	R3,_meminfo+2
	MOV.W	R2,_meminfo
	ADD.W	R2,#0EH
	ADDC.W	R3,#00H
	ADD.W	R2,R0
	ADDC.W	R3,R1
	MOV.B	CS,R3L
	MOVC.W	R0,[R2+]
	CMP.W	R2,#00H
	BNE	_21
	ADDS.B	CS,#01H
_21:
	MOVC.W	R1,[R2+]
	SYMB	LTIM, "address", 3, 0, 205
	SYMB	LINE, 333
	MOV.B	ES,R1L
	MOV.W	[R0+2730],#0AAH
	SYMB	LINE, 334
	MOV.B	ES,R1L
	MOV.W	[R0+1364],#055H
	SYMB	LINE, 335
	MOV.B	ES,R1L
	MOV.W	[R0+2730],#080H
	SYMB	LINE, 336
	MOV.B	ES,R1L
	MOV.W	[R0+2730],#0AAH
	SYMB	LINE, 337
	MOV.B	ES,R1L
	MOV.W	[R0+1364],#055H
	SYMB	LINE, 338
	MOV.B	ES,R1L
	MOV.W	[R0],#030H
	SYMB	LINE, 339
	RET
	SYMB	LTIM, "address", 3, 0, 77
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 352
	PUBLIC	_flash_sector_erase_int
_flash_sector_erase_int:
	SYMB	TYPE, 282, 'X', 12, #258, 30, 1, #258
	SYMB	GFUN, "flash_sector_erase_int", _flash_sector_erase_int, #282, 0, 0, 48
	SYMB	ALAB, _flash_sector_erase_int, #282
	PUSH.W	R4, R5
	SYMB	SOFF, 4
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LINE, 359
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R2,R0
	SEXT.W	R3
	MOV.W	R1,_meminfo+2
	MOV.W	R0,_meminfo
	ADD.W	R0,#0EH
	ADDC.W	R1,#00H
	ADD.W	R0,R2
	ADDC.W	R1,R3
	MOV.B	CS,R1L
	MOVC.W	R4,[R0+]
	CMP.W	R0,#00H
	BNE	_23
	ADDS.B	CS,#01H
_23:
	MOVC.W	R5,[R0+]
	SYMB	LTIM, "address", 19, 0, 205
	SYMB	LINE, 362
	MOV.B	ES,R5L
	MOV.W	[R4+2730],#0AAH
	SYMB	LINE, 363
	MOV.B	ES,R5L
	MOV.W	[R4+1364],#055H
	SYMB	LINE, 364
	MOV.B	ES,R5L
	MOV.W	[R4+2730],#080H
	SYMB	LINE, 365
	MOV.B	ES,R5L
	MOV.W	[R4+2730],#0AAH
	SYMB	LINE, 366
	MOV.B	ES,R5L
	MOV.W	[R4+1364],#055H
	SYMB	LINE, 367
	MOV.B	ES,R5L
	MOV.W	[R4],#030H
	SYMB	LINE, 369
_22:
	MOV.W	R1,R5
	MOV.W	R0,R4
	CALL	_flash_status
	CMP.B	R0L,#01H
	BEQ	_22
	SYMB	LINE, 372
	MOV.W	R1,R5
	MOV.W	R0,R4
	CALL	_flash_status
	SYMB	LTIM, "address", 19, 0, 77
	SYMB	LTIM, "address", 3, 0, 205
	SYMB	LTIM, "address", 3, 0, 77
	SYMB	LINE, 373
	POP.W	R4, R5
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 386
	PUBLIC	_flash_read_word
_flash_read_word:
	SYMB	TYPE, 283, 'X', 12, #259, 30, 1, #260
	SYMB	GFUN, "flash_read_word", _flash_read_word, #283, 0, 0, 0
	SYMB	ALAB, _flash_read_word, #283
	SYMB	LTIM, "offset", 3, 0, 2253
	SYMB	IDEN, "offset", 3, #260, 0, 2061
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	LTIM, "offset", 3, 0, 2125
	SYMB	LTIM, "address", 3, 0, 205
	SYMB	LINE, 396
	MOV.B	ES,R1L
	MOV.W	R0,[R0]
	SYMB	LTIM, "address", 3, 0, 77
	SYMB	LINE, 397
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 410
	PUBLIC	_flash_write_word
_flash_write_word:
	SYMB	TYPE, 284, 'X', 12, #258, 30, 2, #260, #259
	SYMB	GFUN, "flash_write_word", _flash_write_word, #284, 0, 0, 112
	SYMB	ALAB, _flash_write_word, #284
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	ADDS.W	R7,#0CH
	SYMB	SOFF, 10
	SYMB	LTIM, "offset", 3, 0, 2253
	SYMB	LTIM, "data", 10, 0, 2253
	MOV.W	R6,R2
	SYMB	LTIM, "data", 10, 0, 2125
	SYMB	LTIM, "data", 26, 0, 2253
	SYMB	IDEN, "offset", 3, #260, 0, 2061
	SYMB	IDEN, "data", 26, #259, 0, 2061
	SYMB	IDEN, "address", -1, #273, 130, 5
	SYMB	LTIM, "address", -1, 0, 69
	SYMB	IDEN, "dst", -1, #273, 130, 5
	SYMB	LTIM, "dst", -1, 0, 69
	SYMB	IDEN, "stat", -1, #258, 130, 5
	SYMB	LTIM, "stat", -1, 0, 69
	SYMB	IDEN, "retry", -1, #258, 130, 5
	SYMB	LTIM, "retry", -1, 0, 69
	SYMB	LINE, 419
	MOV.W	R3,R1
	MOV.W	R2,R0
	MOV.W	[R7+2],R3
	MOV.W	[R7],R2
	SYMB	LTIM, "dst", -10, 130, 197
	SYMB	LINE, 420
	AND.W	R0,#00H
	AND.W	R1,#0FH
	SYMB	LTIM, "offset", 3, 0, 2125
	MOV.W	R5,R1
	MOV.W	R4,R0
	SYMB	LTIM, "address", 19, 0, 205
	SYMB	LINE, 423
	MOV.B	ES,R5L
	MOV.W	[R4],#0F0H
	SYMB	LINE, 425
_28:
	MOV.W	R1,R5
	MOV.W	R0,R4
	CALL	_flash_status
	MOV.B	R0H,R0L
	SYMB	LTIM, "stat", 1, 0, 205
	CMP.B	R0H,#01H
	BEQ	_28
	SYMB	LINE, 428
	OR.B	R0L,R0L
	BNE	_30
	SYMB	LINE, 430
	MOV.B	ES,R5L
	MOV.W	[R4+2730],#0AAH
	SYMB	LINE, 431
	MOV.B	ES,R5L
	MOV.W	[R4+1364],#055H
	SYMB	LINE, 432
	MOV.B	ES,R5L
	MOV.W	[R4+2730],#0A0H
	SYMB	LINE, 434
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	[R0],R6
	SYMB	LTIM, "stat", 1, 0, 77
	SYMB	LTIM, "dst", -10, 130, 69
	SYMB	LTIM, "dst", 3, 0, 205
	SYMB	LINE, 436
_29:
	MOV.W	R1,R5
	MOV.W	R0,R4
	SYMB	LTIM, "dst", 3, 0, 77
	CALL	_flash_status
	MOV.B	R0H,R0L
	SYMB	LTIM, "stat", 1, 0, 205
	CMP.B	R0H,#01H
	BEQ	_29
	SYMB	LINE, 439
	MOV.B	ES,R5L
	MOV.W	[R4],#0F0H
	SYMB	LINE, 440
_30:
	SYMB	LINE, 442
	MOV.B	R0L,R0H
	SYMB	LTIM, "stat", 1, 0, 77
	SYMB	LTIM, "stat", 0, 0, 205
	SYMB	LINE, 443
	ADDS.W	R7,#04H
	SYMB	SOFF, 6
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "stat", 0, 0, 77
	SYMB	LTIM, "address", 19, 0, 77
	SYMB	LTIM, "data", 26, 0, 2125
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 456
	PUBLIC	_flash_get_sector_size
_flash_get_sector_size:
	SYMB	TYPE, 285, 'X', 12, #260, 30, 1, #258
	SYMB	GFUN, "flash_get_sector_size", _flash_get_sector_size, #285, 0, 0, 0
	SYMB	ALAB, _flash_get_sector_size, #285
	SYMB	LTIM, "sector", 0, 0, 2253
	SYMB	IDEN, "sector", 0, #258, 0, 2061
	SYMB	LINE, 458
	MULU.B	R0L,#0AH
	SYMB	LTIM, "sector", 0, 0, 2125
	MOV.W	R0,R0
	SEXT.W	R1
	MOV.W	R3,_meminfo+2
	MOV.W	R2,_meminfo
	ADD.W	R2,#0AH
	ADDC.W	R3,#00H
	ADD.W	R2,R0
	ADDC.W	R3,R1
	MOV.B	CS,R3L
	MOVC.W	R0,[R2+]
	CMP.W	R2,#00H
	BNE	_33
	ADDS.B	CS,#01H
_33:
	MOVC.W	R1,[R2+]
	SYMB	LINE, 459
	RET
	SYMB	EFUN
	ALIGN	1
	SYMB	LINE, 472
	PUBLIC	_flash_get_numsectors
_flash_get_numsectors:
	SYMB	TYPE, 286, 'X', 12, #258, 30, 0
	SYMB	GFUN, "flash_get_numsectors", _flash_get_numsectors, #286, 0, 0, 0
	SYMB	ALAB, _flash_get_numsectors, #286
	SYMB	LINE, 474
	MOV.W	R1,_meminfo+2
	MOV.W	R0,_meminfo
	ADD.W	R0,#04H
	ADDC.W	R1,#00H
	MOV.B	CS,R1L
	MOVC.W	R1,[R0+]
	MOV.B	R0L,R1L
	SYMB	LINE, 475
	RET
	SYMB	EFUN
	SYMB	ENDF

FLASH_ROM_FA	SEGMENT	HDATA INSEGMENT ROMDATA
	RSEG	FLASH_ROM_FA
_4:	DB	041H,06DH,032H,039H,044H,04CH,038H,030H,030H,042H,000H
_3:	DB	041H,06DH,032H,039H,044H,04CH,038H,030H,030H,054H,000H
	SYMB	TYPE, 287, 'n', #268, 129
	SYMB	TYPE, 288, 'P', #287
	SYMB	IDEN, "meminfo", _meminfo, #288, 130, 0
	SYMB	ALAB, _meminfo, #288
FLASH_CLR_NE@DS	SEGMENT	DATA JOIN CLEAR
	RSEG	FLASH_CLR_NE@DS
	PUBLIC	_meminfo
	ALIGN	1
_meminfo:	DS	4
	RSEG	FLASH_ROM_FA
_6:	DB	04DH,042H,04DH,032H,039H,046H,034H,030H,030H,042H,000H
_5:	DB	04DH,042H,04DH,032H,039H,046H,034H,030H,030H,054H,000H
	EXTRN	DATA(__lc_ub_xvwbuffer)
	EXTRN	DATA(__lc_ue_xvwbuffer)
	CALLS	'flash_get_status', 'flash_status'
	CALLS	'flash_sector_erase_int', 'flash_status'
	CALLS	'flash_write_word', 'flash_status'
	END
