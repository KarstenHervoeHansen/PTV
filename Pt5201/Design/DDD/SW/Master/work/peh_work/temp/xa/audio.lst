XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
F:\PTV\Pt5201\Design\DDD\SW\Master\work\peh_work\temp\xa\audio.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\cxa\rtxc\xa\include -I. -Ml
                          3 ;          -O2 -s
                          5 $NOZPAGE
                          6         NAME    AUDIO
                         10 ; audio.c     1 /****************************************************************************/
                         11 ; audio.c     2 /* MODULE:                                                                  */
                         12 ; audio.c     3 /*  audio.c - Audio                                                              
                                                                                */
                         13 ; audio.c     4 /****************************************************************************/
                         14 ; audio.c     5 /* FUNCTIONS:                                                               */
                         15 ; audio.c     6 /*                                                                          */
                         16 ; audio.c     7 /* TASKS:                                                                   */
                         17 ; audio.c     8 /*                                                                          */
                         18 ; audio.c     9 /* NOTES:                                                                   */
                         19 ; audio.c    10 /*                                                                          */
                         20 ; audio.c    11 /****************************************************************************/
                         21 ; audio.c    12 /*
                         22 ; audio.c    13  *   PTV software for PT5201
                         23 ; audio.c    14  *   Copyright (c) 
                         24 ; audio.c    15  *   ProTeleVision Technologies A/S.
                         25 ; audio.c    16  *   ALL RIGHTS RESERVED
                         26 ; audio.c    17 */
                         27 ; audio.c    18 /****************************************************************************/
                         28 ; audio.c    19 
                         29 ; audio.c    20 #include "reg8051.h"
                         32 ; audio.c    21 #include "define.h"
                         35 ; audio.c    22 #include "rtxcobj.h"
                        365 ; audio.c    23 #include "audio.h"
                        376 ; audio.c    24 #include "led_hw.h"
                        383 ; audio.c    25 #include "tables.h"
                        386 ; audio.c    26 #include "instru.h"
                        481 ; audio.c    27                                                                                  
                                                    
                        482 ; audio.c    28 /**************************************************************************/
                        483 ; audio.c    29 // The following definitions are based upon the document be PF:
                        484 ; audio.c    30 //  "I/O-ports for controlling the audio generator in PT5201."
                        485 ; audio.c    31 
                        486 ; audio.c    32 // Audio Mode Select Port
                        487 ; audio.c    33 #define AUDIOMODE                       0x000F
                        488 ; audio.c    34 #define CLICKPERIOD             0x0100
                        489 ; audio.c    35 
                        490 ; audio.c    36 #define AESEBU500HZ48KHZ                                        0
                        491 ; audio.c    37 #define AESEBU1000HZ48KHZ                                       1
                        492 ; audio.c    38 #define AESEBU1000HZCLICK48KHZ          2
                        493 ; audio.c    39 #define AESEBU8000HZ48KHZ                                       3
                        494 ; audio.c    40  
                        495 ; audio.c    41 #define AESEBU500HZ441KHZ                                       4
                        496 ; audio.c    42 #define AESEBU1000HZ441KHZ                              5
                        497 ; audio.c    43 #define AESEBU1000HZCLICK441KHZ         6
                        498 ; audio.c    44 #define AESEBU8000HZ441KHZ                              7
                        499 ; audio.c    45 
                        500 ; audio.c    46 #define ANALOG500HZ                                                             8
                            
                        501 ; audio.c    47 #define ANALOG1000HZ                                                    9
                        502 ; audio.c    48 #define ANALOG1000HZCLICK                                       10
                        503 ; audio.c    49 #define ANALOG8000HZ                                                    11
                        504 ; audio.c    50 
                        505 ; audio.c    51 #define AESEBUF48KHZOFFSET                              0
                        506 ; audio.c    52 #define AESEBUF441KHZOFFSET                             4
                        507 ; audio.c    53 #define ANALOGAUDIOOFFSET                                       8
                        508 ; audio.c    54 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        509 ; audio.c    55 // Audio Level Select Port
                        510 ; audio.c    56 #define AESEBULEVEL             0x0007
                        511 ; audio.c    57 #define ANALOGLEVEL             0x001F
                        512 ; audio.c    58 #define AUDIOLEVEL              AESEBULEVEL | ANALOGLEVEL
                        513 ; audio.c    59 
                        514 ; audio.c    60 // Audio Control Select Port
                        515 ; audio.c    61 #define POTMETERS                       0x000F
                        516 ; audio.c    62 #define POT_CLK                         0x0001
                        517 ; audio.c    63 #define POT_SDI                         0x0002
                        518 ; audio.c    64 #define POT_CSAU                        0x0004
                        519 ; audio.c    65 #define POT_CSCB                        0x0008
                        520 ; audio.c    66 #define SELAESEBU                       0x0010
                        521 ; audio.c    67 #define SELANALOG                       0x0020
                        522 ; audio.c    68 #define NTSCPHASE                       0x0040
                        523 ; audio.c    69 #define RELAYTYPE                       0x0080
                        524 ; audio.c    70 #define PLLLOCK                         0x0100
                        525 ; audio.c    71 #define VIDEOLOCK                       0x0200
                        526 ; audio.c    72 
                        527 ; audio.c    73 // End of definitions
                        528 ; audio.c    74 /**************************************************************************/
                        529 ; audio.c    75 
                        530 ; audio.c    76 code UI TimingValues[] = {
000000                  531 AUDIO_RO        SEGMENT HCODE ROMDATA
000000                  532         RSEG    AUDIO_RO
                        536         PUBLIC  _TimingValues
                        537         ALIGN   1
000000                  538 _TimingValues:
000000 010016002B0041   539         DW      00001H,00016H,0002BH,00041H,00056H,0006CH,00082H,00097H
       0056006C008200       
       9700                 
000010 AD00C200D800EE   540         DW      000ADH,000C2H,000D8H,000EEH,00103H,00119H,0012EH,00144H
       00030119012E01       
       4401                 
000020 5A016F0185019A   541         DW      0015AH,0016FH,00185H,0019AH,001B0H,001C6H,001DBH,001F1H
       01B001C601DB01       
       F101                 
                        542 ; audio.c    77         0x001,  // 0.0us
                        543 ; audio.c    78         0x016,  // 0.8us
                        544 ; audio.c    79         0x02B,  // 1.6us
                        545 ; audio.c    80         0x041,  // 2.4us
                        546 ; audio.c    81         0x056,  // 3.2us
                        547 ; audio.c    82         0x06C,  // 4.0us
                        548 ; audio.c    83         0x082,  // 4.8us
                        549 ; audio.c    84         0x097,  // 5.6us
                        550 ; audio.c    85         0x0AD,  // 6.4us
                        551 ; audio.c    86         0x0C2,  // 7.2us
                        552 ; audio.c    87         0x0D8,  // 8.0us
                        553 ; audio.c    88         0x0EE,  // 8.8us
                        554 ; audio.c    89         0x103,  // 9.6us
                        555 ; audio.c    90         0x119,  // 10.4us
                        556 ; audio.c    91         0x12E,  // 11.2us
                        557 ; audio.c    92         0x144,  // 12.0us
                        558 ; audio.c    93         0x15A,  // 12.8us
                        559 ; audio.c    94         0x16F,  // 13.6us
                        560 ; audio.c    95         0x185,  // 14.4us
                        561 ; audio.c    96         0x19A,  // 15.2us
                        562 ; audio.c    97         0x1B0,  // 16.0us
                        563 ; audio.c    98         0x1C6,  // 16.8us
                        564 ; audio.c    99         0x1DB,  // 17.6us
                        565 ; audio.c   100         0x1F1,  // 18.4us
                        566 ; audio.c   101         0x206,  // 19.2us
                        567 ; audio.c   102         0x21C           // 20.0us
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        568 ; audio.c   103 };
                        569 ; audio.c   104 
                        570 ; audio.c   105 int AudioOutput;
                        571 ; audio.c   106 AudioObject AudioSetup[NoOfAudioOutputs];
                        572 ; audio.c   107 
                        573 ; audio.c   108 volatile int AudioModePort _at(0x70000);                                // Port d
                            efined in PLD
                        574 ; audio.c   109 volatile int AudioLevelPort _at(0x70002);                       // Port defined i
                            n PLD
                        575 ; audio.c   110 volatile int AudioTimingPort _at(0x70004);                      // Port defined i
                            n PLD
                        576 ; audio.c   111 volatile int AudioControlPort _at(0x70006);             // Port defined in PLD
                        577 ; audio.c   112 
                        578 ; audio.c   113 static int AudioMode;
                        579 ; audio.c   114 static int AudioLevel;
                        580 ; audio.c   115 static int AudioTiming;
                        581 ; audio.c   116 static int AudioControl;
                        582 ; audio.c   117 
                        583 ; audio.c   118 /**************************************************************************/
                        584 ; audio.c   119 /* Write_AD8402                                                                  
                                                                                                                             
                                                              AUDIO.C */
                        585 ; audio.c   120 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        586 ; audio.c   121 /* Author:       Peter Frederiksen/Kim Engedahl, DEV, 000329                     
                                                                            */
                        587 ; audio.c   122 /* Revised:      000603, KEn, DEV                                                
                                                                                                                             
                                            */
                        588 ; audio.c   123 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        589 ; audio.c   124 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                        590 ; audio.c   125 /* Remarks:      The Altera PLD V8 should be loaded before calling this          
                                            */
                        591 ; audio.c   126 /*                                       function.                               
                                                                                                                             
                                                                                                            */
                        592 ; audio.c   127 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                        593 ; audio.c   128 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                        594 ; audio.c   129 /**************************************************************************/
                        595 ; audio.c   130 int Write_AD8402( UC potmeter, UC channel, UC data)
                        596 ; audio.c   131 {
000030 06021C02         597         DW      00206H,0021CH
000000                  598 AUDIO_PR        SEGMENT HCODE
000000                  599         RSEG    AUDIO_PR
                        600         ALIGN   1
                        602         PUBLIC  _Write_AD8402
000000                  603 _Write_AD8402:
                        617 ; audio.c   132         UI d, n;
                        618 ; audio.c   133 
                        619 ; audio.c   134         if ( channel > 1)
000000 911401           621         CMP.B   R0H,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
000003 F903             622         BL      _3
                        623 ; audio.c   135                 return( FAIL);
000005 B900             625         MOV.W   R0,#00H
000007 D680             628         RET
000007 D68000           628         RET
00000A                  629 _3:
                        634 ; audio.c   136 
                        635 ; audio.c   137         switch ( potmeter)
00000A 910400           637         CMP.B   R0L,#00H
00000D F313             638         BEQ     _6
00000F 910401           639         CMP.B   R0L,#01H
000012 F301             640         BEQ     _4
000014 FE0D             641         BR      _5
                        642 ; audio.c   138         {
                        643 ; audio.c   139                 case CBPotMeter:
                        644 ; audio.c   140                         AudioControl &= ~POT_CSCB;
                        645 ; audio.c   141                         break;
                        646 ; audio.c   142 
                        647 ; audio.c   143                 case AudioPotMeter:
000016                  649 _4:
                        650 ; audio.c   144                         AudioControl &= ~POT_CSAU;
000016 964842rr         652         MOV.B   ES,#SEG( _AudioControl )
00001A 9928rrrr         653         MOV.W   R2,#SOF( _AudioControl )
00001E 8A22             654         MOV.W   R2,[R2]
000020 9925FFFB         655         AND.W   R2,#0FFFBH
000024 964842rr         656         MOV.B   ES,#SEG( _AudioControl )
000028 9938rrrr         657         MOV.W   R3,#SOF( _AudioControl )
00002C 8A2B             658         MOV.W   [R3],R2
                        659 ; audio.c   145                         break;
00002E FE0E             661         BR      _7
                        662 ; audio.c   146 
                        663 ; audio.c   147                 default:
000030                  665 _5:
                        666 ; audio.c   148                         return( FAIL);
000030 B900             668         MOV.W   R0,#00H
000032 D680             671         RET
000034                  673 _6:
000034 964842rr         678         MOV.B   ES,#SEG( _AudioControl )
000038 9928rrrr         679         MOV.W   R2,#SOF( _AudioControl )
00003C 8A22             680         MOV.W   R2,[R2]
00003E 9925FFF7         681         AND.W   R2,#0FFF7H
000042 964842rr         682         MOV.B   ES,#SEG( _AudioControl )
000046 9938rrrr         683         MOV.W   R3,#SOF( _AudioControl )
00004A 8A2B             684         MOV.W   [R3],R2
                        685 ; audio.c   149         }
00004C                  687 _7:
                        688 ; audio.c   150 
                        689 ; audio.c   151         AudioControlPort = AudioControl;
00004C 964842rr         691         MOV.B   ES,#SEG( _AudioControl )
000050 9928rrrr         692         MOV.W   R2,#SOF( _AudioControl )
000054 8A22             693         MOV.W   R2,[R2]
000056 96484207         694         MOV.B   ES,#SEG( _AudioControlPort )
00005A 99380006         695         MOV.W   R3,#SOF( _AudioControlPort )
00005E 8A2B             696         MOV.W   [R3],R2
                        697 ; audio.c   152 
                        698 ; audio.c   153         d = ( channel * 0x100) + data;
000060 8141             700         MOV.B   R2L,R0H
000062 B150             701         MOVS.B  R2H,#00H
000064 D928             702         ASL.W   R2,#08H
000066 8102             703         MOV.B   R0L,R1L
000068 B110             704         MOVS.B  R0H,#00H
00006A 0920             706         ADD.W   R2,R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
                        708 ; audio.c   154 
                        709 ; audio.c   155         for ( n = 0x200; n > 0; n /= 2)
00006C 99180200         711         MOV.W   R1,#0200H
000070                  714 _8:
                        715 ; audio.c   156         {
                        716 ; audio.c   157                 AudioControl  &= ~POT_CLK;
000070 964842rr         718         MOV.B   ES,#SEG( _AudioControl )
000074 9908rrrr         719         MOV.W   R0,#SOF( _AudioControl )
000078 8A00             720         MOV.W   R0,[R0]
00007A 9905FFFE         721         AND.W   R0,#0FFFEH
00007E 964842rr         722         MOV.B   ES,#SEG( _AudioControl )
000082 9938rrrr         723         MOV.W   R3,#SOF( _AudioControl )
000086 8A0B             724         MOV.W   [R3],R0
                        725 ; audio.c   158                 AudioControlPort = AudioControl;
000088 96484207         727         MOV.B   ES,#SEG( _AudioControlPort )
00008C 99380006         728         MOV.W   R3,#SOF( _AudioControlPort )
000090 8A0B             729         MOV.W   [R3],R0
                        730 ; audio.c   159                 
                        731 ; audio.c   160                 if ( d & n)
000092 8932             733         MOV.W   R3,R2
000094 5931             734         AND.W   R3,R1
000096 F308             735         BEQ     _9
                        736 ; audio.c   161                         AudioControl |= POT_SDI;
000098 99060002         738         OR.W    R0,#02H
00009C 964842rr         739         MOV.B   ES,#SEG( _AudioControl )
0000A0 9938rrrr         740         MOV.W   R3,#SOF( _AudioControl )
0000A4 8A0B             741         MOV.W   [R3],R0
0000A6 FE0C             742         BR      _10
0000A6 FE0C             742         BR      _10
0000A8                  743 _9:
                        744 ; audio.c   162                 else
                        745 ; audio.c   163                         AudioControl &= ~POT_SDI;
0000A8 964842rr         747         MOV.B   ES,#SEG( _AudioControl )
0000AC 9908rrrr         748         MOV.W   R0,#SOF( _AudioControl )
0000B0 8A00             749         MOV.W   R0,[R0]
0000B2 9905FFFD         750         AND.W   R0,#0FFFDH
0000B6 964842rr         751         MOV.B   ES,#SEG( _AudioControl )
0000BA 9938rrrr         752         MOV.W   R3,#SOF( _AudioControl )
0000BE 8A0B             753         MOV.W   [R3],R0
0000BE 8A0B             753         MOV.W   [R3],R0
0000C0                  754 _10:
                        755 ; audio.c   164 
                        756 ; audio.c   165                 AudioControlPort = AudioControl;
0000C0 964842rr         758         MOV.B   ES,#SEG( _AudioControl )
0000C4 9908rrrr         759         MOV.W   R0,#SOF( _AudioControl )
0000C8 8A00             760         MOV.W   R0,[R0]
0000CA 96484207         761         MOV.B   ES,#SEG( _AudioControlPort )
0000CE 99380006         762         MOV.W   R3,#SOF( _AudioControlPort )
0000D2 8A0B             763         MOV.W   [R3],R0
                        764 ; audio.c   166 
                        765 ; audio.c   167                 AudioControl |= POT_CLK;
0000D4 99060001         767         OR.W    R0,#01H
0000D8 964842rr         768         MOV.B   ES,#SEG( _AudioControl )
0000DC 9938rrrr         769         MOV.W   R3,#SOF( _AudioControl )
0000E0 8A0B             770         MOV.W   [R3],R0
                        771 ; audio.c   168                 AudioControlPort = AudioControl;
0000E2 96484207         773         MOV.B   ES,#SEG( _AudioControlPort )
0000E6 99380006         774         MOV.W   R3,#SOF( _AudioControlPort )
0000EA 8A0B             775         MOV.W   [R3],R0
0000EC D811             777         LSR.W   R1,#01H
0000EE 99140000         780         CMP.W   R1,#00H
0000F2 F8BE             781         BG      _8
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
                        782 ; audio.c   169         }
                        783 ; audio.c   170 
                        784 ; audio.c   171         AudioControl |= ( POT_CLK | POT_SDI | POT_CSAU | POT_CSCB);
0000F4 9906000F         786         OR.W    R0,#0FH
0000F8 964842rr         787         MOV.B   ES,#SEG( _AudioControl )
0000FC 9918rrrr         788         MOV.W   R1,#SOF( _AudioControl )
000100 8A09             789         MOV.W   [R1],R0
                        790 ; audio.c   172         AudioControlPort = AudioControl;
000102 96484207         792         MOV.B   ES,#SEG( _AudioControlPort )
000106 99180006         793         MOV.W   R1,#SOF( _AudioControlPort )
00010A 8A09             794         MOV.W   [R1],R0
                        795 ; audio.c   173 
                        796 ; audio.c   174         return( OK);
00010C 9908FFFF         798         MOV.W   R0,#0FFFFH
                        799 ; audio.c   175 }
000110                  801 _12:
000110 D680             802         RET
                        806 ; audio.c   176 
                        807 ; audio.c   177 /**************************************************************************/
                        808 ; audio.c   178 /* WriteAnlAudioDACLevel                                                         
                                                                                                                             
                                      AUDIO.C */
                        809 ; audio.c   179 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        810 ; audio.c   180 /* Author:       Kim Engedahl, DEV, 000504                                       
                                                                                                                             
                                    */
                        811 ; audio.c   181 /* Revised:      000603, KEn, DEV                                                
                                                                                                                             
                                            */
                        812 ; audio.c   182 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        813 ; audio.c   183 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                        814 ; audio.c   184 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                        815 ; audio.c   185 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                        816 ; audio.c   186 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                        817 ; audio.c   187 /**************************************************************************/
                        818 ; audio.c   188 int WriteAnlAudioDACLevel( UC left, UC right)
                        819 ; audio.c   189 {       
                        820         ALIGN   1
                        822         PUBLIC  _WriteAnlAudioDACLevel
000112                  823 _WriteAnlAudioDACLevel:
000112 0F10             827         PUSH.W  R4
000114 A97E             829         ADDS.W  R7,#0EH
000116 8181             833         MOV.B   R4L,R0H
                        838 ; audio.c   190         Write_AD8402( AudioPotMeter, AnlAudioLeftChannel, left);
000118 911800           840         MOV.B   R0H,#00H
00011B 912801           841         MOV.B   R1L,#01H
00011E 820F             842         MOV.B   [R7],R0L
000120 8102             845         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000122 8227             846         MOV.B   R1L,[R7]
000124 C5FF6D           847         CALL    _Write_AD8402
                        851 ; audio.c   191         Write_AD8402( AudioPotMeter, AnlAudioRightChannel, right);
000127 910801           853         MOV.B   R0L,#01H
00012A 8128             854         MOV.B   R1L,R4L
00012C 911801           855         MOV.B   R0H,#01H
00012F C5FF67           856         CALL    _Write_AD8402
                        860 ; audio.c   192 
                        861 ; audio.c   193         return( OK);
000132 9908FFFF         863         MOV.W   R0,#0FFFFH
                        864 ; audio.c   194 }
000136 A972             866         ADDS.W  R7,#02H
000138 2F10             868         POP.W   R4
00013A D680             870         RET
                        872 ; audio.c   195 
                        873 ; audio.c   196 /**************************************************************************/
                        874 ; audio.c   197 /* AudioDefaults                                                                 
                                                                                                                             
                                                              AUDIO.C */
                        875 ; audio.c   198 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        876 ; audio.c   199 /* Author:       Kim Engedahl, DEV, 000526                                       
                                                                                                                             
                                    */
                        877 ; audio.c   200 /* Revised:      000617, KEn, DEV                                                
                                                                                                                             
                                            */
                        878 ; audio.c   201 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        879 ; audio.c   202 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                        880 ; audio.c   203 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                        881 ; audio.c   204 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                        882 ; audio.c   205 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                        883 ; audio.c   206 /**************************************************************************/
                        884 ; audio.c   207 void AudioDefaults( void)
                        885 ; audio.c   208 {       
                        886         ALIGN   1
                        888         PUBLIC  _AudioDefaults
00013C                  889 _AudioDefaults:
00013C 0F70             893         PUSH.W  R4, R5, R6
                        895 ; audio.c   209         Settings.AudioOutput = AudioOutput = AESEBUAudio;
00013E 964842rr         897         MOV.B   ES,#SEG( _AudioOutput )
000142 9908rrrr         898         MOV.W   R0,#SOF( _AudioOutput )
000146 BA01             899         MOV.W   [R0],#01H
000148 964842rr         900         MOV.B   ES,#SEG( _Settings+44 )
00014C 9908rrrr         901         MOV.W   R0,#SOF( _Settings+44 )
000150 BA01             902         MOV.W   [R0],#01H
                        903 ; audio.c   210 
                        904 ; audio.c   211         if ( Calibration.ResetSystem < NTSC_US)
000152 964842rr         906         MOV.B   ES,#SEG( _Calibration+97 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
000156 9908rrrr         907         MOV.W   R0,#SOF( _Calibration+97 )
00015A 8200             908         MOV.B   R0L,[R0]
00015C 910402           909         CMP.B   R0L,#02H
00015F F00C             910         BCC     _15
                        911 ; audio.c   212                 Settings.AudioSetup[AESEBUAudio].System = AudioSetup[AESEBUAudio]
                            .System = AudioPAL;
000161 964842rr         913         MOV.B   ES,#SEG( _AudioSetup+14 )
000165 9908rrrr         914         MOV.W   R0,#SOF( _AudioSetup+14 )
000169 BA00             915         MOV.W   [R0],#00H
00016B 964842rr         916         MOV.B   ES,#SEG( _Settings+60 )
00016F 9908rrrr         917         MOV.W   R0,#SOF( _Settings+60 )
000173 BA00             918         MOV.W   [R0],#00H
000175 FE0B             919         BR      _16
000175 FE0B00           919         BR      _16
000178                  920 _15:
                        921 ; audio.c   213         else
                        922 ; audio.c   214                 Settings.AudioSetup[AESEBUAudio].System = AudioSetup[AESEBUAudio]
                            .System = AudioNTSC;
000178 964842rr         924         MOV.B   ES,#SEG( _AudioSetup+14 )
00017C 9908rrrr         925         MOV.W   R0,#SOF( _AudioSetup+14 )
000180 BA01             926         MOV.W   [R0],#01H
000182 964842rr         927         MOV.B   ES,#SEG( _Settings+60 )
000186 9908rrrr         928         MOV.W   R0,#SOF( _Settings+60 )
00018A BA01             929         MOV.W   [R0],#01H
00018A BA01             929         MOV.W   [R0],#01H
00018C                  930 _16:
                        931 ; audio.c   215 
                        932 ; audio.c   216         Settings.AudioSetup[AESEBUAudio].Signal = AudioSetup[AESEBUAudio].Signal 
                            = S1kHz;
00018C 964842rr         934         MOV.B   ES,#SEG( _AudioSetup+16 )
000190 9908rrrr         935         MOV.W   R0,#SOF( _AudioSetup+16 )
000194 BA01             936         MOV.W   [R0],#01H
000196 964842rr         937         MOV.B   ES,#SEG( _Settings+62 )
00019A 9908rrrr         938         MOV.W   R0,#SOF( _Settings+62 )
00019E BA01             939         MOV.W   [R0],#01H
                        940 ; audio.c   217         Settings.AudioSetup[AESEBUAudio].Level = AudioSetup[AESEBUAudio].Level = 
                            0;
0001A0 964842rr         942         MOV.B   ES,#SEG( _AudioSetup+18 )
0001A4 9908rrrr         943         MOV.W   R0,#SOF( _AudioSetup+18 )
0001A8 BA00             944         MOV.W   [R0],#00H
0001AA 964842rr         945         MOV.B   ES,#SEG( _Settings+64 )
0001AE 9908rrrr         946         MOV.W   R0,#SOF( _Settings+64 )
0001B2 BA00             947         MOV.W   [R0],#00H
                        948 ; audio.c   218         Settings.AudioSetup[AESEBUAudio].Timing = AudioSetup[AESEBUAudio].Timing 
                            = TimingValues[0];
0001B4 964843rr         950         MOV.B   CS,#SEG( _TimingValues )
0001B8 9918rrrr         951         MOV.W   R1,#SOF( _TimingValues )
0001BC 8801             952         MOVC.W  R0,[R1+]
0001BE C4rrrrrr         953         FCALL   __US2SPF
0001C2 964842rr         954         MOV.B   ES,#SEG( _AudioSetup+20 )
0001C6 9928rrrr         955         MOV.W   R2,#SOF( _AudioSetup+20 )
0001CA 8B0A             956         MOV.W   [R2+],R0
0001CC 8A1A             957         MOV.W   [R2],R1
0001CE 964842rr         958         MOV.B   ES,#SEG( _Settings+66 )
0001D2 9928rrrr         959         MOV.W   R2,#SOF( _Settings+66 )
0001D6 8B0A             960         MOV.W   [R2+],R0
0001D8 8A1A             961         MOV.W   [R2],R1
                        962 ; audio.c   219         Settings.AudioSetup[AESEBUAudio].Click = AudioSetup[AESEBUAudio].Click = 
                            click3s;
0001DA 964842rr         964         MOV.B   ES,#SEG( _AudioSetup+26 )
0001DE 9908rrrr         965         MOV.W   R0,#SOF( _AudioSetup+26 )
0001E2 BA03             966         MOV.W   [R0],#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
0001E4 964842rr         967         MOV.B   ES,#SEG( _Settings+72 )
0001E8 9908rrrr         968         MOV.W   R0,#SOF( _Settings+72 )
0001EC BA03             969         MOV.W   [R0],#03H
                        970 ; audio.c   220         Settings.AudioSetup[AESEBUAudio].Frequency = AudioSetup[AESEBUAudio].Freq
                            uency = f48kHz;
0001EE 964842rr         972         MOV.B   ES,#SEG( _AudioSetup+24 )
0001F2 9908rrrr         973         MOV.W   R0,#SOF( _AudioSetup+24 )
0001F6 BA01             974         MOV.W   [R0],#01H
0001F8 964842rr         975         MOV.B   ES,#SEG( _Settings+70 )
0001FC 9908rrrr         976         MOV.W   R0,#SOF( _Settings+70 )
000200 BA01             977         MOV.W   [R0],#01H
                        978 ; audio.c   221 
                        979 ; audio.c   222         Settings.AudioSetup[AnalogAudio].Signal = AudioSetup[AnalogAudio].Signal 
                            = S1kHz;
000202 964842rr         981         MOV.B   ES,#SEG( _AudioSetup+2 )
000206 9908rrrr         982         MOV.W   R0,#SOF( _AudioSetup+2 )
00020A BA01             983         MOV.W   [R0],#01H
00020C 964842rr         984         MOV.B   ES,#SEG( _Settings+48 )
000210 9908rrrr         985         MOV.W   R0,#SOF( _Settings+48 )
000214 BA01             986         MOV.W   [R0],#01H
                        987 ; audio.c   223         Settings.AudioSetup[AnalogAudio].Level = AudioSetup[AnalogAudio].Level = 
                            0; 
000216 964842rr         989         MOV.B   ES,#SEG( _AudioSetup+4 )
00021A 9908rrrr         990         MOV.W   R0,#SOF( _AudioSetup+4 )
00021E BA00             991         MOV.W   [R0],#00H
000220 964842rr         992         MOV.B   ES,#SEG( _Settings+50 )
000224 9908rrrr         993         MOV.W   R0,#SOF( _Settings+50 )
000228 BA00             994         MOV.W   [R0],#00H
                        995 ; audio.c   224         Settings.AudioSetup[AnalogAudio].Click = AudioSetup[AnalogAudio].Click = 
                            click3s;
00022A 964842rr         997         MOV.B   ES,#SEG( _AudioSetup+12 )
00022E 9908rrrr         998         MOV.W   R0,#SOF( _AudioSetup+12 )
000232 BA03             999         MOV.W   [R0],#03H
000234 964842rr        1000         MOV.B   ES,#SEG( _Settings+58 )
000238 9908rrrr        1001         MOV.W   R0,#SOF( _Settings+58 )
00023C BA03            1002         MOV.W   [R0],#03H
                       1003 ; audio.c   225 
                       1004 ; audio.c   226         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
00023E 9918rrrr        1006         MOV.W   R1,#SEG( _Settings )
000242 9908rrrr        1007         MOV.W   R0,#SOF( _Settings )
000246 964842rr        1008         MOV.B   ES,#SEG( _SettingsPtr )
00024A 9928rrrr        1009         MOV.W   R2,#SOF( _SettingsPtr )
00024E 8A22            1010         MOV.W   R2,[R2]
000250 9938004A        1011         MOV.W   R3,#04AH
                       1012         CALL    _NV_Store
000254 C4rrrrrr       +1012 ;       FCALL   _NV_Store
                       1013 ; audio.c   227 }
000258 2F70            1015         POP.W   R4, R5, R6
00025A D680            1017         RET
                       1019 ; audio.c   228 
                       1020 ; audio.c   229 /**************************************************************************/
                       1021 ; audio.c   230 /* AudioInit                                                                     
                                                                                                                             
                                                                      AUDIO.C */
                       1022 ; audio.c   231 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1023 ; audio.c   232 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
                       1024 ; audio.c   233 /* Revised:      000617, KEn, DEV                                                
                                                                                                                             
                                            */
                       1025 ; audio.c   234 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1026 ; audio.c   235 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1027 ; audio.c   236 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1028 ; audio.c   237 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                       1029 ; audio.c   238 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1030 ; audio.c   239 /**************************************************************************/
                       1031 ; audio.c   240 int AudioInit( void)
                       1032 ; audio.c   241 {       
                       1033         ALIGN   1
                       1035         PUBLIC  _AudioInit
00025C                 1036 _AudioInit:
                       1040 ; audio.c   242         WriteAnlAudioDACLevel( Calibration.AudioCalibration.AnalogLeftChannel,
                       1041 ; audio.c   243                                                                                  
                                      Calibration.AudioCalibration.AnalogRightChannel);
00025C 964842rr        1043         MOV.B   ES,#SEG( _Calibration+222 )
000260 9908rrrr        1044         MOV.W   R0,#SOF( _Calibration+222 )
000264 8200            1045         MOV.B   R0L,[R0]
000266 964842rr        1046         MOV.B   ES,#SEG( _Calibration+223 )
00026A 9918rrrr        1047         MOV.W   R1,#SOF( _Calibration+223 )
00026E 8211            1048         MOV.B   R0H,[R1]
000270 C5FF50          1049         CALL    _WriteAnlAudioDACLevel
                       1050 ; audio.c   244 
                       1051 ; audio.c   245         AudioSetup[AESEBUAudio].System = Settings.AudioSetup[AESEBUAudio].System;
                            
000273 964842rr        1053         MOV.B   ES,#SEG( _Settings+60 )
000277 9908rrrr        1054         MOV.W   R0,#SOF( _Settings+60 )
00027B 8A00            1055         MOV.W   R0,[R0]
00027D 964842rr        1056         MOV.B   ES,#SEG( _AudioSetup+14 )
000281 9918rrrr        1057         MOV.W   R1,#SOF( _AudioSetup+14 )
000285 8A09            1058         MOV.W   [R1],R0
                       1059 ; audio.c   246         AudioSetup[AESEBUAudio].Signal = Settings.AudioSetup[AESEBUAudio].Signal;
                            
000287 964842rr        1061         MOV.B   ES,#SEG( _Settings+62 )
00028B 9908rrrr        1062         MOV.W   R0,#SOF( _Settings+62 )
00028F 8A00            1063         MOV.W   R0,[R0]
000291 964842rr        1064         MOV.B   ES,#SEG( _AudioSetup+16 )
000295 9918rrrr        1065         MOV.W   R1,#SOF( _AudioSetup+16 )
000299 8A09            1066         MOV.W   [R1],R0
                       1067 ; audio.c   247         AudioSetup[AESEBUAudio].Level = Settings.AudioSetup[AESEBUAudio].Level;
00029B 964842rr        1069         MOV.B   ES,#SEG( _Settings+64 )
00029F 9908rrrr        1070         MOV.W   R0,#SOF( _Settings+64 )
0002A3 8A00            1071         MOV.W   R0,[R0]
0002A5 964842rr        1072         MOV.B   ES,#SEG( _AudioSetup+18 )
0002A9 9918rrrr        1073         MOV.W   R1,#SOF( _AudioSetup+18 )
0002AD 8A09            1074         MOV.W   [R1],R0
                       1075 ; audio.c   248         AudioSetup[AESEBUAudio].Timing = Settings.AudioSetup[AESEBUAudio].Timing;
                            
0002AF 964842rr        1077         MOV.B   ES,#SEG( _Settings+66 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
0002B3 9918rrrr        1078         MOV.W   R1,#SOF( _Settings+66 )
0002B7 8B01            1079         MOV.W   R0,[R1+]
0002B9 8A11            1080         MOV.W   R1,[R1]
0002BB 964842rr        1081         MOV.B   ES,#SEG( _AudioSetup+20 )
0002BF 9928rrrr        1082         MOV.W   R2,#SOF( _AudioSetup+20 )
0002C3 8B0A            1083         MOV.W   [R2+],R0
0002C5 8A1A            1084         MOV.W   [R2],R1
                       1085 ; audio.c   249         AudioSetup[AESEBUAudio].Click = Settings.AudioSetup[AESEBUAudio].Click;
0002C7 964842rr        1087         MOV.B   ES,#SEG( _Settings+72 )
0002CB 9908rrrr        1088         MOV.W   R0,#SOF( _Settings+72 )
0002CF 8A00            1089         MOV.W   R0,[R0]
0002D1 964842rr        1090         MOV.B   ES,#SEG( _AudioSetup+26 )
0002D5 9918rrrr        1091         MOV.W   R1,#SOF( _AudioSetup+26 )
0002D9 8A09            1092         MOV.W   [R1],R0
                       1093 ; audio.c   250         AudioSetup[AESEBUAudio].Frequency = Settings.AudioSetup[AESEBUAudio].Freq
                            uency;
0002DB 964842rr        1095         MOV.B   ES,#SEG( _Settings+70 )
0002DF 9908rrrr        1096         MOV.W   R0,#SOF( _Settings+70 )
0002E3 8A00            1097         MOV.W   R0,[R0]
0002E5 964842rr        1098         MOV.B   ES,#SEG( _AudioSetup+24 )
0002E9 9918rrrr        1099         MOV.W   R1,#SOF( _AudioSetup+24 )
0002ED 8A09            1100         MOV.W   [R1],R0
                       1101 ; audio.c   251 
                       1102 ; audio.c   252         AudioSetup[AnalogAudio].Signal = Settings.AudioSetup[AnalogAudio].Signal;
                            
0002EF 964842rr        1104         MOV.B   ES,#SEG( _Settings+48 )
0002F3 9908rrrr        1105         MOV.W   R0,#SOF( _Settings+48 )
0002F7 8A00            1106         MOV.W   R0,[R0]
0002F9 964842rr        1107         MOV.B   ES,#SEG( _AudioSetup+2 )
0002FD 9918rrrr        1108         MOV.W   R1,#SOF( _AudioSetup+2 )
000301 8A09            1109         MOV.W   [R1],R0
                       1110 ; audio.c   253         AudioSetup[AnalogAudio].Level = Settings.AudioSetup[AnalogAudio].Level;
000303 964842rr        1112         MOV.B   ES,#SEG( _Settings+50 )
000307 9908rrrr        1113         MOV.W   R0,#SOF( _Settings+50 )
00030B 8A00            1114         MOV.W   R0,[R0]
00030D 964842rr        1115         MOV.B   ES,#SEG( _AudioSetup+4 )
000311 9918rrrr        1116         MOV.W   R1,#SOF( _AudioSetup+4 )
000315 8A09            1117         MOV.W   [R1],R0
                       1118 ; audio.c   254         AudioSetup[AnalogAudio].Click = Settings.AudioSetup[AnalogAudio].Click;
000317 964842rr        1120         MOV.B   ES,#SEG( _Settings+58 )
00031B 9908rrrr        1121         MOV.W   R0,#SOF( _Settings+58 )
00031F 8A00            1122         MOV.W   R0,[R0]
000321 964842rr        1123         MOV.B   ES,#SEG( _AudioSetup+12 )
000325 9918rrrr        1124         MOV.W   R1,#SOF( _AudioSetup+12 )
000329 8A09            1125         MOV.W   [R1],R0
                       1126 ; audio.c   255 
                       1127 ; audio.c   256         // NOTE!! WordClock is NOT defined for the analog audio, hence it is nece
                            ssary
                       1128 ; audio.c   257         //  to ensure that either of the front WordClock LEDs is switched on if
                       1129 ; audio.c   258         //  the PT5201 is to start in analog audio mode, i.e. the wordclock LEDs 
                            is
                       1130 ; audio.c   259         //  updated with the state of the AESEBU audio wordclock even though anal
                            og audio
                       1131 ; audio.c   260         //  is selected.
                       1132 ; audio.c   261         LEDSet( WordClk441LED, AudioSetup[AESEBUAudio].Frequency == f441kHz);   
00032B 99081000        1134         MOV.W   R0,#01000H
00032F 964842rr        1135         MOV.B   ES,#SEG( _AudioSetup+24 )
000333 9918rrrr        1136         MOV.W   R1,#SOF( _AudioSetup+24 )
000337 8A11            1137         MOV.W   R1,[R1]
000339 F203            1138         BNE     _18
00033B B911            1139         MOVS.W  R1,#01H
00033D FE02            1140         BR      _19
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
00033D FE0200          1140         BR      _19
000340                 1141 _18:
000340 B910            1142         MOVS.W  R1,#00H
000340 B910            1142         MOVS.W  R1,#00H
000342                 1143 _19:
                       1144         CALL    _LEDSet
000342 C4rrrrrr       +1144 ;       FCALL   _LEDSet
                       1145 ; audio.c   262         LEDSet( WordClk48LED, AudioSetup[AESEBUAudio].Frequency == f48kHz);
000346 99082000        1147         MOV.W   R0,#02000H
00034A 964842rr        1148         MOV.B   ES,#SEG( _AudioSetup+24 )
00034E 9918rrrr        1149         MOV.W   R1,#SOF( _AudioSetup+24 )
000352 8A11            1150         MOV.W   R1,[R1]
000354 99140001        1151         CMP.W   R1,#01H
000358 F202            1152         BNE     _20
00035A B911            1153         MOVS.W  R1,#01H
00035C FE01            1154         BR      _22
00035C FE01            1154         BR      _22
00035E                 1155 _20:
00035E B910            1156         MOVS.W  R1,#00H
00035E B910            1156         MOVS.W  R1,#00H
000360                 1157 _22:
                       1158         CALL    _LEDSet
000360 C4rrrrrr       +1158 ;       FCALL   _LEDSet
                       1159 ; audio.c   263 
                       1160 ; audio.c   264         return( 0);
000364 B900            1162         MOV.W   R0,#00H
                       1163 ; audio.c   265 }
000366 D680            1165         RET
                       1167 ; audio.c   266 
                       1168 ; audio.c   267 /**************************************************************************/
                       1169 ; audio.c   268 /* AudioUpdate                                                                   
                                                                                                                             
                                                              AUDIO.C */
                       1170 ; audio.c   269 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1171 ; audio.c   270 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1172 ; audio.c   271 /* Revised:      000628, KEn, DEV                                                
                                                                                                                             
                                            */
                       1173 ; audio.c   272 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1174 ; audio.c   273 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1175 ; audio.c   274 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1176 ; audio.c   275 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                       1177 ; audio.c   276 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1178 ; audio.c   277 /**************************************************************************/
                       1179 ; audio.c   278 int AudioUpdate( void)
                       1180 ; audio.c   279 {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
                       1181         ALIGN   1
                       1183         PUBLIC  _AudioUpdate
000368                 1184 _AudioUpdate:
                       1188 ; audio.c   280         SetAudioOutput( Settings.AudioOutput);
000368 964842rr        1190         MOV.B   ES,#SEG( _Settings+44 )
00036C 9908rrrr        1191         MOV.W   R0,#SOF( _Settings+44 )
000370 8A00            1192         MOV.W   R0,[R0]
000372 C50013          1193         CALL    _SetAudioOutput
                       1194 ; audio.c   281 
                       1195 ; audio.c   282         return( OK);
000375 9908FFFF        1197         MOV.W   R0,#0FFFFH
                       1198 ; audio.c   283 }
000379 D680            1200         RET
                       1202 ; audio.c   284 
                       1203 ; audio.c   285 /**************************************************************************/
                       1204 ; audio.c   286 /* AudioStatus                                                                   
                                                                                                                             
                                                              AUDIO.C */
                       1205 ; audio.c   287 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1206 ; audio.c   288 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1207 ; audio.c   289 /* Revised:      000628, KEn, DEV                                                
                                                                                                                             
                                            */
                       1208 ; audio.c   290 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1209 ; audio.c   291 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1210 ; audio.c   292 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1211 ; audio.c   293 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                       1212 ; audio.c   294 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1213 ; audio.c   295 /**************************************************************************/
                       1214 ; audio.c   296 UC AudioStatus( void)
                       1215 ; audio.c   297 {
00037B 00              1216         ALIGN   1
                       1218         PUBLIC  _AudioStatus
00037C                 1219 _AudioStatus:
                       1223 ; audio.c   298         return(( AudioControlPort >> 8) && 0xFC);
00037C 96484207        1225         MOV.B   ES,#SEG( _AudioControlPort )
000380 99080006        1226         MOV.W   R0,#SOF( _AudioControlPort )
000384 8A00            1227         MOV.W   R0,[R0]
000386 DA08            1228         ASR.W   R0,#08H
000388 6900            1229         OR.W    R0,R0
00038A F302            1230         BEQ     _23
00038C 9108FC          1231         MOV.B   R0L,#0FCH
00038C 9108FC00        1231         MOV.B   R0L,#0FCH
000390                 1232 _23:
000390 F302            1233         BEQ     _24
000392 B101            1234         MOVS.B  R0L,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
000394 FE01            1235         BR      _25
000394 FE01            1235         BR      _25
000396                 1236 _24:
000396 B100            1237         MOVS.B  R0L,#00H
000396 B100            1237         MOVS.B  R0L,#00H
000398                 1238 _25:
                       1239 ; audio.c   299  }
000398 D680            1241         RET
                       1243 ; audio.c   300 
                       1244 ; audio.c   301 /**************************************************************************/
                       1245 ; audio.c   302 /* SetAudioOutput                                                                
                                                                                                                             
                                                              AUDIO.C */
                       1246 ; audio.c   303 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1247 ; audio.c   304 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1248 ; audio.c   305 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       1249 ; audio.c   306 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1250 ; audio.c   307 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1251 ; audio.c   308 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1252 ; audio.c   309 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                       1253 ; audio.c   310 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1254 ; audio.c   311 /**************************************************************************/
                       1255 ; audio.c   312 int SetAudioOutput( int output)
                       1256 ; audio.c   313 {
                       1257         ALIGN   1
                       1259         PUBLIC  _SetAudioOutput
00039A                 1260 _SetAudioOutput:
00039A 0F70            1264         PUSH.W  R4, R5, R6
00039C A97E            1266         ADDS.W  R7,#0EH
                       1270 ; audio.c   314         Settings.ActivePreset = 0;
00039E 964842rr        1272         MOV.B   ES,#SEG( _Settings )
0003A2 9918rrrr        1273         MOV.W   R1,#SOF( _Settings )
0003A6 BA10            1274         MOV.W   [R1],#00H
                       1275 ; audio.c   315 
                       1276 ; audio.c   316         Settings.AudioOutput = AudioOutput = output;
0003A8 8940            1278         MOV.W   R4,R0
0003AA 964842rr        1279         MOV.B   ES,#SEG( _AudioOutput )
0003AE 9908rrrr        1280         MOV.W   R0,#SOF( _AudioOutput )
0003B2 8A48            1281         MOV.W   [R0],R4
0003B4 964842rr        1284         MOV.B   ES,#SEG( _Settings+44 )
0003B8 9908rrrr        1285         MOV.W   R0,#SOF( _Settings+44 )
0003BC 8A48            1286         MOV.W   [R0],R4
                       1287 ; audio.c   317         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
0003BE 9918rrrr        1289         MOV.W   R1,#SEG( _Settings )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
0003C2 9908rrrr        1290         MOV.W   R0,#SOF( _Settings )
0003C6 964842rr        1291         MOV.B   ES,#SEG( _SettingsPtr )
0003CA 9928rrrr        1292         MOV.W   R2,#SOF( _SettingsPtr )
0003CE 8A22            1293         MOV.W   R2,[R2]
0003D0 9938004A        1294         MOV.W   R3,#04AH
                       1295         CALL    _NV_Store
0003D4 C4rrrrrr       +1295 ;       FCALL   _NV_Store
                       1296 ; audio.c   318 
                       1297 ; audio.c   319         if ( output == AnalogAudio)
0003D8 6944            1299         OR.W    R4,R4
0003DA F20D            1300         BNE     _26
                       1301 ; audio.c   320                 AudioControl |= SELANALOG;                      // Select analog 
                            output
0003DC 964842rr        1303         MOV.B   ES,#SEG( _AudioControl )
0003E0 9908rrrr        1304         MOV.W   R0,#SOF( _AudioControl )
0003E4 8A00            1305         MOV.W   R0,[R0]
0003E6 99060020        1306         OR.W    R0,#020H
0003EA 964842rr        1307         MOV.B   ES,#SEG( _AudioControl )
0003EE 9918rrrr        1308         MOV.W   R1,#SOF( _AudioControl )
0003F2 8A09            1309         MOV.W   [R1],R0
0003F4 FE0C            1310         BR      _27
0003F4 FE0C            1310         BR      _27
0003F6                 1311 _26:
                       1312 ; audio.c   321         else
                       1313 ; audio.c   322                 AudioControl |= SELAESEBU;                      // Select AES/EBU
                             output
0003F6 964842rr        1315         MOV.B   ES,#SEG( _AudioControl )
0003FA 9908rrrr        1316         MOV.W   R0,#SOF( _AudioControl )
0003FE 8A00            1317         MOV.W   R0,[R0]
000400 99060010        1318         OR.W    R0,#010H
000404 964842rr        1319         MOV.B   ES,#SEG( _AudioControl )
000408 9918rrrr        1320         MOV.W   R1,#SOF( _AudioControl )
00040C 8A09            1321         MOV.W   [R1],R0
00040C 8A09            1321         MOV.W   [R1],R0
00040E                 1322 _27:
                       1323 ; audio.c   323 
                       1324 ; audio.c   324         AudioControlPort = AudioControl;        // Select output mode. The output
                             selection
00040E 964842rr        1326         MOV.B   ES,#SEG( _AudioControl )
000412 9908rrrr        1327         MOV.W   R0,#SOF( _AudioControl )
000416 8A00            1328         MOV.W   R0,[R0]
000418 96484207        1329         MOV.B   ES,#SEG( _AudioControlPort )
00041C 99180006        1330         MOV.W   R1,#SOF( _AudioControlPort )
000420 8A09            1331         MOV.W   [R1],R0
                       1332 ; audio.c   325                                                                                  
                                                                                            //  requires the generation of a 
                            50ms pulse.
                       1333 ; audio.c   326 
                       1334 ; audio.c   327         Sleep( 50);                                                              
                                                            // Sleep for 50 ms
000422 99080032        1336         MOV.W   R0,#032H
                       1337         CALL    _Sleep
000426 C4rrrrrr       +1337 ;       FCALL   _Sleep
                       1338 ; audio.c   328 
                       1339 ; audio.c   329         AudioControl &= ~( SELANALOG + SELAESEBU);      // End of 50ms pulse
00042A 964842rr        1341         MOV.B   ES,#SEG( _AudioControl )
00042E 9908rrrr        1342         MOV.W   R0,#SOF( _AudioControl )
000432 8A00            1343         MOV.W   R0,[R0]
000434 9905FFCF        1344         AND.W   R0,#0FFCFH
000438 964842rr        1345         MOV.B   ES,#SEG( _AudioControl )
00043C 9918rrrr        1346         MOV.W   R1,#SOF( _AudioControl )
000440 8A09            1347         MOV.W   [R1],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
                       1348 ; audio.c   330 
                       1349 ; audio.c   331                                                                                  
                                                                                                            // Update output 
                            variable and LEDs
                       1350 ; audio.c   332         LEDSet( AnalogAudioLED, output == AnalogAudio);
000442 99080100        1352         MOV.W   R0,#0100H
000446 6944            1353         OR.W    R4,R4
000448 F202            1354         BNE     _28
00044A B911            1355         MOVS.W  R1,#01H
00044C FE01            1356         BR      _29
00044C FE01            1356         BR      _29
00044E                 1357 _28:
00044E B910            1358         MOVS.W  R1,#00H
00044E B910            1358         MOVS.W  R1,#00H
000450                 1359 _29:
                       1360         CALL    _LEDSet
000450 C4rrrrrr       +1360 ;       FCALL   _LEDSet
                       1361 ; audio.c   333         LEDSet( AESEBUAudioLED, output == AESEBUAudio);
000454 99080200        1363         MOV.W   R0,#0200H
000458 99440001        1364         CMP.W   R4,#01H
00045C F202            1365         BNE     _30
00045E B911            1366         MOVS.W  R1,#01H
000460 FE01            1367         BR      _32
000460 FE01            1367         BR      _32
000462                 1368 _30:
000462 B910            1369         MOVS.W  R1,#00H
000462 B910            1369         MOVS.W  R1,#00H
000464                 1370 _32:
                       1371         CALL    _LEDSet
000464 C4rrrrrr       +1371 ;       FCALL   _LEDSet
                       1372 ; audio.c   334 
                       1373 ; audio.c   335         SetAudioSystem( output, AudioSetup[output].System);
000468 9908000E        1375         MOV.W   R0,#0EH
00046C E404            1376         MULU.W  R0,R4
00046E 8960            1377         MOV.W   R6,R0
000470 8906            1378         MOV.W   R0,R6
000472 B910            1379         MOVS.W  R1,#00H
000474 964842rr        1380         MOV.B   ES,#SEG( _AudioSetup )
000478 8D10rrrr        1381         MOV.W   R1,[R0+SOF( _AudioSetup )]
00047C 8A4F            1382         MOV.W   [R7],R4
00047E 8904            1383         MOV.W   R0,R4
000480 C5002C          1388         CALL    _SetAudioSystem
                       1391 ; audio.c   336         SetAudioSignal( output, AudioSetup[output].Signal);
000483 8946            1393         MOV.W   R4,R6
000485 B950            1394         MOVS.W  R5,#00H
000487 964842rr        1395         MOV.B   ES,#SEG( _AudioSetup+2 )
00048B 8D14rrrr        1396         MOV.W   R1,[R4+SOF( _AudioSetup+2 )]
00048F 8A07            1397         MOV.W   R0,[R7]
000491 C50070          1400         CALL    _SetAudioSignal
                       1403 ; audio.c   337         SetAudioLevel( output, AudioSetup[output].Level);
000494 964842rr        1405         MOV.B   ES,#SEG( _AudioSetup+4 )
000498 8D14rrrr        1406         MOV.W   R1,[R4+SOF( _AudioSetup+4 )]
00049C 8A07            1407         MOV.W   R0,[R7]
00049E C500BD          1410         CALL    _SetAudioLevel
                       1413 ; audio.c   338         SetAudioTiming( output, AudioSetup[output].Timing);
0004A1 8926            1415         MOV.W   R2,R6
0004A3 B930            1416         MOVS.W  R3,#00H
0004A5 964842rr        1417         MOV.B   ES,#SEG( _AudioSetup+6 )
0004A9 8D32rrrr        1418         MOV.W   R3,[R2+SOF( _AudioSetup+8 )]
0004AD 8D22rrrr        1419         MOV.W   R2,[R2+SOF( _AudioSetup+6 )]
0004B1 8A07            1420         MOV.W   R0,[R7]
0004B3 C50101          1423         CALL    _SetAudioTiming
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
                       1426 ; audio.c   339         SetAudioWordClock( output, AudioSetup[output].Frequency);
0004B6 964842rr        1428         MOV.B   ES,#SEG( _AudioSetup+10 )
0004BA 8D14rrrr        1429         MOV.W   R1,[R4+SOF( _AudioSetup+10 )]
0004BE 8A07            1430         MOV.W   R0,[R7]
0004C0 C5018F          1433         CALL    _SetAudioWordClock
                       1436 ; audio.c   340         SetAudioClick( output, AudioSetup[output].Click);
0004C3 964842rr        1438         MOV.B   ES,#SEG( _AudioSetup+12 )
0004C7 8D14rrrr        1439         MOV.W   R1,[R4+SOF( _AudioSetup+12 )]
0004CB 8A07            1440         MOV.W   R0,[R7]
0004CD C501F6          1441         CALL    _SetAudioClick
                       1445 ; audio.c   341 
                       1446 ; audio.c   342         return( OK);
0004D0 9908FFFF        1448         MOV.W   R0,#0FFFFH
                       1449 ; audio.c   343 }
0004D4 A972            1451         ADDS.W  R7,#02H
0004D6 2F70            1453         POP.W   R4, R5, R6
0004D8 D680            1455         RET
                       1457 ; audio.c   344 
                       1458 ; audio.c   345 /**************************************************************************/
                       1459 ; audio.c   346 /* SetAudioSystem                                                                
                                                                                                                             
                                                              AUDIO.C */
                       1460 ; audio.c   347 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1461 ; audio.c   348 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1462 ; audio.c   349 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       1463 ; audio.c   350 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1464 ; audio.c   351 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1465 ; audio.c   352 /* Remarks:      Only possible if the selected audio output is AES/EBU           
                                            */
                       1466 ; audio.c   353 /* Returns:      FAIL if the selected output is different from AES/EBU,          
                                            */
                       1467 ; audio.c   354 /*                                       otherwise is returns OK.                
                                                                                                                             
                                                                    */
                       1468 ; audio.c   355 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1469 ; audio.c   356 /**************************************************************************/
                       1470 ; audio.c   357 int SetAudioSystem( int output, int system)
                       1471 ; audio.c   358 {
                       1472         ALIGN   1
                       1474         PUBLIC  _SetAudioSystem
0004DA                 1475 _SetAudioSystem:
0004DA 0F70            1479         PUSH.W  R4, R5, R6
0004DC A97E            1481         ADDS.W  R7,#0EH
0004DE 8921            1485         MOV.W   R2,R1
                       1492 ; audio.c   359         int tmp = AudioControl;
0004E0 964842rr        1494         MOV.B   ES,#SEG( _AudioControl )
0004E4 9948rrrr        1495         MOV.W   R4,#SOF( _AudioControl )
0004E8 8A44            1496         MOV.W   R4,[R4]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
0004EA 8954            1497         MOV.W   R5,R4
                       1499 ; audio.c   360 
                       1500 ; audio.c   361         if ( output != AESEBUAudio)
0004EC 8960            1502         MOV.W   R6,R0
0004EE 99640001        1503         CMP.W   R6,#01H
0004F2 F302            1506         BEQ     _33
                       1507 ; audio.c   362                 return( FAIL);
0004F4 B900            1509         MOV.W   R0,#00H
0004F6 FE3B            1510         BR      _37
0004F6 FE3B            1510         BR      _37
0004F8                 1511 _33:
                       1518 ; audio.c   363 
                       1519 ; audio.c   364         Settings.ActivePreset = 0;
0004F8 964842rr        1521         MOV.B   ES,#SEG( _Settings )
0004FC 9908rrrr        1522         MOV.W   R0,#SOF( _Settings )
000500 BA00            1523         MOV.W   [R0],#00H
                       1524 ; audio.c   365 
                       1525 ; audio.c   366         Settings.AudioSetup[output].System = AudioSetup[output].System = system;
000502 9908000E        1527         MOV.W   R0,#0EH
000506 E406            1528         MULU.W  R0,R6
000508 B910            1529         MOVS.W  R1,#00H
00050A 964842rr        1530         MOV.B   ES,#SEG( _AudioSetup )
00050E 8D28rrrr        1531         MOV.W   [R0+SOF( _AudioSetup )],R2
000512 8A2F            1532         MOV.W   [R7],R2
000514 964842rr        1533         MOV.B   ES,#SEG( _Settings+46 )
000518 8D28rrrr        1534         MOV.W   [R0+SOF( _Settings+46 )],R2
                       1537 ; audio.c   367         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
00051C 9918rrrr        1539         MOV.W   R1,#SEG( _Settings )
000520 9908rrrr        1540         MOV.W   R0,#SOF( _Settings )
000524 964842rr        1541         MOV.B   ES,#SEG( _SettingsPtr )
000528 9928rrrr        1542         MOV.W   R2,#SOF( _SettingsPtr )
00052C 8A22            1543         MOV.W   R2,[R2]
00052E 9938004A        1544         MOV.W   R3,#04AH
                       1545         CALL    _NV_Store
000532 C4rrrrrr       +1545 ;       FCALL   _NV_Store
                       1546 ; audio.c   368 
                       1547 ; audio.c   369         if ( system == AudioPAL)
000536 8A07            1549         MOV.W   R0,[R7]
000538 F204            1552         BNE     _34
                       1553 ; audio.c   370                 tmp &= ~NTSCPHASE;
00053A 9945FFBF        1555         AND.W   R4,#0FFBFH
00053E 8904            1556         MOV.W   R0,R4
000540 FE03            1560         BR      _35
000540 FE03            1560         BR      _35
000542                 1561 _34:
                       1564 ; audio.c   371         else
                       1565 ; audio.c   372                 tmp |= NTSCPHASE;
000542 8905            1567         MOV.W   R0,R5
000544 99060040        1568         OR.W    R0,#040H
000548                 1573 _35:
                       1574 ; audio.c   373 
                       1575 ; audio.c   374         if ( output == AudioOutput)
000548 964842rr        1577         MOV.B   ES,#SEG( _AudioOutput )
00054C 9918rrrr        1578         MOV.W   R1,#SOF( _AudioOutput )
000550 8A11            1579         MOV.W   R1,[R1]
000552 4961            1580         CMP.W   R6,R1
000554 F20A            1581         BNE     _36
                       1582 ; audio.c   375         {
                       1583 ; audio.c   376                 AudioControl = tmp;
000556 964842rr        1585         MOV.B   ES,#SEG( _AudioControl )
00055A 9918rrrr        1586         MOV.W   R1,#SOF( _AudioControl )
00055E 8A09            1587         MOV.W   [R1],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
                       1588 ; audio.c   377                 AudioControlPort = AudioControl;
000560 96484207        1590         MOV.B   ES,#SEG( _AudioControlPort )
000564 99180006        1591         MOV.W   R1,#SOF( _AudioControlPort )
000568 8A09            1592         MOV.W   [R1],R0
                       1593 ; audio.c   378         }
00056A                 1595 _36:
                       1596 ; audio.c   379 
                       1597 ; audio.c   380         return( OK);
00056A 9908FFFF        1599         MOV.W   R0,#0FFFFH
                       1601 ; audio.c   381 }
00056E                 1603 _37:
00056E A972            1604         ADDS.W  R7,#02H
000570 2F70            1606         POP.W   R4, R5, R6
000572 D680            1608         RET
                       1611 ; audio.c   382 
                       1612 ; audio.c   383 /**************************************************************************/
                       1613 ; audio.c   384 /* SetAudioSignal                                                                
                                                                                                                             
                                                              AUDIO.C */
                       1614 ; audio.c   385 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1615 ; audio.c   386 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1616 ; audio.c   387 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       1617 ; audio.c   388 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1618 ; audio.c   389 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1619 ; audio.c   390 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1620 ; audio.c   391 /* Returns:      FAIL if signal is not valid, otherwise OK.                      
                                                                                    */
                       1621 ; audio.c   392 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1622 ; audio.c   393 /**************************************************************************/
                       1623 ; audio.c   394 int SetAudioSignal( int output, int signal)
                       1624 ; audio.c   395 {
                       1625         ALIGN   1
                       1627         PUBLIC  _SetAudioSignal
000574                 1628 _SetAudioSignal:
000574 0F70            1632         PUSH.W  R4, R5, R6
000576 A97E            1634         ADDS.W  R7,#0EH
000578 8920            1638         MOV.W   R2,R0
                       1645 ; audio.c   396         int tmp;
                       1646 ; audio.c   397 
                       1647 ; audio.c   398         if ( signal > S8kHz)
00057A 8961            1649         MOV.W   R6,R1
00057C 99640003        1650         CMP.W   R6,#03H
000580 FD02            1653         BLE     _40
                       1654 ; audio.c   399                 return( FAIL);
000582 B900            1656         MOV.W   R0,#00H
000584 FE47            1657         BR      _46
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
000584 FE47            1657         BR      _46
000586                 1658 _40:
                       1663 ; audio.c   400 
                       1664 ; audio.c   401         Settings.ActivePreset = 0;
000586 964842rr        1666         MOV.B   ES,#SEG( _Settings )
00058A 9908rrrr        1667         MOV.W   R0,#SOF( _Settings )
00058E BA00            1668         MOV.W   [R0],#00H
                       1669 ; audio.c   402 
                       1670 ; audio.c   403         Settings.AudioSetup[output].Signal = AudioSetup[output].Signal = signal;
000590 9948000E        1672         MOV.W   R4,#0EH
000594 8A2F            1673         MOV.W   [R7],R2
000596 E442            1674         MULU.W  R4,R2
000598 B950            1677         MOVS.W  R5,#00H
00059A 964842rr        1678         MOV.B   ES,#SEG( _AudioSetup+2 )
00059E 8D6Crrrr        1679         MOV.W   [R4+SOF( _AudioSetup+2 )],R6
0005A2 964842rr        1680         MOV.B   ES,#SEG( _Settings+48 )
0005A6 8D6Crrrr        1681         MOV.W   [R4+SOF( _Settings+48 )],R6
                       1682 ; audio.c   404         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
0005AA 9918rrrr        1684         MOV.W   R1,#SEG( _Settings )
0005AE 9908rrrr        1685         MOV.W   R0,#SOF( _Settings )
0005B2 964842rr        1686         MOV.B   ES,#SEG( _SettingsPtr )
0005B6 9928rrrr        1687         MOV.W   R2,#SOF( _SettingsPtr )
0005BA 8A22            1688         MOV.W   R2,[R2]
0005BC 9938004A        1689         MOV.W   R3,#04AH
                       1690         CALL    _NV_Store
0005C0 C4rrrrrr       +1690 ;       FCALL   _NV_Store
                       1691 ; audio.c   405 
                       1692 ; audio.c   406         if ( output == AnalogAudio)
0005C4 8A07            1694         MOV.W   R0,[R7]
0005C6 F203            1695         BNE     _41
                       1696 ; audio.c   407                 tmp = ANALOGAUDIOOFFSET;                                // Analog
                             signal offset
0005C8 99080008        1698         MOV.W   R0,#08H
0005CC FE08            1700         BR      _44
0005CC FE08            1700         BR      _44
0005CE                 1701 _41:
                       1702 ; audio.c   408         else
                       1703 ; audio.c   409         {
                       1704 ; audio.c   410                 if ( AudioSetup[output].Frequency == f441kHz)
0005CE 964842rr        1706         MOV.B   ES,#SEG( _AudioSetup+10 )
0005D2 8D04rrrr        1707         MOV.W   R0,[R4+SOF( _AudioSetup+10 )]
0005D6 F202            1709         BNE     _42
                       1710 ; audio.c   411                         tmp = AESEBUF441KHZOFFSET;              // AESEBU 44.1kHz
                             signal offset
0005D8 B904            1712         MOV.W   R0,#04H
0005DA FE01            1714         BR      _44
0005DA FE01            1714         BR      _44
0005DC                 1715 _42:
                       1716 ; audio.c   412                 else
                       1717 ; audio.c   413                         tmp = AESEBUF48KHZOFFSET;                       // AESEBU
                             48kHz signal offset
0005DC B900            1719         MOV.W   R0,#00H
                       1722 ; audio.c   414         }
0005DE                 1724 _44:
                       1725 ; audio.c   415 
                       1726 ; audio.c   416         tmp += signal;
0005DE 0906            1728         ADD.W   R0,R6
                       1731 ; audio.c   417         tmp += CLICKPERIOD*AudioSetup[output].Click;
0005E0 964842rr        1733         MOV.B   ES,#SEG( _AudioSetup+12 )
0005E4 8D14rrrr        1734         MOV.W   R1,[R4+SOF( _AudioSetup+12 )]
0005E8 D918            1735         ASL.W   R1,#08H
0005EA 0901            1736         ADD.W   R0,R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
                       1739 ; audio.c   418 
                       1740 ; audio.c   419         if ( output == AudioOutput)
0005EC 964842rr        1742         MOV.B   ES,#SEG( _AudioOutput )
0005F0 9918rrrr        1743         MOV.W   R1,#SOF( _AudioOutput )
0005F4 8A11            1744         MOV.W   R1,[R1]
0005F6 8A27            1745         MOV.W   R2,[R7]
0005F8 4921            1746         CMP.W   R2,R1
0005FA F20A            1749         BNE     _45
                       1750 ; audio.c   420         {
                       1751 ; audio.c   421                 AudioMode = tmp;
0005FC 964842rr        1753         MOV.B   ES,#SEG( _AudioMode )
000600 9918rrrr        1754         MOV.W   R1,#SOF( _AudioMode )
000604 8A09            1755         MOV.W   [R1],R0
                       1756 ; audio.c   422                 AudioModePort = AudioMode;
000606 96484207        1758         MOV.B   ES,#SEG( _AudioModePort )
00060A 99180000        1759         MOV.W   R1,#SOF( _AudioModePort )
00060E 8A09            1760         MOV.W   [R1],R0
                       1761 ; audio.c   423         }
000610                 1763 _45:
                       1764 ; audio.c   424 
                       1765 ; audio.c   425         return( OK);
000610 9908FFFF        1767         MOV.W   R0,#0FFFFH
                       1769 ; audio.c   426 }
000614                 1771 _46:
000614 A972            1772         ADDS.W  R7,#02H
000616 2F70            1774         POP.W   R4, R5, R6
000618 D680            1776         RET
                       1780 ; audio.c   427 
                       1781 ; audio.c   428 /**************************************************************************/
                       1782 ; audio.c   429 /* SetAudioLevel                                                                 
                                                                                                                             
                                                              AUDIO.C */
                       1783 ; audio.c   430 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1784 ; audio.c   431 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1785 ; audio.c   432 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       1786 ; audio.c   433 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1787 ; audio.c   434 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1788 ; audio.c   435 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1789 ; audio.c   436 /* Returns:      FAIL if level is invalid, otherwise it returns OK.              
                                                            */
                       1790 ; audio.c   437 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1791 ; audio.c   438 /**************************************************************************/
                       1792 ; audio.c   439 int SetAudioLevel( int output, int level)
                       1793 ; audio.c   440 {
                       1794         ALIGN   1
                       1796         PUBLIC  _SetAudioLevel
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
00061A                 1797 _SetAudioLevel:
00061A 0F30            1801         PUSH.W  R4, R5
00061C 8951            1805         MOV.W   R5,R1
                       1810 ; audio.c   441         if ( output == AESEBUAudio)
00061E 8940            1812         MOV.W   R4,R0
000620 99440001        1813         CMP.W   R4,#01H
000624 F205            1816         BNE     _49
                       1817 ; audio.c   442         {
                       1818 ; audio.c   443                 if ( level > AESEBUSilence)
000626 99540007        1820         CMP.W   R5,#07H
00062A FD07            1821         BLE     _51
                       1822 ; audio.c   444                         return( FAIL);
00062C B900            1824         MOV.W   R0,#00H
00062E FE42            1825         BR      _54
                       1826 ; audio.c   445         }
000630                 1828 _49:
                       1833 ; audio.c   446         else
                       1834 ; audio.c   447         {
                       1835 ; audio.c   448                 if ( level > AnalogSilence)
000630 9954001F        1837         CMP.W   R5,#01FH
000634 FD02            1838         BLE     _51
                       1839 ; audio.c   449                         return( FAIL);
000636 B900            1841         MOV.W   R0,#00H
000638 FE3D            1842         BR      _54
                       1843 ; audio.c   450         }
00063A                 1845 _51:
                       1850 ; audio.c   451 
                       1851 ; audio.c   452         Settings.ActivePreset = 0;
00063A 964842rr        1853         MOV.B   ES,#SEG( _Settings )
00063E 9908rrrr        1854         MOV.W   R0,#SOF( _Settings )
000642 BA00            1855         MOV.W   [R0],#00H
                       1856 ; audio.c   453 
                       1857 ; audio.c   454         Settings.AudioSetup[output].Level = AudioSetup[output].Level = level;
000644 9908000E        1859         MOV.W   R0,#0EH
000648 E404            1860         MULU.W  R0,R4
00064A B910            1861         MOVS.W  R1,#00H
00064C 964842rr        1862         MOV.B   ES,#SEG( _AudioSetup+4 )
000650 8D58rrrr        1863         MOV.W   [R0+SOF( _AudioSetup+4 )],R5
000654 964842rr        1864         MOV.B   ES,#SEG( _Settings+50 )
000658 8D58rrrr        1865         MOV.W   [R0+SOF( _Settings+50 )],R5
                       1866 ; audio.c   455         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
00065C 9918rrrr        1868         MOV.W   R1,#SEG( _Settings )
000660 9908rrrr        1869         MOV.W   R0,#SOF( _Settings )
000664 964842rr        1870         MOV.B   ES,#SEG( _SettingsPtr )
000668 9928rrrr        1871         MOV.W   R2,#SOF( _SettingsPtr )
00066C 8A22            1872         MOV.W   R2,[R2]
00066E 9938004A        1873         MOV.W   R3,#04AH
                       1874         CALL    _NV_Store
000672 C4rrrrrr       +1874 ;       FCALL   _NV_Store
                       1875 ; audio.c   456 
                       1876 ; audio.c   457         if ( output == AudioOutput)
000676 964842rr        1878         MOV.B   ES,#SEG( _AudioOutput )
00067A 9908rrrr        1879         MOV.W   R0,#SOF( _AudioOutput )
00067E 8A00            1880         MOV.W   R0,[R0]
000680 4940            1881         CMP.W   R4,R0
000682 F216            1882         BNE     _52
                       1883 ; audio.c   458         {
                       1884 ; audio.c   459                 AudioLevel &= ~AUDIOLEVEL;
000684 964842rr        1886         MOV.B   ES,#SEG( _AudioLevel )
000688 9908rrrr        1887         MOV.W   R0,#SOF( _AudioLevel )
00068C 8A00            1888         MOV.W   R0,[R0]
00068E 9905FFFF        1889         AND.W   R0,#0FFFFH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
000692 964842rr        1890         MOV.B   ES,#SEG( _AudioLevel )
000696 9918rrrr        1891         MOV.W   R1,#SOF( _AudioLevel )
00069A 8A09            1892         MOV.W   [R1],R0
                       1893 ; audio.c   460                 AudioLevel = level;
00069C 964842rr        1895         MOV.B   ES,#SEG( _AudioLevel )
0006A0 9908rrrr        1896         MOV.W   R0,#SOF( _AudioLevel )
0006A4 8A58            1897         MOV.W   [R0],R5
                       1898 ; audio.c   461                 AudioLevelPort = AudioLevel;
0006A6 96484207        1900         MOV.B   ES,#SEG( _AudioLevelPort )
0006AA 99080002        1901         MOV.W   R0,#SOF( _AudioLevelPort )
0006AE 8A58            1902         MOV.W   [R0],R5
                       1903 ; audio.c   462         }
0006B0                 1905 _52:
                       1906 ; audio.c   463 
                       1907 ; audio.c   464         return( OK);
0006B0 9908FFFF        1909         MOV.W   R0,#0FFFFH
                       1910 ; audio.c   465 }
0006B4                 1912 _54:
0006B4 2F30            1913         POP.W   R4, R5
0006B6 D680            1915         RET
                       1919 ; audio.c   466 
                       1920 ; audio.c   467 /**************************************************************************/
                       1921 ; audio.c   468 /* SetAudioTiming                                                                
                                                                                                                             
                                                              AUDIO.C */
                       1922 ; audio.c   469 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1923 ; audio.c   470 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       1924 ; audio.c   471 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       1925 ; audio.c   472 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       1926 ; audio.c   473 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       1927 ; audio.c   474 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       1928 ; audio.c   475 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                       1929 ; audio.c   476 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       1930 ; audio.c   477 /**************************************************************************/
                       1931 ; audio.c   478 int SetAudioTiming( int output, float timing)
                       1932 ; audio.c   479 {
                       1933         ALIGN   1
                       1935         PUBLIC  _SetAudioTiming
0006B8                 1936 _SetAudioTiming:
0006B8 0F70            1940         PUSH.W  R4, R5, R6
0006BA 99720014        1942         SUB.W   R7,#014H
                       1950 ; audio.c   480         int tmp;
                       1951 ; audio.c   481 
                       1952 ; audio.c   482         Settings.ActivePreset = 0;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
0006BE 964842rr        1954         MOV.B   ES,#SEG( _Settings )
0006C2 9918rrrr        1955         MOV.W   R1,#SOF( _Settings )
0006C6 BA10            1956         MOV.W   [R1],#00H
                       1957 ; audio.c   483 
                       1958 ; audio.c   484         Settings.AudioSetup[output].Timing = AudioSetup[output].Timing = timing;
0006C8 8940            1960         MOV.W   R4,R0
0006CA 9908000E        1961         MOV.W   R0,#0EH
0006CE E404            1962         MULU.W  R0,R4
0006D0 B910            1964         MOVS.W  R1,#00H
0006D2 964842rr        1965         MOV.B   ES,#SEG( _AudioSetup+6 )
0006D6 8D28rrrr        1966         MOV.W   [R0+SOF( _AudioSetup+6 )],R2
0006DA 8D38rrrr        1967         MOV.W   [R0+SOF( _AudioSetup+8 )],R3
0006DE 8C3F12          1968         MOV.W   [R7+18],R3
0006E1 8C2F10          1969         MOV.W   [R7+16],R2
0006E4 964842rr        1970         MOV.B   ES,#SEG( _Settings+52 )
0006E8 8D28rrrr        1971         MOV.W   [R0+SOF( _Settings+52 )],R2
0006EC 8D38rrrr        1972         MOV.W   [R0+SOF( _Settings+54 )],R3
                       1975 ; audio.c   485         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
0006F0 9918rrrr        1977         MOV.W   R1,#SEG( _Settings )
0006F4 9908rrrr        1978         MOV.W   R0,#SOF( _Settings )
0006F8 964842rr        1979         MOV.B   ES,#SEG( _SettingsPtr )
0006FC 9928rrrr        1980         MOV.W   R2,#SOF( _SettingsPtr )
000700 8A22            1981         MOV.W   R2,[R2]
000702 9938004A        1982         MOV.W   R3,#04AH
                       1983         CALL    _NV_Store
000706 C4rrrrrr       +1983 ;       FCALL   _NV_Store
                       1984 ; audio.c   486 
                       1985 ; audio.c   487         if ( output == AudioOutput)
00070A 964842rr        1987         MOV.B   ES,#SEG( _AudioOutput )
00070E 9908rrrr        1988         MOV.W   R0,#SOF( _AudioOutput )
000712 8A00            1989         MOV.W   R0,[R0]
000714 4940            1990         CMP.W   R4,R0
000716 F25E            1991         BNE     _63
                       1992 ; audio.c   488         {
                       1993 ; audio.c   489                 tmp = (int)(( timing / 0.8) + 0.5 - ( 1*( timing < 0)));
000718 8C1712          1995         MOV.W   R1,[R7+18]
00071B 8C0710          1996         MOV.W   R0,[R7+16]
00071E C4rrrrrr        1997         FCALL   __SPF2DPF
000722 9C780E3FE9      1998         MOV.W   [R7+14],#03FE9H
000727 9C780C9999      1999         MOV.W   [R7+12],#09999H
00072C 9C780A9999      2000         MOV.W   [R7+10],#09999H
000731 9C7808999A      2001         MOV.W   [R7+8],#0999AH
000736 406708          2002         LEA     R6,R7+8
000739 C4rrrrrr        2003         FCALL   __DIV_DPF
00073D 9C780E3FE0      2004         MOV.W   [R7+14],#03FE0H
000742 BC700C          2005         MOV.W   [R7+12],#00H
000745 BC700A          2006         MOV.W   [R7+10],#00H
000748 BC7008          2007         MOV.W   [R7+8],#00H
00074B 406708          2008         LEA     R6,R7+8
00074E C4rrrrrr        2009         FCALL   __ADD_DPF
000752 8C3F06          2010         MOV.W   [R7+6],R3
000755 8C2F04          2011         MOV.W   [R7+4],R2
000758 8C1F02          2012         MOV.W   [R7+2],R1
00075B 8A0F            2013         MOV.W   [R7],R0
00075D B930            2014         MOV.W   R3,#00H
00075F B920            2015         MOV.W   R2,#00H
000761 8C1712          2016         MOV.W   R1,[R7+18]
000764 8C0710          2017         MOV.W   R0,[R7+16]
000767 C4rrrrrr        2018         FCALL   __CMP_SPF
00076B 9104FF          2019         CMP.B   R0L,#0FFH
00076E F206            2022         BNE     _65
000770 B900            2023         MOVS.W  R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
000772 B910            2024         MOVS.W  R1,#00H
000774 B920            2025         MOVS.W  R2,#00H
000776 99383FF0        2026         MOV.W   R3,#03FF0H
00077A FE04            2027         BR      _66
00077A FE04            2027         BR      _66
00077C                 2028 _65:
00077C B900            2029         MOVS.W  R0,#00H
00077E B910            2030         MOVS.W  R1,#00H
000780 B920            2031         MOVS.W  R2,#00H
000782 B930            2032         MOVS.W  R3,#00H
000782 B930            2032         MOVS.W  R3,#00H
000784                 2033 _66:
000784 8967            2035         MOV.W   R6,R7
000786 C4rrrrrr        2036         FCALL   __SUBR_DPF
00078A C4rrrrrr        2037         FCALL   __DPF2S
00078E 8910            2038         MOV.W   R1,R0
                       2040 ; audio.c   490 
                       2041 ; audio.c   491                 if ( tmp < 0)
000790 99040000        2043         CMP.W   R0,#00H
000794 FA03            2044         BGE     _62
                       2045 ; audio.c   492                         tmp += 26;
000796 9900001A        2047         ADD.W   R0,#01AH
00079A 8910            2048         MOV.W   R1,R0
00079C                 2051 _62:
                       2052 ; audio.c   493                                 
                       2053 ; audio.c   494                 AudioTiming = TimingValues[tmp];
00079C 8901            2055         MOV.W   R0,R1
00079E D901            2056         ASL.W   R0,#01H
0007A0 8920            2060         MOV.W   R2,R0
0007A2 B930            2061         MOVS.W  R3,#00H
0007A4 9918rrrr        2062         MOV.W   R1,#SEG( _TimingValues )
0007A8 9908rrrr        2063         MOV.W   R0,#SOF( _TimingValues )
0007AC 0902            2064         ADD.W   R0,R2
0007AE 1913            2065         ADDC.W  R1,R3
0007B0 862C43          2066         MOV.B   CS,R1L
0007B3 8810            2067         MOVC.W  R1,[R0+]
0007B5 964842rr        2068         MOV.B   ES,#SEG( _AudioTiming )
0007B9 9908rrrr        2069         MOV.W   R0,#SOF( _AudioTiming )
0007BD 8A18            2070         MOV.W   [R0],R1
                       2071 ; audio.c   495                 AudioTimingPort = AudioTiming;
0007BF 964842rr        2073         MOV.B   ES,#SEG( _AudioTiming )
0007C3 9908rrrr        2074         MOV.W   R0,#SOF( _AudioTiming )
0007C7 8A00            2075         MOV.W   R0,[R0]
0007C9 96484207        2076         MOV.B   ES,#SEG( _AudioTimingPort )
0007CD 99180004        2077         MOV.W   R1,#SOF( _AudioTimingPort )
0007D1 8A09            2078         MOV.W   [R1],R0
                       2079 ; audio.c   496         }
0007D4                 2081 _63:
                       2082 ; audio.c   497 
                       2083 ; audio.c   498         return( OK);
0007D4 9908FFFF        2085         MOV.W   R0,#0FFFFH
                       2086 ; audio.c   499 }
0007D8 99700014        2088         ADD.W   R7,#014H
0007DC 2F70            2090         POP.W   R4, R5, R6
0007DE D680            2092         RET
                       2094 ; audio.c   500 
                       2095 ; audio.c   501 /**************************************************************************/
                       2096 ; audio.c   502 /* SetAudioWordClock                                                             
                                                                                                                             
                                              AUDIO.C */
                       2097 ; audio.c   503 /*                                                                               
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
                                            */
                       2098 ; audio.c   504 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       2099 ; audio.c   505 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       2100 ; audio.c   506 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       2101 ; audio.c   507 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       2102 ; audio.c   508 /* Remarks:      WordClock and audio mode is integrated. This function is        
                                    */
                       2103 ; audio.c   509 /*                                       only valid for the AES/EBU output.      
                                                                                                                             
                                    */
                       2104 ; audio.c   510 /* Returns:      FAIL if click and is invalid, otherwise it returns OK.          
                                            */
                       2105 ; audio.c   511 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       2106 ; audio.c   512 /**************************************************************************/
                       2107 ; audio.c   513 int SetAudioWordClock( int output, int frequency)
                       2108 ; audio.c   514 {
                       2109         ALIGN   1
                       2111         PUBLIC  _SetAudioWordClock
0007E0                 2112 _SetAudioWordClock:
0007E0 0F70            2116         PUSH.W  R4, R5, R6
0007E2 A97E            2118         ADDS.W  R7,#0EH
0007E4 8921            2122         MOV.W   R2,R1
                       2129 ; audio.c   515         int tmp;
                       2130 ; audio.c   516 
                       2131 ; audio.c   517         if ( output != AESEBUAudio)
0007E6 8960            2133         MOV.W   R6,R0
0007E8 99640001        2134         CMP.W   R6,#01H
0007EC F302            2137         BEQ     _68
                       2138 ; audio.c   518                 return( FAIL);
0007EE B900            2140         MOV.W   R0,#00H
0007F0 FE62            2141         BR      _72
0007F0 FE62            2141         BR      _72
0007F2                 2142 _68:
                       2147 ; audio.c   519 
                       2148 ; audio.c   520         Settings.ActivePreset = 0;
0007F2 964842rr        2150         MOV.B   ES,#SEG( _Settings )
0007F6 9908rrrr        2151         MOV.W   R0,#SOF( _Settings )
0007FA BA00            2152         MOV.W   [R0],#00H
                       2153 ; audio.c   521 
                       2154 ; audio.c   522         Settings.AudioSetup[output].Frequency = AudioSetup[output].Frequency = fr
                            equency;
0007FC 8906            2156         MOV.W   R0,R6
0007FE E900000E        2157         MULU.W  R0,#0EH
000802 8940            2158         MOV.W   R4,R0
000804 B950            2159         MOVS.W  R5,#00H
000806 964842rr        2160         MOV.B   ES,#SEG( _AudioSetup+10 )
00080A 8D2Crrrr        2161         MOV.W   [R4+SOF( _AudioSetup+10 )],R2
00080E 8A2F            2162         MOV.W   [R7],R2
000810 964842rr        2163         MOV.B   ES,#SEG( _Settings+56 )
000814 8D2Crrrr        2164         MOV.W   [R4+SOF( _Settings+56 )],R2
                       2167 ; audio.c   523         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
000818 9918rrrr        2169         MOV.W   R1,#SEG( _Settings )
00081C 9908rrrr        2170         MOV.W   R0,#SOF( _Settings )
000820 964842rr        2171         MOV.B   ES,#SEG( _SettingsPtr )
000824 9928rrrr        2172         MOV.W   R2,#SOF( _SettingsPtr )
000828 8A22            2173         MOV.W   R2,[R2]
00082A 9938004A        2174         MOV.W   R3,#04AH
                       2175         CALL    _NV_Store
00082E C4rrrrrr       +2175 ;       FCALL   _NV_Store
                       2176 ; audio.c   524 
                       2177 ; audio.c   525         if ( frequency == f441kHz)
000832 8A07            2179         MOV.W   R0,[R7]
000834 F202            2180         BNE     _69
                       2181 ; audio.c   526                 tmp = AESEBUF441KHZOFFSET;
000836 B904            2183         MOV.W   R0,#04H
000838 FE01            2185         BR      _70
000838 FE01            2185         BR      _70
00083A                 2186 _69:
                       2187 ; audio.c   527         else
                       2188 ; audio.c   528                 tmp = AESEBUF48KHZOFFSET;
00083A B900            2190         MOV.W   R0,#00H
00083C                 2193 _70:
                       2194 ; audio.c   529 
                       2195 ; audio.c   530         tmp += AudioSetup[output].Signal;
00083C 964842rr        2197         MOV.B   ES,#SEG( _AudioSetup+2 )
000840 0D04rrrr        2198         ADD.W   R0,[R4+SOF( _AudioSetup+2 )]
                       2201 ; audio.c   531         tmp += CLICKPERIOD*AudioSetup[output].Click;
000844 964842rr        2203         MOV.B   ES,#SEG( _AudioSetup+12 )
000848 8D14rrrr        2204         MOV.W   R1,[R4+SOF( _AudioSetup+12 )]
00084C D918            2205         ASL.W   R1,#08H
00084E 0901            2206         ADD.W   R0,R1
                       2209 ; audio.c   532 
                       2210 ; audio.c   533         if ( output == AudioOutput)
000850 964842rr        2212         MOV.B   ES,#SEG( _AudioOutput )
000854 9918rrrr        2213         MOV.W   R1,#SOF( _AudioOutput )
000858 8A11            2214         MOV.W   R1,[R1]
00085A 4961            2215         CMP.W   R6,R1
00085C F21D            2216         BNE     _71
                       2217 ; audio.c   534         {
                       2218 ; audio.c   535                 AudioMode = tmp;
00085E 964842rr        2220         MOV.B   ES,#SEG( _AudioMode )
000862 9918rrrr        2221         MOV.W   R1,#SOF( _AudioMode )
000866 8A09            2222         MOV.W   [R1],R0
                       2223 ; audio.c   536                 AudioModePort = AudioMode;
000868 96484207        2225         MOV.B   ES,#SEG( _AudioModePort )
00086C 99180000        2226         MOV.W   R1,#SOF( _AudioModePort )
000870 8A09            2227         MOV.W   [R1],R0
                       2228 ; audio.c   537 
                       2229 ; audio.c   538                 LEDSet( WordClk441LED, frequency == f441kHz);   
000872 99081000        2231         MOV.W   R0,#01000H
000876 8A17            2233         MOV.W   R1,[R7]
000878 F202            2234         BNE     _75
00087A B911            2235         MOVS.W  R1,#01H
00087C FE01            2236         BR      _76
00087C FE01            2236         BR      _76
00087E                 2237 _75:
00087E B910            2238         MOVS.W  R1,#00H
00087E B910            2238         MOVS.W  R1,#00H
000880                 2239 _76:
                       2240         CALL    _LEDSet
000880 C4rrrrrr       +2240 ;       FCALL   _LEDSet
                       2241 ; audio.c   539                 LEDSet( WordClk48LED, frequency == f48kHz);
000884 99082000        2243         MOV.W   R0,#02000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
000888 9A740001        2244         CMP.W   [R7],#01H
00088C F202            2245         BNE     _77
00088E B911            2246         MOVS.W  R1,#01H
000890 FE01            2247         BR      _79
000890 FE01            2247         BR      _79
000892                 2248 _77:
000892 B910            2249         MOVS.W  R1,#00H
000892 B910            2249         MOVS.W  R1,#00H
000894                 2250 _79:
                       2251         CALL    _LEDSet
000894 C4rrrrrr       +2251 ;       FCALL   _LEDSet
                       2252 ; audio.c   540         }
000898                 2254 _71:
                       2255 ; audio.c   541 
                       2256 ; audio.c   542         AudioSetup[AudioOutput].Frequency = frequency;
000898 964842rr        2258         MOV.B   ES,#SEG( _AudioOutput )
00089C 9908rrrr        2259         MOV.W   R0,#SOF( _AudioOutput )
0008A0 8A00            2260         MOV.W   R0,[R0]
0008A2 E900000E        2261         MULU.W  R0,#0EH
0008A6 B910            2262         MOVS.W  R1,#00H
0008A8 8A27            2263         MOV.W   R2,[R7]
0008AA 964842rr        2264         MOV.B   ES,#SEG( _AudioSetup+10 )
0008AE 8D28rrrr        2265         MOV.W   [R0+SOF( _AudioSetup+10 )],R2
                       2268 ; audio.c   543 
                       2269 ; audio.c   544         return( OK);
0008B2 9908FFFF        2271         MOV.W   R0,#0FFFFH
                       2272 ; audio.c   545 }
0008B6                 2274 _72:
0008B6 A972            2275         ADDS.W  R7,#02H
0008B8 2F70            2277         POP.W   R4, R5, R6
0008BA D680            2279         RET
                       2283 ; audio.c   546 
                       2284 ; audio.c   547 /**************************************************************************/
                       2285 ; audio.c   548 /* SetAudioClick                                                                 
                                                                                                                             
                                                              AUDIO.C */
                       2286 ; audio.c   549 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       2287 ; audio.c   550 /* Author:       Kim Engedahl, DEV, 000402                                       
                                                                                                                             
                                    */
                       2288 ; audio.c   551 /* Revised:      000618, KEn, DEV                                                
                                                                                                                             
                                            */
                       2289 ; audio.c   552 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                       2290 ; audio.c   553 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                       2291 ; audio.c   554 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                       2292 ; audio.c   555 /* Returns:  FAIL if audio output is invalid, otherwise it returns OK.          *
                            /
                       2293 ; audio.c   556 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                       2294 ; audio.c   557 /**************************************************************************/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
                       2295 ; audio.c   558 int SetAudioClick( int output, int click)
                       2296 ; audio.c   559 {
                       2297         ALIGN   1
                       2299         PUBLIC  _SetAudioClick
0008BC                 2300 _SetAudioClick:
0008BC 0F70            2304         PUSH.W  R4, R5, R6
0008BE A97A            2306         ADDS.W  R7,#0AH
0008C0 8921            2310         MOV.W   R2,R1
                       2317 ; audio.c   560         int tmp = AudioSetup[output].Signal;
0008C2 8960            2319         MOV.W   R6,R0
0008C4 9908000E        2320         MOV.W   R0,#0EH
0008C8 E406            2321         MULU.W  R0,R6
0008CA B910            2323         MOVS.W  R1,#00H
0008CC 8C1F02          2324         MOV.W   [R7+2],R1
0008CF 8A0F            2325         MOV.W   [R7],R0
0008D1 964842rr        2326         MOV.B   ES,#SEG( _AudioSetup+2 )
0008D5 8D50rrrr        2327         MOV.W   R5,[R0+SOF( _AudioSetup+2 )]
0008D9 8945            2328         MOV.W   R4,R5
                       2330 ; audio.c   561 
                       2331 ; audio.c   562         if ( output > AESEBUAudio)
0008DB 99640001        2333         CMP.W   R6,#01H
0008DF FD03            2334         BLE     _80
                       2335 ; audio.c   563                 return( FAIL);
0008E1 B900            2337         MOV.W   R0,#00H
0008E3 FE4A            2338         BR      _86
0008E3 FE4A00          2338         BR      _86
0008E6                 2339 _80:
                       2345 ; audio.c   564 
                       2346 ; audio.c   565         Settings.ActivePreset = 0;
0008E6 964842rr        2348         MOV.B   ES,#SEG( _Settings )
0008EA 9908rrrr        2349         MOV.W   R0,#SOF( _Settings )
0008EE BA00            2350         MOV.W   [R0],#00H
                       2351 ; audio.c   566 
                       2352 ; audio.c   567         Settings.AudioSetup[output].Click = AudioSetup[output].Click = click;
0008F0 8C1702          2354         MOV.W   R1,[R7+2]
0008F3 8A07            2355         MOV.W   R0,[R7]
0008F5 964842rr        2356         MOV.B   ES,#SEG( _AudioSetup+12 )
0008F9 8D28rrrr        2357         MOV.W   [R0+SOF( _AudioSetup+12 )],R2
0008FD 8C2F04          2358         MOV.W   [R7+4],R2
000900 8C1702          2359         MOV.W   R1,[R7+2]
000903 8A07            2360         MOV.W   R0,[R7]
000905 964842rr        2361         MOV.B   ES,#SEG( _Settings+58 )
000909 8D28rrrr        2362         MOV.W   [R0+SOF( _Settings+58 )],R2
                       2365 ; audio.c   568         NV_Store( &Settings, SettingsPtr, sizeof( Settings));
00090D 9918rrrr        2367         MOV.W   R1,#SEG( _Settings )
000911 9908rrrr        2368         MOV.W   R0,#SOF( _Settings )
000915 964842rr        2369         MOV.B   ES,#SEG( _SettingsPtr )
000919 9928rrrr        2370         MOV.W   R2,#SOF( _SettingsPtr )
00091D 8A22            2371         MOV.W   R2,[R2]
00091F 9938004A        2372         MOV.W   R3,#04AH
                       2373         CALL    _NV_Store
000923 C4rrrrrr       +2373 ;       FCALL   _NV_Store
                       2374 ; audio.c   569 
                       2375 ; audio.c   570         if ( click == click1s)
000927 8C0704          2377         MOV.W   R0,[R7+4]
00092A 99040001        2378         CMP.W   R0,#01H
00092E F203            2381         BNE     _81
                       2382 ; audio.c   571                 tmp += CLICKPERIOD;
000930 99500100        2384         ADD.W   R5,#0100H
000934 8945            2385         MOV.W   R4,R5
000936                 2388 _81:
                       2389 ; audio.c   572 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
                       2390 ; audio.c   573         if ( output == AnalogAudio)
000936 6966            2392         OR.W    R6,R6
000938 F203            2393         BNE     _82
                       2394 ; audio.c   574                 tmp += ANALOGAUDIOOFFSET;                                       /
                            / Analog signal offset
00093A 99400008        2396         ADD.W   R4,#08H
00093E FE09            2399         BR      _84
00093E FE09            2399         BR      _84
000940                 2400 _82:
                       2401 ; audio.c   575         else
                       2402 ; audio.c   576         {
                       2403 ; audio.c   577                 if ( AudioSetup[output].Frequency == f441kHz)
000940 8C1702          2405         MOV.W   R1,[R7+2]
000943 8A07            2406         MOV.W   R0,[R7]
000945 964842rr        2407         MOV.B   ES,#SEG( _AudioSetup+10 )
000949 8D00rrrr        2408         MOV.W   R0,[R0+SOF( _AudioSetup+10 )]
00094D F202            2410         BNE     _84
                       2411 ; audio.c   578                         tmp += AESEBUF441KHZOFFSET;                     // AESEBU
                             44.1kHz signal offset
00094F A944            2413         ADDS.W  R4,#04H
                       2416 ; audio.c   579                 else
                       2417 ; audio.c   580                         tmp += AESEBUF48KHZOFFSET;                      // AESEBU
                             48kHz signal offset
                       2418 ; audio.c   581         }
000952                 2420 _84:
                       2421 ; audio.c   582 
                       2422 ; audio.c   583         if ( output == AudioOutput)
000952 964842rr        2424         MOV.B   ES,#SEG( _AudioOutput )
000956 9908rrrr        2425         MOV.W   R0,#SOF( _AudioOutput )
00095A 8A00            2426         MOV.W   R0,[R0]
00095C 4960            2427         CMP.W   R6,R0
00095E F20A            2428         BNE     _85
                       2429 ; audio.c   584         {
                       2430 ; audio.c   585                 AudioMode = tmp;
000960 964842rr        2432         MOV.B   ES,#SEG( _AudioMode )
000964 9908rrrr        2433         MOV.W   R0,#SOF( _AudioMode )
000968 8A48            2434         MOV.W   [R0],R4
                       2435 ; audio.c   586                 AudioModePort = AudioMode;
00096A 96484207        2437         MOV.B   ES,#SEG( _AudioModePort )
00096E 99080000        2438         MOV.W   R0,#SOF( _AudioModePort )
000972 8A48            2439         MOV.W   [R0],R4
                       2440 ; audio.c   587         }
000974                 2442 _85:
                       2443 ; audio.c   588 
                       2444 ; audio.c   589         return( OK);
000974 9908FFFF        2446         MOV.W   R0,#0FFFFH
                       2447 ; audio.c   590 }
000978                 2449 _86:
000978 A976            2450         ADDS.W  R7,#06H
00097A 2F70            2452         POP.W   R4, R5, R6
00097C D680            2454         RET
                       2458 ; audio.c   591 
000000                 2462 AUDIO_CLR_FA    SEGMENT HDATA INSEGMENT CLEAR
000000                 2463         RSEG    AUDIO_CLR_FA
                       2464         ALIGN   1
000000                 2465 _AudioControl:  DS      2
   |  RESERVED             
000001
                       2468         PUBLIC  _AudioOutput
                       2469         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  31

ADDR   CODE            LINE SOURCELINE
000002                 2470 _AudioOutput:   DS      2
   |  RESERVED             
000003
                       2471         EXTRN   HCODE(__DIV_DPF)
                       2472         EXTRN   HCODE(__SUBR_DPF)
                       2473         EXTRN   HCODE(__SPF2DPF)
                       2476         EXTRN   HCODE(_LEDSet)
                       2478         ALIGN   1
000004                 2479 _AudioMode:     DS      2
   |  RESERVED             
000005
                       2482         PUBLIC  _AudioSetup
                       2483         ALIGN   1
000006                 2484 _AudioSetup:    DS      28
   |  RESERVED             
000021
                       2486         ALIGN   1
000022                 2487 _AudioTiming:   DS      2
   |  RESERVED             
000023
                       2489         EXTRN   HDATA(_SettingsPtr)
070002                 2492         HSEG AT 070002H
                       2493         PUBLIC  _AudioLevelPort
                       2494         ALIGN   1
070002                 2495 _AudioLevelPort:        DS      2
   |  RESERVED             
070003
                       2497         EXTRN   HDATA(_Settings)
070004                 2500         HSEG AT 070004H
                       2501         PUBLIC  _AudioTimingPort
                       2502         ALIGN   1
070004                 2503 _AudioTimingPort:       DS      2
   |  RESERVED             
070005
                       2504         EXTRN   HCODE(__CMP_SPF)
                       2507         EXTRN   HCODE(_NV_Store)
070006                 2510         HSEG AT 070006H
                       2511         PUBLIC  _AudioControlPort
                       2512         ALIGN   1
070006                 2513 _AudioControlPort:      DS      2
   |  RESERVED             
070007
                       2515         EXTRN   HDATA(_Calibration)
                       2516         EXTRN   HCODE(__ADD_DPF)
070000                 2519         HSEG AT 070000H
                       2520         PUBLIC  _AudioModePort
                       2521         ALIGN   1
070000                 2522 _AudioModePort: DS      2
   |  RESERVED             
070001
000024                 2524         RSEG    AUDIO_CLR_FA
                       2525         ALIGN   1
000024                 2526 _AudioLevel:    DS      2
   |  RESERVED             
000025
                       2529         EXTRN   HCODE(_Sleep)
                       2530         EXTRN   HCODE(__US2SPF)
                       2531         EXTRN   HCODE(__DPF2S)
                       2532         EXTRN   DATA(__lc_ub_xvwbuffer)
                       2533         EXTRN   DATA(__lc_ue_xvwbuffer)
                       2534         CALLS   'WriteAnlAudioDACLevel', 'Write_AD8402'
                       2535         CALLS   'AudioDefaults', 'NV_Store'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  32

ADDR   CODE            LINE SOURCELINE
                       2536         CALLS   'AudioInit', 'WriteAnlAudioDACLevel'
                       2537         CALLS   'AudioInit', 'LEDSet'
                       2538         CALLS   'AudioUpdate', 'SetAudioOutput'
                       2539         CALLS   'SetAudioOutput', 'NV_Store'
                       2540         CALLS   'SetAudioOutput', 'Sleep'
                       2541         CALLS   'SetAudioOutput', 'LEDSet'
                       2542         CALLS   'SetAudioOutput', 'SetAudioSystem'
                       2543         CALLS   'SetAudioOutput', 'SetAudioSignal'
                       2544         CALLS   'SetAudioOutput', 'SetAudioLevel'
                       2545         CALLS   'SetAudioOutput', 'SetAudioTiming'
                       2546         CALLS   'SetAudioOutput', 'SetAudioWordClock'
                       2547         CALLS   'SetAudioOutput', 'SetAudioClick'
                       2548         CALLS   'SetAudioSystem', 'NV_Store'
                       2549         CALLS   'SetAudioSignal', 'NV_Store'
                       2550         CALLS   'SetAudioLevel', 'NV_Store'
                       2551         CALLS   'SetAudioTiming', 'NV_Store'
                       2552         CALLS   'SetAudioWordClock', 'NV_Store'
                       2553         CALLS   'SetAudioWordClock', 'LEDSet'
                       2554         CALLS   'SetAudioClick', 'NV_Store'
