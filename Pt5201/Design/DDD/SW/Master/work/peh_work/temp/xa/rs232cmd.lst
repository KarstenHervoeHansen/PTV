XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
F:\PTV\Pt5201\Design\DDD\SW\Master\work\peh_work\temp\xa\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\cxa\rtxc\xa\include -I. -Ml
                          3 ;          -O2 -s
                          5 $NOZPAGE
                          6         NAME    RS232CMD
                         10 ; rs232cmd.c    1       /* MODULE:                                                               
                               */
                         11 ; rs232cmd.c    2       /*   r232cmd.c - RS232 remote commands.                                  
                                             */
                         12 ; rs232cmd.c    3       /************************************************************************
                            ****/
                         13 ; rs232cmd.c    4       /* FUNCTIONS:                                                            
                               */
                         14 ; rs232cmd.c    5       /*                                                                       
                               */
                         15 ; rs232cmd.c    6       /* TASKS:                                                                
                               */
                         16 ; rs232cmd.c    7       /*                                                                       
                               */
                         17 ; rs232cmd.c    8       /* NOTES:                                                                
                               */
                         18 ; rs232cmd.c    9       /*                                                                       
                               */
                         19 ; rs232cmd.c   10       /************************************************************************
                            ****/
                         20 ; rs232cmd.c   11       /*
                         21 ; rs232cmd.c   12        *   PTV software for PT5201
                         22 ; rs232cmd.c   13        *   Copyright (c) 
                         23 ; rs232cmd.c   14        *   ProTeleVision Technologies A/S.
                         24 ; rs232cmd.c   15        *   ALL RIGHTS RESERVED
                         25 ; rs232cmd.c   16       */
                         26 ; rs232cmd.c   17       /************************************************************************
                            ****/
                         27 ; rs232cmd.c   18       
                         28 ; rs232cmd.c   19       /************************************************************************
                            ****/
                         29 ; rs232cmd.c   20       /* Include files:                                                        
                                                                                                                             
                                     */
                         30 ; rs232cmd.c   21       
                         31 ; rs232cmd.c   22       #include <string.h>
                         35 ; rs232cmd.c   23       #include <ctype.h>
                         38 ; rs232cmd.c   24       #include <stdio.h>
                         58 ; rs232cmd.c   25       #include <stdlib.h>
                         72 ; rs232cmd.c   26       #include <math.h>
                         75 ; rs232cmd.c   27       
                         76 ; rs232cmd.c   28       #include "config.h"
                         79 ; rs232cmd.c   29       #include "define.h"
                         82 ; rs232cmd.c   30       #include "rtxcobj.h"
                        407 ; rs232cmd.c   31       #include "rs232par.h"
                        410 ; rs232cmd.c   32       #include "rs232err.h"
                        413 ; rs232cmd.c   33       #include "rs232cmd.h"
                        418 ; rs232cmd.c   34       #include "util.h"
                        421 ; rs232cmd.c   35       #include "rs232.h"
                        428 ; rs232cmd.c   36       #include "i2c_drv.h"
                        431 ; rs232cmd.c   37       #include "sio0drv.h"
                        438 ; rs232cmd.c   38       #include "instru.h"
                        541 ; rs232cmd.c   39       #include "tables.h"
                        544 ; rs232cmd.c   40       #include "genlock.h"
                        547 ; rs232cmd.c   41       #include "bb.h"
                        550 ; rs232cmd.c   42       #include "cbar.h"
                        553 ; rs232cmd.c   43       #include "audio.h"
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        556 ; rs232cmd.c   44       #include "plddrv.h"
                        559 ; rs232cmd.c   45       #include "unitprg.h"
                        566 ; rs232cmd.c   46       
                        567 ; rs232cmd.c   47       
                        568 ; rs232cmd.c   48       UC code MasterSWVersion                                 = 23;
000000                  569 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                  570         RSEG    RS232CMD_RO
                        573         PUBLIC  _MasterSWVersion
000000                  574 _MasterSWVersion:
                        575 ; rs232cmd.c   49       
                        576 ; rs232cmd.c   50       char code SystemVersionTxt[]                    = "1995.0";
000000 17               577         DB      017H
                        581         PUBLIC  _SystemVersionTxt
000001                  582 _SystemVersionTxt:
                        583 ; rs232cmd.c   51       char code PasswordText[]                                = "PASS5201";
000001 313939352E3000   584         DB      031H,039H,039H,035H,02EH,030H,000H
                        587         PUBLIC  _PasswordText
000008                  588 _PasswordText:
                        589 ; rs232cmd.c   52       
                        590 ; rs232cmd.c   53       char code CLSCmdTxt[]                   = "CLS";
000008 50415353353230   591         DB      050H,041H,053H,053H,035H,032H,030H,031H,000H
       3100                 
                        594         PUBLIC  _CLSCmdTxt
000011                  595 _CLSCmdTxt:
                        596 ; rs232cmd.c   54       char code ESECmdTxt[]                   = "ESE";
000011 434C5300         597         DB      043H,04CH,053H,000H
                        600         PUBLIC  _ESECmdTxt
000015                  601 _ESECmdTxt:
                        602 ; rs232cmd.c   55       char code ESRCmdTxt[]                   = "ESR";
000015 45534500         603         DB      045H,053H,045H,000H
                        606         PUBLIC  _ESRCmdTxt
000019                  607 _ESRCmdTxt:
                        608 ; rs232cmd.c   56       char code OPCCmdTxt[]                   = "OPC";
000019 45535200         609         DB      045H,053H,052H,000H
                        612         PUBLIC  _OPCCmdTxt
00001D                  613 _OPCCmdTxt:
                        614 ; rs232cmd.c   57       char code SRECmdTxt[]                   = "SRE";
00001D 4F504300         615         DB      04FH,050H,043H,000H
                        618         PUBLIC  _SRECmdTxt
000021                  619 _SRECmdTxt:
                        620 ; rs232cmd.c   58       char code STBCmdTxt[]                   = "STB";
000021 53524500         621         DB      053H,052H,045H,000H
                        624         PUBLIC  _STBCmdTxt
000025                  625 _STBCmdTxt:
                        626 ; rs232cmd.c   59       char code TSTCmdTxt[]                   = "TST";
000025 53544200         627         DB      053H,054H,042H,000H
                        630         PUBLIC  _TSTCmdTxt
000029                  631 _TSTCmdTxt:
                        632 ; rs232cmd.c   60       char code WAICmdTxt[]                   = "WAI";
000029 54535400         633         DB      054H,053H,054H,000H
                        636         PUBLIC  _WAICmdTxt
00002D                  637 _WAICmdTxt:
                        638 ; rs232cmd.c   61       char code RSTCmdTxt[]                   = "RST";
00002D 57414900         639         DB      057H,041H,049H,000H
                        642         PUBLIC  _RSTCmdTxt
000031                  643 _RSTCmdTxt:
                        644 ; rs232cmd.c   62       char code IDNCmdTxt[]                   = "IDN";
000031 52535400         645         DB      052H,053H,054H,000H
                        648         PUBLIC  _IDNCmdTxt
000035                  649 _IDNCmdTxt:
                        650 ; rs232cmd.c   63       char code RCLCmdTxt[]                   = "RCL";
000035 49444E00         651         DB      049H,044H,04EH,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        654         PUBLIC  _RCLCmdTxt
000039                  655 _RCLCmdTxt:
                        656 ; rs232cmd.c   64       char code SAVCmdTxt[]                   = "SAV";
000039 52434C00         657         DB      052H,043H,04CH,000H
                        660         PUBLIC  _SAVCmdTxt
00003D                  661 _SAVCmdTxt:
                        662 ; rs232cmd.c   65       
                        663 ; rs232cmd.c   66       char code SYSTEMCmdTxt[]                        = "SYSTEM";
00003D 53415600         664         DB      053H,041H,056H,000H
                        667         PUBLIC  _SYSTEMCmdTxt
000041                  668 _SYSTEMCmdTxt:
                        669 ; rs232cmd.c   67       char code SYSTCmdTxt[]                          = "SYST";
000041 53595354454D00   670         DB      053H,059H,053H,054H,045H,04DH,000H
                        673         PUBLIC  _SYSTCmdTxt
000048                  674 _SYSTCmdTxt:
                        675 ; rs232cmd.c   68       char code STATUSCmdTxt[]                                = "STATUS";
000048 5359535400       676         DB      053H,059H,053H,054H,000H
                        679         PUBLIC  _STATUSCmdTxt
00004D                  680 _STATUSCmdTxt:
                        681 ; rs232cmd.c   69       char code STATCmdTxt[]                                  = "STAT";
00004D 53544154555300   682         DB      053H,054H,041H,054H,055H,053H,000H
                        685         PUBLIC  _STATCmdTxt
000054                  686 _STATCmdTxt:
                        687 ; rs232cmd.c   70       char code DIAGNOSTICCmdTxt[]                    = "DIAGNOSTIC";
000054 5354415400       688         DB      053H,054H,041H,054H,000H
                        691         PUBLIC  _DIAGNOSTICCmdTxt
000059                  692 _DIAGNOSTICCmdTxt:
                        693 ; rs232cmd.c   71       char code DIAGCmdTxt[]                          = "DIAG";
000059 444941474E4F53   694         DB      044H,049H,041H,047H,04EH,04FH,053H,054H,049H,043H,000H
       54494300             
                        697         PUBLIC  _DIAGCmdTxt
000064                  698 _DIAGCmdTxt:
                        699 ; rs232cmd.c   72       char code MONITORCmdTxt[]                               = "MONITOR";
000064 4449414700       700         DB      044H,049H,041H,047H,000H
                        703         PUBLIC  _MONITORCmdTxt
000069                  704 _MONITORCmdTxt:
                        705 ; rs232cmd.c   73       char code MONCmdTxt[]                           = "MON";
000069 4D4F4E49544F52   706         DB      04DH,04FH,04EH,049H,054H,04FH,052H,000H
       00                   
                        709         PUBLIC  _MONCmdTxt
000071                  710 _MONCmdTxt:
                        711 ; rs232cmd.c   74       char code INPUTCmdTxt[]                                 = "INPUT";
000071 4D4F4E00         712         DB      04DH,04FH,04EH,000H
                        715         PUBLIC  _INPUTCmdTxt
000075                  716 _INPUTCmdTxt:
                        717 ; rs232cmd.c   75       char code INPCmdTxt[]                                   = "INP";
000075 494E50555400     718         DB      049H,04EH,050H,055H,054H,000H
                        721         PUBLIC  _INPCmdTxt
00007B                  722 _INPCmdTxt:
                        723 ; rs232cmd.c   76       char code OUTPUTCmdTxt[]                                = "OUTPUT";
00007B 494E5000         724         DB      049H,04EH,050H,000H
                        727         PUBLIC  _OUTPUTCmdTxt
00007F                  728 _OUTPUTCmdTxt:
                        729 ; rs232cmd.c   77       char code OUTPCmdTxt[]                                  = "OUTP";
00007F 4F555450555400   730         DB      04FH,055H,054H,050H,055H,054H,000H
                        733         PUBLIC  _OUTPCmdTxt
000086                  734 _OUTPCmdTxt:
                        735 ; rs232cmd.c   78       char code USERCmdTxt[]                                  = "USER";
000086 4F55545000       736         DB      04FH,055H,054H,050H,000H
                        739         PUBLIC  _USERCmdTxt
00008B                  740 _USERCmdTxt:
                        741 ; rs232cmd.c   79       char code MEASURECmdTxt[]                               = "MEASURE";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00008B 5553455200       742         DB      055H,053H,045H,052H,000H
                        745         PUBLIC  _MEASURECmdTxt
000090                  746 _MEASURECmdTxt:
                        747 ; rs232cmd.c   80       char code MEASCmdTxt[]                          = "MEAS";
000090 4D454153555245   748         DB      04DH,045H,041H,053H,055H,052H,045H,000H
       00                   
                        751         PUBLIC  _MEASCmdTxt
000098                  752 _MEASCmdTxt:
                        753 ; rs232cmd.c   81       char code FACTORYCmdTxt[]                               = "FACTORY";
000098 4D45415300       754         DB      04DH,045H,041H,053H,000H
                        757         PUBLIC  _FACTORYCmdTxt
00009D                  758 _FACTORYCmdTxt:
                        759 ; rs232cmd.c   82       char code FACTCmdTxt[]                          = "FACT";
00009D 464143544F5259   760         DB      046H,041H,043H,054H,04FH,052H,059H,000H
       00                   
                        763         PUBLIC  _FACTCmdTxt
0000A5                  764 _FACTCmdTxt:
                        765 ; rs232cmd.c   83       
                        766 ; rs232cmd.c   84       char code ERRORCmdTxt[]                         = "ERROR";
0000A5 4641435400       767         DB      046H,041H,043H,054H,000H
                        770         PUBLIC  _ERRORCmdTxt
0000AA                  771 _ERRORCmdTxt:
                        772 ; rs232cmd.c   85       char code ERRCmdTxt[]                           = "ERR";
0000AA 4552524F5200     773         DB      045H,052H,052H,04FH,052H,000H
                        776         PUBLIC  _ERRCmdTxt
0000B0                  777 _ERRCmdTxt:
                        778 ; rs232cmd.c   86       char code VERSIONCmdTxt[]                       = "VERSION";
0000B0 45525200         779         DB      045H,052H,052H,000H
                        782         PUBLIC  _VERSIONCmdTxt
0000B4                  783 _VERSIONCmdTxt:
                        784 ; rs232cmd.c   87       char code VERSCmdTxt[]                  = "VERS";
0000B4 56455253494F4E   785         DB      056H,045H,052H,053H,049H,04FH,04EH,000H
       00                   
                        788         PUBLIC  _VERSCmdTxt
0000BC                  789 _VERSCmdTxt:
                        790 ; rs232cmd.c   88       char code PRESETCmdTxt[]                                = "PRESET";
0000BC 5645525300       791         DB      056H,045H,052H,053H,000H
                        794         PUBLIC  _PRESETCmdTxt
0000C1                  795 _PRESETCmdTxt:
                        796 ; rs232cmd.c   89       char code PRESCmdTxt[]                                  = "PRES";
0000C1 50524553455400   797         DB      050H,052H,045H,053H,045H,054H,000H
                        800         PUBLIC  _PRESCmdTxt
0000C8                  801 _PRESCmdTxt:
                        802 ; rs232cmd.c   90       char code EVENTLOGCmdTxt[]                              = "EVENTLOG";
0000C8 5052455300       803         DB      050H,052H,045H,053H,000H
                        806         PUBLIC  _EVENTLOGCmdTxt
0000CD                  807 _EVENTLOGCmdTxt:
                        808 ; rs232cmd.c   91       char code DATECmdTxt[]                                  = "DATE";
0000CD 4556454E544C4F   809         DB      045H,056H,045H,04EH,054H,04CH,04FH,047H,000H
       4700                 
                        812         PUBLIC  _DATECmdTxt
0000D6                  813 _DATECmdTxt:
                        814 ; rs232cmd.c   92       char code TIMECmdTxt[]                                  = "TIME";
0000D6 4441544500       815         DB      044H,041H,054H,045H,000H
                        818         PUBLIC  _TIMECmdTxt
0000DB                  819 _TIMECmdTxt:
                        820 ; rs232cmd.c   93       
                        821 ; rs232cmd.c   94       char code RECALLCmdTxt[]                                = "RECALL";
0000DB 54494D4500       822         DB      054H,049H,04DH,045H,000H
                        825         PUBLIC  _RECALLCmdTxt
0000E0                  826 _RECALLCmdTxt:
                        827 ; rs232cmd.c   95       char code RECCmdTxt[]                                   = "REC";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
0000E0 524543414C4C00   828         DB      052H,045H,043H,041H,04CH,04CH,000H
                        831         PUBLIC  _RECCmdTxt
0000E7                  832 _RECCmdTxt:
                        833 ; rs232cmd.c   96       char code STORECmdTxt[]                                 = "STORE";
0000E7 52454300         834         DB      052H,045H,043H,000H
                        837         PUBLIC  _STORECmdTxt
0000EB                  838 _STORECmdTxt:
                        839 ; rs232cmd.c   97       char code STORCmdTxt[]                                  = "STOR";
0000EB 53544F524500     840         DB      053H,054H,04FH,052H,045H,000H
                        843         PUBLIC  _STORCmdTxt
0000F1                  844 _STORCmdTxt:
                        845 ; rs232cmd.c   98       char code NAMECmdTxt[]                                  = "NAME";
0000F1 53544F5200       846         DB      053H,054H,04FH,052H,000H
                        849         PUBLIC  _NAMECmdTxt
0000F6                  850 _NAMECmdTxt:
                        851 ; rs232cmd.c   99       char code AUTHORCmdTxt[]                                = "AUTHOR";
0000F6 4E414D4500       852         DB      04EH,041H,04DH,045H,000H
                        855         PUBLIC  _AUTHORCmdTxt
0000FB                  856 _AUTHORCmdTxt:
                        857 ; rs232cmd.c  100       char code AUTHCmdTxt[]                                  = "AUTH";
0000FB 415554484F5200   858         DB      041H,055H,054H,048H,04FH,052H,000H
                        861         PUBLIC  _AUTHCmdTxt
000102                  862 _AUTHCmdTxt:
                        863 ; rs232cmd.c  101       char code DOWNLOADCmdTxt[]                      = "DOWNLOAD";
000102 4155544800       864         DB      041H,055H,054H,048H,000H
                        867         PUBLIC  _DOWNLOADCmdTxt
000107                  868 _DOWNLOADCmdTxt:
                        869 ; rs232cmd.c  102       char code DOWNCmdTxt[]                                  = "DOWN";
000107 444F574E4C4F41   870         DB      044H,04FH,057H,04EH,04CH,04FH,041H,044H,000H
       4400                 
                        873         PUBLIC  _DOWNCmdTxt
000110                  874 _DOWNCmdTxt:
                        875 ; rs232cmd.c  103       char code UPLOADCmdTxt[]                                = "UPLOAd";
000110 444F574E00       876         DB      044H,04FH,057H,04EH,000H
                        879         PUBLIC  _UPLOADCmdTxt
000115                  880 _UPLOADCmdTxt:
                        881 ; rs232cmd.c  104       char code UPLCmdTxt[]                                   = "UPL";
000115 55504C4F416400   882         DB      055H,050H,04CH,04FH,041H,064H,000H
                        885         PUBLIC  _UPLCmdTxt
00011C                  886 _UPLCmdTxt:
                        887 ; rs232cmd.c  105       
                        888 ; rs232cmd.c  106       char code OPERATIONCmdTxt[]                     = "OPERATION";
00011C 55504C00         889         DB      055H,050H,04CH,000H
                        892         PUBLIC  _OPERATIONCmdTxt
000120                  893 _OPERATIONCmdTxt:
                        894 ; rs232cmd.c  107       char code OPERCmdTxt[]                          = "OPER";
000120 4F504552415449   895         DB      04FH,050H,045H,052H,041H,054H,049H,04FH,04EH,000H
       4F4E00               
                        898         PUBLIC  _OPERCmdTxt
00012A                  899 _OPERCmdTxt:
                        900 ; rs232cmd.c  108       char code QUESTIONABLECmdTxt[]          = "QUESTIONABLE";
00012A 4F50455200       901         DB      04FH,050H,045H,052H,000H
                        904         PUBLIC  _QUESTIONABLECmdTxt
00012F                  905 _QUESTIONABLECmdTxt:
00012F 5155455354494F   906         DB      051H,055H,045H,053H,054H,049H,04FH,04EH,041H,042H,04CH,045H
       4E41424C45           
                        907 ; rs232cmd.c  109       char code QUESCmdTxt[]                                  = "QUES";
00013B 00               908         DB      000H
                        911         PUBLIC  _QUESCmdTxt
00013C                  912 _QUESCmdTxt:
                        913 ; rs232cmd.c  110       
                        914 ; rs232cmd.c  111       char code EVENTCmdTxt[]                                 = "EVENT";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
00013C 5155455300       915         DB      051H,055H,045H,053H,000H
                        918         PUBLIC  _EVENTCmdTxt
000141                  919 _EVENTCmdTxt:
                        920 ; rs232cmd.c  112       char code EVENCmdTxt[]                                  = "EVEN";
000141 4556454E5400     921         DB      045H,056H,045H,04EH,054H,000H
                        924         PUBLIC  _EVENCmdTxt
000147                  925 _EVENCmdTxt:
                        926 ; rs232cmd.c  113       char code CONDITIONCmdTxt[]                     = "CONDITION";
000147 4556454E00       927         DB      045H,056H,045H,04EH,000H
                        930         PUBLIC  _CONDITIONCmdTxt
00014C                  931 _CONDITIONCmdTxt:
                        932 ; rs232cmd.c  114       char code CONDCmdTxt[]                                  = "COND";
00014C 434F4E44495449   933         DB      043H,04FH,04EH,044H,049H,054H,049H,04FH,04EH,000H
       4F4E00               
                        936         PUBLIC  _CONDCmdTxt
000156                  937 _CONDCmdTxt:
                        938 ; rs232cmd.c  115       char code ENABLECmdTxt[]                                = "ENABLE";
000156 434F4E4400       939         DB      043H,04FH,04EH,044H,000H
                        942         PUBLIC  _ENABLECmdTxt
00015B                  943 _ENABLECmdTxt:
                        944 ; rs232cmd.c  116       char code ENABCmdTxt[]                                  = "ENAB";
00015B 454E41424C4500   945         DB      045H,04EH,041H,042H,04CH,045H,000H
                        948         PUBLIC  _ENABCmdTxt
000162                  949 _ENABCmdTxt:
                        950 ; rs232cmd.c  117       
                        951 ; rs232cmd.c  118       char code DISPLAYCmdTxt[]                               = "DISPLAY";
000162 454E414200       952         DB      045H,04EH,041H,042H,000H
                        955         PUBLIC  _DISPLAYCmdTxt
000167                  956 _DISPLAYCmdTxt:
                        957 ; rs232cmd.c  119       char code DISPCmdTxt[]                                  = "DISP";
000167 444953504C4159   958         DB      044H,049H,053H,050H,04CH,041H,059H,000H
       00                   
                        961         PUBLIC  _DISPCmdTxt
00016F                  962 _DISPCmdTxt:
                        963 ; rs232cmd.c  120       char code ERRORQUEUECmdTxt[]            = "ERRORQUEUE";
00016F 4449535000       964         DB      044H,049H,053H,050H,000H
                        967         PUBLIC  _ERRORQUEUECmdTxt
000174                  968 _ERRORQUEUECmdTxt:
                        969 ; rs232cmd.c  121       char code RESETCmdTxt[]                                 = "RESET";
000174 4552524F525155   970         DB      045H,052H,052H,04FH,052H,051H,055H,045H,055H,045H,000H
       45554500             
                        973         PUBLIC  _RESETCmdTxt
00017F                  974 _RESETCmdTxt:
                        975 ; rs232cmd.c  122       char code RESCmdTxt[]                                   = "RES";
00017F 524553455400     976         DB      052H,045H,053H,045H,054H,000H
                        979         PUBLIC  _RESCmdTxt
000185                  980 _RESCmdTxt:
                        981 ; rs232cmd.c  123       
                        982 ; rs232cmd.c  124       char code DEFAULTCmdTxt[]                               = "DEFAULT";
000185 52455300         983         DB      052H,045H,053H,000H
                        986         PUBLIC  _DEFAULTCmdTxt
000189                  987 _DEFAULTCmdTxt:
                        988 ; rs232cmd.c  125       char code DEFCmdTxt[]                                   = "DEF";
000189 44454641554C54   989         DB      044H,045H,046H,041H,055H,04CH,054H,000H
       00                   
                        992         PUBLIC  _DEFCmdTxt
000191                  993 _DEFCmdTxt:
                        994 ; rs232cmd.c  126       
                        995 ; rs232cmd.c  127       char code GENLOCKCmdTxt[]                               = "GENLOCK";
000191 44454600         996         DB      044H,045H,046H,000H
                        999         PUBLIC  _GENLOCKCmdTxt
000195                 1000 _GENLOCKCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
                       1001 ; rs232cmd.c  128       char code GENLCmdTxt[]                                  = "GENL";
000195 47454E4C4F434B  1002         DB      047H,045H,04EH,04CH,04FH,043H,04BH,000H
       00                   
                       1005         PUBLIC  _GENLCmdTxt
00019D                 1006 _GENLCmdTxt:
                       1007 ; rs232cmd.c  129       
                       1008 ; rs232cmd.c  130       char code DELAYCmdTxt[]                                 = "DELAY";
00019D 47454E4C00      1009         DB      047H,045H,04EH,04CH,000H
                       1012         PUBLIC  _DELAYCmdTxt
0001A2                 1013 _DELAYCmdTxt:
                       1014 ; rs232cmd.c  131       char code DELCmdTxt[]                                   = "DEL";
0001A2 44454C415900    1015         DB      044H,045H,04CH,041H,059H,000H
                       1018         PUBLIC  _DELCmdTxt
0001A8                 1019 _DELCmdTxt:
                       1020 ; rs232cmd.c  132       
                       1021 ; rs232cmd.c  133       char code CALIBRATECmdTxt[]                     = "CALIBRATE";
0001A8 44454C00        1022         DB      044H,045H,04CH,000H
                       1025         PUBLIC  _CALIBRATECmdTxt
0001AC                 1026 _CALIBRATECmdTxt:
                       1027 ; rs232cmd.c  134       char code CALCmdTxt[]                                   = "CAL";
0001AC 43414C49425241  1028         DB      043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       544500               
                       1031         PUBLIC  _CALCmdTxt
0001B6                 1032 _CALCmdTxt:
                       1033 ; rs232cmd.c  135       
                       1034 ; rs232cmd.c  136       char code ADJUSTCmdTxt[]                                = "ADJUST";
0001B6 43414C00        1035         DB      043H,041H,04CH,000H
                       1038         PUBLIC  _ADJUSTCmdTxt
0001BA                 1039 _ADJUSTCmdTxt:
                       1040 ; rs232cmd.c  137       char code ADJCmdTxt[]                                   = "ADJ";
0001BA 41444A55535400  1041         DB      041H,044H,04AH,055H,053H,054H,000H
                       1044         PUBLIC  _ADJCmdTxt
0001C1                 1045 _ADJCmdTxt:
                       1046 ; rs232cmd.c  138       
                       1047 ; rs232cmd.c  139       char code BBCmdTxt[]                                    = "BB";
0001C1 41444A00        1048         DB      041H,044H,04AH,000H
                       1051         PUBLIC  _BBCmdTxt
0001C5                 1052 _BBCmdTxt:
                       1053 ; rs232cmd.c  140       char code TSGENERATORCmdTxt[]           = "TSGENERATOR";
0001C5 424200          1054         DB      042H,042H,000H
                       1057         PUBLIC  _TSGENERATORCmdTxt
0001C8                 1058 _TSGENERATORCmdTxt:
                       1059 ; rs232cmd.c  141       char code TSGCmdTxt[]                                   = "TSG";
0001C8 545347454E4552  1060         DB      054H,053H,047H,045H,04EH,045H,052H,041H,054H,04FH,052H,000H
       41544F5200           
                       1063         PUBLIC  _TSGCmdTxt
0001D4                 1064 _TSGCmdTxt:
                       1065 ; rs232cmd.c  142       char code AUDIOCmdTxt[]                                 = "AUDIO";
0001D4 54534700        1066         DB      054H,053H,047H,000H
                       1069         PUBLIC  _AUDIOCmdTxt
0001D8                 1070 _AUDIOCmdTxt:
                       1071 ; rs232cmd.c  143       char code AUDCmdTxt[]                                   = "AUD";
0001D8 415544494F00    1072         DB      041H,055H,044H,049H,04FH,000H
                       1075         PUBLIC  _AUDCmdTxt
0001DE                 1076 _AUDCmdTxt:
                       1077 ; rs232cmd.c  144       
                       1078 ; rs232cmd.c  145       char code ANALOGCmdTxt[]                                = "ANALOG";
0001DE 41554400        1079         DB      041H,055H,044H,000H
                       1082         PUBLIC  _ANALOGCmdTxt
0001E2                 1083 _ANALOGCmdTxt:
                       1084 ; rs232cmd.c  146       char code ANALCmdTxt[]                                  = "ANAL";
0001E2 414E414C4F4700  1085         DB      041H,04EH,041H,04CH,04FH,047H,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
                       1088         PUBLIC  _ANALCmdTxt
0001E9                 1089 _ANALCmdTxt:
                       1090 ; rs232cmd.c  147       
                       1091 ; rs232cmd.c  148       char code PATTERNCmdTxt[]                               = "PATTERN";
0001E9 414E414C00      1092         DB      041H,04EH,041H,04CH,000H
                       1095         PUBLIC  _PATTERNCmdTxt
0001EE                 1096 _PATTERNCmdTxt:
                       1097 ; rs232cmd.c  149       char code PATTCmdTxt[]                                  = "PATT";
0001EE 5041545445524E  1098         DB      050H,041H,054H,054H,045H,052H,04EH,000H
       00                   
                       1101         PUBLIC  _PATTCmdTxt
0001F6                 1102 _PATTCmdTxt:
                       1103 ; rs232cmd.c  150       char code EMBAUDIOCmdTxt[]                      = "EMBAUDIO";
0001F6 5041545400      1104         DB      050H,041H,054H,054H,000H
                       1107         PUBLIC  _EMBAUDIOCmdTxt
0001FB                 1108 _EMBAUDIOCmdTxt:
                       1109 ; rs232cmd.c  151       char code EMBCmdTxt[]                                   = "EMB";
0001FB 454D4241554449  1110         DB      045H,04DH,042H,041H,055H,044H,049H,04FH,000H
       4F00                 
                       1113         PUBLIC  _EMBCmdTxt
000204                 1114 _EMBCmdTxt:
                       1115 ; rs232cmd.c  152       
                       1116 ; rs232cmd.c  153       char code AESEBUCmdTxt[]                                = "AESEBU";
000204 454D4200        1117         DB      045H,04DH,042H,000H
                       1120         PUBLIC  _AESEBUCmdTxt
000208                 1121 _AESEBUCmdTxt:
                       1122 ; rs232cmd.c  154       char code AESCmdTxt[]                                   = "AES";
000208 41455345425500  1123         DB      041H,045H,053H,045H,042H,055H,000H
                       1126         PUBLIC  _AESCmdTxt
00020F                 1127 _AESCmdTxt:
                       1128 ; rs232cmd.c  155       
                       1129 ; rs232cmd.c  156       char code SCHPHASECmdTxt[]                      = "SCHPHASE";
00020F 41455300        1130         DB      041H,045H,053H,000H
                       1133         PUBLIC  _SCHPHASECmdTxt
000213                 1134 _SCHPHASECmdTxt:
                       1135 ; rs232cmd.c  157       char code SCHPCmdTxt[]                                  = "SCHP";
000213 53434850484153  1136         DB      053H,043H,048H,050H,048H,041H,053H,045H,000H
       4500                 
                       1139         PUBLIC  _SCHPCmdTxt
00021C                 1140 _SCHPCmdTxt:
                       1141 ; rs232cmd.c  158       
                       1142 ; rs232cmd.c  159       char code SIGNALCmdTxt[]                                = "SIGNAL";
00021C 5343485000      1143         DB      053H,043H,048H,050H,000H
                       1146         PUBLIC  _SIGNALCmdTxt
000221                 1147 _SIGNALCmdTxt:
                       1148 ; rs232cmd.c  160       char code SIGNCmdTxt[]                                  = "SIGN";
000221 5349474E414C00  1149         DB      053H,049H,047H,04EH,041H,04CH,000H
                       1152         PUBLIC  _SIGNCmdTxt
000228                 1153 _SIGNCmdTxt:
                       1154 ; rs232cmd.c  161       char code LEVELCmdTxt[]                                 = "LEVEL";
000228 5349474E00      1155         DB      053H,049H,047H,04EH,000H
                       1158         PUBLIC  _LEVELCmdTxt
00022D                 1159 _LEVELCmdTxt:
                       1160 ; rs232cmd.c  162       char code LEVCmdTxt[]                                   = "LEV";
00022D 4C4556454C00    1161         DB      04CH,045H,056H,045H,04CH,000H
                       1164         PUBLIC  _LEVCmdTxt
000233                 1165 _LEVCmdTxt:
                       1166 ; rs232cmd.c  163       char code EDHINSERTCmdTxt[]                     = "EDHINSERT";
000233 4C455600        1167         DB      04CH,045H,056H,000H
                       1170         PUBLIC  _EDHINSERTCmdTxt
000237                 1171 _EDHINSERTCmdTxt:
                       1172 ; rs232cmd.c  164       char code EDHCmdTxt[]                                   = "EDH";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
000237 454448494E5345  1173         DB      045H,044H,048H,049H,04EH,053H,045H,052H,054H,000H
       525400               
                       1176         PUBLIC  _EDHCmdTxt
000241                 1177 _EDHCmdTxt:
                       1178 ; rs232cmd.c  165       
                       1179 ; rs232cmd.c  166       char code TIMINGCmdTxt[]                                = "TIMING";
000241 45444800        1180         DB      045H,044H,048H,000H
                       1183         PUBLIC  _TIMINGCmdTxt
000245                 1184 _TIMINGCmdTxt:
                       1185 ; rs232cmd.c  167       char code TIMCmdTxt[]                                   = "TIM";
000245 54494D494E4700  1186         DB      054H,049H,04DH,049H,04EH,047H,000H
                       1189         PUBLIC  _TIMCmdTxt
00024C                 1190 _TIMCmdTxt:
                       1191 ; rs232cmd.c  168       
                       1192 ; rs232cmd.c  169       char code WORDCLOCKCmdTxt[]                     = "WORDCLOCK";
00024C 54494D00        1193         DB      054H,049H,04DH,000H
                       1196         PUBLIC  _WORDCLOCKCmdTxt
000250                 1197 _WORDCLOCKCmdTxt:
                       1198 ; rs232cmd.c  170       char code WORDCmdTxt[]                                  = "WORD";
000250 574F5244434C4F  1199         DB      057H,04FH,052H,044H,043H,04CH,04FH,043H,04BH,000H
       434B00               
                       1202         PUBLIC  _WORDCmdTxt
00025A                 1203 _WORDCmdTxt:
                       1204 ; rs232cmd.c  171       
                       1205 ; rs232cmd.c  172       char code CLICKCmdTxt[]                                 = "CLICK";
00025A 574F524400      1206         DB      057H,04FH,052H,044H,000H
                       1209         PUBLIC  _CLICKCmdTxt
00025F                 1210 _CLICKCmdTxt:
                       1211 ; rs232cmd.c  173       char code CLICCmdTxt[]                                  = "CLIC";
00025F 434C49434B00    1212         DB      043H,04CH,049H,043H,04BH,000H
                       1215         PUBLIC  _CLICCmdTxt
000265                 1216 _CLICCmdTxt:
                       1217 ; rs232cmd.c  174       
                       1218 ; rs232cmd.c  175       char code PASSWORDCmdTxt[]                      = "PASSWORD";
000265 434C494300      1219         DB      043H,04CH,049H,043H,000H
                       1222         PUBLIC  _PASSWORDCmdTxt
00026A                 1223 _PASSWORDCmdTxt:
                       1224 ; rs232cmd.c  176       char code PASSCmdTxt[]                                  = "PASS";
00026A 50415353574F52  1225         DB      050H,041H,053H,053H,057H,04FH,052H,044H,000H
       4400                 
                       1228         PUBLIC  _PASSCmdTxt
000273                 1229 _PASSCmdTxt:
                       1230 ; rs232cmd.c  177       char code V24CIRCUITCmdTxt[]                    = "V24CIRCUIT";
000273 5041535300      1231         DB      050H,041H,053H,053H,000H
                       1234         PUBLIC  _V24CIRCUITCmdTxt
000278                 1235 _V24CIRCUITCmdTxt:
                       1236 ; rs232cmd.c  178       char code V24CCmdTxt[]                                  = "V24C";
000278 56323443495243  1237         DB      056H,032H,034H,043H,049H,052H,043H,055H,049H,054H,000H
       55495400             
                       1240         PUBLIC  _V24CCmdTxt
000283                 1241 _V24CCmdTxt:
                       1242 ; rs232cmd.c  179       char code CHECKSUMCmdTxt[]                      = "CHECKSUM";
000283 5632344300      1243         DB      056H,032H,034H,043H,000H
                       1246         PUBLIC  _CHECKSUMCmdTxt
000288                 1247 _CHECKSUMCmdTxt:
                       1248 ; rs232cmd.c  180       char code CHECCmdTxt[]                                  = "CHEC";
000288 434845434B5355  1249         DB      043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       4D00                 
                       1252         PUBLIC  _CHECCmdTxt
000291                 1253 _CHECCmdTxt:
                       1254 ; rs232cmd.c  181       
                       1255 ; rs232cmd.c  182       char code CODECmdTxt[]                                  = "CODE";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
000291 4348454300      1256         DB      043H,048H,045H,043H,000H
                       1259         PUBLIC  _CODECmdTxt
000296                 1260 _CODECmdTxt:
                       1261 ; rs232cmd.c  183       char code RANGECmdTxt[]                                 = "RANGE";
000296 434F444500      1262         DB      043H,04FH,044H,045H,000H
                       1265         PUBLIC  _RANGECmdTxt
00029B                 1266 _RANGECmdTxt:
                       1267 ; rs232cmd.c  184       char code RANGCmdTxt[]                                  = "RANG";
00029B 52414E474500    1268         DB      052H,041H,04EH,047H,045H,000H
                       1271         PUBLIC  _RANGCmdTxt
0002A1                 1272 _RANGCmdTxt:
                       1273 ; rs232cmd.c  185       char code COMMANDCmdTxt[]                               = "COMMAND";
0002A1 52414E4700      1274         DB      052H,041H,04EH,047H,000H
                       1277         PUBLIC  _COMMANDCmdTxt
0002A6                 1278 _COMMANDCmdTxt:
                       1279 ; rs232cmd.c  186       char code COMMCmdTxt[]                                  = "COMM";
0002A6 434F4D4D414E44  1280         DB      043H,04FH,04DH,04DH,041H,04EH,044H,000H
       00                   
                       1283         PUBLIC  _COMMCmdTxt
0002AE                 1284 _COMMCmdTxt:
                       1285 ; rs232cmd.c  187       char code TRANSPARENTCmdTxt[]           = "TRANSPARENT";
0002AE 434F4D4D00      1286         DB      043H,04FH,04DH,04DH,000H
                       1289         PUBLIC  _TRANSPARENTCmdTxt
0002B3                 1290 _TRANSPARENTCmdTxt:
                       1291 ; rs232cmd.c  188       char code TRANCmdTxt[]                                  = "TRAN";
0002B3 5452414E535041  1292         DB      054H,052H,041H,04EH,053H,050H,041H,052H,045H,04EH,054H,000H
       52454E5400           
                       1295         PUBLIC  _TRANCmdTxt
0002BF                 1296 _TRANCmdTxt:
                       1297 ; rs232cmd.c  189       
                       1298 ; rs232cmd.c  190       char code MAINBOARDCmdTxt[]                     = "MAINBOARD";
0002BF 5452414E00      1299         DB      054H,052H,041H,04EH,000H
                       1302         PUBLIC  _MAINBOARDCmdTxt
0002C4                 1303 _MAINBOARDCmdTxt:
                       1304 ; rs232cmd.c  191       char code MAINCmdTxt[]                                  = "MAIN";
0002C4 4D41494E424F41  1305         DB      04DH,041H,049H,04EH,042H,04FH,041H,052H,044H,000H
       524400               
                       1308         PUBLIC  _MAINCmdTxt
0002CE                 1309 _MAINCmdTxt:
                       1310 ; rs232cmd.c  192       char code COMPANYCmdTxt[]                               = "COMPANY";
0002CE 4D41494E00      1311         DB      04DH,041H,049H,04EH,000H
                       1314         PUBLIC  _COMPANYCmdTxt
0002D3                 1315 _COMPANYCmdTxt:
                       1316 ; rs232cmd.c  193       char code COMPCmdTxt[]                                  = "COMP";
0002D3 434F4D50414E59  1317         DB      043H,04FH,04DH,050H,041H,04EH,059H,000H
       00                   
                       1320         PUBLIC  _COMPCmdTxt
0002DB                 1321 _COMPCmdTxt:
                       1322 ; rs232cmd.c  194       char code TYPECmdTxt[]                                  = "TYPE";
0002DB 434F4D5000      1323         DB      043H,04FH,04DH,050H,000H
                       1326         PUBLIC  _TYPECmdTxt
0002E0                 1327 _TYPECmdTxt:
                       1328 ; rs232cmd.c  195       char code KUNUMBERCmdTxt[]                      = "KUNUMBER";
0002E0 5459504500      1329         DB      054H,059H,050H,045H,000H
                       1332         PUBLIC  _KUNUMBERCmdTxt
0002E5                 1333 _KUNUMBERCmdTxt:
                       1334 ; rs232cmd.c  196       char code KUNCmdTxt[]                                   = "KUN";
0002E5 4B554E554D4245  1335         DB      04BH,055H,04EH,055H,04DH,042H,045H,052H,000H
       5200                 
                       1338         PUBLIC  _KUNCmdTxt
0002EE                 1339 _KUNCmdTxt:
                       1340 ; rs232cmd.c  197       char code SWREVISIONCmdTxt[]                    = "SWREVISION";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
0002EE 4B554E00        1341         DB      04BH,055H,04EH,000H
                       1344         PUBLIC  _SWREVISIONCmdTxt
0002F2                 1345 _SWREVISIONCmdTxt:
                       1346 ; rs232cmd.c  198       char code SWRCmdTxt[]                                   = "SWR";
0002F2 53575245564953  1347         DB      053H,057H,052H,045H,056H,049H,053H,049H,04FH,04EH,000H
       494F4E00             
                       1350         PUBLIC  _SWRCmdTxt
0002FD                 1351 _SWRCmdTxt:
                       1352 ; rs232cmd.c  199       
                       1353 ; rs232cmd.c  200       char code NCCmdTxt[]                                    = "NC";
0002FD 53575200        1354         DB      053H,057H,052H,000H
                       1357         PUBLIC  _NCCmdTxt
000301                 1358 _NCCmdTxt:
                       1359 ; rs232cmd.c  201       char code FMSDATECmdTxt[]                               = "FMSDATE";
000301 4E4300          1360         DB      04EH,043H,000H
                       1363         PUBLIC  _FMSDATECmdTxt
000304                 1364 _FMSDATECmdTxt:
                       1365 ; rs232cmd.c  202       char code FMSDCmdTxt[]                                  = "FMSD";
000304 464D5344415445  1366         DB      046H,04DH,053H,044H,041H,054H,045H,000H
       00                   
                       1369         PUBLIC  _FMSDCmdTxt
00030C                 1370 _FMSDCmdTxt:
                       1371 ; rs232cmd.c  203       char code PRODUCTIONCmdTxt[]                    = "PRODUCTION";
00030C 464D534400      1372         DB      046H,04DH,053H,044H,000H
                       1375         PUBLIC  _PRODUCTIONCmdTxt
000311                 1376 _PRODUCTIONCmdTxt:
                       1377 ; rs232cmd.c  204       char code PRODCmdTxt[]                                  = "PROD";
000311 50524F44554354  1378         DB      050H,052H,04FH,044H,055H,043H,054H,049H,04FH,04EH,000H
       494F4E00             
                       1381         PUBLIC  _PRODCmdTxt
00031C                 1382 _PRODCmdTxt:
                       1383 ; rs232cmd.c  205       char code UPDATECmdTxt[]                                = "UPDATE";
00031C 50524F4400      1384         DB      050H,052H,04FH,044H,000H
                       1387         PUBLIC  _UPDATECmdTxt
000321                 1388 _UPDATECmdTxt:
                       1389 ; rs232cmd.c  206       char code UPDCmdTxt[]                                   = "UPD";
000321 55504441544500  1390         DB      055H,050H,044H,041H,054H,045H,000H
                       1393         PUBLIC  _UPDCmdTxt
000328                 1394 _UPDCmdTxt:
                       1395 ; rs232cmd.c  207       
                       1396 ; rs232cmd.c  208       char code FREFERENCECmdTxt[]                    = "FREFERENCE";
000328 55504400        1397         DB      055H,050H,044H,000H
                       1400         PUBLIC  _FREFERENCECmdTxt
00032C                 1401 _FREFERENCECmdTxt:
                       1402 ; rs232cmd.c  209       char code FREFCmdTxt[]                                  = "FREF";
00032C 46524546455245  1403         DB      046H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1406         PUBLIC  _FREFCmdTxt
000337                 1407 _FREFCmdTxt:
                       1408 ; rs232cmd.c  210       char code DACCmdTxt[]                                   = "DAC";
000337 4652454600      1409         DB      046H,052H,045H,046H,000H
                       1412         PUBLIC  _DACCmdTxt
00033C                 1413 _DACCmdTxt:
                       1414 ; rs232cmd.c  211       char code UREFERENCECmdTxt[]                    = "UREFERENCE";
00033C 44414300        1415         DB      044H,041H,043H,000H
                       1418         PUBLIC  _UREFERENCECmdTxt
000340                 1419 _UREFERENCECmdTxt:
                       1420 ; rs232cmd.c  212       char code UREFCmdTxt[]                                  = "UREF";
000340 55524546455245  1421         DB      055H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1424         PUBLIC  _UREFCmdTxt
00034B                 1425 _UREFCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
                       1426 ; rs232cmd.c  213       char code HPHZEROCmdTxt[]                               = "HPHZERO";
00034B 5552454600      1427         DB      055H,052H,045H,046H,000H
                       1430         PUBLIC  _HPHZEROCmdTxt
000350                 1431 _HPHZEROCmdTxt:
                       1432 ; rs232cmd.c  214       char code HPHZCmdTxt[]                                  = "HPHZ";
000350 4850485A45524F  1433         DB      048H,050H,048H,05AH,045H,052H,04FH,000H
       00                   
                       1436         PUBLIC  _HPHZCmdTxt
000358                 1437 _HPHZCmdTxt:
                       1438 ; rs232cmd.c  215       char code PHASECmdTxt[]                                 = "PHASE";
000358 4850485A00      1439         DB      048H,050H,048H,05AH,000H
                       1442         PUBLIC  _PHASECmdTxt
00035D                 1443 _PHASECmdTxt:
                       1444 ; rs232cmd.c  216       char code PHASCmdTxt[]                                  = "PHAS";
00035D 504841534500    1445         DB      050H,048H,041H,053H,045H,000H
                       1448         PUBLIC  _PHASCmdTxt
000363                 1449 _PHASCmdTxt:
                       1450 ; rs232cmd.c  217       
                       1451 ; rs232cmd.c  218       char code AGAINCmdTxt[]                                 = "AGAIN";
000363 5048415300      1452         DB      050H,048H,041H,053H,000H
                       1455         PUBLIC  _AGAINCmdTxt
000368                 1456 _AGAINCmdTxt:
                       1457 ; rs232cmd.c  219       char code AGACmdTxt[]                                   = "AGA";
000368 414741494E00    1458         DB      041H,047H,041H,049H,04EH,000H
                       1461         PUBLIC  _AGACmdTxt
00036E                 1462 _AGACmdTxt:
                       1463 ; rs232cmd.c  220       char code CGAINCmdTxt[]                                 = "CGAIN";
00036E 41474100        1464         DB      041H,047H,041H,000H
                       1467         PUBLIC  _CGAINCmdTxt
000372                 1468 _CGAINCmdTxt:
                       1469 ; rs232cmd.c  221       char code CGACmdTxt[]                                   = "CGA";
000372 434741494E00    1470         DB      043H,047H,041H,049H,04EH,000H
                       1473         PUBLIC  _CGACmdTxt
000378                 1474 _CGACmdTxt:
                       1475 ; rs232cmd.c  222       char code ALEVELCmdTxt[]                                = "ALEVEL";
000378 43474100        1476         DB      043H,047H,041H,000H
                       1479         PUBLIC  _ALEVELCmdTxt
00037C                 1480 _ALEVELCmdTxt:
                       1481 ; rs232cmd.c  223       char code ALEVCmdTxt[]                                  = "ALEV";
00037C 414C4556454C00  1482         DB      041H,04CH,045H,056H,045H,04CH,000H
                       1485         PUBLIC  _ALEVCmdTxt
000383                 1486 _ALEVCmdTxt:
                       1487 ; rs232cmd.c  224       
                       1488 ; rs232cmd.c  225       char code PLDCmdTxt[]                                   = "PLD";
000383 414C455600      1489         DB      041H,04CH,045H,056H,000H
                       1492         PUBLIC  _PLDCmdTxt
000388                 1493 _PLDCmdTxt:
                       1494 ; rs232cmd.c  226       char code TCXOCmdTxt[]                                  = "TCXO";
000388 504C4400        1495         DB      050H,04CH,044H,000H
                       1498         PUBLIC  _TCXOCmdTxt
00038C                 1499 _TCXOCmdTxt:
                       1500 ; rs232cmd.c  227       char code MMCHIPCmdTxt[]                                = "MMCHIP";
00038C 5443584F00      1501         DB      054H,043H,058H,04FH,000H
                       1504         PUBLIC  _MMCHIPCmdTxt
000391                 1505 _MMCHIPCmdTxt:
                       1506 ; rs232cmd.c  228       char code MMCHCmdTxt[]                                  = "MMCH";
000391 4D4D4348495000  1507         DB      04DH,04DH,043H,048H,049H,050H,000H
                       1510         PUBLIC  _MMCHCmdTxt
000398                 1511 _MMCHCmdTxt:
                       1512 ; rs232cmd.c  229       
                       1513 ; rs232cmd.c  230       char code SAVEParTxt[]                                  = "SAVE";
000398 4D4D434800      1514         DB      04DH,04DH,043H,048H,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
                       1517         PUBLIC  _SAVEParTxt
00039D                 1518 _SAVEParTxt:
                       1519 ; rs232cmd.c  231       
                       1520 ; rs232cmd.c  232       char code INTERNALParTxt[]                      = "INTERNAL";
00039D 5341564500      1521         DB      053H,041H,056H,045H,000H
                       1524         PUBLIC  _INTERNALParTxt
0003A2                 1525 _INTERNALParTxt:
                       1526 ; rs232cmd.c  233       char code INTParTxt[]                                   = "INT";
0003A2 494E5445524E41  1527         DB      049H,04EH,054H,045H,052H,04EH,041H,04CH,000H
       4C00                 
                       1530         PUBLIC  _INTParTxt
0003AB                 1531 _INTParTxt:
                       1532 ; rs232cmd.c  234       char code PALBURSTParTxt[]                      = "PALBURST";
0003AB 494E5400        1533         DB      049H,04EH,054H,000H
                       1536         PUBLIC  _PALBURSTParTxt
0003AF                 1537 _PALBURSTParTxt:
                       1538 ; rs232cmd.c  235       char code PALBParTxt[]                                  = "PALB";
0003AF 50414C42555253  1539         DB      050H,041H,04CH,042H,055H,052H,053H,054H,000H
       5400                 
                       1542         PUBLIC  _PALBParTxt
0003B8                 1543 _PALBParTxt:
                       1544 ; rs232cmd.c  236       char code NTSCBURSTParTxt[]                     = "NTSCBURST";
0003B8 50414C4200      1545         DB      050H,041H,04CH,042H,000H
                       1548         PUBLIC  _NTSCBURSTParTxt
0003BD                 1549 _NTSCBURSTParTxt:
                       1550 ; rs232cmd.c  237       char code NTSCParTxt[]                                  = "NTSC";
0003BD 4E545343425552  1551         DB      04EH,054H,053H,043H,042H,055H,052H,053H,054H,000H
       535400               
                       1554         PUBLIC  _NTSCParTxt
0003C7                 1555 _NTSCParTxt:
                       1556 ; rs232cmd.c  238       char code JNTSCParTxt[]                                 = "JNTS";
0003C7 4E54534300      1557         DB      04EH,054H,053H,043H,000H
                       1560         PUBLIC  _JNTSCParTxt
0003CC                 1561 _JNTSCParTxt:
                       1562 ; rs232cmd.c  239       
                       1563 ; rs232cmd.c  240       char code F10MHzParTxt[]                                = "F10MHZ";
0003CC 4A4E545300      1564         DB      04AH,04EH,054H,053H,000H
                       1567         PUBLIC  _F10MHzParTxt
0003D1                 1568 _F10MHzParTxt:
                       1569 ; rs232cmd.c  241       
                       1570 ; rs232cmd.c  242       char code PALParTxt[]                                   = "PAL";
0003D1 4631304D485A00  1571         DB      046H,031H,030H,04DH,048H,05AH,000H
                       1574         PUBLIC  _PALParTxt
0003D8                 1575 _PALParTxt:
                       1576 ; rs232cmd.c  243       char code PAL_IDParTxt[]                                = "PAL_ID";
0003D8 50414C00        1577         DB      050H,041H,04CH,000H
                       1580         PUBLIC  _PAL_IDParTxt
0003DC                 1581 _PAL_IDParTxt:
                       1582 ; rs232cmd.c  244       
                       1583 ; rs232cmd.c  245       char code CBSMPTEParTxt[]                               = "CBSMPTE";     
                                            // SMPTE Colorbar
0003DC 50414C5F494400  1584         DB      050H,041H,04CH,05FH,049H,044H,000H
                       1587         PUBLIC  _CBSMPTEParTxt
0003E3                 1588 _CBSMPTEParTxt:
                       1589 ; rs232cmd.c  246       char code CBSMParTxt[]                                  = "CBSM";        
                                                            
0003E3 4342534D505445  1590         DB      043H,042H,053H,04DH,050H,054H,045H,000H
       00                   
                       1593         PUBLIC  _CBSMParTxt
0003EB                 1594 _CBSMParTxt:
                       1595 ; rs232cmd.c  247       char code CBEBUParTxt[]                                 = "CBEBU";       
                                    // EBU Colorbar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
0003EB 4342534D00      1596         DB      043H,042H,053H,04DH,000H
                       1599         PUBLIC  _CBEBUParTxt
0003F0                 1600 _CBEBUParTxt:
                       1601 ; rs232cmd.c  248       char code CBEBParTxt[]                                  = "CBEB";
0003F0 434245425500    1602         DB      043H,042H,045H,042H,055H,000H
                       1605         PUBLIC  _CBEBParTxt
0003F6                 1606 _CBEBParTxt:
                       1607 ; rs232cmd.c  249       char code CBFCCParTxt[]                                 = "CBFCC";       
                                                    // FCC Colorbar
0003F6 4342454200      1608         DB      043H,042H,045H,042H,000H
                       1611         PUBLIC  _CBFCCParTxt
0003FB                 1612 _CBFCCParTxt:
                       1613 ; rs232cmd.c  250       char code CBFCParTxt[]                                  = "CBFC";
0003FB 434246434300    1614         DB      043H,042H,046H,043H,043H,000H
                       1617         PUBLIC  _CBFCParTxt
000401                 1618 _CBFCParTxt:
                       1619 ; rs232cmd.c  251       char code CBEBU8ParTxt[]                                = "CBEBU8";      
                                                    // Colorbar ITU801
000401 4342464300      1620         DB      043H,042H,046H,043H,000H
                       1623         PUBLIC  _CBEBU8ParTxt
000406                 1624 _CBEBU8ParTxt:
                       1625 ; rs232cmd.c  252       char code CBEB8ParTxt[]                                 = "CBEB8";
000406 43424542553800  1626         DB      043H,042H,045H,042H,055H,038H,000H
                       1629         PUBLIC  _CBEB8ParTxt
00040D                 1630 _CBEB8ParTxt:
                       1631 ; rs232cmd.c  253       char code CB100ParTxt[]                                 = "CB100";       
                                                    // 100% Colorbar
00040D 434245423800    1632         DB      043H,042H,045H,042H,038H,000H
                       1635         PUBLIC  _CB100ParTxt
000413                 1636 _CB100ParTxt:
                       1637 ; rs232cmd.c  254       char code CBGREY75ParTxt[]                      = "CBGREY75";            
                                    // Colorbar + 75% Grey
000413 434231303000    1638         DB      043H,042H,031H,030H,030H,000H
                       1641         PUBLIC  _CBGREY75ParTxt
000419                 1642 _CBGREY75ParTxt:
                       1643 ; rs232cmd.c  255       char code CBGR75ParTxt[]                                = "CBGR75";
000419 43424752455937  1644         DB      043H,042H,047H,052H,045H,059H,037H,035H,000H
       3500                 
                       1647         PUBLIC  _CBGR75ParTxt
000422                 1648 _CBGR75ParTxt:
                       1649 ; rs232cmd.c  256       char code CBRED75ParTxt[]                       = "CBRED75";             
                                    // Colorbar + 75% Red
000422 43424752373500  1650         DB      043H,042H,047H,052H,037H,035H,000H
                       1653         PUBLIC  _CBRED75ParTxt
000429                 1654 _CBRED75ParTxt:
                       1655 ; rs232cmd.c  257       char code CBR75ParTxt[]                                 = "CBR75";
000429 43425245443735  1656         DB      043H,042H,052H,045H,044H,037H,035H,000H
       00                   
                       1659         PUBLIC  _CBR75ParTxt
000431                 1660 _CBR75ParTxt:
                       1661 ; rs232cmd.c  258       char code RED75ParTxt[]                                 = "RED75";       
                                                    // 75% Red
000431 434252373500    1662         DB      043H,042H,052H,037H,035H,000H
                       1665         PUBLIC  _RED75ParTxt
000437                 1666 _RED75ParTxt:
                       1667 ; rs232cmd.c  259       
                       1668 ; rs232cmd.c  260       char code MULTIBURSTParTxt[]                    = "MULTIBURST";         /
                            / Multi burst
000437 524544373500    1669         DB      052H,045H,044H,037H,035H,000H
                       1672         PUBLIC  _MULTIBURSTParTxt
00043D                 1673 _MULTIBURSTParTxt:
                       1674 ; rs232cmd.c  261       char code MULTParTxt[]                                  = "MULT";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
00043D 4D554C54494255  1675         DB      04DH,055H,04CH,054H,049H,042H,055H,052H,053H,054H,000H
       52535400             
                       1678         PUBLIC  _MULTParTxt
000448                 1679 _MULTParTxt:
                       1680 ; rs232cmd.c  262       char code CCIR18ParTxt[]                                = "CCIR18";
000448 4D554C5400      1681         DB      04DH,055H,04CH,054H,000H
                       1684         PUBLIC  _CCIR18ParTxt
00044D                 1685 _CCIR18ParTxt:
                       1686 ; rs232cmd.c  263       char code WIN10ParTxt[]                                 = "WIN10";       
                                                    // Window 10%
00044D 43434952313800  1687         DB      043H,043H,049H,052H,031H,038H,000H
                       1690         PUBLIC  _WIN10ParTxt
000454                 1691 _WIN10ParTxt:
                       1692 ; rs232cmd.c  264       char code WIN15ParTxt[]                                 = "WIN15";       
                                                    // Window 15%
000454 57494E313000    1693         DB      057H,049H,04EH,031H,030H,000H
                       1696         PUBLIC  _WIN15ParTxt
00045A                 1697 _WIN15ParTxt:
                       1698 ; rs232cmd.c  265       char code WIN20ParTxt[]                                 = "WIN20";       
                                                    // Window 20%
00045A 57494E313500    1699         DB      057H,049H,04EH,031H,035H,000H
                       1702         PUBLIC  _WIN20ParTxt
000460                 1703 _WIN20ParTxt:
                       1704 ; rs232cmd.c  266       char code WIN100ParTxt[]                                = "WIN100";      
                                                    // Window 100%
000460 57494E323000    1705         DB      057H,049H,04EH,032H,030H,000H
                       1708         PUBLIC  _WIN100ParTxt
000466                 1709 _WIN100ParTxt:
                       1710 ; rs232cmd.c  267       char code BLWH15ParTxt[]                                = "BLWH15KHZ";   
                                            // 15kHz Bl/Wh
000466 57494E31303000  1711         DB      057H,049H,04EH,031H,030H,030H,000H
                       1714         PUBLIC  _BLWH15ParTxt
00046D                 1715 _BLWH15ParTxt:
                       1716 ; rs232cmd.c  268       char code WHITE100ParTxt[]                      = "WHITE100";            
                                    // White 100%
00046D 424C574831354B  1717         DB      042H,04CH,057H,048H,031H,035H,04BH,048H,05AH,000H
       485A00               
                       1720         PUBLIC  _WHITE100ParTxt
000477                 1721 _WHITE100ParTxt:
                       1722 ; rs232cmd.c  269       char code WHIT100ParTxt[]                               = "WHIT100";
000477 57484954453130  1723         DB      057H,048H,049H,054H,045H,031H,030H,030H,000H
       3000                 
                       1726         PUBLIC  _WHIT100ParTxt
000480                 1727 _WHIT100ParTxt:
                       1728 ; rs232cmd.c  270       char code BLACKParTxt[]                                 = "BLACK";       
                                                    // Black
000480 57484954313030  1729         DB      057H,048H,049H,054H,031H,030H,030H,000H
       00                   
                       1732         PUBLIC  _BLACKParTxt
000488                 1733 _BLACKParTxt:
                       1734 ; rs232cmd.c  271       char code BLACParTxt[]                                  = "BLAC";
000488 424C41434B00    1735         DB      042H,04CH,041H,043H,04BH,000H
                       1738         PUBLIC  _BLACParTxt
00048E                 1739 _BLACParTxt:
                       1740 ; rs232cmd.c  272       
                       1741 ; rs232cmd.c  273       char code SDICHECKParTxt[]                      = "SDICHECK";            
                                    // Check field
00048E 424C414300      1742         DB      042H,04CH,041H,043H,000H
                       1745         PUBLIC  _SDICHECKParTxt
000493                 1746 _SDICHECKParTxt:
                       1747 ; rs232cmd.c  274       char code SDICParTxt[]                                  = "SDIC";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
000493 53444943484543  1748         DB      053H,044H,049H,043H,048H,045H,043H,04BH,000H
       4B00                 
                       1751         PUBLIC  _SDICParTxt
00049C                 1752 _SDICParTxt:
                       1753 ; rs232cmd.c  275       char code DGREYParTxt[]                                 = "DGREY";       
                                                    // Digital grey
00049C 5344494300      1754         DB      053H,044H,049H,043H,000H
                       1757         PUBLIC  _DGREYParTxt
0004A1                 1758 _DGREYParTxt:
                       1759 ; rs232cmd.c  276       char code DGRParTxt[]                                   = "DGR";
0004A1 444752455900    1760         DB      044H,047H,052H,045H,059H,000H
                       1763         PUBLIC  _DGRParTxt
0004A7                 1764 _DGRParTxt:
                       1765 ; rs232cmd.c  277       char code STAIRCASE5ParTxt[]                    = "STAIRCASE5";         /
                            / 5-step staircase
0004A7 44475200        1766         DB      044H,047H,052H,000H
                       1769         PUBLIC  _STAIRCASE5ParTxt
0004AB                 1770 _STAIRCASE5ParTxt:
                       1771 ; rs232cmd.c  278       char code STA5ParTxt[]                                  = "STA5";
0004AB 53544149524341  1772         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,035H,000H
       53453500             
                       1775         PUBLIC  _STA5ParTxt
0004B6                 1776 _STA5ParTxt:
                       1777 ; rs232cmd.c  279       char code STAIRCASE10ParTxt[]           = "STAIRCASE10";                /
                            / 10-step staircase
0004B6 5354413500      1778         DB      053H,054H,041H,035H,000H
                       1781         PUBLIC  _STAIRCASE10ParTxt
0004BB                 1782 _STAIRCASE10ParTxt:
                       1783 ; rs232cmd.c  280       char code STA10ParTxt[]                                 = "STA10";
0004BB 53544149524341  1784         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,031H,030H,000H
       5345313000           
                       1787         PUBLIC  _STA10ParTxt
0004C7                 1788 _STA10ParTxt:
                       1789 ; rs232cmd.c  281       char code CROSSHATCHParTxt[]                    = "CROSSHATCH";         /
                            / Cross hatch
0004C7 535441313000    1790         DB      053H,054H,041H,031H,030H,000H
                       1793         PUBLIC  _CROSSHATCHParTxt
0004CD                 1794 _CROSSHATCHParTxt:
                       1795 ; rs232cmd.c  282       char code CROSParTxt[]                                  = "CROS";
0004CD 43524F53534841  1796         DB      043H,052H,04FH,053H,053H,048H,041H,054H,043H,048H,000H
       54434800             
                       1799         PUBLIC  _CROSParTxt
0004D8                 1800 _CROSParTxt:
                       1801 ; rs232cmd.c  283       char code PLUGEParTxt[]                                 = "PLUGE";       
                                                    // PLUGE
0004D8 43524F5300      1802         DB      043H,052H,04FH,053H,000H
                       1805         PUBLIC  _PLUGEParTxt
0004DD                 1806 _PLUGEParTxt:
                       1807 ; rs232cmd.c  284       char code PLUGParTxt[]                                  = "PLUG";
0004DD 504C55474500    1808         DB      050H,04CH,055H,047H,045H,000H
                       1811         PUBLIC  _PLUGParTxt
0004E3                 1812 _PLUGParTxt:
                       1813 ; rs232cmd.c  285       
                       1814 ; rs232cmd.c  286       char code ANALOGParTxt[]                                = "ANALOG";
0004E3 504C554700      1815         DB      050H,04CH,055H,047H,000H
                       1818         PUBLIC  _ANALOGParTxt
0004E8                 1819 _ANALOGParTxt:
                       1820 ; rs232cmd.c  287       char code ANALParTxt[]                                  = "ANAL";
0004E8 414E414C4F4700  1821         DB      041H,04EH,041H,04CH,04FH,047H,000H
                       1824         PUBLIC  _ANALParTxt
0004EF                 1825 _ANALParTxt:
                       1826 ; rs232cmd.c  288       char code AESEBUParTxt[]                                = "AESEBU";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
0004EF 414E414C00      1827         DB      041H,04EH,041H,04CH,000H
                       1830         PUBLIC  _AESEBUParTxt
0004F4                 1831 _AESEBUParTxt:
                       1832 ; rs232cmd.c  289       char code AESParTxt[]                                   = "AES";
0004F4 41455345425500  1833         DB      041H,045H,053H,045H,042H,055H,000H
                       1836         PUBLIC  _AESParTxt
0004FB                 1837 _AESParTxt:
                       1838 ; rs232cmd.c  290       
                       1839 ; rs232cmd.c  291       char code F441KHZParTxt[]                               = "F441KHZ";
0004FB 41455300        1840         DB      041H,045H,053H,000H
                       1843         PUBLIC  _F441KHZParTxt
0004FF                 1844 _F441KHZParTxt:
                       1845 ; rs232cmd.c  292       char code F48KHZParTxt[]                                = "F48KHZ";
0004FF 463434314B485A  1846         DB      046H,034H,034H,031H,04BH,048H,05AH,000H
       00                   
                       1849         PUBLIC  _F48KHZParTxt
000507                 1850 _F48KHZParTxt:
                       1851 ; rs232cmd.c  293       char code F45MHZParTxt[]                                = "F45MHZ";
000507 4634384B485A00  1852         DB      046H,034H,038H,04BH,048H,05AH,000H
                       1855         PUBLIC  _F45MHZParTxt
00050E                 1856 _F45MHZParTxt:
                       1857 ; rs232cmd.c  294       
                       1858 ; rs232cmd.c  295       char code S500HZParTxt[]                                = "S500HZ";      
                                                    // Stereo 500 Hz
00050E 4634354D485A00  1859         DB      046H,034H,035H,04DH,048H,05AH,000H
                       1862         PUBLIC  _S500HZParTxt
000515                 1863 _S500HZParTxt:
                       1864 ; rs232cmd.c  296       char code S1KHZParTxt[]                                 = "S1KHZ";       
                                            // Stereo 1 kHz
000515 53353030485A00  1865         DB      053H,035H,030H,030H,048H,05AH,000H
                       1868         PUBLIC  _S1KHZParTxt
00051C                 1869 _S1KHZParTxt:
                       1870 ; rs232cmd.c  297       char code SEBU1KHZParTxt[]                              = "SEBU1KHZ";    
                                            // Stereo EBU 1 kHz
00051C 53314B485A00    1871         DB      053H,031H,04BH,048H,05AH,000H
                       1874         PUBLIC  _SEBU1KHZParTxt
000522                 1875 _SEBU1KHZParTxt:
                       1876 ; rs232cmd.c  298       char code S8KHZParTxt[]                                 = "S8KHZ";       
                                                    // Stereo 8 kHz
000522 53454255314B48  1877         DB      053H,045H,042H,055H,031H,04BH,048H,05AH,000H
       5A00                 
                       1880         PUBLIC  _S8KHZParTxt
00052B                 1881 _S8KHZParTxt:
                       1882 ; rs232cmd.c  299       
                       1883 ; rs232cmd.c  300       char code SILENCEParTxt[]                               = "SILENCE";
00052B 53384B485A00    1884         DB      053H,038H,04BH,048H,05AH,000H
                       1887         PUBLIC  _SILENCEParTxt
000531                 1888 _SILENCEParTxt:
                       1889 ; rs232cmd.c  301       char code SILParTxt[]                                   = "SIL";
000531 53494C454E4345  1890         DB      053H,049H,04CH,045H,04EH,043H,045H,000H
       00                   
                       1893         PUBLIC  _SILParTxt
000539                 1894 _SILParTxt:
                       1895 ; rs232cmd.c  302       
                       1896 ; rs232cmd.c  303       char code DMYParTxt[]                                   = "DMY";
000539 53494C00        1897         DB      053H,049H,04CH,000H
                       1900         PUBLIC  _DMYParTxt
00053D                 1901 _DMYParTxt:
                       1902 ; rs232cmd.c  304       char code MDYParTxt[]                                   = "MDY";
00053D 444D5900        1903         DB      044H,04DH,059H,000H
                       1906         PUBLIC  _MDYParTxt
000541                 1907 _MDYParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
                       1908 ; rs232cmd.c  305       char code YMDParTxt[]                                   = "YMD";
000541 4D445900        1909         DB      04DH,044H,059H,000H
                       1912         PUBLIC  _YMDParTxt
000545                 1913 _YMDParTxt:
                       1914 ; rs232cmd.c  306       
                       1915 ; rs232cmd.c  307       char code BBParTxt[]                                    = "BB";
000545 594D4400        1916         DB      059H,04DH,044H,000H
                       1919         PUBLIC  _BBParTxt
000549                 1920 _BBParTxt:
                       1921 ; rs232cmd.c  308       char code SPGParTxt[]                                   = "SPG";
000549 424200          1922         DB      042H,042H,000H
                       1925         PUBLIC  _SPGParTxt
00054C                 1926 _SPGParTxt:
                       1927 ; rs232cmd.c  309       
                       1928 ; rs232cmd.c  310       char code OFFParTxt[]                                   = "OFF";
00054C 53504700        1929         DB      053H,050H,047H,000H
                       1932         PUBLIC  _OFFParTxt
000550                 1933 _OFFParTxt:
                       1934 ; rs232cmd.c  311       char code ONParTxt[]                                    = "ON";
000550 4F464600        1935         DB      04FH,046H,046H,000H
                       1938         PUBLIC  _ONParTxt
000554                 1939 _ONParTxt:
                       1940 ; rs232cmd.c  312       
                       1941 ; rs232cmd.c  313       char code UPParTxt[]                                    = "UP";
000554 4F4E00          1942         DB      04FH,04EH,000H
                       1945         PUBLIC  _UPParTxt
000557                 1946 _UPParTxt:
                       1947 ; rs232cmd.c  314       char code DOWNParTxt[]                                  = "DOWN";
000557 555000          1948         DB      055H,050H,000H
                       1951         PUBLIC  _DOWNParTxt
00055A                 1952 _DOWNParTxt:
                       1953 ; rs232cmd.c  315       
                       1954 ; rs232cmd.c  316       char code NORMALParTxt[]                                = "NORMAL";
00055A 444F574E00      1955         DB      044H,04FH,057H,04EH,000H
                       1958         PUBLIC  _NORMALParTxt
00055F                 1959 _NORMALParTxt:
                       1960 ; rs232cmd.c  317       char code NORMParTxt[]                                  = "NORM";
00055F 4E4F524D414C00  1961         DB      04EH,04FH,052H,04DH,041H,04CH,000H
                       1964         PUBLIC  _NORMParTxt
000566                 1965 _NORMParTxt:
                       1966 ; rs232cmd.c  318       
                       1967 ; rs232cmd.c  319       char code MINParTxt[]                                   = "MIN";
000566 4E4F524D00      1968         DB      04EH,04FH,052H,04DH,000H
                       1971         PUBLIC  _MINParTxt
00056B                 1972 _MINParTxt:
                       1973 ; rs232cmd.c  320       char code MAXParTxt[]                                   = "MAX";
00056B 4D494E00        1974         DB      04DH,049H,04EH,000H
                       1977         PUBLIC  _MAXParTxt
00056F                 1978 _MAXParTxt:
                       1979 ; rs232cmd.c  321       
                       1980 ; rs232cmd.c  322       char code UNLOCKEDParTxt[]                      = "UNLOCKED";
00056F 4D415800        1981         DB      04DH,041H,058H,000H
                       1984         PUBLIC  _UNLOCKEDParTxt
000573                 1985 _UNLOCKEDParTxt:
                       1986 ; rs232cmd.c  323       char code GENLOCKEDParTxt[]                     = "GENLOCKED";
000573 554E4C4F434B45  1987         DB      055H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       4400                 
                       1990         PUBLIC  _GENLOCKEDParTxt
00057C                 1991 _GENLOCKEDParTxt:
                       1992 ; rs232cmd.c  324       
                       1993 ; rs232cmd.c  325       
                       1994 ; rs232cmd.c  326       void CLSCommand( void);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
                       1995 ; rs232cmd.c  327       void ESECommand( void);
                       1996 ; rs232cmd.c  328       void ESRCommand( void);
                       1997 ; rs232cmd.c  329       void OPCCommand( void);
                       1998 ; rs232cmd.c  330       void SRECommand( void);
                       1999 ; rs232cmd.c  331       void STBCommand( void);
                       2000 ; rs232cmd.c  332       void TSTCommand( void);
                       2001 ; rs232cmd.c  333       void WAICommand( void);
                       2002 ; rs232cmd.c  334       void RSTCommand( void);
                       2003 ; rs232cmd.c  335       void IDNCommand( void);
                       2004 ; rs232cmd.c  336       void RCLCommand( void);
                       2005 ; rs232cmd.c  337       void SAVCommand( void);
                       2006 ; rs232cmd.c  338       
                       2007 ; rs232cmd.c  339       void SystemError( void);
                       2008 ; rs232cmd.c  340       void SystemVersion( void);
                       2009 ; rs232cmd.c  341       void SystemTime( void);
                       2010 ; rs232cmd.c  342       void SystemDate( void);
                       2011 ; rs232cmd.c  343       
                       2012 ; rs232cmd.c  344       void SystemPresetName( void);
                       2013 ; rs232cmd.c  345       void SystemPresetAuthor( void);
                       2014 ; rs232cmd.c  346       void SystemPresetDate( void);
                       2015 ; rs232cmd.c  347       void SystemPresetDownload( void);
                       2016 ; rs232cmd.c  348       void SystemPresetUpload( void);
                       2017 ; rs232cmd.c  349       
                       2018 ; rs232cmd.c  350       void StatusOperEvent( void);
                       2019 ; rs232cmd.c  351       void StatusOperCondition( void);
                       2020 ; rs232cmd.c  352       void StatusOperEnable( void);
                       2021 ; rs232cmd.c  353       void StatusQuestEvent( void);
                       2022 ; rs232cmd.c  354       void StatusQuestCondition( void);
                       2023 ; rs232cmd.c  355       void StatusQuestEnable( void);
                       2024 ; rs232cmd.c  356       void StatusPreset( void);
                       2025 ; rs232cmd.c  357       
                       2026 ; rs232cmd.c  358       void GenlockGen( void);
                       2027 ; rs232cmd.c  359       void GenlockGenSystem( void);
                       2028 ; rs232cmd.c  360       void GenlockGenDelay( void);
                       2029 ; rs232cmd.c  361       void GenlockGenCalibrateEnable( void);
                       2030 ; rs232cmd.c  362       void GenlockGenCalibrateAdjust( void);
                       2031 ; rs232cmd.c  363       void GenlockGenCalibrateStore( void);
                       2032 ; rs232cmd.c  364       
                       2033 ; rs232cmd.c  365       void BBGenSuffix( void);
                       2034 ; rs232cmd.c  366       void BBGen( void);
                       2035 ; rs232cmd.c  367       void BBGenSystem( void);
                       2036 ; rs232cmd.c  368       void BBGenDelay( void);
                       2037 ; rs232cmd.c  369       void BBGenScHPhase( void);
                       2038 ; rs232cmd.c  370       
                       2039 ; rs232cmd.c  371       void TSGen( void);
                       2040 ; rs232cmd.c  372       void TSGenPattern( void);
                       2041 ; rs232cmd.c  373       void TSGenSystem( void);
                       2042 ; rs232cmd.c  374       void TSGenDelay( void);
                       2043 ; rs232cmd.c  375       void TSGenScHPhase( void);
                       2044 ; rs232cmd.c  376       void TSGenEmbAudioSignal( void);
                       2045 ; rs232cmd.c  377       
                       2046 ; rs232cmd.c  378       void AudioGenOutput( void);
                       2047 ; rs232cmd.c  379       
                       2048 ; rs232cmd.c  380       void AudioGenAnalog( void);
                       2049 ; rs232cmd.c  381       void AudioGenAnalogSignal( void);
                       2050 ; rs232cmd.c  382       void AudioGenAnalogLevel( void);
                       2051 ; rs232cmd.c  383       void AudioGenAnalogClick( void);
                       2052 ; rs232cmd.c  384       
                       2053 ; rs232cmd.c  385       void AudioGenAESEBU( void);
                       2054 ; rs232cmd.c  386       void AudioGenAESEBUSystem( void);
                       2055 ; rs232cmd.c  387       void AudioGenAESEBUSignal( void);
                       2056 ; rs232cmd.c  388       void AudioGenAESEBULevel( void);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
                       2057 ; rs232cmd.c  389       void AudioGenAESEBUTiming( void);
                       2058 ; rs232cmd.c  390       void AudioGenAESEBUWordClock( void);
                       2059 ; rs232cmd.c  391       void AudioGenAESEBUClick( void);
                       2060 ; rs232cmd.c  392       
                       2061 ; rs232cmd.c  393       void FactPassword( void);
                       2062 ; rs232cmd.c  394       void FactReset( void);
                       2063 ; rs232cmd.c  395       void FactV24Command( void);
                       2064 ; rs232cmd.c  396       void FactV24Transparent( void);
                       2065 ; rs232cmd.c  397       
                       2066 ; rs232cmd.c  398       void FactChecksumCode( void);
                       2067 ; rs232cmd.c  399       void FactChecksumPLD( void);
                       2068 ; rs232cmd.c  400       void FactChecksumEmbAudio( void);
                       2069 ; rs232cmd.c  401       void FactChecksumPattern( void);
                       2070 ; rs232cmd.c  402       void FactChecksumRange( void);
                       2071 ; rs232cmd.c  403       
                       2072 ; rs232cmd.c  404       void FactMainVersion( void);
                       2073 ; rs232cmd.c  405       void FactMainIDNCompany( void);
                       2074 ; rs232cmd.c  406       void FactMainIDNType( void);
                       2075 ; rs232cmd.c  407       void FactMainIDNKUNumber( void);
                       2076 ; rs232cmd.c  408       void FactMainIDNSWRevision( void);
                       2077 ; rs232cmd.c  409       
                       2078 ; rs232cmd.c  410       void FactMainSystem( void);
                       2079 ; rs232cmd.c  411       void FactMainFMSDateProd( void);
                       2080 ; rs232cmd.c  412       void FactMainFMSDateUpd( void);
                       2081 ; rs232cmd.c  413       
                       2082 ; rs232cmd.c  414       void FactGenlockGenDate( void);
                       2083 ; rs232cmd.c  415       void FactGenlockGenVersion( void);
                       2084 ; rs232cmd.c  416       void FactGenlockGenFRefDate( void);
                       2085 ; rs232cmd.c  417       void FactGenlockGenFRefDAC( void);
                       2086 ; rs232cmd.c  418       void FactGenlockGenURefDate( void);
                       2087 ; rs232cmd.c  419       void FactGenlockGenURefDAC( void);
                       2088 ; rs232cmd.c  420       void FactGenlockGenHPHZero( void);
                       2089 ; rs232cmd.c  421       void FactGenlockGenPhase( void);
                       2090 ; rs232cmd.c  422       
                       2091 ; rs232cmd.c  423       void FactBBGenDate( void);
                       2092 ; rs232cmd.c  424       void FactBBGenVersion( void);
                       2093 ; rs232cmd.c  425       void FactBBGenSignal( void);
                       2094 ; rs232cmd.c  426       void FactBBGenPhase( void);
                       2095 ; rs232cmd.c  427       void FactBBGenScHPhase( void);
                       2096 ; rs232cmd.c  428       void FactBBGenDAC( void);
                       2097 ; rs232cmd.c  429       
                       2098 ; rs232cmd.c  430       void FactTSGenDate( void);
                       2099 ; rs232cmd.c  431       void FactTSGenAGain( void);
                       2100 ; rs232cmd.c  432       void FactTSGenCGain( void);
                       2101 ; rs232cmd.c  433       void FactTSGenPhase( void);
                       2102 ; rs232cmd.c  434       void FactTSGenScHPhase( void);
                       2103 ; rs232cmd.c  435       
                       2104 ; rs232cmd.c  436       void FactAudioGenStatus( void);
                       2105 ; rs232cmd.c  437       void FactAudioGenDate( void);
                       2106 ; rs232cmd.c  438       void FactAudioGenLevel( void);
                       2107 ; rs232cmd.c  439       
                       2108 ; rs232cmd.c  440       void FactPLDVersion( void);
                       2109 ; rs232cmd.c  441       void FactTCXOStatus( void);
                       2110 ; rs232cmd.c  442       void FactMultiMediaChip( void);
                       2111 ; rs232cmd.c  443       
                       2112 ; rs232cmd.c  444       int FindParameter( char* par, struct PAR_STRUCT code* TmpPtr);
                       2113 ; rs232cmd.c  445       
                       2114 ; rs232cmd.c  446       long FLTToSamples( UC system, int F, int L, float T);
                       2115 ; rs232cmd.c  447       void PrintSamplesToFLT( UC system, long samples);
                       2116 ; rs232cmd.c  448       
                       2117 ; rs232cmd.c  449       // **********************************************************************
                            ****
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
                       2118 ; rs232cmd.c  450       struct CMD_STRUCT code Mandated[12] = {
00057C 47454E4C4F434B  2119         DB      047H,045H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       454400               
                       2140         PUBLIC  _Mandated
                       2141         ALIGN   1
000586                 2142 _Mandated:
000586 rrrrrrrrrrrrrr  2143         DD      _CLSCmdTxt
       rr                   
00058A 00000000        2144         DD      000000000H
00058E rrrrrrrrrrrrrr  2145         DD      _Mandated+24
       rr                   
000592 00000000000000  2146         DD      000000000H,000000000H
       00                   
00059A rrrrrrrrrrrrrr  2147         DD      _CLSCommand,_ESECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005A2 00000000        2148         DD      000000000H
0005A6 rrrrrrrrrrrrrr  2149         DD      _Mandated+48
       rr                   
0005AA 00000000000000  2150         DD      000000000H,000000000H
       00                   
0005B2 rrrrrrrrrrrrrr  2151         DD      _ESECommand,_ESRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005BA 00000000        2152         DD      000000000H
0005BE rrrrrrrrrrrrrr  2153         DD      _Mandated+72
       rr                   
0005C2 00000000000000  2154         DD      000000000H,000000000H
       00                   
0005CA rrrrrrrrrrrrrr  2155         DD      _ESRCommand,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005D2 00000000        2156         DD      000000000H
0005D6 rrrrrrrrrrrrrr  2157         DD      _Mandated+96
       rr                   
0005DA 00000000000000  2158         DD      000000000H,000000000H
       00                   
0005E2 rrrrrrrrrrrrrr  2159         DD      _IDNCommand,_OPCCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005EA 00000000        2160         DD      000000000H
0005EE rrrrrrrrrrrrrr  2161         DD      _Mandated+120
       rr                   
0005F2 00000000000000  2162         DD      000000000H,000000000H
       00                   
0005FA rrrrrrrrrrrrrr  2163         DD      _OPCCommand,_RSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000602 00000000        2164         DD      000000000H
000606 rrrrrrrrrrrrrr  2165         DD      _Mandated+144
       rr                   
00060A 00000000000000  2166         DD      000000000H,000000000H
       00                   
000612 rrrrrrrrrrrrrr  2167         DD      _RSTCommand,_SRECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00061A 00000000        2168         DD      000000000H
00061E rrrrrrrrrrrrrr  2169         DD      _Mandated+168
       rr                   
000622 00000000000000  2170         DD      000000000H,000000000H
       00                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
00062A rrrrrrrrrrrrrr  2171         DD      _SRECommand,_STBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000632 00000000        2172         DD      000000000H
000636 rrrrrrrrrrrrrr  2173         DD      _Mandated+192
       rr                   
00063A 00000000000000  2174         DD      000000000H,000000000H
       00                   
000642 rrrrrrrrrrrrrr  2175         DD      _STBCommand,_TSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00064A 00000000        2176         DD      000000000H
00064E rrrrrrrrrrrrrr  2177         DD      _Mandated+216
       rr                   
000652 00000000000000  2178         DD      000000000H,000000000H
       00                   
00065A rrrrrrrrrrrrrr  2179         DD      _TSTCommand,_RCLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000662 00000000        2180         DD      000000000H
000666 rrrrrrrrrrrrrr  2181         DD      _Mandated+240
       rr                   
00066A 00000000000000  2182         DD      000000000H,000000000H
       00                   
000672 rrrrrrrrrrrrrr  2183         DD      _RCLCommand,_SAVCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00067A 00000000        2184         DD      000000000H
00067E rrrrrrrrrrrrrr  2185         DD      _Mandated+264
       rr                   
000682 00000000000000  2186         DD      000000000H,000000000H
       00                   
00068A rrrrrrrrrrrrrr  2187         DD      _SAVCommand,_WAICmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000692 00000000000000  2188         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2189 ; rs232cmd.c  451               { CLSCmdTxt, NULL, &Mandated[1],  NULL, NONE, CLSCommand},
                       2190 ; rs232cmd.c  452               { ESECmdTxt, NULL, &Mandated[2],  NULL, NONE, ESECommand},
                       2191 ; rs232cmd.c  453               { ESRCmdTxt, NULL, &Mandated[3],  NULL, NONE, ESRCommand},
                       2192 ; rs232cmd.c  454               { IDNCmdTxt, NULL, &Mandated[4],  NULL, NONE, IDNCommand},
                       2193 ; rs232cmd.c  455               { OPCCmdTxt, NULL, &Mandated[5],  NULL, NONE, OPCCommand},
                       2194 ; rs232cmd.c  456               { RSTCmdTxt, NULL, &Mandated[6],  NULL, NONE, RSTCommand},
                       2195 ; rs232cmd.c  457               { SRECmdTxt, NULL, &Mandated[7],  NULL, NONE, SRECommand},
                       2196 ; rs232cmd.c  458               { STBCmdTxt, NULL, &Mandated[8],  NULL, NONE, STBCommand},
                       2197 ; rs232cmd.c  459               { TSTCmdTxt, NULL, &Mandated[9],  NULL, NONE, TSTCommand},
                       2198 ; rs232cmd.c  460               { RCLCmdTxt, NULL, &Mandated[10], NULL, NONE, RCLCommand},
                       2199 ; rs232cmd.c  461               { SAVCmdTxt, NULL, &Mandated[11], NULL, NONE, SAVCommand},
                       2200 ; rs232cmd.c  462               { WAICmdTxt, NULL, NULL         , NULL, NONE, WAICommand}
                       2201 ; rs232cmd.c  463       };
                       2202 ; rs232cmd.c  464       
                       2203 ; rs232cmd.c  465       struct CMD_STRUCT code Subsystem[9] = {
0006A2 rrrrrrrrrrrrrr  2204         DD      _WAICommand
       rr                   
                       2208         PUBLIC  _Subsystem
                       2209         ALIGN   1
0006A6                 2210 _Subsystem:
0006A6 rrrrrrrrrrrrrr  2211         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
0006AE rrrrrrrrrrrrrr  2212         DD      _Subsystem+24
       rr                   
0006B2 rrrrrrrrrrrrrr  2213         DD      _System
       rr                   
0006B6 00000000000000  2214         DD      000000000H,000000000H
       00                   
0006BE rrrrrrrrrrrrrr  2215         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006C6 rrrrrrrrrrrrrr  2216         DD      _Subsystem+48
       rr                   
0006CA rrrrrrrrrrrrrr  2217         DD      _Status
       rr                   
0006CE 00000000000000  2218         DD      000000000H,000000000H
       00                   
0006D6 rrrrrrrrrrrrrr  2219         DD      _DIAGNOSTICCmdTxt,_DIAGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006DE rrrrrrrrrrrrrr  2220         DD      _Subsystem+72
       rr                   
0006E2 00000000000000  2221         DD      000000000H,000000000H,000000000H
       0000000000           
0006EE rrrrrrrrrrrrrr  2222         DD      _MONITORCmdTxt,_MONCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006F6 rrrrrrrrrrrrrr  2223         DD      _Subsystem+96
       rr                   
0006FA 00000000000000  2224         DD      000000000H,000000000H,000000000H
       0000000000           
000706 rrrrrrrrrrrrrr  2225         DD      _INPUTCmdTxt,_INPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00070E rrrrrrrrrrrrrr  2226         DD      _Subsystem+120
       rr                   
000712 rrrrrrrrrrrrrr  2227         DD      _Input
       rr                   
000716 00000000000000  2228         DD      000000000H,000000000H
       00                   
00071E rrrrrrrrrrrrrr  2229         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000726 rrrrrrrrrrrrrr  2230         DD      _Subsystem+144
       rr                   
00072A rrrrrrrrrrrrrr  2231         DD      _Output
       rr                   
00072E 00000000000000  2232         DD      000000000H,000000000H
       00                   
000736 rrrrrrrrrrrrrr  2233         DD      _USERCmdTxt,_USERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00073E rrrrrrrrrrrrrr  2234         DD      _Subsystem+168
       rr                   
000742 00000000000000  2235         DD      000000000H,000000000H,000000000H
       0000000000           
00074E rrrrrrrrrrrrrr  2236         DD      _MEASURECmdTxt,_MEASCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000756 rrrrrrrrrrrrrr  2237         DD      _Subsystem+192
       rr                   
00075A 00000000000000  2238         DD      000000000H,000000000H,000000000H
       0000000000           
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
000766 rrrrrrrrrrrrrr  2239         DD      _FACTORYCmdTxt,_FACTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00076E 00000000        2240         DD      000000000H
000772 rrrrrrrrrrrrrr  2241         DD      _Factory
       rr                   
                       2242 ; rs232cmd.c  466               { SYSTEMCmdTxt,   SYSTCmdTxt, &Subsystem[1], &System[0],  NONE, N
                            ONE},
                       2243 ; rs232cmd.c  467               { STATUSCmdTxt,           STATCmdTxt, &Subsystem[2], &Status[0], 
                             NONE, NONE},
                       2244 ; rs232cmd.c  468               { DIAGNOSTICCmdTxt, DIAGCmdTxt, &Subsystem[3], NULL,             
                              NONE, NONE},
                       2245 ; rs232cmd.c  469               { MONITORCmdTxt,          MONCmdTxt,  &Subsystem[4], NULL,       
                                       NONE, NONE},
                       2246 ; rs232cmd.c  470               { INPUTCmdTxt,    INPCmdTxt,  &Subsystem[5], &Input[0],   NONE, N
                            ONE},
                       2247 ; rs232cmd.c  471               { OUTPUTCmdTxt,           OUTPCmdTxt, &Subsystem[6], &Output[0], 
                             NONE, NONE},
                       2248 ; rs232cmd.c  472               { USERCmdTxt,             USERCmdTxt, &Subsystem[7], NULL,       
                                       NONE, NONE},
                       2249 ; rs232cmd.c  473               { MEASURECmdTxt,          MEASCmdTxt, &Subsystem[8], NULL,       
                                       NONE, NONE},
                       2250 ; rs232cmd.c  474               { FACTORYCmdTxt,          FACTCmdTxt, NULL,                      
                             &Factory[0], NONE, NONE},
                       2251 ; rs232cmd.c  475       };
                       2252 ; rs232cmd.c  476       
                       2253 ; rs232cmd.c  477       // **********************************************************************
                            ****
                       2254 ; rs232cmd.c  478       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2255 ; rs232cmd.c  479                       SYSTem
                       2256 ; rs232cmd.c  480                               :ERRor?
                       2257 ; rs232cmd.c  481               :VERSion?
                       2258 ; rs232cmd.c  482                   :PRESet<?>
                       2259 ; rs232cmd.c  483                       [:ACTIVE?]
                       2260 ; rs232cmd.c  484                       :RECall<?>      1 .. 4
                       2261 ; rs232cmd.c  485                 :STORe                        1 .. 4
                       2262 ; rs232cmd.c  486               :NAMe<?>                1 .. 4 , <name>
                       2263 ; rs232cmd.c  487               :AUTHor<?>      1 .. 4 , <author name>
                       2264 ; rs232cmd.c  488                     :DATE<?>          1 .. 4[, <year>,<month>,<date>]
                       2265 ; rs232cmd.c  489                                       :DOWNload               1 .. 4
                       2266 ; rs232cmd.c  490                                       :UPLoad                 1 .. 4
                       2267 ; rs232cmd.c  491               :EVENtlog
                       2268 ; rs232cmd.c  492               :DATE
                       2269 ; rs232cmd.c  493               :TIME
                       2270 ; rs232cmd.c  494       */
                       2271 ; rs232cmd.c  495       struct CMD_STRUCT code System[6] = {
000776 00000000000000  2272         DD      000000000H,000000000H
       00                   
                       2276         PUBLIC  _System
                       2277         ALIGN   1
00077E                 2278 _System:
00077E rrrrrrrrrrrrrr  2279         DD      _ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000786 rrrrrrrrrrrrrr  2280         DD      _System+24
       rr                   
00078A 00000000000000  2281         DD      000000000H,000000000H
       00                   
000792 rrrrrrrrrrrrrr  2282         DD      _SystemError,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
00079E rrrrrrrrrrrrrr  2283         DD      _System+48
       rr                   
0007A2 00000000000000  2284         DD      000000000H,000000000H
       00                   
0007AA rrrrrrrrrrrrrr  2285         DD      _SystemVersion,_PRESETCmdTxt,_PRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007B6 rrrrrrrrrrrrrr  2286         DD      _System+72
       rr                   
0007BA rrrrrrrrrrrrrr  2287         DD      _SystemLevel1
       rr                   
0007BE 00000000        2288         DD      000000000H
0007C2 rrrrrrrrrrrrrr  2289         DD      _RCLCommand,_EVENTLOGCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007CE rrrrrrrrrrrrrr  2290         DD      _System+96
       rr                   
0007D2 00000000000000  2291         DD      000000000H,000000000H,000000000H
       0000000000           
0007DE rrrrrrrrrrrrrr  2292         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0007E6 rrrrrrrrrrrrrr  2293         DD      _System+120
       rr                   
0007EA 00000000000000  2294         DD      000000000H,000000000H,000000000H
       0000000000           
0007F6 rrrrrrrrrrrrrr  2295         DD      _TIMECmdTxt,_TIMECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       2296 ; rs232cmd.c  496               { ERRORCmdTxt,  ERRCmdTxt,      &System[1], NULL,                
                                            NONE, SystemError},
                       2297 ; rs232cmd.c  497               { VERSIONCmdTxt,        VERSCmdTxt, &System[2], NULL,            
                                            NONE, SystemVersion},
                       2298 ; rs232cmd.c  498               { PRESETCmdTxt,         PRESCmdTxt, &System[3], &SystemLevel1[0],
                             NONE, RCLCommand},
                       2299 ; rs232cmd.c  499               { EVENTLOGCmdTxt, EVENCmdTxt, &System[4], NULL,                  
                                            NONE, NONE},
                       2300 ; rs232cmd.c  500               { DATECmdTxt,           DATECmdTxt, &System[5], NULL,            
                                            NONE, NONE},
                       2301 ; rs232cmd.c  501               { TIMECmdTxt,           TIMECmdTxt, NULL,               NULL,    
                                                    NONE, NONE}
                       2302 ; rs232cmd.c  502       };
                       2303 ; rs232cmd.c  503       
                       2304 ; rs232cmd.c  504       struct CMD_STRUCT code SystemLevel1[7] = {
0007FE 00000000000000  2305         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2309         PUBLIC  _SystemLevel1
                       2310         ALIGN   1
00080E                 2311 _SystemLevel1:
00080E rrrrrrrrrrrrrr  2312         DD      _RECALLCmdTxt,_RECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000816 rrrrrrrrrrrrrr  2313         DD      _SystemLevel1+24
       rr                   
00081A 00000000000000  2314         DD      000000000H,000000000H
       00                   
000822 rrrrrrrrrrrrrr  2315         DD      _RCLCommand,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
00082E rrrrrrrrrrrrrr  2316         DD      _SystemLevel1+48
       rr                   
000832 00000000000000  2317         DD      000000000H,000000000H
       00                   
00083A rrrrrrrrrrrrrr  2318         DD      _SAVCommand,_NAMECmdTxt,_NAMECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000846 rrrrrrrrrrrrrr  2319         DD      _SystemLevel1+72
       rr                   
00084A 00000000000000  2320         DD      000000000H,000000000H
       00                   
000852 rrrrrrrrrrrrrr  2321         DD      _SystemPresetName,_AUTHORCmdTxt,_AUTHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00085E rrrrrrrrrrrrrr  2322         DD      _SystemLevel1+96
       rr                   
000862 00000000000000  2323         DD      000000000H,000000000H
       00                   
00086A rrrrrrrrrrrrrr  2324         DD      _SystemPresetAuthor,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000876 rrrrrrrrrrrrrr  2325         DD      _SystemLevel1+120
       rr                   
00087A 00000000000000  2326         DD      000000000H,000000000H
       00                   
000882 rrrrrrrrrrrrrr  2327         DD      _SystemPresetDate,_DOWNLOADCmdTxt,_DOWNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00088E rrrrrrrrrrrrrr  2328         DD      _SystemLevel1+144
       rr                   
000892 00000000000000  2329         DD      000000000H,000000000H
       00                   
00089A rrrrrrrrrrrrrr  2330         DD      _SystemPresetDownload,_UPLOADCmdTxt,_UPLCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008A6 00000000000000  2331         DD      000000000H,000000000H,000000000H
       0000000000           
                       2332 ; rs232cmd.c  505               { RECALLCmdTxt,   RECCmdTxt,    &SystemLevel1[1], NULL, NONE, RCL
                            Command},
                       2333 ; rs232cmd.c  506               { STORECmdTxt,    STORCmdTxt, &SystemLevel1[2], NULL, NONE, SAVCo
                            mmand},
                       2334 ; rs232cmd.c  507               { NAMECmdTxt,      NAMECmdTxt, &SystemLevel1[3],        NULL, NON
                            E, SystemPresetName},
                       2335 ; rs232cmd.c  508               { AUTHORCmdTxt,   AUTHCmdTxt, &SystemLevel1[4], NULL, NONE, Syste
                            mPresetAuthor},
                       2336 ; rs232cmd.c  509               { DATECmdTxt,      DATECmdTxt, &SystemLevel1[5],        NULL, NON
                            E, SystemPresetDate},
                       2337 ; rs232cmd.c  510               { DOWNLOADCmdTxt, DOWNCmdTxt,   &SystemLevel1[6],       NULL, NON
                            E, SystemPresetDownload},
                       2338 ; rs232cmd.c  511               { UPLOADCmdTxt,         UPLCmdTxt,      NULL,                    
                                    NULL, NONE, SystemPresetUpload},
                       2339 ; rs232cmd.c  512       };
                       2340 ; rs232cmd.c  513       
                       2341 ; rs232cmd.c  514       // **********************************************************************
                            ****
                       2342 ; rs232cmd.c  515       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2343 ; rs232cmd.c  516                       STATus
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
                       2344 ; rs232cmd.c  517                               :OPERation
                       2345 ; rs232cmd.c  518                               :EVENt?
                       2346 ; rs232cmd.c  519                     :CONDition?
                       2347 ; rs232cmd.c  520                   :ENABle<?>  0 .. 65535
                       2348 ; rs232cmd.c  521                       :QUEStionable
                       2349 ; rs232cmd.c  522                       :EVENt?
                       2350 ; rs232cmd.c  523                     :CONDition?
                       2351 ; rs232cmd.c  524                   :ENABle<?>  0 .. 65535
                       2352 ; rs232cmd.c  525                               :PRESet                         TBD
                       2353 ; rs232cmd.c  526                   :PT5201?
                       2354 ; rs232cmd.c  527       */
                       2355 ; rs232cmd.c  528       struct CMD_STRUCT code Status[3] = {
0008B2 rrrrrrrrrrrrrr  2356         DD      _SystemPresetUpload
       rr                   
                       2360         PUBLIC  _Status
                       2361         ALIGN   1
0008B6                 2362 _Status:
0008B6 rrrrrrrrrrrrrr  2363         DD      _OPERATIONCmdTxt,_OPERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0008BE rrrrrrrrrrrrrr  2364         DD      _Status+24
       rr                   
0008C2 rrrrrrrrrrrrrr  2365         DD      _StatusLevel1_1
       rr                   
0008C6 00000000        2366         DD      000000000H
0008CA rrrrrrrrrrrrrr  2367         DD      _StatusOperEvent,_QUESTIONABLECmdTxt,_QUESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008D6 rrrrrrrrrrrrrr  2368         DD      _Status+48
       rr                   
0008DA rrrrrrrrrrrrrr  2369         DD      _StatusLevel1_2
       rr                   
0008DE 00000000        2370         DD      000000000H
0008E2 rrrrrrrrrrrrrr  2371         DD      _StatusQuestEvent,_PRESETCmdTxt,_PRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008EE 00000000000000  2372         DD      000000000H,000000000H,000000000H
       0000000000           
                       2373 ; rs232cmd.c  529               { OPERATIONCmdTxt,       OPERCmdTxt, &Status[1], &StatusLevel1_1[
                            0], NONE, StatusOperEvent},
                       2374 ; rs232cmd.c  530               { QUESTIONABLECmdTxt, QUESCmdTxt, &Status[2], &StatusLevel1_2[0],
                             NONE, StatusQuestEvent},
                       2375 ; rs232cmd.c  531               { PRESETCmdTxt,                  PRESCmdTxt, NULL,               
                            NULL,                                   NONE, StatusPreset},
                       2376 ; rs232cmd.c  532       };
                       2377 ; rs232cmd.c  533       
                       2378 ; rs232cmd.c  534       struct CMD_STRUCT code StatusLevel1_1[3] = {
0008FA rrrrrrrrrrrrrr  2379         DD      _StatusPreset
       rr                   
                       2382         PUBLIC  _StatusLevel1_1
                       2383         ALIGN   1
0008FE                 2384 _StatusLevel1_1:
0008FE rrrrrrrrrrrrrr  2385         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000906 rrrrrrrrrrrrrr  2386         DD      _StatusLevel1_1+24
       rr                   
00090A 00000000000000  2387         DD      000000000H,000000000H
       00                   
000912 rrrrrrrrrrrrrr  2388         DD      _StatusOperEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrr               
00091E rrrrrrrrrrrrrr  2389         DD      _StatusLevel1_1+48
       rr                   
000922 00000000000000  2390         DD      000000000H,000000000H
       00                   
00092A rrrrrrrrrrrrrr  2391         DD      _StatusOperCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000936 00000000000000  2392         DD      000000000H,000000000H,000000000H
       0000000000           
                       2393 ; rs232cmd.c  535               { EVENTCmdTxt,   EVENCmdTxt, &StatusLevel1_1[1], NULL, NONE, Stat
                            usOperEvent},
                       2394 ; rs232cmd.c  536               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_1[2], NULL, NONE, St
                            atusOperCondition},
                       2395 ; rs232cmd.c  537               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                       NULL, NONE, StatusOperEnable},
                       2396 ; rs232cmd.c  538       };
                       2397 ; rs232cmd.c  539       
                       2398 ; rs232cmd.c  540       struct CMD_STRUCT code StatusLevel1_2[3] = {
000942 rrrrrrrrrrrrrr  2399         DD      _StatusOperEnable
       rr                   
                       2402         PUBLIC  _StatusLevel1_2
                       2403         ALIGN   1
000946                 2404 _StatusLevel1_2:
000946 rrrrrrrrrrrrrr  2405         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00094E rrrrrrrrrrrrrr  2406         DD      _StatusLevel1_2+24
       rr                   
000952 00000000000000  2407         DD      000000000H,000000000H
       00                   
00095A rrrrrrrrrrrrrr  2408         DD      _StatusQuestEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000966 rrrrrrrrrrrrrr  2409         DD      _StatusLevel1_2+48
       rr                   
00096A 00000000000000  2410         DD      000000000H,000000000H
       00                   
000972 rrrrrrrrrrrrrr  2411         DD      _StatusQuestCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00097E 00000000000000  2412         DD      000000000H,000000000H,000000000H
       0000000000           
                       2413 ; rs232cmd.c  541               { EVENTCmdTxt,           EVENCmdTxt, &StatusLevel1_2[1], NULL, NO
                            NE, StatusQuestEvent},
                       2414 ; rs232cmd.c  542               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_2[2], NULL, NONE, St
                            atusQuestCondition},
                       2415 ; rs232cmd.c  543               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                            NULL, NONE, StatusQuestEnable},
                       2416 ; rs232cmd.c  544       };
                       2417 ; rs232cmd.c  545       
                       2418 ; rs232cmd.c  546       
                       2419 ; rs232cmd.c  547       // **********************************************************************
                            ****
                       2420 ; rs232cmd.c  548       /*      CMD:    SUB1:   SUB2:           PARM:
                       2421 ; rs232cmd.c  549                       INPut
                       2422 ; rs232cmd.c  550                               :GENLOCK<?>
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
                       2423 ; rs232cmd.c  551                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2424 ; rs232cmd.c  552                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2425 ; rs232cmd.c  553                                       :CALibrate
                       2426 ; rs232cmd.c  554                                               :ENABle         OFF|ON
                       2427 ; rs232cmd.c  555                                               :ADJust         UP|DOWN|MIN|MAX
                       2428 ; rs232cmd.c  556                                               :STORe
                       2429 ; rs232cmd.c  557                                                                                
                                    
                       2430 ; rs232cmd.c  558       */
                       2431 ; rs232cmd.c  559       //***********************************************************************
                            ***
                       2432 ; rs232cmd.c  560       struct CMD_STRUCT code Input[1] = {
00098A rrrrrrrrrrrrrr  2433         DD      _StatusQuestEnable
       rr                   
                       2437         PUBLIC  _Input
                       2438         ALIGN   1
00098E rrrrrrrrrrrrrr  2439 _Input: DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000996 00000000        2440         DD      000000000H
00099A rrrrrrrrrrrrrr  2441         DD      _GenlockLevel1
       rr                   
00099E 00000000        2442         DD      000000000H
                       2443 ; rs232cmd.c  561               { GENLOCKCmdTxt, GENLCmdTxt, NULL, &GenlockLevel1[0], NONE, Genlo
                            ckGen},
                       2444 ; rs232cmd.c  562       };
                       2445 ; rs232cmd.c  563       
                       2446 ; rs232cmd.c  564       struct CMD_STRUCT code GenlockLevel1[3] = {
0009A2 rrrrrrrrrrrrrr  2447         DD      _GenlockGen
       rr                   
                       2450         PUBLIC  _GenlockLevel1
                       2451         ALIGN   1
0009A6                 2452 _GenlockLevel1:
0009A6 rrrrrrrrrrrrrr  2453         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009AE rrrrrrrrrrrrrr  2454         DD      _GenlockLevel1+24
       rr                   
0009B2 00000000000000  2455         DD      000000000H,000000000H
       00                   
0009BA rrrrrrrrrrrrrr  2456         DD      _GenlockGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009C6 rrrrrrrrrrrrrr  2457         DD      _GenlockLevel1+48
       rr                   
0009CA 00000000000000  2458         DD      000000000H,000000000H
       00                   
0009D2 rrrrrrrrrrrrrr  2459         DD      _GenlockGenDelay,_CALIBRATECmdTxt,_CALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009DE 00000000        2460         DD      000000000H
0009E2 rrrrrrrrrrrrrr  2461         DD      _GenlockLevel1_1
       rr                   
                       2462 ; rs232cmd.c  565               { SYSTEMCmdTxt,          SYSTCmdTxt, &GenlockLevel1[1], NULL,    
                                                              NONE, GenlockGenSystem},
                       2463 ; rs232cmd.c  566               { DELAYCmdTxt,   DELCmdTxt,  &GenlockLevel1[2], NULL,            
                                                      NONE, GenlockGenDelay},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
                       2464 ; rs232cmd.c  567               { CALIBRATECmdTxt, CALCmdTxt,  NULL,                             
                             &GenlockLevel1_1[0], NONE, NONE},
                       2465 ; rs232cmd.c  568       };
                       2466 ; rs232cmd.c  569       
                       2467 ; rs232cmd.c  570       struct CMD_STRUCT code GenlockLevel1_1[3] = {
0009E6 00000000000000  2468         DD      000000000H,000000000H
       00                   
                       2471         PUBLIC  _GenlockLevel1_1
                       2472         ALIGN   1
0009EE                 2473 _GenlockLevel1_1:
0009EE rrrrrrrrrrrrrr  2474         DD      _ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009F6 rrrrrrrrrrrrrr  2475         DD      _GenlockLevel1_1+24
       rr                   
0009FA 00000000000000  2476         DD      000000000H,000000000H
       00                   
000A02 rrrrrrrrrrrrrr  2477         DD      _GenlockGenCalibrateEnable,_ADJUSTCmdTxt,_ADJCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A0E rrrrrrrrrrrrrr  2478         DD      _GenlockLevel1_1+48
       rr                   
000A12 00000000000000  2479         DD      000000000H,000000000H
       00                   
000A1A rrrrrrrrrrrrrr  2480         DD      _GenlockGenCalibrateAdjust,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A26 00000000000000  2481         DD      000000000H,000000000H,000000000H
       0000000000           
                       2482 ; rs232cmd.c  571               { ENABLECmdTxt, ENABCmdTxt, &GenlockLevel1_1[1], NULL, NONE, Genl
                            ockGenCalibrateEnable},
                       2483 ; rs232cmd.c  572               { ADJUSTCmdTxt, ADJCmdTxt,  &GenlockLevel1_1[2], NULL, NONE, Genl
                            ockGenCalibrateAdjust},
                       2484 ; rs232cmd.c  573               { STORECmdTxt,  STORCmdTxt, NULL,                                
                                     NULL, NONE, GenlockGenCalibrateStore},
                       2485 ; rs232cmd.c  574       };
                       2486 ; rs232cmd.c  575       // **********************************************************************
                            ****
                       2487 ; rs232cmd.c  576       /*      CMD:    SUB1:   SUB2:           PARM:
                       2488 ; rs232cmd.c  577                       OUTPut
                       2489 ; rs232cmd.c  578                               :BB1-3<?>
                       2490 ; rs232cmd.c  579                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2491 ; rs232cmd.c  580                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2492 ; rs232cmd.c  581                                       :SCHPhase               <-179to 180>
                       2493 ; rs232cmd.c  582       
                       2494 ; rs232cmd.c  583                               :TSGenerator<?>
                       2495 ; rs232cmd.c  584                                       :PATTern          <pattern name>
                       2496 ; rs232cmd.c  585                                       :SYSTem                 PAL|NTSC
                       2497 ; rs232cmd.c  586                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2498 ; rs232cmd.c  587                                       :SCHPhase               <-179to 180>
                       2499 ; rs232cmd.c  588                                       :EMBaudio<?>
                       2500 ; rs232cmd.c  589                                               [:SIGNal]       OFF | SILence | F
                            1KHZ
                       2501 ; rs232cmd.c  590                                               :LEVel
                       2502 ; rs232cmd.c  591       
                       2503 ; rs232cmd.c  592                               :AUDio
                       2504 ; rs232cmd.c  593                                       :OUTPut
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  31

ADDR   CODE            LINE SOURCELINE
                       2505 ; rs232cmd.c  594                                       :ANALog<?>
                       2506 ; rs232cmd.c  595                                               :SIGNal
                       2507 ; rs232cmd.c  596                                               :LEVel
                       2508 ; rs232cmd.c  597                                               :CLICk
                       2509 ; rs232cmd.c  598                                       :AESebu<?>
                       2510 ; rs232cmd.c  599                                               :SYSTem
                       2511 ; rs232cmd.c  600                                               :SIGNal
                       2512 ; rs232cmd.c  601                                               :LEVel
                       2513 ; rs232cmd.c  602                                               :TIMing
                       2514 ; rs232cmd.c  603                                               :WORDclock
                       2515 ; rs232cmd.c  604                                               :CLICkperiod
                       2516 ; rs232cmd.c  605       */
                       2517 ; rs232cmd.c  606       struct CMD_STRUCT code Output[3] = {
000A32 rrrrrrrrrrrrrr  2518         DD      _GenlockGenCalibrateStore
       rr                   
                       2521         PUBLIC  _Output
                       2522         ALIGN   1
000A36                 2523 _Output:
000A36 rrrrrrrrrrrrrr  2524         DD      _BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A3E rrrrrrrrrrrrrr  2525         DD      _Output+24
       rr                   
000A42 rrrrrrrrrrrrrr  2526         DD      _BBGenLevel1,_BBGenSuffix,_BBGen,_TSGENERATORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrr             
000A52 rrrrrrrrrrrrrr  2527         DD      _TSGCmdTxt
       rr                   
000A56 rrrrrrrrrrrrrr  2528         DD      _Output+48
       rr                   
000A5A rrrrrrrrrrrrrr  2529         DD      _TSGenLevel1
       rr                   
000A5E 00000000        2530         DD      000000000H
000A62 rrrrrrrrrrrrrr  2531         DD      _TSGen,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A6E 00000000        2532         DD      000000000H
000A72 rrrrrrrrrrrrrr  2533         DD      _AudioGenLevel1
       rr                   
000A76 00000000        2534         DD      000000000H
                       2535 ; rs232cmd.c  607               { BBCmdTxt,                     BBCmdTxt,  &Output[1], &BBGenLeve
                            l1[0],   BBGenSuffix, BBGen},
                       2536 ; rs232cmd.c  608               { TSGENERATORCmdTxt, TSGCmdTxt, &Output[2], &TSGenLevel1[0],     
                            NONE,             TSGen},
                       2537 ; rs232cmd.c  609               { AUDIOCmdTxt,          AUDCmdTxt, NULL,                  &AudioG
                            enLevel1[0], NONE,                AudioGenOutput},
                       2538 ; rs232cmd.c  610       };
                       2539 ; rs232cmd.c  611       
                       2540 ; rs232cmd.c  612       struct CMD_STRUCT code BBGenLevel1[3] = {
000A7A rrrrrrrrrrrrrr  2541         DD      _AudioGenOutput
       rr                   
                       2544         PUBLIC  _BBGenLevel1
                       2545         ALIGN   1
000A7E                 2546 _BBGenLevel1:
000A7E rrrrrrrrrrrrrr  2547         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A86 rrrrrrrrrrrrrr  2548         DD      _BBGenLevel1+24
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  32

ADDR   CODE            LINE SOURCELINE
000A8A 00000000000000  2549         DD      000000000H,000000000H
       00                   
000A92 rrrrrrrrrrrrrr  2550         DD      _BBGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A9E rrrrrrrrrrrrrr  2551         DD      _BBGenLevel1+48
       rr                   
000AA2 00000000000000  2552         DD      000000000H,000000000H
       00                   
000AAA rrrrrrrrrrrrrr  2553         DD      _BBGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AB6 00000000000000  2554         DD      000000000H,000000000H,000000000H
       0000000000           
                       2555 ; rs232cmd.c  613               { SYSTEMCmdTxt,         SYSTCmdTxt, &BBGenLevel1[1], NULL, NONE, 
                            BBGenSystem},
                       2556 ; rs232cmd.c  614               { DELAYCmdTxt,     DELCmdTxt,  &BBGenLevel1[2], NULL, NONE, BBGen
                            Delay},
                       2557 ; rs232cmd.c  615               { SCHPHASECmdTxt, SCHPCmdTxt, NULL,                       NULL, N
                            ONE, BBGenScHPhase},
                       2558 ; rs232cmd.c  616       };
                       2559 ; rs232cmd.c  617       
                       2560 ; rs232cmd.c  618       struct CMD_STRUCT code TSGenLevel1[5] = {
000AC2 rrrrrrrrrrrrrr  2561         DD      _BBGenScHPhase
       rr                   
                       2565         PUBLIC  _TSGenLevel1
                       2566         ALIGN   1
000AC6                 2567 _TSGenLevel1:
000AC6 rrrrrrrrrrrrrr  2568         DD      _PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000ACE rrrrrrrrrrrrrr  2569         DD      _TSGenLevel1+24
       rr                   
000AD2 00000000000000  2570         DD      000000000H,000000000H
       00                   
000ADA rrrrrrrrrrrrrr  2571         DD      _TSGenPattern,_SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AE6 rrrrrrrrrrrrrr  2572         DD      _TSGenLevel1+48
       rr                   
000AEA 00000000000000  2573         DD      000000000H,000000000H
       00                   
000AF2 rrrrrrrrrrrrrr  2574         DD      _TSGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AFE rrrrrrrrrrrrrr  2575         DD      _TSGenLevel1+72
       rr                   
000B02 00000000000000  2576         DD      000000000H,000000000H
       00                   
000B0A rrrrrrrrrrrrrr  2577         DD      _TSGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B16 rrrrrrrrrrrrrr  2578         DD      _TSGenLevel1+96
       rr                   
000B1A 00000000000000  2579         DD      000000000H,000000000H
       00                   
000B22 rrrrrrrrrrrrrr  2580         DD      _TSGenScHPhase,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  33

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrr               
000B2E 00000000        2581         DD      000000000H
000B32 rrrrrrrrrrrrrr  2582         DD      _TSGenLevel1_1
       rr                   
000B36 00000000        2583         DD      000000000H
                       2584 ; rs232cmd.c  619               { PATTERNCmdTxt,        PATTCmdTxt, &TSGenLevel1[1], NULL,       
                                                            NONE, TSGenPattern},
                       2585 ; rs232cmd.c  620               { SYSTEMCmdTxt,         SYSTCmdTxt, &TSGenLevel1[2], NULL,       
                                                            NONE, TSGenSystem},
                       2586 ; rs232cmd.c  621               { DELAYCmdTxt,     DELCmdTxt,  &TSGenLevel1[3], NULL,            
                                                    NONE, TSGenDelay},
                       2587 ; rs232cmd.c  622               { SCHPHASECmdTxt, SCHPCmdTxt, &TSGenLevel1[4], NULL,             
                                                    NONE, TSGenScHPhase},
                       2588 ; rs232cmd.c  623               { EMBAUDIOCmdTxt, EMBCmdTxt,    NULL,                     &TSGenL
                            evel1_1[0], NONE, TSGenEmbAudioSignal},
                       2589 ; rs232cmd.c  624       };
                       2590 ; rs232cmd.c  625       
                       2591 ; rs232cmd.c  626       struct CMD_STRUCT code TSGenLevel1_1[2] = {
000B3A rrrrrrrrrrrrrr  2592         DD      _TSGenEmbAudioSignal
       rr                   
                       2596         PUBLIC  _TSGenLevel1_1
                       2597         ALIGN   1
000B3E                 2598 _TSGenLevel1_1:
000B3E rrrrrrrrrrrrrr  2599         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B46 rrrrrrrrrrrrrr  2600         DD      _TSGenLevel1_1+24
       rr                   
000B4A 00000000000000  2601         DD      000000000H,000000000H
       00                   
000B52 rrrrrrrrrrrrrr  2602         DD      _TSGenEmbAudioSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
                       2603 ; rs232cmd.c  627               { SIGNALCmdTxt, SIGNCmdTxt, &TSGenLevel1_1[1], NULL, NONE, TSGenE
                            mbAudioSignal},
                       2604 ; rs232cmd.c  628               { LEVELCmdTxt,  LEVCmdTxt,  NULL,                                
                             NULL, NONE, NONE},
                       2605 ; rs232cmd.c  629       };
                       2606 ; rs232cmd.c  630       
                       2607 ; rs232cmd.c  631       struct CMD_STRUCT code AudioGenLevel1[3] = {
000B5E 00000000000000  2608         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2611         PUBLIC  _AudioGenLevel1
                       2612         ALIGN   1
000B6E                 2613 _AudioGenLevel1:
000B6E rrrrrrrrrrrrrr  2614         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B76 rrrrrrrrrrrrrr  2615         DD      _AudioGenLevel1+24
       rr                   
000B7A 00000000000000  2616         DD      000000000H,000000000H
       00                   
000B82 rrrrrrrrrrrrrr  2617         DD      _AudioGenOutput,_ANALOGCmdTxt,_ANALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B8E rrrrrrrrrrrrrr  2618         DD      _AudioGenLevel1+48
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  34

ADDR   CODE            LINE SOURCELINE
000B92 rrrrrrrrrrrrrr  2619         DD      _AudioGenLevel1_1
       rr                   
000B96 00000000        2620         DD      000000000H
000B9A rrrrrrrrrrrrrr  2621         DD      _AudioGenAnalog,_AESEBUCmdTxt,_AESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BA6 00000000        2622         DD      000000000H
000BAA rrrrrrrrrrrrrr  2623         DD      _AudioGenLevel1_2
       rr                   
000BAE 00000000        2624         DD      000000000H
                       2625 ; rs232cmd.c  632               { OUTPUTCmdTxt, OUTPCmdTxt, &AudioGenLevel1[1], NULL,            
                                                     NONE, AudioGenOutput},
                       2626 ; rs232cmd.c  633               { ANALOGCmdTxt, ANALCmdTxt, &AudioGenLevel1[2], &AudioGenLevel1_1
                            [0], NONE, AudioGenAnalog},
                       2627 ; rs232cmd.c  634               { AESEBUCmdTxt, AESCmdTxt,  NULL,                                
                              &AudioGenLevel1_2[0], NONE, AudioGenAESEBU},
                       2628 ; rs232cmd.c  635       };
                       2629 ; rs232cmd.c  636       
                       2630 ; rs232cmd.c  637       struct CMD_STRUCT code AudioGenLevel1_1[3] = {
000BB2 rrrrrrrrrrrrrr  2631         DD      _AudioGenAESEBU
       rr                   
                       2634         PUBLIC  _AudioGenLevel1_1
                       2635         ALIGN   1
000BB6                 2636 _AudioGenLevel1_1:
000BB6 rrrrrrrrrrrrrr  2637         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000BBE rrrrrrrrrrrrrr  2638         DD      _AudioGenLevel1_1+24
       rr                   
000BC2 00000000000000  2639         DD      000000000H,000000000H
       00                   
000BCA rrrrrrrrrrrrrr  2640         DD      _AudioGenAnalogSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BD6 rrrrrrrrrrrrrr  2641         DD      _AudioGenLevel1_1+48
       rr                   
000BDA 00000000000000  2642         DD      000000000H,000000000H
       00                   
000BE2 rrrrrrrrrrrrrr  2643         DD      _AudioGenAnalogLevel,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BEE 00000000000000  2644         DD      000000000H,000000000H,000000000H
       0000000000           
                       2645 ; rs232cmd.c  638               { SIGNALCmdTxt, SIGNCmdTxt, &AudioGenLevel1_1[1], NULL, NONE, Aud
                            ioGenAnalogSignal},
                       2646 ; rs232cmd.c  639               { LEVELCmdTxt,  LEVCmdTxt,  &AudioGenLevel1_1[2], NULL, NONE, Aud
                            ioGenAnalogLevel},
                       2647 ; rs232cmd.c  640               { CLICKCmdTxt,  CLICCmdTxt, NULL,                                
                                      NULL, NONE, AudioGenAnalogClick},
                       2648 ; rs232cmd.c  641       };
                       2649 ; rs232cmd.c  642       
                       2650 ; rs232cmd.c  643       struct CMD_STRUCT code AudioGenLevel1_2[6] = {
000BFA rrrrrrrrrrrrrr  2651         DD      _AudioGenAnalogClick
       rr                   
                       2654         PUBLIC  _AudioGenLevel1_2
                       2655         ALIGN   1
000BFE                 2656 _AudioGenLevel1_2:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  35

ADDR   CODE            LINE SOURCELINE
000BFE rrrrrrrrrrrrrr  2657         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000C06 rrrrrrrrrrrrrr  2658         DD      _AudioGenLevel1_2+24
       rr                   
000C0A 00000000000000  2659         DD      000000000H,000000000H
       00                   
000C12 rrrrrrrrrrrrrr  2660         DD      _AudioGenAESEBUSystem,_SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C1E rrrrrrrrrrrrrr  2661         DD      _AudioGenLevel1_2+48
       rr                   
000C22 00000000000000  2662         DD      000000000H,000000000H
       00                   
000C2A rrrrrrrrrrrrrr  2663         DD      _AudioGenAESEBUSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C36 rrrrrrrrrrrrrr  2664         DD      _AudioGenLevel1_2+72
       rr                   
000C3A 00000000000000  2665         DD      000000000H,000000000H
       00                   
000C42 rrrrrrrrrrrrrr  2666         DD      _AudioGenAESEBULevel,_TIMINGCmdTxt,_TIMCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C4E rrrrrrrrrrrrrr  2667         DD      _AudioGenLevel1_2+96
       rr                   
000C52 00000000000000  2668         DD      000000000H,000000000H
       00                   
000C5A rrrrrrrrrrrrrr  2669         DD      _AudioGenAESEBUTiming,_WORDCLOCKCmdTxt,_WORDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C66 rrrrrrrrrrrrrr  2670         DD      _AudioGenLevel1_2+120
       rr                   
000C6A 00000000000000  2671         DD      000000000H,000000000H
       00                   
000C72 rrrrrrrrrrrrrr  2672         DD      _AudioGenAESEBUWordClock,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C7E 00000000000000  2673         DD      000000000H,000000000H,000000000H
       0000000000           
                       2674 ; rs232cmd.c  644               { SYSTEMCmdTxt,          SYSTCmdTxt, &AudioGenLevel1_2[1], NULL, 
                            NONE, AudioGenAESEBUSystem},
                       2675 ; rs232cmd.c  645               { SIGNALCmdTxt,          SIGNCmdTxt, &AudioGenLevel1_2[2], NULL, 
                            NONE, AudioGenAESEBUSignal},
                       2676 ; rs232cmd.c  646               { LEVELCmdTxt,   LEVCmdTxt,  &AudioGenLevel1_2[3], NULL, NONE, Au
                            dioGenAESEBULevel},
                       2677 ; rs232cmd.c  647               { TIMINGCmdTxt,  TIMCmdTxt,  &AudioGenLevel1_2[4], NULL, NONE, Au
                            dioGenAESEBUTiming},
                       2678 ; rs232cmd.c  648               { WORDCLOCKCmdTxt, WORDCmdTxt, &AudioGenLevel1_2[5], NULL, NONE, 
                            AudioGenAESEBUWordClock},
                       2679 ; rs232cmd.c  649               { CLICKCmdTxt,   CLICCmdTxt, NULL,                               
                                      NULL, NONE, AudioGenAESEBUClick},
                       2680 ; rs232cmd.c  650       };
                       2681 ; rs232cmd.c  651       
                       2682 ; rs232cmd.c  652       // **********************************************************************
                            ****
                       2683 ; rs232cmd.c  653       /*      CMD:    SUB1:   SUB2:           PARM:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  36

ADDR   CODE            LINE SOURCELINE
                       2684 ; rs232cmd.c  654                       FACTORY
                       2685 ; rs232cmd.c  655                               :PASSword
                       2686 ; rs232cmd.c  656       
                       2687 ; rs232cmd.c  657                               :RESet
                       2688 ; rs232cmd.c  658       
                       2689 ; rs232cmd.c  659                               :V24Circuit
                       2690 ; rs232cmd.c  660                                       :COMMand
                       2691 ; rs232cmd.c  661                                       :TRANsparent
                       2692 ; rs232cmd.c  662       
                       2693 ; rs232cmd.c  663                               :CHECksum
                       2694 ; rs232cmd.c  664                                       :CODE
                       2695 ; rs232cmd.c  665                                       :PLD
                       2696 ; rs232cmd.c  666                                       :EMBaudio
                       2697 ; rs232cmd.c  667                                       :PATTern
                       2698 ; rs232cmd.c  668       
                       2699 ; rs232cmd.c  669                               :MAINboard
                       2700 ; rs232cmd.c  670                                       :VERSion
                       2701 ; rs232cmd.c  671                                       :IDN
                       2702 ; rs232cmd.c  672                                               :COMPany
                       2703 ; rs232cmd.c  673                                               :TYPE
                       2704 ; rs232cmd.c  674                                               :KUNumber
                       2705 ; rs232cmd.c  675                                               :SWRevision
                       2706 ; rs232cmd.c  676                                       :SYSTem                         PAL|NTSC
                       2707 ; rs232cmd.c  677                                       :FMSDate
                       2708 ; rs232cmd.c  678                                               :PRODuction     <year>,<month>,<d
                            ay>
                       2709 ; rs232cmd.c  679                                               :UPDate                 <year>,<m
                            onth>,<day>
                       2710 ; rs232cmd.c  680       
                       2711 ; rs232cmd.c  681                               :GENLock
                       2712 ; rs232cmd.c  682                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2713 ; rs232cmd.c  683                                       :VERSion
                       2714 ; rs232cmd.c  684                                       :FREFerence
                       2715 ; rs232cmd.c  685                                               [:DATE]                 <year>,<m
                            onth>,<day>
                       2716 ; rs232cmd.c  686                                               :DAC
                       2717 ; rs232cmd.c  687                                       :UREFerence
                       2718 ; rs232cmd.c  688                                               [:DATE]                 <year>,<m
                            onth>,<day>
                       2719 ; rs232cmd.c  689                                               :DAC
                       2720 ; rs232cmd.c  690                                       :HPHZero                        <pal>,<nt
                            sc>
                       2721 ; rs232cmd.c  691                                       :PHASe                          <pal>,<nt
                            sc>
                       2722 ; rs232cmd.c  692       
                       2723 ; rs232cmd.c  693                               :BB 1
                       2724 ; rs232cmd.c  694                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2725 ; rs232cmd.c  695                                       :VERSion
                       2726 ; rs232cmd.c  696                                       :SIGNAL                         NORMAL|F4
                            5MHZ
                       2727 ; rs232cmd.c  697                                       :PHASe                          <pal>,<nt
                            sc>
                       2728 ; rs232cmd.c  698                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2729 ; rs232cmd.c  699                                       :DAC                                    <
                            gain>,<offset>,<level>
                       2730 ; rs232cmd.c  700       
                       2731 ; rs232cmd.c  701                               :BB 2-3
                       2732 ; rs232cmd.c  702                                       [:DATE]                         <year>,<m
                            onth>,<day>
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  37

ADDR   CODE            LINE SOURCELINE
                       2733 ; rs232cmd.c  703                                       :PHASe                          <pal>,<nt
                            sc>
                       2734 ; rs232cmd.c  704                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2735 ; rs232cmd.c  705                                       :DAC                                    <
                            gain>,<offset>,<level>
                       2736 ; rs232cmd.c  706       
                       2737 ; rs232cmd.c  707                               :TSGenerator
                       2738 ; rs232cmd.c  708                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2739 ; rs232cmd.c  709                                       :AGAin                          <pal>,<nt
                            sc>
                       2740 ; rs232cmd.c  710                                       :CGAin                          <pal>,<nt
                            sc>
                       2741 ; rs232cmd.c  711                                       :PHASE                          <pal>,<nt
                            sc>
                       2742 ; rs232cmd.c  712                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2743 ; rs232cmd.c  713       
                       2744 ; rs232cmd.c  714                               :AUDio
                       2745 ; rs232cmd.c  715                                       [:STATus]
                       2746 ; rs232cmd.c  716                                       :DATE                                   <
                            year>,<month>,<day>
                       2747 ; rs232cmd.c  717                                       :ALEVel                         <left>,<r
                            ight>
                       2748 ; rs232cmd.c  718       
                       2749 ; rs232cmd.c  719                               :PLD
                       2750 ; rs232cmd.c  720                                       :VERSion                        <video>,<
                            audio>
                       2751 ; rs232cmd.c  721       
                       2752 ; rs232cmd.c  722                               :TCXO
                       2753 ; rs232cmd.c  723                                       [:STATus]
                       2754 ; rs232cmd.c  724       
                       2755 ; rs232cmd.c  725                               :MMCH                                           <
                            subaddress>[,<data>]
                       2756 ; rs232cmd.c  726       
                       2757 ; rs232cmd.c  727       */                                                                      
                       2758 ; rs232cmd.c  728       
                       2759 ; rs232cmd.c  729       struct CMD_STRUCT code Factory[12] = {
000C8A rrrrrrrrrrrrrr  2760         DD      _AudioGenAESEBUClick
       rr                   
                       2763         PUBLIC  _Factory
                       2764         ALIGN   1
000C8E                 2765 _Factory:
000C8E rrrrrrrrrrrrrr  2766         DD      _PASSWORDCmdTxt,_PASSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000C96 rrrrrrrrrrrrrr  2767         DD      _Factory+24
       rr                   
000C9A 00000000000000  2768         DD      000000000H,000000000H
       00                   
000CA2 rrrrrrrrrrrrrr  2769         DD      _FactPassword,_RESETCmdTxt,_RESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000CAE rrrrrrrrrrrrrr  2770         DD      _Factory+48
       rr                   
000CB2 00000000000000  2771         DD      000000000H,000000000H
       00                   
000CBA rrrrrrrrrrrrrr  2772         DD      _FactReset,_V24CIRCUITCmdTxt,_V24CCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  38

ADDR   CODE            LINE SOURCELINE
000CC6 rrrrrrrrrrrrrr  2773         DD      _Factory+72
       rr                   
000CCA rrrrrrrrrrrrrr  2774         DD      _FactoryLevel1
       rr                   
000CCE 00000000000000  2775         DD      000000000H,000000000H
       00                   
000CD6 rrrrrrrrrrrrrr  2776         DD      _CHECKSUMCmdTxt,_CHECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000CDE rrrrrrrrrrrrrr  2777         DD      _Factory+96
       rr                   
000CE2 rrrrrrrrrrrrrr  2778         DD      _FactoryLevel9
       rr                   
000CE6 00000000000000  2779         DD      000000000H,000000000H
       00                   
000CEE rrrrrrrrrrrrrr  2780         DD      _MAINBOARDCmdTxt,_MAINCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000CF6 rrrrrrrrrrrrrr  2781         DD      _Factory+120
       rr                   
000CFA rrrrrrrrrrrrrr  2782         DD      _FactoryLevel2
       rr                   
000CFE 00000000000000  2783         DD      000000000H,000000000H
       00                   
000D06 rrrrrrrrrrrrrr  2784         DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D0E rrrrrrrrrrrrrr  2785         DD      _Factory+144
       rr                   
000D12 rrrrrrrrrrrrrr  2786         DD      _FactoryLevel3
       rr                   
000D16 00000000        2787         DD      000000000H
000D1A rrrrrrrrrrrrrr  2788         DD      _FactGenlockGenDate,_BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D26 rrrrrrrrrrrrrr  2789         DD      _Factory+168
       rr                   
000D2A rrrrrrrrrrrrrr  2790         DD      _FactoryLevel4,_BBGenSuffix,_FactBBGenDate
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D36 rrrrrrrrrrrrrr  2791         DD      _TSGENERATORCmdTxt,_TSGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D3E rrrrrrrrrrrrrr  2792         DD      _Factory+192
       rr                   
000D42 rrrrrrrrrrrrrr  2793         DD      _FactoryLevel5
       rr                   
000D46 00000000        2794         DD      000000000H
000D4A rrrrrrrrrrrrrr  2795         DD      _FactTSGenDate,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D56 rrrrrrrrrrrrrr  2796         DD      _Factory+216
       rr                   
000D5A rrrrrrrrrrrrrr  2797         DD      _FactoryLevel6
       rr                   
000D5E 00000000        2798         DD      000000000H
000D62 rrrrrrrrrrrrrr  2799         DD      _FactAudioGenStatus,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  39

ADDR   CODE            LINE SOURCELINE
000D6E rrrrrrrrrrrrrr  2800         DD      _Factory+240
       rr                   
000D72 rrrrrrrrrrrrrr  2801         DD      _FactoryLevel7
       rr                   
000D76 00000000        2802         DD      000000000H
000D7A rrrrrrrrrrrrrr  2803         DD      _FactPLDVersion,_TCXOCmdTxt,_TCXOCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D86 rrrrrrrrrrrrrr  2804         DD      _Factory+264
       rr                   
000D8A rrrrrrrrrrrrrr  2805         DD      _FactoryLevel8
       rr                   
000D8E 00000000        2806         DD      000000000H
000D92 rrrrrrrrrrrrrr  2807         DD      _FactTCXOStatus,_MMCHIPCmdTxt,_MMCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D9E 00000000000000  2808         DD      000000000H,000000000H,000000000H
       0000000000           
                       2809 ; rs232cmd.c  730               { PASSWORDCmdTxt,       PASSCmdTxt, &Factory[1],  NULL,          
                                                    NONE,            FactPassword},
                       2810 ; rs232cmd.c  731               { RESETCmdTxt,          RESCmdTxt,  &Factory[2],  NULL,          
                                                    NONE,            FactReset},
                       2811 ; rs232cmd.c  732               { V24CIRCUITCmdTxt,     V24CCmdTxt, &Factory[3],  &FactoryLevel1[
                            0], NONE,                NONE},
                       2812 ; rs232cmd.c  733               { CHECKSUMCmdTxt,       CHECCmdTxt, &Factory[4],  &FactoryLevel9[
                            0], NONE,                        NONE},
                       2813 ; rs232cmd.c  734               { MAINBOARDCmdTxt,      MAINCmdTxt, &Factory[5],  &FactoryLevel2[
                            0], NONE,                        NONE},
                       2814 ; rs232cmd.c  735               { GENLOCKCmdTxt,                GENLCmdTxt,     &Factory[6],  &Fa
                            ctoryLevel3[0], NONE,                    FactGenlockGenDate},
                       2815 ; rs232cmd.c  736               { BBCmdTxt,                     BBCmdTxt,       &Factory[7],  &Fa
                            ctoryLevel4[0], BBGenSuffix, FactBBGenDate},
                       2816 ; rs232cmd.c  737               { TSGENERATORCmdTxt, TSGCmdTxt,         &Factory[8],  &FactoryLev
                            el5[0], NONE,                    FactTSGenDate},
                       2817 ; rs232cmd.c  738               { AUDIOCmdTxt,          AUDCmdTxt,      &Factory[9],  &FactoryLev
                            el6[0], NONE,                    FactAudioGenStatus},
                       2818 ; rs232cmd.c  739               { PLDCmdTxt,                    PLDCmdTxt,      &Factory[10], &Fa
                            ctoryLevel7[0], NONE,                    FactPLDVersion},
                       2819 ; rs232cmd.c  740               { TCXOCmdTxt,                   TCXOCmdTxt,     &Factory[11], &Fa
                            ctoryLevel8[0], NONE,                    FactTCXOStatus},
                       2820 ; rs232cmd.c  741               { MMCHIPCmdTxt,                 MMCHCmdTxt, NULL,                
                                      NULL,                                 NONE,                    FactMultiMediaChip},
                       2821 ; rs232cmd.c  742       };
                       2822 ; rs232cmd.c  743       
                       2823 ; rs232cmd.c  744       struct CMD_STRUCT code FactoryLevel1[2] = {
000DAA rrrrrrrrrrrrrr  2824         DD      _FactMultiMediaChip
       rr                   
                       2827         PUBLIC  _FactoryLevel1
                       2828         ALIGN   1
000DAE                 2829 _FactoryLevel1:
000DAE rrrrrrrrrrrrrr  2830         DD      _COMMANDCmdTxt,_COMMCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DB6 rrrrrrrrrrrrrr  2831         DD      _FactoryLevel1+24
       rr                   
000DBA 00000000000000  2832         DD      000000000H,000000000H
       00                   
000DC2 rrrrrrrrrrrrrr  2833         DD      _FactV24Command,_TRANSPARENTCmdTxt,_TRANCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  40

ADDR   CODE            LINE SOURCELINE
000DCE 00000000000000  2834         DD      000000000H,000000000H,000000000H
       0000000000           
                       2835 ; rs232cmd.c  745               { COMMANDCmdTxt,                 COMMCmdTxt, &FactoryLevel1[1], N
                            ULL, NONE, FactV24Command},
                       2836 ; rs232cmd.c  746               { TRANSPARENTCmdTxt, TRANCmdTxt, NULL,                           
                                              NULL, NONE, FactV24Transparent},
                       2837 ; rs232cmd.c  747       };
                       2838 ; rs232cmd.c  748       
                       2839 ; rs232cmd.c  749       struct CMD_STRUCT code FactoryLevel9[5] = {
000DDA rrrrrrrrrrrrrr  2840         DD      _FactV24Transparent
       rr                   
                       2843         PUBLIC  _FactoryLevel9
                       2844         ALIGN   1
000DDE                 2845 _FactoryLevel9:
000DDE rrrrrrrrrrrrrr  2846         DD      _CODECmdTxt,_CODECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DE6 rrrrrrrrrrrrrr  2847         DD      _FactoryLevel9+24
       rr                   
000DEA 00000000000000  2848         DD      000000000H,000000000H
       00                   
000DF2 rrrrrrrrrrrrrr  2849         DD      _FactChecksumCode,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000DFE rrrrrrrrrrrrrr  2850         DD      _FactoryLevel9+48
       rr                   
000E02 00000000000000  2851         DD      000000000H,000000000H
       00                   
000E0A rrrrrrrrrrrrrr  2852         DD      _FactChecksumPLD,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E16 rrrrrrrrrrrrrr  2853         DD      _FactoryLevel9+72
       rr                   
000E1A 00000000000000  2854         DD      000000000H,000000000H
       00                   
000E22 rrrrrrrrrrrrrr  2855         DD      _FactChecksumEmbAudio,_PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E2E rrrrrrrrrrrrrr  2856         DD      _FactoryLevel9+96
       rr                   
000E32 00000000000000  2857         DD      000000000H,000000000H
       00                   
000E3A rrrrrrrrrrrrrr  2858         DD      _FactChecksumPattern,_RANGECmdTxt,_RANGCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E46 00000000000000  2859         DD      000000000H,000000000H,000000000H
       0000000000           
                       2860 ; rs232cmd.c  750               { CODECmdTxt,           CODECmdTxt, &FactoryLevel9[1], NULL, NONE
                            , FactChecksumCode},
                       2861 ; rs232cmd.c  751               { PLDCmdTxt,            PLDCmdTxt,  &FactoryLevel9[2], NULL, NONE
                            , FactChecksumPLD},
                       2862 ; rs232cmd.c  752               { EMBAUDIOCmdTxt, EMBCmdTxt,  &FactoryLevel9[3], NULL, NONE, Fact
                            ChecksumEmbAudio},
                       2863 ; rs232cmd.c  753               { PATTERNCmdTxt,        PATTCmdTxt, &FactoryLevel9[4], NULL, NONE
                            , FactChecksumPattern},
                       2864 ; rs232cmd.c  754               { RANGECmdTxt,  RANGCmdTxt, NULL,                                
                            NULL, NONE, FactChecksumRange},
                       2865 ; rs232cmd.c  755       };
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  41

ADDR   CODE            LINE SOURCELINE
                       2866 ; rs232cmd.c  756       
                       2867 ; rs232cmd.c  757       struct CMD_STRUCT code FactoryLevel2[4] = {
000E52 rrrrrrrrrrrrrr  2868         DD      _FactChecksumRange
       rr                   
                       2872         PUBLIC  _FactoryLevel2
                       2873         ALIGN   1
000E56                 2874 _FactoryLevel2:
000E56 rrrrrrrrrrrrrr  2875         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E5E rrrrrrrrrrrrrr  2876         DD      _FactoryLevel2+24
       rr                   
000E62 00000000000000  2877         DD      000000000H,000000000H
       00                   
000E6A rrrrrrrrrrrrrr  2878         DD      _FactMainVersion,_IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E76 rrrrrrrrrrrrrr  2879         DD      _FactoryLevel2+48
       rr                   
000E7A rrrrrrrrrrrrrr  2880         DD      _FactoryLevel2_2
       rr                   
000E7E 00000000000000  2881         DD      000000000H,000000000H
       00                   
000E86 rrrrrrrrrrrrrr  2882         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E8E rrrrrrrrrrrrrr  2883         DD      _FactoryLevel2+72
       rr                   
000E92 00000000000000  2884         DD      000000000H,000000000H
       00                   
000E9A rrrrrrrrrrrrrr  2885         DD      _FactMainSystem,_FMSDATECmdTxt,_FMSDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000EA6 00000000        2886         DD      000000000H
000EAA rrrrrrrrrrrrrr  2887         DD      _FactoryLevel2_1
       rr                   
                       2888 ; rs232cmd.c  758               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel2[1], NULL,     
                                                             NONE, FactMainVersion},
                       2889 ; rs232cmd.c  759               { IDNCmdTxt,            IDNCmdTxt,  &FactoryLevel2[2], &FactoryLe
                            vel2_2[0], NONE, NONE},
                       2890 ; rs232cmd.c  760               { SYSTEMCmdTxt,         SYSTCmdTxt, &FactoryLevel2[3], NULL,     
                                                             NONE, FactMainSystem},
                       2891 ; rs232cmd.c  761               { FMSDATECmdTxt,        FMSDCmdTxt, NULL,                        
                                     &FactoryLevel2_1[0], NONE, NONE},
                       2892 ; rs232cmd.c  762       };
                       2893 ; rs232cmd.c  763       
                       2894 ; rs232cmd.c  764       struct CMD_STRUCT code FactoryLevel2_1[2] = {
000EAE 00000000000000  2895         DD      000000000H,000000000H
       00                   
                       2898         PUBLIC  _FactoryLevel2_1
                       2899         ALIGN   1
000EB6                 2900 _FactoryLevel2_1:
000EB6 rrrrrrrrrrrrrr  2901         DD      _PRODUCTIONCmdTxt,_PRODCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000EBE rrrrrrrrrrrrrr  2902         DD      _FactoryLevel2_1+24
       rr                   
000EC2 00000000000000  2903         DD      000000000H,000000000H
       00                   
000ECA rrrrrrrrrrrrrr  2904         DD      _FactMainFMSDateProd,_UPDATECmdTxt,_UPDCmdTxt
       rrrrrrrrrrrrrr       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  42

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrr               
000ED6 00000000000000  2905         DD      000000000H,000000000H,000000000H
       0000000000           
                       2906 ; rs232cmd.c  765               { PRODUCTIONCmdTxt, PRODCmdTxt, &FactoryLevel2_1[1], NULL, NONE, 
                            FactMainFMSDateProd},
                       2907 ; rs232cmd.c  766               { UPDATECmdTxt,           UPDCmdTxt,  NULL,                      
                                              NULL, NONE, FactMainFMSDateUpd},
                       2908 ; rs232cmd.c  767       };
                       2909 ; rs232cmd.c  768       
                       2910 ; rs232cmd.c  769       struct CMD_STRUCT code FactoryLevel2_2[4] = {
000EE2 rrrrrrrrrrrrrr  2911         DD      _FactMainFMSDateUpd
       rr                   
                       2914         PUBLIC  _FactoryLevel2_2
                       2915         ALIGN   1
000EE6                 2916 _FactoryLevel2_2:
000EE6 rrrrrrrrrrrrrr  2917         DD      _COMPANYCmdTxt,_COMPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000EEE rrrrrrrrrrrrrr  2918         DD      _FactoryLevel2_2+24
       rr                   
000EF2 00000000000000  2919         DD      000000000H,000000000H
       00                   
000EFA rrrrrrrrrrrrrr  2920         DD      _FactMainIDNCompany,_TYPECmdTxt,_TYPECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F06 rrrrrrrrrrrrrr  2921         DD      _FactoryLevel2_2+48
       rr                   
000F0A 00000000000000  2922         DD      000000000H,000000000H
       00                   
000F12 rrrrrrrrrrrrrr  2923         DD      _FactMainIDNType,_KUNUMBERCmdTxt,_KUNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F1E rrrrrrrrrrrrrr  2924         DD      _FactoryLevel2_2+72
       rr                   
000F22 00000000000000  2925         DD      000000000H,000000000H
       00                   
000F2A rrrrrrrrrrrrrr  2926         DD      _FactMainIDNKUNumber,_SWREVISIONCmdTxt,_SWRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F36 00000000000000  2927         DD      000000000H,000000000H,000000000H
       0000000000           
                       2928 ; rs232cmd.c  770               { COMPANYCmdTxt,    COMPCmdTxt, &FactoryLevel2_2[1], NULL, NONE, 
                            FactMainIDNCompany},
                       2929 ; rs232cmd.c  771               { TYPECmdTxt,     TYPECmdTxt, &FactoryLevel2_2[2], NULL, NONE, Fa
                            ctMainIDNType},
                       2930 ; rs232cmd.c  772               { KUNUMBERCmdTxt,   KUNCmdTxt,  &FactoryLevel2_2[3], NULL, NONE, 
                            FactMainIDNKUNumber},
                       2931 ; rs232cmd.c  773               { SWREVISIONCmdTxt, SWRCmdTxt,  NULL,                            
                                      NULL, NONE, FactMainIDNSWRevision},
                       2932 ; rs232cmd.c  774       };
                       2933 ; rs232cmd.c  775       
                       2934 ; rs232cmd.c  776       struct CMD_STRUCT code FactoryLevel3[6] = {
000F42 rrrrrrrrrrrrrr  2935         DD      _FactMainIDNSWRevision
       rr                   
                       2938         PUBLIC  _FactoryLevel3
                       2939         ALIGN   1
000F46                 2940 _FactoryLevel3:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  43

ADDR   CODE            LINE SOURCELINE
000F46 rrrrrrrrrrrrrr  2941         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000F4E rrrrrrrrrrrrrr  2942         DD      _FactoryLevel3+24
       rr                   
000F52 00000000000000  2943         DD      000000000H,000000000H
       00                   
000F5A rrrrrrrrrrrrrr  2944         DD      _FactGenlockGenDate,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F66 rrrrrrrrrrrrrr  2945         DD      _FactoryLevel3+48
       rr                   
000F6A 00000000000000  2946         DD      000000000H,000000000H
       00                   
000F72 rrrrrrrrrrrrrr  2947         DD      _FactGenlockGenVersion,_FREFERENCECmdTxt,_FREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F7E rrrrrrrrrrrrrr  2948         DD      _FactoryLevel3+72
       rr                   
000F82 rrrrrrrrrrrrrr  2949         DD      _FactoryLevel3_1
       rr                   
000F86 00000000        2950         DD      000000000H
000F8A rrrrrrrrrrrrrr  2951         DD      _FactGenlockGenFRefDate,_UREFERENCECmdTxt,_UREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F96 rrrrrrrrrrrrrr  2952         DD      _FactoryLevel3+96
       rr                   
000F9A rrrrrrrrrrrrrr  2953         DD      _FactoryLevel3_2
       rr                   
000F9E 00000000        2954         DD      000000000H
000FA2 rrrrrrrrrrrrrr  2955         DD      _FactGenlockGenURefDate,_HPHZEROCmdTxt,_HPHZCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FAE rrrrrrrrrrrrrr  2956         DD      _FactoryLevel3+120
       rr                   
000FB2 00000000000000  2957         DD      000000000H,000000000H
       00                   
000FBA rrrrrrrrrrrrrr  2958         DD      _FactGenlockGenHPHZero,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FC6 00000000000000  2959         DD      000000000H,000000000H,000000000H
       0000000000           
                       2960 ; rs232cmd.c  777               { DATECmdTxt,     DATECmdTxt, &FactoryLevel3[1], NULL,           
                                                    NONE, FactGenlockGenDate},
                       2961 ; rs232cmd.c  778               { VERSIONCmdTxt,    VERSCmdTxt, &FactoryLevel3[2], NULL,         
                                                            NONE, FactGenlockGenVersion},
                       2962 ; rs232cmd.c  779               { FREFERENCECmdTxt, FREFCmdTxt, &FactoryLevel3[3], &FactoryLevel3
                            _1[0], NONE, FactGenlockGenFRefDate},
                       2963 ; rs232cmd.c  780               { UREFERENCECmdTxt, UREFCmdTxt, &FactoryLevel3[4], &FactoryLevel3
                            _2[0], NONE, FactGenlockGenURefDate},
                       2964 ; rs232cmd.c  781               { HPHZEROCmdTxt,    HPHZCmdTxt, &FactoryLevel3[5], NULL,         
                                                                    NONE, FactGenlockGenHPHZero},
                       2965 ; rs232cmd.c  782               { PHASECmdTxt,            PHASCmdTxt, NULL,                      
                                            NULL,                                           NONE, FactGenlockGenPhase},
                       2966 ; rs232cmd.c  783       };
                       2967 ; rs232cmd.c  784       
                       2968 ; rs232cmd.c  785       struct CMD_STRUCT code FactoryLevel3_1[2] = {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  44

ADDR   CODE            LINE SOURCELINE
000FD2 rrrrrrrrrrrrrr  2969         DD      _FactGenlockGenPhase
       rr                   
                       2972         PUBLIC  _FactoryLevel3_1
                       2973         ALIGN   1
000FD6                 2974 _FactoryLevel3_1:
000FD6 rrrrrrrrrrrrrr  2975         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000FDE rrrrrrrrrrrrrr  2976         DD      _FactoryLevel3_1+24
       rr                   
000FE2 00000000000000  2977         DD      000000000H,000000000H
       00                   
000FEA rrrrrrrrrrrrrr  2978         DD      _FactGenlockGenFRefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FF6 00000000000000  2979         DD      000000000H,000000000H,000000000H
       0000000000           
                       2980 ; rs232cmd.c  786               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_1[1], NULL, NONE, FactGe
                            nlockGenFRefDate},
                       2981 ; rs232cmd.c  787               { DACCmdTxt,  DACCmdTxt,  NULL,                                  
                                      NULL, NONE, FactGenlockGenFRefDAC},
                       2982 ; rs232cmd.c  788       };
                       2983 ; rs232cmd.c  789       
                       2984 ; rs232cmd.c  790       struct CMD_STRUCT code FactoryLevel3_2[2] = {
001002 rrrrrrrrrrrrrr  2985         DD      _FactGenlockGenFRefDAC
       rr                   
                       2988         PUBLIC  _FactoryLevel3_2
                       2989         ALIGN   1
001006                 2990 _FactoryLevel3_2:
001006 rrrrrrrrrrrrrr  2991         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00100E rrrrrrrrrrrrrr  2992         DD      _FactoryLevel3_2+24
       rr                   
001012 00000000000000  2993         DD      000000000H,000000000H
       00                   
00101A rrrrrrrrrrrrrr  2994         DD      _FactGenlockGenURefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001026 00000000000000  2995         DD      000000000H,000000000H,000000000H
       0000000000           
                       2996 ; rs232cmd.c  791               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_2[1], NULL, NONE, FactGe
                            nlockGenURefDate},
                       2997 ; rs232cmd.c  792               { DACCmdTxt,  DACCmdTxt,  NULL,                                  
                                      NULL, NONE, FactGenlockGenURefDAC},
                       2998 ; rs232cmd.c  793       };
                       2999 ; rs232cmd.c  794       
                       3000 ; rs232cmd.c  795       struct CMD_STRUCT code FactoryLevel4[6] = {
001032 rrrrrrrrrrrrrr  3001         DD      _FactGenlockGenURefDAC
       rr                   
                       3004         PUBLIC  _FactoryLevel4
                       3005         ALIGN   1
001036                 3006 _FactoryLevel4:
001036 rrrrrrrrrrrrrr  3007         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00103E rrrrrrrrrrrrrr  3008         DD      _FactoryLevel4+24
       rr                   
001042 00000000000000  3009         DD      000000000H,000000000H
       00                   
00104A rrrrrrrrrrrrrr  3010         DD      _FactBBGenDate,_VERSIONCmdTxt,_VERSCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  45

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001056 rrrrrrrrrrrrrr  3011         DD      _FactoryLevel4+48
       rr                   
00105A 00000000000000  3012         DD      000000000H,000000000H
       00                   
001062 rrrrrrrrrrrrrr  3013         DD      _FactBBGenVersion,_SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00106E rrrrrrrrrrrrrr  3014         DD      _FactoryLevel4+72
       rr                   
001072 00000000000000  3015         DD      000000000H,000000000H
       00                   
00107A rrrrrrrrrrrrrr  3016         DD      _FactBBGenSignal,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001086 rrrrrrrrrrrrrr  3017         DD      _FactoryLevel4+96
       rr                   
00108A 00000000000000  3018         DD      000000000H,000000000H
       00                   
001092 rrrrrrrrrrrrrr  3019         DD      _FactBBGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00109E rrrrrrrrrrrrrr  3020         DD      _FactoryLevel4+120
       rr                   
0010A2 00000000000000  3021         DD      000000000H,000000000H
       00                   
0010AA rrrrrrrrrrrrrr  3022         DD      _FactBBGenScHPhase,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010B6 00000000000000  3023         DD      000000000H,000000000H,000000000H
       0000000000           
                       3024 ; rs232cmd.c  796               { DATECmdTxt,   DATECmdTxt, &FactoryLevel4[1], NULL, NONE, FactBB
                            GenDate},
                       3025 ; rs232cmd.c  797               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel4[2], NULL, NONE
                            , FactBBGenVersion},
                       3026 ; rs232cmd.c  798               { SIGNALCmdTxt,         SIGNCmdTxt, &FactoryLevel4[3], NULL, NONE
                            , FactBBGenSignal},
                       3027 ; rs232cmd.c  799               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel4[4], NULL, NONE, FactBB
                            GenPhase},
                       3028 ; rs232cmd.c  800               { SCHPHASECmdTxt,       SCHPCmdTxt, &FactoryLevel4[5], NULL, NONE
                            , FactBBGenScHPhase},
                       3029 ; rs232cmd.c  801               { DACCmdTxt,            DACCmdTxt,  NULL,                        
                                     NULL, NONE, FactBBGenDAC},
                       3030 ; rs232cmd.c  802       };
                       3031 ; rs232cmd.c  803       
                       3032 ; rs232cmd.c  804       struct CMD_STRUCT code FactoryLevel5[5] = {
0010C2 rrrrrrrrrrrrrr  3033         DD      _FactBBGenDAC
       rr                   
                       3036         PUBLIC  _FactoryLevel5
                       3037         ALIGN   1
0010C6                 3038 _FactoryLevel5:
0010C6 rrrrrrrrrrrrrr  3039         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0010CE rrrrrrrrrrrrrr  3040         DD      _FactoryLevel5+24
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  46

ADDR   CODE            LINE SOURCELINE
0010D2 00000000000000  3041         DD      000000000H,000000000H
       00                   
0010DA rrrrrrrrrrrrrr  3042         DD      _FactTSGenDate,_AGAINCmdTxt,_AGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010E6 rrrrrrrrrrrrrr  3043         DD      _FactoryLevel5+48
       rr                   
0010EA 00000000000000  3044         DD      000000000H,000000000H
       00                   
0010F2 rrrrrrrrrrrrrr  3045         DD      _FactTSGenAGain,_CGAINCmdTxt,_CGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010FE rrrrrrrrrrrrrr  3046         DD      _FactoryLevel5+72
       rr                   
001102 00000000000000  3047         DD      000000000H,000000000H
       00                   
00110A rrrrrrrrrrrrrr  3048         DD      _FactTSGenCGain,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001116 rrrrrrrrrrrrrr  3049         DD      _FactoryLevel5+96
       rr                   
00111A 00000000000000  3050         DD      000000000H,000000000H
       00                   
001122 rrrrrrrrrrrrrr  3051         DD      _FactTSGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00112E 00000000000000  3052         DD      000000000H,000000000H,000000000H
       0000000000           
                       3053 ; rs232cmd.c  805               { DATECmdTxt,   DATECmdTxt, &FactoryLevel5[1], NULL, NONE, FactTS
                            GenDate},
                       3054 ; rs232cmd.c  806               { AGAINCmdTxt,  AGACmdTxt,      &FactoryLevel5[2], NULL, NONE, Fa
                            ctTSGenAGain},
                       3055 ; rs232cmd.c  807               { CGAINCmdTxt,  CGACmdTxt,      &FactoryLevel5[3], NULL, NONE, Fa
                            ctTSGenCGain},
                       3056 ; rs232cmd.c  808               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel5[4], NULL, NONE, FactTS
                            GenPhase},
                       3057 ; rs232cmd.c  809               { SCHPHASECmdTxt,       SCHPCmdTxt, NULL,                        
                                     NULL, NONE, FactTSGenScHPhase},
                       3058 ; rs232cmd.c  810       };
                       3059 ; rs232cmd.c  811       
                       3060 ; rs232cmd.c  812       struct CMD_STRUCT code FactoryLevel6[3] = {
00113A rrrrrrrrrrrrrr  3061         DD      _FactTSGenScHPhase
       rr                   
                       3064         PUBLIC  _FactoryLevel6
                       3065         ALIGN   1
00113E                 3066 _FactoryLevel6:
00113E rrrrrrrrrrrrrr  3067         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001146 rrrrrrrrrrrrrr  3068         DD      _FactoryLevel6+24
       rr                   
00114A 00000000000000  3069         DD      000000000H,000000000H
       00                   
001152 rrrrrrrrrrrrrr  3070         DD      _FactAudioGenStatus,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  47

ADDR   CODE            LINE SOURCELINE
00115E rrrrrrrrrrrrrr  3071         DD      _FactoryLevel6+48
       rr                   
001162 00000000000000  3072         DD      000000000H,000000000H
       00                   
00116A rrrrrrrrrrrrrr  3073         DD      _FactAudioGenDate,_ALEVELCmdTxt,_ALEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001176 00000000000000  3074         DD      000000000H,000000000H,000000000H
       0000000000           
                       3075 ; rs232cmd.c  813               { STATUSCmdTxt, STATCmdTxt, &FactoryLevel6[1], NULL, NONE, FactAu
                            dioGenStatus},
                       3076 ; rs232cmd.c  814               { DATECmdTxt,   DATECmdTxt, &FactoryLevel6[2], NULL, NONE, FactAu
                            dioGenDate},
                       3077 ; rs232cmd.c  815               { ALEVELCmdTxt, ALEVCmdTxt, NULL,                                
                             NULL, NONE, FactAudioGenLevel},
                       3078 ; rs232cmd.c  816       };
                       3079 ; rs232cmd.c  817       
                       3080 ; rs232cmd.c  818       struct CMD_STRUCT code FactoryLevel7[1] = {
001182 rrrrrrrrrrrrrr  3081         DD      _FactAudioGenLevel
       rr                   
                       3084         PUBLIC  _FactoryLevel7
                       3085         ALIGN   1
001186                 3086 _FactoryLevel7:
001186 rrrrrrrrrrrrrr  3087         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00118E 00000000000000  3088         DD      000000000H,000000000H,000000000H
       0000000000           
                       3089 ; rs232cmd.c  819               { VERSIONCmdTxt,        VERSCmdTxt, NULL, NULL, NONE, FactPLDVers
                            ion},
                       3090 ; rs232cmd.c  820       };
                       3091 ; rs232cmd.c  821       
                       3092 ; rs232cmd.c  822       struct CMD_STRUCT code FactoryLevel8[1] = {
00119A rrrrrrrrrrrrrr  3093         DD      _FactPLDVersion
       rr                   
                       3096         PUBLIC  _FactoryLevel8
                       3097         ALIGN   1
00119E                 3098 _FactoryLevel8:
00119E rrrrrrrrrrrrrr  3099         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011A6 00000000000000  3100         DD      000000000H,000000000H,000000000H
       0000000000           
                       3101 ; rs232cmd.c  823               { STATUSCmdTxt, STATCmdTxt, NULL, NULL, NONE, FactTCXOStatus},
                       3102 ; rs232cmd.c  824       };
                       3103 ; rs232cmd.c  825       
                       3104 ; rs232cmd.c  826       //***********************************************************************
                            ***
                       3105 ; rs232cmd.c  827       // The following parameter structures are based on the enumerated types
                       3106 ; rs232cmd.c  828       //  defined in TABLES.H, ie. DO NOT change the order of these names. If
                       3107 ; rs232cmd.c  829       //  the order is changed in TABLES.H it must also be changed here.
                       3108 ; rs232cmd.c  830       
                       3109 ; rs232cmd.c  831       struct PAR_STRUCT code SAVEPar[1] = {
0011B2 rrrrrrrrrrrrrr  3110         DD      _FactTCXOStatus
       rr                   
                       3120         PUBLIC  _SAVEPar
                       3121         ALIGN   1
0011B6                 3122 _SAVEPar:
0011B6 rrrrrrrrrrrrrr  3123         DD      _SAVEParTxt,_SAVEParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  48

ADDR   CODE            LINE SOURCELINE
                       3124 ; rs232cmd.c  832               { SAVEParTxt, SAVEParTxt, NULL}
                       3125 ; rs232cmd.c  833       };
                       3126 ; rs232cmd.c  834       
                       3127 ; rs232cmd.c  835       struct PAR_STRUCT code GenlockSystemPar[4] = {
0011BE 00000000        3128         DD      000000000H
                       3132         PUBLIC  _GenlockSystemPar
                       3133         ALIGN   1
0011C2                 3134 _GenlockSystemPar:
0011C2 rrrrrrrrrrrrrr  3135         DD      _INTERNALParTxt,_INTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011CA rrrrrrrrrrrrrr  3136         DD      _GenlockSystemPar+12
       rr                   
0011CE rrrrrrrrrrrrrr  3137         DD      _PALBURSTParTxt,_PALBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011D6 rrrrrrrrrrrrrr  3138         DD      _GenlockSystemPar+24
       rr                   
0011DA rrrrrrrrrrrrrr  3139         DD      _NTSCBURSTParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011E2 rrrrrrrrrrrrrr  3140         DD      _GenlockSystemPar+36
       rr                   
0011E6 rrrrrrrrrrrrrr  3141         DD      _F10MHzParTxt,_F10MHzParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3142 ; rs232cmd.c  836               { INTERNALParTxt,  INTParTxt,   &GenlockSystemPar[1]},
                       3143 ; rs232cmd.c  837               { PALBURSTParTxt,  PALBParTxt,  &GenlockSystemPar[2]},
                       3144 ; rs232cmd.c  838               { NTSCBURSTParTxt, NTSCParTxt,  &GenlockSystemPar[3]},
                       3145 ; rs232cmd.c  839               { F10MHzParTxt,          F10MHzParTxt, NULL},
                       3146 ; rs232cmd.c  840       };
                       3147 ; rs232cmd.c  841       
                       3148 ; rs232cmd.c  842       struct PAR_STRUCT code SystemPar[4] = {
0011EE 00000000        3149         DD      000000000H
                       3152         PUBLIC  _SystemPar
                       3153         ALIGN   1
0011F2                 3154 _SystemPar:
0011F2 rrrrrrrrrrrrrr  3155         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011FA rrrrrrrrrrrrrr  3156         DD      _SystemPar+12
       rr                   
0011FE rrrrrrrrrrrrrr  3157         DD      _PAL_IDParTxt,_PAL_IDParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001206 rrrrrrrrrrrrrr  3158         DD      _SystemPar+24
       rr                   
00120A rrrrrrrrrrrrrr  3159         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001212 rrrrrrrrrrrrrr  3160         DD      _SystemPar+36
       rr                   
001216 rrrrrrrrrrrrrr  3161         DD      _JNTSCParTxt,_JNTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3162 ; rs232cmd.c  843               { PALParTxt,     PALParTxt, &SystemPar[1]},
                       3163 ; rs232cmd.c  844               { PAL_IDParTxt, PAL_IDParTxt, &SystemPar[2]},
                       3164 ; rs232cmd.c  845               { NTSCParTxt,    NTSCParTxt, &SystemPar[3]},
                       3165 ; rs232cmd.c  846               { JNTSCParTxt,  JNTSCParTxt,     NULL},
                       3166 ; rs232cmd.c  847       };
                       3167 ; rs232cmd.c  848       
                       3168 ; rs232cmd.c  849       struct PAR_STRUCT code CBPatternPar[23] = {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  49

ADDR   CODE            LINE SOURCELINE
00121E 00000000        3169         DD      000000000H
                       3173         PUBLIC  _CBPatternPar
                       3174         ALIGN   1
001222                 3175 _CBPatternPar:
001222 rrrrrrrrrrrrrr  3176         DD      _CBSMPTEParTxt,_CBSMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00122A rrrrrrrrrrrrrr  3177         DD      _CBPatternPar+12
       rr                   
00122E rrrrrrrrrrrrrr  3178         DD      _CBEBUParTxt,_CBEBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001236 rrrrrrrrrrrrrr  3179         DD      _CBPatternPar+24
       rr                   
00123A rrrrrrrrrrrrrr  3180         DD      _CBFCCParTxt,_CBFCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001242 rrrrrrrrrrrrrr  3181         DD      _CBPatternPar+36
       rr                   
001246 rrrrrrrrrrrrrr  3182         DD      _CBEBU8ParTxt,_CBEB8ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00124E rrrrrrrrrrrrrr  3183         DD      _CBPatternPar+48
       rr                   
001252 rrrrrrrrrrrrrr  3184         DD      _CB100ParTxt,_CB100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00125A rrrrrrrrrrrrrr  3185         DD      _CBPatternPar+60
       rr                   
00125E rrrrrrrrrrrrrr  3186         DD      _CBGREY75ParTxt,_CBGR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001266 rrrrrrrrrrrrrr  3187         DD      _CBPatternPar+72
       rr                   
00126A rrrrrrrrrrrrrr  3188         DD      _CBRED75ParTxt,_CBR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001272 rrrrrrrrrrrrrr  3189         DD      _CBPatternPar+84
       rr                   
001276 rrrrrrrrrrrrrr  3190         DD      _RED75ParTxt,_RED75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00127E rrrrrrrrrrrrrr  3191         DD      _CBPatternPar+96
       rr                   
001282 rrrrrrrrrrrrrr  3192         DD      _MULTIBURSTParTxt,_MULTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00128A rrrrrrrrrrrrrr  3193         DD      _CBPatternPar+108
       rr                   
00128E rrrrrrrrrrrrrr  3194         DD      _CCIR18ParTxt,_CCIR18ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001296 rrrrrrrrrrrrrr  3195         DD      _CBPatternPar+120
       rr                   
00129A rrrrrrrrrrrrrr  3196         DD      _WIN10ParTxt,_WIN10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012A2 rrrrrrrrrrrrrr  3197         DD      _CBPatternPar+132
       rr                   
0012A6 rrrrrrrrrrrrrr  3198         DD      _WIN15ParTxt,_WIN15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  50

ADDR   CODE            LINE SOURCELINE
0012AE rrrrrrrrrrrrrr  3199         DD      _CBPatternPar+144
       rr                   
0012B2 rrrrrrrrrrrrrr  3200         DD      _WIN20ParTxt,_WIN20ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012BA rrrrrrrrrrrrrr  3201         DD      _CBPatternPar+156
       rr                   
0012BE rrrrrrrrrrrrrr  3202         DD      _WIN100ParTxt,_WIN100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012C6 rrrrrrrrrrrrrr  3203         DD      _CBPatternPar+168
       rr                   
0012CA rrrrrrrrrrrrrr  3204         DD      _BLWH15ParTxt,_BLWH15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012D2 rrrrrrrrrrrrrr  3205         DD      _CBPatternPar+180
       rr                   
0012D6 rrrrrrrrrrrrrr  3206         DD      _WHITE100ParTxt,_WHIT100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012DE rrrrrrrrrrrrrr  3207         DD      _CBPatternPar+192
       rr                   
0012E2 rrrrrrrrrrrrrr  3208         DD      _BLACKParTxt,_BLACParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012EA rrrrrrrrrrrrrr  3209         DD      _CBPatternPar+204
       rr                   
0012EE rrrrrrrrrrrrrr  3210         DD      _SDICHECKParTxt,_SDICParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012F6 rrrrrrrrrrrrrr  3211         DD      _CBPatternPar+216
       rr                   
0012FA rrrrrrrrrrrrrr  3212         DD      _DGREYParTxt,_DGRParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001302 rrrrrrrrrrrrrr  3213         DD      _CBPatternPar+228
       rr                   
001306 rrrrrrrrrrrrrr  3214         DD      _STAIRCASE5ParTxt,_STA5ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00130E rrrrrrrrrrrrrr  3215         DD      _CBPatternPar+240
       rr                   
001312 rrrrrrrrrrrrrr  3216         DD      _STAIRCASE10ParTxt,_STA10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00131A rrrrrrrrrrrrrr  3217         DD      _CBPatternPar+252
       rr                   
00131E rrrrrrrrrrrrrr  3218         DD      _CROSSHATCHParTxt,_CROSParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001326 rrrrrrrrrrrrrr  3219         DD      _CBPatternPar+264
       rr                   
00132A rrrrrrrrrrrrrr  3220         DD      _PLUGEParTxt,_PLUGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3221 ; rs232cmd.c  850               { CBSMPTEParTxt,                CBSMParTxt,     &CBPatternPar[1]}
                            ,
                       3222 ; rs232cmd.c  851               { CBEBUParTxt,          CBEBParTxt,     &CBPatternPar[2]},
                       3223 ; rs232cmd.c  852               { CBFCCParTxt,          CBFCParTxt,     &CBPatternPar[3]},
                       3224 ; rs232cmd.c  853               { CBEBU8ParTxt,                 CBEB8ParTxt,    &CBPatternPar[4]}
                            ,
                       3225 ; rs232cmd.c  854               { CB100ParTxt,          CB100ParTxt,    &CBPatternPar[5]},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  51

ADDR   CODE            LINE SOURCELINE
                       3226 ; rs232cmd.c  855               { CBGREY75ParTxt,       CBGR75ParTxt,   &CBPatternPar[6]},
                       3227 ; rs232cmd.c  856               { CBRED75ParTxt,                CBR75ParTxt,    &CBPatternPar[7]}
                            ,
                       3228 ; rs232cmd.c  857               { RED75ParTxt,          RED75ParTxt,    &CBPatternPar[8]},
                       3229 ; rs232cmd.c  858       
                       3230 ; rs232cmd.c  859               { MULTIBURSTParTxt,     MULTParTxt,     &CBPatternPar[9]},
                       3231 ; rs232cmd.c  860               { CCIR18ParTxt,         CCIR18ParTxt,   &CBPatternPar[10]},
                       3232 ; rs232cmd.c  861                                                                                
                                                                                                            
                       3233 ; rs232cmd.c  862               { WIN10ParTxt,          WIN10ParTxt,    &CBPatternPar[11]},
                       3234 ; rs232cmd.c  863               { WIN15ParTxt,          WIN15ParTxt,    &CBPatternPar[12]},
                       3235 ; rs232cmd.c  864               { WIN20ParTxt,          WIN20ParTxt,    &CBPatternPar[13]},
                       3236 ; rs232cmd.c  865               { WIN100ParTxt,                 WIN100ParTxt,   &CBPatternPar[14]
                            },
                       3237 ; rs232cmd.c  866               { BLWH15ParTxt,                 BLWH15ParTxt,   &CBPatternPar[15]
                            },
                       3238 ; rs232cmd.c  867               { WHITE100ParTxt,       WHIT100ParTxt, &CBPatternPar[16]},
                       3239 ; rs232cmd.c  868               { BLACKParTxt,          BLACParTxt,     &CBPatternPar[17]},
                       3240 ; rs232cmd.c  869       
                       3241 ; rs232cmd.c  870               { SDICHECKParTxt,       SDICParTxt,     &CBPatternPar[18]},
                       3242 ; rs232cmd.c  871               { DGREYParTxt,          DGRParTxt,              &CBPatternPar[19]
                            },
                       3243 ; rs232cmd.c  872       
                       3244 ; rs232cmd.c  873               { STAIRCASE5ParTxt,     STA5ParTxt,     &CBPatternPar[20]},
                       3245 ; rs232cmd.c  874               { STAIRCASE10ParTxt, STA10ParTxt,       &CBPatternPar[21]},
                       3246 ; rs232cmd.c  875       
                       3247 ; rs232cmd.c  876               { CROSSHATCHParTxt,     CROSParTxt,     &CBPatternPar[22]},
                       3248 ; rs232cmd.c  877               { PLUGEParTxt,          PLUGParTxt,     NULL},
                       3249 ; rs232cmd.c  878       };
                       3250 ; rs232cmd.c  879       
                       3251 ; rs232cmd.c  880       struct PAR_STRUCT code EmbAudioSignalPar[3] = {
001332 00000000        3252         DD      000000000H
                       3256         PUBLIC  _EmbAudioSignalPar
                       3257         ALIGN   1
001336                 3258 _EmbAudioSignalPar:
001336 rrrrrrrrrrrrrr  3259         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00133E rrrrrrrrrrrrrr  3260         DD      _EmbAudioSignalPar+12
       rr                   
001342 rrrrrrrrrrrrrr  3261         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00134A rrrrrrrrrrrrrr  3262         DD      _EmbAudioSignalPar+24
       rr                   
00134E rrrrrrrrrrrrrr  3263         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3264 ; rs232cmd.c  881               { OFFParTxt,            OFFParTxt,              &EmbAudioSignalPa
                            r[1]},
                       3265 ; rs232cmd.c  882               { SILENCEParTxt,        SILParTxt,              &EmbAudioSignalPa
                            r[2]},
                       3266 ; rs232cmd.c  883               { S1KHZParTxt,          S1KHZParTxt,    NULL},
                       3267 ; rs232cmd.c  884       };
                       3268 ; rs232cmd.c  885       
                       3269 ; rs232cmd.c  886       struct PAR_STRUCT code AudioOutputPar[2] = {
001356 00000000        3270         DD      000000000H
                       3274         PUBLIC  _AudioOutputPar
                       3275         ALIGN   1
00135A                 3276 _AudioOutputPar:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  52

ADDR   CODE            LINE SOURCELINE
00135A rrrrrrrrrrrrrr  3277         DD      _ANALOGParTxt,_ANALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001362 rrrrrrrrrrrrrr  3278         DD      _AudioOutputPar+12
       rr                   
001366 rrrrrrrrrrrrrr  3279         DD      _AESEBUParTxt,_AESParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3280 ; rs232cmd.c  887               { ANALOGParTxt, ANALParTxt, &AudioOutputPar[1]},
                       3281 ; rs232cmd.c  888               { AESEBUParTxt, AESParTxt,  NULL},
                       3282 ; rs232cmd.c  889       };
                       3283 ; rs232cmd.c  890       
                       3284 ; rs232cmd.c  891       struct PAR_STRUCT code AESEBUSystemPar[2] = {
00136E 00000000        3285         DD      000000000H
                       3288         PUBLIC  _AESEBUSystemPar
                       3289         ALIGN   1
001372                 3290 _AESEBUSystemPar:
001372 rrrrrrrrrrrrrr  3291         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00137A rrrrrrrrrrrrrr  3292         DD      _AESEBUSystemPar+12
       rr                   
00137E rrrrrrrrrrrrrr  3293         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3294 ; rs232cmd.c  892               { PALParTxt,  PALParTxt,  &AESEBUSystemPar[1]},
                       3295 ; rs232cmd.c  893               { NTSCParTxt, NTSCParTxt, NULL},
                       3296 ; rs232cmd.c  894       };
                       3297 ; rs232cmd.c  895       
                       3298 ; rs232cmd.c  896       struct PAR_STRUCT code AudioSignalPar[4] = {
001386 00000000        3299         DD      000000000H
                       3302         PUBLIC  _AudioSignalPar
                       3303         ALIGN   1
00138A                 3304 _AudioSignalPar:
00138A rrrrrrrrrrrrrr  3305         DD      _S500HZParTxt,_S500HZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001392 rrrrrrrrrrrrrr  3306         DD      _AudioSignalPar+12
       rr                   
001396 rrrrrrrrrrrrrr  3307         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00139E rrrrrrrrrrrrrr  3308         DD      _AudioSignalPar+24
       rr                   
0013A2 rrrrrrrrrrrrrr  3309         DD      _SEBU1KHZParTxt,_SEBU1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013AA rrrrrrrrrrrrrr  3310         DD      _AudioSignalPar+36
       rr                   
0013AE rrrrrrrrrrrrrr  3311         DD      _S8KHZParTxt,_S8KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3312 ; rs232cmd.c  897               { S500HZParTxt,         S500HZParTxt,    &AudioSignalPar[1]},
                       3313 ; rs232cmd.c  898               { S1KHZParTxt,  S1KHZParTxt,     &AudioSignalPar[2]},
                       3314 ; rs232cmd.c  899               { SEBU1KHZParTxt, SEBU1KHZParTxt, &AudioSignalPar[3]},
                       3315 ; rs232cmd.c  900               { S8KHZParTxt,  S8KHZParTxt,     NULL},
                       3316 ; rs232cmd.c  901       };
                       3317 ; rs232cmd.c  902       
                       3318 ; rs232cmd.c  903       struct PAR_STRUCT code AnalogLevelPar[1] = {
0013B6 00000000        3319         DD      000000000H
                       3322         PUBLIC  _AnalogLevelPar
                       3323         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  53

ADDR   CODE            LINE SOURCELINE
0013BA                 3324 _AnalogLevelPar:
0013BA rrrrrrrrrrrrrr  3325         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3326 ; rs232cmd.c  904               { SILENCEParTxt, SILParTxt, NULL},
                       3327 ; rs232cmd.c  905       };
                       3328 ; rs232cmd.c  906       
                       3329 ; rs232cmd.c  907       struct PAR_STRUCT code AESEBULevelPar[1] = {
0013C2 00000000        3330         DD      000000000H
                       3333         PUBLIC  _AESEBULevelPar
                       3334         ALIGN   1
0013C6                 3335 _AESEBULevelPar:
0013C6 rrrrrrrrrrrrrr  3336         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3337 ; rs232cmd.c  908               { SILENCEParTxt, SILParTxt, NULL},
                       3338 ; rs232cmd.c  909       };
                       3339 ; rs232cmd.c  910       
                       3340 ; rs232cmd.c  911       struct PAR_STRUCT code AudioFrequencyPar[2] = {
0013CE 00000000        3341         DD      000000000H
                       3344         PUBLIC  _AudioFrequencyPar
                       3345         ALIGN   1
0013D2                 3346 _AudioFrequencyPar:
0013D2 rrrrrrrrrrrrrr  3347         DD      _F441KHZParTxt,_F441KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013DA rrrrrrrrrrrrrr  3348         DD      _AudioFrequencyPar+12
       rr                   
0013DE rrrrrrrrrrrrrr  3349         DD      _F48KHZParTxt,_F48KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3350 ; rs232cmd.c  912               { F441KHZParTxt, F441KHZParTxt, &AudioFrequencyPar[1]},
                       3351 ; rs232cmd.c  913               { F48KHZParTxt,  F48KHZParTxt,  NULL},
                       3352 ; rs232cmd.c  914       };
                       3353 ; rs232cmd.c  915       
                       3354 ; rs232cmd.c  916       struct PAR_STRUCT code UnitPar[2] = {
0013E6 00000000        3355         DD      000000000H
                       3358         PUBLIC  _UnitPar
                       3359         ALIGN   1
0013EA                 3360 _UnitPar:
0013EA rrrrrrrrrrrrrr  3361         DD      _BBParTxt,_BBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013F2 rrrrrrrrrrrrrr  3362         DD      _UnitPar+12
       rr                   
0013F6 rrrrrrrrrrrrrr  3363         DD      _SPGParTxt,_SPGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3364 ; rs232cmd.c  917               { BBParTxt,  BBParTxt,  &UnitPar[1]},
                       3365 ; rs232cmd.c  918               { SPGParTxt, SPGParTxt, NULL},
                       3366 ; rs232cmd.c  919       };
                       3367 ; rs232cmd.c  920       
                       3368 ; rs232cmd.c  921       struct PAR_STRUCT code OffOnPar[2] = {
0013FE 00000000        3369         DD      000000000H
                       3372         PUBLIC  _OffOnPar
                       3373         ALIGN   1
001402                 3374 _OffOnPar:
001402 rrrrrrrrrrrrrr  3375         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00140A rrrrrrrrrrrrrr  3376         DD      _OffOnPar+12
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  54

ADDR   CODE            LINE SOURCELINE
00140E rrrrrrrrrrrrrr  3377         DD      _ONParTxt,_ONParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3378 ; rs232cmd.c  922               { OFFParTxt, OFFParTxt, &OffOnPar[1]},
                       3379 ; rs232cmd.c  923               { ONParTxt,  ONParTxt,  NULL},
                       3380 ; rs232cmd.c  924       };
                       3381 ; rs232cmd.c  925       
                       3382 ; rs232cmd.c  926       struct PAR_STRUCT code FactBBGenSignalPar[2] = {
001416 00000000        3383         DD      000000000H
                       3386         PUBLIC  _FactBBGenSignalPar
                       3387         ALIGN   1
00141A                 3388 _FactBBGenSignalPar:
00141A rrrrrrrrrrrrrr  3389         DD      _NORMALParTxt,_NORMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001422 rrrrrrrrrrrrrr  3390         DD      _FactBBGenSignalPar+12
       rr                   
001426 rrrrrrrrrrrrrr  3391         DD      _F45MHZParTxt,_F45MHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3392 ; rs232cmd.c  927               { NORMALParTxt, NORMParTxt,     &FactBBGenSignalPar[1]},
                       3393 ; rs232cmd.c  928               { F45MHZParTxt, F45MHZParTxt, NULL},
                       3394 ; rs232cmd.c  929       };
                       3395 ; rs232cmd.c  930       
                       3396 ; rs232cmd.c  931       struct PAR_STRUCT code MinMaxPar[2] = {
00142E 00000000        3397         DD      000000000H
                       3400         PUBLIC  _MinMaxPar
                       3401         ALIGN   1
001432                 3402 _MinMaxPar:
001432 rrrrrrrrrrrrrr  3403         DD      _MINParTxt,_MINParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00143A rrrrrrrrrrrrrr  3404         DD      _MinMaxPar+12
       rr                   
00143E rrrrrrrrrrrrrr  3405         DD      _MAXParTxt,_MAXParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3406 ; rs232cmd.c  932               { MINParTxt, MINParTxt, &MinMaxPar[1]},
                       3407 ; rs232cmd.c  933               { MAXParTxt, MAXParTxt, NULL},
                       3408 ; rs232cmd.c  934       };
                       3409 ; rs232cmd.c  935       
                       3410 ; rs232cmd.c  936       struct PAR_STRUCT code UpDownPar[2] = {
001446 00000000        3411         DD      000000000H
                       3414         PUBLIC  _UpDownPar
                       3415         ALIGN   1
00144A                 3416 _UpDownPar:
00144A rrrrrrrrrrrrrr  3417         DD      _UPParTxt,_UPParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001452 rrrrrrrrrrrrrr  3418         DD      _UpDownPar+12
       rr                   
001456 rrrrrrrrrrrrrr  3419         DD      _DOWNParTxt,_DOWNParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3420 ; rs232cmd.c  937               { UPParTxt,   UPParTxt,   &UpDownPar[1]},
                       3421 ; rs232cmd.c  938               { DOWNParTxt, DOWNParTxt, NULL},
                       3422 ; rs232cmd.c  939       };
                       3423 ; rs232cmd.c  940       
                       3424 ; rs232cmd.c  941       /************************************************************************
                            ***/
                       3425 ; rs232cmd.c  942       // Temporary variables PRIVATE NOT overlayable
                       3426 ; rs232cmd.c  943       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  55

ADDR   CODE            LINE SOURCELINE
                       3427 ; rs232cmd.c  944       static unsigned int Suffix[4]=
00145E 00000000        3428         DD      000000000H
000000                 3429 RS232CMD_INI_FA SEGMENT HDATA INSEGMENT INIT
000000                 3430         RSEG    RS232CMD_INI_FA
                       3433         ALIGN   1
000000                 3434 _Suffix:
                       3435 ; rs232cmd.c  945       {
                       3436 ; rs232cmd.c  946               1,1,1,1
                       3437 ; rs232cmd.c  947       };
                       3438 ; rs232cmd.c  948       
                       3439 ; rs232cmd.c  949       static bool PasswordProtected = true;
000000 01000100010001  3440         DW      00001H,00001H,00001H,00001H
       00                   
                       3442         ALIGN   1
000008                 3443 _PasswordProtected:
                       3444 ; rs232cmd.c  950       static UC GenlockCalEnable = 0;
000008 FFFF            3445         DW      0FFFFH
00000A                 3447 _GenlockCalEnable:
                       3448 ; rs232cmd.c  951       static int GenlockCalValue = 0;
00000A 00              3449         DB      000H
00000B RESERVED        3451         ALIGN   1
00000B
00000C                 3452 _GenlockCalValue:
                       3453 ; rs232cmd.c  952       
                       3454 ; rs232cmd.c  953       /************************************************************************
                            **/
                       3455 ; rs232cmd.c  954       /* CLSCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3456 ; rs232cmd.c  955       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3457 ; rs232cmd.c  956       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       3458 ; rs232cmd.c  957       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3459 ; rs232cmd.c  958       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3460 ; rs232cmd.c  959       /* Function:  Clear status command                                       
                                                                                                                             
                                                    */
                       3461 ; rs232cmd.c  960       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3462 ; rs232cmd.c  961       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3463 ; rs232cmd.c  962       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3464 ; rs232cmd.c  963       /************************************************************************
                            **/
                       3465 ; rs232cmd.c  964       void CLSCommand( void)
                       3466 ; rs232cmd.c  965       {
00000C 0000            3467         DW      00000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  56

ADDR   CODE            LINE SOURCELINE
000000                 3468 RS232CMD_PR     SEGMENT HCODE
000000                 3469         RSEG    RS232CMD_PR
                       3470         ALIGN   1
                       3472         PUBLIC  _CLSCommand
000000                 3473 _CLSCommand:
                       3477 ; rs232cmd.c  966               if ( CmdExecute && !SCPIError)
000000 964842rr        3479         MOV.B   ES,#SEG( _CmdExecute )
000004 9908rrrr        3480         MOV.W   R0,#SOF( _CmdExecute )
000008 8200            3481         MOV.B   R0L,[R0]
00000A F320            3482         BEQ     _8
00000C 964842rr        3483         MOV.B   ES,#SEG( _SCPIError )
000010 9908rrrr        3484         MOV.W   R0,#SOF( _SCPIError )
000014 8A00            3485         MOV.W   R0,[R0]
000016 F21A            3486         BNE     _8
                       3487 ; rs232cmd.c  967               {
                       3488 ; rs232cmd.c  968                       if ( CmdRequest)
000018 964842rr        3490         MOV.B   ES,#SEG( _CmdRequest )
00001C 9908rrrr        3491         MOV.W   R0,#SOF( _CmdRequest )
000020 8200            3492         MOV.B   R0L,[R0]
000022 F306            3493         BEQ     _3
                       3494 ; rs232cmd.c  969                               SCPIError = SyntaxErr;
000024 964842rr        3496         MOV.B   ES,#SEG( _SCPIError )
000028 9908rrrr        3497         MOV.W   R0,#SOF( _SCPIError )
00002C BA03            3498         MOV.W   [R0],#03H
00002E D680            3499         RET
00002E D680            3499         RET
000030                 3500 _3:
                       3501 ; rs232cmd.c  970                       else
                       3502 ; rs232cmd.c  971                       {
                       3503 ; rs232cmd.c  972                               if ( ParCnt)
000030 964842rr        3505         MOV.B   ES,#SEG( _ParCnt )
000034 9908rrrr        3506         MOV.W   R0,#SOF( _ParCnt )
000038 8200            3507         MOV.B   R0L,[R0]
00003A F306            3508         BEQ     _4
                       3509 ; rs232cmd.c  973                                       SCPIError = ParNotAllowed;
00003C 964842rr        3511         MOV.B   ES,#SEG( _SCPIError )
000040 9908rrrr        3512         MOV.W   R0,#SOF( _SCPIError )
000044 BA06            3513         MOV.W   [R0],#06H
000046 D680            3514         RET
000046 D680            3514         RET
000048                 3515 _4:
                       3516 ; rs232cmd.c  974                               else
                       3517 ; rs232cmd.c  975                                       ResetErrorEventQueue();
                       3519         CALL    _ResetErrorEventQueue
000048 C4rrrrrr       +3519 ;       FCALL   _ResetErrorEventQueue
                       3520 ; rs232cmd.c  976                       }
                       3521 ; rs232cmd.c  977               }
00004C                 3523 _8:
                       3524 ; rs232cmd.c  978       }
00004C D680            3526         RET
                       3528 ; rs232cmd.c  979       
                       3529 ; rs232cmd.c  980       /************************************************************************
                            **/
                       3530 ; rs232cmd.c  981       /* ESECommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3531 ; rs232cmd.c  982       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  57

ADDR   CODE            LINE SOURCELINE
                       3532 ; rs232cmd.c  983       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3533 ; rs232cmd.c  984       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3534 ; rs232cmd.c  985       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3535 ; rs232cmd.c  986       /* Function:    Set/read the Standard Event Status Enable Register       
                                                            */
                       3536 ; rs232cmd.c  987       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       3537 ; rs232cmd.c  988       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3538 ; rs232cmd.c  989       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3539 ; rs232cmd.c  990       /************************************************************************
                            **/
                       3540 ; rs232cmd.c  991       void ESECommand( void)
                       3541 ; rs232cmd.c  992       {
                       3542         ALIGN   1
                       3544         PUBLIC  _ESECommand
00004E                 3545 _ESECommand:
00004E A97E            3549         ADDS.W  R7,#0EH
                       3552 ; rs232cmd.c  993               int Reg;
                       3553 ; rs232cmd.c  994       
                       3554 ; rs232cmd.c  995               if ( CmdExecute && !SCPIError)
000050 964842rr        3556         MOV.B   ES,#SEG( _CmdExecute )
000054 9908rrrr        3557         MOV.W   R0,#SOF( _CmdExecute )
000058 8200            3558         MOV.B   R0L,[R0]
00005A F35E            3559         BEQ     _21
00005C 964842rr        3560         MOV.B   ES,#SEG( _SCPIError )
000060 9908rrrr        3561         MOV.W   R0,#SOF( _SCPIError )
000064 8A00            3562         MOV.W   R0,[R0]
000066 F258            3563         BNE     _21
                       3564 ; rs232cmd.c  996               {
                       3565 ; rs232cmd.c  997                       if ( CmdRequest)
000068 964842rr        3567         MOV.B   ES,#SEG( _CmdRequest )
00006C 9908rrrr        3568         MOV.W   R0,#SOF( _CmdRequest )
000070 8200            3569         MOV.B   R0L,[R0]
000072 F31E            3570         BEQ     _12
                       3571 ; rs232cmd.c  998                       {
                       3572 ; rs232cmd.c  999                               if ( ParCnt)
000074 964842rr        3574         MOV.B   ES,#SEG( _ParCnt )
000078 9908rrrr        3575         MOV.W   R0,#SOF( _ParCnt )
00007C 8200            3576         MOV.B   R0L,[R0]
00007E F306            3577         BEQ     _11
                       3578 ; rs232cmd.c 1000                                       SCPIError = ParNotAllowed;
000080 964842rr        3580         MOV.B   ES,#SEG( _SCPIError )
000084 9908rrrr        3581         MOV.W   R0,#SOF( _SCPIError )
000088 BA06            3582         MOV.W   [R0],#06H
00008A FE46            3583         BR      _21
00008A FE46            3583         BR      _21
00008C                 3584 _11:
                       3585 ; rs232cmd.c 1001                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  58

ADDR   CODE            LINE SOURCELINE
                       3586 ; rs232cmd.c 1002                                       rs232printf( 12, "%d\n", ESEReg);
00008C 9908000C        3588         MOV.W   R0,#0CH
000090 964842rr        3589         MOV.B   ES,#SEG( _ESEReg )
000094 9918rrrr        3590         MOV.W   R1,#SOF( _ESEReg )
000098 8221            3591         MOV.B   R1L,[R1]
00009A B130            3592         MOVS.B  R1H,#00H
00009C 0F02            3593         PUSH.W  R1
00009E 9938rrrr        3595         MOV.W   R3,#SEG( _9 )
0000A2 9928rrrr        3596         MOV.W   R2,#SOF( _9 )
0000A6 0F0C            3597         PUSH.W  R2, R3
                       3599         CALL    _rs232printf
0000A8 C4rrrrrr       +3599 ;       FCALL   _rs232printf
0000AC A976            3600         ADDS.W  R7,#06H
                       3602 ; rs232cmd.c 1003                       }
0000AE FE34            3604         BR      _21
0000AE FE34            3604         BR      _21
0000B0                 3605 _12:
                       3606 ; rs232cmd.c 1004                       else
                       3607 ; rs232cmd.c 1005                       {
                       3608 ; rs232cmd.c 1006                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0000B0 964842rr        3610         MOV.B   ES,#SEG( _ParCnt )
0000B4 9908rrrr        3611         MOV.W   R0,#SOF( _ParCnt )
0000B8 8200            3612         MOV.B   R0L,[R0]
0000BA 910401          3613         CMP.B   R0L,#01H
0000BD F215            3614         BNE     _13
0000BF 9918rrrr        3615         MOV.W   R1,#SEG( _Cmd )
0000C3 9908rrrr        3616         MOV.W   R0,#SOF( _Cmd )
0000C7 9168rr          3617         MOV.B   R3L,#SEG( __lc_bs )
0000CA 7177            3618         XOR.B   R3H,R3H
0000CC 8927            3619         MOV.W   R2,R7
0000CE 0F0C            3620         PUSH.W  R2, R3
0000D0 9938rrrr        3622         MOV.W   R3,#SEG( _10 )
0000D4 9928rrrr        3623         MOV.W   R2,#SOF( _10 )
0000D8 0F0C            3624         PUSH.W  R2, R3
                       3626         CALL    _sscanf
0000DA C4rrrrrr       +3626 ;       FCALL   _sscanf
0000DE 99700008        3627         ADD.W   R7,#08H
0000E2 99040001        3629         CMP.W   R0,#01H
0000E6 F306            3630         BEQ     _14
0000E6 F306            3630         BEQ     _14
0000E8                 3631 _13:
                       3632 ; rs232cmd.c 1007                               {
                       3633 ; rs232cmd.c 1008                                       SCPIError = SyntaxErr;  
0000E8 964842rr        3635         MOV.B   ES,#SEG( _SCPIError )
0000EC 9908rrrr        3636         MOV.W   R0,#SOF( _SCPIError )
0000F0 BA03            3637         MOV.W   [R0],#03H
                       3638 ; rs232cmd.c 1009                                       return;
0000F2 FE12            3640         BR      _21
                       3641 ; rs232cmd.c 1010                               }
0000F4                 3643 _14:
                       3644 ; rs232cmd.c 1011       
                       3645 ; rs232cmd.c 1012                               if ( Reg > 255)
0000F4 9A7400FF        3647         CMP.W   [R7],#0FFH
0000F8 FD07            3648         BLE     _15
                       3649 ; rs232cmd.c 1013                               {
                       3650 ; rs232cmd.c 1014                                       SCPIError = DataOutOfRange;
0000FA 964842rr        3652         MOV.B   ES,#SEG( _SCPIError )
0000FE 9908rrrr        3653         MOV.W   R0,#SOF( _SCPIError )
000102 9A080021        3654         MOV.W   [R0],#021H
                       3655 ; rs232cmd.c 1015                                       return;
000106 FE08            3657         BR      _21
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  59

ADDR   CODE            LINE SOURCELINE
                       3658 ; rs232cmd.c 1016                               }
000108                 3660 _15:
                       3661 ; rs232cmd.c 1017       
                       3662 ; rs232cmd.c 1018                               ESEReg = Reg & 0xFF;
000108 8A07            3664         MOV.W   R0,[R7]
00010A 9105FF          3665         AND.B   R0L,#0FFH
00010D 964842rr        3666         MOV.B   ES,#SEG( _ESEReg )
000111 9918rrrr        3667         MOV.W   R1,#SOF( _ESEReg )
000115 8209            3668         MOV.B   [R1],R0L
                       3669 ; rs232cmd.c 1019                       }
                       3670 ; rs232cmd.c 1020               }
                       3671 ; rs232cmd.c 1021       }
000118                 3673 _21:
000118 A972            3674         ADDS.W  R7,#02H
00011A D680            3676         RET
                       3678 ; rs232cmd.c 1022       
                       3679 ; rs232cmd.c 1023       /************************************************************************
                            **/
                       3680 ; rs232cmd.c 1024       /* ESRCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3681 ; rs232cmd.c 1025       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3682 ; rs232cmd.c 1026       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3683 ; rs232cmd.c 1027       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3684 ; rs232cmd.c 1028       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3685 ; rs232cmd.c 1029       /* Function:    Read and clear the Standard Event Status Register        
                                                                    */
                       3686 ; rs232cmd.c 1030       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3687 ; rs232cmd.c 1031       /*                                              The register will reset t
                            o zero.                                                                                          
                                            */
                       3688 ; rs232cmd.c 1032       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3689 ; rs232cmd.c 1033       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3690 ; rs232cmd.c 1034       /************************************************************************
                            **/
                       3691 ; rs232cmd.c 1035       void ESRCommand( void)
                       3692 ; rs232cmd.c 1036       {
                       3693         ALIGN   1
                       3695         PUBLIC  _ESRCommand
00011C                 3696 _ESRCommand:
                       3702 ; rs232cmd.c 1037               int Reg;
                       3703 ; rs232cmd.c 1038       
                       3704 ; rs232cmd.c 1039               if ( CmdExecute && !SCPIError)
00011C 964842rr        3706         MOV.B   ES,#SEG( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  60

ADDR   CODE            LINE SOURCELINE
000120 9908rrrr        3707         MOV.W   R0,#SOF( _CmdExecute )
000124 8200            3708         MOV.B   R0L,[R0]
000126 F332            3709         BEQ     _30
000128 964842rr        3710         MOV.B   ES,#SEG( _SCPIError )
00012C 9908rrrr        3711         MOV.W   R0,#SOF( _SCPIError )
000130 8A00            3712         MOV.W   R0,[R0]
000132 F22C            3713         BNE     _30
                       3714 ; rs232cmd.c 1040               {
                       3715 ; rs232cmd.c 1041                       if ( CmdRequest)
000134 964842rr        3717         MOV.B   ES,#SEG( _CmdRequest )
000138 9908rrrr        3718         MOV.W   R0,#SOF( _CmdRequest )
00013C 8200            3719         MOV.B   R0L,[R0]
00013E F321            3720         BEQ     _26
                       3721 ; rs232cmd.c 1042                       {
                       3722 ; rs232cmd.c 1043                               if ( ParCnt)
000140 964842rr        3724         MOV.B   ES,#SEG( _ParCnt )
000144 9908rrrr        3725         MOV.W   R0,#SOF( _ParCnt )
000148 8200            3726         MOV.B   R0L,[R0]
00014A F306            3727         BEQ     _25
                       3728 ; rs232cmd.c 1044                                       SCPIError = ParNotAllowed;
00014C 964842rr        3730         MOV.B   ES,#SEG( _SCPIError )
000150 9908rrrr        3731         MOV.W   R0,#SOF( _SCPIError )
000154 BA06            3732         MOV.W   [R0],#06H
000156 D680            3733         RET
000156 D680            3733         RET
000158                 3734 _25:
                       3735 ; rs232cmd.c 1045                               else
                       3736 ; rs232cmd.c 1046                               {
                       3737 ; rs232cmd.c 1047                                       rs232printf( 12, "%d\n", UpdateESRRegiste
                            r());
                       3739         CALL    _UpdateESRRegister
000158 C4rrrrrr       +3739 ;       FCALL   _UpdateESRRegister
00015C 8120            3740         MOV.B   R1L,R0L
00015E B130            3741         MOVS.B  R1H,#00H
000160 9908000C        3742         MOV.W   R0,#0CH
000164 0F02            3743         PUSH.W  R1
000166 9938rrrr        3745         MOV.W   R3,#SEG( _9 )
00016A 9928rrrr        3746         MOV.W   R2,#SOF( _9 )
00016E 0F0C            3747         PUSH.W  R2, R3
                       3749         CALL    _rs232printf
000170 C4rrrrrr       +3749 ;       FCALL   _rs232printf
000174 A976            3750         ADDS.W  R7,#06H
                       3752 ; rs232cmd.c 1048       
                       3753 ; rs232cmd.c 1049                                       ESRReg = 0;
000176 964842rr        3755         MOV.B   ES,#SEG( _ESRReg )
00017A 9908rrrr        3756         MOV.W   R0,#SOF( _ESRReg )
00017E B200            3757         MOV.B   [R0],#00H
                       3758 ; rs232cmd.c 1050                               }
                       3759 ; rs232cmd.c 1051                       }
000180 D680            3761         RET
000180 D680            3761         RET
000182                 3762 _26:
                       3763 ; rs232cmd.c 1052                       else
                       3764 ; rs232cmd.c 1053                               SCPIError = SyntaxErr;
000182 964842rr        3766         MOV.B   ES,#SEG( _SCPIError )
000186 9908rrrr        3767         MOV.W   R0,#SOF( _SCPIError )
00018A BA03            3768         MOV.W   [R0],#03H
                       3769 ; rs232cmd.c 1054               }
00018C                 3771 _30:
                       3772 ; rs232cmd.c 1055       }
00018C D680            3774         RET
                       3776 ; rs232cmd.c 1056       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  61

ADDR   CODE            LINE SOURCELINE
                       3777 ; rs232cmd.c 1057       /************************************************************************
                            **/
                       3778 ; rs232cmd.c 1058       /* OPCCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3779 ; rs232cmd.c 1059       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3780 ; rs232cmd.c 1060       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       3781 ; rs232cmd.c 1061       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3782 ; rs232cmd.c 1062       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3783 ; rs232cmd.c 1063       /* Function:    Operation Complete Command/Query                         
                                                                                                                    */
                       3784 ; rs232cmd.c 1064       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3785 ; rs232cmd.c 1065       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3786 ; rs232cmd.c 1066       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3787 ; rs232cmd.c 1067       /************************************************************************
                            **/
                       3788 ; rs232cmd.c 1068       void OPCCommand( void)
                       3789 ; rs232cmd.c 1069       {
                       3790         ALIGN   1
                       3792         PUBLIC  _OPCCommand
00018E                 3793 _OPCCommand:
                       3797 ; rs232cmd.c 1070               if ( CmdExecute && !SCPIError)
00018E 964842rr        3799         MOV.B   ES,#SEG( _CmdExecute )
000192 9908rrrr        3800         MOV.W   R0,#SOF( _CmdExecute )
000196 8200            3801         MOV.B   R0L,[R0]
000198 F323            3802         BEQ     _36
00019A 964842rr        3803         MOV.B   ES,#SEG( _SCPIError )
00019E 9908rrrr        3804         MOV.W   R0,#SOF( _SCPIError )
0001A2 8A00            3805         MOV.W   R0,[R0]
0001A4 F21D            3806         BNE     _36
                       3807 ; rs232cmd.c 1071               {
                       3808 ; rs232cmd.c 1072                       if ( CmdRequest)
0001A6 964842rr        3810         MOV.B   ES,#SEG( _CmdRequest )
0001AA 9908rrrr        3811         MOV.W   R0,#SOF( _CmdRequest )
0001AE 8200            3812         MOV.B   R0L,[R0]
0001B0 F30C            3813         BEQ     _31
                       3814 ; rs232cmd.c 1073                       {
                       3815 ; rs232cmd.c 1074                               if ( ParCnt)
0001B2 964842rr        3817         MOV.B   ES,#SEG( _ParCnt )
0001B6 9908rrrr        3818         MOV.W   R0,#SOF( _ParCnt )
0001BA 8200            3819         MOV.B   R0L,[R0]
0001BC F311            3820         BEQ     _36
                       3821 ; rs232cmd.c 1075                                       SCPIError = ParNotAllowed;
0001BE 964842rr        3823         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  62

ADDR   CODE            LINE SOURCELINE
0001C2 9908rrrr        3824         MOV.W   R0,#SOF( _SCPIError )
0001C6 BA06            3825         MOV.W   [R0],#06H
                       3826 ; rs232cmd.c 1076                       }
0001C8 D680            3828         RET
0001C8 D680            3828         RET
0001CA                 3829 _31:
                       3830 ; rs232cmd.c 1077                       else
                       3831 ; rs232cmd.c 1078                       {
                       3832 ; rs232cmd.c 1079                               if ( ParCnt)
0001CA 964842rr        3834         MOV.B   ES,#SEG( _ParCnt )
0001CE 9908rrrr        3835         MOV.W   R0,#SOF( _ParCnt )
0001D2 8200            3836         MOV.B   R0L,[R0]
0001D4 F305            3837         BEQ     _36
                       3838 ; rs232cmd.c 1080                                       SCPIError = ParNotAllowed;
0001D6 964842rr        3840         MOV.B   ES,#SEG( _SCPIError )
0001DA 9908rrrr        3841         MOV.W   R0,#SOF( _SCPIError )
0001DE BA06            3842         MOV.W   [R0],#06H
                       3843 ; rs232cmd.c 1081                       }
                       3844 ; rs232cmd.c 1082               }
0001E0                 3846 _36:
                       3847 ; rs232cmd.c 1083       }
0001E0 D680            3849         RET
                       3851 ; rs232cmd.c 1084       
                       3852 ; rs232cmd.c 1085       /************************************************************************
                            **/
                       3853 ; rs232cmd.c 1086       /* SRECommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3854 ; rs232cmd.c 1087       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3855 ; rs232cmd.c 1088       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3856 ; rs232cmd.c 1089       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3857 ; rs232cmd.c 1090       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3858 ; rs232cmd.c 1091       /* Function:    Set/read the Service Request Enable Register             
                                                                            */
                       3859 ; rs232cmd.c 1092       /* Remarks:             Bit 6 in *SRE? register is always ZERO           
                                                                                                    */
                       3860 ; rs232cmd.c 1093       /*                                              Bit 6 in *SRE register is
                             ignored                                                                                         
                                                    */
                       3861 ; rs232cmd.c 1094       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3862 ; rs232cmd.c 1095       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3863 ; rs232cmd.c 1096       /************************************************************************
                            **/
                       3864 ; rs232cmd.c 1097       void SRECommand( void)
                       3865 ; rs232cmd.c 1098       {
                       3866         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  63

ADDR   CODE            LINE SOURCELINE
                       3868         PUBLIC  _SRECommand
0001E2                 3869 _SRECommand:
0001E2 A97E            3873         ADDS.W  R7,#0EH
                       3876 ; rs232cmd.c 1099               int Reg;
                       3877 ; rs232cmd.c 1100       
                       3878 ; rs232cmd.c 1101               if ( CmdExecute && !SCPIError)
0001E4 964842rr        3880         MOV.B   ES,#SEG( _CmdExecute )
0001E8 9908rrrr        3881         MOV.W   R0,#SOF( _CmdExecute )
0001EC 8200            3882         MOV.B   R0L,[R0]
0001EE F35E            3883         BEQ     _47
0001F0 964842rr        3884         MOV.B   ES,#SEG( _SCPIError )
0001F4 9908rrrr        3885         MOV.W   R0,#SOF( _SCPIError )
0001F8 8A00            3886         MOV.W   R0,[R0]
0001FA F258            3887         BNE     _47
                       3888 ; rs232cmd.c 1102               {
                       3889 ; rs232cmd.c 1103                       if ( CmdRequest)
0001FC 964842rr        3891         MOV.B   ES,#SEG( _CmdRequest )
000200 9908rrrr        3892         MOV.W   R0,#SOF( _CmdRequest )
000204 8200            3893         MOV.B   R0L,[R0]
000206 F31E            3894         BEQ     _38
                       3895 ; rs232cmd.c 1104                       {
                       3896 ; rs232cmd.c 1105                               if ( ParCnt)
000208 964842rr        3898         MOV.B   ES,#SEG( _ParCnt )
00020C 9908rrrr        3899         MOV.W   R0,#SOF( _ParCnt )
000210 8200            3900         MOV.B   R0L,[R0]
000212 F306            3901         BEQ     _37
                       3902 ; rs232cmd.c 1106                                       SCPIError = ParNotAllowed;
000214 964842rr        3904         MOV.B   ES,#SEG( _SCPIError )
000218 9908rrrr        3905         MOV.W   R0,#SOF( _SCPIError )
00021C BA06            3906         MOV.W   [R0],#06H
00021E FE46            3907         BR      _47
00021E FE46            3907         BR      _47
000220                 3908 _37:
                       3909 ; rs232cmd.c 1107                               else
                       3910 ; rs232cmd.c 1108                                       rs232printf( 12, "%d\n", SREReg);
000220 9908000C        3912         MOV.W   R0,#0CH
000224 964842rr        3913         MOV.B   ES,#SEG( _SREReg )
000228 9918rrrr        3914         MOV.W   R1,#SOF( _SREReg )
00022C 8221            3915         MOV.B   R1L,[R1]
00022E B130            3916         MOVS.B  R1H,#00H
000230 0F02            3917         PUSH.W  R1
000232 9938rrrr        3919         MOV.W   R3,#SEG( _9 )
000236 9928rrrr        3920         MOV.W   R2,#SOF( _9 )
00023A 0F0C            3921         PUSH.W  R2, R3
                       3923         CALL    _rs232printf
00023C C4rrrrrr       +3923 ;       FCALL   _rs232printf
000240 A976            3924         ADDS.W  R7,#06H
                       3926 ; rs232cmd.c 1109                       }
000242 FE34            3928         BR      _47
000242 FE34            3928         BR      _47
000244                 3929 _38:
                       3930 ; rs232cmd.c 1110                       else
                       3931 ; rs232cmd.c 1111                       {
                       3932 ; rs232cmd.c 1112                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000244 964842rr        3934         MOV.B   ES,#SEG( _ParCnt )
000248 9908rrrr        3935         MOV.W   R0,#SOF( _ParCnt )
00024C 8200            3936         MOV.B   R0L,[R0]
00024E 910401          3937         CMP.B   R0L,#01H
000251 F215            3938         BNE     _39
000253 9918rrrr        3939         MOV.W   R1,#SEG( _Cmd )
000257 9908rrrr        3940         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  64

ADDR   CODE            LINE SOURCELINE
00025B 9168rr          3941         MOV.B   R3L,#SEG( __lc_bs )
00025E 7177            3942         XOR.B   R3H,R3H
000260 8927            3943         MOV.W   R2,R7
000262 0F0C            3944         PUSH.W  R2, R3
000264 9938rrrr        3946         MOV.W   R3,#SEG( _10 )
000268 9928rrrr        3947         MOV.W   R2,#SOF( _10 )
00026C 0F0C            3948         PUSH.W  R2, R3
                       3950         CALL    _sscanf
00026E C4rrrrrr       +3950 ;       FCALL   _sscanf
000272 99700008        3951         ADD.W   R7,#08H
000276 99040001        3953         CMP.W   R0,#01H
00027A F306            3954         BEQ     _40
00027A F306            3954         BEQ     _40
00027C                 3955 _39:
                       3956 ; rs232cmd.c 1113                               {
                       3957 ; rs232cmd.c 1114                                       SCPIError = SyntaxErr;  
00027C 964842rr        3959         MOV.B   ES,#SEG( _SCPIError )
000280 9908rrrr        3960         MOV.W   R0,#SOF( _SCPIError )
000284 BA03            3961         MOV.W   [R0],#03H
                       3962 ; rs232cmd.c 1115                                       return;
000286 FE12            3964         BR      _47
                       3965 ; rs232cmd.c 1116                               }
000288                 3967 _40:
                       3968 ; rs232cmd.c 1117       
                       3969 ; rs232cmd.c 1118                               if ( Reg > 255)
000288 9A7400FF        3971         CMP.W   [R7],#0FFH
00028C FD07            3972         BLE     _41
                       3973 ; rs232cmd.c 1119                               {
                       3974 ; rs232cmd.c 1120                                       SCPIError = DataOutOfRange;
00028E 964842rr        3976         MOV.B   ES,#SEG( _SCPIError )
000292 9908rrrr        3977         MOV.W   R0,#SOF( _SCPIError )
000296 9A080021        3978         MOV.W   [R0],#021H
                       3979 ; rs232cmd.c 1121                                       return;
00029A FE08            3981         BR      _47
                       3982 ; rs232cmd.c 1122                               }
00029C                 3984 _41:
                       3985 ; rs232cmd.c 1123       
                       3986 ; rs232cmd.c 1124                               SREReg = Reg & 0xBF;
00029C 8A07            3988         MOV.W   R0,[R7]
00029E 9105BF          3989         AND.B   R0L,#0BFH
0002A1 964842rr        3990         MOV.B   ES,#SEG( _SREReg )
0002A5 9918rrrr        3991         MOV.W   R1,#SOF( _SREReg )
0002A9 8209            3992         MOV.B   [R1],R0L
                       3993 ; rs232cmd.c 1125                       }
                       3994 ; rs232cmd.c 1126               }
                       3995 ; rs232cmd.c 1127       }
0002AC                 3997 _47:
0002AC A972            3998         ADDS.W  R7,#02H
0002AE D680            4000         RET
                       4002 ; rs232cmd.c 1128       
                       4003 ; rs232cmd.c 1129       /************************************************************************
                            **/
                       4004 ; rs232cmd.c 1130       /* STBCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4005 ; rs232cmd.c 1131       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4006 ; rs232cmd.c 1132       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  65

ADDR   CODE            LINE SOURCELINE
                       4007 ; rs232cmd.c 1133       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       4008 ; rs232cmd.c 1134       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4009 ; rs232cmd.c 1135       /* Function:    Read the Status Byte Register                            
                                                                                                                            *
                            /
                       4010 ; rs232cmd.c 1136       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4011 ; rs232cmd.c 1137       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4012 ; rs232cmd.c 1138       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4013 ; rs232cmd.c 1139       /************************************************************************
                            **/
                       4014 ; rs232cmd.c 1140       void STBCommand( void)
                       4015 ; rs232cmd.c 1141       {
                       4016         ALIGN   1
                       4018         PUBLIC  _STBCommand
0002B0                 4019 _STBCommand:
                       4023 ; rs232cmd.c 1142               if ( CmdExecute && !SCPIError)
0002B0 964842rr        4025         MOV.B   ES,#SEG( _CmdExecute )
0002B4 9908rrrr        4026         MOV.W   R0,#SOF( _CmdExecute )
0002B8 8200            4027         MOV.B   R0L,[R0]
0002BA F331            4028         BEQ     _56
0002BC 964842rr        4029         MOV.B   ES,#SEG( _SCPIError )
0002C0 9908rrrr        4030         MOV.W   R0,#SOF( _SCPIError )
0002C4 8A00            4031         MOV.W   R0,[R0]
0002C6 F22B            4032         BNE     _56
                       4033 ; rs232cmd.c 1143               {
                       4034 ; rs232cmd.c 1144                       if ( CmdRequest)
0002C8 964842rr        4036         MOV.B   ES,#SEG( _CmdRequest )
0002CC 9908rrrr        4037         MOV.W   R0,#SOF( _CmdRequest )
0002D0 8200            4038         MOV.B   R0L,[R0]
0002D2 F320            4039         BEQ     _52
                       4040 ; rs232cmd.c 1145                       {
                       4041 ; rs232cmd.c 1146                               if ( ParCnt)
0002D4 964842rr        4043         MOV.B   ES,#SEG( _ParCnt )
0002D8 9908rrrr        4044         MOV.W   R0,#SOF( _ParCnt )
0002DC 8200            4045         MOV.B   R0L,[R0]
0002DE F306            4046         BEQ     _51
                       4047 ; rs232cmd.c 1147                                       SCPIError = ParNotAllowed;
0002E0 964842rr        4049         MOV.B   ES,#SEG( _SCPIError )
0002E4 9908rrrr        4050         MOV.W   R0,#SOF( _SCPIError )
0002E8 BA06            4051         MOV.W   [R0],#06H
0002EA D680            4052         RET
0002EA D680            4052         RET
0002EC                 4053 _51:
                       4054 ; rs232cmd.c 1148                               else
                       4055 ; rs232cmd.c 1149                               {
                       4056 ; rs232cmd.c 1150                                       UpdateSTBRegister();
                       4058         CALL    _UpdateSTBRegister
0002EC C4rrrrrr       +4058 ;       FCALL   _UpdateSTBRegister
                       4059 ; rs232cmd.c 1151       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  66

ADDR   CODE            LINE SOURCELINE
                       4060 ; rs232cmd.c 1152                                       rs232printf( 12, "%d\n", STBReg);
0002F0 9908000C        4062         MOV.W   R0,#0CH
0002F4 964842rr        4063         MOV.B   ES,#SEG( _STBReg )
0002F8 9918rrrr        4064         MOV.W   R1,#SOF( _STBReg )
0002FC 8221            4065         MOV.B   R1L,[R1]
0002FE B130            4066         MOVS.B  R1H,#00H
000300 0F02            4067         PUSH.W  R1
000302 9938rrrr        4069         MOV.W   R3,#SEG( _9 )
000306 9928rrrr        4070         MOV.W   R2,#SOF( _9 )
00030A 0F0C            4071         PUSH.W  R2, R3
                       4073         CALL    _rs232printf
00030C C4rrrrrr       +4073 ;       FCALL   _rs232printf
000310 A976            4074         ADDS.W  R7,#06H
                       4076 ; rs232cmd.c 1153                               }
                       4077 ; rs232cmd.c 1154                       }
000312 D680            4079         RET
000312 D680            4079         RET
000314                 4080 _52:
                       4081 ; rs232cmd.c 1155                       else
                       4082 ; rs232cmd.c 1156                               SCPIError = SyntaxErr;
000314 964842rr        4084         MOV.B   ES,#SEG( _SCPIError )
000318 9908rrrr        4085         MOV.W   R0,#SOF( _SCPIError )
00031C BA03            4086         MOV.W   [R0],#03H
                       4087 ; rs232cmd.c 1157               }
00031E                 4089 _56:
                       4090 ; rs232cmd.c 1158       }
00031E D680            4092         RET
                       4094 ; rs232cmd.c 1159       
                       4095 ; rs232cmd.c 1160       /************************************************************************
                            **/
                       4096 ; rs232cmd.c 1161       /* TSTCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4097 ; rs232cmd.c 1162       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4098 ; rs232cmd.c 1163       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       4099 ; rs232cmd.c 1164       /* Revised:             000505                                           
                                                                                                                             
                                                                                    */
                       4100 ; rs232cmd.c 1165       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4101 ; rs232cmd.c 1166       /* Function:    Selftest query                                           
                                                                                                                             
                                                                    */
                       4102 ; rs232cmd.c 1167       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4103 ; rs232cmd.c 1168       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4104 ; rs232cmd.c 1169       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  67

ADDR   CODE            LINE SOURCELINE
                       4105 ; rs232cmd.c 1170       /************************************************************************
                            **/
                       4106 ; rs232cmd.c 1171       void TSTCommand( void)
                       4107 ; rs232cmd.c 1172       {
                       4108         ALIGN   1
                       4110         PUBLIC  _TSTCommand
000320                 4111 _TSTCommand:
                       4115 ; rs232cmd.c 1173               if ( CmdExecute && !SCPIError)
000320 964842rr        4117         MOV.B   ES,#SEG( _CmdExecute )
000324 9908rrrr        4118         MOV.W   R0,#SOF( _CmdExecute )
000328 8200            4119         MOV.B   R0L,[R0]
00032A F31D            4120         BEQ     _61
00032C 964842rr        4121         MOV.B   ES,#SEG( _SCPIError )
000330 9908rrrr        4122         MOV.W   R0,#SOF( _SCPIError )
000334 8A00            4123         MOV.W   R0,[R0]
000336 F217            4124         BNE     _61
                       4125 ; rs232cmd.c 1174               {
                       4126 ; rs232cmd.c 1175                       if ( CmdRequest)
000338 964842rr        4128         MOV.B   ES,#SEG( _CmdRequest )
00033C 9908rrrr        4129         MOV.W   R0,#SOF( _CmdRequest )
000340 8200            4130         MOV.B   R0L,[R0]
000342 F30C            4131         BEQ     _57
                       4132 ; rs232cmd.c 1176                       {
                       4133 ; rs232cmd.c 1177                               if ( ParCnt)
000344 964842rr        4135         MOV.B   ES,#SEG( _ParCnt )
000348 9908rrrr        4136         MOV.W   R0,#SOF( _ParCnt )
00034C 8200            4137         MOV.B   R0L,[R0]
00034E F30B            4138         BEQ     _61
                       4139 ; rs232cmd.c 1178                                       SCPIError = ParNotAllowed;
000350 964842rr        4141         MOV.B   ES,#SEG( _SCPIError )
000354 9908rrrr        4142         MOV.W   R0,#SOF( _SCPIError )
000358 BA06            4143         MOV.W   [R0],#06H
                       4144 ; rs232cmd.c 1179                               else
                       4145 ; rs232cmd.c 1180                               {
                       4146 ; rs232cmd.c 1181                                       ;
                       4147 ; rs232cmd.c 1182                               }
                       4148 ; rs232cmd.c 1183                       }
00035A D680            4150         RET
00035A D680            4150         RET
00035C                 4151 _57:
                       4152 ; rs232cmd.c 1184                       else
                       4153 ; rs232cmd.c 1185                               SCPIError = SyntaxErr;
00035C 964842rr        4155         MOV.B   ES,#SEG( _SCPIError )
000360 9908rrrr        4156         MOV.W   R0,#SOF( _SCPIError )
000364 BA03            4157         MOV.W   [R0],#03H
                       4158 ; rs232cmd.c 1186               }
000366                 4160 _61:
                       4161 ; rs232cmd.c 1187       }
000366 D680            4163         RET
                       4165 ; rs232cmd.c 1188       
                       4166 ; rs232cmd.c 1189       /************************************************************************
                            **/
                       4167 ; rs232cmd.c 1190       /* WAICommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4168 ; rs232cmd.c 1191       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4169 ; rs232cmd.c 1192       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  68

ADDR   CODE            LINE SOURCELINE
                       4170 ; rs232cmd.c 1193       /* Revised:             000505                                           
                                                                                                                             
                                                                                    */
                       4171 ; rs232cmd.c 1194       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4172 ; rs232cmd.c 1195       /* Function:    Wait-to-continue command                                 
                                                                                                                             
                                            */
                       4173 ; rs232cmd.c 1196       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4174 ; rs232cmd.c 1197       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4175 ; rs232cmd.c 1198       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4176 ; rs232cmd.c 1199       /************************************************************************
                            **/
                       4177 ; rs232cmd.c 1200       void WAICommand( void)
                       4178 ; rs232cmd.c 1201       {
                       4179         ALIGN   1
                       4181         PUBLIC  _WAICommand
000368                 4182 _WAICommand:
                       4186 ; rs232cmd.c 1202               if ( CmdExecute && !SCPIError)
000368 964842rr        4188         MOV.B   ES,#SEG( _CmdExecute )
00036C 9908rrrr        4189         MOV.W   R0,#SOF( _CmdExecute )
000370 8200            4190         MOV.B   R0L,[R0]
000372 F31D            4191         BEQ     _66
000374 964842rr        4192         MOV.B   ES,#SEG( _SCPIError )
000378 9908rrrr        4193         MOV.W   R0,#SOF( _SCPIError )
00037C 8A00            4194         MOV.W   R0,[R0]
00037E F217            4195         BNE     _66
                       4196 ; rs232cmd.c 1203               {
                       4197 ; rs232cmd.c 1204                       if ( CmdRequest)
000380 964842rr        4199         MOV.B   ES,#SEG( _CmdRequest )
000384 9908rrrr        4200         MOV.W   R0,#SOF( _CmdRequest )
000388 8200            4201         MOV.B   R0L,[R0]
00038A F306            4202         BEQ     _62
                       4203 ; rs232cmd.c 1205                               SCPIError = SyntaxErr;
00038C 964842rr        4205         MOV.B   ES,#SEG( _SCPIError )
000390 9908rrrr        4206         MOV.W   R0,#SOF( _SCPIError )
000394 BA03            4207         MOV.W   [R0],#03H
000396 D680            4208         RET
000396 D680            4208         RET
000398                 4209 _62:
                       4210 ; rs232cmd.c 1206                       else
                       4211 ; rs232cmd.c 1207                       {
                       4212 ; rs232cmd.c 1208                               if ( ParCnt)
000398 964842rr        4214         MOV.B   ES,#SEG( _ParCnt )
00039C 9908rrrr        4215         MOV.W   R0,#SOF( _ParCnt )
0003A0 8200            4216         MOV.B   R0L,[R0]
0003A2 F305            4217         BEQ     _66
                       4218 ; rs232cmd.c 1209                                       SCPIError = ParNotAllowed;
0003A4 964842rr        4220         MOV.B   ES,#SEG( _SCPIError )
0003A8 9908rrrr        4221         MOV.W   R0,#SOF( _SCPIError )
0003AC BA06            4222         MOV.W   [R0],#06H
                       4223 ; rs232cmd.c 1210                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  69

ADDR   CODE            LINE SOURCELINE
                       4224 ; rs232cmd.c 1211                               {
                       4225 ; rs232cmd.c 1212                                       ;
                       4226 ; rs232cmd.c 1213                               }
                       4227 ; rs232cmd.c 1214                       }
                       4228 ; rs232cmd.c 1215               }
0003AE                 4230 _66:
                       4231 ; rs232cmd.c 1216       }
0003AE D680            4233         RET
                       4235 ; rs232cmd.c 1217       
                       4236 ; rs232cmd.c 1218       /************************************************************************
                            **/
                       4237 ; rs232cmd.c 1219       /* RSTCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4238 ; rs232cmd.c 1220       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4239 ; rs232cmd.c 1221       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       4240 ; rs232cmd.c 1222       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                       4241 ; rs232cmd.c 1223       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4242 ; rs232cmd.c 1224       /* Function:    Reset comamnd                                            
                                                                                                                             
                                                                            */
                       4243 ; rs232cmd.c 1225       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4244 ; rs232cmd.c 1226       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4245 ; rs232cmd.c 1227       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4246 ; rs232cmd.c 1228       /************************************************************************
                            **/
                       4247 ; rs232cmd.c 1229       void RSTCommand( void)
                       4248 ; rs232cmd.c 1230       {
                       4249         ALIGN   1
                       4251         PUBLIC  _RSTCommand
0003B0                 4252 _RSTCommand:
                       4256 ; rs232cmd.c 1231               if ( CmdExecute && !SCPIError)
0003B0 964842rr        4258         MOV.B   ES,#SEG( _CmdExecute )
0003B4 9908rrrr        4259         MOV.W   R0,#SOF( _CmdExecute )
0003B8 8200            4260         MOV.B   R0L,[R0]
0003BA F320            4261         BEQ     _72
0003BC 964842rr        4262         MOV.B   ES,#SEG( _SCPIError )
0003C0 9908rrrr        4263         MOV.W   R0,#SOF( _SCPIError )
0003C4 8A00            4264         MOV.W   R0,[R0]
0003C6 F21A            4265         BNE     _72
                       4266 ; rs232cmd.c 1232               {
                       4267 ; rs232cmd.c 1233                       if ( CmdRequest)
0003C8 964842rr        4269         MOV.B   ES,#SEG( _CmdRequest )
0003CC 9908rrrr        4270         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  70

ADDR   CODE            LINE SOURCELINE
0003D0 8200            4271         MOV.B   R0L,[R0]
0003D2 F306            4272         BEQ     _67
                       4273 ; rs232cmd.c 1234                               SCPIError = SyntaxErr;
0003D4 964842rr        4275         MOV.B   ES,#SEG( _SCPIError )
0003D8 9908rrrr        4276         MOV.W   R0,#SOF( _SCPIError )
0003DC BA03            4277         MOV.W   [R0],#03H
0003DE D680            4278         RET
0003DE D680            4278         RET
0003E0                 4279 _67:
                       4280 ; rs232cmd.c 1235                       else
                       4281 ; rs232cmd.c 1236                       {
                       4282 ; rs232cmd.c 1237                               if ( ParCnt)
0003E0 964842rr        4284         MOV.B   ES,#SEG( _ParCnt )
0003E4 9908rrrr        4285         MOV.W   R0,#SOF( _ParCnt )
0003E8 8200            4286         MOV.B   R0L,[R0]
0003EA F306            4287         BEQ     _68
                       4288 ; rs232cmd.c 1238                                       SCPIError = ParNotAllowed;
0003EC 964842rr        4290         MOV.B   ES,#SEG( _SCPIError )
0003F0 9908rrrr        4291         MOV.W   R0,#SOF( _SCPIError )
0003F4 BA06            4292         MOV.W   [R0],#06H
0003F6 D680            4293         RET
0003F6 D680            4293         RET
0003F8                 4294 _68:
                       4295 ; rs232cmd.c 1239                               else
                       4296 ; rs232cmd.c 1240                                       ResetInstrument();
                       4298         CALL    _ResetInstrument
0003F8 C4rrrrrr       +4298 ;       FCALL   _ResetInstrument
                       4299 ; rs232cmd.c 1241                       }
                       4300 ; rs232cmd.c 1242               }
0003FC                 4302 _72:
                       4303 ; rs232cmd.c 1243       }
0003FC D680            4305         RET
                       4307 ; rs232cmd.c 1244       
                       4308 ; rs232cmd.c 1245       /************************************************************************
                            **/
                       4309 ; rs232cmd.c 1246       /* IDNCommand                                                            
                                                                                                                             
                                                               RS232CMD.C */
                       4310 ; rs232cmd.c 1247       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4311 ; rs232cmd.c 1248       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       4312 ; rs232cmd.c 1249       /* Revised:             000614                                           
                                                                                                                             
                                                                                    */
                       4313 ; rs232cmd.c 1250       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4314 ; rs232cmd.c 1251       /* Function:    Identification query                                     
                                                                                                                             
                                                    */
                       4315 ; rs232cmd.c 1252       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                    */
                       4316 ; rs232cmd.c 1253       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4317 ; rs232cmd.c 1254       /* Updates:             -                                                
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  71

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                            *
                            /
                       4318 ; rs232cmd.c 1255       /************************************************************************
                            **/
                       4319 ; rs232cmd.c 1256       void IDNCommand( void)
                       4320 ; rs232cmd.c 1257       {
                       4321         ALIGN   1
                       4323         PUBLIC  _IDNCommand
0003FE                 4324 _IDNCommand:
                       4328 ; rs232cmd.c 1258               if ( CmdExecute && !SCPIError)
0003FE 964842rr        4330         MOV.B   ES,#SEG( _CmdExecute )
000402 9908rrrr        4331         MOV.W   R0,#SOF( _CmdExecute )
000406 8200            4332         MOV.B   R0L,[R0]
000408 F344            4333         BEQ     _78
00040A 964842rr        4334         MOV.B   ES,#SEG( _SCPIError )
00040E 9908rrrr        4335         MOV.W   R0,#SOF( _SCPIError )
000412 8A00            4336         MOV.W   R0,[R0]
000414 F23E            4337         BNE     _78
                       4338 ; rs232cmd.c 1259               {
                       4339 ; rs232cmd.c 1260                       if ( CmdRequest)
000416 964842rr        4341         MOV.B   ES,#SEG( _CmdRequest )
00041A 9908rrrr        4342         MOV.W   R0,#SOF( _CmdRequest )
00041E 8200            4343         MOV.B   R0L,[R0]
000420 F333            4344         BEQ     _74
                       4345 ; rs232cmd.c 1261                       {
                       4346 ; rs232cmd.c 1262                               if ( ParCnt)
000422 964842rr        4348         MOV.B   ES,#SEG( _ParCnt )
000426 9908rrrr        4349         MOV.W   R0,#SOF( _ParCnt )
00042A 8200            4350         MOV.B   R0L,[R0]
00042C F306            4351         BEQ     _73
                       4352 ; rs232cmd.c 1263                                       SCPIError = ParNotAllowed;
00042E 964842rr        4354         MOV.B   ES,#SEG( _SCPIError )
000432 9908rrrr        4355         MOV.W   R0,#SOF( _SCPIError )
000436 BA06            4356         MOV.W   [R0],#06H
000438 D680            4357         RET
000438 D680            4357         RET
00043A                 4358 _73:
                       4359 ; rs232cmd.c 1264                               else
                       4360 ; rs232cmd.c 1265                               {
                       4361 ; rs232cmd.c 1266                                       rs232puts( Calibration.Company);
00043A 9918rrrr        4363         MOV.W   R1,#SEG( _Calibration )
00043E 9908rrrr        4364         MOV.W   R0,#SOF( _Calibration )
                       4365         CALL    _rs232puts
000442 C4rrrrrr       +4365 ;       FCALL   _rs232puts
                       4366 ; rs232cmd.c 1267       
                       4367 ; rs232cmd.c 1268                                       rs232putchar( ',');
000446 91082C          4369         MOV.B   R0L,#02CH
                       4370         CALL    _rs232putchar
000449 C4rrrrrr       +4370 ;       FCALL   _rs232putchar
                       4371 ; rs232cmd.c 1269       
                       4372 ; rs232cmd.c 1270                                       rs232puts( Calibration.Type);
00044D 9918rrrr        4374         MOV.W   R1,#SEG( _Calibration+33 )
000451 9908rrrr        4375         MOV.W   R0,#SOF( _Calibration+33 )
                       4376         CALL    _rs232puts
000455 C4rrrrrr       +4376 ;       FCALL   _rs232puts
000459 91082C          4377         MOV.B   R0L,#02CH
                       4378 ; rs232cmd.c 1271       
                       4379 ; rs232cmd.c 1272                                       rs232putchar( ',');
                       4381         CALL    _rs232putchar
00045C C4rrrrrr       +4381 ;       FCALL   _rs232putchar
                       4382 ; rs232cmd.c 1273       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  72

ADDR   CODE            LINE SOURCELINE
                       4383 ; rs232cmd.c 1274                                       rs232puts( Calibration.KUNumber);
000460 9918rrrr        4385         MOV.W   R1,#SEG( _Calibration+66 )
000464 9908rrrr        4386         MOV.W   R0,#SOF( _Calibration+66 )
                       4387         CALL    _rs232puts
000468 C4rrrrrr       +4387 ;       FCALL   _rs232puts
                       4388 ; rs232cmd.c 1275       
                       4389 ; rs232cmd.c 1276                                       rs232putchar( ',');
00046C 91082C          4391         MOV.B   R0L,#02CH
                       4392         CALL    _rs232putchar
00046F C4rrrrrr       +4392 ;       FCALL   _rs232putchar
                       4393 ; rs232cmd.c 1277       
                       4394 ; rs232cmd.c 1278                                       rs232puts( Calibration.SWRevision);
000473 9918rrrr        4396         MOV.W   R1,#SEG( _Calibration+75 )
000477 9908rrrr        4397         MOV.W   R0,#SOF( _Calibration+75 )
                       4398         CALL    _rs232puts
00047B C4rrrrrr       +4398 ;       FCALL   _rs232puts
                       4399 ; rs232cmd.c 1279       
                       4400 ; rs232cmd.c 1280                                       rs232putchar( '\n');
00047F 91080A          4402         MOV.B   R0L,#0AH
                       4403         CALL    _rs232putchar
000482 C4rrrrrr       +4403 ;       FCALL   _rs232putchar
                       4404 ; rs232cmd.c 1281                               }
                       4405 ; rs232cmd.c 1282                       }
000486 D680            4407         RET
000486 D680            4407         RET
000488                 4408 _74:
                       4409 ; rs232cmd.c 1283                       else
                       4410 ; rs232cmd.c 1284                               SCPIError = SyntaxErr;
000488 964842rr        4412         MOV.B   ES,#SEG( _SCPIError )
00048C 9908rrrr        4413         MOV.W   R0,#SOF( _SCPIError )
000490 BA03            4414         MOV.W   [R0],#03H
                       4415 ; rs232cmd.c 1285               }
000492                 4417 _78:
                       4418 ; rs232cmd.c 1286       }
000492 D680            4420         RET
                       4422 ; rs232cmd.c 1287       
                       4423 ; rs232cmd.c 1288       /************************************************************************
                            **/
                       4424 ; rs232cmd.c 1289       /* RCLCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4425 ; rs232cmd.c 1290       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4426 ; rs232cmd.c 1291       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                            */
                       4427 ; rs232cmd.c 1292       /* Revised:             Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                                    */
                       4428 ; rs232cmd.c 1293       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4429 ; rs232cmd.c 1294       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       4430 ; rs232cmd.c 1295       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4431 ; rs232cmd.c 1296       /* Returns:             -                                                
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  73

ADDR   CODE            LINE SOURCELINE
                                                                                                                            *
                            /
                       4432 ; rs232cmd.c 1297       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4433 ; rs232cmd.c 1298       /************************************************************************
                            **/
                       4434 ; rs232cmd.c 1299       void RCLCommand(void) 
                       4435 ; rs232cmd.c 1300       {
                       4436         ALIGN   1
                       4438         PUBLIC  _RCLCommand
000494                 4439 _RCLCommand:
000494 A97E            4443         ADDS.W  R7,#0EH
                       4446 ; rs232cmd.c 1301               int     Reg = 0;
000496 BA70            4448         MOV.W   [R7],#00H
                       4449 ; rs232cmd.c 1302       
                       4450 ; rs232cmd.c 1303               if ( CmdExecute && !SCPIError)
000498 964842rr        4452         MOV.B   ES,#SEG( _CmdExecute )
00049C 9908rrrr        4453         MOV.W   R0,#SOF( _CmdExecute )
0004A0 8200            4454         MOV.B   R0L,[R0]
0004A2 F34C            4455         BEQ     _89
0004A4 964842rr        4456         MOV.B   ES,#SEG( _SCPIError )
0004A8 9908rrrr        4457         MOV.W   R0,#SOF( _SCPIError )
0004AC 8A00            4458         MOV.W   R0,[R0]
0004AE F246            4459         BNE     _89
                       4460 ; rs232cmd.c 1304               {
                       4461 ; rs232cmd.c 1305                       if ( CmdRequest)
0004B0 964842rr        4463         MOV.B   ES,#SEG( _CmdRequest )
0004B4 9908rrrr        4464         MOV.W   R0,#SOF( _CmdRequest )
0004B8 8200            4465         MOV.B   R0L,[R0]
0004BA F306            4466         BEQ     _79
                       4467 ; rs232cmd.c 1306                       {
                       4468 ; rs232cmd.c 1307                               SCPIError = SyntaxErr;
0004BC 964842rr        4470         MOV.B   ES,#SEG( _SCPIError )
0004C0 9908rrrr        4471         MOV.W   R0,#SOF( _SCPIError )
0004C4 BA03            4472         MOV.W   [R0],#03H
                       4473 ; rs232cmd.c 1308                       }
0004C6 FE3A            4475         BR      _89
0004C6 FE3A            4475         BR      _89
0004C8                 4476 _79:
                       4477 ; rs232cmd.c 1309                       else
                       4478 ; rs232cmd.c 1310                       {
                       4479 ; rs232cmd.c 1311                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0004C8 964842rr        4481         MOV.B   ES,#SEG( _ParCnt )
0004CC 9908rrrr        4482         MOV.W   R0,#SOF( _ParCnt )
0004D0 8200            4483         MOV.B   R0L,[R0]
0004D2 910401          4484         CMP.B   R0L,#01H
0004D5 F215            4485         BNE     _80
0004D7 9918rrrr        4486         MOV.W   R1,#SEG( _Cmd )
0004DB 9908rrrr        4487         MOV.W   R0,#SOF( _Cmd )
0004DF 9168rr          4488         MOV.B   R3L,#SEG( __lc_bs )
0004E2 7177            4489         XOR.B   R3H,R3H
0004E4 8927            4490         MOV.W   R2,R7
0004E6 0F0C            4491         PUSH.W  R2, R3
0004E8 9938rrrr        4493         MOV.W   R3,#SEG( _10 )
0004EC 9928rrrr        4494         MOV.W   R2,#SOF( _10 )
0004F0 0F0C            4495         PUSH.W  R2, R3
                       4497         CALL    _sscanf
0004F2 C4rrrrrr       +4497 ;       FCALL   _sscanf
0004F6 99700008        4498         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  74

ADDR   CODE            LINE SOURCELINE
0004FA 99040001        4500         CMP.W   R0,#01H
0004FE F306            4501         BEQ     _81
0004FE F306            4501         BEQ     _81
000500                 4502 _80:
                       4503 ; rs232cmd.c 1312                               {
                       4504 ; rs232cmd.c 1313                                       SCPIError = SyntaxErr;  
000500 964842rr        4506         MOV.B   ES,#SEG( _SCPIError )
000504 9908rrrr        4507         MOV.W   R0,#SOF( _SCPIError )
000508 BA03            4508         MOV.W   [R0],#03H
                       4509 ; rs232cmd.c 1314                                       return;
00050A FE18            4511         BR      _89
                       4512 ; rs232cmd.c 1315                               }
00050C                 4514 _81:
                       4515 ; rs232cmd.c 1316       
                       4516 ; rs232cmd.c 1317                               if (( Reg == 0) || ( Reg > NoOfPresets))
00050C 8A07            4518         MOV.W   R0,[R7]
00050E F303            4519         BEQ     _82
000510 9A740004        4520         CMP.W   [R7],#04H
000514 FD07            4521         BLE     _83
000514 FD07            4521         BLE     _83
000516                 4522 _82:
                       4523 ; rs232cmd.c 1318                                       SCPIError = DataOutOfRange;
000516 964842rr        4525         MOV.B   ES,#SEG( _SCPIError )
00051A 9908rrrr        4526         MOV.W   R0,#SOF( _SCPIError )
00051E 9A080021        4527         MOV.W   [R0],#021H
000522 FE0C            4528         BR      _89
000522 FE0C            4528         BR      _89
000524                 4529 _83:
                       4530 ; rs232cmd.c 1319                               else
                       4531 ; rs232cmd.c 1320                               {
                       4532 ; rs232cmd.c 1321                                       if ( RecallPreset( Reg) != OK)
000524 8A07            4534         MOV.W   R0,[R7]
                       4535         CALL    _RecallPreset
000526 C4rrrrrr       +4535 ;       FCALL   _RecallPreset
00052A 9904FFFF        4536         CMP.W   R0,#0FFFFH
00052E F306            4537         BEQ     _89
                       4538 ; rs232cmd.c 1322                                               SCPIError = ExecErr;
000530 964842rr        4540         MOV.B   ES,#SEG( _SCPIError )
000534 9908rrrr        4541         MOV.W   R0,#SOF( _SCPIError )
000538 9A08001D        4542         MOV.W   [R0],#01DH
                       4543 ; rs232cmd.c 1323                               }
                       4544 ; rs232cmd.c 1324                       }
                       4545 ; rs232cmd.c 1325               }
                       4546 ; rs232cmd.c 1326       }
00053C                 4548 _89:
00053C A972            4549         ADDS.W  R7,#02H
00053E D680            4551         RET
                       4553 ; rs232cmd.c 1327       
                       4554 ; rs232cmd.c 1328       /************************************************************************
                            **/
                       4555 ; rs232cmd.c 1329       /* SAVCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4556 ; rs232cmd.c 1330       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4557 ; rs232cmd.c 1331       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                            */
                       4558 ; rs232cmd.c 1332       /* Revised:             Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                                    */
                       4559 ; rs232cmd.c 1333       /*                                                                       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  75

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                             
                                                    */
                       4560 ; rs232cmd.c 1334       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       4561 ; rs232cmd.c 1335       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4562 ; rs232cmd.c 1336       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4563 ; rs232cmd.c 1337       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4564 ; rs232cmd.c 1338       /************************************************************************
                            **/
                       4565 ; rs232cmd.c 1339       void SAVCommand(void) 
                       4566 ; rs232cmd.c 1340       {
                       4567         ALIGN   1
                       4569         PUBLIC  _SAVCommand
000540                 4570 _SAVCommand:
000540 A97E            4574         ADDS.W  R7,#0EH
                       4577 ; rs232cmd.c 1341               int     Reg = 0;
000542 BA70            4579         MOV.W   [R7],#00H
                       4580 ; rs232cmd.c 1342       
                       4581 ; rs232cmd.c 1343               if ( CmdExecute && !SCPIError)
000544 964842rr        4583         MOV.B   ES,#SEG( _CmdExecute )
000548 9908rrrr        4584         MOV.W   R0,#SOF( _CmdExecute )
00054C 8200            4585         MOV.B   R0L,[R0]
00054E F34C            4586         BEQ     _104
000550 964842rr        4587         MOV.B   ES,#SEG( _SCPIError )
000554 9908rrrr        4588         MOV.W   R0,#SOF( _SCPIError )
000558 8A00            4589         MOV.W   R0,[R0]
00055A F246            4590         BNE     _104
                       4591 ; rs232cmd.c 1344               {
                       4592 ; rs232cmd.c 1345                       if ( CmdRequest)
00055C 964842rr        4594         MOV.B   ES,#SEG( _CmdRequest )
000560 9908rrrr        4595         MOV.W   R0,#SOF( _CmdRequest )
000564 8200            4596         MOV.B   R0L,[R0]
000566 F306            4597         BEQ     _94
                       4598 ; rs232cmd.c 1346                               SCPIError = SyntaxErr;
000568 964842rr        4600         MOV.B   ES,#SEG( _SCPIError )
00056C 9908rrrr        4601         MOV.W   R0,#SOF( _SCPIError )
000570 BA03            4602         MOV.W   [R0],#03H
000572 FE3A            4603         BR      _104
000572 FE3A            4603         BR      _104
000574                 4604 _94:
                       4605 ; rs232cmd.c 1347                       else
                       4606 ; rs232cmd.c 1348                       {
                       4607 ; rs232cmd.c 1349                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000574 964842rr        4609         MOV.B   ES,#SEG( _ParCnt )
000578 9908rrrr        4610         MOV.W   R0,#SOF( _ParCnt )
00057C 8200            4611         MOV.B   R0L,[R0]
00057E 910401          4612         CMP.B   R0L,#01H
000581 F215            4613         BNE     _95
000583 9918rrrr        4614         MOV.W   R1,#SEG( _Cmd )
000587 9908rrrr        4615         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  76

ADDR   CODE            LINE SOURCELINE
00058B 9168rr          4616         MOV.B   R3L,#SEG( __lc_bs )
00058E 7177            4617         XOR.B   R3H,R3H
000590 8927            4618         MOV.W   R2,R7
000592 0F0C            4619         PUSH.W  R2, R3
000594 9938rrrr        4621         MOV.W   R3,#SEG( _10 )
000598 9928rrrr        4622         MOV.W   R2,#SOF( _10 )
00059C 0F0C            4623         PUSH.W  R2, R3
                       4625         CALL    _sscanf
00059E C4rrrrrr       +4625 ;       FCALL   _sscanf
0005A2 99700008        4626         ADD.W   R7,#08H
0005A6 99040001        4628         CMP.W   R0,#01H
0005AA F306            4629         BEQ     _96
0005AA F306            4629         BEQ     _96
0005AC                 4630 _95:
                       4631 ; rs232cmd.c 1350                               {
                       4632 ; rs232cmd.c 1351                                       SCPIError = SyntaxErr;  
0005AC 964842rr        4634         MOV.B   ES,#SEG( _SCPIError )
0005B0 9908rrrr        4635         MOV.W   R0,#SOF( _SCPIError )
0005B4 BA03            4636         MOV.W   [R0],#03H
                       4637 ; rs232cmd.c 1352                                       return;
0005B6 FE18            4639         BR      _104
                       4640 ; rs232cmd.c 1353                               }
0005B8                 4642 _96:
                       4643 ; rs232cmd.c 1354       
                       4644 ; rs232cmd.c 1355                               if (( Reg == 0) || ( Reg > NoOfPresets))
0005B8 8A07            4646         MOV.W   R0,[R7]
0005BA F303            4647         BEQ     _97
0005BC 9A740004        4648         CMP.W   [R7],#04H
0005C0 FD07            4649         BLE     _98
0005C0 FD07            4649         BLE     _98
0005C2                 4650 _97:
                       4651 ; rs232cmd.c 1356                                       SCPIError = DataOutOfRange;
0005C2 964842rr        4653         MOV.B   ES,#SEG( _SCPIError )
0005C6 9908rrrr        4654         MOV.W   R0,#SOF( _SCPIError )
0005CA 9A080021        4655         MOV.W   [R0],#021H
0005CE FE0C            4656         BR      _104
0005CE FE0C            4656         BR      _104
0005D0                 4657 _98:
                       4658 ; rs232cmd.c 1357                               else
                       4659 ; rs232cmd.c 1358                               {
                       4660 ; rs232cmd.c 1359                                       if ( StorePreset( Reg) != OK)
0005D0 8A07            4662         MOV.W   R0,[R7]
                       4663         CALL    _StorePreset
0005D2 C4rrrrrr       +4663 ;       FCALL   _StorePreset
0005D6 9904FFFF        4664         CMP.W   R0,#0FFFFH
0005DA F306            4665         BEQ     _104
                       4666 ; rs232cmd.c 1360                                               SCPIError = ExecErr;
0005DC 964842rr        4668         MOV.B   ES,#SEG( _SCPIError )
0005E0 9908rrrr        4669         MOV.W   R0,#SOF( _SCPIError )
0005E4 9A08001D        4670         MOV.W   [R0],#01DH
                       4671 ; rs232cmd.c 1361                               }
                       4672 ; rs232cmd.c 1362                       }
                       4673 ; rs232cmd.c 1363               }
                       4674 ; rs232cmd.c 1364       }
0005E8                 4676 _104:
0005E8 A972            4677         ADDS.W  R7,#02H
0005EA D680            4679         RET
                       4681 ; rs232cmd.c 1365       
                       4682 ; rs232cmd.c 1366       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  77

ADDR   CODE            LINE SOURCELINE
                       4683 ; rs232cmd.c 1367       /* SystemError                                                           
                                                                                                                             
                                                             RS232CMD.C */
                       4684 ; rs232cmd.c 1368       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4685 ; rs232cmd.c 1369       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       4686 ; rs232cmd.c 1370       /* Revised:             000401                                           
                                                                                                                             
                                                                                    */
                       4687 ; rs232cmd.c 1371       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4688 ; rs232cmd.c 1372       /* Function:    Write the next entry in the error queue (FIFO) to RS232  
                                            */
                       4689 ; rs232cmd.c 1373       /* Remarks:             No parameters, Query only                        
                                                                                                                             
                                                    */
                       4690 ; rs232cmd.c 1374       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4691 ; rs232cmd.c 1375       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4692 ; rs232cmd.c 1376       /************************************************************************
                            **/
                       4693 ; rs232cmd.c 1377       void SystemError( void)
                       4694 ; rs232cmd.c 1378       {
                       4695         ALIGN   1
                       4697         PUBLIC  _SystemError
0005EC                 4698 _SystemError:
0005EC 0F30            4702         PUSH.W  R4, R5
0005EE 9972000C        4704         SUB.W   R7,#0CH
                       4712 ; rs232cmd.c 1379               int i;
                       4713 ; rs232cmd.c 1380               code char *ptr;
                       4714 ; rs232cmd.c 1381               char buf[12];
                       4715 ; rs232cmd.c 1382       
                       4716 ; rs232cmd.c 1383               if ( CmdExecute && !SCPIError)
0005F2 964842rr        4718         MOV.B   ES,#SEG( _CmdExecute )
0005F6 9908rrrr        4719         MOV.W   R0,#SOF( _CmdExecute )
0005FA 8200            4720         MOV.B   R0L,[R0]
0005FC F377            4721         BEQ     _119
0005FE 964842rr        4722         MOV.B   ES,#SEG( _SCPIError )
000602 9908rrrr        4723         MOV.W   R0,#SOF( _SCPIError )
000606 8A00            4724         MOV.W   R0,[R0]
000608 F271            4725         BNE     _119
                       4726 ; rs232cmd.c 1384               {
                       4727 ; rs232cmd.c 1385                       if ( CmdRequest)
00060A 964842rr        4729         MOV.B   ES,#SEG( _CmdRequest )
00060E 9908rrrr        4730         MOV.W   R0,#SOF( _CmdRequest )
000612 8200            4731         MOV.B   R0L,[R0]
000614 F366            4732         BEQ     _114
                       4733 ; rs232cmd.c 1386                       {
                       4734 ; rs232cmd.c 1387                               if ( ParCnt > 0)
000616 964842rr        4736         MOV.B   ES,#SEG( _ParCnt )
00061A 9908rrrr        4737         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  78

ADDR   CODE            LINE SOURCELINE
00061E 8200            4738         MOV.B   R0L,[R0]
000620 910400          4739         CMP.B   R0L,#00H
000623 F907            4740         BL      _111
                       4741 ; rs232cmd.c 1388                                       SCPIError = ParNotAllowed;
000625 964842rr        4743         MOV.B   ES,#SEG( _SCPIError )
000629 9908rrrr        4744         MOV.W   R0,#SOF( _SCPIError )
00062D BA06            4745         MOV.W   [R0],#06H
00062F FE5E            4746         BR      _119
00062F FE5E00          4746         BR      _119
000632                 4747 _111:
                       4748 ; rs232cmd.c 1389                               else
                       4749 ; rs232cmd.c 1390                               {
                       4750 ; rs232cmd.c 1391                                       if (( i = ReadErrorEventQueue()) >= 0)
                       4752         CALL    _ReadErrorEventQueue
000632 C4rrrrrr       +4752 ;       FCALL   _ReadErrorEventQueue
000636 8940            4753         MOV.W   R4,R0
000638 8910            4754         MOV.W   R1,R0
00063A 99140000        4755         CMP.W   R1,#00H
00063E FB56            4756         BLT     _119
                       4757 ; rs232cmd.c 1392                                       {
                       4758 ; rs232cmd.c 1393                                               sprintf( buf, "%d,\"", ErrorTxt_A
                            rray[i].ErrorNo);
000640 9128rr          4760         MOV.B   R1L,#SEG( __lc_bs )
000643 7133            4761         XOR.B   R1H,R1H
000645 8907            4762         MOV.W   R0,R7
000647 E9400006        4763         MULU.W  R4,#06H
00064B 8924            4764         MOV.W   R2,R4
00064D B930            4765         MOVS.W  R3,#00H
00064F 9918rrrr        4766         MOV.W   R1,#SEG( _ErrorTxt_Array )
000653 9908rrrr        4767         MOV.W   R0,#SOF( _ErrorTxt_Array )
000657 0902            4768         ADD.W   R0,R2
000659 1913            4769         ADDC.W  R1,R3
00065B 862C43          4770         MOV.B   CS,R1L
00065E 8810            4771         MOVC.W  R1,[R0+]
000660 0F02            4772         PUSH.W  R1
000662 9918rrrr        4774         MOV.W   R1,#SEG( _109 )
000666 9908rrrr        4775         MOV.W   R0,#SOF( _109 )
00066A 0F03            4776         PUSH.W  R0, R1
00066C 9128rr          4778         MOV.B   R1L,#SEG( __lc_bs )
00066F 7133            4779         XOR.B   R1H,R1H
000671 400706          4780         LEA     R0,R7+6
                       4781         CALL    _sprintf
000674 C4rrrrrr       +4781 ;       FCALL   _sprintf
000678 A976            4782         ADDS.W  R7,#06H
                       4784 ; rs232cmd.c 1394                                               rs232puts( buf);
00067A 9128rr          4786         MOV.B   R1L,#SEG( __lc_bs )
00067D 7133            4787         XOR.B   R1H,R1H
00067F 8907            4788         MOV.W   R0,R7
                       4789         CALL    _rs232puts
000681 C4rrrrrr       +4789 ;       FCALL   _rs232puts
                       4790 ; rs232cmd.c 1395       
                       4791 ; rs232cmd.c 1396                                               ptr = ErrorTxt_Array[i].ErrorTxt;
                            
000685 8924            4793         MOV.W   R2,R4
000687 B930            4794         MOVS.W  R3,#00H
000689 9918rrrr        4795         MOV.W   R1,#SEG( _ErrorTxt_Array+2 )
00068D 9908rrrr        4796         MOV.W   R0,#SOF( _ErrorTxt_Array+2 )
000691 0902            4797         ADD.W   R0,R2
000693 1913            4798         ADDC.W  R1,R3
000695 862C43          4799         MOV.B   CS,R1L
000698 8820            4800         MOVC.W  R2,[R0+]
00069A 99040000        4801         CMP.W   R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  79

ADDR   CODE            LINE SOURCELINE
00069E F202            4802         BNE     _122
0006A0 A64143          4803         ADDS.B  CS,#01H
0006A0 A6414300        4803         ADDS.B  CS,#01H
0006A4                 4804 _122:
0006A4 8830            4805         MOVC.W  R3,[R0+]
0006A6 8953            4806         MOV.W   R5,R3
0006A8 8942            4807         MOV.W   R4,R2
                       4809 ; rs232cmd.c 1397       
                       4810 ; rs232cmd.c 1398                                               while ( *ptr)
0006AA 866C43          4812         MOV.B   CS,R3L
0006AD 8062            4813         MOVC.B  R3L,[R2+]
0006AF F312            4814         BEQ     _113
0006AF F31200          4814         BEQ     _113
0006B2                 4815 _112:
                       4816 ; rs232cmd.c 1399                                                       rs232putchar( *ptr++);
0006B2 8915            4818         MOV.W   R1,R5
0006B4 8904            4819         MOV.W   R0,R4
0006B6 862C43          4820         MOV.B   CS,R1L
0006B9 8020            4821         MOVC.B  R1L,[R0+]
0006BB 8102            4822         MOV.B   R0L,R1L
                       4823         CALL    _rs232putchar
0006BD C4rrrrrr       +4823 ;       FCALL   _rs232putchar
0006C1 99400001        4824         ADD.W   R4,#01H
0006C5 99510000        4825         ADDC.W  R5,#00H
0006C9 8915            4829         MOV.W   R1,R5
0006CB 8904            4830         MOV.W   R0,R4
0006CD 862C43          4831         MOV.B   CS,R1L
0006D0 8020            4832         MOVC.B  R1L,[R0+]
0006D2 F2EF            4833         BNE     _112
0006D4                 4835 _113:
                       4836 ; rs232cmd.c 1400       
                       4837 ; rs232cmd.c 1401                                                rs232puts( "\"\n");
0006D4 9918rrrr        4839         MOV.W   R1,#SEG( _110 )
0006D8 9908rrrr        4840         MOV.W   R0,#SOF( _110 )
                       4841         CALL    _rs232puts
0006DC C4rrrrrr       +4841 ;       FCALL   _rs232puts
                       4842 ; rs232cmd.c 1402                                       }
                       4843 ; rs232cmd.c 1403                               }
                       4844 ; rs232cmd.c 1404                       }
0006E0 FE05            4846         BR      _119
0006E0 FE05            4846         BR      _119
0006E2                 4847 _114:
                       4848 ; rs232cmd.c 1405                       else
                       4849 ; rs232cmd.c 1406                               SCPIError = SyntaxErr;
0006E2 964842rr        4851         MOV.B   ES,#SEG( _SCPIError )
0006E6 9908rrrr        4852         MOV.W   R0,#SOF( _SCPIError )
0006EA BA03            4853         MOV.W   [R0],#03H
                       4854 ; rs232cmd.c 1407               }
0006EC                 4856 _119:
                       4857 ; rs232cmd.c 1408       }
0006EC 9970000C        4859         ADD.W   R7,#0CH
0006F0 2F30            4861         POP.W   R4, R5
0006F2 D680            4863         RET
                       4866 ; rs232cmd.c 1409       
                       4867 ; rs232cmd.c 1410       /************************************************************************
                            **/
                       4868 ; rs232cmd.c 1411       /* SystemVersion                                                         
                                                                                                                             
                                                             RS232CMD.C */
                       4869 ; rs232cmd.c 1412       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  80

ADDR   CODE            LINE SOURCELINE
                       4870 ; rs232cmd.c 1413       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       4871 ; rs232cmd.c 1414       /* Revised:             000401                                           
                                                                                                                             
                                                                                    */
                       4872 ; rs232cmd.c 1415       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4873 ; rs232cmd.c 1416       /* Function:    Write the SCPI version to RS232                          
                                                                                                                    */
                       4874 ; rs232cmd.c 1417       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                    */
                       4875 ; rs232cmd.c 1418       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4876 ; rs232cmd.c 1419       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4877 ; rs232cmd.c 1420       /************************************************************************
                            **/
                       4878 ; rs232cmd.c 1421       void SystemVersion( void)
                       4879 ; rs232cmd.c 1422       {
                       4880         ALIGN   1
                       4882         PUBLIC  _SystemVersion
0006F4                 4883 _SystemVersion:
0006F4 0F30            4887         PUSH.W  R4, R5
                       4891 ; rs232cmd.c 1423               char code *str;
                       4892 ; rs232cmd.c 1424       
                       4893 ; rs232cmd.c 1425               if ( CmdExecute && !SCPIError)
0006F6 964842rr        4895         MOV.B   ES,#SEG( _CmdExecute )
0006FA 9908rrrr        4896         MOV.W   R0,#SOF( _CmdExecute )
0006FE 8200            4897         MOV.B   R0L,[R0]
000700 F33D            4898         BEQ     _130
000702 964842rr        4899         MOV.B   ES,#SEG( _SCPIError )
000706 9908rrrr        4900         MOV.W   R0,#SOF( _SCPIError )
00070A 8A00            4901         MOV.W   R0,[R0]
00070C F237            4902         BNE     _130
                       4903 ; rs232cmd.c 1426               {
                       4904 ; rs232cmd.c 1427                       if ( CmdRequest)
00070E 964842rr        4906         MOV.B   ES,#SEG( _CmdRequest )
000712 9908rrrr        4907         MOV.W   R0,#SOF( _CmdRequest )
000716 8200            4908         MOV.B   R0L,[R0]
000718 F32C            4909         BEQ     _126
                       4910 ; rs232cmd.c 1428                       {
                       4911 ; rs232cmd.c 1429                               if ( ParCnt)
00071A 964842rr        4913         MOV.B   ES,#SEG( _ParCnt )
00071E 9908rrrr        4914         MOV.W   R0,#SOF( _ParCnt )
000722 8200            4915         MOV.B   R0L,[R0]
000724 F306            4916         BEQ     _123
                       4917 ; rs232cmd.c 1430                                       SCPIError = ParNotAllowed;
000726 964842rr        4919         MOV.B   ES,#SEG( _SCPIError )
00072A 9908rrrr        4920         MOV.W   R0,#SOF( _SCPIError )
00072E BA06            4921         MOV.W   [R0],#06H
000730 FE25            4922         BR      _130
000730 FE25            4922         BR      _130
000732                 4923 _123:
                       4924 ; rs232cmd.c 1431                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  81

ADDR   CODE            LINE SOURCELINE
                       4925 ; rs232cmd.c 1432                               {
                       4926 ; rs232cmd.c 1433                                       str = SystemVersionTxt;
000732 9958rrrr        4928         MOV.W   R5,#SEG( _SystemVersionTxt )
000736 9948rrrr        4929         MOV.W   R4,#SOF( _SystemVersionTxt )
                       4931 ; rs232cmd.c 1434       
                       4932 ; rs232cmd.c 1435                                       while ( *str)
00073A 964843rr        4934         MOV.B   CS,#SEG( _SystemVersionTxt )
00073E 9908rrrr        4935         MOV.W   R0,#SOF( _SystemVersionTxt )
000742 8020            4936         MOVC.B  R1L,[R0+]
000744 F311            4937         BEQ     _125
000744 F311            4937         BEQ     _125
000746                 4938 _124:
                       4939 ; rs232cmd.c 1436                                               rs232putchar( *str++);
000746 8915            4941         MOV.W   R1,R5
000748 8904            4942         MOV.W   R0,R4
00074A 862C43          4943         MOV.B   CS,R1L
00074D 8020            4944         MOVC.B  R1L,[R0+]
00074F 8102            4945         MOV.B   R0L,R1L
                       4946         CALL    _rs232putchar
000751 C4rrrrrr       +4946 ;       FCALL   _rs232putchar
000755 99400001        4947         ADD.W   R4,#01H
000759 99510000        4948         ADDC.W  R5,#00H
00075D 8915            4952         MOV.W   R1,R5
00075F 8904            4953         MOV.W   R0,R4
000761 862C43          4954         MOV.B   CS,R1L
000764 8020            4955         MOVC.B  R1L,[R0+]
000766 F2EF            4956         BNE     _124
000768                 4958 _125:
                       4959 ; rs232cmd.c 1437       
                       4960 ; rs232cmd.c 1438                                       rs232putchar( '\n');
000768 91080A          4962         MOV.B   R0L,#0AH
                       4963         CALL    _rs232putchar
00076B C4rrrrrr       +4963 ;       FCALL   _rs232putchar
                       4964 ; rs232cmd.c 1439                               }
                       4965 ; rs232cmd.c 1440                       }
00076F FE06            4967         BR      _130
00076F FE0600          4967         BR      _130
000772                 4968 _126:
                       4969 ; rs232cmd.c 1441                       else
                       4970 ; rs232cmd.c 1442                               SCPIError = SyntaxErr;
000772 964842rr        4972         MOV.B   ES,#SEG( _SCPIError )
000776 9908rrrr        4973         MOV.W   R0,#SOF( _SCPIError )
00077A BA03            4974         MOV.W   [R0],#03H
                       4975 ; rs232cmd.c 1443               }
00077C                 4977 _130:
                       4978 ; rs232cmd.c 1444       }
00077C 2F30            4980         POP.W   R4, R5
00077E D680            4982         RET
                       4985 ; rs232cmd.c 1445       
                       4986 ; rs232cmd.c 1446       /************************************************************************
                            **/
                       4987 ; rs232cmd.c 1447       /* SystemPresetName                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       4988 ; rs232cmd.c 1448       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4989 ; rs232cmd.c 1449       /* Author:              Kim Engedahl, DEV, 970206                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  82

ADDR   CODE            LINE SOURCELINE
                       4990 ; rs232cmd.c 1450       /* Revised:             000503                                           
                                                                                                                             
                                                                                    */
                       4991 ; rs232cmd.c 1451       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       4992 ; rs232cmd.c 1452       /* Function:    Name a specific preset number.                           
                                                                                                                    */
                       4993 ; rs232cmd.c 1453       /* Remarks:             the scanf function can not used MaxPresetNameLeng
                            th, i.e.                */
                       4994 ; rs232cmd.c 1454       /*                                              this define should be ins
                            erted as a value. The value is                  */
                       4995 ; rs232cmd.c 1455       /*                                              defined in INSTRU.H      
                                                                                                                             
                                                                                            */
                       4996 ; rs232cmd.c 1456       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4997 ; rs232cmd.c 1457       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4998 ; rs232cmd.c 1458       /************************************************************************
                            **/
                       4999 ; rs232cmd.c 1459       void SystemPresetName( void)
                       5000 ; rs232cmd.c 1460       {
                       5001         ALIGN   1
                       5017         PUBLIC  _SystemPresetName
000780                 5018 _SystemPresetName:
000780 0F30            5022         PUSH.W  R4, R5
000782 99720078        5024         SUB.W   R7,#078H
                       5029 ; rs232cmd.c 1461               int Reg;
                       5030 ; rs232cmd.c 1462               char Name[MaxPresetNameLength];
                       5031 ; rs232cmd.c 1463               PresetObject Preset;
                       5032 ; rs232cmd.c 1464       
                       5033 ; rs232cmd.c 1465               if ( CmdExecute && !SCPIError)
000786 964842rr        5035         MOV.B   ES,#SEG( _CmdExecute )
00078A 9908rrrr        5036         MOV.W   R0,#SOF( _CmdExecute )
00078E 8200            5037         MOV.B   R0L,[R0]
                       5038         BEQ     _149
000790 F202           +5038 ;       BNE     _LG_154
000792 D500C8         +5038 ;       JMP.L   _149
000792 D500C800       +5038 ;       JMP.L   _149
000796                +5038 _LG_154:
000796 964842rr        5039         MOV.B   ES,#SEG( _SCPIError )
00079A 9908rrrr        5040         MOV.W   R0,#SOF( _SCPIError )
00079E 8A00            5041         MOV.W   R0,[R0]
                       5042         BNE     _149
0007A0 F302           +5042 ;       BEQ     _LG_156
0007A2 D500C0         +5042 ;       JMP.L   _149
0007A2 D500C000       +5042 ;       JMP.L   _149
0007A6                +5042 _LG_156:
                       5043 ; rs232cmd.c 1466               {
                       5044 ; rs232cmd.c 1467                       if ( CmdRequest)
0007A6 964842rr        5046         MOV.B   ES,#SEG( _CmdRequest )
0007AA 9908rrrr        5047         MOV.W   R0,#SOF( _CmdRequest )
0007AE 8200            5048         MOV.B   R0L,[R0]
0007B0 F34B            5049         BEQ     _136
                       5050 ; rs232cmd.c 1468                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  83

ADDR   CODE            LINE SOURCELINE
                       5051 ; rs232cmd.c 1469                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0007B2 964842rr        5053         MOV.B   ES,#SEG( _ParCnt )
0007B6 9908rrrr        5054         MOV.W   R0,#SOF( _ParCnt )
0007BA 8200            5055         MOV.B   R0L,[R0]
0007BC 910401          5056         CMP.B   R0L,#01H
0007BF F215            5057         BNE     _132
0007C1 9918rrrr        5058         MOV.W   R1,#SEG( _Cmd )
0007C5 9908rrrr        5059         MOV.W   R0,#SOF( _Cmd )
0007C9 9168rr          5060         MOV.B   R3L,#SEG( __lc_bs )
0007CC 7177            5061         XOR.B   R3H,R3H
0007CE 8927            5062         MOV.W   R2,R7
0007D0 0F0C            5063         PUSH.W  R2, R3
0007D2 9938rrrr        5065         MOV.W   R3,#SEG( _10 )
0007D6 9928rrrr        5066         MOV.W   R2,#SOF( _10 )
0007DA 0F0C            5067         PUSH.W  R2, R3
                       5069         CALL    _sscanf
0007DC C4rrrrrr       +5069 ;       FCALL   _sscanf
0007E0 99700008        5070         ADD.W   R7,#08H
0007E4 99040001        5072         CMP.W   R0,#01H
0007E8 F307            5073         BEQ     _133
0007E8 F307            5073         BEQ     _133
0007EA                 5074 _132:
                       5075 ; rs232cmd.c 1470                                       SCPIError = SyntaxErr;
0007EA 964842rr        5077         MOV.B   ES,#SEG( _SCPIError )
0007EE 9908rrrr        5078         MOV.W   R0,#SOF( _SCPIError )
0007F2 BA03            5079         MOV.W   [R0],#03H
                       5080         BR      _149
0007F4 D50097         +5080         JMP.L   _149
0007F4 D5009700       +5080         JMP.L   _149
0007F8                 5081 _133:
                       5082 ; rs232cmd.c 1471                               else
                       5083 ; rs232cmd.c 1472                               {
                       5084 ; rs232cmd.c 1473                                       if (( Reg == 0) || ( Reg > NoOfPresets))
0007F8 8A07            5086         MOV.W   R0,[R7]
0007FA F303            5087         BEQ     _134
0007FC 9A740004        5088         CMP.W   [R7],#04H
000800 FD08            5089         BLE     _135
000800 FD08            5089         BLE     _135
000802                 5090 _134:
                       5091 ; rs232cmd.c 1474                                               SCPIError = DataOutOfRange;
000802 964842rr        5093         MOV.B   ES,#SEG( _SCPIError )
000806 9908rrrr        5094         MOV.W   R0,#SOF( _SCPIError )
00080A 9A080021        5095         MOV.W   [R0],#021H
                       5096         BR      _149
00080E D5008A         +5096         JMP.L   _149
00080E D5008A00       +5096         JMP.L   _149
000812                 5097 _135:
                       5098 ; rs232cmd.c 1475                                       else
                       5099 ; rs232cmd.c 1476                                       {
                       5100 ; rs232cmd.c 1477                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
000812 91A8rr          5102         MOV.B   R5L,#SEG( __lc_bs )
000815 71BB            5103         XOR.B   R5H,R5H
000817 404714          5104         LEA     R4,R7+20
00081A 8A07            5105         MOV.W   R0,[R7]
00081C D901            5106         ASL.W   R0,#01H
00081E 8920            5107         MOV.W   R2,R0
000820 B930            5108         MOVS.W  R3,#00H
000822 964842rr        5109         MOV.B   ES,#SEG( _PresetPtr+-2 )
000826 8D22rrrr        5110         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
00082A 99380064        5111         MOV.W   R3,#064H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  84

ADDR   CODE            LINE SOURCELINE
00082E 8915            5112         MOV.W   R1,R5
000830 8904            5113         MOV.W   R0,R4
                       5114         CALL    _NV_Recall
000832 C4rrrrrr       +5114 ;       FCALL   _NV_Recall
                       5115 ; rs232cmd.c 1478       
                       5116 ; rs232cmd.c 1479                                               rs232puts( Preset.Name);
000836 8915            5118         MOV.W   R1,R5
000838 8904            5119         MOV.W   R0,R4
                       5120         CALL    _rs232puts
00083A C4rrrrrr       +5120 ;       FCALL   _rs232puts
                       5121 ; rs232cmd.c 1480                                               rs232putchar( '\n');
00083E 91080A          5123         MOV.B   R0L,#0AH
                       5124         CALL    _rs232putchar
000841 C4rrrrrr       +5124 ;       FCALL   _rs232putchar
                       5125 ; rs232cmd.c 1481                                       }
                       5126 ; rs232cmd.c 1482                               }
                       5127 ; rs232cmd.c 1483                       }
000845 FE6F            5129         BR      _149
000845 FE6F00          5129         BR      _149
000848                 5130 _136:
                       5131 ; rs232cmd.c 1484                       else
                       5132 ; rs232cmd.c 1485                       {
                       5133 ; rs232cmd.c 1486                                                                                
                                                                                    // The second parameter, the string, in s
                            canf
                       5134 ; rs232cmd.c 1487                                                                                
                                                                                    // should be limited to the definition of
                            
                       5135 ; rs232cmd.c 1488                                                                                
                                                                                    // MaxPresetNameLength
                       5136 ; rs232cmd.c 1489                               if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%17s", 
                            &Reg, Name)) != 2))
000848 964842rr        5138         MOV.B   ES,#SEG( _ParCnt )
00084C 9908rrrr        5139         MOV.W   R0,#SOF( _ParCnt )
000850 8200            5140         MOV.B   R0L,[R0]
000852 910402          5141         CMP.B   R0L,#02H
000855 F220            5142         BNE     _137
000857 9918rrrr        5143         MOV.W   R1,#SEG( _Cmd )
00085B 9908rrrr        5144         MOV.W   R0,#SOF( _Cmd )
00085F 9168rr          5145         MOV.B   R3L,#SEG( __lc_bs )
000862 7177            5146         XOR.B   R3H,R3H
000864 8927            5147         MOV.W   R2,R7
000866 91A8rr          5148         MOV.B   R5L,#SEG( __lc_bs )
000869 71BB            5149         XOR.B   R5H,R5H
00086B 404702          5150         LEA     R4,R7+2
00086E 8935            5151         MOV.W   R3,R5
000870 8924            5152         MOV.W   R2,R4
000872 0F0C            5153         PUSH.W  R2, R3
000874 9168rr          5155         MOV.B   R3L,#SEG( __lc_bs )
000877 7177            5156         XOR.B   R3H,R3H
000879 402704          5157         LEA     R2,R7+4
00087C 0F0C            5158         PUSH.W  R2, R3
00087E 9938rrrr        5160         MOV.W   R3,#SEG( _131 )
000882 9928rrrr        5161         MOV.W   R2,#SOF( _131 )
000886 0F0C            5162         PUSH.W  R2, R3
                       5164         CALL    _sscanf
000888 C4rrrrrr       +5164 ;       FCALL   _sscanf
00088C 9970000C        5165         ADD.W   R7,#0CH
000890 99040002        5167         CMP.W   R0,#02H
000894 F306            5168         BEQ     _138
000894 F306            5168         BEQ     _138
000896                 5169 _137:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  85

ADDR   CODE            LINE SOURCELINE
                       5170 ; rs232cmd.c 1490                                       SCPIError = SyntaxErr;
000896 964842rr        5172         MOV.B   ES,#SEG( _SCPIError )
00089A 9908rrrr        5173         MOV.W   R0,#SOF( _SCPIError )
00089E BA03            5174         MOV.W   [R0],#03H
0008A0 FE41            5175         BR      _149
0008A0 FE41            5175         BR      _149
0008A2                 5176 _138:
0008A2 8915            5177         MOV.W   R1,R5
0008A4 8904            5178         MOV.W   R0,R4
                       5179 ; rs232cmd.c 1491                               else
                       5180 ; rs232cmd.c 1492                               {
                       5181 ; rs232cmd.c 1493                                       if ( strlen( Name) == MaxPresetNameLength
                            )
                       5183         CALL    _strlen
0008A6 C4rrrrrr       +5183 ;       FCALL   _strlen
0008AA 99040011        5184         CMP.W   R0,#011H
0008AE F206            5185         BNE     _139
                       5186 ; rs232cmd.c 1494                                               SCPIError = SyntaxErr;
0008B0 964842rr        5188         MOV.B   ES,#SEG( _SCPIError )
0008B4 9908rrrr        5189         MOV.W   R0,#SOF( _SCPIError )
0008B8 BA03            5190         MOV.W   [R0],#03H
0008BA FE34            5191         BR      _149
0008BA FE34            5191         BR      _149
0008BC                 5192 _139:
                       5193 ; rs232cmd.c 1495                                       else
                       5194 ; rs232cmd.c 1496                                       {
                       5195 ; rs232cmd.c 1497                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
0008BC 8A07            5197         MOV.W   R0,[R7]
0008BE F303            5198         BEQ     _140
0008C0 9A740004        5199         CMP.W   [R7],#04H
0008C4 FD07            5200         BLE     _141
0008C4 FD07            5200         BLE     _141
0008C6                 5201 _140:
                       5202 ; rs232cmd.c 1498                                                       SCPIError = DataOutOfRang
                            e;
0008C6 964842rr        5204         MOV.B   ES,#SEG( _SCPIError )
0008CA 9908rrrr        5205         MOV.W   R0,#SOF( _SCPIError )
0008CE 9A080021        5206         MOV.W   [R0],#021H
0008D2 FE28            5207         BR      _149
0008D2 FE28            5207         BR      _149
0008D4                 5208 _141:
                       5209 ; rs232cmd.c 1499                                               else
                       5210 ; rs232cmd.c 1500                                               {
                       5211 ; rs232cmd.c 1501                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
0008D4 91A8rr          5213         MOV.B   R5L,#SEG( __lc_bs )
0008D7 71BB            5214         XOR.B   R5H,R5H
0008D9 404714          5215         LEA     R4,R7+20
0008DC 8A07            5216         MOV.W   R0,[R7]
0008DE D901            5217         ASL.W   R0,#01H
0008E0 8920            5218         MOV.W   R2,R0
0008E2 B930            5219         MOVS.W  R3,#00H
0008E4 964842rr        5220         MOV.B   ES,#SEG( _PresetPtr+-2 )
0008E8 8D22rrrr        5221         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0008EC 99380064        5222         MOV.W   R3,#064H
0008F0 8915            5223         MOV.W   R1,R5
0008F2 8904            5224         MOV.W   R0,R4
                       5225         CALL    _NV_Recall
0008F4 C4rrrrrr       +5225 ;       FCALL   _NV_Recall
0008F8 8915            5226         MOV.W   R1,R5
0008FA 8904            5227         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  86

ADDR   CODE            LINE SOURCELINE
                       5228 ; rs232cmd.c 1502                                                       strcpy( Preset.Name, Name
                            );
0008FC 9168rr          5230         MOV.B   R3L,#SEG( __lc_bs )
0008FF 7177            5231         XOR.B   R3H,R3H
000901 402702          5232         LEA     R2,R7+2
                       5233         CALL    _strcpy
000904 C4rrrrrr       +5233 ;       FCALL   _strcpy
                       5234 ; rs232cmd.c 1503                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000908 8A07            5236         MOV.W   R0,[R7]
00090A D901            5237         ASL.W   R0,#01H
00090C 8920            5238         MOV.W   R2,R0
00090E B930            5239         MOVS.W  R3,#00H
000910 964842rr        5240         MOV.B   ES,#SEG( _PresetPtr+-2 )
000914 8D22rrrr        5241         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000918 8915            5242         MOV.W   R1,R5
00091A 8904            5243         MOV.W   R0,R4
00091C 99380064        5244         MOV.W   R3,#064H
                       5245         CALL    _NV_Store
000920 C4rrrrrr       +5245 ;       FCALL   _NV_Store
                       5246 ; rs232cmd.c 1504                                               }
                       5247 ; rs232cmd.c 1505                                       }
                       5248 ; rs232cmd.c 1506                               }
                       5249 ; rs232cmd.c 1507                       }
                       5250 ; rs232cmd.c 1508               }
000924                 5252 _149:
                       5253 ; rs232cmd.c 1509       }
000924 99700078        5255         ADD.W   R7,#078H
000928 2F30            5257         POP.W   R4, R5
00092A D680            5259         RET
                       5261 ; rs232cmd.c 1510       
                       5262 ; rs232cmd.c 1511       /************************************************************************
                            **/
                       5263 ; rs232cmd.c 1512       /* SystemPresetAuthor                                                    
                                                                                                                             
                                             RS232CMD.C */
                       5264 ; rs232cmd.c 1513       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5265 ; rs232cmd.c 1514       /* Author:              Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                    */
                       5266 ; rs232cmd.c 1515       /* Revised:             000503                                           
                                                                                                                             
                                                                                    */
                       5267 ; rs232cmd.c 1516       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5268 ; rs232cmd.c 1517       /* Function:    Name the author of a specific preset number.             
                                                                            */
                       5269 ; rs232cmd.c 1518       /* Remarks:             the scanf function can not used MaxPresetAuthorLe
                            ngth, i.e.      */
                       5270 ; rs232cmd.c 1519       /*                                              this define should be ins
                            erted as a value. The value is                  */
                       5271 ; rs232cmd.c 1520       /*                                              defined in INSTRU.H      
                                                                                                                             
                                                                                            */
                       5272 ; rs232cmd.c 1521       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  87

ADDR   CODE            LINE SOURCELINE
                       5273 ; rs232cmd.c 1522       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5274 ; rs232cmd.c 1523       /************************************************************************
                            **/
                       5275 ; rs232cmd.c 1524       void SystemPresetAuthor( void)
                       5276 ; rs232cmd.c 1525       {
                       5277         ALIGN   1
                       5279         PUBLIC  _SystemPresetAuthor
00092C                 5280 _SystemPresetAuthor:
00092C 0F30            5284         PUSH.W  R4, R5
00092E 9972006E        5286         SUB.W   R7,#06EH
                       5291 ; rs232cmd.c 1526               int Reg;
                       5292 ; rs232cmd.c 1527               char Author[MaxPresetAuthorLength];
                       5293 ; rs232cmd.c 1528               PresetObject Preset;
                       5294 ; rs232cmd.c 1529       
                       5295 ; rs232cmd.c 1530               if ( CmdExecute && !SCPIError)
000932 964842rr        5297         MOV.B   ES,#SEG( _CmdExecute )
000936 9908rrrr        5298         MOV.W   R0,#SOF( _CmdExecute )
00093A 8200            5299         MOV.B   R0L,[R0]
                       5300         BEQ     _175
00093C F202           +5300 ;       BNE     _LG_178
00093E D500C9         +5300 ;       JMP.L   _175
00093E D500C900       +5300 ;       JMP.L   _175
000942                +5300 _LG_178:
000942 964842rr        5301         MOV.B   ES,#SEG( _SCPIError )
000946 9908rrrr        5302         MOV.W   R0,#SOF( _SCPIError )
00094A 8A00            5303         MOV.W   R0,[R0]
                       5304         BNE     _175
00094C F302           +5304 ;       BEQ     _LG_180
00094E D500C1         +5304 ;       JMP.L   _175
00094E D500C100       +5304 ;       JMP.L   _175
000952                +5304 _LG_180:
                       5305 ; rs232cmd.c 1531               {
                       5306 ; rs232cmd.c 1532                       if ( CmdRequest)
000952 964842rr        5308         MOV.B   ES,#SEG( _CmdRequest )
000956 9908rrrr        5309         MOV.W   R0,#SOF( _CmdRequest )
00095A 8200            5310         MOV.B   R0L,[R0]
00095C F34A            5311         BEQ     _162
                       5312 ; rs232cmd.c 1533                       {
                       5313 ; rs232cmd.c 1534                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
00095E 964842rr        5315         MOV.B   ES,#SEG( _ParCnt )
000962 9908rrrr        5316         MOV.W   R0,#SOF( _ParCnt )
000966 8200            5317         MOV.B   R0L,[R0]
000968 910401          5318         CMP.B   R0L,#01H
00096B F215            5319         BNE     _158
00096D 9918rrrr        5320         MOV.W   R1,#SEG( _Cmd )
000971 9908rrrr        5321         MOV.W   R0,#SOF( _Cmd )
000975 9168rr          5322         MOV.B   R3L,#SEG( __lc_bs )
000978 7177            5323         XOR.B   R3H,R3H
00097A 8927            5324         MOV.W   R2,R7
00097C 0F0C            5325         PUSH.W  R2, R3
00097E 9938rrrr        5327         MOV.W   R3,#SEG( _10 )
000982 9928rrrr        5328         MOV.W   R2,#SOF( _10 )
000986 0F0C            5329         PUSH.W  R2, R3
                       5331         CALL    _sscanf
000988 C4rrrrrr       +5331 ;       FCALL   _sscanf
00098C 99700008        5332         ADD.W   R7,#08H
000990 99040001        5334         CMP.W   R0,#01H
000994 F307            5335         BEQ     _159
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  88

ADDR   CODE            LINE SOURCELINE
000994 F307            5335         BEQ     _159
000996                 5336 _158:
                       5337 ; rs232cmd.c 1535                                       SCPIError = SyntaxErr;
000996 964842rr        5339         MOV.B   ES,#SEG( _SCPIError )
00099A 9908rrrr        5340         MOV.W   R0,#SOF( _SCPIError )
00099E BA03            5341         MOV.W   [R0],#03H
                       5342         BR      _175
0009A0 D50098         +5342         JMP.L   _175
0009A0 D5009800       +5342         JMP.L   _175
0009A4                 5343 _159:
                       5344 ; rs232cmd.c 1536                               else
                       5345 ; rs232cmd.c 1537                               {
                       5346 ; rs232cmd.c 1538                                       if (( Reg == 0) || ( Reg > NoOfPresets))
0009A4 8A07            5348         MOV.W   R0,[R7]
0009A6 F303            5349         BEQ     _160
0009A8 9A740004        5350         CMP.W   [R7],#04H
0009AC FD08            5351         BLE     _161
0009AC FD08            5351         BLE     _161
0009AE                 5352 _160:
                       5353 ; rs232cmd.c 1539                                               SCPIError = DataOutOfRange;
0009AE 964842rr        5355         MOV.B   ES,#SEG( _SCPIError )
0009B2 9908rrrr        5356         MOV.W   R0,#SOF( _SCPIError )
0009B6 9A080021        5357         MOV.W   [R0],#021H
                       5358         BR      _175
0009BA D5008B         +5358         JMP.L   _175
0009BA D5008B00       +5358         JMP.L   _175
0009BE                 5359 _161:
                       5360 ; rs232cmd.c 1540                                       else
                       5361 ; rs232cmd.c 1541                                       {
                       5362 ; rs232cmd.c 1542                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
0009BE 9128rr          5364         MOV.B   R1L,#SEG( __lc_bs )
0009C1 7133            5365         XOR.B   R1H,R1H
0009C3 40070A          5366         LEA     R0,R7+10
0009C6 8A27            5367         MOV.W   R2,[R7]
0009C8 D921            5368         ASL.W   R2,#01H
0009CA B930            5369         MOVS.W  R3,#00H
0009CC 964842rr        5370         MOV.B   ES,#SEG( _PresetPtr+-2 )
0009D0 8D22rrrr        5371         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0009D4 99380064        5372         MOV.W   R3,#064H
                       5373         CALL    _NV_Recall
0009D8 C4rrrrrr       +5373 ;       FCALL   _NV_Recall
                       5374 ; rs232cmd.c 1543       
                       5375 ; rs232cmd.c 1544                                               rs232puts( Preset.Author);
0009DC 9128rr          5377         MOV.B   R1L,#SEG( __lc_bs )
0009DF 7133            5378         XOR.B   R1H,R1H
0009E1 40071B          5379         LEA     R0,R7+27
                       5380         CALL    _rs232puts
0009E4 C4rrrrrr       +5380 ;       FCALL   _rs232puts
                       5381 ; rs232cmd.c 1545                                               rs232putchar( '\n');
0009E8 91080A          5383         MOV.B   R0L,#0AH
                       5384         CALL    _rs232putchar
0009EB C4rrrrrr       +5384 ;       FCALL   _rs232putchar
                       5385 ; rs232cmd.c 1546                                       }
                       5386 ; rs232cmd.c 1547                               }
                       5387 ; rs232cmd.c 1548                       }
0009EF FE71            5389         BR      _175
0009EF FE7100          5389         BR      _175
0009F2                 5390 _162:
                       5391 ; rs232cmd.c 1549                       else
                       5392 ; rs232cmd.c 1550                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  89

ADDR   CODE            LINE SOURCELINE
                       5393 ; rs232cmd.c 1551                                                                                
                                                                                    // The second parameter, the string, in s
                            canf
                       5394 ; rs232cmd.c 1552                                                                                
                                                                                    // should be limited to the definition of
                            
                       5395 ; rs232cmd.c 1553                                                                                
                                                                                    // MaxPresetAuthorLength
                       5396 ; rs232cmd.c 1554                               if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%7s", &
                            Reg, Author)) != 2))
0009F2 964842rr        5398         MOV.B   ES,#SEG( _ParCnt )
0009F6 9908rrrr        5399         MOV.W   R0,#SOF( _ParCnt )
0009FA 8200            5400         MOV.B   R0L,[R0]
0009FC 910402          5401         CMP.B   R0L,#02H
0009FF F220            5402         BNE     _163
000A01 9918rrrr        5403         MOV.W   R1,#SEG( _Cmd )
000A05 9908rrrr        5404         MOV.W   R0,#SOF( _Cmd )
000A09 9168rr          5405         MOV.B   R3L,#SEG( __lc_bs )
000A0C 7177            5406         XOR.B   R3H,R3H
000A0E 8927            5407         MOV.W   R2,R7
000A10 91A8rr          5408         MOV.B   R5L,#SEG( __lc_bs )
000A13 71BB            5409         XOR.B   R5H,R5H
000A15 404702          5410         LEA     R4,R7+2
000A18 8935            5411         MOV.W   R3,R5
000A1A 8924            5412         MOV.W   R2,R4
000A1C 0F0C            5413         PUSH.W  R2, R3
000A1E 9168rr          5415         MOV.B   R3L,#SEG( __lc_bs )
000A21 7177            5416         XOR.B   R3H,R3H
000A23 402704          5417         LEA     R2,R7+4
000A26 0F0C            5418         PUSH.W  R2, R3
000A28 9938rrrr        5420         MOV.W   R3,#SEG( _157 )
000A2C 9928rrrr        5421         MOV.W   R2,#SOF( _157 )
000A30 0F0C            5422         PUSH.W  R2, R3
                       5424         CALL    _sscanf
000A32 C4rrrrrr       +5424 ;       FCALL   _sscanf
000A36 9970000C        5425         ADD.W   R7,#0CH
000A3A 99040002        5427         CMP.W   R0,#02H
000A3E F306            5428         BEQ     _164
000A3E F306            5428         BEQ     _164
000A40                 5429 _163:
                       5430 ; rs232cmd.c 1555                                       SCPIError = SyntaxErr;
000A40 964842rr        5432         MOV.B   ES,#SEG( _SCPIError )
000A44 9908rrrr        5433         MOV.W   R0,#SOF( _SCPIError )
000A48 BA03            5434         MOV.W   [R0],#03H
000A4A FE43            5435         BR      _175
000A4A FE43            5435         BR      _175
000A4C                 5436 _164:
000A4C 8915            5437         MOV.W   R1,R5
000A4E 8904            5438         MOV.W   R0,R4
                       5439 ; rs232cmd.c 1556                               else
                       5440 ; rs232cmd.c 1557                               {
                       5441 ; rs232cmd.c 1558                                       if ( strlen( Author) == MaxPresetAuthorLe
                            ngth)
                       5443         CALL    _strlen
000A50 C4rrrrrr       +5443 ;       FCALL   _strlen
000A54 99040007        5444         CMP.W   R0,#07H
000A58 F206            5445         BNE     _165
                       5446 ; rs232cmd.c 1559                                               SCPIError = SyntaxErr;
000A5A 964842rr        5448         MOV.B   ES,#SEG( _SCPIError )
000A5E 9908rrrr        5449         MOV.W   R0,#SOF( _SCPIError )
000A62 BA03            5450         MOV.W   [R0],#03H
000A64 FE36            5451         BR      _175
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  90

ADDR   CODE            LINE SOURCELINE
000A64 FE36            5451         BR      _175
000A66                 5452 _165:
                       5453 ; rs232cmd.c 1560                                       else
                       5454 ; rs232cmd.c 1561                                       {
                       5455 ; rs232cmd.c 1562                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
000A66 8A07            5457         MOV.W   R0,[R7]
000A68 F303            5458         BEQ     _166
000A6A 9A740004        5459         CMP.W   [R7],#04H
000A6E FD07            5460         BLE     _167
000A6E FD07            5460         BLE     _167
000A70                 5461 _166:
                       5462 ; rs232cmd.c 1563                                                       SCPIError = DataOutOfRang
                            e;
000A70 964842rr        5464         MOV.B   ES,#SEG( _SCPIError )
000A74 9908rrrr        5465         MOV.W   R0,#SOF( _SCPIError )
000A78 9A080021        5466         MOV.W   [R0],#021H
000A7C FE2A            5467         BR      _175
000A7C FE2A            5467         BR      _175
000A7E                 5468 _167:
                       5469 ; rs232cmd.c 1564                                               else
                       5470 ; rs232cmd.c 1565                                               {
                       5471 ; rs232cmd.c 1566                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
000A7E 91A8rr          5473         MOV.B   R5L,#SEG( __lc_bs )
000A81 71BB            5474         XOR.B   R5H,R5H
000A83 40470A          5475         LEA     R4,R7+10
000A86 8A07            5476         MOV.W   R0,[R7]
000A88 D901            5477         ASL.W   R0,#01H
000A8A 8920            5478         MOV.W   R2,R0
000A8C B930            5479         MOVS.W  R3,#00H
000A8E 964842rr        5480         MOV.B   ES,#SEG( _PresetPtr+-2 )
000A92 8D22rrrr        5481         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000A96 99380064        5482         MOV.W   R3,#064H
000A9A 8915            5483         MOV.W   R1,R5
000A9C 8904            5484         MOV.W   R0,R4
                       5485         CALL    _NV_Recall
000A9E C4rrrrrr       +5485 ;       FCALL   _NV_Recall
                       5486 ; rs232cmd.c 1567                                                       strcpy( Preset.Author, Au
                            thor);
000AA2 9128rr          5488         MOV.B   R1L,#SEG( __lc_bs )
000AA5 7133            5489         XOR.B   R1H,R1H
000AA7 40071B          5490         LEA     R0,R7+27
000AAA 9168rr          5491         MOV.B   R3L,#SEG( __lc_bs )
000AAD 7177            5492         XOR.B   R3H,R3H
000AAF 402702          5493         LEA     R2,R7+2
                       5494         CALL    _strcpy
000AB2 C4rrrrrr       +5494 ;       FCALL   _strcpy
                       5495 ; rs232cmd.c 1568                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000AB6 8A07            5497         MOV.W   R0,[R7]
000AB8 D901            5498         ASL.W   R0,#01H
000ABA 8920            5499         MOV.W   R2,R0
000ABC B930            5500         MOVS.W  R3,#00H
000ABE 964842rr        5501         MOV.B   ES,#SEG( _PresetPtr+-2 )
000AC2 8D22rrrr        5502         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000AC6 8915            5503         MOV.W   R1,R5
000AC8 8904            5504         MOV.W   R0,R4
000ACA 99380064        5505         MOV.W   R3,#064H
                       5506         CALL    _NV_Store
000ACE C4rrrrrr       +5506 ;       FCALL   _NV_Store
                       5507 ; rs232cmd.c 1569                                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  91

ADDR   CODE            LINE SOURCELINE
                       5508 ; rs232cmd.c 1570                                       }
                       5509 ; rs232cmd.c 1571                               }
                       5510 ; rs232cmd.c 1572                       }
                       5511 ; rs232cmd.c 1573               }
000AD2                 5513 _175:
                       5514 ; rs232cmd.c 1574       }
000AD2 9970006E        5516         ADD.W   R7,#06EH
000AD6 2F30            5518         POP.W   R4, R5
000AD8 D680            5520         RET
                       5522 ; rs232cmd.c 1575       
                       5523 ; rs232cmd.c 1576       /************************************************************************
                            **/
                       5524 ; rs232cmd.c 1577       /* SystemPresetDate                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       5525 ; rs232cmd.c 1578       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5526 ; rs232cmd.c 1579       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       5527 ; rs232cmd.c 1580       /* Revised:             001016                                           
                                                                                                                             
                                                                                    */
                       5528 ; rs232cmd.c 1581       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5529 ; rs232cmd.c 1582       /* Function:    -                                                        
                                                                                                                             
                                                                                                                    */
                       5530 ; rs232cmd.c 1583       /* Remarks:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5531 ; rs232cmd.c 1584       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5532 ; rs232cmd.c 1585       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5533 ; rs232cmd.c 1586       /************************************************************************
                            **/
                       5534 ; rs232cmd.c 1587       void SystemPresetDate( void)
                       5535 ; rs232cmd.c 1588       {
                       5536         ALIGN   1
                       5538         PUBLIC  _SystemPresetDate
000ADA                 5539 _SystemPresetDate:
000ADA 0F30            5543         PUSH.W  R4, R5
000ADC 99720080        5545         SUB.W   R7,#080H
                       5554 ; rs232cmd.c 1589               int Reg;
                       5555 ; rs232cmd.c 1590               PresetObject Preset;
                       5556 ; rs232cmd.c 1591               UI year, month, day;
                       5557 ; rs232cmd.c 1592               char buffer[20];
                       5558 ; rs232cmd.c 1593       
                       5559 ; rs232cmd.c 1594               if ( CmdExecute && !SCPIError)
000AE0 964842rr        5561         MOV.B   ES,#SEG( _CmdExecute )
000AE4 9908rrrr        5562         MOV.W   R0,#SOF( _CmdExecute )
000AE8 8200            5563         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  92

ADDR   CODE            LINE SOURCELINE
                       5564         BEQ     _202
000AEA F202           +5564 ;       BNE     _LG_202
000AEC D50110         +5564 ;       JMP.L   _202
000AEC D5011000       +5564 ;       JMP.L   _202
000AF0                +5564 _LG_202:
000AF0 964842rr        5565         MOV.B   ES,#SEG( _SCPIError )
000AF4 9908rrrr        5566         MOV.W   R0,#SOF( _SCPIError )
000AF8 8A00            5567         MOV.W   R0,[R0]
                       5568         BNE     _202
000AFA F302           +5568 ;       BEQ     _LG_204
000AFC D50108         +5568 ;       JMP.L   _202
000AFC D5010800       +5568 ;       JMP.L   _202
000B00                +5568 _LG_204:
                       5569 ; rs232cmd.c 1595               {
                       5570 ; rs232cmd.c 1596                       if ( CmdRequest)
000B00 964842rr        5572         MOV.B   ES,#SEG( _CmdRequest )
000B04 9908rrrr        5573         MOV.W   R0,#SOF( _CmdRequest )
000B08 8200            5574         MOV.B   R0L,[R0]
                       5575         BEQ     _189
000B0A F202           +5575 ;       BNE     _LG_206
000B0C D50081         +5575 ;       JMP.L   _189
000B0C D5008100       +5575 ;       JMP.L   _189
000B10                +5575 _LG_206:
                       5576 ; rs232cmd.c 1597                       {
                       5577 ; rs232cmd.c 1598                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000B10 964842rr        5579         MOV.B   ES,#SEG( _ParCnt )
000B14 9908rrrr        5580         MOV.W   R0,#SOF( _ParCnt )
000B18 8200            5581         MOV.B   R0L,[R0]
000B1A 910401          5582         CMP.B   R0L,#01H
000B1D F215            5583         BNE     _185
000B1F 9918rrrr        5584         MOV.W   R1,#SEG( _Cmd )
000B23 9908rrrr        5585         MOV.W   R0,#SOF( _Cmd )
000B27 9168rr          5586         MOV.B   R3L,#SEG( __lc_bs )
000B2A 7177            5587         XOR.B   R3H,R3H
000B2C 8927            5588         MOV.W   R2,R7
000B2E 0F0C            5589         PUSH.W  R2, R3
000B30 9938rrrr        5591         MOV.W   R3,#SEG( _10 )
000B34 9928rrrr        5592         MOV.W   R2,#SOF( _10 )
000B38 0F0C            5593         PUSH.W  R2, R3
                       5595         CALL    _sscanf
000B3A C4rrrrrr       +5595 ;       FCALL   _sscanf
000B3E 99700008        5596         ADD.W   R7,#08H
000B42 99040001        5598         CMP.W   R0,#01H
000B46 F307            5599         BEQ     _186
000B46 F307            5599         BEQ     _186
000B48                 5600 _185:
                       5601 ; rs232cmd.c 1599                                       SCPIError = SyntaxErr;
000B48 964842rr        5603         MOV.B   ES,#SEG( _SCPIError )
000B4C 9908rrrr        5604         MOV.W   R0,#SOF( _SCPIError )
000B50 BA03            5605         MOV.W   [R0],#03H
                       5606         BR      _202
000B52 D500DD         +5606         JMP.L   _202
000B52 D500DD00       +5606         JMP.L   _202
000B56                 5607 _186:
                       5608 ; rs232cmd.c 1600                               else
                       5609 ; rs232cmd.c 1601                               {
                       5610 ; rs232cmd.c 1602                                       if (( Reg == 0) || ( Reg > NoOfPresets))
000B56 8A07            5612         MOV.W   R0,[R7]
000B58 F303            5613         BEQ     _187
000B5A 9A740004        5614         CMP.W   [R7],#04H
000B5E FD08            5615         BLE     _188
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  93

ADDR   CODE            LINE SOURCELINE
000B5E FD08            5615         BLE     _188
000B60                 5616 _187:
                       5617 ; rs232cmd.c 1603                                               SCPIError = DataOutOfRange;
000B60 964842rr        5619         MOV.B   ES,#SEG( _SCPIError )
000B64 9908rrrr        5620         MOV.W   R0,#SOF( _SCPIError )
000B68 9A080021        5621         MOV.W   [R0],#021H
                       5622         BR      _202
000B6C D500D0         +5622         JMP.L   _202
000B6C D500D000       +5622         JMP.L   _202
000B70                 5623 _188:
                       5624 ; rs232cmd.c 1604                                       else
                       5625 ; rs232cmd.c 1605                                       {
                       5626 ; rs232cmd.c 1606                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
000B70 9128rr          5628         MOV.B   R1L,#SEG( __lc_bs )
000B73 7133            5629         XOR.B   R1H,R1H
000B75 400702          5630         LEA     R0,R7+2
000B78 8A27            5631         MOV.W   R2,[R7]
000B7A D921            5632         ASL.W   R2,#01H
000B7C B930            5633         MOVS.W  R3,#00H
000B7E 964842rr        5634         MOV.B   ES,#SEG( _PresetPtr+-2 )
000B82 8D22rrrr        5635         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000B86 99380064        5636         MOV.W   R3,#064H
                       5637         CALL    _NV_Recall
000B8A C4rrrrrr       +5637 ;       FCALL   _NV_Recall
                       5638 ; rs232cmd.c 1607       
                       5639 ; rs232cmd.c 1608                                               day = Preset.Date % 100;
000B8E 8C171C          5641         MOV.W   R1,[R7+28]
000B91 8C071A          5642         MOV.W   R0,[R7+26]
000B94 B930            5643         MOV.W   R3,#00H
000B96 99280064        5644         MOV.W   R2,#064H
000B9A 8C1F1C          5645         MOV.W   [R7+28],R1
000B9D 8C0F1A          5646         MOV.W   [R7+26],R0
000BA0 C4rrrrrr        5647         FCALL   __UMODL
000BA4 8C0F6A          5648         MOV.W   [R7+106],R0
                       5649 ; rs232cmd.c 1609                                               month = ( Preset.Date / 100) % 10
                            0;
000BA7 8C171C          5651         MOV.W   R1,[R7+28]
000BAA 8C071A          5652         MOV.W   R0,[R7+26]
000BAD B930            5653         MOV.W   R3,#00H
000BAF 99280064        5654         MOV.W   R2,#064H
000BB3 8953            5655         MOV.W   R5,R3
000BB5 8942            5656         MOV.W   R4,R2
000BB7 C4rrrrrr        5657         FCALL   __UDIVL
000BBB 8935            5658         MOV.W   R3,R5
000BBD 8924            5659         MOV.W   R2,R4
000BBF C4rrrrrr        5660         FCALL   __UMODL
000BC3 8C0F68          5661         MOV.W   [R7+104],R0
                       5662 ; rs232cmd.c 1610                                               year = ( Preset.Date / 10000);
000BC6 B930            5664         MOV.W   R3,#00H
000BC8 99282710        5665         MOV.W   R2,#02710H
000BCC 8C171C          5666         MOV.W   R1,[R7+28]
000BCF 8C071A          5667         MOV.W   R0,[R7+26]
000BD2 C4rrrrrr        5668         FCALL   __UDIVL
000BD6 8C0F66          5669         MOV.W   [R7+102],R0
                       5670 ; rs232cmd.c 1611       
                       5671 ; rs232cmd.c 1612                                               sprintf( buffer, "%d,%d,%d\n", ye
                            ar, month, day);
000BD9 91A8rr          5673         MOV.B   R5L,#SEG( __lc_bs )
000BDC 71BB            5674         XOR.B   R5H,R5H
000BDE 40476C          5675         LEA     R4,R7+108
000BE1 8C076A          5676         MOV.W   R0,[R7+106]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  94

ADDR   CODE            LINE SOURCELINE
000BE4 0F01            5677         PUSH.W  R0
000BE6 8C076A          5679         MOV.W   R0,[R7+106]
000BE9 0F01            5680         PUSH.W  R0
000BEB 8C076A          5682         MOV.W   R0,[R7+106]
000BEE 0F01            5683         PUSH.W  R0
000BF0 9918rrrr        5685         MOV.W   R1,#SEG( _183 )
000BF4 9908rrrr        5686         MOV.W   R0,#SOF( _183 )
000BF8 0F03            5687         PUSH.W  R0, R1
000BFA 8915            5689         MOV.W   R1,R5
000BFC 8904            5690         MOV.W   R0,R4
                       5691         CALL    _sprintf
000BFE C4rrrrrr       +5691 ;       FCALL   _sprintf
000C02 9970000A        5692         ADD.W   R7,#0AH
                       5694 ; rs232cmd.c 1613       
                       5695 ; rs232cmd.c 1614                                               rs232puts( buffer);
000C06 8915            5697         MOV.W   R1,R5
000C08 8904            5698         MOV.W   R0,R4
                       5699         CALL    _rs232puts
000C0A C4rrrrrr       +5699 ;       FCALL   _rs232puts
                       5700 ; rs232cmd.c 1615                                       }
                       5701 ; rs232cmd.c 1616                               }
                       5702 ; rs232cmd.c 1617                       }
000C0E FE7F            5704         BR      _202
000C0E FE7F            5704         BR      _202
000C10                 5705 _189:
                       5706 ; rs232cmd.c 1618                       else
                       5707 ; rs232cmd.c 1619                       {
                       5708 ; rs232cmd.c 1620                               if (( ParCnt != 4) || (( sscanf( Cmd, "%d,%d,%d,%
                            d", &Reg, &year, &month, &day)) != 4))
000C10 964842rr        5710         MOV.B   ES,#SEG( _ParCnt )
000C14 9908rrrr        5711         MOV.W   R0,#SOF( _ParCnt )
000C18 8200            5712         MOV.B   R0L,[R0]
000C1A 910404          5713         CMP.B   R0L,#04H
000C1D F228            5714         BNE     _190
000C1F 9168rr          5715         MOV.B   R3L,#SEG( __lc_bs )
000C22 7177            5716         XOR.B   R3H,R3H
000C24 8927            5717         MOV.W   R2,R7
000C26 91A8rr          5718         MOV.B   R5L,#SEG( __lc_bs )
000C29 71BB            5719         XOR.B   R5H,R5H
000C2B 404766          5720         LEA     R4,R7+102
000C2E 9128rr          5721         MOV.B   R1L,#SEG( __lc_bs )
000C31 7133            5722         XOR.B   R1H,R1H
000C33 400768          5723         LEA     R0,R7+104
000C36 9128rr          5724         MOV.B   R1L,#SEG( __lc_bs )
000C39 7133            5725         XOR.B   R1H,R1H
000C3B 40076A          5726         LEA     R0,R7+106
000C3E 0F03            5727         PUSH.W  R0, R1
000C40 9128rr          5729         MOV.B   R1L,#SEG( __lc_bs )
000C43 7133            5730         XOR.B   R1H,R1H
000C45 40076C          5731         LEA     R0,R7+108
000C48 0F03            5732         PUSH.W  R0, R1
000C4A 0F30            5734         PUSH.W  R4, R5
000C4C 0F0C            5736         PUSH.W  R2, R3
000C4E 9938rrrr        5738         MOV.W   R3,#SEG( _184 )
000C52 9928rrrr        5739         MOV.W   R2,#SOF( _184 )
000C56 0F0C            5740         PUSH.W  R2, R3
000C58 9918rrrr        5742         MOV.W   R1,#SEG( _Cmd )
000C5C 9908rrrr        5743         MOV.W   R0,#SOF( _Cmd )
                       5744         CALL    _sscanf
000C60 C4rrrrrr       +5744 ;       FCALL   _sscanf
000C64 99700014        5745         ADD.W   R7,#014H
000C68 99040004        5747         CMP.W   R0,#04H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  95

ADDR   CODE            LINE SOURCELINE
000C6C F306            5748         BEQ     _191
000C6C F306            5748         BEQ     _191
000C6E                 5749 _190:
                       5750 ; rs232cmd.c 1621                                       SCPIError = SyntaxErr;
000C6E 964842rr        5752         MOV.B   ES,#SEG( _SCPIError )
000C72 9908rrrr        5753         MOV.W   R0,#SOF( _SCPIError )
000C76 BA03            5754         MOV.W   [R0],#03H
000C78 FE4A            5755         BR      _202
000C78 FE4A            5755         BR      _202
000C7A                 5756 _191:
                       5757 ; rs232cmd.c 1622                               else
                       5758 ; rs232cmd.c 1623                               {
                       5759 ; rs232cmd.c 1624                                       if ( ValidateDate( year, month, day) == F
                            AIL)
000C7A 8C0766          5761         MOV.W   R0,[R7+102]
000C7D 8C1768          5762         MOV.W   R1,[R7+104]
000C80 8C276A          5763         MOV.W   R2,[R7+106]
                       5764         CALL    _ValidateDate
000C83 C4rrrrrr       +5764 ;       FCALL   _ValidateDate
000C87 6900            5765         OR.W    R0,R0
000C89 F208            5766         BNE     _192
                       5767 ; rs232cmd.c 1625                                               SCPIError = ExecErr;
000C8B 964842rr        5769         MOV.B   ES,#SEG( _SCPIError )
000C8F 9908rrrr        5770         MOV.W   R0,#SOF( _SCPIError )
000C93 9A08001D        5771         MOV.W   [R0],#01DH
000C97 FE3B            5772         BR      _202
000C97 FE3B00          5772         BR      _202
000C9A                 5773 _192:
                       5774 ; rs232cmd.c 1626                                       else
                       5775 ; rs232cmd.c 1627                                       {
                       5776 ; rs232cmd.c 1628                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
000C9A 8A07            5778         MOV.W   R0,[R7]
000C9C F303            5779         BEQ     _193
000C9E 9A740004        5780         CMP.W   [R7],#04H
000CA2 FD07            5781         BLE     _194
000CA2 FD07            5781         BLE     _194
000CA4                 5782 _193:
                       5783 ; rs232cmd.c 1629                                                       SCPIError = DataOutOfRang
                            e;
000CA4 964842rr        5785         MOV.B   ES,#SEG( _SCPIError )
000CA8 9908rrrr        5786         MOV.W   R0,#SOF( _SCPIError )
000CAC 9A080021        5787         MOV.W   [R0],#021H
000CB0 FE2E            5788         BR      _202
000CB0 FE2E            5788         BR      _202
000CB2                 5789 _194:
                       5790 ; rs232cmd.c 1630                                               else
                       5791 ; rs232cmd.c 1631                                               {
                       5792 ; rs232cmd.c 1632                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
000CB2 91A8rr          5794         MOV.B   R5L,#SEG( __lc_bs )
000CB5 71BB            5795         XOR.B   R5H,R5H
000CB7 404702          5796         LEA     R4,R7+2
000CBA 8A07            5797         MOV.W   R0,[R7]
000CBC D901            5798         ASL.W   R0,#01H
000CBE 8920            5799         MOV.W   R2,R0
000CC0 B930            5800         MOVS.W  R3,#00H
000CC2 964842rr        5801         MOV.B   ES,#SEG( _PresetPtr+-2 )
000CC6 8D22rrrr        5802         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000CCA 99380064        5803         MOV.W   R3,#064H
000CCE 8915            5804         MOV.W   R1,R5
000CD0 8904            5805         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  96

ADDR   CODE            LINE SOURCELINE
                       5806         CALL    _NV_Recall
000CD2 C4rrrrrr       +5806 ;       FCALL   _NV_Recall
                       5807 ; rs232cmd.c 1633                                                       Preset.Date = day + 100*m
                            onth + 10000*year;
000CD6 8C0768          5809         MOV.W   R0,[R7+104]
000CD9 E9000064        5810         MULU.W  R0,#064H
000CDD 0C076A          5811         ADD.W   R0,[R7+106]
000CE0 8C2766          5812         MOV.W   R2,[R7+102]
000CE3 E9202710        5813         MULU.W  R2,#02710H
000CE7 0902            5814         ADD.W   R0,R2
000CE9 B910            5815         MOVS.W  R1,#00H
000CEB 8C1F1C          5816         MOV.W   [R7+28],R1
000CEE 8C0F1A          5817         MOV.W   [R7+26],R0
                       5818 ; rs232cmd.c 1634                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000CF1 8A07            5820         MOV.W   R0,[R7]
000CF3 D901            5821         ASL.W   R0,#01H
000CF5 8920            5822         MOV.W   R2,R0
000CF7 B930            5823         MOVS.W  R3,#00H
000CF9 964842rr        5824         MOV.B   ES,#SEG( _PresetPtr+-2 )
000CFD 8D22rrrr        5825         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000D01 8915            5826         MOV.W   R1,R5
000D03 8904            5827         MOV.W   R0,R4
000D05 99380064        5828         MOV.W   R3,#064H
                       5829         CALL    _NV_Store
000D09 C4rrrrrr       +5829 ;       FCALL   _NV_Store
                       5830 ; rs232cmd.c 1635                                               }
                       5831 ; rs232cmd.c 1636                                       }                               
                       5832 ; rs232cmd.c 1637                               }
                       5833 ; rs232cmd.c 1638                       }
                       5834 ; rs232cmd.c 1639               }
000D0E                 5836 _202:
                       5837 ; rs232cmd.c 1640       }
000D0E 99700080        5839         ADD.W   R7,#080H
000D12 2F30            5841         POP.W   R4, R5
000D14 D680            5843         RET
                       5845 ; rs232cmd.c 1641       
                       5846 ; rs232cmd.c 1642       /************************************************************************
                            **/
                       5847 ; rs232cmd.c 1643       /* SystemPresetDownload                                                  
                                                                                                                             
                                     RS232CMD.C */
                       5848 ; rs232cmd.c 1644       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5849 ; rs232cmd.c 1645       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                    */
                       5850 ; rs232cmd.c 1646       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5851 ; rs232cmd.c 1647       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5852 ; rs232cmd.c 1648       /* Function:    Download a setup to a specific preset withouth disturbing
                                            */
                       5853 ; rs232cmd.c 1649       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  97

ADDR   CODE            LINE SOURCELINE
                       5854 ; rs232cmd.c 1650       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       5855 ; rs232cmd.c 1651       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5856 ; rs232cmd.c 1652       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5857 ; rs232cmd.c 1653       /************************************************************************
                            **/
                       5858 ; rs232cmd.c 1654       void SystemPresetDownload( void)
                       5859 ; rs232cmd.c 1655       {
                       5860         ALIGN   1
                       5862         PUBLIC  _SystemPresetDownload
000D16                 5863 _SystemPresetDownload:
                       5867 ; rs232cmd.c 1656               ;
                       5868 ; rs232cmd.c 1657       }
000D16 D680            5870         RET
                       5872 ; rs232cmd.c 1658       
                       5873 ; rs232cmd.c 1659       /************************************************************************
                            **/
                       5874 ; rs232cmd.c 1660       /* SystemPresetUpload                                                    
                                                                                                                             
                                             RS232CMD.C */
                       5875 ; rs232cmd.c 1661       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5876 ; rs232cmd.c 1662       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                    */
                       5877 ; rs232cmd.c 1663       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5878 ; rs232cmd.c 1664       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5879 ; rs232cmd.c 1665       /* Function:    Upload a setup from a specific preset withouth disturbing
                                            */
                       5880 ; rs232cmd.c 1666       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                            */
                       5881 ; rs232cmd.c 1667       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       5882 ; rs232cmd.c 1668       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5883 ; rs232cmd.c 1669       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5884 ; rs232cmd.c 1670       /************************************************************************
                            **/
                       5885 ; rs232cmd.c 1671       void SystemPresetUpload( void)
                       5886 ; rs232cmd.c 1672       {
                       5887         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  98

ADDR   CODE            LINE SOURCELINE
                       5889         PUBLIC  _SystemPresetUpload
000D18                 5890 _SystemPresetUpload:
                       5894 ; rs232cmd.c 1673               ;
                       5895 ; rs232cmd.c 1674       }
000D18 D680            5897         RET
                       5899 ; rs232cmd.c 1675       
                       5900 ; rs232cmd.c 1676       /************************************************************************
                            **/
                       5901 ; rs232cmd.c 1677       /* StatusOperEvent                                                       
                                                                                                                             
                                                     RS232CMD.C */
                       5902 ; rs232cmd.c 1678       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5903 ; rs232cmd.c 1679       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       5904 ; rs232cmd.c 1680       /* Revised:             000402                                           
                                                                                                                             
                                                                                    */
                       5905 ; rs232cmd.c 1681       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5906 ; rs232cmd.c 1682       /* Function:    Set/read the status operation event register             
                                                                            */
                       5907 ; rs232cmd.c 1683       /* Remarks:             Reading the event register clears it             
                                                                                                            */
                       5908 ; rs232cmd.c 1684       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5909 ; rs232cmd.c 1685       /* Updates:             OperEventReg                                     
                                                                                                                             
                                                                                    */
                       5910 ; rs232cmd.c 1686       /************************************************************************
                            **/
                       5911 ; rs232cmd.c 1687       void StatusOperEvent( void)
                       5912 ; rs232cmd.c 1688       {
                       5913         ALIGN   1
                       5915         PUBLIC  _StatusOperEvent
000D1A                 5916 _StatusOperEvent:
                       5920 ; rs232cmd.c 1689               if ( CmdExecute && !SCPIError)
000D1A 964842rr        5922         MOV.B   ES,#SEG( _CmdExecute )
000D1E 9908rrrr        5923         MOV.W   R0,#SOF( _CmdExecute )
000D22 8200            5924         MOV.B   R0L,[R0]
000D24 F333            5925         BEQ     _214
000D26 964842rr        5926         MOV.B   ES,#SEG( _SCPIError )
000D2A 9908rrrr        5927         MOV.W   R0,#SOF( _SCPIError )
000D2E 8A00            5928         MOV.W   R0,[R0]
000D30 F22D            5929         BNE     _214
                       5930 ; rs232cmd.c 1690               {
                       5931 ; rs232cmd.c 1691                       if ( ParCnt)
000D32 964842rr        5933         MOV.B   ES,#SEG( _ParCnt )
000D36 9908rrrr        5934         MOV.W   R0,#SOF( _ParCnt )
000D3A 8200            5935         MOV.B   R0L,[R0]
000D3C F306            5936         BEQ     _209
                       5937 ; rs232cmd.c 1692                               SCPIError = ParNotAllowed;
000D3E 964842rr        5939         MOV.B   ES,#SEG( _SCPIError )
000D42 9908rrrr        5940         MOV.W   R0,#SOF( _SCPIError )
000D46 BA06            5941         MOV.W   [R0],#06H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  99

ADDR   CODE            LINE SOURCELINE
000D48 D680            5942         RET
000D48 D680            5942         RET
000D4A                 5943 _209:
                       5944 ; rs232cmd.c 1693                       else
                       5945 ; rs232cmd.c 1694                       {
                       5946 ; rs232cmd.c 1695                               if ( CmdRequest) {
000D4A 964842rr        5948         MOV.B   ES,#SEG( _CmdRequest )
000D4E 9908rrrr        5949         MOV.W   R0,#SOF( _CmdRequest )
000D52 8200            5950         MOV.B   R0L,[R0]
000D54 F316            5951         BEQ     _210
                       5952 ; rs232cmd.c 1696                                       rs232printf( 12, "%d\n", OperEventReg);
000D56 9908000C        5954         MOV.W   R0,#0CH
000D5A 964842rr        5955         MOV.B   ES,#SEG( _OperEventReg )
000D5E 9918rrrr        5956         MOV.W   R1,#SOF( _OperEventReg )
000D62 8A11            5957         MOV.W   R1,[R1]
000D64 0F02            5958         PUSH.W  R1
000D66 9938rrrr        5960         MOV.W   R3,#SEG( _9 )
000D6A 9928rrrr        5961         MOV.W   R2,#SOF( _9 )
000D6E 0F0C            5962         PUSH.W  R2, R3
                       5964         CALL    _rs232printf
000D70 C4rrrrrr       +5964 ;       FCALL   _rs232printf
000D74 A976            5965         ADDS.W  R7,#06H
                       5967 ; rs232cmd.c 1697       
                       5968 ; rs232cmd.c 1698                                       OperEventReg = 0;
000D76 964842rr        5970         MOV.B   ES,#SEG( _OperEventReg )
000D7A 9908rrrr        5971         MOV.W   R0,#SOF( _OperEventReg )
000D7E BA00            5972         MOV.W   [R0],#00H
                       5973 ; rs232cmd.c 1699                               }
000D80 D680            5975         RET
000D80 D680            5975         RET
000D82                 5976 _210:
                       5977 ; rs232cmd.c 1700                               else
                       5978 ; rs232cmd.c 1701                                       SCPIError = SyntaxErr;
000D82 964842rr        5980         MOV.B   ES,#SEG( _SCPIError )
000D86 9908rrrr        5981         MOV.W   R0,#SOF( _SCPIError )
000D8A BA03            5982         MOV.W   [R0],#03H
                       5983 ; rs232cmd.c 1702                       }
                       5984 ; rs232cmd.c 1703               }
000D8C                 5986 _214:
                       5987 ; rs232cmd.c 1704       }
000D8C D680            5989         RET
                       5991 ; rs232cmd.c 1705       
                       5992 ; rs232cmd.c 1706       /************************************************************************
                            **/
                       5993 ; rs232cmd.c 1707       /* StatusOperCondition                                                   
                                                                                                                             
                                     RS232CMD.C */
                       5994 ; rs232cmd.c 1708       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5995 ; rs232cmd.c 1709       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       5996 ; rs232cmd.c 1710       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5997 ; rs232cmd.c 1711       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 100

ADDR   CODE            LINE SOURCELINE
                       5998 ; rs232cmd.c 1712       /* Function:    Read the status questionable condition register          
                                                                    */
                       5999 ; rs232cmd.c 1713       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       6000 ; rs232cmd.c 1714       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6001 ; rs232cmd.c 1715       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6002 ; rs232cmd.c 1716       /************************************************************************
                            **/
                       6003 ; rs232cmd.c 1717       void StatusOperCondition( void)
                       6004 ; rs232cmd.c 1718       {
                       6005         ALIGN   1
                       6007         PUBLIC  _StatusOperCondition
000D8E                 6008 _StatusOperCondition:
                       6012 ; rs232cmd.c 1719               if ( CmdExecute && !SCPIError)
000D8E 964842rr        6014         MOV.B   ES,#SEG( _CmdExecute )
000D92 9908rrrr        6015         MOV.W   R0,#SOF( _CmdExecute )
000D96 8200            6016         MOV.B   R0L,[R0]
000D98 F32E            6017         BEQ     _220
000D9A 964842rr        6018         MOV.B   ES,#SEG( _SCPIError )
000D9E 9908rrrr        6019         MOV.W   R0,#SOF( _SCPIError )
000DA2 8A00            6020         MOV.W   R0,[R0]
000DA4 F228            6021         BNE     _220
                       6022 ; rs232cmd.c 1720               {
                       6023 ; rs232cmd.c 1721                       if ( ParCnt)
000DA6 964842rr        6025         MOV.B   ES,#SEG( _ParCnt )
000DAA 9908rrrr        6026         MOV.W   R0,#SOF( _ParCnt )
000DAE 8200            6027         MOV.B   R0L,[R0]
000DB0 F306            6028         BEQ     _215
                       6029 ; rs232cmd.c 1722                               SCPIError = ParNotAllowed;
000DB2 964842rr        6031         MOV.B   ES,#SEG( _SCPIError )
000DB6 9908rrrr        6032         MOV.W   R0,#SOF( _SCPIError )
000DBA BA06            6033         MOV.W   [R0],#06H
000DBC D680            6034         RET
000DBC D680            6034         RET
000DBE                 6035 _215:
                       6036 ; rs232cmd.c 1723                       else
                       6037 ; rs232cmd.c 1724                       {
                       6038 ; rs232cmd.c 1725                               if ( CmdRequest)
000DBE 964842rr        6040         MOV.B   ES,#SEG( _CmdRequest )
000DC2 9908rrrr        6041         MOV.W   R0,#SOF( _CmdRequest )
000DC6 8200            6042         MOV.B   R0L,[R0]
000DC8 F311            6043         BEQ     _216
                       6044 ; rs232cmd.c 1726                                       rs232printf( 12, "%d\n", OperConditionReg
                            );
000DCA 9908000C        6046         MOV.W   R0,#0CH
000DCE 964842rr        6047         MOV.B   ES,#SEG( _OperConditionReg )
000DD2 9918rrrr        6048         MOV.W   R1,#SOF( _OperConditionReg )
000DD6 8A11            6049         MOV.W   R1,[R1]
000DD8 0F02            6050         PUSH.W  R1
000DDA 9938rrrr        6052         MOV.W   R3,#SEG( _9 )
000DDE 9928rrrr        6053         MOV.W   R2,#SOF( _9 )
000DE2 0F0C            6054         PUSH.W  R2, R3
                       6056         CALL    _rs232printf
000DE4 C4rrrrrr       +6056 ;       FCALL   _rs232printf
000DE8 A976            6057         ADDS.W  R7,#06H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 101

ADDR   CODE            LINE SOURCELINE
000DEA D680            6059         RET
000DEA D680            6059         RET
000DEC                 6060 _216:
                       6061 ; rs232cmd.c 1727                               else
                       6062 ; rs232cmd.c 1728                                       SCPIError = SyntaxErr;
000DEC 964842rr        6064         MOV.B   ES,#SEG( _SCPIError )
000DF0 9908rrrr        6065         MOV.W   R0,#SOF( _SCPIError )
000DF4 BA03            6066         MOV.W   [R0],#03H
                       6067 ; rs232cmd.c 1729                       }
                       6068 ; rs232cmd.c 1730               }
000DF6                 6070 _220:
                       6071 ; rs232cmd.c 1731       }
000DF6 D680            6073         RET
                       6075 ; rs232cmd.c 1732       
                       6076 ; rs232cmd.c 1733       /************************************************************************
                            **/
                       6077 ; rs232cmd.c 1734       /* StatusOperEnable                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       6078 ; rs232cmd.c 1735       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6079 ; rs232cmd.c 1736       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6080 ; rs232cmd.c 1737       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6081 ; rs232cmd.c 1738       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6082 ; rs232cmd.c 1739       /* Function:    Set/read the status operaion enable register             
                                                                            */
                       6083 ; rs232cmd.c 1740       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6084 ; rs232cmd.c 1741       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6085 ; rs232cmd.c 1742       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6086 ; rs232cmd.c 1743       /************************************************************************
                            **/
                       6087 ; rs232cmd.c 1744       void StatusOperEnable( void)
                       6088 ; rs232cmd.c 1745       {
                       6089         ALIGN   1
                       6091         PUBLIC  _StatusOperEnable
000DF8                 6092 _StatusOperEnable:
000DF8 A97C            6096         ADDS.W  R7,#0CH
                       6099 ; rs232cmd.c 1746               long    Reg;
                       6100 ; rs232cmd.c 1747       
                       6101 ; rs232cmd.c 1748               if ( CmdExecute && !SCPIError)
000DFA 964842rr        6103         MOV.B   ES,#SEG( _CmdExecute )
000DFE 9908rrrr        6104         MOV.W   R0,#SOF( _CmdExecute )
000E02 8200            6105         MOV.B   R0L,[R0]
000E04 F364            6106         BEQ     _232
000E06 964842rr        6107         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 102

ADDR   CODE            LINE SOURCELINE
000E0A 9908rrrr        6108         MOV.W   R0,#SOF( _SCPIError )
000E0E 8A00            6109         MOV.W   R0,[R0]
000E10 F25E            6110         BNE     _232
                       6111 ; rs232cmd.c 1749               {
                       6112 ; rs232cmd.c 1750                       if ( CmdRequest)
000E12 964842rr        6114         MOV.B   ES,#SEG( _CmdRequest )
000E16 9908rrrr        6115         MOV.W   R0,#SOF( _CmdRequest )
000E1A 8200            6116         MOV.B   R0L,[R0]
000E1C F31D            6117         BEQ     _223
                       6118 ; rs232cmd.c 1751                       {
                       6119 ; rs232cmd.c 1752                               if ( ParCnt)
000E1E 964842rr        6121         MOV.B   ES,#SEG( _ParCnt )
000E22 9908rrrr        6122         MOV.W   R0,#SOF( _ParCnt )
000E26 8200            6123         MOV.B   R0L,[R0]
000E28 F306            6124         BEQ     _222
                       6125 ; rs232cmd.c 1753                                       SCPIError = ParNotAllowed;
000E2A 964842rr        6127         MOV.B   ES,#SEG( _SCPIError )
000E2E 9908rrrr        6128         MOV.W   R0,#SOF( _SCPIError )
000E32 BA06            6129         MOV.W   [R0],#06H
000E34 FE4C            6130         BR      _232
000E34 FE4C            6130         BR      _232
000E36                 6131 _222:
                       6132 ; rs232cmd.c 1754                               else
                       6133 ; rs232cmd.c 1755                                       rs232printf( 12, "%d\n", OperEnableReg);
000E36 9908000C        6135         MOV.W   R0,#0CH
000E3A 964842rr        6136         MOV.B   ES,#SEG( _OperEnableReg )
000E3E 9918rrrr        6137         MOV.W   R1,#SOF( _OperEnableReg )
000E42 8A11            6138         MOV.W   R1,[R1]
000E44 0F02            6139         PUSH.W  R1
000E46 9938rrrr        6141         MOV.W   R3,#SEG( _9 )
000E4A 9928rrrr        6142         MOV.W   R2,#SOF( _9 )
000E4E 0F0C            6143         PUSH.W  R2, R3
                       6145         CALL    _rs232printf
000E50 C4rrrrrr       +6145 ;       FCALL   _rs232printf
000E54 A976            6146         ADDS.W  R7,#06H
                       6148 ; rs232cmd.c 1756                       }
000E56 FE3B            6150         BR      _232
000E56 FE3B            6150         BR      _232
000E58                 6151 _223:
                       6152 ; rs232cmd.c 1757                       else
                       6153 ; rs232cmd.c 1758                       {
                       6154 ; rs232cmd.c 1759                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
000E58 964842rr        6156         MOV.B   ES,#SEG( _ParCnt )
000E5C 9908rrrr        6157         MOV.W   R0,#SOF( _ParCnt )
000E60 8200            6158         MOV.B   R0L,[R0]
000E62 910401          6159         CMP.B   R0L,#01H
000E65 F215            6160         BNE     _224
000E67 9918rrrr        6161         MOV.W   R1,#SEG( _Cmd )
000E6B 9908rrrr        6162         MOV.W   R0,#SOF( _Cmd )
000E6F 9168rr          6163         MOV.B   R3L,#SEG( __lc_bs )
000E72 7177            6164         XOR.B   R3H,R3H
000E74 8927            6165         MOV.W   R2,R7
000E76 0F0C            6166         PUSH.W  R2, R3
000E78 9938rrrr        6168         MOV.W   R3,#SEG( _221 )
000E7C 9928rrrr        6169         MOV.W   R2,#SOF( _221 )
000E80 0F0C            6170         PUSH.W  R2, R3
                       6172         CALL    _sscanf
000E82 C4rrrrrr       +6172 ;       FCALL   _sscanf
000E86 99700008        6173         ADD.W   R7,#08H
000E8A 99040001        6175         CMP.W   R0,#01H
000E8E F306            6176         BEQ     _225
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 103

ADDR   CODE            LINE SOURCELINE
000E8E F306            6176         BEQ     _225
000E90                 6177 _224:
                       6178 ; rs232cmd.c 1760                               {
                       6179 ; rs232cmd.c 1761                                       SCPIError = SyntaxErr;  
000E90 964842rr        6181         MOV.B   ES,#SEG( _SCPIError )
000E94 9908rrrr        6182         MOV.W   R0,#SOF( _SCPIError )
000E98 BA03            6183         MOV.W   [R0],#03H
                       6184 ; rs232cmd.c 1762                                       return;
000E9A FE19            6186         BR      _232
                       6187 ; rs232cmd.c 1763                               }
000E9C                 6189 _225:
                       6190 ; rs232cmd.c 1764       
                       6191 ; rs232cmd.c 1765                               if ( Reg > 65535)
000E9C 9C74020000      6193         CMP.W   [R7+2],#00H
000EA1 FB0C            6194         BLT     _226
000EA3 FC04            6195         BGT     _235
000EA5 9A74FFFF        6196         CMP.W   [R7],#0FFFFH
000EA9 F908            6197         BL      _226
000EA9 F90800          6197         BL      _226
000EAC                 6198 _235:
                       6199 ; rs232cmd.c 1766                               {
                       6200 ; rs232cmd.c 1767                                       SCPIError = DataOutOfRange;
000EAC 964842rr        6202         MOV.B   ES,#SEG( _SCPIError )
000EB0 9908rrrr        6203         MOV.W   R0,#SOF( _SCPIError )
000EB4 9A080021        6204         MOV.W   [R0],#021H
                       6205 ; rs232cmd.c 1768                                       return;
000EB8 FE0A            6207         BR      _232
                       6208 ; rs232cmd.c 1769                               }
000EBA                 6210 _226:
                       6211 ; rs232cmd.c 1770       
                       6212 ; rs232cmd.c 1771                               OperEnableReg = Reg & 0xEFFF;
000EBA 8C1702          6214         MOV.W   R1,[R7+2]
000EBD 8A07            6215         MOV.W   R0,[R7]
000EBF 9905EFFF        6216         AND.W   R0,#0EFFFH
000EC3 964842rr        6217         MOV.B   ES,#SEG( _OperEnableReg )
000EC7 9918rrrr        6218         MOV.W   R1,#SOF( _OperEnableReg )
000ECB 8A09            6219         MOV.W   [R1],R0
                       6220 ; rs232cmd.c 1772                       }
                       6221 ; rs232cmd.c 1773               }
                       6222 ; rs232cmd.c 1774       }
000ECE                 6224 _232:
000ECE A974            6225         ADDS.W  R7,#04H
000ED0 D680            6227         RET
                       6229 ; rs232cmd.c 1775       
                       6230 ; rs232cmd.c 1776       /************************************************************************
                            ***/
                       6231 ; rs232cmd.c 1777       /* StatusQuestEvent                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       6232 ; rs232cmd.c 1778       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6233 ; rs232cmd.c 1779       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6234 ; rs232cmd.c 1780       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6235 ; rs232cmd.c 1781       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 104

ADDR   CODE            LINE SOURCELINE
                       6236 ; rs232cmd.c 1782       /* Function:    Set/read the status questionablen event register         
                                                                    */
                       6237 ; rs232cmd.c 1783       /* Remarks:             Reading the event register clears it             
                                                                                                            */
                       6238 ; rs232cmd.c 1784       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6239 ; rs232cmd.c 1785       /* Updates:             QuestEventReg                                    
                                                                                                                             
                                                                                    */
                       6240 ; rs232cmd.c 1786       /************************************************************************
                            ***/
                       6241 ; rs232cmd.c 1787       void StatusQuestEvent( void)
                       6242 ; rs232cmd.c 1788       {
                       6243         ALIGN   1
                       6245         PUBLIC  _StatusQuestEvent
000ED2                 6246 _StatusQuestEvent:
                       6250 ; rs232cmd.c 1789               if ( CmdExecute && !SCPIError)
000ED2 964842rr        6252         MOV.B   ES,#SEG( _CmdExecute )
000ED6 9908rrrr        6253         MOV.W   R0,#SOF( _CmdExecute )
000EDA 8200            6254         MOV.B   R0L,[R0]
000EDC F333            6255         BEQ     _241
000EDE 964842rr        6256         MOV.B   ES,#SEG( _SCPIError )
000EE2 9908rrrr        6257         MOV.W   R0,#SOF( _SCPIError )
000EE6 8A00            6258         MOV.W   R0,[R0]
000EE8 F22D            6259         BNE     _241
                       6260 ; rs232cmd.c 1790               {
                       6261 ; rs232cmd.c 1791                       if ( ParCnt)
000EEA 964842rr        6263         MOV.B   ES,#SEG( _ParCnt )
000EEE 9908rrrr        6264         MOV.W   R0,#SOF( _ParCnt )
000EF2 8200            6265         MOV.B   R0L,[R0]
000EF4 F306            6266         BEQ     _236
                       6267 ; rs232cmd.c 1792                               SCPIError = ParNotAllowed;
000EF6 964842rr        6269         MOV.B   ES,#SEG( _SCPIError )
000EFA 9908rrrr        6270         MOV.W   R0,#SOF( _SCPIError )
000EFE BA06            6271         MOV.W   [R0],#06H
000F00 D680            6272         RET
000F00 D680            6272         RET
000F02                 6273 _236:
                       6274 ; rs232cmd.c 1793                       else
                       6275 ; rs232cmd.c 1794                       {
                       6276 ; rs232cmd.c 1795                               if ( CmdRequest)
000F02 964842rr        6278         MOV.B   ES,#SEG( _CmdRequest )
000F06 9908rrrr        6279         MOV.W   R0,#SOF( _CmdRequest )
000F0A 8200            6280         MOV.B   R0L,[R0]
000F0C F316            6281         BEQ     _237
                       6282 ; rs232cmd.c 1796                               {
                       6283 ; rs232cmd.c 1797                                       rs232printf( 12, "%d\n", QuestEventReg);
000F0E 9908000C        6285         MOV.W   R0,#0CH
000F12 964842rr        6286         MOV.B   ES,#SEG( _QuestEventReg )
000F16 9918rrrr        6287         MOV.W   R1,#SOF( _QuestEventReg )
000F1A 8A11            6288         MOV.W   R1,[R1]
000F1C 0F02            6289         PUSH.W  R1
000F1E 9938rrrr        6291         MOV.W   R3,#SEG( _9 )
000F22 9928rrrr        6292         MOV.W   R2,#SOF( _9 )
000F26 0F0C            6293         PUSH.W  R2, R3
                       6295         CALL    _rs232printf
000F28 C4rrrrrr       +6295 ;       FCALL   _rs232printf
000F2C A976            6296         ADDS.W  R7,#06H
                       6298 ; rs232cmd.c 1798       
                       6299 ; rs232cmd.c 1799                                       QuestEventReg = 0;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 105

ADDR   CODE            LINE SOURCELINE
000F2E 964842rr        6301         MOV.B   ES,#SEG( _QuestEventReg )
000F32 9908rrrr        6302         MOV.W   R0,#SOF( _QuestEventReg )
000F36 BA00            6303         MOV.W   [R0],#00H
                       6304 ; rs232cmd.c 1800                               }
000F38 D680            6306         RET
000F38 D680            6306         RET
000F3A                 6307 _237:
                       6308 ; rs232cmd.c 1801                               else
                       6309 ; rs232cmd.c 1802                                       SCPIError = SyntaxErr;
000F3A 964842rr        6311         MOV.B   ES,#SEG( _SCPIError )
000F3E 9908rrrr        6312         MOV.W   R0,#SOF( _SCPIError )
000F42 BA03            6313         MOV.W   [R0],#03H
                       6314 ; rs232cmd.c 1803                       }
                       6315 ; rs232cmd.c 1804               }
000F44                 6317 _241:
                       6318 ; rs232cmd.c 1805       }
000F44 D680            6320         RET
                       6322 ; rs232cmd.c 1806       
                       6323 ; rs232cmd.c 1807       /************************************************************************
                            **/
                       6324 ; rs232cmd.c 1808       /* StatusQuestCondition                                                  
                                                                                                                             
                                     RS232CMD.C */
                       6325 ; rs232cmd.c 1809       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6326 ; rs232cmd.c 1810       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6327 ; rs232cmd.c 1811       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6328 ; rs232cmd.c 1812       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6329 ; rs232cmd.c 1813       /* Function:    Read the status operation condition register             
                                                                            */
                       6330 ; rs232cmd.c 1814       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       6331 ; rs232cmd.c 1815       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6332 ; rs232cmd.c 1816       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6333 ; rs232cmd.c 1817       /************************************************************************
                            **/
                       6334 ; rs232cmd.c 1818       void StatusQuestCondition( void)
                       6335 ; rs232cmd.c 1819       {
                       6336         ALIGN   1
                       6338         PUBLIC  _StatusQuestCondition
000F46                 6339 _StatusQuestCondition:
                       6343 ; rs232cmd.c 1820               if ( CmdExecute && !SCPIError)
000F46 964842rr        6345         MOV.B   ES,#SEG( _CmdExecute )
000F4A 9908rrrr        6346         MOV.W   R0,#SOF( _CmdExecute )
000F4E 8200            6347         MOV.B   R0L,[R0]
000F50 F32E            6348         BEQ     _247
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 106

ADDR   CODE            LINE SOURCELINE
000F52 964842rr        6349         MOV.B   ES,#SEG( _SCPIError )
000F56 9908rrrr        6350         MOV.W   R0,#SOF( _SCPIError )
000F5A 8A00            6351         MOV.W   R0,[R0]
000F5C F228            6352         BNE     _247
                       6353 ; rs232cmd.c 1821               {
                       6354 ; rs232cmd.c 1822                       if ( ParCnt)
000F5E 964842rr        6356         MOV.B   ES,#SEG( _ParCnt )
000F62 9908rrrr        6357         MOV.W   R0,#SOF( _ParCnt )
000F66 8200            6358         MOV.B   R0L,[R0]
000F68 F306            6359         BEQ     _242
                       6360 ; rs232cmd.c 1823                               SCPIError = ParNotAllowed;
000F6A 964842rr        6362         MOV.B   ES,#SEG( _SCPIError )
000F6E 9908rrrr        6363         MOV.W   R0,#SOF( _SCPIError )
000F72 BA06            6364         MOV.W   [R0],#06H
000F74 D680            6365         RET
000F74 D680            6365         RET
000F76                 6366 _242:
                       6367 ; rs232cmd.c 1824                       else
                       6368 ; rs232cmd.c 1825                       {
                       6369 ; rs232cmd.c 1826                               if ( CmdRequest)
000F76 964842rr        6371         MOV.B   ES,#SEG( _CmdRequest )
000F7A 9908rrrr        6372         MOV.W   R0,#SOF( _CmdRequest )
000F7E 8200            6373         MOV.B   R0L,[R0]
000F80 F311            6374         BEQ     _243
                       6375 ; rs232cmd.c 1827                               rs232printf( 12, "%d\n", QuestConditionReg);
000F82 9908000C        6377         MOV.W   R0,#0CH
000F86 964842rr        6378         MOV.B   ES,#SEG( _QuestConditionReg )
000F8A 9918rrrr        6379         MOV.W   R1,#SOF( _QuestConditionReg )
000F8E 8A11            6380         MOV.W   R1,[R1]
000F90 0F02            6381         PUSH.W  R1
000F92 9938rrrr        6383         MOV.W   R3,#SEG( _9 )
000F96 9928rrrr        6384         MOV.W   R2,#SOF( _9 )
000F9A 0F0C            6385         PUSH.W  R2, R3
                       6387         CALL    _rs232printf
000F9C C4rrrrrr       +6387 ;       FCALL   _rs232printf
000FA0 A976            6388         ADDS.W  R7,#06H
000FA2 D680            6390         RET
000FA2 D680            6390         RET
000FA4                 6391 _243:
                       6392 ; rs232cmd.c 1828                               else
                       6393 ; rs232cmd.c 1829                                       SCPIError = SyntaxErr;
000FA4 964842rr        6395         MOV.B   ES,#SEG( _SCPIError )
000FA8 9908rrrr        6396         MOV.W   R0,#SOF( _SCPIError )
000FAC BA03            6397         MOV.W   [R0],#03H
                       6398 ; rs232cmd.c 1830                       }
                       6399 ; rs232cmd.c 1831               }
000FAE                 6401 _247:
                       6402 ; rs232cmd.c 1832       }
000FAE D680            6404         RET
                       6406 ; rs232cmd.c 1833       
                       6407 ; rs232cmd.c 1834       /************************************************************************
                            **/
                       6408 ; rs232cmd.c 1835       /* StatusQuestEnable                                                     
                                                                                                                             
                                             RS232CMD.C */
                       6409 ; rs232cmd.c 1836       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6410 ; rs232cmd.c 1837       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 107

ADDR   CODE            LINE SOURCELINE
                       6411 ; rs232cmd.c 1838       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6412 ; rs232cmd.c 1839       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6413 ; rs232cmd.c 1840       /* Function:    Set/read the status questionable enable register         
                                                                    */
                       6414 ; rs232cmd.c 1841       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6415 ; rs232cmd.c 1842       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6416 ; rs232cmd.c 1843       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6417 ; rs232cmd.c 1844       /************************************************************************
                            **/
                       6418 ; rs232cmd.c 1845       void StatusQuestEnable( void)
                       6419 ; rs232cmd.c 1846       {
                       6420         ALIGN   1
                       6422         PUBLIC  _StatusQuestEnable
000FB0                 6423 _StatusQuestEnable:
000FB0 A97C            6427         ADDS.W  R7,#0CH
                       6430 ; rs232cmd.c 1847               long    Reg;
                       6431 ; rs232cmd.c 1848       
                       6432 ; rs232cmd.c 1849               if ( CmdExecute && !SCPIError)
000FB2 964842rr        6434         MOV.B   ES,#SEG( _CmdExecute )
000FB6 9908rrrr        6435         MOV.W   R0,#SOF( _CmdExecute )
000FBA 8200            6436         MOV.B   R0L,[R0]
000FBC F364            6437         BEQ     _258
000FBE 964842rr        6438         MOV.B   ES,#SEG( _SCPIError )
000FC2 9908rrrr        6439         MOV.W   R0,#SOF( _SCPIError )
000FC6 8A00            6440         MOV.W   R0,[R0]
000FC8 F25E            6441         BNE     _258
                       6442 ; rs232cmd.c 1850               {
                       6443 ; rs232cmd.c 1851                       if ( CmdRequest)
000FCA 964842rr        6445         MOV.B   ES,#SEG( _CmdRequest )
000FCE 9908rrrr        6446         MOV.W   R0,#SOF( _CmdRequest )
000FD2 8200            6447         MOV.B   R0L,[R0]
000FD4 F31D            6448         BEQ     _249
                       6449 ; rs232cmd.c 1852                       {
                       6450 ; rs232cmd.c 1853                               if ( ParCnt)
000FD6 964842rr        6452         MOV.B   ES,#SEG( _ParCnt )
000FDA 9908rrrr        6453         MOV.W   R0,#SOF( _ParCnt )
000FDE 8200            6454         MOV.B   R0L,[R0]
000FE0 F306            6455         BEQ     _248
                       6456 ; rs232cmd.c 1854                                       SCPIError = ParNotAllowed;
000FE2 964842rr        6458         MOV.B   ES,#SEG( _SCPIError )
000FE6 9908rrrr        6459         MOV.W   R0,#SOF( _SCPIError )
000FEA BA06            6460         MOV.W   [R0],#06H
000FEC FE4C            6461         BR      _258
000FEC FE4C            6461         BR      _258
000FEE                 6462 _248:
                       6463 ; rs232cmd.c 1855                               else
                       6464 ; rs232cmd.c 1856                                       rs232printf( 12, "%d\n", QuestEnableReg);
                            
000FEE 9908000C        6466         MOV.W   R0,#0CH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 108

ADDR   CODE            LINE SOURCELINE
000FF2 964842rr        6467         MOV.B   ES,#SEG( _QuestEnableReg )
000FF6 9918rrrr        6468         MOV.W   R1,#SOF( _QuestEnableReg )
000FFA 8A11            6469         MOV.W   R1,[R1]
000FFC 0F02            6470         PUSH.W  R1
000FFE 9938rrrr        6472         MOV.W   R3,#SEG( _9 )
001002 9928rrrr        6473         MOV.W   R2,#SOF( _9 )
001006 0F0C            6474         PUSH.W  R2, R3
                       6476         CALL    _rs232printf
001008 C4rrrrrr       +6476 ;       FCALL   _rs232printf
00100C A976            6477         ADDS.W  R7,#06H
                       6479 ; rs232cmd.c 1857                       }
00100E FE3B            6481         BR      _258
00100E FE3B            6481         BR      _258
001010                 6482 _249:
                       6483 ; rs232cmd.c 1858                       else
                       6484 ; rs232cmd.c 1859                       {
                       6485 ; rs232cmd.c 1860                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
001010 964842rr        6487         MOV.B   ES,#SEG( _ParCnt )
001014 9908rrrr        6488         MOV.W   R0,#SOF( _ParCnt )
001018 8200            6489         MOV.B   R0L,[R0]
00101A 910401          6490         CMP.B   R0L,#01H
00101D F215            6491         BNE     _250
00101F 9918rrrr        6492         MOV.W   R1,#SEG( _Cmd )
001023 9908rrrr        6493         MOV.W   R0,#SOF( _Cmd )
001027 9168rr          6494         MOV.B   R3L,#SEG( __lc_bs )
00102A 7177            6495         XOR.B   R3H,R3H
00102C 8927            6496         MOV.W   R2,R7
00102E 0F0C            6497         PUSH.W  R2, R3
001030 9938rrrr        6499         MOV.W   R3,#SEG( _221 )
001034 9928rrrr        6500         MOV.W   R2,#SOF( _221 )
001038 0F0C            6501         PUSH.W  R2, R3
                       6503         CALL    _sscanf
00103A C4rrrrrr       +6503 ;       FCALL   _sscanf
00103E 99700008        6504         ADD.W   R7,#08H
001042 99040001        6506         CMP.W   R0,#01H
001046 F306            6507         BEQ     _251
001046 F306            6507         BEQ     _251
001048                 6508 _250:
                       6509 ; rs232cmd.c 1861                               {
                       6510 ; rs232cmd.c 1862                                       SCPIError = SyntaxErr;  
001048 964842rr        6512         MOV.B   ES,#SEG( _SCPIError )
00104C 9908rrrr        6513         MOV.W   R0,#SOF( _SCPIError )
001050 BA03            6514         MOV.W   [R0],#03H
                       6515 ; rs232cmd.c 1863                                       return;
001052 FE19            6517         BR      _258
                       6518 ; rs232cmd.c 1864                               }
001054                 6520 _251:
                       6521 ; rs232cmd.c 1865       
                       6522 ; rs232cmd.c 1866                               if ( Reg > 65535)
001054 9C74020000      6524         CMP.W   [R7+2],#00H
001059 FB0C            6525         BLT     _252
00105B FC04            6526         BGT     _261
00105D 9A74FFFF        6527         CMP.W   [R7],#0FFFFH
001061 F908            6528         BL      _252
001061 F90800          6528         BL      _252
001064                 6529 _261:
                       6530 ; rs232cmd.c 1867                               {
                       6531 ; rs232cmd.c 1868                                       SCPIError = DataOutOfRange;
001064 964842rr        6533         MOV.B   ES,#SEG( _SCPIError )
001068 9908rrrr        6534         MOV.W   R0,#SOF( _SCPIError )
00106C 9A080021        6535         MOV.W   [R0],#021H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 109

ADDR   CODE            LINE SOURCELINE
                       6536 ; rs232cmd.c 1869                                       return;
001070 FE0A            6538         BR      _258
                       6539 ; rs232cmd.c 1870                               }
001072                 6541 _252:
                       6542 ; rs232cmd.c 1871       
                       6543 ; rs232cmd.c 1872                               QuestEnableReg = Reg & 0xEFFF;
001072 8C1702          6545         MOV.W   R1,[R7+2]
001075 8A07            6546         MOV.W   R0,[R7]
001077 9905EFFF        6547         AND.W   R0,#0EFFFH
00107B 964842rr        6548         MOV.B   ES,#SEG( _QuestEnableReg )
00107F 9918rrrr        6549         MOV.W   R1,#SOF( _QuestEnableReg )
001083 8A09            6550         MOV.W   [R1],R0
                       6551 ; rs232cmd.c 1873                       }
                       6552 ; rs232cmd.c 1874               }
                       6553 ; rs232cmd.c 1875       }
001086                 6555 _258:
001086 A974            6556         ADDS.W  R7,#04H
001088 D680            6558         RET
                       6560 ; rs232cmd.c 1876       
                       6561 ; rs232cmd.c 1877       /************************************************************************
                            **/
                       6562 ; rs232cmd.c 1878       /* StatusPreset                                                          
                                                                                                                             
                                                             RS232CMD.C */
                       6563 ; rs232cmd.c 1879       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6564 ; rs232cmd.c 1880       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       6565 ; rs232cmd.c 1881       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                       6566 ; rs232cmd.c 1882       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6567 ; rs232cmd.c 1883       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       6568 ; rs232cmd.c 1884       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6569 ; rs232cmd.c 1885       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6570 ; rs232cmd.c 1886       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6571 ; rs232cmd.c 1887       /************************************************************************
                            **/
                       6572 ; rs232cmd.c 1888       void StatusPreset( void)
                       6573 ; rs232cmd.c 1889       {
                       6574         ALIGN   1
                       6576         PUBLIC  _StatusPreset
00108A                 6577 _StatusPreset:
                       6581 ; rs232cmd.c 1890               if ( CmdExecute && !SCPIError)
00108A 964842rr        6583         MOV.B   ES,#SEG( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 110

ADDR   CODE            LINE SOURCELINE
00108E 9908rrrr        6584         MOV.W   R0,#SOF( _CmdExecute )
001092 8200            6585         MOV.B   R0L,[R0]
001094 F333            6586         BEQ     _270
001096 964842rr        6587         MOV.B   ES,#SEG( _SCPIError )
00109A 9908rrrr        6588         MOV.W   R0,#SOF( _SCPIError )
00109E 8A00            6589         MOV.W   R0,[R0]
0010A0 F22D            6590         BNE     _270
                       6591 ; rs232cmd.c 1891               {
                       6592 ; rs232cmd.c 1892                       if ( CmdRequest)
0010A2 964842rr        6594         MOV.B   ES,#SEG( _CmdRequest )
0010A6 9908rrrr        6595         MOV.W   R0,#SOF( _CmdRequest )
0010AA 8200            6596         MOV.B   R0L,[R0]
0010AC F322            6597         BEQ     _266
                       6598 ; rs232cmd.c 1893                       {
                       6599 ; rs232cmd.c 1894                               if ( ParCnt)
0010AE 964842rr        6601         MOV.B   ES,#SEG( _ParCnt )
0010B2 9908rrrr        6602         MOV.W   R0,#SOF( _ParCnt )
0010B6 8200            6603         MOV.B   R0L,[R0]
0010B8 F306            6604         BEQ     _263
                       6605 ; rs232cmd.c 1895                                       SCPIError = SyntaxErr;
0010BA 964842rr        6607         MOV.B   ES,#SEG( _SCPIError )
0010BE 9908rrrr        6608         MOV.W   R0,#SOF( _SCPIError )
0010C2 BA03            6609         MOV.W   [R0],#03H
0010C4 D680            6610         RET
0010C4 D680            6610         RET
0010C6                 6611 _263:
                       6612 ; rs232cmd.c 1896                               else
                       6613 ; rs232cmd.c 1897                               {
                       6614 ; rs232cmd.c 1898                                       if ( Settings.ActivePreset)
0010C6 964842rr        6616         MOV.B   ES,#SEG( _Settings )
0010CA 9908rrrr        6617         MOV.W   R0,#SOF( _Settings )
0010CE 8A00            6618         MOV.W   R0,[R0]
0010D0 F305            6619         BEQ     _264
                       6620 ; rs232cmd.c 1899                                               rs232putchar( '0' + Settings.Acti
                            vePreset);
0010D2 910030          6622         ADD.B   R0L,#030H
                       6623         CALL    _rs232putchar
0010D5 C4rrrrrr       +6623 ;       FCALL   _rs232putchar
0010D9 FE07            6624         BR      _265
0010D9 FE0700          6624         BR      _265
0010DC                 6625 _264:
                       6626 ; rs232cmd.c 1900                                       else
                       6627 ; rs232cmd.c 1901                                               rs232puts( "OFF");
0010DC 9918rrrr        6629         MOV.W   R1,#SEG( _262 )
0010E0 9908rrrr        6630         MOV.W   R0,#SOF( _262 )
                       6631         CALL    _rs232puts
0010E4 C4rrrrrr       +6631 ;       FCALL   _rs232puts
0010E4 C4rrrrrr       +6631 ;       FCALL   _rs232puts
0010E8                 6632 _265:
                       6633 ; rs232cmd.c 1902       
                       6634 ; rs232cmd.c 1903                                       rs232putchar( '\n');
0010E8 91080A          6636         MOV.B   R0L,#0AH
                       6637         CALL    _rs232putchar
0010EB C4rrrrrr       +6637 ;       FCALL   _rs232putchar
                       6638 ; rs232cmd.c 1904                               }
                       6639 ; rs232cmd.c 1905                       }
0010EF D680            6641         RET
0010EF D68000          6641         RET
0010F2                 6642 _266:
                       6643 ; rs232cmd.c 1906                       else
                       6644 ; rs232cmd.c 1907                               SCPIError = SyntaxErr;
0010F2 964842rr        6646         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 111

ADDR   CODE            LINE SOURCELINE
0010F6 9908rrrr        6647         MOV.W   R0,#SOF( _SCPIError )
0010FA BA03            6648         MOV.W   [R0],#03H
                       6649 ; rs232cmd.c 1908               }
0010FC                 6651 _270:
                       6652 ; rs232cmd.c 1909       }
0010FC D680            6654         RET
                       6656 ; rs232cmd.c 1910       
                       6657 ; rs232cmd.c 1911       /************************************************************************
                            **/
                       6658 ; rs232cmd.c 1912       /* GenlockGen                                                            
                                                                                                                             
                                                             RS232CMD.C     */
                       6659 ; rs232cmd.c 1913       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6660 ; rs232cmd.c 1914       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       6661 ; rs232cmd.c 1915       /* Revised:             001219                                           
                                                                                                                             
                                                                                    */
                       6662 ; rs232cmd.c 1916       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6663 ; rs232cmd.c 1917       /* Function:    Return the Genlock Configuration.                        
                                                                                                                    */
                       6664 ; rs232cmd.c 1918       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                    */
                       6665 ; rs232cmd.c 1919       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       6666 ; rs232cmd.c 1920       /* Updates:       --                                                     
                                                                                                                             
                                                                                                            */
                       6667 ; rs232cmd.c 1921       /************************************************************************
                            **/
                       6668 ; rs232cmd.c 1922       void GenlockGen( void)
                       6669 ; rs232cmd.c 1923       {
                       6670         ALIGN   1
                       6672         PUBLIC  _GenlockGen
0010FE                 6673 _GenlockGen:
0010FE 0F30            6677         PUSH.W  R4, R5
                       6681 ; rs232cmd.c 1924               char code *str;
                       6682 ; rs232cmd.c 1925       
                       6683 ; rs232cmd.c 1926               if ( CmdExecute && !SCPIError)
001100 964842rr        6685         MOV.B   ES,#SEG( _CmdExecute )
001104 9908rrrr        6686         MOV.W   R0,#SOF( _CmdExecute )
001108 8200            6687         MOV.B   R0L,[R0]
                       6688         BEQ     _282
00110A F202           +6688 ;       BNE     _LG_304
00110C D5008C         +6688 ;       JMP.L   _282
00110C D5008C00       +6688 ;       JMP.L   _282
001110                +6688 _LG_304:
001110 964842rr        6689         MOV.B   ES,#SEG( _SCPIError )
001114 9908rrrr        6690         MOV.W   R0,#SOF( _SCPIError )
001118 8A00            6691         MOV.W   R0,[R0]
                       6692         BNE     _282
00111A F302           +6692 ;       BEQ     _LG_306
00111C D50084         +6692 ;       JMP.L   _282
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 112

ADDR   CODE            LINE SOURCELINE
00111C D5008400       +6692 ;       JMP.L   _282
001120                +6692 _LG_306:
                       6693 ; rs232cmd.c 1927               {
                       6694 ; rs232cmd.c 1928                       if ( !CmdRequest)
001120 964842rr        6696         MOV.B   ES,#SEG( _CmdRequest )
001124 9908rrrr        6697         MOV.W   R0,#SOF( _CmdRequest )
001128 8200            6698         MOV.B   R0L,[R0]
00112A F206            6699         BNE     _271
                       6700 ; rs232cmd.c 1929                                       SCPIError = SyntaxErr;
00112C 964842rr        6702         MOV.B   ES,#SEG( _SCPIError )
001130 9908rrrr        6703         MOV.W   R0,#SOF( _SCPIError )
001134 BA03            6704         MOV.W   [R0],#03H
001136 FE77            6705         BR      _282
001136 FE77            6705         BR      _282
001138                 6706 _271:
                       6707 ; rs232cmd.c 1930                       else
                       6708 ; rs232cmd.c 1931                       {
                       6709 ; rs232cmd.c 1932                               if ( ParCnt)
001138 964842rr        6711         MOV.B   ES,#SEG( _ParCnt )
00113C 9908rrrr        6712         MOV.W   R0,#SOF( _ParCnt )
001140 8200            6713         MOV.B   R0L,[R0]
001142 F306            6714         BEQ     _272
                       6715 ; rs232cmd.c 1933                                       SCPIError = ParNotAllowed;
001144 964842rr        6717         MOV.B   ES,#SEG( _SCPIError )
001148 9908rrrr        6718         MOV.W   R0,#SOF( _SCPIError )
00114C BA06            6719         MOV.W   [R0],#06H
00114E FE6B            6720         BR      _282
00114E FE6B            6720         BR      _282
001150                 6721 _272:
                       6722 ; rs232cmd.c 1934                               else
                       6723 ; rs232cmd.c 1935                               {
                       6724 ; rs232cmd.c 1936                   if ( GenlockStatus)
001150 964842rr        6726         MOV.B   ES,#SEG( _GenlockStatus )
001154 9908rrrr        6727         MOV.W   R0,#SOF( _GenlockStatus )
001158 8200            6728         MOV.B   R0L,[R0]
00115A F305            6729         BEQ     _273
                       6730 ; rs232cmd.c 1937                                       str = GENLOCKEDParTxt;
00115C 9958rrrr        6732         MOV.W   R5,#SEG( _GENLOCKEDParTxt )
001160 9948rrrr        6733         MOV.W   R4,#SOF( _GENLOCKEDParTxt )
001164 FE04            6735         BR      _274
001164 FE04            6735         BR      _274
001166                 6736 _273:
                       6737 ; rs232cmd.c 1938                   else
                       6738 ; rs232cmd.c 1939                                       str = UNLOCKEDParTxt;
001166 9958rrrr        6740         MOV.W   R5,#SEG( _UNLOCKEDParTxt )
00116A 9948rrrr        6741         MOV.W   R4,#SOF( _UNLOCKEDParTxt )
00116E                 6744 _274:
                       6745 ; rs232cmd.c 1940       
                       6746 ; rs232cmd.c 1941                               while ( *str)
00116E 8915            6748         MOV.W   R1,R5
001170 8904            6749         MOV.W   R0,R4
001172 862C43          6750         MOV.B   CS,R1L
001175 8020            6751         MOVC.B  R1L,[R0+]
001177 F312            6752         BEQ     _276
001177 F31200          6752         BEQ     _276
00117A                 6753 _275:
                       6754 ; rs232cmd.c 1942                               rs232putchar( *str++);
00117A 8915            6756         MOV.W   R1,R5
00117C 8904            6757         MOV.W   R0,R4
00117E 862C43          6758         MOV.B   CS,R1L
001181 8020            6759         MOVC.B  R1L,[R0+]
001183 8102            6760         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 113

ADDR   CODE            LINE SOURCELINE
                       6761         CALL    _rs232putchar
001185 C4rrrrrr       +6761 ;       FCALL   _rs232putchar
001189 99400001        6762         ADD.W   R4,#01H
00118D 99510000        6763         ADDC.W  R5,#00H
001191 8915            6767         MOV.W   R1,R5
001193 8904            6768         MOV.W   R0,R4
001195 862C43          6769         MOV.B   CS,R1L
001198 8020            6770         MOVC.B  R1L,[R0+]
00119A F2EF            6771         BNE     _275
00119C                 6773 _276:
                       6774 ; rs232cmd.c 1943       
                       6775 ; rs232cmd.c 1944                               rs232putchar(',');
00119C 91082C          6777         MOV.B   R0L,#02CH
                       6778         CALL    _rs232putchar
00119F C4rrrrrr       +6778 ;       FCALL   _rs232putchar
                       6779 ; rs232cmd.c 1945       
                       6780 ; rs232cmd.c 1946                                       str = GenlockSystemPar[GenlockSetup.Syste
                            m].LongName;
0011A3 964842rr        6782         MOV.B   ES,#SEG( _GenlockSetup )
0011A7 9908rrrr        6783         MOV.W   R0,#SOF( _GenlockSetup )
0011AB 8200            6784         MOV.B   R0L,[R0]
0011AD E8000C          6785         MULU.B  R0L,#0CH
0011B0 8920            6786         MOV.W   R2,R0
0011B2 B930            6787         MOVS.W  R3,#00H
0011B4 9918rrrr        6788         MOV.W   R1,#SEG( _GenlockSystemPar )
0011B8 9908rrrr        6789         MOV.W   R0,#SOF( _GenlockSystemPar )
0011BC 0902            6790         ADD.W   R0,R2
0011BE 1913            6791         ADDC.W  R1,R3
0011C0 862C43          6792         MOV.B   CS,R1L
0011C3 8820            6793         MOVC.W  R2,[R0+]
0011C5 99040000        6794         CMP.W   R0,#00H
0011C9 F202            6795         BNE     _283
0011CB A64143          6796         ADDS.B  CS,#01H
0011CB A64143          6796         ADDS.B  CS,#01H
0011CE                 6797 _283:
0011CE 8830            6798         MOVC.W  R3,[R0+]
0011D0 8953            6799         MOV.W   R5,R3
0011D2 8942            6800         MOV.W   R4,R2
                       6803 ; rs232cmd.c 1947       
                       6804 ; rs232cmd.c 1948                                       while ( *str)
0011D4 866C43          6806         MOV.B   CS,R3L
0011D7 8062            6807         MOVC.B  R3L,[R2+]
0011D9 F312            6808         BEQ     _278
0011D9 F31200          6808         BEQ     _278
0011DC                 6809 _277:
                       6810 ; rs232cmd.c 1949                                               rs232putchar( *str++);
0011DC 8915            6812         MOV.W   R1,R5
0011DE 8904            6813         MOV.W   R0,R4
0011E0 862C43          6814         MOV.B   CS,R1L
0011E3 8020            6815         MOVC.B  R1L,[R0+]
0011E5 8102            6816         MOV.B   R0L,R1L
                       6817         CALL    _rs232putchar
0011E7 C4rrrrrr       +6817 ;       FCALL   _rs232putchar
0011EB 99400001        6818         ADD.W   R4,#01H
0011EF 99510000        6819         ADDC.W  R5,#00H
0011F3 8915            6823         MOV.W   R1,R5
0011F5 8904            6824         MOV.W   R0,R4
0011F7 862C43          6825         MOV.B   CS,R1L
0011FA 8020            6826         MOVC.B  R1L,[R0+]
0011FC F2EF            6827         BNE     _277
0011FE                 6829 _278:
                       6830 ; rs232cmd.c 1950       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 114

ADDR   CODE            LINE SOURCELINE
                       6831 ; rs232cmd.c 1951                                       rs232putchar(',');
0011FE 91082C          6833         MOV.B   R0L,#02CH
                       6834         CALL    _rs232putchar
001201 C4rrrrrr       +6834 ;       FCALL   _rs232putchar
                       6835 ; rs232cmd.c 1952       
                       6836 ; rs232cmd.c 1953                                       PrintSamplesToFLT( GenlockSetup.System, G
                            enlockSetup.Delay);
001205 964842rr        6838         MOV.B   ES,#SEG( _GenlockSetup )
001209 9908rrrr        6839         MOV.W   R0,#SOF( _GenlockSetup )
00120D 8200            6840         MOV.B   R0L,[R0]
00120F 964842rr        6841         MOV.B   ES,#SEG( _GenlockSetup+2 )
001213 9938rrrr        6842         MOV.W   R3,#SOF( _GenlockSetup+2 )
001217 8B23            6843         MOV.W   R2,[R3+]
001219 8A33            6844         MOV.W   R3,[R3]
00121B C52976          6845         CALL    _PrintSamplesToFLT
                       6846 ; rs232cmd.c 1954       
                       6847 ; rs232cmd.c 1955                                       rs232putchar ( '\n');
00121E 91080A          6849         MOV.B   R0L,#0AH
                       6850         CALL    _rs232putchar
001221 C4rrrrrr       +6850 ;       FCALL   _rs232putchar
                       6851 ; rs232cmd.c 1956                               }
                       6852 ; rs232cmd.c 1957                       }
                       6853 ; rs232cmd.c 1958               }
001226                 6855 _282:
                       6856 ; rs232cmd.c 1959       }
001226 2F30            6858         POP.W   R4, R5
001228 D680            6860         RET
                       6863 ; rs232cmd.c 1960       
                       6864 ; rs232cmd.c 1961       /************************************************************************
                            **/
                       6865 ; rs232cmd.c 1962       /* GenlockGenSystem                                                      
                                                                                                                             
                                             RS232CMD.C     */
                       6866 ; rs232cmd.c 1963       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6867 ; rs232cmd.c 1964       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       6868 ; rs232cmd.c 1965       /* Revised:             000525                                           
                                                                                                                             
                                                                                    */
                       6869 ; rs232cmd.c 1966       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6870 ; rs232cmd.c 1967       /* Function:    Handle the genlock system command                        
                                                                                                                    */
                       6871 ; rs232cmd.c 1968       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6872 ; rs232cmd.c 1969       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       6873 ; rs232cmd.c 1970       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       6874 ; rs232cmd.c 1971       /************************************************************************
                            **/
                       6875 ; rs232cmd.c 1972       void GenlockGenSystem( void)
                       6876 ; rs232cmd.c 1973       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 115

ADDR   CODE            LINE SOURCELINE
                       6877         ALIGN   1
                       6879         PUBLIC  _GenlockGenSystem
00122A                 6880 _GenlockGenSystem:
00122A 0F30            6884         PUSH.W  R4, R5
                       6890 ; rs232cmd.c 1974               int system;
                       6891 ; rs232cmd.c 1975               char code *str;
                       6892 ; rs232cmd.c 1976       
                       6893 ; rs232cmd.c 1977               if ( CmdExecute && !SCPIError)
00122C 964842rr        6895         MOV.B   ES,#SEG( _CmdExecute )
001230 9908rrrr        6896         MOV.W   R0,#SOF( _CmdExecute )
001234 8200            6897         MOV.B   R0L,[R0]
001236 F36F            6898         BEQ     _295
001238 964842rr        6899         MOV.B   ES,#SEG( _SCPIError )
00123C 9908rrrr        6900         MOV.W   R0,#SOF( _SCPIError )
001240 8A00            6901         MOV.W   R0,[R0]
001242 F269            6902         BNE     _295
                       6903 ; rs232cmd.c 1978               {
                       6904 ; rs232cmd.c 1979                       if ( CmdRequest)
001244 964842rr        6906         MOV.B   ES,#SEG( _CmdRequest )
001248 9908rrrr        6907         MOV.W   R0,#SOF( _CmdRequest )
00124C 8200            6908         MOV.B   R0L,[R0]
00124E F33F            6909         BEQ     _287
                       6910 ; rs232cmd.c 1980                       {
                       6911 ; rs232cmd.c 1981                               if ( ParCnt)
001250 964842rr        6913         MOV.B   ES,#SEG( _ParCnt )
001254 9908rrrr        6914         MOV.W   R0,#SOF( _ParCnt )
001258 8200            6915         MOV.B   R0L,[R0]
00125A F306            6916         BEQ     _284
                       6917 ; rs232cmd.c 1982                                       SCPIError = ParNotAllowed;
00125C 964842rr        6919         MOV.B   ES,#SEG( _SCPIError )
001260 9908rrrr        6920         MOV.W   R0,#SOF( _SCPIError )
001264 BA06            6921         MOV.W   [R0],#06H
001266 FE57            6922         BR      _295
001266 FE57            6922         BR      _295
001268                 6923 _284:
                       6924 ; rs232cmd.c 1983                               else
                       6925 ; rs232cmd.c 1984                               {
                       6926 ; rs232cmd.c 1985                                       str = GenlockSystemPar[GenlockSetup.Syste
                            m].LongName;
001268 964842rr        6928         MOV.B   ES,#SEG( _GenlockSetup )
00126C 9908rrrr        6929         MOV.W   R0,#SOF( _GenlockSetup )
001270 8200            6930         MOV.B   R0L,[R0]
001272 E8000C          6931         MULU.B  R0L,#0CH
001275 8920            6932         MOV.W   R2,R0
001277 B930            6933         MOVS.W  R3,#00H
001279 9918rrrr        6934         MOV.W   R1,#SEG( _GenlockSystemPar )
00127D 9908rrrr        6935         MOV.W   R0,#SOF( _GenlockSystemPar )
001281 0902            6936         ADD.W   R0,R2
001283 1913            6937         ADDC.W  R1,R3
001285 862C43          6938         MOV.B   CS,R1L
001288 8820            6939         MOVC.W  R2,[R0+]
00128A 99040000        6940         CMP.W   R0,#00H
00128E F202            6941         BNE     _296
001290 A64143          6942         ADDS.B  CS,#01H
001290 A6414300        6942         ADDS.B  CS,#01H
001294                 6943 _296:
001294 8830            6944         MOVC.W  R3,[R0+]
001296 8953            6945         MOV.W   R5,R3
001298 8942            6946         MOV.W   R4,R2
                       6948 ; rs232cmd.c 1986       
                       6949 ; rs232cmd.c 1987                                       while ( *str)
00129A 866C43          6951         MOV.B   CS,R3L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 116

ADDR   CODE            LINE SOURCELINE
00129D 8062            6952         MOVC.B  R3L,[R2+]
00129F F312            6953         BEQ     _286
00129F F31200          6953         BEQ     _286
0012A2                 6954 _285:
                       6955 ; rs232cmd.c 1988                                               rs232putchar( *str++);
0012A2 8915            6957         MOV.W   R1,R5
0012A4 8904            6958         MOV.W   R0,R4
0012A6 862C43          6959         MOV.B   CS,R1L
0012A9 8020            6960         MOVC.B  R1L,[R0+]
0012AB 8102            6961         MOV.B   R0L,R1L
                       6962         CALL    _rs232putchar
0012AD C4rrrrrr       +6962 ;       FCALL   _rs232putchar
0012B1 99400001        6963         ADD.W   R4,#01H
0012B5 99510000        6964         ADDC.W  R5,#00H
0012B9 8915            6968         MOV.W   R1,R5
0012BB 8904            6969         MOV.W   R0,R4
0012BD 862C43          6970         MOV.B   CS,R1L
0012C0 8020            6971         MOVC.B  R1L,[R0+]
0012C2 F2EF            6972         BNE     _285
0012C4                 6974 _286:
                       6975 ; rs232cmd.c 1989       
                       6976 ; rs232cmd.c 1990                                       rs232putchar('\n');
0012C4 91080A          6978         MOV.B   R0L,#0AH
                       6979         CALL    _rs232putchar
0012C7 C4rrrrrr       +6979 ;       FCALL   _rs232putchar
                       6980 ; rs232cmd.c 1991                               }
                       6981 ; rs232cmd.c 1992                       }
0012CB FE25            6983         BR      _295
0012CB FE2500          6983         BR      _295
0012CE                 6984 _287:
                       6985 ; rs232cmd.c 1993                       else
                       6986 ; rs232cmd.c 1994                       {
                       6987 ; rs232cmd.c 1995                               if ( ParCnt != 1)
0012CE 964842rr        6989         MOV.B   ES,#SEG( _ParCnt )
0012D2 9908rrrr        6990         MOV.W   R0,#SOF( _ParCnt )
0012D6 8200            6991         MOV.B   R0L,[R0]
0012D8 910401          6992         CMP.B   R0L,#01H
0012DB F307            6993         BEQ     _288
                       6994 ; rs232cmd.c 1996                                       SCPIError = SyntaxErr;
0012DD 964842rr        6996         MOV.B   ES,#SEG( _SCPIError )
0012E1 9908rrrr        6997         MOV.W   R0,#SOF( _SCPIError )
0012E5 BA03            6998         MOV.W   [R0],#03H
0012E7 FE17            6999         BR      _295
0012E7 FE1700          6999         BR      _295
0012EA                 7000 _288:
                       7001 ; rs232cmd.c 1997                               else
                       7002 ; rs232cmd.c 1998                               {
                       7003 ; rs232cmd.c 1999                                       system = FindParameter( Cmd, GenlockSyste
                            mPar);
0012EA 9918rrrr        7005         MOV.W   R1,#SEG( _Cmd )
0012EE 9908rrrr        7006         MOV.W   R0,#SOF( _Cmd )
0012F2 9938rrrr        7007         MOV.W   R3,#SEG( _GenlockSystemPar )
0012F6 9928rrrr        7008         MOV.W   R2,#SOF( _GenlockSystemPar )
0012FA C5267F          7009         CALL    _FindParameter
                       7011 ; rs232cmd.c 2000               
                       7012 ; rs232cmd.c 2001                                       if ( system > -1)
0012FD 9904FFFF        7014         CMP.W   R0,#0FFFFH
001301 FD04            7015         BLE     _289
                       7016 ; rs232cmd.c 2002                                               SetGenlockSystem( system);
                       7018         CALL    _SetGenlockSystem
001303 C4rrrrrr       +7018 ;       FCALL   _SetGenlockSystem
001307 FE07            7020         BR      _295
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 117

ADDR   CODE            LINE SOURCELINE
001307 FE0700          7020         BR      _295
00130A                 7021 _289:
                       7022 ; rs232cmd.c 2003                                       else
                       7023 ; rs232cmd.c 2004                                               SCPIError = DataOutOfRange;
00130A 964842rr        7025         MOV.B   ES,#SEG( _SCPIError )
00130E 9908rrrr        7026         MOV.W   R0,#SOF( _SCPIError )
001312 9A080021        7027         MOV.W   [R0],#021H
                       7028 ; rs232cmd.c 2005                               }
                       7029 ; rs232cmd.c 2006                       }
                       7030 ; rs232cmd.c 2007               }
001316                 7032 _295:
                       7033 ; rs232cmd.c 2008       }
001316 2F30            7035         POP.W   R4, R5
001318 D680            7037         RET
                       7040 ; rs232cmd.c 2009       
                       7041 ; rs232cmd.c 2010       /************************************************************************
                            **/
                       7042 ; rs232cmd.c 2011       /* GenlockGenDelay                                                       
                                                                                                                             
                                       RS232CMD.C */
                       7043 ; rs232cmd.c 2012       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7044 ; rs232cmd.c 2013       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7045 ; rs232cmd.c 2014       /* Revised:             000525                                           
                                                                                                                             
                                                                                    */
                       7046 ; rs232cmd.c 2015       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7047 ; rs232cmd.c 2016       /* Function:    Handle the genlock timing command                        
                                                                                                                    */
                       7048 ; rs232cmd.c 2017       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7049 ; rs232cmd.c 2018       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7050 ; rs232cmd.c 2019       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7051 ; rs232cmd.c 2020       /************************************************************************
                            **/
                       7052 ; rs232cmd.c 2021       void GenlockGenDelay( void)
                       7053 ; rs232cmd.c 2022       {
                       7054         ALIGN   1
                       7056         PUBLIC  _GenlockGenDelay
00131A                 7057 _GenlockGenDelay:
00131A 0F30            7061         PUSH.W  R4, R5
00131C A978            7063         ADDS.W  R7,#08H
                       7070 ; rs232cmd.c 2023               int field, line;
                       7071 ; rs232cmd.c 2024               float offset;
                       7072 ; rs232cmd.c 2025               long samples;
                       7073 ; rs232cmd.c 2026       
                       7074 ; rs232cmd.c 2027               if ( CmdExecute && !SCPIError)
00131E 964842rr        7076         MOV.B   ES,#SEG( _CmdExecute )
001322 9908rrrr        7077         MOV.W   R0,#SOF( _CmdExecute )
001326 8200            7078         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 118

ADDR   CODE            LINE SOURCELINE
001328 F374            7079         BEQ     _310
00132A 964842rr        7080         MOV.B   ES,#SEG( _SCPIError )
00132E 9908rrrr        7081         MOV.W   R0,#SOF( _SCPIError )
001332 8A00            7082         MOV.W   R0,[R0]
001334 F26E            7083         BNE     _310
                       7084 ; rs232cmd.c 2028               {
                       7085 ; rs232cmd.c 2029                       if ( CmdRequest)
001336 964842rr        7087         MOV.B   ES,#SEG( _CmdRequest )
00133A 9908rrrr        7088         MOV.W   R0,#SOF( _CmdRequest )
00133E 8200            7089         MOV.B   R0L,[R0]
001340 F31D            7090         BEQ     _301
                       7091 ; rs232cmd.c 2030                       {
                       7092 ; rs232cmd.c 2031                               if ( ParCnt)
001342 964842rr        7094         MOV.B   ES,#SEG( _ParCnt )
001346 9908rrrr        7095         MOV.W   R0,#SOF( _ParCnt )
00134A 8200            7096         MOV.B   R0L,[R0]
00134C F306            7097         BEQ     _300
                       7098 ; rs232cmd.c 2032                                       SCPIError = ParNotAllowed;
00134E 964842rr        7100         MOV.B   ES,#SEG( _SCPIError )
001352 9908rrrr        7101         MOV.W   R0,#SOF( _SCPIError )
001356 BA06            7102         MOV.W   [R0],#06H
001358 FE5C            7103         BR      _310
001358 FE5C            7103         BR      _310
00135A                 7104 _300:
                       7105 ; rs232cmd.c 2033                               else
                       7106 ; rs232cmd.c 2034                               {
                       7107 ; rs232cmd.c 2035                                       PrintSamplesToFLT( GenlockSetup.System, G
                            enlockSetup.Delay);
00135A 964842rr        7109         MOV.B   ES,#SEG( _GenlockSetup )
00135E 9908rrrr        7110         MOV.W   R0,#SOF( _GenlockSetup )
001362 8200            7111         MOV.B   R0L,[R0]
001364 964842rr        7112         MOV.B   ES,#SEG( _GenlockSetup+2 )
001368 9938rrrr        7113         MOV.W   R3,#SOF( _GenlockSetup+2 )
00136C 8B23            7114         MOV.W   R2,[R3+]
00136E 8A33            7115         MOV.W   R3,[R3]
001370 C528CC          7116         CALL    _PrintSamplesToFLT
                       7117 ; rs232cmd.c 2036       
                       7118 ; rs232cmd.c 2037                                       rs232putchar ( '\n');
001373 91080A          7120         MOV.B   R0L,#0AH
                       7121         CALL    _rs232putchar
001376 C4rrrrrr       +7121 ;       FCALL   _rs232putchar
                       7122 ; rs232cmd.c 2038                               }
                       7123 ; rs232cmd.c 2039                       }
00137A FE4B            7125         BR      _310
00137A FE4B            7125         BR      _310
00137C                 7126 _301:
                       7127 ; rs232cmd.c 2040                       else
                       7128 ; rs232cmd.c 2041                       {
                       7129 ; rs232cmd.c 2042                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
00137C 964842rr        7131         MOV.B   ES,#SEG( _ParCnt )
001380 9908rrrr        7132         MOV.W   R0,#SOF( _ParCnt )
001384 8200            7133         MOV.B   R0L,[R0]
001386 910403          7134         CMP.B   R0L,#03H
001389 F21F            7135         BNE     _302
00138B 9168rr          7136         MOV.B   R3L,#SEG( __lc_bs )
00138E 7177            7137         XOR.B   R3H,R3H
001390 8927            7138         MOV.W   R2,R7
001392 91A8rr          7139         MOV.B   R5L,#SEG( __lc_bs )
001395 71BB            7140         XOR.B   R5H,R5H
001397 404702          7141         LEA     R4,R7+2
00139A 9128rr          7142         MOV.B   R1L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 119

ADDR   CODE            LINE SOURCELINE
00139D 7133            7143         XOR.B   R1H,R1H
00139F 400704          7144         LEA     R0,R7+4
0013A2 0F03            7145         PUSH.W  R0, R1
0013A4 0F30            7147         PUSH.W  R4, R5
0013A6 0F0C            7149         PUSH.W  R2, R3
0013A8 9938rrrr        7151         MOV.W   R3,#SEG( _299 )
0013AC 9928rrrr        7152         MOV.W   R2,#SOF( _299 )
0013B0 0F0C            7153         PUSH.W  R2, R3
0013B2 9918rrrr        7155         MOV.W   R1,#SEG( _Cmd )
0013B6 9908rrrr        7156         MOV.W   R0,#SOF( _Cmd )
                       7157         CALL    _sscanf
0013BA C4rrrrrr       +7157 ;       FCALL   _sscanf
0013BE 99700010        7158         ADD.W   R7,#010H
0013C2 99040003        7160         CMP.W   R0,#03H
0013C6 F306            7161         BEQ     _303
0013C6 F306            7161         BEQ     _303
0013C8                 7162 _302:
                       7163 ; rs232cmd.c 2043                                       SCPIError = SyntaxErr;
0013C8 964842rr        7165         MOV.B   ES,#SEG( _SCPIError )
0013CC 9908rrrr        7166         MOV.W   R0,#SOF( _SCPIError )
0013D0 BA03            7167         MOV.W   [R0],#03H
0013D2 FE1F            7168         BR      _310
0013D2 FE1F            7168         BR      _310
0013D4                 7169 _303:
                       7170 ; rs232cmd.c 2044                               else
                       7171 ; rs232cmd.c 2045                               {
                       7172 ; rs232cmd.c 2046                                       if (( samples = FLTToSamples( GenlockSetu
                            p.System, field, line, offset)) == -1)
0013D4 964842rr        7174         MOV.B   ES,#SEG( _GenlockSetup )
0013D8 9908rrrr        7175         MOV.W   R0,#SOF( _GenlockSetup )
0013DC 8200            7176         MOV.B   R0L,[R0]
0013DE 8A17            7177         MOV.W   R1,[R7]
0013E0 8C2702          7178         MOV.W   R2,[R7+2]
0013E3 8C5706          7179         MOV.W   R5,[R7+6]
0013E6 8C4704          7180         MOV.W   R4,[R7+4]
0013E9 0F30            7181         PUSH.W  R4, R5
0013EB C52653          7183         CALL    _FLTToSamples
0013EE A974            7184         ADDS.W  R7,#04H
0013F0 8931            7186         MOV.W   R3,R1
0013F2 8920            7187         MOV.W   R2,R0
0013F4 9934FFFF        7188         CMP.W   R3,#0FFFFH
0013F8 F202            7189         BNE     _313
0013FA 9924FFFF        7190         CMP.W   R2,#0FFFFH
0013FA 9924FFFF        7190         CMP.W   R2,#0FFFFH
0013FE                 7191 _313:
0013FE F207            7192         BNE     _304
                       7193 ; rs232cmd.c 2047                                               SCPIError = ExecErr;
001400 964842rr        7195         MOV.B   ES,#SEG( _SCPIError )
001404 9908rrrr        7196         MOV.W   R0,#SOF( _SCPIError )
001408 9A08001D        7197         MOV.W   [R0],#01DH
00140C FE02            7198         BR      _310
00140C FE02            7198         BR      _310
00140E                 7199 _304:
                       7200 ; rs232cmd.c 2048                                       else
                       7201 ; rs232cmd.c 2049                                               SetGenlockDelay( samples);
                       7203         CALL    _SetGenlockDelay
00140E C4rrrrrr       +7203 ;       FCALL   _SetGenlockDelay
                       7204 ; rs232cmd.c 2050                               }
                       7205 ; rs232cmd.c 2051                       }
                       7206 ; rs232cmd.c 2052               }
001412                 7208 _310:
                       7209 ; rs232cmd.c 2053       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 120

ADDR   CODE            LINE SOURCELINE
001412 99700008        7211         ADD.W   R7,#08H
001416 2F30            7213         POP.W   R4, R5
001418 D680            7215         RET
                       7217 ; rs232cmd.c 2054       
                       7218 ; rs232cmd.c 2055       /************************************************************************
                            **/
                       7219 ; rs232cmd.c 2056       /* GenlockGenCalibrateEnable                                             
                                                                                                       RS232CMD.C */
                       7220 ; rs232cmd.c 2057       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7221 ; rs232cmd.c 2058       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7222 ; rs232cmd.c 2059       /* Revised:             000622                                           
                                                                                                                             
                                                                                    */
                       7223 ; rs232cmd.c 2060       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7224 ; rs232cmd.c 2061       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7225 ; rs232cmd.c 2062       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7226 ; rs232cmd.c 2063       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7227 ; rs232cmd.c 2064       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7228 ; rs232cmd.c 2065       /************************************************************************
                            **/
                       7229 ; rs232cmd.c 2066       void GenlockGenCalibrateEnable( void)
                       7230 ; rs232cmd.c 2067       {
                       7231         ALIGN   1
                       7233         PUBLIC  _GenlockGenCalibrateEnable
00141A                 7234 _GenlockGenCalibrateEnable:
00141A 0F30            7238         PUSH.W  R4, R5
                       7244 ; rs232cmd.c 2068               char code *str;
                       7245 ; rs232cmd.c 2069               int tmp;
                       7246 ; rs232cmd.c 2070       
                       7247 ; rs232cmd.c 2071               if ( CmdExecute && !SCPIError)
00141C 964842rr        7249         MOV.B   ES,#SEG( _CmdExecute )
001420 9908rrrr        7250         MOV.W   R0,#SOF( _CmdExecute )
001424 8200            7251         MOV.B   R0L,[R0]
                       7252         BEQ     _330
001426 F202           +7252 ;       BNE     _LG_358
001428 D500D2         +7252 ;       JMP.L   _330
001428 D500D200       +7252 ;       JMP.L   _330
00142C                +7252 _LG_358:
00142C 964842rr        7253         MOV.B   ES,#SEG( _SCPIError )
001430 9908rrrr        7254         MOV.W   R0,#SOF( _SCPIError )
001434 8A00            7255         MOV.W   R0,[R0]
                       7256         BNE     _330
001436 F302           +7256 ;       BEQ     _LG_360
001438 D500CA         +7256 ;       JMP.L   _330
001438 D500CA00       +7256 ;       JMP.L   _330
00143C                +7256 _LG_360:
                       7257 ; rs232cmd.c 2072               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 121

ADDR   CODE            LINE SOURCELINE
                       7258 ; rs232cmd.c 2073                       if ( CmdRequest)
00143C 964842rr        7260         MOV.B   ES,#SEG( _CmdRequest )
001440 9908rrrr        7261         MOV.W   R0,#SOF( _CmdRequest )
001444 8200            7262         MOV.B   R0L,[R0]
001446 F340            7263         BEQ     _320
                       7264 ; rs232cmd.c 2074                       {
                       7265 ; rs232cmd.c 2075                               if ( ParCnt)
001448 964842rr        7267         MOV.B   ES,#SEG( _ParCnt )
00144C 9908rrrr        7268         MOV.W   R0,#SOF( _ParCnt )
001450 8200            7269         MOV.B   R0L,[R0]
001452 F307            7270         BEQ     _317
                       7271 ; rs232cmd.c 2076                                       SCPIError = SyntaxErr;
001454 964842rr        7273         MOV.B   ES,#SEG( _SCPIError )
001458 9908rrrr        7274         MOV.W   R0,#SOF( _SCPIError )
00145C BA03            7275         MOV.W   [R0],#03H
                       7276         BR      _330
00145E D500B7         +7276         JMP.L   _330
00145E D500B700       +7276         JMP.L   _330
001462                 7277 _317:
                       7278 ; rs232cmd.c 2077                               else
                       7279 ; rs232cmd.c 2078                               {
                       7280 ; rs232cmd.c 2079                                       str = OffOnPar[GenlockCalEnable].LongName
                            ;
001462 964842rr        7282         MOV.B   ES,#SEG( _GenlockCalEnable )
001466 9908rrrr        7283         MOV.W   R0,#SOF( _GenlockCalEnable )
00146A 8200            7284         MOV.B   R0L,[R0]
00146C E8000C          7285         MULU.B  R0L,#0CH
00146F 8920            7286         MOV.W   R2,R0
001471 B930            7287         MOVS.W  R3,#00H
001473 9918rrrr        7288         MOV.W   R1,#SEG( _OffOnPar )
001477 9908rrrr        7289         MOV.W   R0,#SOF( _OffOnPar )
00147B 0902            7290         ADD.W   R0,R2
00147D 1913            7291         ADDC.W  R1,R3
00147F 862C43          7292         MOV.B   CS,R1L
001482 8820            7293         MOVC.W  R2,[R0+]
001484 99040000        7294         CMP.W   R0,#00H
001488 F202            7295         BNE     _331
00148A A64143          7296         ADDS.B  CS,#01H
00148A A6414300        7296         ADDS.B  CS,#01H
00148E                 7297 _331:
00148E 8830            7298         MOVC.W  R3,[R0+]
001490 8953            7299         MOV.W   R5,R3
001492 8942            7300         MOV.W   R4,R2
                       7302 ; rs232cmd.c 2080       
                       7303 ; rs232cmd.c 2081                                       while ( *str)
001494 866C43          7305         MOV.B   CS,R3L
001497 8062            7306         MOVC.B  R3L,[R2+]
001499 F312            7307         BEQ     _319
001499 F31200          7307         BEQ     _319
00149C                 7308 _318:
                       7309 ; rs232cmd.c 2082                                               rs232putchar( *str++);
00149C 8915            7311         MOV.W   R1,R5
00149E 8904            7312         MOV.W   R0,R4
0014A0 862C43          7313         MOV.B   CS,R1L
0014A3 8020            7314         MOVC.B  R1L,[R0+]
0014A5 8102            7315         MOV.B   R0L,R1L
                       7316         CALL    _rs232putchar
0014A7 C4rrrrrr       +7316 ;       FCALL   _rs232putchar
0014AB 99400001        7317         ADD.W   R4,#01H
0014AF 99510000        7318         ADDC.W  R5,#00H
0014B3 8915            7322         MOV.W   R1,R5
0014B5 8904            7323         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 122

ADDR   CODE            LINE SOURCELINE
0014B7 862C43          7324         MOV.B   CS,R1L
0014BA 8020            7325         MOVC.B  R1L,[R0+]
0014BC F2EF            7326         BNE     _318
0014BE                 7328 _319:
                       7329 ; rs232cmd.c 2083       
                       7330 ; rs232cmd.c 2084                                       rs232putchar('\n');
0014BE 91080A          7332         MOV.B   R0L,#0AH
                       7333         CALL    _rs232putchar
0014C1 C4rrrrrr       +7333 ;       FCALL   _rs232putchar
                       7334 ; rs232cmd.c 2085                               }
                       7335 ; rs232cmd.c 2086                       }
                       7337         BR      _330
0014C5 D50083         +7337         JMP.L   _330
0014C5 D50083         +7337         JMP.L   _330
0014C8                 7338 _320:
                       7339 ; rs232cmd.c 2087                       else
                       7340 ; rs232cmd.c 2088                       {
                       7341 ; rs232cmd.c 2089                               if ( ParCnt != 1)
0014C8 964842rr        7343         MOV.B   ES,#SEG( _ParCnt )
0014CC 9908rrrr        7344         MOV.W   R0,#SOF( _ParCnt )
0014D0 8200            7345         MOV.B   R0L,[R0]
0014D2 910401          7346         CMP.B   R0L,#01H
0014D5 F307            7347         BEQ     _321
                       7348 ; rs232cmd.c 2090                                       SCPIError = SyntaxErr;
0014D7 964842rr        7350         MOV.B   ES,#SEG( _SCPIError )
0014DB 9908rrrr        7351         MOV.W   R0,#SOF( _SCPIError )
0014DF BA03            7352         MOV.W   [R0],#03H
0014E1 FE76            7353         BR      _330
0014E1 FE7600          7353         BR      _330
0014E4                 7354 _321:
                       7355 ; rs232cmd.c 2091                               else
                       7356 ; rs232cmd.c 2092                               {
                       7357 ; rs232cmd.c 2093                                       tmp = FindParameter( Cmd, OffOnPar);
0014E4 9918rrrr        7359         MOV.W   R1,#SEG( _Cmd )
0014E8 9908rrrr        7360         MOV.W   R0,#SOF( _Cmd )
0014EC 9938rrrr        7361         MOV.W   R3,#SEG( _OffOnPar )
0014F0 9928rrrr        7362         MOV.W   R2,#SOF( _OffOnPar )
0014F4 C52582          7363         CALL    _FindParameter
                       7365 ; rs232cmd.c 2094               
                       7366 ; rs232cmd.c 2095                                       if ( tmp > -1)
0014F7 9904FFFF        7368         CMP.W   R0,#0FFFFH
0014FB FD63            7369         BLE     _323
                       7370 ; rs232cmd.c 2096                                       {
                       7371 ; rs232cmd.c 2097                                               GenlockCalEnable = tmp;
0014FD 8910            7373         MOV.W   R1,R0
0014FF 964842rr        7374         MOV.B   ES,#SEG( _GenlockCalEnable )
001503 9928rrrr        7375         MOV.W   R2,#SOF( _GenlockCalEnable )
001507 822A            7376         MOV.B   [R2],R1L
                       7377 ; rs232cmd.c 2098       
                       7378 ; rs232cmd.c 2099                                               if ( tmp == 0)
001509 6900            7380         OR.W    R0,R0
00150B F219            7381         BNE     _322
                       7382 ; rs232cmd.c 2100                                               {
                       7383 ; rs232cmd.c 2101                                                       SetGenlockSystem( Genlock
                            Setup.System);
00150D 964842rr        7385         MOV.B   ES,#SEG( _GenlockSetup )
001511 9908rrrr        7386         MOV.W   R0,#SOF( _GenlockSetup )
001515 8200            7387         MOV.B   R0L,[R0]
001517 B110            7389         MOVS.B  R0H,#00H
                       7390         CALL    _SetGenlockSystem
001519 C4rrrrrr       +7390 ;       FCALL   _SetGenlockSystem
                       7391 ; rs232cmd.c 2102       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 123

ADDR   CODE            LINE SOURCELINE
                       7392 ; rs232cmd.c 2103                                                       SetBBSystem( BBOutput1, B
                            BSetup[BBOutput1].System);
00151D 964842rr        7394         MOV.B   ES,#SEG( _BBSetup )
001521 9908rrrr        7395         MOV.W   R0,#SOF( _BBSetup )
001525 8200            7396         MOV.B   R0L,[R0]
001527 8120            7397         MOV.B   R1L,R0L
001529 B130            7398         MOVS.B  R1H,#00H
00152B B900            7399         MOV.W   R0,#00H
                       7400         CALL    _SetBBSystem
00152D C4rrrrrr       +7400 ;       FCALL   _SetBBSystem
                       7401 ; rs232cmd.c 2104       
                       7402 ; rs232cmd.c 2105                                                       BBControlPort = 0;
001531 964842rr        7404         MOV.B   ES,#SEG( _BBControlPort )
001535 9908rrrr        7405         MOV.W   R0,#SOF( _BBControlPort )
001539 BA00            7406         MOV.W   [R0],#00H
                       7407 ; rs232cmd.c 2106                                               }
00153B FE49            7409         BR      _330
00153B FE4900          7409         BR      _330
00153E                 7410 _322:
                       7411 ; rs232cmd.c 2107                                               else
                       7412 ; rs232cmd.c 2108                                               {
                       7413 ; rs232cmd.c 2109                                                                                
                                                                                                                             
                                            // Force genlock internal mode
                       7414 ; rs232cmd.c 2110                                                       sio0SndCommand( 12, SPG_V
                            24_address, "GM0");
00153E 9908000C        7416         MOV.W   R0,#0CH
001542 9938rrrr        7417         MOV.W   R3,#SEG( _314 )
001546 9928rrrr        7418         MOV.W   R2,#SOF( _314 )
00154A 0F0C            7419         PUSH.W  R2, R3
00154C 99180015        7421         MOV.W   R1,#015H
                       7422         CALL    _sio0SndCommand
001550 C4rrrrrr       +7422 ;       FCALL   _sio0SndCommand
001554 A974            7423         ADDS.W  R7,#04H
                       7425 ; rs232cmd.c 2111       
                       7426 ; rs232cmd.c 2112                                                                                
                                                                                                                             
                                            // Force BB1 PAL mode
                       7427 ; rs232cmd.c 2113                                                       sio0SndCommand( 20, BB_V2
                            4_address, "HG%ld;", BBSetup[BBOutput1].Delay);
001556 99180034        7429         MOV.W   R1,#034H
00155A 964842rr        7430         MOV.B   ES,#SEG( _BBSetup+2 )
00155E 9938rrrr        7431         MOV.W   R3,#SOF( _BBSetup+2 )
001562 8B23            7432         MOV.W   R2,[R3+]
001564 8A33            7433         MOV.W   R3,[R3]
001566 0F0C            7434         PUSH.W  R2, R3
001568 9938rrrr        7436         MOV.W   R3,#SEG( _315 )
00156C 9928rrrr        7437         MOV.W   R2,#SOF( _315 )
001570 0F0C            7438         PUSH.W  R2, R3
001572 99080014        7440         MOV.W   R0,#014H
                       7441         CALL    _sio0SndCommand
001576 C4rrrrrr       +7441 ;       FCALL   _sio0SndCommand
00157A 99700008        7442         ADD.W   R7,#08H
                       7444 ; rs232cmd.c 2114       
                       7445 ; rs232cmd.c 2115                                                       BBControlPort = 1;       
                                                                                    // Set BB1 to F45MHz
00157E 964842rr        7447         MOV.B   ES,#SEG( _BBControlPort )
001582 9908rrrr        7448         MOV.W   R0,#SOF( _BBControlPort )
001586 BA01            7449         MOV.W   [R0],#01H
                       7450 ; rs232cmd.c 2116       
                       7451 ; rs232cmd.c 2117                                                       GenlockCalValue = Calibra
                            tion.GenlockCalibration.DACUserValue;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 124

ADDR   CODE            LINE SOURCELINE
001588 964842rr        7453         MOV.B   ES,#SEG( _Calibration+120 )
00158C 9908rrrr        7454         MOV.W   R0,#SOF( _Calibration+120 )
001590 8A00            7455         MOV.W   R0,[R0]
001592 964842rr        7456         MOV.B   ES,#SEG( _GenlockCalValue )
001596 9918rrrr        7457         MOV.W   R1,#SOF( _GenlockCalValue )
00159A 8A09            7458         MOV.W   [R1],R0
                       7459 ; rs232cmd.c 2118       
                       7460 ; rs232cmd.c 2119                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%d;", GenlockCalValue);
00159C 964842rr        7462         MOV.B   ES,#SEG( _GenlockCalValue )
0015A0 9908rrrr        7463         MOV.W   R0,#SOF( _GenlockCalValue )
0015A4 8A00            7464         MOV.W   R0,[R0]
0015A6 0F01            7465         PUSH.W  R0
0015A8 9918rrrr        7467         MOV.W   R1,#SEG( _316 )
0015AC 9908rrrr        7468         MOV.W   R0,#SOF( _316 )
0015B0 0F03            7469         PUSH.W  R0, R1
0015B2 99080014        7471         MOV.W   R0,#014H
0015B6 99180015        7472         MOV.W   R1,#015H
                       7473         CALL    _sio0SndCommand
0015BA C4rrrrrr       +7473 ;       FCALL   _sio0SndCommand
0015BE A976            7474         ADDS.W  R7,#06H
                       7476 ; rs232cmd.c 2120                                               }
                       7477 ; rs232cmd.c 2121                                       }
0015C0 FE06            7479         BR      _330
0015C0 FE06            7479         BR      _330
0015C2                 7480 _323:
                       7481 ; rs232cmd.c 2122                                       else
                       7482 ; rs232cmd.c 2123                                               SCPIError = DataOutOfRange;
0015C2 964842rr        7484         MOV.B   ES,#SEG( _SCPIError )
0015C6 9908rrrr        7485         MOV.W   R0,#SOF( _SCPIError )
0015CA 9A080021        7486         MOV.W   [R0],#021H
                       7487 ; rs232cmd.c 2124                               }
                       7488 ; rs232cmd.c 2125                       }
                       7489 ; rs232cmd.c 2126               }
0015CE                 7491 _330:
                       7492 ; rs232cmd.c 2127       }
0015CE 2F30            7494         POP.W   R4, R5
0015D0 D680            7496         RET
                       7499 ; rs232cmd.c 2128       
                       7500 ; rs232cmd.c 2129       /************************************************************************
                            **/
                       7501 ; rs232cmd.c 2130       /* GenlockGenCalibrateAdjust                                             
                                                                                                       RS232CMD.C */
                       7502 ; rs232cmd.c 2131       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7503 ; rs232cmd.c 2132       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7504 ; rs232cmd.c 2133       /* Revised:             001016                                           
                                                                                                                             
                                                                                    */
                       7505 ; rs232cmd.c 2134       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7506 ; rs232cmd.c 2135       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7507 ; rs232cmd.c 2136       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 125

ADDR   CODE            LINE SOURCELINE
                       7508 ; rs232cmd.c 2137       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7509 ; rs232cmd.c 2138       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7510 ; rs232cmd.c 2139       /************************************************************************
                            **/
                       7511 ; rs232cmd.c 2140       void GenlockGenCalibrateAdjust( void)
                       7512 ; rs232cmd.c 2141       {
                       7513         ALIGN   1
                       7515         PUBLIC  _GenlockGenCalibrateAdjust
0015D2                 7516 _GenlockGenCalibrateAdjust:
0015D2 0F30            7520         PUSH.W  R4, R5
                       7528 ; rs232cmd.c 2142               int tmp;
                       7529 ; rs232cmd.c 2143               UI MinVal, MaxVal;
                       7530 ; rs232cmd.c 2144       
                       7531 ; rs232cmd.c 2145               if ( CmdExecute && !SCPIError)
0015D4 964842rr        7533         MOV.B   ES,#SEG( _CmdExecute )
0015D8 9908rrrr        7534         MOV.W   R0,#SOF( _CmdExecute )
0015DC 8200            7535         MOV.B   R0L,[R0]
                       7536         BEQ     _350
0015DE F202           +7536 ;       BNE     _LG_378
0015E0 D5009D         +7536 ;       JMP.L   _350
0015E0 D5009D00       +7536 ;       JMP.L   _350
0015E4                +7536 _LG_378:
0015E4 964842rr        7537         MOV.B   ES,#SEG( _SCPIError )
0015E8 9908rrrr        7538         MOV.W   R0,#SOF( _SCPIError )
0015EC 8A00            7539         MOV.W   R0,[R0]
                       7540         BNE     _350
0015EE F302           +7540 ;       BEQ     _LG_380
0015F0 D50095         +7540 ;       JMP.L   _350
0015F0 D5009500       +7540 ;       JMP.L   _350
0015F4                +7540 _LG_380:
                       7541 ; rs232cmd.c 2146               {
                       7542 ; rs232cmd.c 2147                       if ( CmdRequest)
0015F4 964842rr        7544         MOV.B   ES,#SEG( _CmdRequest )
0015F8 9908rrrr        7545         MOV.W   R0,#SOF( _CmdRequest )
0015FC 8200            7546         MOV.B   R0L,[R0]
0015FE F307            7547         BEQ     _335
                       7548 ; rs232cmd.c 2148                               SCPIError = SyntaxErr;
001600 964842rr        7550         MOV.B   ES,#SEG( _SCPIError )
001604 9908rrrr        7551         MOV.W   R0,#SOF( _SCPIError )
001608 BA03            7552         MOV.W   [R0],#03H
                       7553         BR      _350
00160A D50088         +7553         JMP.L   _350
00160A D5008800       +7553         JMP.L   _350
00160E                 7554 _335:
                       7555 ; rs232cmd.c 2149                       else
                       7556 ; rs232cmd.c 2150                       {
                       7557 ; rs232cmd.c 2151                               if ( ParCnt == 0)
00160E 964842rr        7559         MOV.B   ES,#SEG( _ParCnt )
001612 9908rrrr        7560         MOV.W   R0,#SOF( _ParCnt )
001616 8200            7561         MOV.B   R0L,[R0]
001618 F206            7562         BNE     _336
                       7563 ; rs232cmd.c 2152                                       SCPIError = SyntaxErr;
00161A 964842rr        7565         MOV.B   ES,#SEG( _SCPIError )
00161E 9908rrrr        7566         MOV.W   R0,#SOF( _SCPIError )
001622 BA03            7567         MOV.W   [R0],#03H
001624 FE7B            7568         BR      _350
001624 FE7B            7568         BR      _350
001626                 7569 _336:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 126

ADDR   CODE            LINE SOURCELINE
                       7570 ; rs232cmd.c 2153                               else
                       7571 ; rs232cmd.c 2154                               {
                       7572 ; rs232cmd.c 2155                                       MinVal = Calibration.GenlockCalibration.D
                            ACFactValue - 150;
001626 964842rr        7574         MOV.B   ES,#SEG( _Calibration+118 )
00162A 9908rrrr        7575         MOV.W   R0,#SOF( _Calibration+118 )
00162E 8A00            7576         MOV.W   R0,[R0]
001630 8950            7577         MOV.W   R5,R0
001632 8945            7578         MOV.W   R4,R5
001634 99520096        7579         SUB.W   R5,#096H
                       7581 ; rs232cmd.c 2156                                       MaxVal = Calibration.GenlockCalibration.D
                            ACFactValue + 150;
001638 99400096        7583         ADD.W   R4,#096H
                       7585 ; rs232cmd.c 2157       
                       7586 ; rs232cmd.c 2158                                       tmp = FindParameter( Cmd, MinMaxPar);
00163C 9938rrrr        7588         MOV.W   R3,#SEG( _MinMaxPar )
001640 9928rrrr        7589         MOV.W   R2,#SOF( _MinMaxPar )
001644 9918rrrr        7590         MOV.W   R1,#SEG( _Cmd )
001648 9908rrrr        7591         MOV.W   R0,#SOF( _Cmd )
00164C C524D6          7592         CALL    _FindParameter
                       7594 ; rs232cmd.c 2159               
                       7595 ; rs232cmd.c 2160                                       if ( tmp > -1)
00164F 9904FFFF        7597         CMP.W   R0,#0FFFFH
001653 FD21            7598         BLE     _339
                       7599 ; rs232cmd.c 2161                                       {
                       7600 ; rs232cmd.c 2162                                               if ( tmp == 0)
001655 6900            7602         OR.W    R0,R0
001657 F207            7603         BNE     _337
                       7604 ; rs232cmd.c 2163                                                       GenlockCalValue = MaxVal;
                            
001659 964842rr        7606         MOV.B   ES,#SEG( _GenlockCalValue )
00165D 9908rrrr        7607         MOV.W   R0,#SOF( _GenlockCalValue )
001661 8A48            7608         MOV.W   [R0],R4
001663 FE06            7609         BR      _338
001663 FE0600          7609         BR      _338
001666                 7610 _337:
                       7612 ; rs232cmd.c 2164                                               else
                       7613 ; rs232cmd.c 2165                                                       GenlockCalValue = MinVal;
                            
001666 964842rr        7615         MOV.B   ES,#SEG( _GenlockCalValue )
00166A 9908rrrr        7616         MOV.W   R0,#SOF( _GenlockCalValue )
00166E 8A58            7617         MOV.W   [R0],R5
00166E 8A58            7617         MOV.W   [R0],R5
001670                 7618 _338:
                       7619 ; rs232cmd.c 2166       
                       7620 ; rs232cmd.c 2167                                               sio0SndCommand( 20, SPG_V24_addre
                            ss, "GX%u;", GenlockCalValue);  
001670 99080014        7622         MOV.W   R0,#014H
001674 99180015        7624         MOV.W   R1,#015H
001678 964842rr        7625         MOV.B   ES,#SEG( _GenlockCalValue )
00167C 9928rrrr        7626         MOV.W   R2,#SOF( _GenlockCalValue )
001680 8A22            7627         MOV.W   R2,[R2]
001682 0F04            7628         PUSH.W  R2
001684 9938rrrr        7630         MOV.W   R3,#SEG( _334 )
001688 9928rrrr        7631         MOV.W   R2,#SOF( _334 )
00168C 0F0C            7632         PUSH.W  R2, R3
                       7634         CALL    _sio0SndCommand
00168E C4rrrrrr       +7634 ;       FCALL   _sio0SndCommand
001692 A976            7635         ADDS.W  R7,#06H
                       7637 ; rs232cmd.c 2168                                       }
001694 FE43            7639         BR      _350
001694 FE43            7639         BR      _350
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 127

ADDR   CODE            LINE SOURCELINE
001696                 7640 _339:
                       7642 ; rs232cmd.c 2169                                       else
                       7643 ; rs232cmd.c 2170                                       {
                       7644 ; rs232cmd.c 2171                                               tmp = FindParameter( Cmd, UpDownP
                            ar);
001696 9938rrrr        7646         MOV.W   R3,#SEG( _UpDownPar )
00169A 9928rrrr        7647         MOV.W   R2,#SOF( _UpDownPar )
00169E 9918rrrr        7648         MOV.W   R1,#SEG( _Cmd )
0016A2 9908rrrr        7649         MOV.W   R0,#SOF( _Cmd )
0016A6 C524A9          7650         CALL    _FindParameter
                       7652 ; rs232cmd.c 2172       
                       7653 ; rs232cmd.c 2173                                               if ( tmp > -1)
0016A9 9904FFFF        7655         CMP.W   R0,#0FFFFH
0016AD FD31            7656         BLE     _344
                       7657 ; rs232cmd.c 2174                                               {
                       7658 ; rs232cmd.c 2175                                                       if ( tmp == 0)
0016AF 6900            7660         OR.W    R0,R0
0016B1 F20F            7661         BNE     _340
                       7662 ; rs232cmd.c 2176                                                       {
                       7663 ; rs232cmd.c 2177                                                               if ( GenlockCalVa
                            lue > MinVal)
0016B3 964842rr        7665         MOV.B   ES,#SEG( _GenlockCalValue )
0016B7 9908rrrr        7666         MOV.W   R0,#SOF( _GenlockCalValue )
0016BB 8A00            7667         MOV.W   R0,[R0]
0016BD 4905            7669         CMP.W   R0,R5
0016BF F915            7670         BL      _343
                       7671 ; rs232cmd.c 2178                                                                       GenlockCa
                            lValue--;
0016C1 A90F            7673         ADDS.W  R0,#0FH
0016C3 964842rr        7674         MOV.B   ES,#SEG( _GenlockCalValue )
0016C7 9918rrrr        7675         MOV.W   R1,#SOF( _GenlockCalValue )
0016CB 8A09            7676         MOV.W   [R1],R0
                       7677 ; rs232cmd.c 2179                                                       }
0016CD FE0E            7679         BR      _343
0016CD FE0E00          7679         BR      _343
0016D0                 7680 _340:
                       7681 ; rs232cmd.c 2180                                                       else
                       7682 ; rs232cmd.c 2181                                                       {
                       7683 ; rs232cmd.c 2182                                                               if ( GenlockCalVa
                            lue < MaxVal)
0016D0 964842rr        7685         MOV.B   ES,#SEG( _GenlockCalValue )
0016D4 9908rrrr        7686         MOV.W   R0,#SOF( _GenlockCalValue )
0016D8 8A00            7687         MOV.W   R0,[R0]
0016DA 4904            7688         CMP.W   R0,R4
0016DC F006            7689         BCC     _343
                       7690 ; rs232cmd.c 2183                                                                       GenlockCa
                            lValue++;
0016DE A901            7692         ADDS.W  R0,#01H
0016E0 964842rr        7693         MOV.B   ES,#SEG( _GenlockCalValue )
0016E4 9918rrrr        7694         MOV.W   R1,#SOF( _GenlockCalValue )
0016E8 8A09            7695         MOV.W   [R1],R0
                       7696 ; rs232cmd.c 2184                                                       }
0016EA                 7698 _343:
                       7699 ; rs232cmd.c 2185       
                       7700 ; rs232cmd.c 2186                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%u;", GenlockCalValue);
0016EA 99080014        7702         MOV.W   R0,#014H
0016EE 99180015        7703         MOV.W   R1,#015H
0016F2 964842rr        7704         MOV.B   ES,#SEG( _GenlockCalValue )
0016F6 9928rrrr        7705         MOV.W   R2,#SOF( _GenlockCalValue )
0016FA 8A22            7706         MOV.W   R2,[R2]
0016FC 0F04            7707         PUSH.W  R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 128

ADDR   CODE            LINE SOURCELINE
0016FE 9938rrrr        7709         MOV.W   R3,#SEG( _334 )
001702 9928rrrr        7710         MOV.W   R2,#SOF( _334 )
001706 0F0C            7711         PUSH.W  R2, R3
                       7713         CALL    _sio0SndCommand
001708 C4rrrrrr       +7713 ;       FCALL   _sio0SndCommand
00170C A976            7714         ADDS.W  R7,#06H
                       7716 ; rs232cmd.c 2187                                               }
00170E FE06            7718         BR      _350
00170E FE06            7718         BR      _350
001710                 7719 _344:
                       7720 ; rs232cmd.c 2188                                               else
                       7721 ; rs232cmd.c 2189                                                       SCPIError = DataOutOfRang
                            e;
001710 964842rr        7723         MOV.B   ES,#SEG( _SCPIError )
001714 9908rrrr        7724         MOV.W   R0,#SOF( _SCPIError )
001718 9A080021        7725         MOV.W   [R0],#021H
                       7726 ; rs232cmd.c 2190                                       }       
                       7727 ; rs232cmd.c 2191                               }
                       7728 ; rs232cmd.c 2192                       }
                       7729 ; rs232cmd.c 2193               }
00171C                 7731 _350:
                       7732 ; rs232cmd.c 2194       }
00171C 2F30            7734         POP.W   R4, R5
00171E D680            7736         RET
                       7738 ; rs232cmd.c 2195       
                       7739 ; rs232cmd.c 2196       /************************************************************************
                            **/
                       7740 ; rs232cmd.c 2197       /* GenlockGenCalibrateStore                                              
                                                                                                       RS232CMD.C */
                       7741 ; rs232cmd.c 2198       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7742 ; rs232cmd.c 2199       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7743 ; rs232cmd.c 2200       /* Revised:             000622                                           
                                                                                                                             
                                                                                    */
                       7744 ; rs232cmd.c 2201       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7745 ; rs232cmd.c 2202       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7746 ; rs232cmd.c 2203       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7747 ; rs232cmd.c 2204       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7748 ; rs232cmd.c 2205       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7749 ; rs232cmd.c 2206       /************************************************************************
                            **/
                       7750 ; rs232cmd.c 2207       void GenlockGenCalibrateStore( void)
                       7751 ; rs232cmd.c 2208       {
                       7752         ALIGN   1
                       7754         PUBLIC  _GenlockGenCalibrateStore
001720                 7755 _GenlockGenCalibrateStore:
                       7759 ; rs232cmd.c 2209               if ( CmdExecute && !SCPIError)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 129

ADDR   CODE            LINE SOURCELINE
001720 964842rr        7761         MOV.B   ES,#SEG( _CmdExecute )
001724 9908rrrr        7762         MOV.W   R0,#SOF( _CmdExecute )
001728 8200            7763         MOV.B   R0L,[R0]
00172A F342            7764         BEQ     _362
00172C 964842rr        7765         MOV.B   ES,#SEG( _SCPIError )
001730 9908rrrr        7766         MOV.W   R0,#SOF( _SCPIError )
001734 8A00            7767         MOV.W   R0,[R0]
001736 F23C            7768         BNE     _362
                       7769 ; rs232cmd.c 2210               {
                       7770 ; rs232cmd.c 2211                       if ( CmdRequest)
001738 964842rr        7772         MOV.B   ES,#SEG( _CmdRequest )
00173C 9908rrrr        7773         MOV.W   R0,#SOF( _CmdRequest )
001740 8200            7774         MOV.B   R0L,[R0]
001742 F306            7775         BEQ     _355
                       7776 ; rs232cmd.c 2212                                       SCPIError = SyntaxErr;
001744 964842rr        7778         MOV.B   ES,#SEG( _SCPIError )
001748 9908rrrr        7779         MOV.W   R0,#SOF( _SCPIError )
00174C BA03            7780         MOV.W   [R0],#03H
00174E D680            7781         RET
00174E D680            7781         RET
001750                 7782 _355:
                       7783 ; rs232cmd.c 2213                       else
                       7784 ; rs232cmd.c 2214                       {
                       7785 ; rs232cmd.c 2215                               if ( ParCnt)
001750 964842rr        7787         MOV.B   ES,#SEG( _ParCnt )
001754 9908rrrr        7788         MOV.W   R0,#SOF( _ParCnt )
001758 8200            7789         MOV.B   R0L,[R0]
00175A F306            7790         BEQ     _356
                       7791 ; rs232cmd.c 2216                                       SCPIError = ParNotAllowed;
00175C 964842rr        7793         MOV.B   ES,#SEG( _SCPIError )
001760 9908rrrr        7794         MOV.W   R0,#SOF( _SCPIError )
001764 BA06            7795         MOV.W   [R0],#06H
001766 D680            7796         RET
001766 D680            7796         RET
001768                 7797 _356:
                       7798 ; rs232cmd.c 2217                               else
                       7799 ; rs232cmd.c 2218                               {
                       7800 ; rs232cmd.c 2219                                       if ( GenlockCalEnable)
001768 964842rr        7802         MOV.B   ES,#SEG( _GenlockCalEnable )
00176C 9908rrrr        7803         MOV.W   R0,#SOF( _GenlockCalEnable )
001770 8200            7804         MOV.B   R0L,[R0]
001772 F318            7805         BEQ     _357
                       7806 ; rs232cmd.c 2220                                       {
                       7807 ; rs232cmd.c 2221                                               Calibration.GenlockCalibration.DA
                            CUserValue = GenlockCalValue;
001774 964842rr        7809         MOV.B   ES,#SEG( _GenlockCalValue )
001778 9908rrrr        7810         MOV.W   R0,#SOF( _GenlockCalValue )
00177C 8A00            7811         MOV.W   R0,[R0]
00177E 964842rr        7812         MOV.B   ES,#SEG( _Calibration+120 )
001782 9918rrrr        7813         MOV.W   R1,#SOF( _Calibration+120 )
001786 8A09            7814         MOV.W   [R1],R0
                       7815 ; rs232cmd.c 2222                                                               
                       7816 ; rs232cmd.c 2223                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
001788 9918rrrr        7818         MOV.W   R1,#SEG( _Calibration )
00178C 9908rrrr        7819         MOV.W   R0,#SOF( _Calibration )
001790 964842rr        7820         MOV.B   ES,#SEG( _CalibrationPtr )
001794 9928rrrr        7821         MOV.W   R2,#SOF( _CalibrationPtr )
001798 8A22            7822         MOV.W   R2,[R2]
00179A 993800E0        7823         MOV.W   R3,#0E0H
                       7824         CALL    _NV_Store
00179E C4rrrrrr       +7824 ;       FCALL   _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 130

ADDR   CODE            LINE SOURCELINE
                       7825 ; rs232cmd.c 2224                                       }
0017A2 D680            7827         RET
0017A2 D680            7827         RET
0017A4                 7828 _357:
                       7829 ; rs232cmd.c 2225                                       else
                       7830 ; rs232cmd.c 2226                                               SCPIError = ExecErr;             
                                                    
0017A4 964842rr        7832         MOV.B   ES,#SEG( _SCPIError )
0017A8 9908rrrr        7833         MOV.W   R0,#SOF( _SCPIError )
0017AC 9A08001D        7834         MOV.W   [R0],#01DH
                       7835 ; rs232cmd.c 2227                               }
                       7836 ; rs232cmd.c 2228                       }
                       7837 ; rs232cmd.c 2229               }
0017B0                 7839 _362:
                       7840 ; rs232cmd.c 2230       }
0017B0 D680            7842         RET
                       7844 ; rs232cmd.c 2231       
                       7845 ; rs232cmd.c 2232       /************************************************************************
                            **/
                       7846 ; rs232cmd.c 2233       /* BBSuffix                                                              
                                                                                                                             
                                                               RS232CMD.C   */
                       7847 ; rs232cmd.c 2234       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7848 ; rs232cmd.c 2235       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       7849 ; rs232cmd.c 2236       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       7850 ; rs232cmd.c 2237       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7851 ; rs232cmd.c 2238       /* Function:    Get suffix of the Black Burst generator                  
                                                                                            */
                       7852 ; rs232cmd.c 2239       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7853 ; rs232cmd.c 2240       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7854 ; rs232cmd.c 2241       /* Updates:             Suffix                                           
                                                                                                                             
                                                                                                    */
                       7855 ; rs232cmd.c 2242       /************************************************************************
                            **/
                       7856 ; rs232cmd.c 2243       void BBGenSuffix( void)
                       7857 ; rs232cmd.c 2244       {
                       7858         ALIGN   1
                       7860         PUBLIC  _BBGenSuffix
0017B2                 7861 _BBGenSuffix:
                       7865 ; rs232cmd.c 2245               if ( NumSuffix > 3)
0017B2 964842rr        7867         MOV.B   ES,#SEG( _NumSuffix )
0017B6 9908rrrr        7868         MOV.W   R0,#SOF( _NumSuffix )
0017BA 8A00            7869         MOV.W   R0,[R0]
0017BC 99040003        7870         CMP.W   R0,#03H
0017C0 F907            7871         BL      _363
                       7872 ; rs232cmd.c 2246                       SCPIError = HdrSuffixOutOfRange;
0017C2 964842rr        7874         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 131

ADDR   CODE            LINE SOURCELINE
0017C6 9908rrrr        7875         MOV.W   R0,#SOF( _SCPIError )
0017CA 9A08000C        7876         MOV.W   [R0],#0CH
0017CE D680            7877         RET
0017CE D680            7877         RET
0017D0                 7878 _363:
                       7879 ; rs232cmd.c 2247               else
                       7880 ; rs232cmd.c 2248                       Suffix[0] = NumSuffix-1;
0017D0 A90F            7882         ADDS.W  R0,#0FH
0017D2 964842rr        7883         MOV.B   ES,#SEG( _Suffix )
0017D6 9918rrrr        7884         MOV.W   R1,#SOF( _Suffix )
0017DA 8A09            7885         MOV.W   [R1],R0
0017DA 8A09            7885         MOV.W   [R1],R0
0017DC                 7886 _364:
                       7887 ; rs232cmd.c 2249       
                       7888 ; rs232cmd.c 2250       }
0017DC D680            7890         RET
                       7892 ; rs232cmd.c 2251       
                       7893 ; rs232cmd.c 2252       /************************************************************************
                            **/
                       7894 ; rs232cmd.c 2253       /* BBGen                                                                 
                                                                                                                             
                                                                         RS232CMD.C */
                       7895 ; rs232cmd.c 2254       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7896 ; rs232cmd.c 2255       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       7897 ; rs232cmd.c 2256       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       7898 ; rs232cmd.c 2257       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7899 ; rs232cmd.c 2258       /* Function:    Handle the Black Burst command.                          
                                                                                                                    */
                       7900 ; rs232cmd.c 2259       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                    */
                       7901 ; rs232cmd.c 2260       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7902 ; rs232cmd.c 2261       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7903 ; rs232cmd.c 2262       /************************************************************************
                            **/
                       7904 ; rs232cmd.c 2263       void BBGen( void)
                       7905 ; rs232cmd.c 2264       {
                       7906         ALIGN   1
                       7908         PUBLIC  _BBGen
0017DE                 7909 _BBGen:
0017DE 0F30            7913         PUSH.W  R4, R5
                       7917 ; rs232cmd.c 2265               char code *str;
                       7918 ; rs232cmd.c 2266       
                       7919 ; rs232cmd.c 2267               if ( CmdExecute && !SCPIError)
0017E0 964842rr        7921         MOV.B   ES,#SEG( _CmdExecute )
0017E4 9908rrrr        7922         MOV.W   R0,#SOF( _CmdExecute )
0017E8 8200            7923         MOV.B   R0L,[R0]
                       7924         BEQ     _374
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 132

ADDR   CODE            LINE SOURCELINE
0017EA F202           +7924 ;       BNE     _LG_410
0017EC D50081         +7924 ;       JMP.L   _374
0017EC D5008100       +7924 ;       JMP.L   _374
0017F0                +7924 _LG_410:
0017F0 964842rr        7925         MOV.B   ES,#SEG( _SCPIError )
0017F4 9908rrrr        7926         MOV.W   R0,#SOF( _SCPIError )
0017F8 8A00            7927         MOV.W   R0,[R0]
0017FA F27A            7928         BNE     _374
                       7929 ; rs232cmd.c 2268               {
                       7930 ; rs232cmd.c 2269                       if ( !CmdRequest)
0017FC 964842rr        7932         MOV.B   ES,#SEG( _CmdRequest )
001800 9908rrrr        7933         MOV.W   R0,#SOF( _CmdRequest )
001804 8200            7934         MOV.B   R0L,[R0]
001806 F206            7935         BNE     _367
                       7936 ; rs232cmd.c 2270                                       SCPIError = SyntaxErr;
001808 964842rr        7938         MOV.B   ES,#SEG( _SCPIError )
00180C 9908rrrr        7939         MOV.W   R0,#SOF( _SCPIError )
001810 BA03            7940         MOV.W   [R0],#03H
001812 FE6E            7941         BR      _374
001812 FE6E            7941         BR      _374
001814                 7942 _367:
                       7943 ; rs232cmd.c 2271                       else
                       7944 ; rs232cmd.c 2272                       {
                       7945 ; rs232cmd.c 2273                               if ( ParCnt)
001814 964842rr        7947         MOV.B   ES,#SEG( _ParCnt )
001818 9908rrrr        7948         MOV.W   R0,#SOF( _ParCnt )
00181C 8200            7949         MOV.B   R0L,[R0]
00181E F306            7950         BEQ     _368
                       7951 ; rs232cmd.c 2274                                       SCPIError = ParNotAllowed;
001820 964842rr        7953         MOV.B   ES,#SEG( _SCPIError )
001824 9908rrrr        7954         MOV.W   R0,#SOF( _SCPIError )
001828 BA06            7955         MOV.W   [R0],#06H
00182A FE62            7956         BR      _374
00182A FE62            7956         BR      _374
00182C                 7957 _368:
                       7958 ; rs232cmd.c 2275                               else
                       7959 ; rs232cmd.c 2276                               {
                       7960 ; rs232cmd.c 2277                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
00182C 964842rr        7962         MOV.B   ES,#SEG( _Suffix )
001830 9908rrrr        7963         MOV.W   R0,#SOF( _Suffix )
001834 8A00            7964         MOV.W   R0,[R0]
001836 D903            7965         ASL.W   R0,#03H
001838 B910            7966         MOVS.W  R1,#00H
00183A 964842rr        7967         MOV.B   ES,#SEG( _BBSetup )
00183E 8500rrrr        7968         MOV.B   R0L,[R0+SOF( _BBSetup )]
001842 E8000C          7969         MULU.B  R0L,#0CH
001845 8920            7970         MOV.W   R2,R0
001847 B930            7971         MOVS.W  R3,#00H
001849 9918rrrr        7972         MOV.W   R1,#SEG( _SystemPar )
00184D 9908rrrr        7973         MOV.W   R0,#SOF( _SystemPar )
001851 0902            7974         ADD.W   R0,R2
001853 1913            7975         ADDC.W  R1,R3
001855 862C43          7976         MOV.B   CS,R1L
001858 8820            7977         MOVC.W  R2,[R0+]
00185A 99040000        7978         CMP.W   R0,#00H
00185E F202            7979         BNE     _375
001860 A64143          7980         ADDS.B  CS,#01H
001860 A6414300        7980         ADDS.B  CS,#01H
001864                 7981 _375:
001864 8830            7982         MOVC.W  R3,[R0+]
001866 8953            7983         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 133

ADDR   CODE            LINE SOURCELINE
001868 8942            7984         MOV.W   R4,R2
                       7986 ; rs232cmd.c 2278       
                       7987 ; rs232cmd.c 2279                                       while ( *str)
00186A 866C43          7989         MOV.B   CS,R3L
00186D 8062            7990         MOVC.B  R3L,[R2+]
00186F F312            7991         BEQ     _370
00186F F31200          7991         BEQ     _370
001872                 7992 _369:
                       7993 ; rs232cmd.c 2280                                               rs232putchar( *str++);
001872 8915            7995         MOV.W   R1,R5
001874 8904            7996         MOV.W   R0,R4
001876 862C43          7997         MOV.B   CS,R1L
001879 8020            7998         MOVC.B  R1L,[R0+]
00187B 8102            7999         MOV.B   R0L,R1L
                       8000         CALL    _rs232putchar
00187D C4rrrrrr       +8000 ;       FCALL   _rs232putchar
001881 99400001        8001         ADD.W   R4,#01H
001885 99510000        8002         ADDC.W  R5,#00H
001889 8915            8006         MOV.W   R1,R5
00188B 8904            8007         MOV.W   R0,R4
00188D 862C43          8008         MOV.B   CS,R1L
001890 8020            8009         MOVC.B  R1L,[R0+]
001892 F2EF            8010         BNE     _369
001894                 8012 _370:
                       8013 ; rs232cmd.c 2281       
                       8014 ; rs232cmd.c 2282                                       rs232putchar( ',');
001894 91082C          8016         MOV.B   R0L,#02CH
                       8017         CALL    _rs232putchar
001897 C4rrrrrr       +8017 ;       FCALL   _rs232putchar
                       8018 ; rs232cmd.c 2283       
                       8019 ; rs232cmd.c 2284                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
00189B 964842rr        8021         MOV.B   ES,#SEG( _Suffix )
00189F 9928rrrr        8022         MOV.W   R2,#SOF( _Suffix )
0018A3 8A22            8023         MOV.W   R2,[R2]
0018A5 D923            8024         ASL.W   R2,#03H
0018A7 8902            8025         MOV.W   R0,R2
0018A9 B910            8026         MOVS.W  R1,#00H
0018AB 964842rr        8027         MOV.B   ES,#SEG( _BBSetup )
0018AF 8500rrrr        8028         MOV.B   R0L,[R0+SOF( _BBSetup )]
0018B3 B930            8029         MOVS.W  R3,#00H
0018B5 964842rr        8030         MOV.B   ES,#SEG( _BBSetup+2 )
0018B9 8D32rrrr        8031         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
0018BD 8D22rrrr        8032         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
0018C1 C52623          8033         CALL    _PrintSamplesToFLT
                       8034 ; rs232cmd.c 2285       
                       8035 ; rs232cmd.c 2286                                       rs232printf( 6, ",%d\n", BBSetup[Suffix[0
                            ]].ScHPhase);
0018C4 B906            8037         MOV.W   R0,#06H
0018C6 964842rr        8038         MOV.B   ES,#SEG( _Suffix )
0018CA 9918rrrr        8039         MOV.W   R1,#SOF( _Suffix )
0018CE 8A11            8040         MOV.W   R1,[R1]
0018D0 D913            8041         ASL.W   R1,#03H
0018D2 8921            8042         MOV.W   R2,R1
0018D4 B930            8043         MOVS.W  R3,#00H
0018D6 964842rr        8044         MOV.B   ES,#SEG( _BBSetup+6 )
0018DA 8D12rrrr        8045         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
0018DE 0F02            8046         PUSH.W  R1
0018E0 9938rrrr        8048         MOV.W   R3,#SEG( _366 )
0018E4 9928rrrr        8049         MOV.W   R2,#SOF( _366 )
0018E8 0F0C            8050         PUSH.W  R2, R3
                       8052         CALL    _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 134

ADDR   CODE            LINE SOURCELINE
0018EA C4rrrrrr       +8052 ;       FCALL   _rs232printf
0018EE A976            8053         ADDS.W  R7,#06H
                       8055 ; rs232cmd.c 2287                               }
                       8056 ; rs232cmd.c 2288                       }
                       8057 ; rs232cmd.c 2289               }
0018F0                 8059 _374:
                       8060 ; rs232cmd.c 2290       }
0018F0 2F30            8062         POP.W   R4, R5
0018F2 D680            8064         RET
                       8067 ; rs232cmd.c 2291       
                       8068 ; rs232cmd.c 2292       /************************************************************************
                            **/
                       8069 ; rs232cmd.c 2293       /* BBGenSystem                                                           
                                                                                                                             
                                             RS232CMD.C     */
                       8070 ; rs232cmd.c 2294       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8071 ; rs232cmd.c 2295       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8072 ; rs232cmd.c 2296       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       8073 ; rs232cmd.c 2297       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8074 ; rs232cmd.c 2298       /* Function:    Handle the Black Burst system-command.                   
                                                                                            */
                       8075 ; rs232cmd.c 2299       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8076 ; rs232cmd.c 2300       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8077 ; rs232cmd.c 2301       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8078 ; rs232cmd.c 2302       /************************************************************************
                            **/
                       8079 ; rs232cmd.c 2303       void BBGenSystem( void)
                       8080 ; rs232cmd.c 2304       {
                       8081         ALIGN   1
                       8083         PUBLIC  _BBGenSystem
0018F4                 8084 _BBGenSystem:
0018F4 0F30            8088         PUSH.W  R4, R5
                       8094 ; rs232cmd.c 2305               int system;
                       8095 ; rs232cmd.c 2306               char code *str;
                       8096 ; rs232cmd.c 2307       
                       8097 ; rs232cmd.c 2308               if ( CmdExecute && !SCPIError)
0018F6 964842rr        8099         MOV.B   ES,#SEG( _CmdExecute )
0018FA 9908rrrr        8100         MOV.W   R0,#SOF( _CmdExecute )
0018FE 8200            8101         MOV.B   R0L,[R0]
001900 F37B            8102         BEQ     _387
001902 964842rr        8103         MOV.B   ES,#SEG( _SCPIError )
001906 9908rrrr        8104         MOV.W   R0,#SOF( _SCPIError )
00190A 8A00            8105         MOV.W   R0,[R0]
00190C F275            8106         BNE     _387
                       8107 ; rs232cmd.c 2309               {
                       8108 ; rs232cmd.c 2310                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 135

ADDR   CODE            LINE SOURCELINE
00190E 964842rr        8110         MOV.B   ES,#SEG( _CmdRequest )
001912 9908rrrr        8111         MOV.W   R0,#SOF( _CmdRequest )
001916 8200            8112         MOV.B   R0L,[R0]
001918 F345            8113         BEQ     _379
                       8114 ; rs232cmd.c 2311                       {
                       8115 ; rs232cmd.c 2312                               if ( ParCnt)
00191A 964842rr        8117         MOV.B   ES,#SEG( _ParCnt )
00191E 9908rrrr        8118         MOV.W   R0,#SOF( _ParCnt )
001922 8200            8119         MOV.B   R0L,[R0]
001924 F306            8120         BEQ     _376
                       8121 ; rs232cmd.c 2313                                       SCPIError = ParNotAllowed;
001926 964842rr        8123         MOV.B   ES,#SEG( _SCPIError )
00192A 9908rrrr        8124         MOV.W   R0,#SOF( _SCPIError )
00192E BA06            8125         MOV.W   [R0],#06H
001930 FE63            8126         BR      _387
001930 FE63            8126         BR      _387
001932                 8127 _376:
                       8128 ; rs232cmd.c 2314                               else
                       8129 ; rs232cmd.c 2315                               {
                       8130 ; rs232cmd.c 2316                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
001932 964842rr        8132         MOV.B   ES,#SEG( _Suffix )
001936 9908rrrr        8133         MOV.W   R0,#SOF( _Suffix )
00193A 8A00            8134         MOV.W   R0,[R0]
00193C D903            8135         ASL.W   R0,#03H
00193E B910            8136         MOVS.W  R1,#00H
001940 964842rr        8137         MOV.B   ES,#SEG( _BBSetup )
001944 8500rrrr        8138         MOV.B   R0L,[R0+SOF( _BBSetup )]
001948 E8000C          8139         MULU.B  R0L,#0CH
00194B 8920            8140         MOV.W   R2,R0
00194D B930            8141         MOVS.W  R3,#00H
00194F 9918rrrr        8142         MOV.W   R1,#SEG( _SystemPar )
001953 9908rrrr        8143         MOV.W   R0,#SOF( _SystemPar )
001957 0902            8144         ADD.W   R0,R2
001959 1913            8145         ADDC.W  R1,R3
00195B 862C43          8146         MOV.B   CS,R1L
00195E 8820            8147         MOVC.W  R2,[R0+]
001960 99040000        8148         CMP.W   R0,#00H
001964 F202            8149         BNE     _388
001966 A64143          8150         ADDS.B  CS,#01H
001966 A6414300        8150         ADDS.B  CS,#01H
00196A                 8151 _388:
00196A 8830            8152         MOVC.W  R3,[R0+]
00196C 8953            8153         MOV.W   R5,R3
00196E 8942            8154         MOV.W   R4,R2
                       8156 ; rs232cmd.c 2317       
                       8157 ; rs232cmd.c 2318                                       while ( *str)
001970 866C43          8159         MOV.B   CS,R3L
001973 8062            8160         MOVC.B  R3L,[R2+]
001975 F312            8161         BEQ     _378
001975 F31200          8161         BEQ     _378
001978                 8162 _377:
                       8163 ; rs232cmd.c 2319                                               rs232putchar( *str++);
001978 8915            8165         MOV.W   R1,R5
00197A 8904            8166         MOV.W   R0,R4
00197C 862C43          8167         MOV.B   CS,R1L
00197F 8020            8168         MOVC.B  R1L,[R0+]
001981 8102            8169         MOV.B   R0L,R1L
                       8170         CALL    _rs232putchar
001983 C4rrrrrr       +8170 ;       FCALL   _rs232putchar
001987 99400001        8171         ADD.W   R4,#01H
00198B 99510000        8172         ADDC.W  R5,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 136

ADDR   CODE            LINE SOURCELINE
00198F 8915            8176         MOV.W   R1,R5
001991 8904            8177         MOV.W   R0,R4
001993 862C43          8178         MOV.B   CS,R1L
001996 8020            8179         MOVC.B  R1L,[R0+]
001998 F2EF            8180         BNE     _377
00199A                 8182 _378:
                       8183 ; rs232cmd.c 2320       
                       8184 ; rs232cmd.c 2321                                       rs232putchar('\n');
00199A 91080A          8186         MOV.B   R0L,#0AH
                       8187         CALL    _rs232putchar
00199D C4rrrrrr       +8187 ;       FCALL   _rs232putchar
                       8188 ; rs232cmd.c 2322                               }
                       8189 ; rs232cmd.c 2323                       }
0019A1 FE2B            8191         BR      _387
0019A1 FE2B00          8191         BR      _387
0019A4                 8192 _379:
                       8193 ; rs232cmd.c 2324                       else
                       8194 ; rs232cmd.c 2325                       {
                       8195 ; rs232cmd.c 2326                               if ( ParCnt != 1)
0019A4 964842rr        8197         MOV.B   ES,#SEG( _ParCnt )
0019A8 9908rrrr        8198         MOV.W   R0,#SOF( _ParCnt )
0019AC 8200            8199         MOV.B   R0L,[R0]
0019AE 910401          8200         CMP.B   R0L,#01H
0019B1 F307            8201         BEQ     _380
                       8202 ; rs232cmd.c 2327                                       SCPIError = SyntaxErr;
0019B3 964842rr        8204         MOV.B   ES,#SEG( _SCPIError )
0019B7 9908rrrr        8205         MOV.W   R0,#SOF( _SCPIError )
0019BB BA03            8206         MOV.W   [R0],#03H
0019BD FE1D            8207         BR      _387
0019BD FE1D00          8207         BR      _387
0019C0                 8208 _380:
                       8209 ; rs232cmd.c 2328                               else
                       8210 ; rs232cmd.c 2329                               {
                       8211 ; rs232cmd.c 2330                                       system = FindParameter( Cmd, SystemPar);
0019C0 9918rrrr        8213         MOV.W   R1,#SEG( _Cmd )
0019C4 9908rrrr        8214         MOV.W   R0,#SOF( _Cmd )
0019C8 9938rrrr        8215         MOV.W   R3,#SEG( _SystemPar )
0019CC 9928rrrr        8216         MOV.W   R2,#SOF( _SystemPar )
0019D0 C52314          8217         CALL    _FindParameter
                       8219 ; rs232cmd.c 2331       
                       8220 ; rs232cmd.c 2332                                       if ( system > -1)
0019D3 8910            8222         MOV.W   R1,R0
0019D5 9914FFFF        8223         CMP.W   R1,#0FFFFH
0019D9 FD09            8226         BLE     _381
                       8227 ; rs232cmd.c 2333                                               SetBBSystem( Suffix[0], system);
0019DB 964842rr        8229         MOV.B   ES,#SEG( _Suffix )
0019DF 9908rrrr        8230         MOV.W   R0,#SOF( _Suffix )
0019E3 8A00            8231         MOV.W   R0,[R0]
                       8232         CALL    _SetBBSystem
0019E5 C4rrrrrr       +8232 ;       FCALL   _SetBBSystem
0019E9 FE07            8234         BR      _387
0019E9 FE0700          8234         BR      _387
0019EC                 8235 _381:
                       8236 ; rs232cmd.c 2334                                       else
                       8237 ; rs232cmd.c 2335                                               SCPIError = DataOutOfRange;
0019EC 964842rr        8239         MOV.B   ES,#SEG( _SCPIError )
0019F0 9908rrrr        8240         MOV.W   R0,#SOF( _SCPIError )
0019F4 9A080021        8241         MOV.W   [R0],#021H
                       8242 ; rs232cmd.c 2336                               }
                       8243 ; rs232cmd.c 2337                       }
                       8244 ; rs232cmd.c 2338               }
0019F8                 8246 _387:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 137

ADDR   CODE            LINE SOURCELINE
                       8247 ; rs232cmd.c 2339       }
0019F8 2F30            8249         POP.W   R4, R5
0019FA D680            8251         RET
                       8254 ; rs232cmd.c 2340       
                       8255 ; rs232cmd.c 2341       /************************************************************************
                            **/
                       8256 ; rs232cmd.c 2342       /* BBGenDelay                                                            
                                                                                                                             
                                                     RS232CMD.C     */
                       8257 ; rs232cmd.c 2343       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8258 ; rs232cmd.c 2344       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8259 ; rs232cmd.c 2345       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */                              
                       8260 ; rs232cmd.c 2346       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8261 ; rs232cmd.c 2347       /* Function:    Handle the Black Burst timing command.                   
                                                                                            */
                       8262 ; rs232cmd.c 2348       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8263 ; rs232cmd.c 2349       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8264 ; rs232cmd.c 2350       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8265 ; rs232cmd.c 2351       /************************************************************************
                            **/
                       8266 ; rs232cmd.c 2352       void BBGenDelay( void)
                       8267 ; rs232cmd.c 2353       {
                       8268         ALIGN   1
                       8270         PUBLIC  _BBGenDelay
0019FC                 8271 _BBGenDelay:
0019FC 0F30            8275         PUSH.W  R4, R5
0019FE A978            8277         ADDS.W  R7,#08H
                       8284 ; rs232cmd.c 2354               int field, line;
                       8285 ; rs232cmd.c 2355               float offset;
                       8286 ; rs232cmd.c 2356               long samples;
                       8287 ; rs232cmd.c 2357       
                       8288 ; rs232cmd.c 2358               if ( CmdExecute && !SCPIError)
001A00 964842rr        8290         MOV.B   ES,#SEG( _CmdExecute )
001A04 9908rrrr        8291         MOV.W   R0,#SOF( _CmdExecute )
001A08 8200            8292         MOV.B   R0L,[R0]
                       8293         BEQ     _401
001A0A F202           +8293 ;       BNE     _LG_442
001A0C D5008E         +8293 ;       JMP.L   _401
001A0C D5008E00       +8293 ;       JMP.L   _401
001A10                +8293 _LG_442:
001A10 964842rr        8294         MOV.B   ES,#SEG( _SCPIError )
001A14 9908rrrr        8295         MOV.W   R0,#SOF( _SCPIError )
001A18 8A00            8296         MOV.W   R0,[R0]
                       8297         BNE     _401
001A1A F302           +8297 ;       BEQ     _LG_444
001A1C D50086         +8297 ;       JMP.L   _401
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 138

ADDR   CODE            LINE SOURCELINE
001A1C D5008600       +8297 ;       JMP.L   _401
001A20                +8297 _LG_444:
                       8298 ; rs232cmd.c 2359               {
                       8299 ; rs232cmd.c 2360                       if ( CmdRequest)
001A20 964842rr        8301         MOV.B   ES,#SEG( _CmdRequest )
001A24 9908rrrr        8302         MOV.W   R0,#SOF( _CmdRequest )
001A28 8200            8303         MOV.B   R0L,[R0]
001A2A F327            8304         BEQ     _392
                       8305 ; rs232cmd.c 2361                       {
                       8306 ; rs232cmd.c 2362                               if ( ParCnt)
001A2C 964842rr        8308         MOV.B   ES,#SEG( _ParCnt )
001A30 9908rrrr        8309         MOV.W   R0,#SOF( _ParCnt )
001A34 8200            8310         MOV.B   R0L,[R0]
001A36 F306            8311         BEQ     _391
                       8312 ; rs232cmd.c 2363                                       SCPIError = ParNotAllowed;
001A38 964842rr        8314         MOV.B   ES,#SEG( _SCPIError )
001A3C 9908rrrr        8315         MOV.W   R0,#SOF( _SCPIError )
001A40 BA06            8316         MOV.W   [R0],#06H
001A42 FE73            8317         BR      _401
001A42 FE73            8317         BR      _401
001A44                 8318 _391:
                       8319 ; rs232cmd.c 2364                               else
                       8320 ; rs232cmd.c 2365                               {
                       8321 ; rs232cmd.c 2366                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
001A44 964842rr        8323         MOV.B   ES,#SEG( _Suffix )
001A48 9908rrrr        8324         MOV.W   R0,#SOF( _Suffix )
001A4C 8A00            8325         MOV.W   R0,[R0]
001A4E 8910            8326         MOV.W   R1,R0
001A50 D913            8327         ASL.W   R1,#03H
001A52 8921            8328         MOV.W   R2,R1
001A54 B930            8329         MOVS.W  R3,#00H
001A56 964842rr        8330         MOV.B   ES,#SEG( _BBSetup )
001A5A 8502rrrr        8331         MOV.B   R0L,[R2+SOF( _BBSetup )]
001A5E 8921            8332         MOV.W   R2,R1
001A60 B930            8333         MOVS.W  R3,#00H
001A62 964842rr        8334         MOV.B   ES,#SEG( _BBSetup+2 )
001A66 8D32rrrr        8335         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
001A6A 8D22rrrr        8336         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
001A6E C5254D          8337         CALL    _PrintSamplesToFLT
                       8338 ; rs232cmd.c 2367       
                       8339 ; rs232cmd.c 2368                                       rs232putchar ( '\n');
001A71 91080A          8341         MOV.B   R0L,#0AH
                       8342         CALL    _rs232putchar
001A74 C4rrrrrr       +8342 ;       FCALL   _rs232putchar
                       8343 ; rs232cmd.c 2369                               }
                       8344 ; rs232cmd.c 2370                       }
001A78 FE58            8346         BR      _401
001A78 FE58            8346         BR      _401
001A7A                 8347 _392:
                       8348 ; rs232cmd.c 2371                       else
                       8349 ; rs232cmd.c 2372                       {
                       8350 ; rs232cmd.c 2373                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
001A7A 964842rr        8352         MOV.B   ES,#SEG( _ParCnt )
001A7E 9908rrrr        8353         MOV.W   R0,#SOF( _ParCnt )
001A82 8200            8354         MOV.B   R0L,[R0]
001A84 910403          8355         CMP.B   R0L,#03H
001A87 F21F            8356         BNE     _393
001A89 9168rr          8357         MOV.B   R3L,#SEG( __lc_bs )
001A8C 7177            8358         XOR.B   R3H,R3H
001A8E 8927            8359         MOV.W   R2,R7
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 139

ADDR   CODE            LINE SOURCELINE
001A90 91A8rr          8360         MOV.B   R5L,#SEG( __lc_bs )
001A93 71BB            8361         XOR.B   R5H,R5H
001A95 404702          8362         LEA     R4,R7+2
001A98 9128rr          8363         MOV.B   R1L,#SEG( __lc_bs )
001A9B 7133            8364         XOR.B   R1H,R1H
001A9D 400704          8365         LEA     R0,R7+4
001AA0 0F03            8366         PUSH.W  R0, R1
001AA2 0F30            8368         PUSH.W  R4, R5
001AA4 0F0C            8370         PUSH.W  R2, R3
001AA6 9938rrrr        8372         MOV.W   R3,#SEG( _299 )
001AAA 9928rrrr        8373         MOV.W   R2,#SOF( _299 )
001AAE 0F0C            8374         PUSH.W  R2, R3
001AB0 9918rrrr        8376         MOV.W   R1,#SEG( _Cmd )
001AB4 9908rrrr        8377         MOV.W   R0,#SOF( _Cmd )
                       8378         CALL    _sscanf
001AB8 C4rrrrrr       +8378 ;       FCALL   _sscanf
001ABC 99700010        8379         ADD.W   R7,#010H
001AC0 99040003        8381         CMP.W   R0,#03H
001AC4 F306            8382         BEQ     _394
001AC4 F306            8382         BEQ     _394
001AC6                 8383 _393:
                       8384 ; rs232cmd.c 2374                                       SCPIError = SyntaxErr;
001AC6 964842rr        8386         MOV.B   ES,#SEG( _SCPIError )
001ACA 9908rrrr        8387         MOV.W   R0,#SOF( _SCPIError )
001ACE BA03            8388         MOV.W   [R0],#03H
001AD0 FE2C            8389         BR      _401
001AD0 FE2C            8389         BR      _401
001AD2                 8390 _394:
                       8391 ; rs232cmd.c 2375                               else
                       8392 ; rs232cmd.c 2376                               {
                       8393 ; rs232cmd.c 2377                                       if (( samples = FLTToSamples( BBSetup[Suf
                            fix[0]].System, field, line, offset)) == -1)
001AD2 964842rr        8395         MOV.B   ES,#SEG( _Suffix )
001AD6 9908rrrr        8396         MOV.W   R0,#SOF( _Suffix )
001ADA 8A00            8397         MOV.W   R0,[R0]
001ADC D903            8398         ASL.W   R0,#03H
001ADE B910            8399         MOVS.W  R1,#00H
001AE0 964842rr        8400         MOV.B   ES,#SEG( _BBSetup )
001AE4 8500rrrr        8401         MOV.B   R0L,[R0+SOF( _BBSetup )]
001AE8 8A17            8402         MOV.W   R1,[R7]
001AEA 8C2702          8403         MOV.W   R2,[R7+2]
001AED 8C5706          8404         MOV.W   R5,[R7+6]
001AF0 8C4704          8405         MOV.W   R4,[R7+4]
001AF3 0F30            8406         PUSH.W  R4, R5
001AF5 C522CE          8408         CALL    _FLTToSamples
001AF8 A974            8409         ADDS.W  R7,#04H
001AFA 8931            8411         MOV.W   R3,R1
001AFC 8920            8412         MOV.W   R2,R0
001AFE 8913            8413         MOV.W   R1,R3
001B00 8902            8414         MOV.W   R0,R2
001B02 9914FFFF        8415         CMP.W   R1,#0FFFFH
001B06 F202            8416         BNE     _404
001B08 9904FFFF        8417         CMP.W   R0,#0FFFFH
001B08 9904FFFF        8417         CMP.W   R0,#0FFFFH
001B0C                 8418 _404:
001B0C F207            8419         BNE     _395
                       8420 ; rs232cmd.c 2378                                               SCPIError = ExecErr;
001B0E 964842rr        8422         MOV.B   ES,#SEG( _SCPIError )
001B12 9908rrrr        8423         MOV.W   R0,#SOF( _SCPIError )
001B16 9A08001D        8424         MOV.W   [R0],#01DH
001B1A FE07            8425         BR      _401
001B1A FE07            8425         BR      _401
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 140

ADDR   CODE            LINE SOURCELINE
001B1C                 8426 _395:
                       8427 ; rs232cmd.c 2379                                       else
                       8428 ; rs232cmd.c 2380                                               SetBBDelay( Suffix[0], (UL) sampl
                            es);
001B1C 964842rr        8430         MOV.B   ES,#SEG( _Suffix )
001B20 9908rrrr        8431         MOV.W   R0,#SOF( _Suffix )
001B24 8A00            8432         MOV.W   R0,[R0]
                       8433         CALL    _SetBBDelay
001B26 C4rrrrrr       +8433 ;       FCALL   _SetBBDelay
                       8434 ; rs232cmd.c 2381                               }
                       8435 ; rs232cmd.c 2382                       }
                       8436 ; rs232cmd.c 2383               }
001B2A                 8438 _401:
                       8439 ; rs232cmd.c 2384       }
001B2A 99700008        8441         ADD.W   R7,#08H
001B2E 2F30            8443         POP.W   R4, R5
001B30 D680            8445         RET
                       8447 ; rs232cmd.c 2385       
                       8448 ; rs232cmd.c 2386       /************************************************************************
                            **/
                       8449 ; rs232cmd.c 2387       /* BBGenScHPhase                                                         
                                                                                                                             
                                                     RS232CMD.C     */
                       8450 ; rs232cmd.c 2388       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8451 ; rs232cmd.c 2389       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */                      
                       8452 ; rs232cmd.c 2390       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       8453 ; rs232cmd.c 2391       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8454 ; rs232cmd.c 2392       /* Function:    Handle the Black Burst ScH-Phase command.                
                                                                                            */
                       8455 ; rs232cmd.c 2393       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8456 ; rs232cmd.c 2394       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8457 ; rs232cmd.c 2395       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8458 ; rs232cmd.c 2396       /************************************************************************
                            **/
                       8459 ; rs232cmd.c 2397       void BBGenScHPhase( void)
                       8460 ; rs232cmd.c 2398       {
                       8461         ALIGN   1
                       8463         PUBLIC  _BBGenScHPhase
001B32                 8464 _BBGenScHPhase:
001B32 A97E            8468         ADDS.W  R7,#0EH
                       8471 ; rs232cmd.c 2399               int schphase;
                       8472 ; rs232cmd.c 2400       
                       8473 ; rs232cmd.c 2401               if ( CmdExecute && !SCPIError)
001B34 964842rr        8475         MOV.B   ES,#SEG( _CmdExecute )
001B38 9908rrrr        8476         MOV.W   R0,#SOF( _CmdExecute )
001B3C 8200            8477         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 141

ADDR   CODE            LINE SOURCELINE
001B3E F366            8478         BEQ     _416
001B40 964842rr        8479         MOV.B   ES,#SEG( _SCPIError )
001B44 9908rrrr        8480         MOV.W   R0,#SOF( _SCPIError )
001B48 8A00            8481         MOV.W   R0,[R0]
001B4A F260            8482         BNE     _416
                       8483 ; rs232cmd.c 2402               {
                       8484 ; rs232cmd.c 2403                       if ( CmdRequest)
001B4C 964842rr        8486         MOV.B   ES,#SEG( _CmdRequest )
001B50 9908rrrr        8487         MOV.W   R0,#SOF( _CmdRequest )
001B54 8200            8488         MOV.B   R0L,[R0]
001B56 F323            8489         BEQ     _406
                       8490 ; rs232cmd.c 2404                       {
                       8491 ; rs232cmd.c 2405                               if ( ParCnt)
001B58 964842rr        8493         MOV.B   ES,#SEG( _ParCnt )
001B5C 9908rrrr        8494         MOV.W   R0,#SOF( _ParCnt )
001B60 8200            8495         MOV.B   R0L,[R0]
001B62 F306            8496         BEQ     _405
                       8497 ; rs232cmd.c 2406                                       SCPIError = ParNotAllowed;
001B64 964842rr        8499         MOV.B   ES,#SEG( _SCPIError )
001B68 9908rrrr        8500         MOV.W   R0,#SOF( _SCPIError )
001B6C BA06            8501         MOV.W   [R0],#06H
001B6E FE4E            8502         BR      _416
001B6E FE4E            8502         BR      _416
001B70                 8503 _405:
                       8504 ; rs232cmd.c 2407                               else
                       8505 ; rs232cmd.c 2408                                       rs232printf( 6, "%d\n", BBSetup[Suffix[0]
                            ].ScHPhase);
001B70 B906            8507         MOV.W   R0,#06H
001B72 964842rr        8508         MOV.B   ES,#SEG( _Suffix )
001B76 9918rrrr        8509         MOV.W   R1,#SOF( _Suffix )
001B7A 8A11            8510         MOV.W   R1,[R1]
001B7C D913            8511         ASL.W   R1,#03H
001B7E 8921            8512         MOV.W   R2,R1
001B80 B930            8513         MOVS.W  R3,#00H
001B82 964842rr        8514         MOV.B   ES,#SEG( _BBSetup+6 )
001B86 8D12rrrr        8515         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
001B8A 0F02            8516         PUSH.W  R1
001B8C 9938rrrr        8518         MOV.W   R3,#SEG( _9 )
001B90 9928rrrr        8519         MOV.W   R2,#SOF( _9 )
001B94 0F0C            8520         PUSH.W  R2, R3
                       8522         CALL    _rs232printf
001B96 C4rrrrrr       +8522 ;       FCALL   _rs232printf
001B9A A976            8523         ADDS.W  R7,#06H
                       8525 ; rs232cmd.c 2409                       }
001B9C FE37            8527         BR      _416
001B9C FE37            8527         BR      _416
001B9E                 8528 _406:
                       8529 ; rs232cmd.c 2410                       else
                       8530 ; rs232cmd.c 2411                       {
                       8531 ; rs232cmd.c 2412                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
001B9E 964842rr        8533         MOV.B   ES,#SEG( _ParCnt )
001BA2 9908rrrr        8534         MOV.W   R0,#SOF( _ParCnt )
001BA6 8200            8535         MOV.B   R0L,[R0]
001BA8 910401          8536         CMP.B   R0L,#01H
001BAB F215            8537         BNE     _407
001BAD 9918rrrr        8538         MOV.W   R1,#SEG( _Cmd )
001BB1 9908rrrr        8539         MOV.W   R0,#SOF( _Cmd )
001BB5 9168rr          8540         MOV.B   R3L,#SEG( __lc_bs )
001BB8 7177            8541         XOR.B   R3H,R3H
001BBA 8927            8542         MOV.W   R2,R7
001BBC 0F0C            8543         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 142

ADDR   CODE            LINE SOURCELINE
001BBE 9938rrrr        8545         MOV.W   R3,#SEG( _10 )
001BC2 9928rrrr        8546         MOV.W   R2,#SOF( _10 )
001BC6 0F0C            8547         PUSH.W  R2, R3
                       8549         CALL    _sscanf
001BC8 C4rrrrrr       +8549 ;       FCALL   _sscanf
001BCC 99700008        8550         ADD.W   R7,#08H
001BD0 99040001        8552         CMP.W   R0,#01H
001BD4 F306            8553         BEQ     _408
001BD4 F306            8553         BEQ     _408
001BD6                 8554 _407:
                       8555 ; rs232cmd.c 2413                                       SCPIError = SyntaxErr;
001BD6 964842rr        8557         MOV.B   ES,#SEG( _SCPIError )
001BDA 9908rrrr        8558         MOV.W   R0,#SOF( _SCPIError )
001BDE BA03            8559         MOV.W   [R0],#03H
001BE0 FE15            8560         BR      _416
001BE0 FE15            8560         BR      _416
001BE2                 8561 _408:
                       8562 ; rs232cmd.c 2414                               else
                       8563 ; rs232cmd.c 2415                               {
                       8564 ; rs232cmd.c 2416                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
001BE2 9A74FF4D        8566         CMP.W   [R7],#0FF4DH
001BE6 FB03            8567         BLT     _409
001BE8 9A7400B4        8568         CMP.W   [R7],#0B4H
001BEC FD07            8569         BLE     _410
001BEC FD07            8569         BLE     _410
001BEE                 8570 _409:
                       8571 ; rs232cmd.c 2417                                               SCPIError = DataOutOfRange;
001BEE 964842rr        8573         MOV.B   ES,#SEG( _SCPIError )
001BF2 9908rrrr        8574         MOV.W   R0,#SOF( _SCPIError )
001BF6 9A080021        8575         MOV.W   [R0],#021H
001BFA FE08            8576         BR      _416
001BFA FE08            8576         BR      _416
001BFC                 8577 _410:
                       8578 ; rs232cmd.c 2418                                       else
                       8579 ; rs232cmd.c 2419                                               SetBBScHPhase( Suffix[0], schphas
                            e);
001BFC 964842rr        8581         MOV.B   ES,#SEG( _Suffix )
001C00 9908rrrr        8582         MOV.W   R0,#SOF( _Suffix )
001C04 8A00            8583         MOV.W   R0,[R0]
001C06 8A17            8584         MOV.W   R1,[R7]
                       8585         CALL    _SetBBScHPhase
001C08 C4rrrrrr       +8585 ;       FCALL   _SetBBScHPhase
                       8586 ; rs232cmd.c 2420                               }
                       8587 ; rs232cmd.c 2421                       }
                       8588 ; rs232cmd.c 2422               }
001C0C                 8590 _416:
                       8591 ; rs232cmd.c 2423       }
001C0C A972            8593         ADDS.W  R7,#02H
001C0E D680            8595         RET
                       8597 ; rs232cmd.c 2424       
                       8598 ; rs232cmd.c 2425       /************************************************************************
                            **/
                       8599 ; rs232cmd.c 2426       /* TSGen                                                                 
                                                                                                                             
                                                                               RS232CMD.C */
                       8600 ; rs232cmd.c 2427       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 143

ADDR   CODE            LINE SOURCELINE
                       8601 ; rs232cmd.c 2428       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8602 ; rs232cmd.c 2429       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       8603 ; rs232cmd.c 2430       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8604 ; rs232cmd.c 2431       /* Function:    Return the setting of a Analog-TPG.                      
                                                                                                            */
                       8605 ; rs232cmd.c 2432       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                       8606 ; rs232cmd.c 2433       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8607 ; rs232cmd.c 2434       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8608 ; rs232cmd.c 2435       /************************************************************************
                            ***/
                       8609 ; rs232cmd.c 2436       void TSGen( void)
                       8610 ; rs232cmd.c 2437       {
                       8611         ALIGN   1
                       8613         PUBLIC  _TSGen
001C10                 8614 _TSGen:
001C10 0F30            8618         PUSH.W  R4, R5
                       8622 ; rs232cmd.c 2438               char code *str;
                       8623 ; rs232cmd.c 2439       
                       8624 ; rs232cmd.c 2440               if ( CmdExecute && !SCPIError)
001C12 964842rr        8626         MOV.B   ES,#SEG( _CmdExecute )
001C16 9908rrrr        8627         MOV.W   R0,#SOF( _CmdExecute )
001C1A 8200            8628         MOV.B   R0L,[R0]
                       8629         BEQ     _433
001C1C F202           +8629 ;       BNE     _LG_474
001C1E D500D4         +8629 ;       JMP.L   _433
001C22 D500D400       +8629 ;       JMP.L   _433
001C22                +8629 _LG_474:
001C22 964842rr        8630         MOV.B   ES,#SEG( _SCPIError )
001C26 9908rrrr        8631         MOV.W   R0,#SOF( _SCPIError )
001C2A 8A00            8632         MOV.W   R0,[R0]
                       8633         BNE     _433
001C2C F302           +8633 ;       BEQ     _LG_476
001C2E D500CC         +8633 ;       JMP.L   _433
001C32 D500CC00       +8633 ;       JMP.L   _433
001C32                +8633 _LG_476:
                       8634 ; rs232cmd.c 2441               {
                       8635 ; rs232cmd.c 2442                       if ( !CmdRequest)
001C32 964842rr        8637         MOV.B   ES,#SEG( _CmdRequest )
001C36 9908rrrr        8638         MOV.W   R0,#SOF( _CmdRequest )
001C3A 8200            8639         MOV.B   R0L,[R0]
001C3C F207            8640         BNE     _422
                       8641 ; rs232cmd.c 2443                                       SCPIError = SyntaxErr;
001C3E 964842rr        8643         MOV.B   ES,#SEG( _SCPIError )
001C42 9908rrrr        8644         MOV.W   R0,#SOF( _SCPIError )
001C46 BA03            8645         MOV.W   [R0],#03H
                       8646         BR      _433
001C48 D500BF         +8646         JMP.L   _433
001C48 D500BF00       +8646         JMP.L   _433
001C4C                 8647 _422:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 144

ADDR   CODE            LINE SOURCELINE
                       8648 ; rs232cmd.c 2444                       else
                       8649 ; rs232cmd.c 2445                       {
                       8650 ; rs232cmd.c 2446                               if ( ParCnt)
001C4C 964842rr        8652         MOV.B   ES,#SEG( _ParCnt )
001C50 9908rrrr        8653         MOV.W   R0,#SOF( _ParCnt )
001C54 8200            8654         MOV.B   R0L,[R0]
001C56 F307            8655         BEQ     _423
                       8656 ; rs232cmd.c 2447                                       SCPIError = ParNotAllowed;
001C58 964842rr        8658         MOV.B   ES,#SEG( _SCPIError )
001C5C 9908rrrr        8659         MOV.W   R0,#SOF( _SCPIError )
001C60 BA06            8660         MOV.W   [R0],#06H
                       8661         BR      _433
001C62 D500B2         +8661         JMP.L   _433
001C62 D500B200       +8661         JMP.L   _433
001C66                 8662 _423:
                       8663 ; rs232cmd.c 2448                               else
                       8664 ; rs232cmd.c 2449                               {
                       8665 ; rs232cmd.c 2450                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001C66 964842rr        8667         MOV.B   ES,#SEG( _CBSetup+2 )
001C6A 9908rrrr        8668         MOV.W   R0,#SOF( _CBSetup+2 )
001C6E 8A00            8669         MOV.W   R0,[R0]
001C70 E900000C        8670         MULU.W  R0,#0CH
001C74 8920            8671         MOV.W   R2,R0
001C76 B930            8672         MOVS.W  R3,#00H
001C78 9918rrrr        8673         MOV.W   R1,#SEG( _CBPatternPar )
001C7C 9908rrrr        8674         MOV.W   R0,#SOF( _CBPatternPar )
001C80 0902            8675         ADD.W   R0,R2
001C82 1913            8676         ADDC.W  R1,R3
001C84 862C43          8677         MOV.B   CS,R1L
001C87 8820            8678         MOVC.W  R2,[R0+]
001C89 99040000        8679         CMP.W   R0,#00H
001C8D F202            8680         BNE     _434
001C8F A64143          8681         ADDS.B  CS,#01H
001C8F A64143          8681         ADDS.B  CS,#01H
001C92                 8682 _434:
001C92 8830            8683         MOVC.W  R3,[R0+]
001C94 8953            8684         MOV.W   R5,R3
001C96 8942            8685         MOV.W   R4,R2
                       8687 ; rs232cmd.c 2451       
                       8688 ; rs232cmd.c 2452                                       while ( *str)
001C98 866C43          8690         MOV.B   CS,R3L
001C9B 8062            8691         MOVC.B  R3L,[R2+]
001C9D F312            8692         BEQ     _425
001C9D F31200          8692         BEQ     _425
001CA0                 8693 _424:
                       8694 ; rs232cmd.c 2453                                               rs232putchar( *str++);
001CA0 8915            8696         MOV.W   R1,R5
001CA2 8904            8697         MOV.W   R0,R4
001CA4 862C43          8698         MOV.B   CS,R1L
001CA7 8020            8699         MOVC.B  R1L,[R0+]
001CA9 8102            8700         MOV.B   R0L,R1L
                       8701         CALL    _rs232putchar
001CAB C4rrrrrr       +8701 ;       FCALL   _rs232putchar
001CAF 99400001        8702         ADD.W   R4,#01H
001CB3 99510000        8703         ADDC.W  R5,#00H
001CB7 8915            8707         MOV.W   R1,R5
001CB9 8904            8708         MOV.W   R0,R4
001CBB 862C43          8709         MOV.B   CS,R1L
001CBE 8020            8710         MOVC.B  R1L,[R0+]
001CC0 F2EF            8711         BNE     _424
001CC2                 8713 _425:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 145

ADDR   CODE            LINE SOURCELINE
                       8714 ; rs232cmd.c 2454       
                       8715 ; rs232cmd.c 2455                                       rs232putchar( ',');
001CC2 91082C          8717         MOV.B   R0L,#02CH
                       8718         CALL    _rs232putchar
001CC5 C4rrrrrr       +8718 ;       FCALL   _rs232putchar
                       8719 ; rs232cmd.c 2456       
                       8720 ; rs232cmd.c 2457       
                       8721 ; rs232cmd.c 2458                                       str = SystemPar[CBSetup.System].LongName;
                            
001CC9 964842rr        8723         MOV.B   ES,#SEG( _CBSetup )
001CCD 9908rrrr        8724         MOV.W   R0,#SOF( _CBSetup )
001CD1 8200            8725         MOV.B   R0L,[R0]
001CD3 E8000C          8726         MULU.B  R0L,#0CH
001CD6 8920            8727         MOV.W   R2,R0
001CD8 B930            8728         MOVS.W  R3,#00H
001CDA 9918rrrr        8729         MOV.W   R1,#SEG( _SystemPar )
001CDE 9908rrrr        8730         MOV.W   R0,#SOF( _SystemPar )
001CE2 0902            8731         ADD.W   R0,R2
001CE4 1913            8732         ADDC.W  R1,R3
001CE6 862C43          8733         MOV.B   CS,R1L
001CE9 8820            8734         MOVC.W  R2,[R0+]
001CEB 99040000        8735         CMP.W   R0,#00H
001CEF F202            8736         BNE     _435
001CF1 A64143          8737         ADDS.B  CS,#01H
001CF1 A64143          8737         ADDS.B  CS,#01H
001CF4                 8738 _435:
001CF4 8830            8739         MOVC.W  R3,[R0+]
001CF6 8953            8740         MOV.W   R5,R3
001CF8 8942            8741         MOV.W   R4,R2
                       8744 ; rs232cmd.c 2459       
                       8745 ; rs232cmd.c 2460                                       while ( *str)
001CFA 866C43          8747         MOV.B   CS,R3L
001CFD 8062            8748         MOVC.B  R3L,[R2+]
001CFF F312            8749         BEQ     _427
001CFF F31200          8749         BEQ     _427
001D02                 8750 _426:
                       8751 ; rs232cmd.c 2461                                               rs232putchar( *str++);
001D02 8915            8753         MOV.W   R1,R5
001D04 8904            8754         MOV.W   R0,R4
001D06 862C43          8755         MOV.B   CS,R1L
001D09 8020            8756         MOVC.B  R1L,[R0+]
001D0B 8102            8757         MOV.B   R0L,R1L
                       8758         CALL    _rs232putchar
001D0D C4rrrrrr       +8758 ;       FCALL   _rs232putchar
001D11 99400001        8759         ADD.W   R4,#01H
001D15 99510000        8760         ADDC.W  R5,#00H
001D19 8915            8764         MOV.W   R1,R5
001D1B 8904            8765         MOV.W   R0,R4
001D1D 862C43          8766         MOV.B   CS,R1L
001D20 8020            8767         MOVC.B  R1L,[R0+]
001D22 F2EF            8768         BNE     _426
001D24                 8770 _427:
                       8771 ; rs232cmd.c 2462       
                       8772 ; rs232cmd.c 2463                                       rs232putchar( ',');
001D24 91082C          8774         MOV.B   R0L,#02CH
                       8775         CALL    _rs232putchar
001D27 C4rrrrrr       +8775 ;       FCALL   _rs232putchar
                       8776 ; rs232cmd.c 2464       
                       8777 ; rs232cmd.c 2465       
                       8778 ; rs232cmd.c 2466                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
001D2B 964842rr        8780         MOV.B   ES,#SEG( _CBSetup )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 146

ADDR   CODE            LINE SOURCELINE
001D2F 9908rrrr        8781         MOV.W   R0,#SOF( _CBSetup )
001D33 8200            8782         MOV.B   R0L,[R0]
001D35 964842rr        8783         MOV.B   ES,#SEG( _CBSetup+4 )
001D39 9938rrrr        8784         MOV.W   R3,#SOF( _CBSetup+4 )
001D3D 8B23            8785         MOV.W   R2,[R3+]
001D3F 8A33            8786         MOV.W   R3,[R3]
001D41 DD28            8787         ASL.D   R2,#08H
001D43 C523E2          8788         CALL    _PrintSamplesToFLT
                       8789 ; rs232cmd.c 2467       
                       8790 ; rs232cmd.c 2468       
                       8791 ; rs232cmd.c 2469                                       rs232printf( 6, ",%d,", CBSetup.ScHPhase)
                            ;
001D46 B906            8793         MOV.W   R0,#06H
001D48 964842rr        8794         MOV.B   ES,#SEG( _CBSetup+8 )
001D4C 9918rrrr        8795         MOV.W   R1,#SOF( _CBSetup+8 )
001D50 8A11            8796         MOV.W   R1,[R1]
001D52 0F02            8797         PUSH.W  R1
001D54 9938rrrr        8799         MOV.W   R3,#SEG( _421 )
001D58 9928rrrr        8800         MOV.W   R2,#SOF( _421 )
001D5C 0F0C            8801         PUSH.W  R2, R3
                       8803         CALL    _rs232printf
001D5E C4rrrrrr       +8803 ;       FCALL   _rs232printf
001D62 A976            8804         ADDS.W  R7,#06H
                       8806 ; rs232cmd.c 2470       
                       8807 ; rs232cmd.c 2471       
                       8808 ; rs232cmd.c 2472                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
001D64 964842rr        8810         MOV.B   ES,#SEG( _CBSetup+10 )
001D68 9908rrrr        8811         MOV.W   R0,#SOF( _CBSetup+10 )
001D6C 8200            8812         MOV.B   R0L,[R0]
001D6E E8000C          8813         MULU.B  R0L,#0CH
001D71 8920            8814         MOV.W   R2,R0
001D73 B930            8815         MOVS.W  R3,#00H
001D75 9918rrrr        8816         MOV.W   R1,#SEG( _EmbAudioSignalPar )
001D79 9908rrrr        8817         MOV.W   R0,#SOF( _EmbAudioSignalPar )
001D7D 0902            8818         ADD.W   R0,R2
001D7F 1913            8819         ADDC.W  R1,R3
001D81 862C43          8820         MOV.B   CS,R1L
001D84 8820            8821         MOVC.W  R2,[R0+]
001D86 99040000        8822         CMP.W   R0,#00H
001D8A F202            8823         BNE     _436
001D8C A64143          8824         ADDS.B  CS,#01H
001D8C A6414300        8824         ADDS.B  CS,#01H
001D90                 8825 _436:
001D90 8830            8826         MOVC.W  R3,[R0+]
001D92 8953            8827         MOV.W   R5,R3
001D94 8942            8828         MOV.W   R4,R2
                       8831 ; rs232cmd.c 2473       
                       8832 ; rs232cmd.c 2474                                       while ( *str)
001D96 866C43          8834         MOV.B   CS,R3L
001D99 8062            8835         MOVC.B  R3L,[R2+]
001D9B F312            8836         BEQ     _429
001D9B F31200          8836         BEQ     _429
001D9E                 8837 _428:
                       8838 ; rs232cmd.c 2475                                               rs232putchar( *str++);
001D9E 8915            8840         MOV.W   R1,R5
001DA0 8904            8841         MOV.W   R0,R4
001DA2 862C43          8842         MOV.B   CS,R1L
001DA5 8020            8843         MOVC.B  R1L,[R0+]
001DA7 8102            8844         MOV.B   R0L,R1L
                       8845         CALL    _rs232putchar
001DA9 C4rrrrrr       +8845 ;       FCALL   _rs232putchar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 147

ADDR   CODE            LINE SOURCELINE
001DAD 99400001        8846         ADD.W   R4,#01H
001DB1 99510000        8847         ADDC.W  R5,#00H
001DB5 8915            8851         MOV.W   R1,R5
001DB7 8904            8852         MOV.W   R0,R4
001DB9 862C43          8853         MOV.B   CS,R1L
001DBC 8020            8854         MOVC.B  R1L,[R0+]
001DBE F2EF            8855         BNE     _428
001DC0                 8857 _429:
                       8858 ; rs232cmd.c 2476       
                       8859 ; rs232cmd.c 2477                                       rs232putchar( '\n');
001DC0 91080A          8861         MOV.B   R0L,#0AH
                       8862         CALL    _rs232putchar
001DC3 C4rrrrrr       +8862 ;       FCALL   _rs232putchar
                       8863 ; rs232cmd.c 2478                               }
                       8864 ; rs232cmd.c 2479                       }
                       8865 ; rs232cmd.c 2480               }
001DC8                 8867 _433:
                       8868 ; rs232cmd.c 2481       }
001DC8 2F30            8870         POP.W   R4, R5
001DCA D680            8872         RET
                       8875 ; rs232cmd.c 2482       
                       8876 ; rs232cmd.c 2483       /************************************************************************
                            **/
                       8877 ; rs232cmd.c 2484       /* TSGenPattern                                                          
                                                                                                                             
                                                 RS232CMD.C */
                       8878 ; rs232cmd.c 2485       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8879 ; rs232cmd.c 2486       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       8880 ; rs232cmd.c 2487       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       8881 ; rs232cmd.c 2488       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8882 ; rs232cmd.c 2489       /* Function:    Handle the Colorbar pattern command.                     
                                                                                                    */
                       8883 ; rs232cmd.c 2490       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8884 ; rs232cmd.c 2491       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8885 ; rs232cmd.c 2492       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8886 ; rs232cmd.c 2493       /************************************************************************
                            **/
                       8887 ; rs232cmd.c 2494       void TSGenPattern( void)
                       8888 ; rs232cmd.c 2495       {
                       8889         ALIGN   1
                       8891         PUBLIC  _TSGenPattern
001DCC                 8892 _TSGenPattern:
001DCC 0F30            8896         PUSH.W  R4, R5
                       8902 ; rs232cmd.c 2496               int pattern;
                       8903 ; rs232cmd.c 2497               char code *str;
                       8904 ; rs232cmd.c 2498       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 148

ADDR   CODE            LINE SOURCELINE
                       8905 ; rs232cmd.c 2499               if ( CmdExecute && !SCPIError)
001DCE 964842rr        8907         MOV.B   ES,#SEG( _CmdExecute )
001DD2 9908rrrr        8908         MOV.W   R0,#SOF( _CmdExecute )
001DD6 8200            8909         MOV.B   R0L,[R0]
001DD8 F377            8910         BEQ     _449
001DDA 964842rr        8911         MOV.B   ES,#SEG( _SCPIError )
001DDE 9908rrrr        8912         MOV.W   R0,#SOF( _SCPIError )
001DE2 8A00            8913         MOV.W   R0,[R0]
001DE4 F271            8914         BNE     _449
                       8915 ; rs232cmd.c 2500               {
                       8916 ; rs232cmd.c 2501                       if ( CmdRequest)
001DE6 964842rr        8918         MOV.B   ES,#SEG( _CmdRequest )
001DEA 9908rrrr        8919         MOV.W   R0,#SOF( _CmdRequest )
001DEE 8200            8920         MOV.B   R0L,[R0]
001DF0 F33F            8921         BEQ     _440
                       8922 ; rs232cmd.c 2502                       {
                       8923 ; rs232cmd.c 2503                               if ( ParCnt)
001DF2 964842rr        8925         MOV.B   ES,#SEG( _ParCnt )
001DF6 9908rrrr        8926         MOV.W   R0,#SOF( _ParCnt )
001DFA 8200            8927         MOV.B   R0L,[R0]
001DFC F306            8928         BEQ     _437
                       8929 ; rs232cmd.c 2504                                       SCPIError = ParNotAllowed;
001DFE 964842rr        8931         MOV.B   ES,#SEG( _SCPIError )
001E02 9908rrrr        8932         MOV.W   R0,#SOF( _SCPIError )
001E06 BA06            8933         MOV.W   [R0],#06H
001E08 FE5F            8934         BR      _449
001E08 FE5F            8934         BR      _449
001E0A                 8935 _437:
                       8936 ; rs232cmd.c 2505                               else
                       8937 ; rs232cmd.c 2506                               {
                       8938 ; rs232cmd.c 2507                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001E0A 964842rr        8940         MOV.B   ES,#SEG( _CBSetup+2 )
001E0E 9908rrrr        8941         MOV.W   R0,#SOF( _CBSetup+2 )
001E12 8A00            8942         MOV.W   R0,[R0]
001E14 E900000C        8943         MULU.W  R0,#0CH
001E18 8920            8944         MOV.W   R2,R0
001E1A B930            8945         MOVS.W  R3,#00H
001E1C 9918rrrr        8946         MOV.W   R1,#SEG( _CBPatternPar )
001E20 9908rrrr        8947         MOV.W   R0,#SOF( _CBPatternPar )
001E24 0902            8948         ADD.W   R0,R2
001E26 1913            8949         ADDC.W  R1,R3
001E28 862C43          8950         MOV.B   CS,R1L
001E2B 8820            8951         MOVC.W  R2,[R0+]
001E2D 99040000        8952         CMP.W   R0,#00H
001E31 F202            8953         BNE     _450
001E33 A64143          8954         ADDS.B  CS,#01H
001E33 A64143          8954         ADDS.B  CS,#01H
001E36                 8955 _450:
001E36 8830            8956         MOVC.W  R3,[R0+]
001E38 8953            8957         MOV.W   R5,R3
001E3A 8942            8958         MOV.W   R4,R2
                       8960 ; rs232cmd.c 2508       
                       8961 ; rs232cmd.c 2509                                       while ( *str)
001E3C 866C43          8963         MOV.B   CS,R3L
001E3F 8062            8964         MOVC.B  R3L,[R2+]
001E41 F312            8965         BEQ     _439
001E41 F31200          8965         BEQ     _439
001E44                 8966 _438:
                       8967 ; rs232cmd.c 2510                                               rs232putchar( *str++);
001E44 8915            8969         MOV.W   R1,R5
001E46 8904            8970         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 149

ADDR   CODE            LINE SOURCELINE
001E48 862C43          8971         MOV.B   CS,R1L
001E4B 8020            8972         MOVC.B  R1L,[R0+]
001E4D 8102            8973         MOV.B   R0L,R1L
                       8974         CALL    _rs232putchar
001E4F C4rrrrrr       +8974 ;       FCALL   _rs232putchar
001E53 99400001        8975         ADD.W   R4,#01H
001E57 99510000        8976         ADDC.W  R5,#00H
001E5B 8915            8980         MOV.W   R1,R5
001E5D 8904            8981         MOV.W   R0,R4
001E5F 862C43          8982         MOV.B   CS,R1L
001E62 8020            8983         MOVC.B  R1L,[R0+]
001E64 F2EF            8984         BNE     _438
001E66                 8986 _439:
                       8987 ; rs232cmd.c 2511       
                       8988 ; rs232cmd.c 2512                                       rs232putchar('\n');
001E66 91080A          8990         MOV.B   R0L,#0AH
                       8991         CALL    _rs232putchar
001E69 C4rrrrrr       +8991 ;       FCALL   _rs232putchar
                       8992 ; rs232cmd.c 2513                               }
                       8993 ; rs232cmd.c 2514                       }
001E6D FE2D            8995         BR      _449
001E6D FE2D00          8995         BR      _449
001E70                 8996 _440:
                       8997 ; rs232cmd.c 2515                       else
                       8998 ; rs232cmd.c 2516                       {
                       8999 ; rs232cmd.c 2517                               pattern = FindParameter( Cmd, CBPatternPar);
001E70 9918rrrr        9001         MOV.W   R1,#SEG( _Cmd )
001E74 9908rrrr        9002         MOV.W   R0,#SOF( _Cmd )
001E78 9938rrrr        9003         MOV.W   R3,#SEG( _CBPatternPar )
001E7C 9928rrrr        9004         MOV.W   R2,#SOF( _CBPatternPar )
001E80 C520BC          9005         CALL    _FindParameter
                       9007 ; rs232cmd.c 2518       
                       9008 ; rs232cmd.c 2519                               if ( ParCnt != 1)
001E83 964842rr        9010         MOV.B   ES,#SEG( _ParCnt )
001E87 9918rrrr        9011         MOV.W   R1,#SOF( _ParCnt )
001E8B 8221            9012         MOV.B   R1L,[R1]
001E8D 912401          9013         CMP.B   R1L,#01H
001E90 F306            9014         BEQ     _441
                       9015 ; rs232cmd.c 2520                                       SCPIError = SyntaxErr;
001E92 964842rr        9017         MOV.B   ES,#SEG( _SCPIError )
001E96 9908rrrr        9018         MOV.W   R0,#SOF( _SCPIError )
001E9A BA03            9019         MOV.W   [R0],#03H
001E9C FE15            9020         BR      _449
001E9C FE15            9020         BR      _449
001E9E                 9021 _441:
                       9023 ; rs232cmd.c 2521                               else
                       9024 ; rs232cmd.c 2522                               {
                       9025 ; rs232cmd.c 2523                                       if ( pattern > -1)
001E9E 9904FFFF        9027         CMP.W   R0,#0FFFFH
001EA2 FD0C            9028         BLE     _442
                       9029 ; rs232cmd.c 2524                                       {
                       9030 ; rs232cmd.c 2525                                               if ( SetCBPattern( pattern) != OK
                            )
                       9032         CALL    _SetCBPattern
001EA4 C4rrrrrr       +9032 ;       FCALL   _SetCBPattern
001EA8 9904FFFF        9033         CMP.W   R0,#0FFFFH
001EAC F30D            9034         BEQ     _449
                       9035 ; rs232cmd.c 2526                                                       SCPIError = ExecErr;
001EAE 964842rr        9037         MOV.B   ES,#SEG( _SCPIError )
001EB2 9908rrrr        9038         MOV.W   R0,#SOF( _SCPIError )
001EB6 9A08001D        9039         MOV.W   [R0],#01DH
                       9040 ; rs232cmd.c 2527                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 150

ADDR   CODE            LINE SOURCELINE
001EBA FE06            9042         BR      _449
001EBA FE06            9042         BR      _449
001EBC                 9043 _442:
                       9044 ; rs232cmd.c 2528                                       else
                       9045 ; rs232cmd.c 2529                                               SCPIError = DataOutOfRange;
001EBC 964842rr        9047         MOV.B   ES,#SEG( _SCPIError )
001EC0 9908rrrr        9048         MOV.W   R0,#SOF( _SCPIError )
001EC4 9A080021        9049         MOV.W   [R0],#021H
                       9050 ; rs232cmd.c 2530                               }
                       9051 ; rs232cmd.c 2531                       }
                       9052 ; rs232cmd.c 2532               }
001EC8                 9054 _449:
                       9055 ; rs232cmd.c 2533       }
001EC8 2F30            9057         POP.W   R4, R5
001ECA D680            9059         RET
                       9062 ; rs232cmd.c 2534       
                       9063 ; rs232cmd.c 2535       /************************************************************************
                            **/
                       9064 ; rs232cmd.c 2536       /* TSGenSystem                                                           
                                                                                                                             
                                             RS232CMD.C     */
                       9065 ; rs232cmd.c 2537       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9066 ; rs232cmd.c 2538       /* Author:              Kim Engedahl, DEV, 98021                         
                                                                                                                             
                                    */
                       9067 ; rs232cmd.c 2539       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9068 ; rs232cmd.c 2540       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9069 ; rs232cmd.c 2541       /* Function:    Handle the Colobar system-command.                       
                                                                                                            */
                       9070 ; rs232cmd.c 2542       /* Remarks:             This command will possibly change pattern and/or 
                            delay if                */
                       9071 ; rs232cmd.c 2543       /*            these are not valid in the selected system                 
                                                                                    */
                       9072 ; rs232cmd.c 2544       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9073 ; rs232cmd.c 2545       /* Updates:        --                                                    
                                                                                                                             
                                                                                                            */
                       9074 ; rs232cmd.c 2546       /************************************************************************
                            **/
                       9075 ; rs232cmd.c 2547       void TSGenSystem( void)
                       9076 ; rs232cmd.c 2548       {
                       9077         ALIGN   1
                       9079         PUBLIC  _TSGenSystem
001ECC                 9080 _TSGenSystem:
001ECC 0F30            9084         PUSH.W  R4, R5
                       9090 ; rs232cmd.c 2549               int system;
                       9091 ; rs232cmd.c 2550               char code *str;
                       9092 ; rs232cmd.c 2551       
                       9093 ; rs232cmd.c 2552               if ( CmdExecute && !SCPIError)
001ECE 964842rr        9095         MOV.B   ES,#SEG( _CmdExecute )
001ED2 9908rrrr        9096         MOV.W   R0,#SOF( _CmdExecute )
001ED6 8200            9097         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 151

ADDR   CODE            LINE SOURCELINE
001ED8 F379            9098         BEQ     _467
001EDA 964842rr        9099         MOV.B   ES,#SEG( _SCPIError )
001EDE 9908rrrr        9100         MOV.W   R0,#SOF( _SCPIError )
001EE2 8A00            9101         MOV.W   R0,[R0]
001EE4 F273            9102         BNE     _467
                       9103 ; rs232cmd.c 2553               {
                       9104 ; rs232cmd.c 2554                       if ( CmdRequest)
001EE6 964842rr        9106         MOV.B   ES,#SEG( _CmdRequest )
001EEA 9908rrrr        9107         MOV.W   R0,#SOF( _CmdRequest )
001EEE 8200            9108         MOV.B   R0L,[R0]
001EF0 F33F            9109         BEQ     _457
                       9110 ; rs232cmd.c 2555                       {
                       9111 ; rs232cmd.c 2556                               if ( ParCnt)
001EF2 964842rr        9113         MOV.B   ES,#SEG( _ParCnt )
001EF6 9908rrrr        9114         MOV.W   R0,#SOF( _ParCnt )
001EFA 8200            9115         MOV.B   R0L,[R0]
001EFC F306            9116         BEQ     _454
                       9117 ; rs232cmd.c 2557                                       SCPIError = ParNotAllowed;
001EFE 964842rr        9119         MOV.B   ES,#SEG( _SCPIError )
001F02 9908rrrr        9120         MOV.W   R0,#SOF( _SCPIError )
001F06 BA06            9121         MOV.W   [R0],#06H
001F08 FE61            9122         BR      _467
001F08 FE61            9122         BR      _467
001F0A                 9123 _454:
                       9124 ; rs232cmd.c 2558                               else
                       9125 ; rs232cmd.c 2559                               {
                       9126 ; rs232cmd.c 2560                                       str = SystemPar[CBSetup.System].LongName;
                            
001F0A 964842rr        9128         MOV.B   ES,#SEG( _CBSetup )
001F0E 9908rrrr        9129         MOV.W   R0,#SOF( _CBSetup )
001F12 8200            9130         MOV.B   R0L,[R0]
001F14 E8000C          9131         MULU.B  R0L,#0CH
001F17 8920            9132         MOV.W   R2,R0
001F19 B930            9133         MOVS.W  R3,#00H
001F1B 9918rrrr        9134         MOV.W   R1,#SEG( _SystemPar )
001F1F 9908rrrr        9135         MOV.W   R0,#SOF( _SystemPar )
001F23 0902            9136         ADD.W   R0,R2
001F25 1913            9137         ADDC.W  R1,R3
001F27 862C43          9138         MOV.B   CS,R1L
001F2A 8820            9139         MOVC.W  R2,[R0+]
001F2C 99040000        9140         CMP.W   R0,#00H
001F30 F202            9141         BNE     _468
001F32 A64143          9142         ADDS.B  CS,#01H
001F32 A6414300        9142         ADDS.B  CS,#01H
001F36                 9143 _468:
001F36 8830            9144         MOVC.W  R3,[R0+]
001F38 8953            9145         MOV.W   R5,R3
001F3A 8942            9146         MOV.W   R4,R2
                       9148 ; rs232cmd.c 2561       
                       9149 ; rs232cmd.c 2562                                       while ( *str)                            
                                                                             
001F3C 866C43          9151         MOV.B   CS,R3L
001F3F 8062            9152         MOVC.B  R3L,[R2+]
001F41 F312            9153         BEQ     _456
001F41 F31200          9153         BEQ     _456
001F44                 9154 _455:
                       9155 ; rs232cmd.c 2563                                               rs232putchar( *str++);
001F44 8915            9157         MOV.W   R1,R5
001F46 8904            9158         MOV.W   R0,R4
001F48 862C43          9159         MOV.B   CS,R1L
001F4B 8020            9160         MOVC.B  R1L,[R0+]
001F4D 8102            9161         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 152

ADDR   CODE            LINE SOURCELINE
                       9162         CALL    _rs232putchar
001F4F C4rrrrrr       +9162 ;       FCALL   _rs232putchar
001F53 99400001        9163         ADD.W   R4,#01H
001F57 99510000        9164         ADDC.W  R5,#00H
001F5B 8915            9168         MOV.W   R1,R5
001F5D 8904            9169         MOV.W   R0,R4
001F5F 862C43          9170         MOV.B   CS,R1L
001F62 8020            9171         MOVC.B  R1L,[R0+]
001F64 F2EF            9172         BNE     _455
001F66                 9174 _456:
                       9175 ; rs232cmd.c 2564       
                       9176 ; rs232cmd.c 2565                                       rs232putchar('\n');
001F66 91080A          9178         MOV.B   R0L,#0AH
                       9179         CALL    _rs232putchar
001F69 C4rrrrrr       +9179 ;       FCALL   _rs232putchar
                       9180 ; rs232cmd.c 2566                               }
                       9181 ; rs232cmd.c 2567                       }
001F6D FE2F            9183         BR      _467
001F6D FE2F00          9183         BR      _467
001F70                 9184 _457:
                       9185 ; rs232cmd.c 2568                       else
                       9186 ; rs232cmd.c 2569                       {
                       9187 ; rs232cmd.c 2570                               if ( ParCnt != 1)
001F70 964842rr        9189         MOV.B   ES,#SEG( _ParCnt )
001F74 9908rrrr        9190         MOV.W   R0,#SOF( _ParCnt )
001F78 8200            9191         MOV.B   R0L,[R0]
001F7A 910401          9192         CMP.B   R0L,#01H
001F7D F307            9193         BEQ     _458
                       9194 ; rs232cmd.c 2571                                       SCPIError = SyntaxErr;
001F7F 964842rr        9196         MOV.B   ES,#SEG( _SCPIError )
001F83 9908rrrr        9197         MOV.W   R0,#SOF( _SCPIError )
001F87 BA03            9198         MOV.W   [R0],#03H
001F89 FE21            9199         BR      _467
001F89 FE2100          9199         BR      _467
001F8C                 9200 _458:
                       9201 ; rs232cmd.c 2572                               else
                       9202 ; rs232cmd.c 2573                               {
                       9203 ; rs232cmd.c 2574                                       system = FindParameter( Cmd, SystemPar);
001F8C 9918rrrr        9205         MOV.W   R1,#SEG( _Cmd )
001F90 9908rrrr        9206         MOV.W   R0,#SOF( _Cmd )
001F94 9938rrrr        9207         MOV.W   R3,#SEG( _SystemPar )
001F98 9928rrrr        9208         MOV.W   R2,#SOF( _SystemPar )
001F9C C5202E          9209         CALL    _FindParameter
                       9211 ; rs232cmd.c 2575       
                       9212 ; rs232cmd.c 2576                                       if ( system == PAL_PALID)                
                                                            // If line7, (PAL w/ID) ever should
001F9F 99040001        9214         CMP.W   R0,#01H
001FA3 F208            9215         BNE     _459
                       9216 ; rs232cmd.c 2577                                               SCPIError = DataOutOfRange;      
                                                    //  be supported remove this exception
001FA5 964842rr        9218         MOV.B   ES,#SEG( _SCPIError )
001FA9 9908rrrr        9219         MOV.W   R0,#SOF( _SCPIError )
001FAD 9A080021        9220         MOV.W   [R0],#021H
001FB1 FE0D            9221         BR      _467
001FB1 FE0D00          9221         BR      _467
001FB4                 9222 _459:
                       9224 ; rs232cmd.c 2578                                       else                                     
                                    
                       9225 ; rs232cmd.c 2579                                       {
                       9226 ; rs232cmd.c 2580                                               if ( system > -1)
001FB4 9904FFFF        9228         CMP.W   R0,#0FFFFH
001FB8 FD03            9229         BLE     _460
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 153

ADDR   CODE            LINE SOURCELINE
                       9230 ; rs232cmd.c 2581                                                       SetCBSystem( system);
                       9232         CALL    _SetCBSystem
001FBA C4rrrrrr       +9232 ;       FCALL   _SetCBSystem
001FBE FE06            9233         BR      _467
001FBE FE06            9233         BR      _467
001FC0                 9234 _460:
                       9235 ; rs232cmd.c 2582                                               else
                       9236 ; rs232cmd.c 2583                                                       SCPIError = DataOutOfRang
                            e;
001FC0 964842rr        9238         MOV.B   ES,#SEG( _SCPIError )
001FC4 9908rrrr        9239         MOV.W   R0,#SOF( _SCPIError )
001FC8 9A080021        9240         MOV.W   [R0],#021H
                       9241 ; rs232cmd.c 2584                                       }
                       9242 ; rs232cmd.c 2585                               }
                       9243 ; rs232cmd.c 2586                       }
                       9244 ; rs232cmd.c 2587               }
001FCC                 9246 _467:
                       9247 ; rs232cmd.c 2588       }
001FCC 2F30            9249         POP.W   R4, R5
001FCE D680            9251         RET
                       9254 ; rs232cmd.c 2589       
                       9255 ; rs232cmd.c 2590       /************************************************************************
                            **/
                       9256 ; rs232cmd.c 2591       /* TSGenDelay                                                            
                                                                                                                             
                                                     RS232CMD.C */
                       9257 ; rs232cmd.c 2592       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9258 ; rs232cmd.c 2593       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       9259 ; rs232cmd.c 2594       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       9260 ; rs232cmd.c 2595       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9261 ; rs232cmd.c 2596       /* Function:    Handle the Colorbar delay command.                       
                                                                                                            */
                       9262 ; rs232cmd.c 2597       /* Remarks:             Delay should be multiplied/divided with/by 256 to
                             conform                */
                       9263 ; rs232cmd.c 2598       /*                                              with the black burst timi
                            ng as the functions                                                             */
                       9264 ; rs232cmd.c 2599       /*                                              PrintSamplesToFLT/FLTToSa
                            mples are common to both the CBar       */
                       9265 ; rs232cmd.c 2600       /*                                              and BB timing. The CBar t
                            iming equals 1728/1716 samples                  */
                       9266 ; rs232cmd.c 2601       /*                                              (app. 37ns/sample), while
                             the BB timing equals 1728*256/         */
                       9267 ; rs232cmd.c 2602       /*                                              1716*256 samples (app. 0.
                            14 ns/sample).                                                                                  *
                            /
                       9268 ; rs232cmd.c 2603       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9269 ; rs232cmd.c 2604       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 154

ADDR   CODE            LINE SOURCELINE
                       9270 ; rs232cmd.c 2605       /************************************************************************
                            **/
                       9271 ; rs232cmd.c 2606       void TSGenDelay( void)
                       9272 ; rs232cmd.c 2607       {
                       9273         ALIGN   1
                       9275         PUBLIC  _TSGenDelay
001FD0                 9276 _TSGenDelay:
001FD0 0F30            9280         PUSH.W  R4, R5
001FD2 A978            9282         ADDS.W  R7,#08H
                       9289 ; rs232cmd.c 2608               int field, line;
                       9290 ; rs232cmd.c 2609               float offset;
                       9291 ; rs232cmd.c 2610               long samples;
                       9292 ; rs232cmd.c 2611       
                       9293 ; rs232cmd.c 2612               if ( CmdExecute && !SCPIError)
001FD4 964842rr        9295         MOV.B   ES,#SEG( _CmdExecute )
001FD8 9908rrrr        9296         MOV.W   R0,#SOF( _CmdExecute )
001FDC 8200            9297         MOV.B   R0L,[R0]
001FDE F37A            9298         BEQ     _482
001FE0 964842rr        9299         MOV.B   ES,#SEG( _SCPIError )
001FE4 9908rrrr        9300         MOV.W   R0,#SOF( _SCPIError )
001FE8 8A00            9301         MOV.W   R0,[R0]
001FEA F274            9302         BNE     _482
                       9303 ; rs232cmd.c 2613               {
                       9304 ; rs232cmd.c 2614                       if ( CmdRequest)
001FEC 964842rr        9306         MOV.B   ES,#SEG( _CmdRequest )
001FF0 9908rrrr        9307         MOV.W   R0,#SOF( _CmdRequest )
001FF4 8200            9308         MOV.B   R0L,[R0]
001FF6 F31E            9309         BEQ     _473
                       9310 ; rs232cmd.c 2615                       {
                       9311 ; rs232cmd.c 2616                               if ( ParCnt)
001FF8 964842rr        9313         MOV.B   ES,#SEG( _ParCnt )
001FFC 9908rrrr        9314         MOV.W   R0,#SOF( _ParCnt )
002000 8200            9315         MOV.B   R0L,[R0]
002002 F306            9316         BEQ     _472
                       9317 ; rs232cmd.c 2617                                       SCPIError = ParNotAllowed;
002004 964842rr        9319         MOV.B   ES,#SEG( _SCPIError )
002008 9908rrrr        9320         MOV.W   R0,#SOF( _SCPIError )
00200C BA06            9321         MOV.W   [R0],#06H
00200E FE62            9322         BR      _482
00200E FE62            9322         BR      _482
002010                 9323 _472:
                       9324 ; rs232cmd.c 2618                               else
                       9325 ; rs232cmd.c 2619                               {
                       9326 ; rs232cmd.c 2620                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
002010 964842rr        9328         MOV.B   ES,#SEG( _CBSetup )
002014 9908rrrr        9329         MOV.W   R0,#SOF( _CBSetup )
002018 8200            9330         MOV.B   R0L,[R0]
00201A 964842rr        9331         MOV.B   ES,#SEG( _CBSetup+4 )
00201E 9938rrrr        9332         MOV.W   R3,#SOF( _CBSetup+4 )
002022 8B23            9333         MOV.W   R2,[R3+]
002024 8A33            9334         MOV.W   R3,[R3]
002026 DD28            9335         ASL.D   R2,#08H
002028 C52270          9336         CALL    _PrintSamplesToFLT
                       9337 ; rs232cmd.c 2621       
                       9338 ; rs232cmd.c 2622                                       rs232putchar ( '\n');
00202B 91080A          9340         MOV.B   R0L,#0AH
                       9341         CALL    _rs232putchar
00202E C4rrrrrr       +9341 ;       FCALL   _rs232putchar
                       9342 ; rs232cmd.c 2623                               }
                       9343 ; rs232cmd.c 2624                       }
002032 FE50            9345         BR      _482
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 155

ADDR   CODE            LINE SOURCELINE
002032 FE50            9345         BR      _482
002034                 9346 _473:
                       9347 ; rs232cmd.c 2625                       else
                       9348 ; rs232cmd.c 2626                       {
                       9349 ; rs232cmd.c 2627                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
002034 964842rr        9351         MOV.B   ES,#SEG( _ParCnt )
002038 9908rrrr        9352         MOV.W   R0,#SOF( _ParCnt )
00203C 8200            9353         MOV.B   R0L,[R0]
00203E 910403          9354         CMP.B   R0L,#03H
002041 F21F            9355         BNE     _474
002043 9168rr          9356         MOV.B   R3L,#SEG( __lc_bs )
002046 7177            9357         XOR.B   R3H,R3H
002048 8927            9358         MOV.W   R2,R7
00204A 91A8rr          9359         MOV.B   R5L,#SEG( __lc_bs )
00204D 71BB            9360         XOR.B   R5H,R5H
00204F 404702          9361         LEA     R4,R7+2
002052 9128rr          9362         MOV.B   R1L,#SEG( __lc_bs )
002055 7133            9363         XOR.B   R1H,R1H
002057 400704          9364         LEA     R0,R7+4
00205A 0F03            9365         PUSH.W  R0, R1
00205C 0F30            9367         PUSH.W  R4, R5
00205E 0F0C            9369         PUSH.W  R2, R3
002060 9938rrrr        9371         MOV.W   R3,#SEG( _299 )
002064 9928rrrr        9372         MOV.W   R2,#SOF( _299 )
002068 0F0C            9373         PUSH.W  R2, R3
00206A 9918rrrr        9375         MOV.W   R1,#SEG( _Cmd )
00206E 9908rrrr        9376         MOV.W   R0,#SOF( _Cmd )
                       9377         CALL    _sscanf
002072 C4rrrrrr       +9377 ;       FCALL   _sscanf
002076 99700010        9378         ADD.W   R7,#010H
00207A 99040003        9380         CMP.W   R0,#03H
00207E F306            9381         BEQ     _475
00207E F306            9381         BEQ     _475
002080                 9382 _474:
                       9383 ; rs232cmd.c 2628                                       SCPIError = SyntaxErr;
002080 964842rr        9385         MOV.B   ES,#SEG( _SCPIError )
002084 9908rrrr        9386         MOV.W   R0,#SOF( _SCPIError )
002088 BA03            9387         MOV.W   [R0],#03H
00208A FE24            9388         BR      _482
00208A FE24            9388         BR      _482
00208C                 9389 _475:
                       9390 ; rs232cmd.c 2629                               else
                       9391 ; rs232cmd.c 2630                               {
                       9392 ; rs232cmd.c 2631                                       if (( samples = FLTToSamples( CBSetup.Sys
                            tem, field, line, offset)) == -1)
00208C 964842rr        9394         MOV.B   ES,#SEG( _CBSetup )
002090 9908rrrr        9395         MOV.W   R0,#SOF( _CBSetup )
002094 8200            9396         MOV.B   R0L,[R0]
002096 8A17            9397         MOV.W   R1,[R7]
002098 8C2702          9398         MOV.W   R2,[R7+2]
00209B 8C5706          9399         MOV.W   R5,[R7+6]
00209E 8C4704          9400         MOV.W   R4,[R7+4]
0020A1 0F30            9401         PUSH.W  R4, R5
0020A3 C51FF7          9403         CALL    _FLTToSamples
0020A6 A974            9404         ADDS.W  R7,#04H
0020A8 8931            9406         MOV.W   R3,R1
0020AA 8920            9407         MOV.W   R2,R0
0020AC 9934FFFF        9408         CMP.W   R3,#0FFFFH
0020B0 F202            9409         BNE     _485
0020B2 9924FFFF        9410         CMP.W   R2,#0FFFFH
0020B2 9924FFFF        9410         CMP.W   R2,#0FFFFH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 156

ADDR   CODE            LINE SOURCELINE
0020B6                 9411 _485:
0020B6 F207            9412         BNE     _476
                       9413 ; rs232cmd.c 2632                                               SCPIError = ExecErr;
0020B8 964842rr        9415         MOV.B   ES,#SEG( _SCPIError )
0020BC 9908rrrr        9416         MOV.W   R0,#SOF( _SCPIError )
0020C0 9A08001D        9417         MOV.W   [R0],#01DH
0020C4 FE07            9418         BR      _482
0020C4 FE07            9418         BR      _482
0020C6                 9419 _476:
                       9420 ; rs232cmd.c 2633                                       else            
                       9421 ; rs232cmd.c 2634                                               SetCBDelay( samples/256);
0020C6 B930            9423         MOV.W   R3,#00H
0020C8 99280100        9424         MOV.W   R2,#0100H
0020CC C4rrrrrr        9425         FCALL   __SDIVL
                       9426         CALL    _SetCBDelay
0020D0 C4rrrrrr       +9426 ;       FCALL   _SetCBDelay
                       9427 ; rs232cmd.c 2635                               }
                       9428 ; rs232cmd.c 2636                       }
                       9429 ; rs232cmd.c 2637               }
0020D4                 9431 _482:
                       9432 ; rs232cmd.c 2638       }
0020D4 99700008        9434         ADD.W   R7,#08H
0020D8 2F30            9436         POP.W   R4, R5
0020DA D680            9438         RET
                       9440 ; rs232cmd.c 2639       
                       9441 ; rs232cmd.c 2640       /************************************************************************
                            **/
                       9442 ; rs232cmd.c 2641       /* TSGenScHPhase                                                         
                                                                                                                             
                                                     RS232CMD.C     */
                       9443 ; rs232cmd.c 2642       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9444 ; rs232cmd.c 2643       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       9445 ; rs232cmd.c 2644       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9446 ; rs232cmd.c 2645       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9447 ; rs232cmd.c 2646       /* Function:    Handle the Colorbar ScH-Phase-command.                   
                                                                                            */
                       9448 ; rs232cmd.c 2647       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       9449 ; rs232cmd.c 2648       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9450 ; rs232cmd.c 2649       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9451 ; rs232cmd.c 2650       /************************************************************************
                            **/
                       9452 ; rs232cmd.c 2651       void TSGenScHPhase( void)
                       9453 ; rs232cmd.c 2652       {
                       9454         ALIGN   1
                       9456         PUBLIC  _TSGenScHPhase
0020DC                 9457 _TSGenScHPhase:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 157

ADDR   CODE            LINE SOURCELINE
0020DC A97E            9461         ADDS.W  R7,#0EH
                       9464 ; rs232cmd.c 2653               int schphase;
                       9465 ; rs232cmd.c 2654       
                       9466 ; rs232cmd.c 2655               if ( CmdExecute && !SCPIError)
0020DE 964842rr        9468         MOV.B   ES,#SEG( _CmdExecute )
0020E2 9908rrrr        9469         MOV.W   R0,#SOF( _CmdExecute )
0020E6 8200            9470         MOV.B   R0L,[R0]
0020E8 F35A            9471         BEQ     _497
0020EA 964842rr        9472         MOV.B   ES,#SEG( _SCPIError )
0020EE 9908rrrr        9473         MOV.W   R0,#SOF( _SCPIError )
0020F2 8A00            9474         MOV.W   R0,[R0]
0020F4 F254            9475         BNE     _497
                       9476 ; rs232cmd.c 2656               {
                       9477 ; rs232cmd.c 2657                       if ( CmdRequest)
0020F6 964842rr        9479         MOV.B   ES,#SEG( _CmdRequest )
0020FA 9908rrrr        9480         MOV.W   R0,#SOF( _CmdRequest )
0020FE 8200            9481         MOV.B   R0L,[R0]
002100 F31C            9482         BEQ     _487
                       9483 ; rs232cmd.c 2658                       {
                       9484 ; rs232cmd.c 2659                               if ( ParCnt)
002102 964842rr        9486         MOV.B   ES,#SEG( _ParCnt )
002106 9908rrrr        9487         MOV.W   R0,#SOF( _ParCnt )
00210A 8200            9488         MOV.B   R0L,[R0]
00210C F306            9489         BEQ     _486
                       9490 ; rs232cmd.c 2660                                       SCPIError = ParNotAllowed;
00210E 964842rr        9492         MOV.B   ES,#SEG( _SCPIError )
002112 9908rrrr        9493         MOV.W   R0,#SOF( _SCPIError )
002116 BA06            9494         MOV.W   [R0],#06H
002118 FE42            9495         BR      _497
002118 FE42            9495         BR      _497
00211A                 9496 _486:
                       9497 ; rs232cmd.c 2661                               else
                       9498 ; rs232cmd.c 2662                                       rs232printf( 6, "%d\n", CBSetup.ScHPhase)
                            ;
00211A B906            9500         MOV.W   R0,#06H
00211C 964842rr        9501         MOV.B   ES,#SEG( _CBSetup+8 )
002120 9918rrrr        9502         MOV.W   R1,#SOF( _CBSetup+8 )
002124 8A11            9503         MOV.W   R1,[R1]
002126 0F02            9504         PUSH.W  R1
002128 9938rrrr        9506         MOV.W   R3,#SEG( _9 )
00212C 9928rrrr        9507         MOV.W   R2,#SOF( _9 )
002130 0F0C            9508         PUSH.W  R2, R3
                       9510         CALL    _rs232printf
002132 C4rrrrrr       +9510 ;       FCALL   _rs232printf
002136 A976            9511         ADDS.W  R7,#06H
                       9513 ; rs232cmd.c 2663                       }
002138 FE32            9515         BR      _497
002138 FE32            9515         BR      _497
00213A                 9516 _487:
                       9517 ; rs232cmd.c 2664                       else
                       9518 ; rs232cmd.c 2665                       {
                       9519 ; rs232cmd.c 2666                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
00213A 964842rr        9521         MOV.B   ES,#SEG( _ParCnt )
00213E 9908rrrr        9522         MOV.W   R0,#SOF( _ParCnt )
002142 8200            9523         MOV.B   R0L,[R0]
002144 910401          9524         CMP.B   R0L,#01H
002147 F215            9525         BNE     _488
002149 9918rrrr        9526         MOV.W   R1,#SEG( _Cmd )
00214D 9908rrrr        9527         MOV.W   R0,#SOF( _Cmd )
002151 9168rr          9528         MOV.B   R3L,#SEG( __lc_bs )
002154 7177            9529         XOR.B   R3H,R3H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 158

ADDR   CODE            LINE SOURCELINE
002156 8927            9530         MOV.W   R2,R7
002158 0F0C            9531         PUSH.W  R2, R3
00215A 9938rrrr        9533         MOV.W   R3,#SEG( _10 )
00215E 9928rrrr        9534         MOV.W   R2,#SOF( _10 )
002162 0F0C            9535         PUSH.W  R2, R3
                       9537         CALL    _sscanf
002164 C4rrrrrr       +9537 ;       FCALL   _sscanf
002168 99700008        9538         ADD.W   R7,#08H
00216C 99040001        9540         CMP.W   R0,#01H
002170 F306            9541         BEQ     _489
002170 F306            9541         BEQ     _489
002172                 9542 _488:
                       9543 ; rs232cmd.c 2667                                       SCPIError = SyntaxErr;
002172 964842rr        9545         MOV.B   ES,#SEG( _SCPIError )
002176 9908rrrr        9546         MOV.W   R0,#SOF( _SCPIError )
00217A BA03            9547         MOV.W   [R0],#03H
00217C FE10            9548         BR      _497
00217C FE10            9548         BR      _497
00217E                 9549 _489:
                       9550 ; rs232cmd.c 2668                               else
                       9551 ; rs232cmd.c 2669                               {
                       9552 ; rs232cmd.c 2670                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
00217E 9A74FF4D        9554         CMP.W   [R7],#0FF4DH
002182 FB03            9555         BLT     _490
002184 9A7400B4        9556         CMP.W   [R7],#0B4H
002188 FD07            9557         BLE     _491
002188 FD07            9557         BLE     _491
00218A                 9558 _490:
                       9559 ; rs232cmd.c 2671                                               SCPIError = DataOutOfRange;
00218A 964842rr        9561         MOV.B   ES,#SEG( _SCPIError )
00218E 9908rrrr        9562         MOV.W   R0,#SOF( _SCPIError )
002192 9A080021        9563         MOV.W   [R0],#021H
002196 FE03            9564         BR      _497
002196 FE03            9564         BR      _497
002198                 9565 _491:
                       9566 ; rs232cmd.c 2672                                       else
                       9567 ; rs232cmd.c 2673                                               SetCBScHPhase( schphase);
002198 8A07            9569         MOV.W   R0,[R7]
                       9570         CALL    _SetCBScHPhase
00219A C4rrrrrr       +9570 ;       FCALL   _SetCBScHPhase
                       9571 ; rs232cmd.c 2674                               }
                       9572 ; rs232cmd.c 2675                       }
                       9573 ; rs232cmd.c 2676               }
00219E                 9575 _497:
                       9576 ; rs232cmd.c 2677       }
00219E A972            9578         ADDS.W  R7,#02H
0021A0 D680            9580         RET
                       9582 ; rs232cmd.c 2678       
                       9583 ; rs232cmd.c 2679       /************************************************************************
                            **/
                       9584 ; rs232cmd.c 2680       /* TSGenEmbAudioSignal                                                   
                                                                                                                             
                            RS232CMD.C      */
                       9585 ; rs232cmd.c 2681       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9586 ; rs232cmd.c 2682       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 159

ADDR   CODE            LINE SOURCELINE
                       9587 ; rs232cmd.c 2683       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9588 ; rs232cmd.c 2684       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9589 ; rs232cmd.c 2685       /* Function:    Handle the Colorbar embedded audio signal                
                                                                                            */
                       9590 ; rs232cmd.c 2686       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       9591 ; rs232cmd.c 2687       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9592 ; rs232cmd.c 2688       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9593 ; rs232cmd.c 2689       /************************************************************************
                            **/
                       9594 ; rs232cmd.c 2690       void TSGenEmbAudioSignal( void)
                       9595 ; rs232cmd.c 2691       {
                       9596         ALIGN   1
                       9598         PUBLIC  _TSGenEmbAudioSignal
0021A2                 9599 _TSGenEmbAudioSignal:
0021A2 0F30            9603         PUSH.W  R4, R5
                       9609 ; rs232cmd.c 2692               int signal;
                       9610 ; rs232cmd.c 2693               char code *str;
                       9611 ; rs232cmd.c 2694       
                       9612 ; rs232cmd.c 2695               if ( CmdExecute && !SCPIError)
0021A4 964842rr        9614         MOV.B   ES,#SEG( _CmdExecute )
0021A8 9908rrrr        9615         MOV.W   R0,#SOF( _CmdExecute )
0021AC 8200            9616         MOV.B   R0L,[R0]
0021AE F36F            9617         BEQ     _513
0021B0 964842rr        9618         MOV.B   ES,#SEG( _SCPIError )
0021B4 9908rrrr        9619         MOV.W   R0,#SOF( _SCPIError )
0021B8 8A00            9620         MOV.W   R0,[R0]
0021BA F269            9621         BNE     _513
                       9622 ; rs232cmd.c 2696               {
                       9623 ; rs232cmd.c 2697                       if ( CmdRequest)
0021BC 964842rr        9625         MOV.B   ES,#SEG( _CmdRequest )
0021C0 9908rrrr        9626         MOV.W   R0,#SOF( _CmdRequest )
0021C4 8200            9627         MOV.B   R0L,[R0]
0021C6 F33F            9628         BEQ     _505
                       9629 ; rs232cmd.c 2698                       {
                       9630 ; rs232cmd.c 2699                               if ( ParCnt)
0021C8 964842rr        9632         MOV.B   ES,#SEG( _ParCnt )
0021CC 9908rrrr        9633         MOV.W   R0,#SOF( _ParCnt )
0021D0 8200            9634         MOV.B   R0L,[R0]
0021D2 F306            9635         BEQ     _502
                       9636 ; rs232cmd.c 2700                                       SCPIError = ParNotAllowed;
0021D4 964842rr        9638         MOV.B   ES,#SEG( _SCPIError )
0021D8 9908rrrr        9639         MOV.W   R0,#SOF( _SCPIError )
0021DC BA06            9640         MOV.W   [R0],#06H
0021DE FE57            9641         BR      _513
0021DE FE57            9641         BR      _513
0021E0                 9642 _502:
                       9643 ; rs232cmd.c 2701                               else
                       9644 ; rs232cmd.c 2702                               {
                       9645 ; rs232cmd.c 2703                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
0021E0 964842rr        9647         MOV.B   ES,#SEG( _CBSetup+10 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 160

ADDR   CODE            LINE SOURCELINE
0021E4 9908rrrr        9648         MOV.W   R0,#SOF( _CBSetup+10 )
0021E8 8200            9649         MOV.B   R0L,[R0]
0021EA E8000C          9650         MULU.B  R0L,#0CH
0021ED 8920            9651         MOV.W   R2,R0
0021EF B930            9652         MOVS.W  R3,#00H
0021F1 9918rrrr        9653         MOV.W   R1,#SEG( _EmbAudioSignalPar )
0021F5 9908rrrr        9654         MOV.W   R0,#SOF( _EmbAudioSignalPar )
0021F9 0902            9655         ADD.W   R0,R2
0021FB 1913            9656         ADDC.W  R1,R3
0021FD 862C43          9657         MOV.B   CS,R1L
002200 8820            9658         MOVC.W  R2,[R0+]
002202 99040000        9659         CMP.W   R0,#00H
002206 F202            9660         BNE     _514
002208 A64143          9661         ADDS.B  CS,#01H
002208 A6414300        9661         ADDS.B  CS,#01H
00220C                 9662 _514:
00220C 8830            9663         MOVC.W  R3,[R0+]
00220E 8953            9664         MOV.W   R5,R3
002210 8942            9665         MOV.W   R4,R2
                       9667 ; rs232cmd.c 2704       
                       9668 ; rs232cmd.c 2705                                       while ( *str)
002212 866C43          9670         MOV.B   CS,R3L
002215 8062            9671         MOVC.B  R3L,[R2+]
002217 F312            9672         BEQ     _504
002217 F31200          9672         BEQ     _504
00221A                 9673 _503:
                       9674 ; rs232cmd.c 2706                                               rs232putchar( *str++);
00221A 8915            9676         MOV.W   R1,R5
00221C 8904            9677         MOV.W   R0,R4
00221E 862C43          9678         MOV.B   CS,R1L
002221 8020            9679         MOVC.B  R1L,[R0+]
002223 8102            9680         MOV.B   R0L,R1L
                       9681         CALL    _rs232putchar
002225 C4rrrrrr       +9681 ;       FCALL   _rs232putchar
002229 99400001        9682         ADD.W   R4,#01H
00222D 99510000        9683         ADDC.W  R5,#00H
002231 8915            9687         MOV.W   R1,R5
002233 8904            9688         MOV.W   R0,R4
002235 862C43          9689         MOV.B   CS,R1L
002238 8020            9690         MOVC.B  R1L,[R0+]
00223A F2EF            9691         BNE     _503
00223C                 9693 _504:
                       9694 ; rs232cmd.c 2707       
                       9695 ; rs232cmd.c 2708                                       rs232putchar('\n');
00223C 91080A          9697         MOV.B   R0L,#0AH
                       9698         CALL    _rs232putchar
00223F C4rrrrrr       +9698 ;       FCALL   _rs232putchar
                       9699 ; rs232cmd.c 2709                               }
                       9700 ; rs232cmd.c 2710                       }
002243 FE25            9702         BR      _513
002243 FE2500          9702         BR      _513
002246                 9703 _505:
                       9704 ; rs232cmd.c 2711                       else
                       9705 ; rs232cmd.c 2712                       {
                       9706 ; rs232cmd.c 2713                               if ( ParCnt != 1)
002246 964842rr        9708         MOV.B   ES,#SEG( _ParCnt )
00224A 9908rrrr        9709         MOV.W   R0,#SOF( _ParCnt )
00224E 8200            9710         MOV.B   R0L,[R0]
002250 910401          9711         CMP.B   R0L,#01H
002253 F307            9712         BEQ     _506
                       9713 ; rs232cmd.c 2714                                       SCPIError = SyntaxErr;
002255 964842rr        9715         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 161

ADDR   CODE            LINE SOURCELINE
002259 9908rrrr        9716         MOV.W   R0,#SOF( _SCPIError )
00225D BA03            9717         MOV.W   [R0],#03H
00225F FE17            9718         BR      _513
00225F FE1700          9718         BR      _513
002262                 9719 _506:
                       9720 ; rs232cmd.c 2715                               else
                       9721 ; rs232cmd.c 2716                               {
                       9722 ; rs232cmd.c 2717                                       signal = FindParameter( Cmd, EmbAudioSign
                            alPar);
002262 9918rrrr        9724         MOV.W   R1,#SEG( _Cmd )
002266 9908rrrr        9725         MOV.W   R0,#SOF( _Cmd )
00226A 9938rrrr        9726         MOV.W   R3,#SEG( _EmbAudioSignalPar )
00226E 9928rrrr        9727         MOV.W   R2,#SOF( _EmbAudioSignalPar )
002272 C51EC3          9728         CALL    _FindParameter
                       9730 ; rs232cmd.c 2718               
                       9731 ; rs232cmd.c 2719                                       if ( signal > -1)
002275 9904FFFF        9733         CMP.W   R0,#0FFFFH
002279 FD04            9734         BLE     _507
                       9736 ; rs232cmd.c 2720                                               SetCBEmbAudioSignal( signal);
                       9738         CALL    _SetCBEmbAudioSignal
00227B C4rrrrrr       +9738 ;       FCALL   _SetCBEmbAudioSignal
00227F FE07            9739         BR      _513
00227F FE0700          9739         BR      _513
002282                 9740 _507:
                       9741 ; rs232cmd.c 2721                                       else
                       9742 ; rs232cmd.c 2722                                               SCPIError = DataOutOfRange;
002282 964842rr        9744         MOV.B   ES,#SEG( _SCPIError )
002286 9908rrrr        9745         MOV.W   R0,#SOF( _SCPIError )
00228A 9A080021        9746         MOV.W   [R0],#021H
                       9747 ; rs232cmd.c 2723                               }
                       9748 ; rs232cmd.c 2724                       }
                       9749 ; rs232cmd.c 2725               }
00228E                 9751 _513:
                       9752 ; rs232cmd.c 2726       }
00228E 2F30            9754         POP.W   R4, R5
002290 D680            9756         RET
                       9759 ; rs232cmd.c 2727       
                       9760 ; rs232cmd.c 2728       /************************************************************************
                            **/
                       9761 ; rs232cmd.c 2729       /* AudioGenOutput                                                        
                                                                                                                             
                                                 RS232CMD.C */
                       9762 ; rs232cmd.c 2730       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9763 ; rs232cmd.c 2731       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                       9764 ; rs232cmd.c 2732       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                       9765 ; rs232cmd.c 2733       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9766 ; rs232cmd.c 2734       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                       9767 ; rs232cmd.c 2735       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 162

ADDR   CODE            LINE SOURCELINE
                       9768 ; rs232cmd.c 2736       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9769 ; rs232cmd.c 2737       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9770 ; rs232cmd.c 2738       /************************************************************************
                            **/
                       9771 ; rs232cmd.c 2739       void AudioGenOutput( void)
                       9772 ; rs232cmd.c 2740       {
                       9773         ALIGN   1
                       9775         PUBLIC  _AudioGenOutput
002292                 9776 _AudioGenOutput:
002292 0F30            9780         PUSH.W  R4, R5
                       9786 ; rs232cmd.c 2741               int output;
                       9787 ; rs232cmd.c 2742               char code *str;
                       9788 ; rs232cmd.c 2743       
                       9789 ; rs232cmd.c 2744               if ( CmdExecute && !SCPIError)
002294 964842rr        9791         MOV.B   ES,#SEG( _CmdExecute )
002298 9908rrrr        9792         MOV.W   R0,#SOF( _CmdExecute )
00229C 8200            9793         MOV.B   R0L,[R0]
00229E F377            9794         BEQ     _529
0022A0 964842rr        9795         MOV.B   ES,#SEG( _SCPIError )
0022A4 9908rrrr        9796         MOV.W   R0,#SOF( _SCPIError )
0022A8 8A00            9797         MOV.W   R0,[R0]
0022AA F271            9798         BNE     _529
                       9799 ; rs232cmd.c 2745               {
                       9800 ; rs232cmd.c 2746                       if ( CmdRequest)
0022AC 964842rr        9802         MOV.B   ES,#SEG( _CmdRequest )
0022B0 9908rrrr        9803         MOV.W   R0,#SOF( _CmdRequest )
0022B4 8200            9804         MOV.B   R0L,[R0]
0022B6 F33F            9805         BEQ     _520
                       9806 ; rs232cmd.c 2747                       {
                       9807 ; rs232cmd.c 2748                               if ( ParCnt)
0022B8 964842rr        9809         MOV.B   ES,#SEG( _ParCnt )
0022BC 9908rrrr        9810         MOV.W   R0,#SOF( _ParCnt )
0022C0 8200            9811         MOV.B   R0L,[R0]
0022C2 F306            9812         BEQ     _517
                       9813 ; rs232cmd.c 2749                                       SCPIError = ParNotAllowed;
0022C4 964842rr        9815         MOV.B   ES,#SEG( _SCPIError )
0022C8 9908rrrr        9816         MOV.W   R0,#SOF( _SCPIError )
0022CC BA06            9817         MOV.W   [R0],#06H
0022CE FE5F            9818         BR      _529
0022CE FE5F            9818         BR      _529
0022D0                 9819 _517:
                       9820 ; rs232cmd.c 2750                               else
                       9821 ; rs232cmd.c 2751                               {
                       9822 ; rs232cmd.c 2752                                       str = AudioOutputPar[AudioOutput].LongNam
                            e;
0022D0 964842rr        9824         MOV.B   ES,#SEG( _AudioOutput )
0022D4 9908rrrr        9825         MOV.W   R0,#SOF( _AudioOutput )
0022D8 8A00            9826         MOV.W   R0,[R0]
0022DA E900000C        9827         MULU.W  R0,#0CH
0022DE 8920            9828         MOV.W   R2,R0
0022E0 B930            9829         MOVS.W  R3,#00H
0022E2 9918rrrr        9830         MOV.W   R1,#SEG( _AudioOutputPar )
0022E6 9908rrrr        9831         MOV.W   R0,#SOF( _AudioOutputPar )
0022EA 0902            9832         ADD.W   R0,R2
0022EC 1913            9833         ADDC.W  R1,R3
0022EE 862C43          9834         MOV.B   CS,R1L
0022F1 8820            9835         MOVC.W  R2,[R0+]
0022F3 99040000        9836         CMP.W   R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 163

ADDR   CODE            LINE SOURCELINE
0022F7 F202            9837         BNE     _530
0022F9 A64143          9838         ADDS.B  CS,#01H
0022F9 A64143          9838         ADDS.B  CS,#01H
0022FC                 9839 _530:
0022FC 8830            9840         MOVC.W  R3,[R0+]
0022FE 8953            9841         MOV.W   R5,R3
002300 8942            9842         MOV.W   R4,R2
                       9844 ; rs232cmd.c 2753       
                       9845 ; rs232cmd.c 2754                                       while ( *str)
002302 866C43          9847         MOV.B   CS,R3L
002305 8062            9848         MOVC.B  R3L,[R2+]
002307 F312            9849         BEQ     _519
002307 F31200          9849         BEQ     _519
00230A                 9850 _518:
                       9851 ; rs232cmd.c 2755                                               rs232putchar( *str++);
00230A 8915            9853         MOV.W   R1,R5
00230C 8904            9854         MOV.W   R0,R4
00230E 862C43          9855         MOV.B   CS,R1L
002311 8020            9856         MOVC.B  R1L,[R0+]
002313 8102            9857         MOV.B   R0L,R1L
                       9858         CALL    _rs232putchar
002315 C4rrrrrr       +9858 ;       FCALL   _rs232putchar
002319 99400001        9859         ADD.W   R4,#01H
00231D 99510000        9860         ADDC.W  R5,#00H
002321 8915            9864         MOV.W   R1,R5
002323 8904            9865         MOV.W   R0,R4
002325 862C43          9866         MOV.B   CS,R1L
002328 8020            9867         MOVC.B  R1L,[R0+]
00232A F2EF            9868         BNE     _518
00232C                 9870 _519:
                       9871 ; rs232cmd.c 2756       
                       9872 ; rs232cmd.c 2757                                       rs232putchar('\n');
00232C 91080A          9874         MOV.B   R0L,#0AH
                       9875         CALL    _rs232putchar
00232F C4rrrrrr       +9875 ;       FCALL   _rs232putchar
                       9876 ; rs232cmd.c 2758                               }
                       9877 ; rs232cmd.c 2759                       }
002333 FE2D            9879         BR      _529
002333 FE2D00          9879         BR      _529
002336                 9880 _520:
                       9881 ; rs232cmd.c 2760                       else
                       9882 ; rs232cmd.c 2761                       {
                       9883 ; rs232cmd.c 2762                               if ( ParCnt != 1)
002336 964842rr        9885         MOV.B   ES,#SEG( _ParCnt )
00233A 9908rrrr        9886         MOV.W   R0,#SOF( _ParCnt )
00233E 8200            9887         MOV.B   R0L,[R0]
002340 910401          9888         CMP.B   R0L,#01H
002343 F307            9889         BEQ     _521
                       9890 ; rs232cmd.c 2763                                       SCPIError = SyntaxErr;
002345 964842rr        9892         MOV.B   ES,#SEG( _SCPIError )
002349 9908rrrr        9893         MOV.W   R0,#SOF( _SCPIError )
00234D BA03            9894         MOV.W   [R0],#03H
00234F FE1F            9895         BR      _529
00234F FE1F00          9895         BR      _529
002352                 9896 _521:
                       9897 ; rs232cmd.c 2764                               else
                       9898 ; rs232cmd.c 2765                               {
                       9899 ; rs232cmd.c 2766                                       output = FindParameter( Cmd, AudioOutputP
                            ar);
002352 9918rrrr        9901         MOV.W   R1,#SEG( _Cmd )
002356 9908rrrr        9902         MOV.W   R0,#SOF( _Cmd )
00235A 9938rrrr        9903         MOV.W   R3,#SEG( _AudioOutputPar )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 164

ADDR   CODE            LINE SOURCELINE
00235E 9928rrrr        9904         MOV.W   R2,#SOF( _AudioOutputPar )
002362 C51E4B          9905         CALL    _FindParameter
                       9907 ; rs232cmd.c 2767               
                       9908 ; rs232cmd.c 2768                                       if ( output > -1)
002365 9904FFFF        9910         CMP.W   R0,#0FFFFH
002369 FD0C            9911         BLE     _522
                       9912 ; rs232cmd.c 2769                                       {
                       9913 ; rs232cmd.c 2770                                               if ( SetAudioOutput( output) == F
                            AIL)
                       9915         CALL    _SetAudioOutput
00236B C4rrrrrr       +9915 ;       FCALL   _SetAudioOutput
00236F 6900            9917         OR.W    R0,R0
002371 F20E            9918         BNE     _529
                       9919 ; rs232cmd.c 2771                                                       SCPIError = ExecErr;
002373 964842rr        9921         MOV.B   ES,#SEG( _SCPIError )
002377 9908rrrr        9922         MOV.W   R0,#SOF( _SCPIError )
00237B 9A08001D        9923         MOV.W   [R0],#01DH
                       9924 ; rs232cmd.c 2772                                       }
00237F FE07            9926         BR      _529
00237F FE0700          9926         BR      _529
002382                 9927 _522:
                       9928 ; rs232cmd.c 2773                                       else
                       9929 ; rs232cmd.c 2774                                               SCPIError = DataOutOfRange;
002382 964842rr        9931         MOV.B   ES,#SEG( _SCPIError )
002386 9908rrrr        9932         MOV.W   R0,#SOF( _SCPIError )
00238A 9A080021        9933         MOV.W   [R0],#021H
                       9934 ; rs232cmd.c 2775                               }
                       9935 ; rs232cmd.c 2776                       }
                       9936 ; rs232cmd.c 2777               }
00238E                 9938 _529:
                       9939 ; rs232cmd.c 2778       }
00238E 2F30            9941         POP.W   R4, R5
002390 D680            9943         RET
                       9946 ; rs232cmd.c 2779       
                       9947 ; rs232cmd.c 2780       /************************************************************************
                            **/
                       9948 ; rs232cmd.c 2781       /* AudioGenAnalog                                                        
                                                                                                                             
                                                 RS232CMD.C */
                       9949 ; rs232cmd.c 2782       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9950 ; rs232cmd.c 2783       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                    */
                       9951 ; rs232cmd.c 2784       /* Revised:             000705                                           
                                                                                                                             
                                                                                    */
                       9952 ; rs232cmd.c 2785       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9953 ; rs232cmd.c 2786       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                       9954 ; rs232cmd.c 2787       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                       9955 ; rs232cmd.c 2788       /* Returns:       --                                                     
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 165

ADDR   CODE            LINE SOURCELINE
                       9956 ; rs232cmd.c 2789       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9957 ; rs232cmd.c 2790       /************************************************************************
                            **/
                       9958 ; rs232cmd.c 2791       void AudioGenAnalog( void)
                       9959 ; rs232cmd.c 2792       {
                       9960         ALIGN   1
                       9962         PUBLIC  _AudioGenAnalog
002392                 9963 _AudioGenAnalog:
002392 0F70            9967         PUSH.W  R4, R5, R6
                       9973 ; rs232cmd.c 2793               char code *str;
                       9974 ; rs232cmd.c 2794               int level;
                       9975 ; rs232cmd.c 2795       
                       9976 ; rs232cmd.c 2796               if ( CmdExecute && !SCPIError)
002394 964842rr        9978         MOV.B   ES,#SEG( _CmdExecute )
002398 9908rrrr        9979         MOV.W   R0,#SOF( _CmdExecute )
00239C 8200            9980         MOV.B   R0L,[R0]
                       9981         BEQ     _605
00239E F202           +9981 ;       BNE     _LG_610
0023A0 D500F6         +9981 ;       JMP.L   _605
0023A4 D500F600       +9981 ;       JMP.L   _605
0023A4                +9981 _LG_610:
0023A4 964842rr        9982         MOV.B   ES,#SEG( _SCPIError )
0023A8 9908rrrr        9983         MOV.W   R0,#SOF( _SCPIError )
0023AC 8A00            9984         MOV.W   R0,[R0]
                       9985         BNE     _605
0023AE F302           +9985 ;       BEQ     _LG_612
0023B0 D500EE         +9985 ;       JMP.L   _605
0023B4 D500EE00       +9985 ;       JMP.L   _605
0023B4                +9985 _LG_612:
                       9986 ; rs232cmd.c 2797               {
                       9987 ; rs232cmd.c 2798                       if ( !CmdRequest)
0023B4 964842rr        9989         MOV.B   ES,#SEG( _CmdRequest )
0023B8 9908rrrr        9990         MOV.W   R0,#SOF( _CmdRequest )
0023BC 8200            9991         MOV.B   R0L,[R0]
0023BE F207            9992         BNE     _534
                       9993 ; rs232cmd.c 2799                                       SCPIError = SyntaxErr;
0023C0 964842rr        9995         MOV.B   ES,#SEG( _SCPIError )
0023C4 9908rrrr        9996         MOV.W   R0,#SOF( _SCPIError )
0023C8 BA03            9997         MOV.W   [R0],#03H
                       9998         BR      _605
0023CA D500E1         +9998         JMP.L   _605
0023CA D500E100       +9998         JMP.L   _605
0023CE                 9999 _534:
                      10001 ; rs232cmd.c 2800                       else
                      10002 ; rs232cmd.c 2801                       {
                      10003 ; rs232cmd.c 2802                               if ( ParCnt)
0023CE 964842rr       10005         MOV.B   ES,#SEG( _ParCnt )
0023D2 9908rrrr       10006         MOV.W   R0,#SOF( _ParCnt )
0023D6 8200           10007         MOV.B   R0L,[R0]
0023D8 F307           10008         BEQ     _535
                      10009 ; rs232cmd.c 2803                                       SCPIError = ParNotAllowed;
0023DA 964842rr       10011         MOV.B   ES,#SEG( _SCPIError )
0023DE 9908rrrr       10012         MOV.W   R0,#SOF( _SCPIError )
0023E2 BA06           10013         MOV.W   [R0],#06H
                      10014         BR      _605
0023E4 D500D4         +10014         JMP.L   _605
0023E4 D500D400       +10014         JMP.L   _605
0023E8                10015 _535:
000000                10017 RS232CMD_IR     SEGMENT HCODE INSEGMENT ROMDATA
000000                10018         RSEG    RS232CMD_IR
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 166

ADDR   CODE            LINE SOURCELINE
                      10019         ALIGN   1
000000                10020 __swtable607:
000000 rrrrrrrrrrrrrr 10021         DW      SOF _538,SEG _538
       rrrrrrrrrrrrrr       
       rrrr                 
000004 rrrrrrrrrrrrrr 10022         DW      SOF _539,SEG _539
       rrrrrrrrrrrrrr       
       rrrr                 
000008 rrrrrrrrrrrrrr 10023         DW      SOF _540,SEG _540
       rrrrrrrrrrrrrr       
       rrrr                 
00000C rrrrrrrrrrrrrr 10024         DW      SOF _541,SEG _541
       rrrrrrrrrrrrrr       
       rrrr                 
000010 rrrrrrrrrrrrrr 10025         DW      SOF _542,SEG _542
       rrrrrrrrrrrrrr       
       rrrr                 
000014 rrrrrrrrrrrrrr 10026         DW      SOF _543,SEG _543
       rrrrrrrrrrrrrr       
       rrrr                 
000018 rrrrrrrrrrrrrr 10027         DW      SOF _544,SEG _544
       rrrrrrrrrrrrrr       
       rrrr                 
00001C rrrrrrrrrrrrrr 10028         DW      SOF _545,SEG _545
       rrrrrrrrrrrrrr       
       rrrr                 
000020 rrrrrrrrrrrrrr 10029         DW      SOF _546,SEG _546
       rrrrrrrrrrrrrr       
       rrrr                 
000024 rrrrrrrrrrrrrr 10030         DW      SOF _547,SEG _547
       rrrrrrrrrrrrrr       
       rrrr                 
000028 rrrrrrrrrrrrrr 10031         DW      SOF _548,SEG _548
       rrrrrrrrrrrrrr       
       rrrr                 
00002C rrrrrrrrrrrrrr 10032         DW      SOF _549,SEG _549
       rrrrrrrrrrrrrr       
       rrrr                 
000030 rrrrrrrrrrrrrr 10033         DW      SOF _550,SEG _550
       rrrrrrrrrrrrrr       
       rrrr                 
000034 rrrrrrrrrrrrrr 10034         DW      SOF _551,SEG _551
       rrrrrrrrrrrrrr       
       rrrr                 
000038 rrrrrrrrrrrrrr 10035         DW      SOF _552,SEG _552
       rrrrrrrrrrrrrr       
       rrrr                 
00003C rrrrrrrrrrrrrr 10036         DW      SOF _553,SEG _553
       rrrrrrrrrrrrrr       
       rrrr                 
000040 rrrrrrrrrrrrrr 10037         DW      SOF _554,SEG _554
       rrrrrrrrrrrrrr       
       rrrr                 
000044 rrrrrrrrrrrrrr 10038         DW      SOF _555,SEG _555
       rrrrrrrrrrrrrr       
       rrrr                 
000048 rrrrrrrrrrrrrr 10039         DW      SOF _556,SEG _556
       rrrrrrrrrrrrrr       
       rrrr                 
00004C rrrrrrrrrrrrrr 10040         DW      SOF _557,SEG _557
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 167

ADDR   CODE            LINE SOURCELINE
000050 rrrrrrrrrrrrrr 10041         DW      SOF _558,SEG _558
       rrrrrrrrrrrrrr       
       rrrr                 
000054 rrrrrrrrrrrrrr 10042         DW      SOF _559,SEG _559
       rrrrrrrrrrrrrr       
       rrrr                 
000058 rrrrrrrrrrrrrr 10043         DW      SOF _560,SEG _560
       rrrrrrrrrrrrrr       
       rrrr                 
00005C rrrrrrrrrrrrrr 10044         DW      SOF _561,SEG _561
       rrrrrrrrrrrrrr       
       rrrr                 
000060 rrrrrrrrrrrrrr 10045         DW      SOF _562,SEG _562
       rrrrrrrrrrrrrr       
       rrrr                 
000064 rrrrrrrrrrrrrr 10046         DW      SOF _563,SEG _563
       rrrrrrrrrrrrrr       
       rrrr                 
000068 rrrrrrrrrrrrrr 10047         DW      SOF _564,SEG _564
       rrrrrrrrrrrrrr       
       rrrr                 
00006C rrrrrrrrrrrrrr 10048         DW      SOF _565,SEG _565
       rrrrrrrrrrrrrr       
       rrrr                 
000070 rrrrrrrrrrrrrr 10049         DW      SOF _566,SEG _566
       rrrrrrrrrrrrrr       
       rrrr                 
000074 rrrrrrrrrrrrrr 10050         DW      SOF _567,SEG _567
       rrrrrrrrrrrrrr       
       rrrr                 
0023E8                10051         RSEG    RS232CMD_PR
                      10053 ; rs232cmd.c 2804                               else
                      10054 ; rs232cmd.c 2805                               {
                      10055 ; rs232cmd.c 2806                                       str = AudioSignalPar[AudioSetup[AnalogAud
                            io].Signal].LongName;
0023E8 964842rr       10057         MOV.B   ES,#SEG( _AudioSetup+2 )
0023EC 9908rrrr       10058         MOV.W   R0,#SOF( _AudioSetup+2 )
0023F0 8A00           10059         MOV.W   R0,[R0]
0023F2 E900000C       10060         MULU.W  R0,#0CH
0023F6 8920           10061         MOV.W   R2,R0
0023F8 B930           10062         MOVS.W  R3,#00H
0023FA 9918rrrr       10063         MOV.W   R1,#SEG( _AudioSignalPar )
0023FE 9908rrrr       10064         MOV.W   R0,#SOF( _AudioSignalPar )
002402 0902           10065         ADD.W   R0,R2
002404 1913           10066         ADDC.W  R1,R3
002406 862C43         10067         MOV.B   CS,R1L
002409 8820           10068         MOVC.W  R2,[R0+]
00240B 99040000       10069         CMP.W   R0,#00H
00240F F202           10070         BNE     _606
002411 A64143         10071         ADDS.B  CS,#01H
002411 A64143         10071         ADDS.B  CS,#01H
002414                10072 _606:
002414 8830           10073         MOVC.W  R3,[R0+]
002416 8953           10074         MOV.W   R5,R3
002418 8942           10075         MOV.W   R4,R2
                      10077 ; rs232cmd.c 2807       
                      10078 ; rs232cmd.c 2808                                       while ( *str)
00241A 866C43         10080         MOV.B   CS,R3L
00241D 8062           10081         MOVC.B  R3L,[R2+]
00241F F312           10082         BEQ     _537
00241F F31200         10082         BEQ     _537
002422                10083 _536:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 168

ADDR   CODE            LINE SOURCELINE
                      10084 ; rs232cmd.c 2809                                               rs232putchar( *str++);
002422 8915           10086         MOV.W   R1,R5
002424 8904           10087         MOV.W   R0,R4
002426 862C43         10088         MOV.B   CS,R1L
002429 8020           10089         MOVC.B  R1L,[R0+]
00242B 8102           10090         MOV.B   R0L,R1L
                      10091         CALL    _rs232putchar
00242D C4rrrrrr       +10091 ;       FCALL   _rs232putchar
002431 99400001       10092         ADD.W   R4,#01H
002435 99510000       10093         ADDC.W  R5,#00H
002439 8915           10097         MOV.W   R1,R5
00243B 8904           10098         MOV.W   R0,R4
00243D 862C43         10099         MOV.B   CS,R1L
002440 8020           10100         MOVC.B  R1L,[R0+]
002442 F2EF           10101         BNE     _536
002444                10103 _537:
                      10104 ; rs232cmd.c 2810       
                      10105 ; rs232cmd.c 2811                                       rs232putchar(',');
002444 91082C         10107         MOV.B   R0L,#02CH
                      10108         CALL    _rs232putchar
002447 C4rrrrrr       +10108 ;       FCALL   _rs232putchar
                      10109 ; rs232cmd.c 2812       
                      10110 ; rs232cmd.c 2813                                       str = NULL;
00244B B950           10112         MOV.W   R5,#00H
00244D B940           10113         MOV.W   R4,#00H
                      10116 ; rs232cmd.c 2814       
                      10117 ; rs232cmd.c 2815                                       switch ( AudioSetup[AnalogAudio].Level)
00244F 964842rr       10119         MOV.B   ES,#SEG( _AudioSetup+4 )
002453 9908rrrr       10120         MOV.W   R0,#SOF( _AudioSetup+4 )
002457 8A00           10121         MOV.W   R0,[R0]
002459 A90F           10122         ADDS.W  R0,#0FH
00245B 9904001D       10123         CMP.W   R0,#01DH
00245F F85D           10124         BG      _568
002461 D902           10125         ASL.W   R0,#02H
002463 964843rr       10126         MOV.B   CS,#SEG( __swtable607 )
002467 9900rrrr       10127         ADD.W   R0,#SOF( __swtable607 )
00246B 8810           10128         MOVC.W  R1,[R0+]
00246D 0F02           10129         PUSH.W  R1
00246F 8810           10130         MOVC.W  R1,[R0+]
002471 0F02           10131         PUSH.W  R1
002473 D680           10132         RET
                      10133 ; rs232cmd.c 2816                                       {
                      10134 ; rs232cmd.c 2817                                               case P10dBm:
002476                10136 _538:
                      10137 ; rs232cmd.c 2818                                                       level = 10;
002476 9968000A       10139         MOV.W   R6,#0AH
                      10142 ; rs232cmd.c 2819                                                       break;
00247A FE6E           10144         BR      _600
                      10145 ; rs232cmd.c 2820       
                      10146 ; rs232cmd.c 2821                                               case P8dBm:
00247C                10148 _539:
                      10149 ; rs232cmd.c 2822                                                       level = 8;
00247C 99680008       10151         MOV.W   R6,#08H
                      10154 ; rs232cmd.c 2823                                                       break;
002480 FE6B           10156         BR      _600
                      10157 ; rs232cmd.c 2824       
                      10158 ; rs232cmd.c 2825                                               case P7dBm:
002482                10160 _540:
                      10161 ; rs232cmd.c 2826                                                       level = 7;
002482 B967           10163         MOV.W   R6,#07H
                      10166 ; rs232cmd.c 2827                                                       break;
002484 FE69           10168         BR      _600
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 169

ADDR   CODE            LINE SOURCELINE
                      10169 ; rs232cmd.c 2828       
                      10170 ; rs232cmd.c 2829                                               case P6dBm:
002486                10172 _541:
                      10173 ; rs232cmd.c 2830                                                       level = 6;
002486 B966           10175         MOV.W   R6,#06H
                      10178 ; rs232cmd.c 2831                                                       break;
002488 FE67           10180         BR      _600
                      10181 ; rs232cmd.c 2832       
                      10182 ; rs232cmd.c 2833                                               case P5dBm:
00248A                10184 _542:
                      10185 ; rs232cmd.c 2834                                                       level = 5;
00248A B965           10187         MOV.W   R6,#05H
                      10190 ; rs232cmd.c 2835                                                       break;
00248C FE65           10192         BR      _600
                      10193 ; rs232cmd.c 2836       
                      10194 ; rs232cmd.c 2837                                               case P4dBm:
00248E                10196 _543:
                      10197 ; rs232cmd.c 2838                                                       level = 4;
00248E B964           10199         MOV.W   R6,#04H
                      10202 ; rs232cmd.c 2839                                                       break;
002490 FE63           10204         BR      _600
                      10205 ; rs232cmd.c 2840       
                      10206 ; rs232cmd.c 2841                                               case P3dBm:
002492                10208 _544:
                      10209 ; rs232cmd.c 2842                                                       level = 3;
002492 B963           10211         MOV.W   R6,#03H
                      10214 ; rs232cmd.c 2843                                                       break;
002494 FE61           10216         BR      _600
                      10217 ; rs232cmd.c 2844       
                      10218 ; rs232cmd.c 2845                                               case P2dBm:
002496                10220 _545:
                      10221 ; rs232cmd.c 2846                                                       level = 2;
002496 B962           10223         MOV.W   R6,#02H
                      10226 ; rs232cmd.c 2847                                                       break;
002498 FE5F           10228         BR      _600
                      10229 ; rs232cmd.c 2848       
                      10230 ; rs232cmd.c 2849                                               case P1dBm:
00249A                10232 _546:
                      10233 ; rs232cmd.c 2850                                                       level = 1;
00249A B961           10235         MOV.W   R6,#01H
                      10238 ; rs232cmd.c 2851                                                       break;
00249C FE5D           10240         BR      _600
                      10241 ; rs232cmd.c 2852       
                      10242 ; rs232cmd.c 2853                                               case M0dBm:
00249E                10244 _547:
                      10245 ; rs232cmd.c 2854                                                       level = 0;
00249E B960           10247         MOV.W   R6,#00H
                      10250 ; rs232cmd.c 2855                                                       break;
0024A0 FE5B           10252         BR      _600
                      10253 ; rs232cmd.c 2856       
                      10254 ; rs232cmd.c 2857                                               case M1dBm:
0024A2                10256 _548:
                      10257 ; rs232cmd.c 2858                                                       level = -1;
0024A2 9968FFFF       10259         MOV.W   R6,#0FFFFH
                      10262 ; rs232cmd.c 2859                                                       break;
0024A6 FE58           10264         BR      _600
                      10265 ; rs232cmd.c 2860       
                      10266 ; rs232cmd.c 2861                                               case M2dBm:
0024A8                10268 _549:
                      10269 ; rs232cmd.c 2862                                                       level = -2;
0024A8 9968FFFE       10271         MOV.W   R6,#0FFFEH
                      10274 ; rs232cmd.c 2863                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 170

ADDR   CODE            LINE SOURCELINE
0024AC FE55           10276         BR      _600
                      10277 ; rs232cmd.c 2864       
                      10278 ; rs232cmd.c 2865                                               case M3dBm:
0024AE                10280 _550:
                      10281 ; rs232cmd.c 2866                                                       level = -3;
0024AE 9968FFFD       10283         MOV.W   R6,#0FFFDH
                      10286 ; rs232cmd.c 2867                                                       break;
0024B2 FE52           10288         BR      _600
                      10289 ; rs232cmd.c 2868       
                      10290 ; rs232cmd.c 2869                                               case M4dBm:
0024B4                10292 _551:
                      10293 ; rs232cmd.c 2870                                                       level = -4;
0024B4 9968FFFC       10295         MOV.W   R6,#0FFFCH
                      10298 ; rs232cmd.c 2871                                                       break;
0024B8 FE4F           10300         BR      _600
                      10301 ; rs232cmd.c 2872       
                      10302 ; rs232cmd.c 2873                                               case M5dBm:
0024BA                10304 _552:
                      10305 ; rs232cmd.c 2874                                                       level = -5;
0024BA 9968FFFB       10307         MOV.W   R6,#0FFFBH
                      10310 ; rs232cmd.c 2875                                                       break;
0024BE FE4C           10312         BR      _600
                      10313 ; rs232cmd.c 2876       
                      10314 ; rs232cmd.c 2877                                               case M6dBm:
0024C0                10316 _553:
                      10317 ; rs232cmd.c 2878                                                       level = -6;
0024C0 9968FFFA       10319         MOV.W   R6,#0FFFAH
                      10322 ; rs232cmd.c 2879                                                       break;
0024C4 FE49           10324         BR      _600
                      10325 ; rs232cmd.c 2880       
                      10326 ; rs232cmd.c 2881                                               case M7dBm:
0024C6                10328 _554:
                      10329 ; rs232cmd.c 2882                                                       level = -7;
0024C6 9968FFF9       10331         MOV.W   R6,#0FFF9H
                      10334 ; rs232cmd.c 2883                                                       break;
0024CA FE46           10336         BR      _600
                      10337 ; rs232cmd.c 2884       
                      10338 ; rs232cmd.c 2885                                               case M8dBm:
0024CC                10340 _555:
                      10341 ; rs232cmd.c 2886                                                       level = -8;
0024CC 9968FFF8       10343         MOV.W   R6,#0FFF8H
                      10346 ; rs232cmd.c 2887                                                       break;
0024D0 FE43           10348         BR      _600
                      10349 ; rs232cmd.c 2888       
                      10350 ; rs232cmd.c 2889                                               case M9dBm:
0024D2                10352 _556:
                      10353 ; rs232cmd.c 2890                                                       level = -9;
0024D2 9968FFF7       10355         MOV.W   R6,#0FFF7H
                      10358 ; rs232cmd.c 2891                                                       break;
0024D6 FE40           10360         BR      _600
                      10361 ; rs232cmd.c 2892       
                      10362 ; rs232cmd.c 2893                                               case M10dBm:
0024D8                10364 _557:
                      10365 ; rs232cmd.c 2894                                                       level = -10;
0024D8 9968FFF6       10367         MOV.W   R6,#0FFF6H
                      10370 ; rs232cmd.c 2895                                                       break;
0024DC FE3D           10372         BR      _600
                      10373 ; rs232cmd.c 2896       
                      10374 ; rs232cmd.c 2897                                               case M11dBm:
0024DE                10376 _558:
                      10377 ; rs232cmd.c 2898                                                       level = -11;
0024DE 9968FFF5       10379         MOV.W   R6,#0FFF5H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 171

ADDR   CODE            LINE SOURCELINE
                      10382 ; rs232cmd.c 2899                                                       break;
0024E2 FE3A           10384         BR      _600
                      10385 ; rs232cmd.c 2900       
                      10386 ; rs232cmd.c 2901                                               case M12dBm:
0024E4                10388 _559:
                      10389 ; rs232cmd.c 2902                                                       level = -12;
0024E4 9968FFF4       10391         MOV.W   R6,#0FFF4H
                      10394 ; rs232cmd.c 2903                                                       break;
0024E8 FE37           10396         BR      _600
                      10397 ; rs232cmd.c 2904       
                      10398 ; rs232cmd.c 2905                                               case M15dBm:
0024EA                10400 _560:
                      10401 ; rs232cmd.c 2906                                                       level = -15;
0024EA 9968FFF1       10403         MOV.W   R6,#0FFF1H
                      10406 ; rs232cmd.c 2907                                                       break;
0024EE FE34           10408         BR      _600
                      10409 ; rs232cmd.c 2908       
                      10410 ; rs232cmd.c 2909                                               case M18dBm:
0024F0                10412 _561:
                      10413 ; rs232cmd.c 2910                                                       level = -18;
0024F0 9968FFEE       10415         MOV.W   R6,#0FFEEH
                      10418 ; rs232cmd.c 2911                                                       break;
0024F4 FE31           10420         BR      _600
                      10421 ; rs232cmd.c 2912       
                      10422 ; rs232cmd.c 2913                                               case M21dBm:
0024F6                10424 _562:
                      10425 ; rs232cmd.c 2914                                                       level = -21;
0024F6 9968FFEB       10427         MOV.W   R6,#0FFEBH
                      10430 ; rs232cmd.c 2915                                                       break;
0024FA FE2E           10432         BR      _600
                      10433 ; rs232cmd.c 2916       
                      10434 ; rs232cmd.c 2917                                               case M24dBm:
0024FC                10436 _563:
                      10437 ; rs232cmd.c 2918                                                       level = -24;
0024FC 9968FFE8       10439         MOV.W   R6,#0FFE8H
                      10442 ; rs232cmd.c 2919                                                       break;
002500 FE2B           10444         BR      _600
                      10445 ; rs232cmd.c 2920       
                      10446 ; rs232cmd.c 2921                                               case M27dBm:
002502                10448 _564:
                      10449 ; rs232cmd.c 2922                                                       level = -27;
002502 9968FFE5       10451         MOV.W   R6,#0FFE5H
                      10454 ; rs232cmd.c 2923                                                       break;
002506 FE28           10456         BR      _600
                      10457 ; rs232cmd.c 2924       
                      10458 ; rs232cmd.c 2925                                               case M30dBm:
002508                10460 _565:
                      10461 ; rs232cmd.c 2926                                                       level = -30;
002508 9968FFE2       10463         MOV.W   R6,#0FFE2H
                      10466 ; rs232cmd.c 2927                                                       break;
00250C FE25           10468         BR      _600
                      10469 ; rs232cmd.c 2928       
                      10470 ; rs232cmd.c 2929                                               case M33dBm:
00250E                10472 _566:
                      10473 ; rs232cmd.c 2930                                                       level = -33;
00250E 9968FFDF       10475         MOV.W   R6,#0FFDFH
                      10478 ; rs232cmd.c 2931                                                       break;
002512 FE22           10480         BR      _600
                      10481 ; rs232cmd.c 2932       
                      10482 ; rs232cmd.c 2933                                               case M36dBm:
002514                10484 _567:
                      10485 ; rs232cmd.c 2934                                                       level = -36;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 172

ADDR   CODE            LINE SOURCELINE
002514 9968FFDC       10487         MOV.W   R6,#0FFDCH
                      10490 ; rs232cmd.c 2935                                                       break;
002518 FE1F           10492         BR      _600
                      10493 ; rs232cmd.c 2936       
                      10494 ; rs232cmd.c 2937                                               default:
00251A                10496 _568:
                      10497 ; rs232cmd.c 2938                                                       str = SILENCEParTxt;
00251A 9958rrrr       10499         MOV.W   R5,#SEG( _SILENCEParTxt )
00251E 9948rrrr       10500         MOV.W   R4,#SOF( _SILENCEParTxt )
                      10503 ; rs232cmd.c 2939       
                      10504 ; rs232cmd.c 2940                                                       while ( *str)
002522 8915           10506         MOV.W   R1,R5
002524 8904           10507         MOV.W   R0,R4
002526 862C43         10508         MOV.B   CS,R1L
002529 8020           10509         MOVC.B  R1L,[R0+]
00252B F312           10510         BEQ     _570
00252B F31200         10510         BEQ     _570
00252E                10511 _569:
                      10512 ; rs232cmd.c 2941                                                               rs232putchar( *st
                            r++);
00252E 8915           10514         MOV.W   R1,R5
002530 8904           10515         MOV.W   R0,R4
002532 862C43         10516         MOV.B   CS,R1L
002535 8020           10517         MOVC.B  R1L,[R0+]
002537 8102           10518         MOV.B   R0L,R1L
                      10519         CALL    _rs232putchar
002539 C4rrrrrr       +10519 ;       FCALL   _rs232putchar
00253D 99400001       10520         ADD.W   R4,#01H
002541 99510000       10521         ADDC.W  R5,#00H
002545 8915           10525         MOV.W   R1,R5
002547 8904           10526         MOV.W   R0,R4
002549 862C43         10527         MOV.B   CS,R1L
00254C 8020           10528         MOVC.B  R1L,[R0+]
00254E F2EF           10529         BNE     _569
002550                10531 _570:
                      10532 ; rs232cmd.c 2942       
                      10533 ; rs232cmd.c 2943                                                       rs232putchar(',');
002550 91082C         10535         MOV.B   R0L,#02CH
                      10536         CALL    _rs232putchar
002553 C4rrrrrr       +10536 ;       FCALL   _rs232putchar
                      10537 ; rs232cmd.c 2944                                                       break;
                      10538 ; rs232cmd.c 2945                                               }
002558                10540 _600:
                      10541 ; rs232cmd.c 2946       
                      10542 ; rs232cmd.c 2947                                       if ( str == NULL)
002558 6954           10544         OR.W    R5,R4
00255A F20A           10545         BNE     _601
                      10546 ; rs232cmd.c 2948                                               rs232printf( 6, "%d,", level);
00255C B906           10548         MOV.W   R0,#06H
00255E 0F40           10549         PUSH.W  R6
002560 9938rrrr       10552         MOV.W   R3,#SEG( _533 )
002564 9928rrrr       10553         MOV.W   R2,#SOF( _533 )
002568 0F0C           10554         PUSH.W  R2, R3
                      10556         CALL    _rs232printf
00256A C4rrrrrr       +10556 ;       FCALL   _rs232printf
00256E A976           10557         ADDS.W  R7,#06H
002570                10559 _601:
                      10560 ; rs232cmd.c 2949       
                      10561 ; rs232cmd.c 2950                                       rs232printf( 6, "%d\n", AudioSetup[Analog
                            Audio].Click);                  
002570 B906           10563         MOV.W   R0,#06H
002572 964842rr       10564         MOV.B   ES,#SEG( _AudioSetup+12 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 173

ADDR   CODE            LINE SOURCELINE
002576 9918rrrr       10565         MOV.W   R1,#SOF( _AudioSetup+12 )
00257A 8A11           10566         MOV.W   R1,[R1]
00257C 0F02           10567         PUSH.W  R1
00257E 9938rrrr       10569         MOV.W   R3,#SEG( _9 )
002582 9928rrrr       10570         MOV.W   R2,#SOF( _9 )
002586 0F0C           10571         PUSH.W  R2, R3
                      10573         CALL    _rs232printf
002588 C4rrrrrr       +10573 ;       FCALL   _rs232printf
00258C A976           10574         ADDS.W  R7,#06H
                      10576 ; rs232cmd.c 2951                               }
                      10577 ; rs232cmd.c 2952                       }
                      10578 ; rs232cmd.c 2953               }
00258E                10580 _605:
                      10581 ; rs232cmd.c 2954       }
00258E 2F70           10583         POP.W   R4, R5, R6
002590 D680           10585         RET
                      10588 ; rs232cmd.c 2955       
                      10589 ; rs232cmd.c 2956       /************************************************************************
                            **/
                      10590 ; rs232cmd.c 2957       /* AudioGenAnalogSignal                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      10591 ; rs232cmd.c 2958       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10592 ; rs232cmd.c 2959       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      10593 ; rs232cmd.c 2960       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      10594 ; rs232cmd.c 2961       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10595 ; rs232cmd.c 2962       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      10596 ; rs232cmd.c 2963       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      10597 ; rs232cmd.c 2964       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      10598 ; rs232cmd.c 2965       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      10599 ; rs232cmd.c 2966       /************************************************************************
                            **/
                      10600 ; rs232cmd.c 2967       void AudioGenAnalogSignal( void)
                      10601 ; rs232cmd.c 2968       {
                      10602         ALIGN   1
                      10604         PUBLIC  _AudioGenAnalogSignal
002592                10605 _AudioGenAnalogSignal:
002592 0F30           10609         PUSH.W  R4, R5
                      10615 ; rs232cmd.c 2969               int signal;
                      10616 ; rs232cmd.c 2970               char code *str;
                      10617 ; rs232cmd.c 2971       
                      10618 ; rs232cmd.c 2972               if ( CmdExecute && !SCPIError)
002594 964842rr       10620         MOV.B   ES,#SEG( _CmdExecute )
002598 9908rrrr       10621         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 174

ADDR   CODE            LINE SOURCELINE
00259C 8200           10622         MOV.B   R0L,[R0]
00259E F379           10623         BEQ     _620
0025A0 964842rr       10624         MOV.B   ES,#SEG( _SCPIError )
0025A4 9908rrrr       10625         MOV.W   R0,#SOF( _SCPIError )
0025A8 8A00           10626         MOV.W   R0,[R0]
0025AA F273           10627         BNE     _620
                      10628 ; rs232cmd.c 2973               {
                      10629 ; rs232cmd.c 2974                       if ( CmdRequest)
0025AC 964842rr       10631         MOV.B   ES,#SEG( _CmdRequest )
0025B0 9908rrrr       10632         MOV.W   R0,#SOF( _CmdRequest )
0025B4 8200           10633         MOV.B   R0L,[R0]
0025B6 F33F           10634         BEQ     _611
                      10635 ; rs232cmd.c 2975                       {
                      10636 ; rs232cmd.c 2976                               if ( ParCnt)
0025B8 964842rr       10638         MOV.B   ES,#SEG( _ParCnt )
0025BC 9908rrrr       10639         MOV.W   R0,#SOF( _ParCnt )
0025C0 8200           10640         MOV.B   R0L,[R0]
0025C2 F306           10641         BEQ     _608
                      10642 ; rs232cmd.c 2977                                       SCPIError = ParNotAllowed;
0025C4 964842rr       10644         MOV.B   ES,#SEG( _SCPIError )
0025C8 9908rrrr       10645         MOV.W   R0,#SOF( _SCPIError )
0025CC BA06           10646         MOV.W   [R0],#06H
0025CE FE61           10647         BR      _620
0025CE FE61           10647         BR      _620
0025D0                10648 _608:
                      10649 ; rs232cmd.c 2978                               else
                      10650 ; rs232cmd.c 2979                               {
                      10651 ; rs232cmd.c 2980                                       str = AudioSignalPar[AudioSetup[AnalogAud
                            io].Signal].LongName;
0025D0 964842rr       10653         MOV.B   ES,#SEG( _AudioSetup+2 )
0025D4 9908rrrr       10654         MOV.W   R0,#SOF( _AudioSetup+2 )
0025D8 8A00           10655         MOV.W   R0,[R0]
0025DA E900000C       10656         MULU.W  R0,#0CH
0025DE 8920           10657         MOV.W   R2,R0
0025E0 B930           10658         MOVS.W  R3,#00H
0025E2 9918rrrr       10659         MOV.W   R1,#SEG( _AudioSignalPar )
0025E6 9908rrrr       10660         MOV.W   R0,#SOF( _AudioSignalPar )
0025EA 0902           10661         ADD.W   R0,R2
0025EC 1913           10662         ADDC.W  R1,R3
0025EE 862C43         10663         MOV.B   CS,R1L
0025F1 8820           10664         MOVC.W  R2,[R0+]
0025F3 99040000       10665         CMP.W   R0,#00H
0025F7 F202           10666         BNE     _621
0025F9 A64143         10667         ADDS.B  CS,#01H
0025F9 A64143         10667         ADDS.B  CS,#01H
0025FC                10668 _621:
0025FC 8830           10669         MOVC.W  R3,[R0+]
0025FE 8953           10670         MOV.W   R5,R3
002600 8942           10671         MOV.W   R4,R2
                      10673 ; rs232cmd.c 2981       
                      10674 ; rs232cmd.c 2982                                       while ( *str)
002602 866C43         10676         MOV.B   CS,R3L
002605 8062           10677         MOVC.B  R3L,[R2+]
002607 F312           10678         BEQ     _610
002607 F31200         10678         BEQ     _610
00260A                10679 _609:
                      10680 ; rs232cmd.c 2983                                               rs232putchar( *str++);
00260A 8915           10682         MOV.W   R1,R5
00260C 8904           10683         MOV.W   R0,R4
00260E 862C43         10684         MOV.B   CS,R1L
002611 8020           10685         MOVC.B  R1L,[R0+]
002613 8102           10686         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 175

ADDR   CODE            LINE SOURCELINE
                      10687         CALL    _rs232putchar
002615 C4rrrrrr       +10687 ;       FCALL   _rs232putchar
002619 99400001       10688         ADD.W   R4,#01H
00261D 99510000       10689         ADDC.W  R5,#00H
002621 8915           10693         MOV.W   R1,R5
002623 8904           10694         MOV.W   R0,R4
002625 862C43         10695         MOV.B   CS,R1L
002628 8020           10696         MOVC.B  R1L,[R0+]
00262A F2EF           10697         BNE     _609
00262C                10699 _610:
                      10700 ; rs232cmd.c 2984       
                      10701 ; rs232cmd.c 2985                                       rs232putchar('\n');
00262C 91080A         10703         MOV.B   R0L,#0AH
                      10704         CALL    _rs232putchar
00262F C4rrrrrr       +10704 ;       FCALL   _rs232putchar
                      10705 ; rs232cmd.c 2986                               }
                      10706 ; rs232cmd.c 2987                       }
002633 FE2F           10708         BR      _620
002633 FE2F00         10708         BR      _620
002636                10709 _611:
                      10710 ; rs232cmd.c 2988                       else
                      10711 ; rs232cmd.c 2989                       {
                      10712 ; rs232cmd.c 2990                               if ( ParCnt != 1)
002636 964842rr       10714         MOV.B   ES,#SEG( _ParCnt )
00263A 9908rrrr       10715         MOV.W   R0,#SOF( _ParCnt )
00263E 8200           10716         MOV.B   R0L,[R0]
002640 910401         10717         CMP.B   R0L,#01H
002643 F307           10718         BEQ     _612
                      10719 ; rs232cmd.c 2991                                       SCPIError = SyntaxErr;
002645 964842rr       10721         MOV.B   ES,#SEG( _SCPIError )
002649 9908rrrr       10722         MOV.W   R0,#SOF( _SCPIError )
00264D BA03           10723         MOV.W   [R0],#03H
00264F FE21           10724         BR      _620
00264F FE2100         10724         BR      _620
002652                10725 _612:
                      10726 ; rs232cmd.c 2992                               else
                      10727 ; rs232cmd.c 2993                               {
                      10728 ; rs232cmd.c 2994                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002652 9918rrrr       10730         MOV.W   R1,#SEG( _Cmd )
002656 9908rrrr       10731         MOV.W   R0,#SOF( _Cmd )
00265A 9938rrrr       10732         MOV.W   R3,#SEG( _AudioSignalPar )
00265E 9928rrrr       10733         MOV.W   R2,#SOF( _AudioSignalPar )
002662 C51CCB         10734         CALL    _FindParameter
                      10736 ; rs232cmd.c 2995               
                      10737 ; rs232cmd.c 2996                                       if ( signal > -1)
002665 8910           10739         MOV.W   R1,R0
002667 9914FFFF       10740         CMP.W   R1,#0FFFFH
00266B FD0D           10743         BLE     _613
                      10744 ; rs232cmd.c 2997                                       {
                      10745 ; rs232cmd.c 2998                                               if ( SetAudioSignal( AnalogAudio,
                             signal) == FAIL)
00266D B900           10747         MOV.W   R0,#00H
                      10748         CALL    _SetAudioSignal
00266F C4rrrrrr       +10748 ;       FCALL   _SetAudioSignal
002673 6900           10750         OR.W    R0,R0
002675 F20E           10751         BNE     _620
                      10752 ; rs232cmd.c 2999                                                               SCPIError = ExecE
                            rr;
002677 964842rr       10754         MOV.B   ES,#SEG( _SCPIError )
00267B 9908rrrr       10755         MOV.W   R0,#SOF( _SCPIError )
00267F 9A08001D       10756         MOV.W   [R0],#01DH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 176

ADDR   CODE            LINE SOURCELINE
                      10757 ; rs232cmd.c 3000                                       }
002683 FE07           10759         BR      _620
002683 FE0700         10759         BR      _620
002686                10760 _613:
                      10761 ; rs232cmd.c 3001                                       else
                      10762 ; rs232cmd.c 3002                                               SCPIError = DataOutOfRange;
002686 964842rr       10764         MOV.B   ES,#SEG( _SCPIError )
00268A 9908rrrr       10765         MOV.W   R0,#SOF( _SCPIError )
00268E 9A080021       10766         MOV.W   [R0],#021H
                      10767 ; rs232cmd.c 3003                               }
                      10768 ; rs232cmd.c 3004                       }
                      10769 ; rs232cmd.c 3005               }
002692                10771 _620:
                      10772 ; rs232cmd.c 3006       }
002692 2F30           10774         POP.W   R4, R5
002694 D680           10776         RET
                      10779 ; rs232cmd.c 3007       
                      10780 ; rs232cmd.c 3008       /************************************************************************
                            **/
                      10781 ; rs232cmd.c 3009       /* AudioGenAnalogLevel                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      10782 ; rs232cmd.c 3010       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10783 ; rs232cmd.c 3011       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      10784 ; rs232cmd.c 3012       /* Revised:             000705                                           
                                                                                                                             
                                                                                    */
                      10785 ; rs232cmd.c 3013       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10786 ; rs232cmd.c 3014       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      10787 ; rs232cmd.c 3015       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      10788 ; rs232cmd.c 3016       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      10789 ; rs232cmd.c 3017       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      10790 ; rs232cmd.c 3018       /************************************************************************
                            **/
                      10791 ; rs232cmd.c 3019       void AudioGenAnalogLevel( void)
                      10792 ; rs232cmd.c 3020       {
                      10793         ALIGN   1
                      10795         PUBLIC  _AudioGenAnalogLevel
002696                10796 _AudioGenAnalogLevel:
000078                10800         RSEG    RS232CMD_IR
                      10801         ALIGN   1
000078                10802 __swtable762:
000078 rrrrrrrrrrrrrr 10803         DW      SOF _657,SEG _657
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 177

ADDR   CODE            LINE SOURCELINE
00007C rrrrrrrrrrrrrr 10804         DW      SOF _625,SEG _625
       rrrrrrrrrrrrrr       
       rrrr                 
000080 rrrrrrrrrrrrrr 10805         DW      SOF _626,SEG _626
       rrrrrrrrrrrrrr       
       rrrr                 
000084 rrrrrrrrrrrrrr 10806         DW      SOF _627,SEG _627
       rrrrrrrrrrrrrr       
       rrrr                 
000088 rrrrrrrrrrrrrr 10807         DW      SOF _628,SEG _628
       rrrrrrrrrrrrrr       
       rrrr                 
00008C rrrrrrrrrrrrrr 10808         DW      SOF _629,SEG _629
       rrrrrrrrrrrrrr       
       rrrr                 
000090 rrrrrrrrrrrrrr 10809         DW      SOF _630,SEG _630
       rrrrrrrrrrrrrr       
       rrrr                 
000094 rrrrrrrrrrrrrr 10810         DW      SOF _631,SEG _631
       rrrrrrrrrrrrrr       
       rrrr                 
000098 rrrrrrrrrrrrrr 10811         DW      SOF _632,SEG _632
       rrrrrrrrrrrrrr       
       rrrr                 
00009C rrrrrrrrrrrrrr 10812         DW      SOF _633,SEG _633
       rrrrrrrrrrrrrr       
       rrrr                 
0000A0 rrrrrrrrrrrrrr 10813         DW      SOF _634,SEG _634
       rrrrrrrrrrrrrr       
       rrrr                 
0000A4 rrrrrrrrrrrrrr 10814         DW      SOF _635,SEG _635
       rrrrrrrrrrrrrr       
       rrrr                 
0000A8 rrrrrrrrrrrrrr 10815         DW      SOF _636,SEG _636
       rrrrrrrrrrrrrr       
       rrrr                 
0000AC rrrrrrrrrrrrrr 10816         DW      SOF _637,SEG _637
       rrrrrrrrrrrrrr       
       rrrr                 
0000B0 rrrrrrrrrrrrrr 10817         DW      SOF _638,SEG _638
       rrrrrrrrrrrrrr       
       rrrr                 
0000B4 rrrrrrrrrrrrrr 10818         DW      SOF _639,SEG _639
       rrrrrrrrrrrrrr       
       rrrr                 
0000B8 rrrrrrrrrrrrrr 10819         DW      SOF _640,SEG _640
       rrrrrrrrrrrrrr       
       rrrr                 
0000BC rrrrrrrrrrrrrr 10820         DW      SOF _641,SEG _641
       rrrrrrrrrrrrrr       
       rrrr                 
0000C0 rrrrrrrrrrrrrr 10821         DW      SOF _642,SEG _642
       rrrrrrrrrrrrrr       
       rrrr                 
0000C4 rrrrrrrrrrrrrr 10822         DW      SOF _643,SEG _643
       rrrrrrrrrrrrrr       
       rrrr                 
0000C8 rrrrrrrrrrrrrr 10823         DW      SOF _644,SEG _644
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 178

ADDR   CODE            LINE SOURCELINE
0000CC rrrrrrrrrrrrrr 10824         DW      SOF _645,SEG _645
       rrrrrrrrrrrrrr       
       rrrr                 
0000D0 rrrrrrrrrrrrrr 10825         DW      SOF _646,SEG _646
       rrrrrrrrrrrrrr       
       rrrr                 
0000D4 rrrrrrrrrrrrrr 10826         DW      SOF _647,SEG _647
       rrrrrrrrrrrrrr       
       rrrr                 
0000D8 rrrrrrrrrrrrrr 10827         DW      SOF _648,SEG _648
       rrrrrrrrrrrrrr       
       rrrr                 
0000DC rrrrrrrrrrrrrr 10828         DW      SOF _649,SEG _649
       rrrrrrrrrrrrrr       
       rrrr                 
0000E0 rrrrrrrrrrrrrr 10829         DW      SOF _650,SEG _650
       rrrrrrrrrrrrrr       
       rrrr                 
0000E4 rrrrrrrrrrrrrr 10830         DW      SOF _651,SEG _651
       rrrrrrrrrrrrrr       
       rrrr                 
0000E8 rrrrrrrrrrrrrr 10831         DW      SOF _652,SEG _652
       rrrrrrrrrrrrrr       
       rrrr                 
0000EC rrrrrrrrrrrrrr 10832         DW      SOF _653,SEG _653
       rrrrrrrrrrrrrr       
       rrrr                 
002696                10833         RSEG    RS232CMD_PR
002696 0F30           10834         PUSH.W  R4, R5
002698 A97E           10836         ADDS.W  R7,#0EH
                      10841 ; rs232cmd.c 3021               code char *str;
                      10842 ; rs232cmd.c 3022               int level;
                      10843 ; rs232cmd.c 3023       
                      10844 ; rs232cmd.c 3024               if ( CmdExecute && !SCPIError)
00269A 964842rr       10846         MOV.B   ES,#SEG( _CmdExecute )
00269E 9908rrrr       10847         MOV.W   R0,#SOF( _CmdExecute )
0026A2 8200           10848         MOV.B   R0L,[R0]
                      10849         BEQ     _761
0026A4 F202           +10849 ;       BNE     _LG_652
0026A6 D50165         +10849 ;       JMP.L   _761
0026AA D5016500       +10849 ;       JMP.L   _761
0026AA                +10849 _LG_652:
0026AA 964842rr       10850         MOV.B   ES,#SEG( _SCPIError )
0026AE 9908rrrr       10851         MOV.W   R0,#SOF( _SCPIError )
0026B2 8A00           10852         MOV.W   R0,[R0]
                      10853         BNE     _761
0026B4 F302           +10853 ;       BEQ     _LG_654
0026B6 D5015D         +10853 ;       JMP.L   _761
0026BA D5015D00       +10853 ;       JMP.L   _761
0026BA                +10853 _LG_654:
                      10854 ; rs232cmd.c 3025               {
                      10855 ; rs232cmd.c 3026                       if ( CmdRequest)
0026BA 964842rr       10857         MOV.B   ES,#SEG( _CmdRequest )
0026BE 9908rrrr       10858         MOV.W   R0,#SOF( _CmdRequest )
0026C2 8200           10859         MOV.B   R0L,[R0]
                      10860         BEQ     _687
0026C4 F202           +10860 ;       BNE     _LG_656
0026C6 D5009F         +10860 ;       JMP.L   _687
0026CA D5009F00       +10860 ;       JMP.L   _687
0026CA                +10860 _LG_656:
                      10861 ; rs232cmd.c 3027                       {
                      10862 ; rs232cmd.c 3028                               if ( ParCnt)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 179

ADDR   CODE            LINE SOURCELINE
0026CA 964842rr       10864         MOV.B   ES,#SEG( _ParCnt )
0026CE 9908rrrr       10865         MOV.W   R0,#SOF( _ParCnt )
0026D2 8200           10866         MOV.B   R0L,[R0]
0026D4 F307           10867         BEQ     _624
                      10868 ; rs232cmd.c 3029                                       SCPIError = ParNotAllowed;
0026D6 964842rr       10870         MOV.B   ES,#SEG( _SCPIError )
0026DA 9908rrrr       10871         MOV.W   R0,#SOF( _SCPIError )
0026DE BA06           10872         MOV.W   [R0],#06H
                      10873         BR      _761
0026E0 D50148         +10873         JMP.L   _761
0026E0 D5014800       +10873         JMP.L   _761
0026E4                10874 _624:
                      10875 ; rs232cmd.c 3030                               else
                      10876 ; rs232cmd.c 3031                               {
                      10877 ; rs232cmd.c 3032                                       switch ( AudioSetup[AnalogAudio].Level)
0026E4 964842rr       10879         MOV.B   ES,#SEG( _AudioSetup+4 )
0026E8 9908rrrr       10880         MOV.W   R0,#SOF( _AudioSetup+4 )
0026EC 8A00           10881         MOV.W   R0,[R0]
0026EE A90F           10882         ADDS.W  R0,#0FH
0026F0 9904001D       10883         CMP.W   R0,#01DH
0026F4 F859           10884         BG      _654
0026F6 D902           10885         ASL.W   R0,#02H
0026F8 964843rr       10886         MOV.B   CS,#SEG( __swtable762 )
0026FC 9900rrrr       10887         ADD.W   R0,#SOF( __swtable762 )
002700 8810           10888         MOVC.W  R1,[R0+]
002702 0F02           10889         PUSH.W  R1
002704 8810           10890         MOVC.W  R1,[R0+]
002706 0F02           10891         PUSH.W  R1
002708 D680           10892         RET
                      10893 ; rs232cmd.c 3033                                       {
                      10894 ; rs232cmd.c 3034                                               case P10dBm:
                      10895 ; rs232cmd.c 3035                                                       level = 10;
                      10896 ; rs232cmd.c 3036                                                       break;
                      10897 ; rs232cmd.c 3037       
                      10898 ; rs232cmd.c 3038                                               case P8dBm:
00270A                10900 _625:
                      10901 ; rs232cmd.c 3039                                                       level = 8;
00270A 9A780008       10903         MOV.W   [R7],#08H
                      10904 ; rs232cmd.c 3040                                                       break;
00270E FE6E           10906         BR      _686
                      10907 ; rs232cmd.c 3041       
                      10908 ; rs232cmd.c 3042                                               case P7dBm:
002710                10910 _626:
                      10911 ; rs232cmd.c 3043                                                       level = 7;
002710 BA77           10913         MOV.W   [R7],#07H
                      10914 ; rs232cmd.c 3044                                                       break;
002712 FE6C           10916         BR      _686
                      10917 ; rs232cmd.c 3045       
                      10918 ; rs232cmd.c 3046                                               case P6dBm:
002714                10920 _627:
                      10921 ; rs232cmd.c 3047                                                       level = 6;
002714 BA76           10923         MOV.W   [R7],#06H
                      10924 ; rs232cmd.c 3048                                                       break;
002716 FE6A           10926         BR      _686
                      10927 ; rs232cmd.c 3049       
                      10928 ; rs232cmd.c 3050                                               case P5dBm:
002718                10930 _628:
                      10931 ; rs232cmd.c 3051                                                       level = 5;
002718 BA75           10933         MOV.W   [R7],#05H
                      10934 ; rs232cmd.c 3052                                                       break;
00271A FE68           10936         BR      _686
                      10937 ; rs232cmd.c 3053       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 180

ADDR   CODE            LINE SOURCELINE
                      10938 ; rs232cmd.c 3054                                               case P4dBm:
00271C                10940 _629:
                      10941 ; rs232cmd.c 3055                                                       level = 4;
00271C BA74           10943         MOV.W   [R7],#04H
                      10944 ; rs232cmd.c 3056                                                       break;
00271E FE66           10946         BR      _686
                      10947 ; rs232cmd.c 3057       
                      10948 ; rs232cmd.c 3058                                               case P3dBm:
002720                10950 _630:
                      10951 ; rs232cmd.c 3059                                                       level = 3;
002720 BA73           10953         MOV.W   [R7],#03H
                      10954 ; rs232cmd.c 3060                                                       break;
002722 FE64           10956         BR      _686
                      10957 ; rs232cmd.c 3061       
                      10958 ; rs232cmd.c 3062                                               case P2dBm:
002724                10960 _631:
                      10961 ; rs232cmd.c 3063                                                       level = 2;
002724 BA72           10963         MOV.W   [R7],#02H
                      10964 ; rs232cmd.c 3064                                                       break;
002726 FE62           10966         BR      _686
                      10967 ; rs232cmd.c 3065       
                      10968 ; rs232cmd.c 3066                                               case P1dBm:
002728                10970 _632:
                      10971 ; rs232cmd.c 3067                                                       level = 1;
002728 BA71           10973         MOV.W   [R7],#01H
                      10974 ; rs232cmd.c 3068                                                       break;
00272A FE60           10976         BR      _686
                      10977 ; rs232cmd.c 3069       
                      10978 ; rs232cmd.c 3070                                               case M0dBm:
00272C                10980 _633:
                      10981 ; rs232cmd.c 3071                                                       level = 0;
00272C BA70           10983         MOV.W   [R7],#00H
                      10984 ; rs232cmd.c 3072                                                       break;
00272E FE5E           10986         BR      _686
                      10987 ; rs232cmd.c 3073       
                      10988 ; rs232cmd.c 3074                                               case M1dBm:
002730                10990 _634:
                      10991 ; rs232cmd.c 3075                                                       level = -1;
002730 9A78FFFF       10993         MOV.W   [R7],#0FFFFH
                      10994 ; rs232cmd.c 3076                                                       break;
002734 FE5B           10996         BR      _686
                      10997 ; rs232cmd.c 3077       
                      10998 ; rs232cmd.c 3078                                               case M2dBm:
002736                11000 _635:
                      11001 ; rs232cmd.c 3079                                                       level = -2;
002736 9A78FFFE       11003         MOV.W   [R7],#0FFFEH
                      11004 ; rs232cmd.c 3080                                                       break;
00273A FE58           11006         BR      _686
                      11007 ; rs232cmd.c 3081       
                      11008 ; rs232cmd.c 3082                                               case M3dBm:
00273C                11010 _636:
                      11011 ; rs232cmd.c 3083                                                       level = -3;
00273C 9A78FFFD       11013         MOV.W   [R7],#0FFFDH
                      11014 ; rs232cmd.c 3084                                                       break;
002740 FE55           11016         BR      _686
                      11017 ; rs232cmd.c 3085       
                      11018 ; rs232cmd.c 3086                                               case M4dBm:
002742                11020 _637:
                      11021 ; rs232cmd.c 3087                                                       level = -4;
002742 9A78FFFC       11023         MOV.W   [R7],#0FFFCH
                      11024 ; rs232cmd.c 3088                                                       break;
002746 FE52           11026         BR      _686
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 181

ADDR   CODE            LINE SOURCELINE
                      11027 ; rs232cmd.c 3089       
                      11028 ; rs232cmd.c 3090                                               case M5dBm:
002748                11030 _638:
                      11031 ; rs232cmd.c 3091                                                       level = -5;
002748 9A78FFFB       11033         MOV.W   [R7],#0FFFBH
                      11034 ; rs232cmd.c 3092                                                       break;
00274C FE4F           11036         BR      _686
                      11037 ; rs232cmd.c 3093       
                      11038 ; rs232cmd.c 3094                                               case M6dBm:
00274E                11040 _639:
                      11041 ; rs232cmd.c 3095                                                       level = -6;
00274E 9A78FFFA       11043         MOV.W   [R7],#0FFFAH
                      11044 ; rs232cmd.c 3096                                                       break;
002752 FE4C           11046         BR      _686
                      11047 ; rs232cmd.c 3097       
                      11048 ; rs232cmd.c 3098                                               case M7dBm:
002754                11050 _640:
                      11051 ; rs232cmd.c 3099                                                       level = -7;
002754 9A78FFF9       11053         MOV.W   [R7],#0FFF9H
                      11054 ; rs232cmd.c 3100                                                       break;
002758 FE49           11056         BR      _686
                      11057 ; rs232cmd.c 3101       
                      11058 ; rs232cmd.c 3102                                               case M8dBm:
00275A                11060 _641:
                      11061 ; rs232cmd.c 3103                                                       level = -8;
00275A 9A78FFF8       11063         MOV.W   [R7],#0FFF8H
                      11064 ; rs232cmd.c 3104                                                       break;
00275E FE46           11066         BR      _686
                      11067 ; rs232cmd.c 3105       
                      11068 ; rs232cmd.c 3106                                               case M9dBm:
002760                11070 _642:
                      11071 ; rs232cmd.c 3107                                                       level = -9;
002760 9A78FFF7       11073         MOV.W   [R7],#0FFF7H
                      11074 ; rs232cmd.c 3108                                                       break;
002764 FE43           11076         BR      _686
                      11077 ; rs232cmd.c 3109       
                      11078 ; rs232cmd.c 3110                                               case M10dBm:
002766                11080 _643:
                      11081 ; rs232cmd.c 3111                                                       level = -10;
002766 9A78FFF6       11083         MOV.W   [R7],#0FFF6H
                      11084 ; rs232cmd.c 3112                                                       break;
00276A FE40           11086         BR      _686
                      11087 ; rs232cmd.c 3113       
                      11088 ; rs232cmd.c 3114                                               case M11dBm:
00276C                11090 _644:
                      11091 ; rs232cmd.c 3115                                                       level = -11;
00276C 9A78FFF5       11093         MOV.W   [R7],#0FFF5H
                      11094 ; rs232cmd.c 3116                                                       break;
002770 FE3D           11096         BR      _686
                      11097 ; rs232cmd.c 3117       
                      11098 ; rs232cmd.c 3118                                               case M12dBm:
002772                11100 _645:
                      11101 ; rs232cmd.c 3119                                                       level = -12;
002772 9A78FFF4       11103         MOV.W   [R7],#0FFF4H
                      11104 ; rs232cmd.c 3120                                                       break;
002776 FE3A           11106         BR      _686
                      11107 ; rs232cmd.c 3121       
                      11108 ; rs232cmd.c 3122                                               case M15dBm:
002778                11110 _646:
                      11111 ; rs232cmd.c 3123                                                       level = -15;
002778 9A78FFF1       11113         MOV.W   [R7],#0FFF1H
                      11114 ; rs232cmd.c 3124                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 182

ADDR   CODE            LINE SOURCELINE
00277C FE37           11116         BR      _686
                      11117 ; rs232cmd.c 3125       
                      11118 ; rs232cmd.c 3126                                               case M18dBm:
00277E                11120 _647:
                      11121 ; rs232cmd.c 3127                                                       level = -18;
00277E 9A78FFEE       11123         MOV.W   [R7],#0FFEEH
                      11124 ; rs232cmd.c 3128                                                       break;
002782 FE34           11126         BR      _686
                      11127 ; rs232cmd.c 3129       
                      11128 ; rs232cmd.c 3130                                               case M21dBm:
002784                11130 _648:
                      11131 ; rs232cmd.c 3131                                                       level = -21;
002784 9A78FFEB       11133         MOV.W   [R7],#0FFEBH
                      11134 ; rs232cmd.c 3132                                                       break;
002788 FE31           11136         BR      _686
                      11137 ; rs232cmd.c 3133       
                      11138 ; rs232cmd.c 3134                                               case M24dBm:
00278A                11140 _649:
                      11141 ; rs232cmd.c 3135                                                       level = -24;
00278A 9A78FFE8       11143         MOV.W   [R7],#0FFE8H
                      11144 ; rs232cmd.c 3136                                                       break;
00278E FE2E           11146         BR      _686
                      11147 ; rs232cmd.c 3137       
                      11148 ; rs232cmd.c 3138                                               case M27dBm:
002790                11150 _650:
                      11151 ; rs232cmd.c 3139                                                       level = -27;
002790 9A78FFE5       11153         MOV.W   [R7],#0FFE5H
                      11154 ; rs232cmd.c 3140                                                       break;
002794 FE2B           11156         BR      _686
                      11157 ; rs232cmd.c 3141       
                      11158 ; rs232cmd.c 3142                                               case M30dBm:
002796                11160 _651:
                      11161 ; rs232cmd.c 3143                                                       level = -30;
002796 9A78FFE2       11163         MOV.W   [R7],#0FFE2H
                      11164 ; rs232cmd.c 3144                                                       break;
00279A FE28           11166         BR      _686
                      11167 ; rs232cmd.c 3145       
                      11168 ; rs232cmd.c 3146                                               case M33dBm:
00279C                11170 _652:
                      11171 ; rs232cmd.c 3147                                                       level = -33;
00279C 9A78FFDF       11173         MOV.W   [R7],#0FFDFH
                      11174 ; rs232cmd.c 3148                                                       break;
0027A0 FE25           11176         BR      _686
                      11177 ; rs232cmd.c 3149       
                      11178 ; rs232cmd.c 3150                                               case M36dBm:
0027A2                11180 _653:
                      11181 ; rs232cmd.c 3151                                                       level = -36;
0027A2 9A78FFDC       11183         MOV.W   [R7],#0FFDCH
                      11184 ; rs232cmd.c 3152                                                       break;
0027A6 FE22           11186         BR      _686
                      11187 ; rs232cmd.c 3153       
                      11188 ; rs232cmd.c 3154                                               default:
0027A8                11190 _654:
                      11191 ; rs232cmd.c 3155                                                       str = SILENCEParTxt;
0027A8 9958rrrr       11193         MOV.W   R5,#SEG( _SILENCEParTxt )
0027AC 9948rrrr       11194         MOV.W   R4,#SOF( _SILENCEParTxt )
                      11196 ; rs232cmd.c 3156       
                      11197 ; rs232cmd.c 3157                                                       while ( *str)
0027B0 964843rr       11199         MOV.B   CS,#SEG( _SILENCEParTxt )
0027B4 9908rrrr       11200         MOV.W   R0,#SOF( _SILENCEParTxt )
0027B8 8020           11201         MOVC.B  R1L,[R0+]
0027BA F311           11202         BEQ     _656
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 183

ADDR   CODE            LINE SOURCELINE
0027BA F311           11202         BEQ     _656
0027BC                11203 _655:
                      11204 ; rs232cmd.c 3158                                                               rs232putchar( *st
                            r++);
0027BC 8915           11206         MOV.W   R1,R5
0027BE 8904           11207         MOV.W   R0,R4
0027C0 862C43         11208         MOV.B   CS,R1L
0027C3 8020           11209         MOVC.B  R1L,[R0+]
0027C5 8102           11210         MOV.B   R0L,R1L
                      11211         CALL    _rs232putchar
0027C7 C4rrrrrr       +11211 ;       FCALL   _rs232putchar
0027CB 99400001       11212         ADD.W   R4,#01H
0027CF 99510000       11213         ADDC.W  R5,#00H
0027D3 8915           11217         MOV.W   R1,R5
0027D5 8904           11218         MOV.W   R0,R4
0027D7 862C43         11219         MOV.B   CS,R1L
0027DA 8020           11220         MOVC.B  R1L,[R0+]
0027DC F2EF           11221         BNE     _655
0027DE                11223 _656:
                      11224 ; rs232cmd.c 3159       
                      11225 ; rs232cmd.c 3160                                                       rs232putchar('\n');
0027DE 91080A         11227         MOV.B   R0L,#0AH
                      11228         CALL    _rs232putchar
0027E1 C4rrrrrr       +11228 ;       FCALL   _rs232putchar
                      11229 ; rs232cmd.c 3161                                                       return;
                      11231         BR      _761
0027E5 D500C5         +11231         JMP.L   _761
0027E8                11233 _657:
0027E8 9A78000A       11235         MOV.W   [R7],#0AH
                      11236 ; rs232cmd.c 3162                                               }
0027EC                11238 _686:
                      11239 ; rs232cmd.c 3163       
                      11240 ; rs232cmd.c 3164                                       rs232printf( 6, "%d\n", level);
0027EC B906           11242         MOV.W   R0,#06H
0027EE 8A17           11243         MOV.W   R1,[R7]
0027F0 0F02           11244         PUSH.W  R1
0027F2 9938rrrr       11246         MOV.W   R3,#SEG( _9 )
0027F6 9928rrrr       11247         MOV.W   R2,#SOF( _9 )
0027FA 0F0C           11248         PUSH.W  R2, R3
                      11250         CALL    _rs232printf
0027FC C4rrrrrr       +11250 ;       FCALL   _rs232printf
002800 A976           11251         ADDS.W  R7,#06H
0000F0                11252         RSEG    RS232CMD_IR
                      11253         ALIGN   1
0000F0                11254 __swtable767:
0000F0 rrrrrrrrrrrrrr 11255         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
0000F4 rrrrrrrrrrrrrr 11256         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0000F8 rrrrrrrrrrrrrr 11257         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0000FC rrrrrrrrrrrrrr 11258         DW      SOF _719,SEG _719
       rrrrrrrrrrrrrr       
       rrrr                 
000100 rrrrrrrrrrrrrr 11259         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 184

ADDR   CODE            LINE SOURCELINE
000104 rrrrrrrrrrrrrr 11260         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000108 rrrrrrrrrrrrrr 11261         DW      SOF _718,SEG _718
       rrrrrrrrrrrrrr       
       rrrr                 
00010C rrrrrrrrrrrrrr 11262         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000110 rrrrrrrrrrrrrr 11263         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000114 rrrrrrrrrrrrrr 11264         DW      SOF _717,SEG _717
       rrrrrrrrrrrrrr       
       rrrr                 
000118 rrrrrrrrrrrrrr 11265         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00011C rrrrrrrrrrrrrr 11266         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000120 rrrrrrrrrrrrrr 11267         DW      SOF _716,SEG _716
       rrrrrrrrrrrrrr       
       rrrr                 
000124 rrrrrrrrrrrrrr 11268         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000128 rrrrrrrrrrrrrr 11269         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00012C rrrrrrrrrrrrrr 11270         DW      SOF _715,SEG _715
       rrrrrrrrrrrrrr       
       rrrr                 
000130 rrrrrrrrrrrrrr 11271         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000134 rrrrrrrrrrrrrr 11272         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000138 rrrrrrrrrrrrrr 11273         DW      SOF _714,SEG _714
       rrrrrrrrrrrrrr       
       rrrr                 
00013C rrrrrrrrrrrrrr 11274         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000140 rrrrrrrrrrrrrr 11275         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000144 rrrrrrrrrrrrrr 11276         DW      SOF _713,SEG _713
       rrrrrrrrrrrrrr       
       rrrr                 
000148 rrrrrrrrrrrrrr 11277         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00014C rrrrrrrrrrrrrr 11278         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000150 rrrrrrrrrrrrrr 11279         DW      SOF _712,SEG _712
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 185

ADDR   CODE            LINE SOURCELINE
000154 rrrrrrrrrrrrrr 11280         DW      SOF _711,SEG _711
       rrrrrrrrrrrrrr       
       rrrr                 
000158 rrrrrrrrrrrrrr 11281         DW      SOF _710,SEG _710
       rrrrrrrrrrrrrr       
       rrrr                 
00015C rrrrrrrrrrrrrr 11282         DW      SOF _709,SEG _709
       rrrrrrrrrrrrrr       
       rrrr                 
000160 rrrrrrrrrrrrrr 11283         DW      SOF _708,SEG _708
       rrrrrrrrrrrrrr       
       rrrr                 
000164 rrrrrrrrrrrrrr 11284         DW      SOF _707,SEG _707
       rrrrrrrrrrrrrr       
       rrrr                 
000168 rrrrrrrrrrrrrr 11285         DW      SOF _706,SEG _706
       rrrrrrrrrrrrrr       
       rrrr                 
00016C rrrrrrrrrrrrrr 11286         DW      SOF _705,SEG _705
       rrrrrrrrrrrrrr       
       rrrr                 
000170 rrrrrrrrrrrrrr 11287         DW      SOF _704,SEG _704
       rrrrrrrrrrrrrr       
       rrrr                 
000174 rrrrrrrrrrrrrr 11288         DW      SOF _703,SEG _703
       rrrrrrrrrrrrrr       
       rrrr                 
000178 rrrrrrrrrrrrrr 11289         DW      SOF _702,SEG _702
       rrrrrrrrrrrrrr       
       rrrr                 
00017C rrrrrrrrrrrrrr 11290         DW      SOF _701,SEG _701
       rrrrrrrrrrrrrr       
       rrrr                 
000180 rrrrrrrrrrrrrr 11291         DW      SOF _700,SEG _700
       rrrrrrrrrrrrrr       
       rrrr                 
000184 rrrrrrrrrrrrrr 11292         DW      SOF _699,SEG _699
       rrrrrrrrrrrrrr       
       rrrr                 
000188 rrrrrrrrrrrrrr 11293         DW      SOF _698,SEG _698
       rrrrrrrrrrrrrr       
       rrrr                 
00018C rrrrrrrrrrrrrr 11294         DW      SOF _697,SEG _697
       rrrrrrrrrrrrrr       
       rrrr                 
000190 rrrrrrrrrrrrrr 11295         DW      SOF _696,SEG _696
       rrrrrrrrrrrrrr       
       rrrr                 
000194 rrrrrrrrrrrrrr 11296         DW      SOF _695,SEG _695
       rrrrrrrrrrrrrr       
       rrrr                 
000198 rrrrrrrrrrrrrr 11297         DW      SOF _694,SEG _694
       rrrrrrrrrrrrrr       
       rrrr                 
00019C rrrrrrrrrrrrrr 11298         DW      SOF _693,SEG _693
       rrrrrrrrrrrrrr       
       rrrr                 
0001A0 rrrrrrrrrrrrrr 11299         DW      SOF _692,SEG _692
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 186

ADDR   CODE            LINE SOURCELINE
0001A4 rrrrrrrrrrrrrr 11300         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0001A8 rrrrrrrrrrrrrr 11301         DW      SOF _722,SEG _722
       rrrrrrrrrrrrrr       
       rrrr                 
002802                11302         RSEG    RS232CMD_PR
                      11304 ; rs232cmd.c 3165                               }
                      11305 ; rs232cmd.c 3166                       }
                      11307         BR      _761
002802 D500B7         +11307         JMP.L   _761
002802 D500B700       +11307         JMP.L   _761
002806                11308 _687:
                      11309 ; rs232cmd.c 3167                       else
                      11310 ; rs232cmd.c 3168                       {
                      11311 ; rs232cmd.c 3169                               if ( ParCnt != 1)
002806 964842rr       11313         MOV.B   ES,#SEG( _ParCnt )
00280A 9908rrrr       11314         MOV.W   R0,#SOF( _ParCnt )
00280E 8200           11315         MOV.B   R0L,[R0]
002810 910401         11316         CMP.B   R0L,#01H
002813 F307           11317         BEQ     _688
                      11318 ; rs232cmd.c 3170                                       SCPIError = SyntaxErr;
002815 964842rr       11320         MOV.B   ES,#SEG( _SCPIError )
002819 9908rrrr       11321         MOV.W   R0,#SOF( _SCPIError )
00281D BA03           11322         MOV.W   [R0],#03H
                      11323         BR      _761
00281F D500A8         +11323         JMP.L   _761
00281F D500A8         +11323         JMP.L   _761
002822                11324 _688:
                      11325 ; rs232cmd.c 3171                               else
                      11326 ; rs232cmd.c 3172                               {
                      11327 ; rs232cmd.c 3173                                       level = FindParameter( Cmd, AnalogLevelPa
                            r);
002822 9938rrrr       11329         MOV.W   R3,#SEG( _AnalogLevelPar )
002826 9928rrrr       11330         MOV.W   R2,#SOF( _AnalogLevelPar )
00282A 9918rrrr       11331         MOV.W   R1,#SEG( _Cmd )
00282E 9908rrrr       11332         MOV.W   R0,#SOF( _Cmd )
002832 C51BE3         11333         CALL    _FindParameter
002835 8A0F           11334         MOV.W   [R7],R0
                      11335 ; rs232cmd.c 3174               
                      11336 ; rs232cmd.c 3175                                       if ( level > -1)
002837 9A74FFFF       11338         CMP.W   [R7],#0FFFFH
00283B FD04           11339         BLE     _689
                      11340 ; rs232cmd.c 3176                                               level = AnalogSilence;
00283D 9A78001F       11342         MOV.W   [R7],#01FH
                      11343         BR      _753
002841 D5008B         +11343         JMP.L   _753
002841 D5008B         +11343         JMP.L   _753
002844                11344 _689:
                      11345 ; rs232cmd.c 3177                                       else
                      11346 ; rs232cmd.c 3178                                       {
                      11347 ; rs232cmd.c 3179                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
002844 964842rr       11349         MOV.B   ES,#SEG( _ParCnt )
002848 9908rrrr       11350         MOV.W   R0,#SOF( _ParCnt )
00284C 8200           11351         MOV.B   R0L,[R0]
00284E 910401         11352         CMP.B   R0L,#01H
002851 F215           11353         BNE     _690
002853 9128rr         11354         MOV.B   R1L,#SEG( __lc_bs )
002856 7133           11355         XOR.B   R1H,R1H
002858 8907           11356         MOV.W   R0,R7
00285A 0F03           11357         PUSH.W  R0, R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 187

ADDR   CODE            LINE SOURCELINE
00285C 9918rrrr       11359         MOV.W   R1,#SEG( _10 )
002860 9908rrrr       11360         MOV.W   R0,#SOF( _10 )
002864 0F03           11361         PUSH.W  R0, R1
002866 9918rrrr       11363         MOV.W   R1,#SEG( _Cmd )
00286A 9908rrrr       11364         MOV.W   R0,#SOF( _Cmd )
                      11365         CALL    _sscanf
00286E C4rrrrrr       +11365 ;       FCALL   _sscanf
002872 99700008       11366         ADD.W   R7,#08H
002876 99040001       11368         CMP.W   R0,#01H
00287A F306           11369         BEQ     _691
00287A F306           11369         BEQ     _691
00287C                11370 _690:
                      11371 ; rs232cmd.c 3180                                                       SCPIError = SyntaxErr;
00287C 964842rr       11373         MOV.B   ES,#SEG( _SCPIError )
002880 9908rrrr       11374         MOV.W   R0,#SOF( _SCPIError )
002884 BA03           11375         MOV.W   [R0],#03H
002886 FE69           11376         BR      _753
002886 FE69           11376         BR      _753
002888                11377 _691:
                      11378 ; rs232cmd.c 3181                                               else
                      11379 ; rs232cmd.c 3182                                               {
                      11380 ; rs232cmd.c 3183                                                       switch ( level)
002888 8A17           11382         MOV.W   R1,[R7]
00288A 99100024       11383         ADD.W   R1,#024H
00288E 9914002E       11384         CMP.W   R1,#02EH
002892 F85B           11385         BG      _721
002894 D912           11386         ASL.W   R1,#02H
002896 964843rr       11387         MOV.B   CS,#SEG( __swtable767 )
00289A 9910rrrr       11388         ADD.W   R1,#SOF( __swtable767 )
00289E 8801           11389         MOVC.W  R0,[R1+]
0028A0 0F01           11390         PUSH.W  R0
0028A2 8801           11391         MOVC.W  R0,[R1+]
0028A4 0F01           11392         PUSH.W  R0
0028A6 D680           11393         RET
                      11394 ; rs232cmd.c 3184                                                       {
                      11395 ; rs232cmd.c 3185                                                               case 10:
                      11396 ; rs232cmd.c 3186                                                                       level = P
                            10dBm;
                      11397 ; rs232cmd.c 3187                                                                       break;
                      11398 ; rs232cmd.c 3188       
                      11399 ; rs232cmd.c 3189                                                               case 8:
0028A8                11401 _692:
                      11402 ; rs232cmd.c 3190                                                                       level = P
                            8dBm;
0028A8 BA72           11404         MOV.W   [R7],#02H
                      11405 ; rs232cmd.c 3191                                                                       break;
0028AA FE57           11407         BR      _753
                      11408 ; rs232cmd.c 3192       
                      11409 ; rs232cmd.c 3193                                                               case 7:
0028AC                11411 _693:
                      11412 ; rs232cmd.c 3194                                                                       level = P
                            7dBm;
0028AC BA73           11414         MOV.W   [R7],#03H
                      11415 ; rs232cmd.c 3195                                                                       break;
0028AE FE55           11417         BR      _753
                      11418 ; rs232cmd.c 3196       
                      11419 ; rs232cmd.c 3197                                                               case 6:
0028B0                11421 _694:
                      11422 ; rs232cmd.c 3198                                                                       level = P
                            6dBm;
0028B0 BA74           11424         MOV.W   [R7],#04H
                      11425 ; rs232cmd.c 3199                                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 188

ADDR   CODE            LINE SOURCELINE
0028B2 FE53           11427         BR      _753
                      11428 ; rs232cmd.c 3200       
                      11429 ; rs232cmd.c 3201                                                               case 5:
0028B4                11431 _695:
                      11432 ; rs232cmd.c 3202                                                                       level = P
                            5dBm;
0028B4 BA75           11434         MOV.W   [R7],#05H
                      11435 ; rs232cmd.c 3203                                                                       break;
0028B6 FE51           11437         BR      _753
                      11438 ; rs232cmd.c 3204       
                      11439 ; rs232cmd.c 3205                                                               case 4:
0028B8                11441 _696:
                      11442 ; rs232cmd.c 3206                                                                       level = P
                            4dBm;
0028B8 BA76           11444         MOV.W   [R7],#06H
                      11445 ; rs232cmd.c 3207                                                                       break;
0028BA FE4F           11447         BR      _753
                      11448 ; rs232cmd.c 3208       
                      11449 ; rs232cmd.c 3209                                                               case 3:
0028BC                11451 _697:
                      11452 ; rs232cmd.c 3210                                                                       level = P
                            3dBm;
0028BC BA77           11454         MOV.W   [R7],#07H
                      11455 ; rs232cmd.c 3211                                                                       break;
0028BE FE4D           11457         BR      _753
                      11458 ; rs232cmd.c 3212       
                      11459 ; rs232cmd.c 3213                                                               case 2:
0028C0                11461 _698:
                      11462 ; rs232cmd.c 3214                                                                       level = P
                            2dBm;
0028C0 9A780008       11464         MOV.W   [R7],#08H
                      11465 ; rs232cmd.c 3215                                                                       break;
0028C4 FE4A           11467         BR      _753
                      11468 ; rs232cmd.c 3216       
                      11469 ; rs232cmd.c 3217                                                               case 1:
0028C6                11471 _699:
                      11472 ; rs232cmd.c 3218                                                                       level = P
                            1dBm;
0028C6 9A780009       11474         MOV.W   [R7],#09H
                      11475 ; rs232cmd.c 3219                                                                       break;
0028CA FE47           11477         BR      _753
                      11478 ; rs232cmd.c 3220       
                      11479 ; rs232cmd.c 3221                                                               case 0:
0028CC                11481 _700:
                      11482 ; rs232cmd.c 3222                                                                       level = M
                            0dBm;
0028CC 9A78000A       11484         MOV.W   [R7],#0AH
                      11485 ; rs232cmd.c 3223                                                                       break;
0028D0 FE44           11487         BR      _753
                      11488 ; rs232cmd.c 3224       
                      11489 ; rs232cmd.c 3225                                                               case -1:
0028D2                11491 _701:
                      11492 ; rs232cmd.c 3226                                                                       level = M
                            1dBm;
0028D2 9A78000B       11494         MOV.W   [R7],#0BH
                      11495 ; rs232cmd.c 3227                                                                       break;
0028D6 FE41           11497         BR      _753
                      11498 ; rs232cmd.c 3228       
                      11499 ; rs232cmd.c 3229                                                               case -2:
0028D8                11501 _702:
                      11502 ; rs232cmd.c 3230                                                                       level = M
                            2dBm;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 189

ADDR   CODE            LINE SOURCELINE
0028D8 9A78000C       11504         MOV.W   [R7],#0CH
                      11505 ; rs232cmd.c 3231                                                                       break;
0028DC FE3E           11507         BR      _753
                      11508 ; rs232cmd.c 3232       
                      11509 ; rs232cmd.c 3233                                                               case -3:
0028DE                11511 _703:
                      11512 ; rs232cmd.c 3234                                                                       level = M
                            3dBm;
0028DE 9A78000D       11514         MOV.W   [R7],#0DH
                      11515 ; rs232cmd.c 3235                                                                       break;
0028E2 FE3B           11517         BR      _753
                      11518 ; rs232cmd.c 3236       
                      11519 ; rs232cmd.c 3237                                                               case -4:
0028E4                11521 _704:
                      11522 ; rs232cmd.c 3238                                                                       level = M
                            4dBm;
0028E4 9A78000E       11524         MOV.W   [R7],#0EH
                      11525 ; rs232cmd.c 3239                                                                       break;
0028E8 FE38           11527         BR      _753
                      11528 ; rs232cmd.c 3240       
                      11529 ; rs232cmd.c 3241                                                               case -5:
0028EA                11531 _705:
                      11532 ; rs232cmd.c 3242                                                                       level = M
                            5dBm;
0028EA 9A78000F       11534         MOV.W   [R7],#0FH
                      11535 ; rs232cmd.c 3243                                                                       break;
0028EE FE35           11537         BR      _753
                      11538 ; rs232cmd.c 3244       
                      11539 ; rs232cmd.c 3245                                                               case -6:
0028F0                11541 _706:
                      11542 ; rs232cmd.c 3246                                                                       level = M
                            6dBm;
0028F0 9A780010       11544         MOV.W   [R7],#010H
                      11545 ; rs232cmd.c 3247                                                                       break;
0028F4 FE32           11547         BR      _753
                      11548 ; rs232cmd.c 3248       
                      11549 ; rs232cmd.c 3249                                                               case -7:
0028F6                11551 _707:
                      11552 ; rs232cmd.c 3250                                                                       level = M
                            7dBm;
0028F6 9A780011       11554         MOV.W   [R7],#011H
                      11555 ; rs232cmd.c 3251                                                                       break;
0028FA FE2F           11557         BR      _753
                      11558 ; rs232cmd.c 3252       
                      11559 ; rs232cmd.c 3253                                                               case -8:
0028FC                11561 _708:
                      11562 ; rs232cmd.c 3254                                                                       level = M
                            8dBm;
0028FC 9A780012       11564         MOV.W   [R7],#012H
                      11565 ; rs232cmd.c 3255                                                                       break;
002900 FE2C           11567         BR      _753
                      11568 ; rs232cmd.c 3256       
                      11569 ; rs232cmd.c 3257                                                               case -9:
002902                11571 _709:
                      11572 ; rs232cmd.c 3258                                                                       level = M
                            9dBm;
002902 9A780013       11574         MOV.W   [R7],#013H
                      11575 ; rs232cmd.c 3259                                                                       break;
002906 FE29           11577         BR      _753
                      11578 ; rs232cmd.c 3260       
                      11579 ; rs232cmd.c 3261                                                               case -10:
002908                11581 _710:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 190

ADDR   CODE            LINE SOURCELINE
                      11582 ; rs232cmd.c 3262                                                                       level = M
                            10dBm;
002908 9A780014       11584         MOV.W   [R7],#014H
                      11585 ; rs232cmd.c 3263                                                                       break;
00290C FE26           11587         BR      _753
                      11588 ; rs232cmd.c 3264       
                      11589 ; rs232cmd.c 3265                                                               case -11:
00290E                11591 _711:
                      11592 ; rs232cmd.c 3266                                                                       level = M
                            11dBm;
00290E 9A780015       11594         MOV.W   [R7],#015H
                      11595 ; rs232cmd.c 3267                                                                       break;
002912 FE23           11597         BR      _753
                      11598 ; rs232cmd.c 3268       
                      11599 ; rs232cmd.c 3269                                                               case -12:
002914                11601 _712:
                      11602 ; rs232cmd.c 3270                                                                       level = M
                            12dBm;
002914 9A780016       11604         MOV.W   [R7],#016H
                      11605 ; rs232cmd.c 3271                                                                       break;
002918 FE20           11607         BR      _753
                      11608 ; rs232cmd.c 3272       
                      11609 ; rs232cmd.c 3273                                                               case -15:
00291A                11611 _713:
                      11612 ; rs232cmd.c 3274                                                                       level = M
                            15dBm;
00291A 9A780017       11614         MOV.W   [R7],#017H
                      11615 ; rs232cmd.c 3275                                                                       break;
00291E FE1D           11617         BR      _753
                      11618 ; rs232cmd.c 3276       
                      11619 ; rs232cmd.c 3277                                                               case -18:
002920                11621 _714:
                      11622 ; rs232cmd.c 3278                                                                       level = M
                            18dBm;
002920 9A780018       11624         MOV.W   [R7],#018H
                      11625 ; rs232cmd.c 3279                                                                       break;
002924 FE1A           11627         BR      _753
                      11628 ; rs232cmd.c 3280       
                      11629 ; rs232cmd.c 3281                                                               case -21:
002926                11631 _715:
                      11632 ; rs232cmd.c 3282                                                                       level = M
                            21dBm;
002926 9A780019       11634         MOV.W   [R7],#019H
                      11635 ; rs232cmd.c 3283                                                                       break;
00292A FE17           11637         BR      _753
                      11638 ; rs232cmd.c 3284       
                      11639 ; rs232cmd.c 3285                                                               case -24:
00292C                11641 _716:
                      11642 ; rs232cmd.c 3286                                                                       level = M
                            24dBm;
00292C 9A78001A       11644         MOV.W   [R7],#01AH
                      11645 ; rs232cmd.c 3287                                                                       break;
002930 FE14           11647         BR      _753
                      11648 ; rs232cmd.c 3288       
                      11649 ; rs232cmd.c 3289                                                               case -27:
002932                11651 _717:
                      11652 ; rs232cmd.c 3290                                                                       level = M
                            27dBm;
002932 9A78001B       11654         MOV.W   [R7],#01BH
                      11655 ; rs232cmd.c 3291                                                                       break;
002936 FE11           11657         BR      _753
                      11658 ; rs232cmd.c 3292       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 191

ADDR   CODE            LINE SOURCELINE
                      11659 ; rs232cmd.c 3293                                                               case -30:
002938                11661 _718:
                      11662 ; rs232cmd.c 3294                                                                       level = M
                            30dBm;
002938 9A78001C       11664         MOV.W   [R7],#01CH
                      11665 ; rs232cmd.c 3295                                                                       break;
00293C FE0E           11667         BR      _753
                      11668 ; rs232cmd.c 3296       
                      11669 ; rs232cmd.c 3297                                                               case -33:
00293E                11671 _719:
                      11672 ; rs232cmd.c 3298                                                                       level = M
                            33dBm;
00293E 9A78001D       11674         MOV.W   [R7],#01DH
                      11675 ; rs232cmd.c 3299                                                                       break;
002942 FE0B           11677         BR      _753
                      11678 ; rs232cmd.c 3300       
                      11679 ; rs232cmd.c 3301                                                               case -36:
002944                11681 _720:
                      11682 ; rs232cmd.c 3302                                                                       level = M
                            36dBm;
002944 9A78001E       11684         MOV.W   [R7],#01EH
                      11685 ; rs232cmd.c 3303                                                                       break;
002948 FE08           11687         BR      _753
                      11688 ; rs232cmd.c 3304       
                      11689 ; rs232cmd.c 3305                                                               default:
00294A                11691 _721:
                      11692 ; rs232cmd.c 3306                                                                       SCPIError
                             = DataOutOfRange;
00294A 964842rr       11694         MOV.B   ES,#SEG( _SCPIError )
00294E 9908rrrr       11695         MOV.W   R0,#SOF( _SCPIError )
002952 9A080021       11696         MOV.W   [R0],#021H
                      11697 ; rs232cmd.c 3307                                                                       return;
002956 FE0D           11699         BR      _761
002958                11701 _722:
002958 BA71           11703         MOV.W   [R7],#01H
                      11704 ; rs232cmd.c 3308                                                       }
                      11705 ; rs232cmd.c 3309                                               }
                      11706 ; rs232cmd.c 3310                                       }
00295A                11708 _753:
                      11709 ; rs232cmd.c 3311       
                      11710 ; rs232cmd.c 3312                                       if ( SetAudioLevel( AnalogAudio, level) =
                            = FAIL)
00295A B900           11712         MOV.W   R0,#00H
00295C 8A17           11713         MOV.W   R1,[R7]
                      11714         CALL    _SetAudioLevel
00295E C4rrrrrr       +11714 ;       FCALL   _SetAudioLevel
002962 6900           11715         OR.W    R0,R0
002964 F206           11716         BNE     _761
                      11717 ; rs232cmd.c 3313                                               SCPIError = ExecErr;
002966 964842rr       11719         MOV.B   ES,#SEG( _SCPIError )
00296A 9908rrrr       11720         MOV.W   R0,#SOF( _SCPIError )
00296E 9A08001D       11721         MOV.W   [R0],#01DH
                      11722 ; rs232cmd.c 3314                               }
                      11723 ; rs232cmd.c 3315                       }
                      11724 ; rs232cmd.c 3316               }
                      11725 ; rs232cmd.c 3317       }
002972                11727 _761:
002972 A972           11728         ADDS.W  R7,#02H
002974 2F30           11730         POP.W   R4, R5
002976 D680           11732         RET
                      11735 ; rs232cmd.c 3318       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 192

ADDR   CODE            LINE SOURCELINE
                      11736 ; rs232cmd.c 3319       /************************************************************************
                            **/
                      11737 ; rs232cmd.c 3320       /* AudioGenAnalogClick                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      11738 ; rs232cmd.c 3321       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11739 ; rs232cmd.c 3322       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      11740 ; rs232cmd.c 3323       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      11741 ; rs232cmd.c 3324       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11742 ; rs232cmd.c 3325       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      11743 ; rs232cmd.c 3326       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      11744 ; rs232cmd.c 3327       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      11745 ; rs232cmd.c 3328       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      11746 ; rs232cmd.c 3329       /************************************************************************
                            **/
                      11747 ; rs232cmd.c 3330       void AudioGenAnalogClick( void)
                      11748 ; rs232cmd.c 3331       {
                      11749         ALIGN   1
                      11751         PUBLIC  _AudioGenAnalogClick
002978                11752 _AudioGenAnalogClick:
002978 A97E           11756         ADDS.W  R7,#0EH
                      11759 ; rs232cmd.c 3332               int click;
                      11760 ; rs232cmd.c 3333       
                      11761 ; rs232cmd.c 3334               if ( CmdExecute && !SCPIError)
00297A 964842rr       11763         MOV.B   ES,#SEG( _CmdExecute )
00297E 9908rrrr       11764         MOV.W   R0,#SOF( _CmdExecute )
002982 8200           11765         MOV.B   R0L,[R0]
002984 F363           11766         BEQ     _780
002986 964842rr       11767         MOV.B   ES,#SEG( _SCPIError )
00298A 9908rrrr       11768         MOV.W   R0,#SOF( _SCPIError )
00298E 8A00           11769         MOV.W   R0,[R0]
002990 F25D           11770         BNE     _780
                      11771 ; rs232cmd.c 3335               {
                      11772 ; rs232cmd.c 3336                       if ( CmdRequest)
002992 964842rr       11774         MOV.B   ES,#SEG( _CmdRequest )
002996 9908rrrr       11775         MOV.W   R0,#SOF( _CmdRequest )
00299A 8200           11776         MOV.B   R0L,[R0]
00299C F31C           11777         BEQ     _769
                      11778 ; rs232cmd.c 3337                       {
                      11779 ; rs232cmd.c 3338                               if ( ParCnt)
00299E 964842rr       11781         MOV.B   ES,#SEG( _ParCnt )
0029A2 9908rrrr       11782         MOV.W   R0,#SOF( _ParCnt )
0029A6 8200           11783         MOV.B   R0L,[R0]
0029A8 F306           11784         BEQ     _768
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 193

ADDR   CODE            LINE SOURCELINE
                      11785 ; rs232cmd.c 3339                                       SCPIError = ParNotAllowed;
0029AA 964842rr       11787         MOV.B   ES,#SEG( _SCPIError )
0029AE 9908rrrr       11788         MOV.W   R0,#SOF( _SCPIError )
0029B2 BA06           11789         MOV.W   [R0],#06H
0029B4 FE4B           11790         BR      _780
0029B4 FE4B           11790         BR      _780
0029B6                11791 _768:
                      11792 ; rs232cmd.c 3340                               else
                      11793 ; rs232cmd.c 3341                                       rs232printf( 6, "%d\n", AudioSetup[Analog
                            Audio].Click);
0029B6 B906           11795         MOV.W   R0,#06H
0029B8 964842rr       11796         MOV.B   ES,#SEG( _AudioSetup+12 )
0029BC 9918rrrr       11797         MOV.W   R1,#SOF( _AudioSetup+12 )
0029C0 8A11           11798         MOV.W   R1,[R1]
0029C2 0F02           11799         PUSH.W  R1
0029C4 9938rrrr       11801         MOV.W   R3,#SEG( _9 )
0029C8 9928rrrr       11802         MOV.W   R2,#SOF( _9 )
0029CC 0F0C           11803         PUSH.W  R2, R3
                      11805         CALL    _rs232printf
0029CE C4rrrrrr       +11805 ;       FCALL   _rs232printf
0029D2 A976           11806         ADDS.W  R7,#06H
                      11808 ; rs232cmd.c 3342                       }
0029D4 FE3B           11810         BR      _780
0029D4 FE3B           11810         BR      _780
0029D6                11811 _769:
                      11812 ; rs232cmd.c 3343                       else
                      11813 ; rs232cmd.c 3344                       {
                      11814 ; rs232cmd.c 3345                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
0029D6 964842rr       11816         MOV.B   ES,#SEG( _ParCnt )
0029DA 9908rrrr       11817         MOV.W   R0,#SOF( _ParCnt )
0029DE 8200           11818         MOV.B   R0L,[R0]
0029E0 910401         11819         CMP.B   R0L,#01H
0029E3 F215           11820         BNE     _770
0029E5 9918rrrr       11821         MOV.W   R1,#SEG( _Cmd )
0029E9 9908rrrr       11822         MOV.W   R0,#SOF( _Cmd )
0029ED 9168rr         11823         MOV.B   R3L,#SEG( __lc_bs )
0029F0 7177           11824         XOR.B   R3H,R3H
0029F2 8927           11825         MOV.W   R2,R7
0029F4 0F0C           11826         PUSH.W  R2, R3
0029F6 9938rrrr       11828         MOV.W   R3,#SEG( _10 )
0029FA 9928rrrr       11829         MOV.W   R2,#SOF( _10 )
0029FE 0F0C           11830         PUSH.W  R2, R3
                      11832         CALL    _sscanf
002A00 C4rrrrrr       +11832 ;       FCALL   _sscanf
002A04 99700008       11833         ADD.W   R7,#08H
002A08 99040001       11835         CMP.W   R0,#01H
002A0C F306           11836         BEQ     _771
002A0C F306           11836         BEQ     _771
002A0E                11837 _770:
                      11838 ; rs232cmd.c 3346                                       SCPIError = SyntaxErr;
002A0E 964842rr       11840         MOV.B   ES,#SEG( _SCPIError )
002A12 9908rrrr       11841         MOV.W   R0,#SOF( _SCPIError )
002A16 BA03           11842         MOV.W   [R0],#03H
002A18 FE19           11843         BR      _780
002A18 FE19           11843         BR      _780
002A1A                11844 _771:
                      11845 ; rs232cmd.c 3347                               else {
                      11846 ; rs232cmd.c 3348                                       if (( click != click1s) && ( click != cli
                            ck3s))
002A1A 9A740001       11848         CMP.W   [R7],#01H
002A1E F30A           11849         BEQ     _773
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 194

ADDR   CODE            LINE SOURCELINE
002A20 9A740003       11850         CMP.W   [R7],#03H
002A24 F307           11851         BEQ     _773
                      11852 ; rs232cmd.c 3349                                               SCPIError = DataOutOfRange;
002A26 964842rr       11854         MOV.B   ES,#SEG( _SCPIError )
002A2A 9908rrrr       11855         MOV.W   R0,#SOF( _SCPIError )
002A2E 9A080021       11856         MOV.W   [R0],#021H
002A32 FE0C           11857         BR      _780
002A32 FE0C           11857         BR      _780
002A34                11858 _773:
                      11859 ; rs232cmd.c 3350                                       else
                      11860 ; rs232cmd.c 3351                                       {
                      11861 ; rs232cmd.c 3352                                               if ( SetAudioClick( AnalogAudio, 
                            click) == FAIL)
002A34 B900           11863         MOV.W   R0,#00H
002A36 8A17           11864         MOV.W   R1,[R7]
                      11865         CALL    _SetAudioClick
002A38 C4rrrrrr       +11865 ;       FCALL   _SetAudioClick
002A3C 6900           11866         OR.W    R0,R0
002A3E F206           11867         BNE     _780
                      11868 ; rs232cmd.c 3353                                                       SCPIError = ExecErr;
002A40 964842rr       11870         MOV.B   ES,#SEG( _SCPIError )
002A44 9908rrrr       11871         MOV.W   R0,#SOF( _SCPIError )
002A48 9A08001D       11872         MOV.W   [R0],#01DH
                      11873 ; rs232cmd.c 3354                                       }
                      11874 ; rs232cmd.c 3355                               }
                      11875 ; rs232cmd.c 3356                       }
                      11876 ; rs232cmd.c 3357               }
002A4C                11878 _780:
                      11879 ; rs232cmd.c 3358       }
002A4C A972           11881         ADDS.W  R7,#02H
002A4E D680           11883         RET
                      11885 ; rs232cmd.c 3359       
                      11886 ; rs232cmd.c 3360       
                      11887 ; rs232cmd.c 3361       /************************************************************************
                            **/
                      11888 ; rs232cmd.c 3362       /* AudioGenAESEBU                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      11889 ; rs232cmd.c 3363       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11890 ; rs232cmd.c 3364       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                    */
                      11891 ; rs232cmd.c 3365       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                      11892 ; rs232cmd.c 3366       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11893 ; rs232cmd.c 3367       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      11894 ; rs232cmd.c 3368       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                      11895 ; rs232cmd.c 3369       /* Returns:       --                                                     
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 195

ADDR   CODE            LINE SOURCELINE
                      11896 ; rs232cmd.c 3370       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      11897 ; rs232cmd.c 3371       /************************************************************************
                            **/
                      11898 ; rs232cmd.c 3372       void AudioGenAESEBU( void)
                      11899 ; rs232cmd.c 3373       {
                      11900         ALIGN   1
                      11902         PUBLIC  _AudioGenAESEBU
002A50                11903 _AudioGenAESEBU:
002A50 0F70           11907         PUSH.W  R4, R5, R6
                      11913 ; rs232cmd.c 3374               char code *str;
                      11914 ; rs232cmd.c 3375               int level;
                      11915 ; rs232cmd.c 3376       
                      11916 ; rs232cmd.c 3377               if ( CmdExecute && !SCPIError)
002A52 964842rr       11918         MOV.B   ES,#SEG( _CmdExecute )
002A56 9908rrrr       11919         MOV.W   R0,#SOF( _CmdExecute )
002A5A 8200           11920         MOV.B   R0L,[R0]
                      11921         BEQ     _815
002A5C F202           +11921 ;       BNE     _LG_696
002A5E D50136         +11921 ;       JMP.L   _815
002A62 D5013600       +11921 ;       JMP.L   _815
002A62                +11921 _LG_696:
002A62 964842rr       11922         MOV.B   ES,#SEG( _SCPIError )
002A66 9908rrrr       11923         MOV.W   R0,#SOF( _SCPIError )
002A6A 8A00           11924         MOV.W   R0,[R0]
                      11925         BNE     _815
002A6C F302           +11925 ;       BEQ     _LG_698
002A6E D5012E         +11925 ;       JMP.L   _815
002A72 D5012E00       +11925 ;       JMP.L   _815
002A72                +11925 _LG_698:
                      11926 ; rs232cmd.c 3378               {
                      11927 ; rs232cmd.c 3379                       if ( !CmdRequest)
002A72 964842rr       11929         MOV.B   ES,#SEG( _CmdRequest )
002A76 9908rrrr       11930         MOV.W   R0,#SOF( _CmdRequest )
002A7A 8200           11931         MOV.B   R0L,[R0]
002A7C F207           11932         BNE     _786
                      11933 ; rs232cmd.c 3380                                       SCPIError = SyntaxErr;
002A7E 964842rr       11935         MOV.B   ES,#SEG( _SCPIError )
002A82 9908rrrr       11936         MOV.W   R0,#SOF( _SCPIError )
002A86 BA03           11937         MOV.W   [R0],#03H
                      11938         BR      _815
002A88 D50121         +11938         JMP.L   _815
002A88 D5012100       +11938         JMP.L   _815
002A8C                11939 _786:
                      11941 ; rs232cmd.c 3381                       else
                      11942 ; rs232cmd.c 3382                       {
                      11943 ; rs232cmd.c 3383                               if ( ParCnt)
002A8C 964842rr       11945         MOV.B   ES,#SEG( _ParCnt )
002A90 9908rrrr       11946         MOV.W   R0,#SOF( _ParCnt )
002A94 8200           11947         MOV.B   R0L,[R0]
002A96 F307           11948         BEQ     _787
                      11949 ; rs232cmd.c 3384                                       SCPIError = ParNotAllowed;
002A98 964842rr       11951         MOV.B   ES,#SEG( _SCPIError )
002A9C 9908rrrr       11952         MOV.W   R0,#SOF( _SCPIError )
002AA0 BA06           11953         MOV.W   [R0],#06H
                      11954         BR      _815
002AA2 D50114         +11954         JMP.L   _815
002AA2 D5011400       +11954         JMP.L   _815
002AA6                11955 _787:
                      11958 ; rs232cmd.c 3385                               else
                      11959 ; rs232cmd.c 3386                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 196

ADDR   CODE            LINE SOURCELINE
                      11960 ; rs232cmd.c 3387                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002AA6 964842rr       11962         MOV.B   ES,#SEG( _AudioSetup+14 )
002AAA 9908rrrr       11963         MOV.W   R0,#SOF( _AudioSetup+14 )
002AAE 8A00           11964         MOV.W   R0,[R0]
002AB0 E900000C       11965         MULU.W  R0,#0CH
002AB4 8920           11966         MOV.W   R2,R0
002AB6 B930           11967         MOVS.W  R3,#00H
002AB8 9918rrrr       11968         MOV.W   R1,#SEG( _AESEBUSystemPar )
002ABC 9908rrrr       11969         MOV.W   R0,#SOF( _AESEBUSystemPar )
002AC0 0902           11970         ADD.W   R0,R2
002AC2 1913           11971         ADDC.W  R1,R3
002AC4 862C43         11972         MOV.B   CS,R1L
002AC7 8820           11973         MOVC.W  R2,[R0+]
002AC9 99040000       11974         CMP.W   R0,#00H
002ACD F202           11975         BNE     _816
002ACF A64143         11976         ADDS.B  CS,#01H
002ACF A64143         11976         ADDS.B  CS,#01H
002AD2                11977 _816:
002AD2 8830           11978         MOVC.W  R3,[R0+]
002AD4 8953           11979         MOV.W   R5,R3
002AD6 8942           11980         MOV.W   R4,R2
                      11982 ; rs232cmd.c 3388       
                      11983 ; rs232cmd.c 3389                                       while ( *str)
002AD8 866C43         11985         MOV.B   CS,R3L
002ADB 8062           11986         MOVC.B  R3L,[R2+]
002ADD F312           11987         BEQ     _789
002ADD F31200         11987         BEQ     _789
002AE0                11988 _788:
                      11989 ; rs232cmd.c 3390                                               rs232putchar( *str++);
002AE0 8915           11991         MOV.W   R1,R5
002AE2 8904           11992         MOV.W   R0,R4
002AE4 862C43         11993         MOV.B   CS,R1L
002AE7 8020           11994         MOVC.B  R1L,[R0+]
002AE9 8102           11995         MOV.B   R0L,R1L
                      11996         CALL    _rs232putchar
002AEB C4rrrrrr       +11996 ;       FCALL   _rs232putchar
002AEF 99400001       11997         ADD.W   R4,#01H
002AF3 99510000       11998         ADDC.W  R5,#00H
002AF7 8915           12002         MOV.W   R1,R5
002AF9 8904           12003         MOV.W   R0,R4
002AFB 862C43         12004         MOV.B   CS,R1L
002AFE 8020           12005         MOVC.B  R1L,[R0+]
002B00 F2EF           12006         BNE     _788
002B02                12008 _789:
                      12009 ; rs232cmd.c 3391       
                      12010 ; rs232cmd.c 3392                                       rs232putchar( ',');
002B02 91082C         12012         MOV.B   R0L,#02CH
                      12013         CALL    _rs232putchar
002B05 C4rrrrrr       +12013 ;       FCALL   _rs232putchar
                      12014 ; rs232cmd.c 3393       
                      12015 ; rs232cmd.c 3394                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002B09 964842rr       12017         MOV.B   ES,#SEG( _AudioSetup+16 )
002B0D 9908rrrr       12018         MOV.W   R0,#SOF( _AudioSetup+16 )
002B11 8A00           12019         MOV.W   R0,[R0]
002B13 E900000C       12020         MULU.W  R0,#0CH
002B17 B910           12021         MOVS.W  R1,#00H
002B19 9958rrrr       12022         MOV.W   R5,#SEG( _AudioSignalPar )
002B1D 9948rrrr       12023         MOV.W   R4,#SOF( _AudioSignalPar )
002B21 0940           12025         ADD.W   R4,R0
002B23 1951           12026         ADDC.W  R5,R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 197

ADDR   CODE            LINE SOURCELINE
002B25 86AC43         12027         MOV.B   CS,R5L
002B28 8804           12028         MOVC.W  R0,[R4+]
002B2A 99440000       12029         CMP.W   R4,#00H
002B2E F202           12030         BNE     _817
002B30 A64143         12031         ADDS.B  CS,#01H
002B30 A6414300       12031         ADDS.B  CS,#01H
002B34                12032 _817:
002B34 8814           12033         MOVC.W  R1,[R4+]
002B36 8951           12034         MOV.W   R5,R1
002B38 8940           12035         MOV.W   R4,R0
                      12037 ; rs232cmd.c 3395       
                      12038 ; rs232cmd.c 3396                                       while ( *str)
002B3A 862C43         12040         MOV.B   CS,R1L
002B3D 8020           12041         MOVC.B  R1L,[R0+]
002B3F F312           12042         BEQ     _791
002B3F F31200         12042         BEQ     _791
002B42                12043 _790:
                      12044 ; rs232cmd.c 3397                                               rs232putchar( *str++);
002B42 8915           12046         MOV.W   R1,R5
002B44 8904           12047         MOV.W   R0,R4
002B46 862C43         12048         MOV.B   CS,R1L
002B49 8020           12049         MOVC.B  R1L,[R0+]
002B4B 8102           12050         MOV.B   R0L,R1L
                      12051         CALL    _rs232putchar
002B4D C4rrrrrr       +12051 ;       FCALL   _rs232putchar
002B51 99400001       12052         ADD.W   R4,#01H
002B55 99510000       12053         ADDC.W  R5,#00H
002B59 8915           12057         MOV.W   R1,R5
002B5B 8904           12058         MOV.W   R0,R4
002B5D 862C43         12059         MOV.B   CS,R1L
002B60 8020           12060         MOVC.B  R1L,[R0+]
002B62 F2EF           12061         BNE     _790
002B64                12063 _791:
002B64 91082C         12064         MOV.B   R0L,#02CH
                      12065 ; rs232cmd.c 3398       
                      12066 ; rs232cmd.c 3399                                       rs232putchar( ',');
                      12068         CALL    _rs232putchar
002B67 C4rrrrrr       +12068 ;       FCALL   _rs232putchar
                      12069 ; rs232cmd.c 3400       
                      12070 ; rs232cmd.c 3401                                       str = NULL;
002B6B B950           12072         MOV.W   R5,#00H
002B6D B940           12073         MOV.W   R4,#00H
                      12076 ; rs232cmd.c 3402       
                      12077 ; rs232cmd.c 3403                                       switch ( AudioSetup[AESEBUAudio].Level)
002B6F 964842rr       12079         MOV.B   ES,#SEG( _AudioSetup+18 )
002B73 9908rrrr       12080         MOV.W   R0,#SOF( _AudioSetup+18 )
002B77 8A00           12081         MOV.W   R0,[R0]
002B79 99040000       12082         CMP.W   R0,#00H
002B7D F314           12083         BEQ     _792
002B7F 99040001       12084         CMP.W   R0,#01H
002B83 F313           12085         BEQ     _793
002B85 99040002       12086         CMP.W   R0,#02H
002B89 F313           12087         BEQ     _794
002B8B 99040003       12088         CMP.W   R0,#03H
002B8F F313           12089         BEQ     _795
002B91 99040004       12090         CMP.W   R0,#04H
002B95 F313           12091         BEQ     _796
002B97 99040005       12092         CMP.W   R0,#05H
002B9B F313           12093         BEQ     _797
002B9D 99040006       12094         CMP.W   R0,#06H
002BA1 F313           12095         BEQ     _798
002BA3 FE15           12096         BR      _799
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 198

ADDR   CODE            LINE SOURCELINE
                      12097 ; rs232cmd.c 3404                                       {
                      12098 ; rs232cmd.c 3405                                               case M0dBFS:
002BA6                12100 _792:
                      12101 ; rs232cmd.c 3406                                                       level = 0;
002BA6 B960           12103         MOV.W   R6,#00H
                      12106 ; rs232cmd.c 3407                                                       break;
002BA8 FE31           12108         BR      _808
                      12109 ; rs232cmd.c 3408       
                      12110 ; rs232cmd.c 3409                                               case M9dBFS:
002BAA                12112 _793:
                      12113 ; rs232cmd.c 3410                                                       level = -9;
002BAA 9968FFF7       12115         MOV.W   R6,#0FFF7H
                      12118 ; rs232cmd.c 3411                                                       break;
002BAE FE2E           12120         BR      _808
                      12121 ; rs232cmd.c 3412       
                      12122 ; rs232cmd.c 3413                                               case M12dBFS:
002BB0                12124 _794:
                      12125 ; rs232cmd.c 3414                                                       level = -12;
002BB0 9968FFF4       12127         MOV.W   R6,#0FFF4H
                      12130 ; rs232cmd.c 3415                                                       break;
002BB4 FE2B           12132         BR      _808
                      12133 ; rs232cmd.c 3416       
                      12134 ; rs232cmd.c 3417                                               case M15dBFS:
002BB6                12136 _795:
                      12137 ; rs232cmd.c 3418                                                       level = -15;
002BB6 9968FFF1       12139         MOV.W   R6,#0FFF1H
                      12142 ; rs232cmd.c 3419                                                       break;
002BBA FE28           12144         BR      _808
                      12145 ; rs232cmd.c 3420       
                      12146 ; rs232cmd.c 3421                                               case M16dBFS:
002BBC                12148 _796:
                      12149 ; rs232cmd.c 3422                                                       level = -16;
002BBC 9968FFF0       12151         MOV.W   R6,#0FFF0H
                      12154 ; rs232cmd.c 3423                                                       break;
002BC0 FE25           12156         BR      _808
                      12157 ; rs232cmd.c 3424       
                      12158 ; rs232cmd.c 3425                                               case M18dBFS:
002BC2                12160 _797:
                      12161 ; rs232cmd.c 3426                                                       level = -18;
002BC2 9968FFEE       12163         MOV.W   R6,#0FFEEH
                      12166 ; rs232cmd.c 3427                                                       break;
002BC6 FE22           12168         BR      _808
                      12169 ; rs232cmd.c 3428       
                      12170 ; rs232cmd.c 3429                                               case M21dBFS:
002BC8                12172 _798:
                      12173 ; rs232cmd.c 3430                                                       level = -21;
002BC8 9968FFEB       12175         MOV.W   R6,#0FFEBH
                      12178 ; rs232cmd.c 3431                                                       break;
002BCC FE1F           12180         BR      _808
                      12181 ; rs232cmd.c 3432       
                      12182 ; rs232cmd.c 3433                                               default:
002BCE                12184 _799:
                      12185 ; rs232cmd.c 3434                                                       str = SILENCEParTxt;
002BCE 9958rrrr       12187         MOV.W   R5,#SEG( _SILENCEParTxt )
002BD2 9948rrrr       12188         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12191 ; rs232cmd.c 3435       
                      12192 ; rs232cmd.c 3436                                                       while ( *str)
002BD6 8915           12194         MOV.W   R1,R5
002BD8 8904           12195         MOV.W   R0,R4
002BDA 862C43         12196         MOV.B   CS,R1L
002BDD 8020           12197         MOVC.B  R1L,[R0+]
002BDF F312           12198         BEQ     _801
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 199

ADDR   CODE            LINE SOURCELINE
002BDF F31200         12198         BEQ     _801
002BE2                12199 _800:
                      12200 ; rs232cmd.c 3437                                                               rs232putchar( *st
                            r++);
002BE2 8915           12202         MOV.W   R1,R5
002BE4 8904           12203         MOV.W   R0,R4
002BE6 862C43         12204         MOV.B   CS,R1L
002BE9 8020           12205         MOVC.B  R1L,[R0+]
002BEB 8102           12206         MOV.B   R0L,R1L
                      12207         CALL    _rs232putchar
002BED C4rrrrrr       +12207 ;       FCALL   _rs232putchar
002BF1 99400001       12208         ADD.W   R4,#01H
002BF5 99510000       12209         ADDC.W  R5,#00H
002BF9 8915           12213         MOV.W   R1,R5
002BFB 8904           12214         MOV.W   R0,R4
002BFD 862C43         12215         MOV.B   CS,R1L
002C00 8020           12216         MOVC.B  R1L,[R0+]
002C02 F2EF           12217         BNE     _800
002C04                12219 _801:
002C04 91082C         12220         MOV.B   R0L,#02CH
                      12221 ; rs232cmd.c 3438       
                      12222 ; rs232cmd.c 3439                                                       rs232putchar( ',');
                      12224         CALL    _rs232putchar
002C07 C4rrrrrr       +12224 ;       FCALL   _rs232putchar
                      12225 ; rs232cmd.c 3440                                                       break;
                      12226 ; rs232cmd.c 3441                                               }
002C0C                12228 _808:
                      12229 ; rs232cmd.c 3442       
                      12230 ; rs232cmd.c 3443                                       if ( str == NULL)
002C0C 6954           12232         OR.W    R5,R4
002C0E F20A           12233         BNE     _809
                      12234 ; rs232cmd.c 3444                                               rs232printf( 6, "%d,", level);
002C10 B906           12236         MOV.W   R0,#06H
002C12 0F40           12237         PUSH.W  R6
002C14 9938rrrr       12240         MOV.W   R3,#SEG( _533 )
002C18 9928rrrr       12241         MOV.W   R2,#SOF( _533 )
002C1C 0F0C           12242         PUSH.W  R2, R3
                      12244         CALL    _rs232printf
002C1E C4rrrrrr       +12244 ;       FCALL   _rs232printf
002C22 A976           12245         ADDS.W  R7,#06H
002C24                12247 _809:
                      12248 ; rs232cmd.c 3445       
                      12249 ; rs232cmd.c 3446                                       rs232printf( 6, "%.1f,", AudioSetup[AESEB
                            UAudio].Timing);
002C24 964842rr       12251         MOV.B   ES,#SEG( _AudioSetup+20 )
002C28 9918rrrr       12252         MOV.W   R1,#SOF( _AudioSetup+20 )
002C2C 8B01           12253         MOV.W   R0,[R1+]
002C2E 8A11           12254         MOV.W   R1,[R1]
002C30 C4rrrrrr       12255         FCALL   __SPF2DPF
002C34 0F0F           12256         PUSH.W  R0, R1, R2, R3
002C36 9918rrrr       12258         MOV.W   R1,#SEG( _785 )
002C3A 9908rrrr       12259         MOV.W   R0,#SOF( _785 )
002C3E 0F03           12260         PUSH.W  R0, R1
002C40 B906           12262         MOV.W   R0,#06H
                      12263         CALL    _rs232printf
002C42 C4rrrrrr       +12263 ;       FCALL   _rs232printf
002C46 9970000C       12264         ADD.W   R7,#0CH
                      12266 ; rs232cmd.c 3447       
                      12267 ; rs232cmd.c 3448                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
002C4A 964842rr       12269         MOV.B   ES,#SEG( _AudioSetup+24 )
002C4E 9908rrrr       12270         MOV.W   R0,#SOF( _AudioSetup+24 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 200

ADDR   CODE            LINE SOURCELINE
002C52 8A00           12271         MOV.W   R0,[R0]
002C54 E900000C       12272         MULU.W  R0,#0CH
002C58 8920           12273         MOV.W   R2,R0
002C5A B930           12274         MOVS.W  R3,#00H
002C5C 9918rrrr       12275         MOV.W   R1,#SEG( _AudioFrequencyPar )
002C60 9908rrrr       12276         MOV.W   R0,#SOF( _AudioFrequencyPar )
002C64 0902           12277         ADD.W   R0,R2
002C66 1913           12278         ADDC.W  R1,R3
002C68 862C43         12279         MOV.B   CS,R1L
002C6B 8840           12280         MOVC.W  R4,[R0+]
002C6D 99040000       12281         CMP.W   R0,#00H
002C71 F202           12282         BNE     _818
002C73 A64143         12283         ADDS.B  CS,#01H
002C73 A64143         12283         ADDS.B  CS,#01H
002C76                12284 _818:
002C76 8850           12285         MOVC.W  R5,[R0+]
                      12288 ; rs232cmd.c 3449       
                      12289 ; rs232cmd.c 3450                                       while ( *str)
002C78 8915           12291         MOV.W   R1,R5
002C7A 8904           12292         MOV.W   R0,R4
002C7C 862C43         12293         MOV.B   CS,R1L
002C7F 8020           12294         MOVC.B  R1L,[R0+]
002C81 F312           12295         BEQ     _811
002C81 F31200         12295         BEQ     _811
002C84                12296 _810:
                      12297 ; rs232cmd.c 3451                                               rs232putchar( *str++);
002C84 8915           12299         MOV.W   R1,R5
002C86 8904           12300         MOV.W   R0,R4
002C88 862C43         12301         MOV.B   CS,R1L
002C8B 8020           12302         MOVC.B  R1L,[R0+]
002C8D 8102           12303         MOV.B   R0L,R1L
                      12304         CALL    _rs232putchar
002C8F C4rrrrrr       +12304 ;       FCALL   _rs232putchar
002C93 99400001       12305         ADD.W   R4,#01H
002C97 99510000       12306         ADDC.W  R5,#00H
002C9B 8915           12310         MOV.W   R1,R5
002C9D 8904           12311         MOV.W   R0,R4
002C9F 862C43         12312         MOV.B   CS,R1L
002CA2 8020           12313         MOVC.B  R1L,[R0+]
002CA4 F2EF           12314         BNE     _810
002CA6                12316 _811:
                      12317 ; rs232cmd.c 3452       
                      12318 ; rs232cmd.c 3453                                       rs232putchar( ',');
002CA6 91082C         12320         MOV.B   R0L,#02CH
                      12321         CALL    _rs232putchar
002CA9 C4rrrrrr       +12321 ;       FCALL   _rs232putchar
                      12322 ; rs232cmd.c 3454       
                      12323 ; rs232cmd.c 3455                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
002CAD 964842rr       12325         MOV.B   ES,#SEG( _AudioSetup+26 )
002CB1 9908rrrr       12326         MOV.W   R0,#SOF( _AudioSetup+26 )
002CB5 8A00           12327         MOV.W   R0,[R0]
002CB7 0F01           12328         PUSH.W  R0
002CB9 9918rrrr       12330         MOV.W   R1,#SEG( _9 )
002CBD 9908rrrr       12331         MOV.W   R0,#SOF( _9 )
002CC1 0F03           12332         PUSH.W  R0, R1
002CC3 B906           12334         MOV.W   R0,#06H
                      12335         CALL    _rs232printf
002CC5 C4rrrrrr       +12335 ;       FCALL   _rs232printf
002CC9 A976           12336         ADDS.W  R7,#06H
                      12338 ; rs232cmd.c 3456                               }
                      12339 ; rs232cmd.c 3457                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 201

ADDR   CODE            LINE SOURCELINE
                      12340 ; rs232cmd.c 3458               }
002CCC                12342 _815:
                      12343 ; rs232cmd.c 3459       }
002CCC 2F70           12345         POP.W   R4, R5, R6
002CCE D680           12347         RET
                      12350 ; rs232cmd.c 3460       
                      12351 ; rs232cmd.c 3461       /************************************************************************
                            **/
                      12352 ; rs232cmd.c 3462       /* AudioGenAESEBUSystem                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      12353 ; rs232cmd.c 3463       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12354 ; rs232cmd.c 3464       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12355 ; rs232cmd.c 3465       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      12356 ; rs232cmd.c 3466       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12357 ; rs232cmd.c 3467       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12358 ; rs232cmd.c 3468       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12359 ; rs232cmd.c 3469       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12360 ; rs232cmd.c 3470       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12361 ; rs232cmd.c 3471       /************************************************************************
                            **/
                      12362 ; rs232cmd.c 3472       void AudioGenAESEBUSystem( void)
                      12363 ; rs232cmd.c 3473       {
                      12364         ALIGN   1
                      12366         PUBLIC  _AudioGenAESEBUSystem
002CD0                12367 _AudioGenAESEBUSystem:
002CD0 0F30           12371         PUSH.W  R4, R5
                      12377 ; rs232cmd.c 3474               int system;
                      12378 ; rs232cmd.c 3475               char code *str;
                      12379 ; rs232cmd.c 3476       
                      12380 ; rs232cmd.c 3477               if ( CmdExecute && !SCPIError)
002CD2 964842rr       12382         MOV.B   ES,#SEG( _CmdExecute )
002CD6 9908rrrr       12383         MOV.W   R0,#SOF( _CmdExecute )
002CDA 8200           12384         MOV.B   R0L,[R0]
002CDC F379           12385         BEQ     _831
002CDE 964842rr       12386         MOV.B   ES,#SEG( _SCPIError )
002CE2 9908rrrr       12387         MOV.W   R0,#SOF( _SCPIError )
002CE6 8A00           12388         MOV.W   R0,[R0]
002CE8 F273           12389         BNE     _831
                      12390 ; rs232cmd.c 3478               {
                      12391 ; rs232cmd.c 3479                       if ( CmdRequest)
002CEA 964842rr       12393         MOV.B   ES,#SEG( _CmdRequest )
002CEE 9908rrrr       12394         MOV.W   R0,#SOF( _CmdRequest )
002CF2 8200           12395         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 202

ADDR   CODE            LINE SOURCELINE
002CF4 F33F           12396         BEQ     _822
                      12397 ; rs232cmd.c 3480                       {
                      12398 ; rs232cmd.c 3481                               if ( ParCnt)
002CF6 964842rr       12400         MOV.B   ES,#SEG( _ParCnt )
002CFA 9908rrrr       12401         MOV.W   R0,#SOF( _ParCnt )
002CFE 8200           12402         MOV.B   R0L,[R0]
002D00 F306           12403         BEQ     _819
                      12404 ; rs232cmd.c 3482                                       SCPIError = ParNotAllowed;
002D02 964842rr       12406         MOV.B   ES,#SEG( _SCPIError )
002D06 9908rrrr       12407         MOV.W   R0,#SOF( _SCPIError )
002D0A BA06           12408         MOV.W   [R0],#06H
002D0C FE61           12409         BR      _831
002D0C FE61           12409         BR      _831
002D0E                12410 _819:
                      12411 ; rs232cmd.c 3483                               else
                      12412 ; rs232cmd.c 3484                               {
                      12413 ; rs232cmd.c 3485                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002D0E 964842rr       12415         MOV.B   ES,#SEG( _AudioSetup+14 )
002D12 9908rrrr       12416         MOV.W   R0,#SOF( _AudioSetup+14 )
002D16 8A00           12417         MOV.W   R0,[R0]
002D18 E900000C       12418         MULU.W  R0,#0CH
002D1C 8920           12419         MOV.W   R2,R0
002D1E B930           12420         MOVS.W  R3,#00H
002D20 9918rrrr       12421         MOV.W   R1,#SEG( _AESEBUSystemPar )
002D24 9908rrrr       12422         MOV.W   R0,#SOF( _AESEBUSystemPar )
002D28 0902           12423         ADD.W   R0,R2
002D2A 1913           12424         ADDC.W  R1,R3
002D2C 862C43         12425         MOV.B   CS,R1L
002D2F 8820           12426         MOVC.W  R2,[R0+]
002D31 99040000       12427         CMP.W   R0,#00H
002D35 F202           12428         BNE     _832
002D37 A64143         12429         ADDS.B  CS,#01H
002D37 A64143         12429         ADDS.B  CS,#01H
002D3A                12430 _832:
002D3A 8830           12431         MOVC.W  R3,[R0+]
002D3C 8953           12432         MOV.W   R5,R3
002D3E 8942           12433         MOV.W   R4,R2
                      12435 ; rs232cmd.c 3486       
                      12436 ; rs232cmd.c 3487                                       while ( *str)
002D40 866C43         12438         MOV.B   CS,R3L
002D43 8062           12439         MOVC.B  R3L,[R2+]
002D45 F312           12440         BEQ     _821
002D45 F31200         12440         BEQ     _821
002D48                12441 _820:
                      12442 ; rs232cmd.c 3488                                               rs232putchar( *str++);
002D48 8915           12444         MOV.W   R1,R5
002D4A 8904           12445         MOV.W   R0,R4
002D4C 862C43         12446         MOV.B   CS,R1L
002D4F 8020           12447         MOVC.B  R1L,[R0+]
002D51 8102           12448         MOV.B   R0L,R1L
                      12449         CALL    _rs232putchar
002D53 C4rrrrrr       +12449 ;       FCALL   _rs232putchar
002D57 99400001       12450         ADD.W   R4,#01H
002D5B 99510000       12451         ADDC.W  R5,#00H
002D5F 8915           12455         MOV.W   R1,R5
002D61 8904           12456         MOV.W   R0,R4
002D63 862C43         12457         MOV.B   CS,R1L
002D66 8020           12458         MOVC.B  R1L,[R0+]
002D68 F2EF           12459         BNE     _820
002D6A                12461 _821:
                      12462 ; rs232cmd.c 3489       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 203

ADDR   CODE            LINE SOURCELINE
                      12463 ; rs232cmd.c 3490                                       rs232putchar('\n');
002D6A 91080A         12465         MOV.B   R0L,#0AH
                      12466         CALL    _rs232putchar
002D6D C4rrrrrr       +12466 ;       FCALL   _rs232putchar
                      12467 ; rs232cmd.c 3491                               }
                      12468 ; rs232cmd.c 3492                       }
002D71 FE2F           12470         BR      _831
002D71 FE2F00         12470         BR      _831
002D74                12471 _822:
                      12472 ; rs232cmd.c 3493                       else
                      12473 ; rs232cmd.c 3494                       {
                      12474 ; rs232cmd.c 3495                               if ( ParCnt != 1)
002D74 964842rr       12476         MOV.B   ES,#SEG( _ParCnt )
002D78 9908rrrr       12477         MOV.W   R0,#SOF( _ParCnt )
002D7C 8200           12478         MOV.B   R0L,[R0]
002D7E 910401         12479         CMP.B   R0L,#01H
002D81 F307           12480         BEQ     _823
                      12481 ; rs232cmd.c 3496                                       SCPIError = SyntaxErr;
002D83 964842rr       12483         MOV.B   ES,#SEG( _SCPIError )
002D87 9908rrrr       12484         MOV.W   R0,#SOF( _SCPIError )
002D8B BA03           12485         MOV.W   [R0],#03H
002D8D FE21           12486         BR      _831
002D8D FE2100         12486         BR      _831
002D90                12487 _823:
                      12488 ; rs232cmd.c 3497                               else
                      12489 ; rs232cmd.c 3498                               {
                      12490 ; rs232cmd.c 3499                                       system = FindParameter( Cmd, AESEBUSystem
                            Par);
002D90 9918rrrr       12492         MOV.W   R1,#SEG( _Cmd )
002D94 9908rrrr       12493         MOV.W   R0,#SOF( _Cmd )
002D98 9938rrrr       12494         MOV.W   R3,#SEG( _AESEBUSystemPar )
002D9C 9928rrrr       12495         MOV.W   R2,#SOF( _AESEBUSystemPar )
002DA0 C5192C         12496         CALL    _FindParameter
                      12498 ; rs232cmd.c 3500               
                      12499 ; rs232cmd.c 3501                                       if ( system > -1)
002DA3 8910           12501         MOV.W   R1,R0
002DA5 9914FFFF       12502         CMP.W   R1,#0FFFFH
002DA9 FD0D           12505         BLE     _824
                      12506 ; rs232cmd.c 3502                                       {
                      12507 ; rs232cmd.c 3503                                               if ( SetAudioSystem( AESEBUAudio,
                             system) == FAIL)
002DAB B901           12509         MOV.W   R0,#01H
                      12510         CALL    _SetAudioSystem
002DAD C4rrrrrr       +12510 ;       FCALL   _SetAudioSystem
002DB1 6900           12512         OR.W    R0,R0
002DB3 F20E           12513         BNE     _831
                      12514 ; rs232cmd.c 3504                                                       SCPIError = ExecErr;
002DB5 964842rr       12516         MOV.B   ES,#SEG( _SCPIError )
002DB9 9908rrrr       12517         MOV.W   R0,#SOF( _SCPIError )
002DBD 9A08001D       12518         MOV.W   [R0],#01DH
                      12519 ; rs232cmd.c 3505                                       }
002DC1 FE07           12521         BR      _831
002DC1 FE0700         12521         BR      _831
002DC4                12522 _824:
                      12523 ; rs232cmd.c 3506                                       else
                      12524 ; rs232cmd.c 3507                                               SCPIError = DataOutOfRange;
002DC4 964842rr       12526         MOV.B   ES,#SEG( _SCPIError )
002DC8 9908rrrr       12527         MOV.W   R0,#SOF( _SCPIError )
002DCC 9A080021       12528         MOV.W   [R0],#021H
                      12529 ; rs232cmd.c 3508                               }
                      12530 ; rs232cmd.c 3509                       }
                      12531 ; rs232cmd.c 3510               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 204

ADDR   CODE            LINE SOURCELINE
002DD0                12533 _831:
                      12534 ; rs232cmd.c 3511       }
002DD0 2F30           12536         POP.W   R4, R5
002DD2 D680           12538         RET
                      12541 ; rs232cmd.c 3512       
                      12542 ; rs232cmd.c 3513       /************************************************************************
                            **/
                      12543 ; rs232cmd.c 3514       /* AudioGenAESEBUSignal                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      12544 ; rs232cmd.c 3515       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12545 ; rs232cmd.c 3516       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12546 ; rs232cmd.c 3517       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      12547 ; rs232cmd.c 3518       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12548 ; rs232cmd.c 3519       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12549 ; rs232cmd.c 3520       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12550 ; rs232cmd.c 3521       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12551 ; rs232cmd.c 3522       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12552 ; rs232cmd.c 3523       /************************************************************************
                            **/
                      12553 ; rs232cmd.c 3524       void AudioGenAESEBUSignal( void)
                      12554 ; rs232cmd.c 3525       {
                      12555         ALIGN   1
                      12557         PUBLIC  _AudioGenAESEBUSignal
002DD4                12558 _AudioGenAESEBUSignal:
002DD4 0F30           12562         PUSH.W  R4, R5
                      12568 ; rs232cmd.c 3526               int signal;
                      12569 ; rs232cmd.c 3527               char code *str;
                      12570 ; rs232cmd.c 3528       
                      12571 ; rs232cmd.c 3529               if ( CmdExecute && !SCPIError)
002DD6 964842rr       12573         MOV.B   ES,#SEG( _CmdExecute )
002DDA 9908rrrr       12574         MOV.W   R0,#SOF( _CmdExecute )
002DDE 8200           12575         MOV.B   R0L,[R0]
002DE0 F379           12576         BEQ     _847
002DE2 964842rr       12577         MOV.B   ES,#SEG( _SCPIError )
002DE6 9908rrrr       12578         MOV.W   R0,#SOF( _SCPIError )
002DEA 8A00           12579         MOV.W   R0,[R0]
002DEC F273           12580         BNE     _847
                      12581 ; rs232cmd.c 3530               {
                      12582 ; rs232cmd.c 3531                       if ( CmdRequest)
002DEE 964842rr       12584         MOV.B   ES,#SEG( _CmdRequest )
002DF2 9908rrrr       12585         MOV.W   R0,#SOF( _CmdRequest )
002DF6 8200           12586         MOV.B   R0L,[R0]
002DF8 F33F           12587         BEQ     _838
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 205

ADDR   CODE            LINE SOURCELINE
                      12588 ; rs232cmd.c 3532                       {
                      12589 ; rs232cmd.c 3533                               if ( ParCnt)
002DFA 964842rr       12591         MOV.B   ES,#SEG( _ParCnt )
002DFE 9908rrrr       12592         MOV.W   R0,#SOF( _ParCnt )
002E02 8200           12593         MOV.B   R0L,[R0]
002E04 F306           12594         BEQ     _835
                      12595 ; rs232cmd.c 3534                                       SCPIError = ParNotAllowed;
002E06 964842rr       12597         MOV.B   ES,#SEG( _SCPIError )
002E0A 9908rrrr       12598         MOV.W   R0,#SOF( _SCPIError )
002E0E BA06           12599         MOV.W   [R0],#06H
002E10 FE61           12600         BR      _847
002E10 FE61           12600         BR      _847
002E12                12601 _835:
                      12602 ; rs232cmd.c 3535                               else
                      12603 ; rs232cmd.c 3536                               {
                      12604 ; rs232cmd.c 3537                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002E12 964842rr       12606         MOV.B   ES,#SEG( _AudioSetup+16 )
002E16 9908rrrr       12607         MOV.W   R0,#SOF( _AudioSetup+16 )
002E1A 8A00           12608         MOV.W   R0,[R0]
002E1C E900000C       12609         MULU.W  R0,#0CH
002E20 8920           12610         MOV.W   R2,R0
002E22 B930           12611         MOVS.W  R3,#00H
002E24 9918rrrr       12612         MOV.W   R1,#SEG( _AudioSignalPar )
002E28 9908rrrr       12613         MOV.W   R0,#SOF( _AudioSignalPar )
002E2C 0902           12614         ADD.W   R0,R2
002E2E 1913           12615         ADDC.W  R1,R3
002E30 862C43         12616         MOV.B   CS,R1L
002E33 8820           12617         MOVC.W  R2,[R0+]
002E35 99040000       12618         CMP.W   R0,#00H
002E39 F202           12619         BNE     _848
002E3B A64143         12620         ADDS.B  CS,#01H
002E3B A64143         12620         ADDS.B  CS,#01H
002E3E                12621 _848:
002E3E 8830           12622         MOVC.W  R3,[R0+]
002E40 8953           12623         MOV.W   R5,R3
002E42 8942           12624         MOV.W   R4,R2
                      12626 ; rs232cmd.c 3538       
                      12627 ; rs232cmd.c 3539                                       while ( *str)
002E44 866C43         12629         MOV.B   CS,R3L
002E47 8062           12630         MOVC.B  R3L,[R2+]
002E49 F312           12631         BEQ     _837
002E49 F31200         12631         BEQ     _837
002E4C                12632 _836:
                      12633 ; rs232cmd.c 3540                                               rs232putchar( *str++);
002E4C 8915           12635         MOV.W   R1,R5
002E4E 8904           12636         MOV.W   R0,R4
002E50 862C43         12637         MOV.B   CS,R1L
002E53 8020           12638         MOVC.B  R1L,[R0+]
002E55 8102           12639         MOV.B   R0L,R1L
                      12640         CALL    _rs232putchar
002E57 C4rrrrrr       +12640 ;       FCALL   _rs232putchar
002E5B 99400001       12641         ADD.W   R4,#01H
002E5F 99510000       12642         ADDC.W  R5,#00H
002E63 8915           12646         MOV.W   R1,R5
002E65 8904           12647         MOV.W   R0,R4
002E67 862C43         12648         MOV.B   CS,R1L
002E6A 8020           12649         MOVC.B  R1L,[R0+]
002E6C F2EF           12650         BNE     _836
002E6E                12652 _837:
                      12653 ; rs232cmd.c 3541       
                      12654 ; rs232cmd.c 3542                                       rs232putchar('\n');
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 206

ADDR   CODE            LINE SOURCELINE
002E6E 91080A         12656         MOV.B   R0L,#0AH
                      12657         CALL    _rs232putchar
002E71 C4rrrrrr       +12657 ;       FCALL   _rs232putchar
                      12658 ; rs232cmd.c 3543                               }
                      12659 ; rs232cmd.c 3544                       }
002E75 FE2F           12661         BR      _847
002E75 FE2F00         12661         BR      _847
002E78                12662 _838:
                      12663 ; rs232cmd.c 3545                       else
                      12664 ; rs232cmd.c 3546                       {
                      12665 ; rs232cmd.c 3547                               if ( ParCnt != 1)
002E78 964842rr       12667         MOV.B   ES,#SEG( _ParCnt )
002E7C 9908rrrr       12668         MOV.W   R0,#SOF( _ParCnt )
002E80 8200           12669         MOV.B   R0L,[R0]
002E82 910401         12670         CMP.B   R0L,#01H
002E85 F307           12671         BEQ     _839
                      12672 ; rs232cmd.c 3548                                       SCPIError = SyntaxErr;
002E87 964842rr       12674         MOV.B   ES,#SEG( _SCPIError )
002E8B 9908rrrr       12675         MOV.W   R0,#SOF( _SCPIError )
002E8F BA03           12676         MOV.W   [R0],#03H
002E91 FE21           12677         BR      _847
002E91 FE2100         12677         BR      _847
002E94                12678 _839:
                      12679 ; rs232cmd.c 3549                               else
                      12680 ; rs232cmd.c 3550                               {
                      12681 ; rs232cmd.c 3551                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002E94 9918rrrr       12683         MOV.W   R1,#SEG( _Cmd )
002E98 9908rrrr       12684         MOV.W   R0,#SOF( _Cmd )
002E9C 9938rrrr       12685         MOV.W   R3,#SEG( _AudioSignalPar )
002EA0 9928rrrr       12686         MOV.W   R2,#SOF( _AudioSignalPar )
002EA4 C518AA         12687         CALL    _FindParameter
                      12689 ; rs232cmd.c 3552               
                      12690 ; rs232cmd.c 3553                                       if ( signal > -1)
002EA7 8910           12692         MOV.W   R1,R0
002EA9 9914FFFF       12693         CMP.W   R1,#0FFFFH
002EAD FD0D           12696         BLE     _840
                      12697 ; rs232cmd.c 3554                                       {
                      12698 ; rs232cmd.c 3555                                               if ( SetAudioSignal( AESEBUAudio,
                             signal) == FAIL)
002EAF B901           12700         MOV.W   R0,#01H
                      12701         CALL    _SetAudioSignal
002EB1 C4rrrrrr       +12701 ;       FCALL   _SetAudioSignal
002EB5 6900           12703         OR.W    R0,R0
002EB7 F20E           12704         BNE     _847
                      12705 ; rs232cmd.c 3556                                                       SCPIError = ExecErr;
002EB9 964842rr       12707         MOV.B   ES,#SEG( _SCPIError )
002EBD 9908rrrr       12708         MOV.W   R0,#SOF( _SCPIError )
002EC1 9A08001D       12709         MOV.W   [R0],#01DH
                      12710 ; rs232cmd.c 3557                                       }
002EC5 FE07           12712         BR      _847
002EC5 FE0700         12712         BR      _847
002EC8                12713 _840:
                      12714 ; rs232cmd.c 3558                                       else
                      12715 ; rs232cmd.c 3559                                               SCPIError = DataOutOfRange;
002EC8 964842rr       12717         MOV.B   ES,#SEG( _SCPIError )
002ECC 9908rrrr       12718         MOV.W   R0,#SOF( _SCPIError )
002ED0 9A080021       12719         MOV.W   [R0],#021H
                      12720 ; rs232cmd.c 3560                               }
                      12721 ; rs232cmd.c 3561                       }
                      12722 ; rs232cmd.c 3562               }
002ED4                12724 _847:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 207

ADDR   CODE            LINE SOURCELINE
                      12725 ; rs232cmd.c 3563       }
002ED4 2F30           12727         POP.W   R4, R5
002ED6 D680           12729         RET
                      12732 ; rs232cmd.c 3564       
                      12733 ; rs232cmd.c 3565       /************************************************************************
                            **/
                      12734 ; rs232cmd.c 3566       /* AudioGenAESEBULevel                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      12735 ; rs232cmd.c 3567       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12736 ; rs232cmd.c 3568       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12737 ; rs232cmd.c 3569       /* Revised:             0000628                                          
                                                                                                                             
                                                                                    */
                      12738 ; rs232cmd.c 3570       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12739 ; rs232cmd.c 3571       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12740 ; rs232cmd.c 3572       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12741 ; rs232cmd.c 3573       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12742 ; rs232cmd.c 3574       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12743 ; rs232cmd.c 3575       /************************************************************************
                            **/
                      12744 ; rs232cmd.c 3576       void AudioGenAESEBULevel( void)
                      12745 ; rs232cmd.c 3577       {
                      12746         ALIGN   1
                      12748         PUBLIC  _AudioGenAESEBULevel
002ED8                12749 _AudioGenAESEBULevel:
002ED8 0F30           12753         PUSH.W  R4, R5
002EDA A97E           12755         ADDS.W  R7,#0EH
                      12760 ; rs232cmd.c 3578               code char *str;
                      12761 ; rs232cmd.c 3579               int level;
                      12762 ; rs232cmd.c 3580       
                      12763 ; rs232cmd.c 3581               if ( CmdExecute && !SCPIError)
002EDC 964842rr       12765         MOV.B   ES,#SEG( _CmdExecute )
002EE0 9908rrrr       12766         MOV.W   R0,#SOF( _CmdExecute )
002EE4 8200           12767         MOV.B   R0L,[R0]
                      12768         BEQ     _896
002EE6 F202           +12768 ;       BNE     _LG_782
002EE8 D500EC         +12768 ;       JMP.L   _896
002EEC D500EC00       +12768 ;       JMP.L   _896
002EEC                +12768 _LG_782:
002EEC 964842rr       12769         MOV.B   ES,#SEG( _SCPIError )
002EF0 9908rrrr       12770         MOV.W   R0,#SOF( _SCPIError )
002EF4 8A00           12771         MOV.W   R0,[R0]
                      12772         BNE     _896
002EF6 F302           +12772 ;       BEQ     _LG_784
002EF8 D500E4         +12772 ;       JMP.L   _896
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 208

ADDR   CODE            LINE SOURCELINE
002EFC D500E400       +12772 ;       JMP.L   _896
002EFC                +12772 _LG_784:
                      12773 ; rs232cmd.c 3582               {
                      12774 ; rs232cmd.c 3583                       if ( CmdRequest)
002EFC 964842rr       12776         MOV.B   ES,#SEG( _CmdRequest )
002F00 9908rrrr       12777         MOV.W   R0,#SOF( _CmdRequest )
002F04 8200           12778         MOV.B   R0L,[R0]
002F06 F367           12779         BEQ     _868
                      12780 ; rs232cmd.c 3584                       {
                      12781 ; rs232cmd.c 3585                               if ( ParCnt)
002F08 964842rr       12783         MOV.B   ES,#SEG( _ParCnt )
002F0C 9908rrrr       12784         MOV.W   R0,#SOF( _ParCnt )
002F10 8200           12785         MOV.B   R0L,[R0]
002F12 F307           12786         BEQ     _851
                      12787 ; rs232cmd.c 3586                                       SCPIError = ParNotAllowed;
002F14 964842rr       12789         MOV.B   ES,#SEG( _SCPIError )
002F18 9908rrrr       12790         MOV.W   R0,#SOF( _SCPIError )
002F1C BA06           12791         MOV.W   [R0],#06H
                      12792         BR      _896
002F1E D500D1         +12792         JMP.L   _896
002F1E D500D100       +12792         JMP.L   _896
002F22                12793 _851:
                      12794 ; rs232cmd.c 3587                               else
                      12795 ; rs232cmd.c 3588                               {
                      12796 ; rs232cmd.c 3589                                       switch ( AudioSetup[AESEBUAudio].Level)
002F22 964842rr       12798         MOV.B   ES,#SEG( _AudioSetup+18 )
002F26 9908rrrr       12799         MOV.W   R0,#SOF( _AudioSetup+18 )
002F2A 8A00           12800         MOV.W   R0,[R0]
002F2C 99040000       12801         CMP.W   R0,#00H
002F30 F345           12802         BEQ     _861
002F32 99040001       12803         CMP.W   R0,#01H
002F36 F310           12804         BEQ     _852
002F38 99040002       12805         CMP.W   R0,#02H
002F3C F310           12806         BEQ     _853
002F3E 99040003       12807         CMP.W   R0,#03H
002F42 F310           12808         BEQ     _854
002F44 99040004       12809         CMP.W   R0,#04H
002F48 F310           12810         BEQ     _855
002F4A 99040005       12811         CMP.W   R0,#05H
002F4E F310           12812         BEQ     _856
002F50 99040006       12813         CMP.W   R0,#06H
002F54 F310           12814         BEQ     _857
002F56 FE12           12815         BR      _858
                      12816 ; rs232cmd.c 3590                                       {
                      12817 ; rs232cmd.c 3591                                               case M0dBFS:
                      12818 ; rs232cmd.c 3592                                                       level = 0;
                      12819 ; rs232cmd.c 3593                                                       break;
                      12820 ; rs232cmd.c 3594       
                      12821 ; rs232cmd.c 3595                                               case M9dBFS:
002F58                12823 _852:
                      12824 ; rs232cmd.c 3596                                                       level = -9;
002F58 9A78FFF7       12826         MOV.W   [R7],#0FFF7H
                      12827 ; rs232cmd.c 3597                                                       break;
002F5C FE30           12829         BR      _867
                      12830 ; rs232cmd.c 3598       
                      12831 ; rs232cmd.c 3599                                               case M12dBFS:
002F5E                12833 _853:
                      12834 ; rs232cmd.c 3600                                                       level = -12;
002F5E 9A78FFF4       12836         MOV.W   [R7],#0FFF4H
                      12837 ; rs232cmd.c 3601                                                       break;
002F62 FE2D           12839         BR      _867
                      12840 ; rs232cmd.c 3602       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 209

ADDR   CODE            LINE SOURCELINE
                      12841 ; rs232cmd.c 3603                                               case M15dBFS:
002F64                12843 _854:
                      12844 ; rs232cmd.c 3604                                                       level = -15;
002F64 9A78FFF1       12846         MOV.W   [R7],#0FFF1H
                      12847 ; rs232cmd.c 3605                                                       break;
002F68 FE2A           12849         BR      _867
                      12850 ; rs232cmd.c 3606       
                      12851 ; rs232cmd.c 3607                                               case M16dBFS:
002F6A                12853 _855:
                      12854 ; rs232cmd.c 3608                                                       level = -16;
002F6A 9A78FFF0       12856         MOV.W   [R7],#0FFF0H
                      12857 ; rs232cmd.c 3609                                                       break;
002F6E FE27           12859         BR      _867
                      12860 ; rs232cmd.c 3610       
                      12861 ; rs232cmd.c 3611                                               case M18dBFS:
002F70                12863 _856:
                      12864 ; rs232cmd.c 3612                                                       level = -18;
002F70 9A78FFEE       12866         MOV.W   [R7],#0FFEEH
                      12867 ; rs232cmd.c 3613                                                       break;
002F74 FE24           12869         BR      _867
                      12870 ; rs232cmd.c 3614       
                      12871 ; rs232cmd.c 3615                                               case M21dBFS:
002F76                12873 _857:
                      12874 ; rs232cmd.c 3616                                                       level = -21;
002F76 9A78FFEB       12876         MOV.W   [R7],#0FFEBH
                      12877 ; rs232cmd.c 3617                                                       break;
002F7A FE21           12879         BR      _867
                      12880 ; rs232cmd.c 3618       
                      12881 ; rs232cmd.c 3619                                               default:
002F7C                12883 _858:
                      12884 ; rs232cmd.c 3620                                                       str = SILENCEParTxt;
002F7C 9958rrrr       12886         MOV.W   R5,#SEG( _SILENCEParTxt )
002F80 9948rrrr       12887         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12889 ; rs232cmd.c 3621       
                      12890 ; rs232cmd.c 3622                                                       while ( *str)
002F84 964843rr       12892         MOV.B   CS,#SEG( _SILENCEParTxt )
002F88 9908rrrr       12893         MOV.W   R0,#SOF( _SILENCEParTxt )
002F8C 8020           12894         MOVC.B  R1L,[R0+]
002F8E F311           12895         BEQ     _860
002F8E F311           12895         BEQ     _860
002F90                12896 _859:
                      12897 ; rs232cmd.c 3623                                                               rs232putchar( *st
                            r++);
002F90 8915           12899         MOV.W   R1,R5
002F92 8904           12900         MOV.W   R0,R4
002F94 862C43         12901         MOV.B   CS,R1L
002F97 8020           12902         MOVC.B  R1L,[R0+]
002F99 8102           12903         MOV.B   R0L,R1L
                      12904         CALL    _rs232putchar
002F9B C4rrrrrr       +12904 ;       FCALL   _rs232putchar
002F9F 99400001       12905         ADD.W   R4,#01H
002FA3 99510000       12906         ADDC.W  R5,#00H
002FA7 8915           12910         MOV.W   R1,R5
002FA9 8904           12911         MOV.W   R0,R4
002FAB 862C43         12912         MOV.B   CS,R1L
002FAE 8020           12913         MOVC.B  R1L,[R0+]
002FB0 F2EF           12914         BNE     _859
002FB2                12916 _860:
                      12917 ; rs232cmd.c 3624       
                      12918 ; rs232cmd.c 3625                                                       rs232putchar('\n');
002FB2 91080A         12920         MOV.B   R0L,#0AH
                      12921         CALL    _rs232putchar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 210

ADDR   CODE            LINE SOURCELINE
002FB5 C4rrrrrr       +12921 ;       FCALL   _rs232putchar
                      12922 ; rs232cmd.c 3626                                                       return;
                      12924         BR      _896
002FB9 D50083         +12924         JMP.L   _896
002FBC                12926 _861:
002FBC BA70           12928         MOV.W   [R7],#00H
                      12929 ; rs232cmd.c 3627                                               }
002FBE                12931 _867:
                      12932 ; rs232cmd.c 3628       
                      12933 ; rs232cmd.c 3629                                       rs232printf( 6, "%d\n", level);
002FBE B906           12935         MOV.W   R0,#06H
002FC0 8A17           12936         MOV.W   R1,[R7]
002FC2 0F02           12937         PUSH.W  R1
002FC4 9938rrrr       12939         MOV.W   R3,#SEG( _9 )
002FC8 9928rrrr       12940         MOV.W   R2,#SOF( _9 )
002FCC 0F0C           12941         PUSH.W  R2, R3
                      12943         CALL    _rs232printf
002FCE C4rrrrrr       +12943 ;       FCALL   _rs232printf
002FD2 A976           12944         ADDS.W  R7,#06H
                      12946 ; rs232cmd.c 3630                               }
                      12947 ; rs232cmd.c 3631                       }
002FD4 FE76           12949         BR      _896
002FD4 FE76           12949         BR      _896
002FD6                12950 _868:
                      12951 ; rs232cmd.c 3632                       else
                      12952 ; rs232cmd.c 3633                       {
                      12953 ; rs232cmd.c 3634                               if ( ParCnt != 1)
002FD6 964842rr       12955         MOV.B   ES,#SEG( _ParCnt )
002FDA 9908rrrr       12956         MOV.W   R0,#SOF( _ParCnt )
002FDE 8200           12957         MOV.B   R0L,[R0]
002FE0 910401         12958         CMP.B   R0L,#01H
002FE3 F307           12959         BEQ     _869
                      12960 ; rs232cmd.c 3635                                       SCPIError = SyntaxErr;
002FE5 964842rr       12962         MOV.B   ES,#SEG( _SCPIError )
002FE9 9908rrrr       12963         MOV.W   R0,#SOF( _SCPIError )
002FED BA03           12964         MOV.W   [R0],#03H
002FEF FE69           12965         BR      _896
002FEF FE6900         12965         BR      _896
002FF2                12966 _869:
                      12967 ; rs232cmd.c 3636                               else
                      12968 ; rs232cmd.c 3637                               {
                      12969 ; rs232cmd.c 3638                                       level = FindParameter( Cmd, AESEBULevelPa
                            r);
002FF2 9938rrrr       12971         MOV.W   R3,#SEG( _AESEBULevelPar )
002FF6 9928rrrr       12972         MOV.W   R2,#SOF( _AESEBULevelPar )
002FFA 9918rrrr       12973         MOV.W   R1,#SEG( _Cmd )
002FFE 9908rrrr       12974         MOV.W   R0,#SOF( _Cmd )
003002 C517FB         12975         CALL    _FindParameter
003005 8A0F           12976         MOV.W   [R7],R0
                      12977 ; rs232cmd.c 3639               
                      12978 ; rs232cmd.c 3640                                       if ( level > -1)
003007 9A74FFFF       12980         CMP.W   [R7],#0FFFFH
00300B FD03           12981         BLE     _870
                      12982 ; rs232cmd.c 3641                                               level = AESEBUSilence;
00300D BA77           12984         MOV.W   [R7],#07H
00300F FE4D           12985         BR      _888
00300F FE4D00         12985         BR      _888
003012                12986 _870:
                      12987 ; rs232cmd.c 3642                                       else
                      12988 ; rs232cmd.c 3643                                       {
                      12989 ; rs232cmd.c 3644                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 211

ADDR   CODE            LINE SOURCELINE
003012 964842rr       12991         MOV.B   ES,#SEG( _ParCnt )
003016 9908rrrr       12992         MOV.W   R0,#SOF( _ParCnt )
00301A 8200           12993         MOV.B   R0L,[R0]
00301C 910401         12994         CMP.B   R0L,#01H
00301F F215           12995         BNE     _871
003021 9128rr         12996         MOV.B   R1L,#SEG( __lc_bs )
003024 7133           12997         XOR.B   R1H,R1H
003026 8907           12998         MOV.W   R0,R7
003028 0F03           12999         PUSH.W  R0, R1
00302A 9918rrrr       13001         MOV.W   R1,#SEG( _10 )
00302E 9908rrrr       13002         MOV.W   R0,#SOF( _10 )
003032 0F03           13003         PUSH.W  R0, R1
003034 9918rrrr       13005         MOV.W   R1,#SEG( _Cmd )
003038 9908rrrr       13006         MOV.W   R0,#SOF( _Cmd )
                      13007         CALL    _sscanf
00303C C4rrrrrr       +13007 ;       FCALL   _sscanf
003040 99700008       13008         ADD.W   R7,#08H
003044 99040001       13010         CMP.W   R0,#01H
003048 F306           13011         BEQ     _872
003048 F306           13011         BEQ     _872
00304A                13012 _871:
                      13013 ; rs232cmd.c 3645                                                       SCPIError = SyntaxErr;
00304A 964842rr       13015         MOV.B   ES,#SEG( _SCPIError )
00304E 9908rrrr       13016         MOV.W   R0,#SOF( _SCPIError )
003052 BA03           13017         MOV.W   [R0],#03H
003054 FE2A           13018         BR      _888
003054 FE2A           13018         BR      _888
003056                13019 _872:
                      13020 ; rs232cmd.c 3646                                               else {
                      13021 ; rs232cmd.c 3647                                                       switch ( level)
003056 9A740000       13023         CMP.W   [R7],#00H
00305A F326           13024         BEQ     _880
00305C 9A74FFF7       13025         CMP.W   [R7],#0FFF7H
003060 F310           13026         BEQ     _873
003062 9A74FFF4       13027         CMP.W   [R7],#0FFF4H
003066 F30F           13028         BEQ     _874
003068 9A74FFF1       13029         CMP.W   [R7],#0FFF1H
00306C F30E           13030         BEQ     _875
00306E 9A74FFF0       13031         CMP.W   [R7],#0FFF0H
003072 F30D           13032         BEQ     _876
003074 9A74FFEE       13033         CMP.W   [R7],#0FFEEH
003078 F30C           13034         BEQ     _877
00307A 9A74FFEB       13035         CMP.W   [R7],#0FFEBH
00307E F30B           13036         BEQ     _878
003080 FE0C           13037         BR      _879
                      13038 ; rs232cmd.c 3648                                                       {
                      13039 ; rs232cmd.c 3649                                                               case 0:
                      13040 ; rs232cmd.c 3650                                                                       level = M
                            0dBFS;
                      13041 ; rs232cmd.c 3651                                                                       break;
                      13042 ; rs232cmd.c 3652       
                      13043 ; rs232cmd.c 3653                                                               case -9:
003082                13045 _873:
                      13046 ; rs232cmd.c 3654                                                                       level = M
                            9dBFS;
003082 BA71           13048         MOV.W   [R7],#01H
                      13049 ; rs232cmd.c 3655                                                                       break;
003084 FE12           13051         BR      _888
                      13052 ; rs232cmd.c 3656       
                      13053 ; rs232cmd.c 3657                                                               case -12:
003086                13055 _874:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 212

ADDR   CODE            LINE SOURCELINE
                      13056 ; rs232cmd.c 3658                                                                       level = M
                            12dBFS;
003086 BA72           13058         MOV.W   [R7],#02H
                      13059 ; rs232cmd.c 3659                                                                       break;
003088 FE10           13061         BR      _888
                      13062 ; rs232cmd.c 3660       
                      13063 ; rs232cmd.c 3661                                                               case -15:
00308A                13065 _875:
                      13066 ; rs232cmd.c 3662                                                                       level = M
                            15dBFS;
00308A BA73           13068         MOV.W   [R7],#03H
                      13069 ; rs232cmd.c 3663                                                                       break;
00308C FE0E           13071         BR      _888
                      13072 ; rs232cmd.c 3664       
                      13073 ; rs232cmd.c 3665                                                               case -16:
00308E                13075 _876:
                      13076 ; rs232cmd.c 3666                                                                       level = M
                            16dBFS;
00308E BA74           13078         MOV.W   [R7],#04H
                      13079 ; rs232cmd.c 3667                                                                       break;
003090 FE0C           13081         BR      _888
                      13082 ; rs232cmd.c 3668       
                      13083 ; rs232cmd.c 3669                                                               case -18:
003092                13085 _877:
                      13086 ; rs232cmd.c 3670                                                                       level = M
                            18dBFS;
003092 BA75           13088         MOV.W   [R7],#05H
                      13089 ; rs232cmd.c 3671                                                                       break;
003094 FE0A           13091         BR      _888
                      13092 ; rs232cmd.c 3672       
                      13093 ; rs232cmd.c 3673                                                               case -21:
003096                13095 _878:
                      13096 ; rs232cmd.c 3674                                                                       level = M
                            21dBFS;
003096 BA76           13098         MOV.W   [R7],#06H
                      13099 ; rs232cmd.c 3675                                                                       break;
003098 FE08           13101         BR      _888
                      13102 ; rs232cmd.c 3676       
                      13103 ; rs232cmd.c 3677                                                               default:
00309A                13105 _879:
                      13106 ; rs232cmd.c 3678                                                                       SCPIError
                             = DataOutOfRange;
00309A 964842rr       13108         MOV.B   ES,#SEG( _SCPIError )
00309E 9908rrrr       13109         MOV.W   R0,#SOF( _SCPIError )
0030A2 9A080021       13110         MOV.W   [R0],#021H
                      13111 ; rs232cmd.c 3679                                                                       return;
0030A6 FE0D           13113         BR      _896
0030A8                13115 _880:
0030A8 BA70           13117         MOV.W   [R7],#00H
                      13118 ; rs232cmd.c 3680                                                       }
                      13119 ; rs232cmd.c 3681                                               }
                      13120 ; rs232cmd.c 3682                                       }
0030AA                13122 _888:
                      13123 ; rs232cmd.c 3683       
                      13124 ; rs232cmd.c 3684                                       if ( SetAudioLevel( AESEBUAudio, level) =
                            = FAIL)
0030AA B901           13126         MOV.W   R0,#01H
0030AC 8A17           13127         MOV.W   R1,[R7]
                      13128         CALL    _SetAudioLevel
0030AE C4rrrrrr       +13128 ;       FCALL   _SetAudioLevel
0030B2 6900           13129         OR.W    R0,R0
0030B4 F206           13130         BNE     _896
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 213

ADDR   CODE            LINE SOURCELINE
                      13131 ; rs232cmd.c 3685                                               SCPIError = ExecErr;
0030B6 964842rr       13133         MOV.B   ES,#SEG( _SCPIError )
0030BA 9908rrrr       13134         MOV.W   R0,#SOF( _SCPIError )
0030BE 9A08001D       13135         MOV.W   [R0],#01DH
                      13136 ; rs232cmd.c 3686                               }
                      13137 ; rs232cmd.c 3687                       }
                      13138 ; rs232cmd.c 3688               }
                      13139 ; rs232cmd.c 3689       }
0030C2                13141 _896:
0030C2 A972           13142         ADDS.W  R7,#02H
0030C4 2F30           13144         POP.W   R4, R5
0030C6 D680           13146         RET
                      13149 ; rs232cmd.c 3690       
                      13150 ; rs232cmd.c 3691       /************************************************************************
                            **/
                      13151 ; rs232cmd.c 3692       /* AudioGenAESEBUTiming                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      13152 ; rs232cmd.c 3693       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13153 ; rs232cmd.c 3694       /* Author:              Kim Engedahl, DEV, 000616                        
                                                                                                                             
                                    */
                      13154 ; rs232cmd.c 3695       /* Revised:             000616                                           
                                                                                                                             
                                                                                    */
                      13155 ; rs232cmd.c 3696       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13156 ; rs232cmd.c 3697       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13157 ; rs232cmd.c 3698       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13158 ; rs232cmd.c 3699       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13159 ; rs232cmd.c 3700       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13160 ; rs232cmd.c 3701       /************************************************************************
                            **/
                      13161 ; rs232cmd.c 3702       void AudioGenAESEBUTiming( void)
                      13162 ; rs232cmd.c 3703       {
                      13163         ALIGN   1
                      13165         PUBLIC  _AudioGenAESEBUTiming
0030C8                13166 _AudioGenAESEBUTiming:
0030C8 0F70           13170         PUSH.W  R4, R5, R6
0030CA 99720014       13172         SUB.W   R7,#014H
                      13177 ; rs232cmd.c 3704               float timing;
                      13178 ; rs232cmd.c 3705               int tmp;
                      13179 ; rs232cmd.c 3706       
                      13180 ; rs232cmd.c 3707               if ( CmdExecute && !SCPIError)
0030CE 964842rr       13182         MOV.B   ES,#SEG( _CmdExecute )
0030D2 9908rrrr       13183         MOV.W   R0,#SOF( _CmdExecute )
0030D6 8200           13184         MOV.B   R0L,[R0]
                      13185         BEQ     _918
0030D8 F202           +13185 ;       BNE     _LG_832
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 214

ADDR   CODE            LINE SOURCELINE
0030DA D500A9         +13185 ;       JMP.L   _918
0030DE D500A900       +13185 ;       JMP.L   _918
0030DE                +13185 _LG_832:
0030DE 964842rr       13186         MOV.B   ES,#SEG( _SCPIError )
0030E2 9908rrrr       13187         MOV.W   R0,#SOF( _SCPIError )
0030E6 8A00           13188         MOV.W   R0,[R0]
                      13189         BNE     _918
0030E8 F302           +13189 ;       BEQ     _LG_834
0030EA D500A1         +13189 ;       JMP.L   _918
0030EE D500A100       +13189 ;       JMP.L   _918
0030EE                +13189 _LG_834:
                      13190 ; rs232cmd.c 3708               {
                      13191 ; rs232cmd.c 3709                       if ( CmdRequest)
0030EE 964842rr       13193         MOV.B   ES,#SEG( _CmdRequest )
0030F2 9908rrrr       13194         MOV.W   R0,#SOF( _CmdRequest )
0030F6 8200           13195         MOV.B   R0L,[R0]
0030F8 F321           13196         BEQ     _907
                      13197 ; rs232cmd.c 3710                       {
                      13198 ; rs232cmd.c 3711                               if ( ParCnt)
0030FA 964842rr       13200         MOV.B   ES,#SEG( _ParCnt )
0030FE 9908rrrr       13201         MOV.W   R0,#SOF( _ParCnt )
003102 8200           13202         MOV.B   R0L,[R0]
003104 F307           13203         BEQ     _906
                      13204 ; rs232cmd.c 3712                                       SCPIError = ParNotAllowed;
003106 964842rr       13206         MOV.B   ES,#SEG( _SCPIError )
00310A 9908rrrr       13207         MOV.W   R0,#SOF( _SCPIError )
00310E BA06           13208         MOV.W   [R0],#06H
                      13209         BR      _918
003110 D5008E         +13209         JMP.L   _918
003110 D5008E00       +13209         JMP.L   _918
003114                13210 _906:
                      13211 ; rs232cmd.c 3713                               else
                      13212 ; rs232cmd.c 3714                                       rs232printf( 6, "%.1f\n", AudioSetup[AESE
                            BUAudio].Timing);
003114 964842rr       13214         MOV.B   ES,#SEG( _AudioSetup+20 )
003118 9918rrrr       13215         MOV.W   R1,#SOF( _AudioSetup+20 )
00311C 8B01           13216         MOV.W   R0,[R1+]
00311E 8A11           13217         MOV.W   R1,[R1]
003120 C4rrrrrr       13218         FCALL   __SPF2DPF
003124 0F0F           13219         PUSH.W  R0, R1, R2, R3
003126 9918rrrr       13221         MOV.W   R1,#SEG( _901 )
00312A 9908rrrr       13222         MOV.W   R0,#SOF( _901 )
00312E 0F03           13223         PUSH.W  R0, R1
003130 B906           13225         MOV.W   R0,#06H
                      13226         CALL    _rs232printf
003132 C4rrrrrr       +13226 ;       FCALL   _rs232printf
003136 9970000C       13227         ADD.W   R7,#0CH
                      13229 ; rs232cmd.c 3715                       }
00313A FE79           13231         BR      _918
00313A FE79           13231         BR      _918
00313C                13232 _907:
                      13233 ; rs232cmd.c 3716                       else
                      13234 ; rs232cmd.c 3717                       {
                      13235 ; rs232cmd.c 3718                               if (( ParCnt != 1) || ( sscanf( Cmd, "%f", &timin
                            g) != 1))
00313C 964842rr       13237         MOV.B   ES,#SEG( _ParCnt )
003140 9908rrrr       13238         MOV.W   R0,#SOF( _ParCnt )
003144 8200           13239         MOV.B   R0L,[R0]
003146 910401         13240         CMP.B   R0L,#01H
003149 F216           13241         BNE     _908
00314B 9918rrrr       13242         MOV.W   R1,#SEG( _Cmd )
00314F 9908rrrr       13243         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 215

ADDR   CODE            LINE SOURCELINE
003153 9168rr         13244         MOV.B   R3L,#SEG( __lc_bs )
003156 7177           13245         XOR.B   R3H,R3H
003158 402710         13246         LEA     R2,R7+16
00315B 0F0C           13247         PUSH.W  R2, R3
00315D 9938rrrr       13249         MOV.W   R3,#SEG( _902 )
003161 9928rrrr       13250         MOV.W   R2,#SOF( _902 )
003165 0F0C           13251         PUSH.W  R2, R3
                      13253         CALL    _sscanf
003167 C4rrrrrr       +13253 ;       FCALL   _sscanf
00316B 99700008       13254         ADD.W   R7,#08H
00316F 99040001       13256         CMP.W   R0,#01H
003173 F307           13257         BEQ     _909
003173 F30700         13257         BEQ     _909
003176                13258 _908:
                      13259 ; rs232cmd.c 3719                                       SCPIError = SyntaxErr;
003176 964842rr       13261         MOV.B   ES,#SEG( _SCPIError )
00317A 9908rrrr       13262         MOV.W   R0,#SOF( _SCPIError )
00317E BA03           13263         MOV.W   [R0],#03H
003180 FE56           13264         BR      _918
003180 FE56           13264         BR      _918
003182                13265 _909:
                      13266 ; rs232cmd.c 3720                               else
                      13267 ; rs232cmd.c 3721                               {
                      13268 ; rs232cmd.c 3722                                       tmp = (int)(( timing / 0.8) + 0.5 - ( 1*(
                             timing < 0)));
003182 8C1712         13270         MOV.W   R1,[R7+18]
003185 8C0710         13271         MOV.W   R0,[R7+16]
003188 C4rrrrrr       13272         FCALL   __SPF2DPF
00318C 9C780E3FE9     13273         MOV.W   [R7+14],#03FE9H
003191 9C780C9999     13274         MOV.W   [R7+12],#09999H
003196 9C780A9999     13275         MOV.W   [R7+10],#09999H
00319B 9C7808999A     13276         MOV.W   [R7+8],#0999AH
0031A0 406708         13277         LEA     R6,R7+8
0031A3 C4rrrrrr       13278         FCALL   __DIV_DPF
0031A7 9C780E3FE0     13279         MOV.W   [R7+14],#03FE0H
0031AC BC700C         13280         MOV.W   [R7+12],#00H
0031AF BC700A         13281         MOV.W   [R7+10],#00H
0031B2 BC7008         13282         MOV.W   [R7+8],#00H
0031B5 406708         13283         LEA     R6,R7+8
0031B8 C4rrrrrr       13284         FCALL   __ADD_DPF
0031BC 8C3F06         13285         MOV.W   [R7+6],R3
0031BF 8C2F04         13286         MOV.W   [R7+4],R2
0031C2 8C1F02         13287         MOV.W   [R7+2],R1
0031C5 8A0F           13288         MOV.W   [R7],R0
0031C7 8C1712         13289         MOV.W   R1,[R7+18]
0031CA 8C0710         13290         MOV.W   R0,[R7+16]
0031CD B930           13291         MOV.W   R3,#00H
0031CF B920           13292         MOV.W   R2,#00H
0031D1 C4rrrrrr       13293         FCALL   __CMP_SPF
0031D5 9104FF         13294         CMP.B   R0L,#0FFH
0031D8 F206           13295         BNE     _921
0031DA B900           13296         MOVS.W  R0,#00H
0031DC B910           13297         MOVS.W  R1,#00H
0031DE B920           13298         MOVS.W  R2,#00H
0031E0 99383FF0       13299         MOV.W   R3,#03FF0H
0031E4 FE04           13300         BR      _922
0031E4 FE04           13300         BR      _922
0031E6                13301 _921:
0031E6 B900           13302         MOVS.W  R0,#00H
0031E8 B910           13303         MOVS.W  R1,#00H
0031EA B920           13304         MOVS.W  R2,#00H
0031EC B930           13305         MOVS.W  R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 216

ADDR   CODE            LINE SOURCELINE
0031EC B930           13305         MOVS.W  R3,#00H
0031EE                13306 _922:
0031EE 8967           13307         MOV.W   R6,R7
0031F0 C4rrrrrr       13308         FCALL   __SUBR_DPF
0031F4 C4rrrrrr       13309         FCALL   __DPF2S
                      13311 ; rs232cmd.c 3723       
                      13312 ; rs232cmd.c 3724                                       if (( tmp < -12) || ( tmp > 13))
0031F8 9904FFF4       13314         CMP.W   R0,#0FFF4H
0031FC FB03           13315         BLT     _910
0031FE 9904000D       13316         CMP.W   R0,#0DH
003202 FD07           13317         BLE     _911
003202 FD07           13317         BLE     _911
003204                13318 _910:
                      13319 ; rs232cmd.c 3725                                               SCPIError = DataOutOfRange;
003204 964842rr       13321         MOV.B   ES,#SEG( _SCPIError )
003208 9908rrrr       13322         MOV.W   R0,#SOF( _SCPIError )
00320C 9A080021       13323         MOV.W   [R0],#021H
003210 FE0E           13324         BR      _918
003210 FE0E           13324         BR      _918
003212                13325 _911:
                      13326 ; rs232cmd.c 3726                                       else
                      13327 ; rs232cmd.c 3727                                       {
                      13328 ; rs232cmd.c 3728                                               if ( SetAudioTiming( AESEBUAudio,
                             timing) == FAIL)
003212 B901           13330         MOV.W   R0,#01H
003214 8C3712         13332         MOV.W   R3,[R7+18]
003217 8C2710         13333         MOV.W   R2,[R7+16]
                      13334         CALL    _SetAudioTiming
00321A C4rrrrrr       +13334 ;       FCALL   _SetAudioTiming
00321E 6900           13335         OR.W    R0,R0
003220 F206           13336         BNE     _918
                      13337 ; rs232cmd.c 3729                                                       SCPIError = ExecErr;
003222 964842rr       13339         MOV.B   ES,#SEG( _SCPIError )
003226 9908rrrr       13340         MOV.W   R0,#SOF( _SCPIError )
00322A 9A08001D       13341         MOV.W   [R0],#01DH
                      13342 ; rs232cmd.c 3730                                       }
                      13343 ; rs232cmd.c 3731                               }
                      13344 ; rs232cmd.c 3732                       }
                      13345 ; rs232cmd.c 3733               }
00322E                13347 _918:
                      13348 ; rs232cmd.c 3734       }
00322E 99700014       13350         ADD.W   R7,#014H
003232 2F70           13352         POP.W   R4, R5, R6
003234 D680           13354         RET
                      13356 ; rs232cmd.c 3735       
                      13357 ; rs232cmd.c 3736       /************************************************************************
                            **/
                      13358 ; rs232cmd.c 3737       /* AudioGenAESEBUWordClock                                               
                                                                                                                 RS232CMD.C *
                            /
                      13359 ; rs232cmd.c 3738       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13360 ; rs232cmd.c 3739       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13361 ; rs232cmd.c 3740       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      13362 ; rs232cmd.c 3741       /*                                                                       
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 217

ADDR   CODE            LINE SOURCELINE
                                                    */
                      13363 ; rs232cmd.c 3742       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13364 ; rs232cmd.c 3743       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13365 ; rs232cmd.c 3744       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13366 ; rs232cmd.c 3745       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13367 ; rs232cmd.c 3746       /************************************************************************
                            **/
                      13368 ; rs232cmd.c 3747       void AudioGenAESEBUWordClock( void)
                      13369 ; rs232cmd.c 3748       {
                      13370         ALIGN   1
                      13372         PUBLIC  _AudioGenAESEBUWordClock
003236                13373 _AudioGenAESEBUWordClock:
003236 0F30           13377         PUSH.W  R4, R5
                      13383 ; rs232cmd.c 3749               int frequency;
                      13384 ; rs232cmd.c 3750               char code *str;
                      13385 ; rs232cmd.c 3751       
                      13386 ; rs232cmd.c 3752               if ( CmdExecute && !SCPIError)
003238 964842rr       13388         MOV.B   ES,#SEG( _CmdExecute )
00323C 9908rrrr       13389         MOV.W   R0,#SOF( _CmdExecute )
003240 8200           13390         MOV.B   R0L,[R0]
003242 F379           13391         BEQ     _937
003244 964842rr       13392         MOV.B   ES,#SEG( _SCPIError )
003248 9908rrrr       13393         MOV.W   R0,#SOF( _SCPIError )
00324C 8A00           13394         MOV.W   R0,[R0]
00324E F273           13395         BNE     _937
                      13396 ; rs232cmd.c 3753               {
                      13397 ; rs232cmd.c 3754                       if ( CmdRequest)
003250 964842rr       13399         MOV.B   ES,#SEG( _CmdRequest )
003254 9908rrrr       13400         MOV.W   R0,#SOF( _CmdRequest )
003258 8200           13401         MOV.B   R0L,[R0]
00325A F33F           13402         BEQ     _928
                      13403 ; rs232cmd.c 3755                       {
                      13404 ; rs232cmd.c 3756                               if ( ParCnt)
00325C 964842rr       13406         MOV.B   ES,#SEG( _ParCnt )
003260 9908rrrr       13407         MOV.W   R0,#SOF( _ParCnt )
003264 8200           13408         MOV.B   R0L,[R0]
003266 F306           13409         BEQ     _925
                      13410 ; rs232cmd.c 3757                                       SCPIError = ParNotAllowed;
003268 964842rr       13412         MOV.B   ES,#SEG( _SCPIError )
00326C 9908rrrr       13413         MOV.W   R0,#SOF( _SCPIError )
003270 BA06           13414         MOV.W   [R0],#06H
003272 FE61           13415         BR      _937
003272 FE61           13415         BR      _937
003274                13416 _925:
                      13417 ; rs232cmd.c 3758                               else
                      13418 ; rs232cmd.c 3759                               {
                      13419 ; rs232cmd.c 3760                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
003274 964842rr       13421         MOV.B   ES,#SEG( _AudioSetup+24 )
003278 9908rrrr       13422         MOV.W   R0,#SOF( _AudioSetup+24 )
00327C 8A00           13423         MOV.W   R0,[R0]
00327E E900000C       13424         MULU.W  R0,#0CH
003282 8920           13425         MOV.W   R2,R0
003284 B930           13426         MOVS.W  R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 218

ADDR   CODE            LINE SOURCELINE
003286 9918rrrr       13427         MOV.W   R1,#SEG( _AudioFrequencyPar )
00328A 9908rrrr       13428         MOV.W   R0,#SOF( _AudioFrequencyPar )
00328E 0902           13429         ADD.W   R0,R2
003290 1913           13430         ADDC.W  R1,R3
003292 862C43         13431         MOV.B   CS,R1L
003295 8820           13432         MOVC.W  R2,[R0+]
003297 99040000       13433         CMP.W   R0,#00H
00329B F202           13434         BNE     _938
00329D A64143         13435         ADDS.B  CS,#01H
00329D A64143         13435         ADDS.B  CS,#01H
0032A0                13436 _938:
0032A0 8830           13437         MOVC.W  R3,[R0+]
0032A2 8953           13438         MOV.W   R5,R3
0032A4 8942           13439         MOV.W   R4,R2
                      13441 ; rs232cmd.c 3761       
                      13442 ; rs232cmd.c 3762                                       while ( *str)
0032A6 866C43         13444         MOV.B   CS,R3L
0032A9 8062           13445         MOVC.B  R3L,[R2+]
0032AB F312           13446         BEQ     _927
0032AB F31200         13446         BEQ     _927
0032AE                13447 _926:
                      13448 ; rs232cmd.c 3763                                               rs232putchar( *str++);
0032AE 8915           13450         MOV.W   R1,R5
0032B0 8904           13451         MOV.W   R0,R4
0032B2 862C43         13452         MOV.B   CS,R1L
0032B5 8020           13453         MOVC.B  R1L,[R0+]
0032B7 8102           13454         MOV.B   R0L,R1L
                      13455         CALL    _rs232putchar
0032B9 C4rrrrrr       +13455 ;       FCALL   _rs232putchar
0032BD 99400001       13456         ADD.W   R4,#01H
0032C1 99510000       13457         ADDC.W  R5,#00H
0032C5 8915           13461         MOV.W   R1,R5
0032C7 8904           13462         MOV.W   R0,R4
0032C9 862C43         13463         MOV.B   CS,R1L
0032CC 8020           13464         MOVC.B  R1L,[R0+]
0032CE F2EF           13465         BNE     _926
0032D0                13467 _927:
                      13468 ; rs232cmd.c 3764       
                      13469 ; rs232cmd.c 3765                                       rs232putchar('\n');
0032D0 91080A         13471         MOV.B   R0L,#0AH
                      13472         CALL    _rs232putchar
0032D3 C4rrrrrr       +13472 ;       FCALL   _rs232putchar
                      13473 ; rs232cmd.c 3766                               }
                      13474 ; rs232cmd.c 3767                       }
0032D7 FE2F           13476         BR      _937
0032D7 FE2F00         13476         BR      _937
0032DA                13477 _928:
                      13478 ; rs232cmd.c 3768                       else
                      13479 ; rs232cmd.c 3769                       {
                      13480 ; rs232cmd.c 3770                               if ( ParCnt != 1)
0032DA 964842rr       13482         MOV.B   ES,#SEG( _ParCnt )
0032DE 9908rrrr       13483         MOV.W   R0,#SOF( _ParCnt )
0032E2 8200           13484         MOV.B   R0L,[R0]
0032E4 910401         13485         CMP.B   R0L,#01H
0032E7 F307           13486         BEQ     _929
                      13487 ; rs232cmd.c 3771                                       SCPIError = SyntaxErr;
0032E9 964842rr       13489         MOV.B   ES,#SEG( _SCPIError )
0032ED 9908rrrr       13490         MOV.W   R0,#SOF( _SCPIError )
0032F1 BA03           13491         MOV.W   [R0],#03H
0032F3 FE21           13492         BR      _937
0032F3 FE2100         13492         BR      _937
0032F6                13493 _929:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 219

ADDR   CODE            LINE SOURCELINE
                      13494 ; rs232cmd.c 3772                               else
                      13495 ; rs232cmd.c 3773                               {
                      13496 ; rs232cmd.c 3774                                       frequency = FindParameter( Cmd, AudioFreq
                            uencyPar);
0032F6 9918rrrr       13498         MOV.W   R1,#SEG( _Cmd )
0032FA 9908rrrr       13499         MOV.W   R0,#SOF( _Cmd )
0032FE 9938rrrr       13500         MOV.W   R3,#SEG( _AudioFrequencyPar )
003302 9928rrrr       13501         MOV.W   R2,#SOF( _AudioFrequencyPar )
003306 C51679         13502         CALL    _FindParameter
                      13504 ; rs232cmd.c 3775               
                      13505 ; rs232cmd.c 3776                                       if ( frequency > -1)
003309 8910           13507         MOV.W   R1,R0
00330B 9914FFFF       13508         CMP.W   R1,#0FFFFH
00330F FD0D           13511         BLE     _930
                      13512 ; rs232cmd.c 3777                                       {
                      13513 ; rs232cmd.c 3778                                               if ( SetAudioWordClock( AESEBUAud
                            io, frequency) == FAIL)
003311 B901           13515         MOV.W   R0,#01H
                      13516         CALL    _SetAudioWordClock
003313 C4rrrrrr       +13516 ;       FCALL   _SetAudioWordClock
003317 6900           13518         OR.W    R0,R0
003319 F20E           13519         BNE     _937
                      13520 ; rs232cmd.c 3779                                                       SCPIError = ExecErr;
00331B 964842rr       13522         MOV.B   ES,#SEG( _SCPIError )
00331F 9908rrrr       13523         MOV.W   R0,#SOF( _SCPIError )
003323 9A08001D       13524         MOV.W   [R0],#01DH
                      13525 ; rs232cmd.c 3780                                       }
003327 FE07           13527         BR      _937
003327 FE0700         13527         BR      _937
00332A                13528 _930:
                      13529 ; rs232cmd.c 3781                                       else
                      13530 ; rs232cmd.c 3782                                               SCPIError = DataOutOfRange;
00332A 964842rr       13532         MOV.B   ES,#SEG( _SCPIError )
00332E 9908rrrr       13533         MOV.W   R0,#SOF( _SCPIError )
003332 9A080021       13534         MOV.W   [R0],#021H
                      13535 ; rs232cmd.c 3783                               }
                      13536 ; rs232cmd.c 3784                       }
                      13537 ; rs232cmd.c 3785               }
003336                13539 _937:
                      13540 ; rs232cmd.c 3786       }
003336 2F30           13542         POP.W   R4, R5
003338 D680           13544         RET
                      13547 ; rs232cmd.c 3787       
                      13548 ; rs232cmd.c 3788       /************************************************************************
                            **/
                      13549 ; rs232cmd.c 3789       /* AudioGenAESEBUClick                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      13550 ; rs232cmd.c 3790       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13551 ; rs232cmd.c 3791       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13552 ; rs232cmd.c 3792       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      13553 ; rs232cmd.c 3793       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 220

ADDR   CODE            LINE SOURCELINE
                      13554 ; rs232cmd.c 3794       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13555 ; rs232cmd.c 3795       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13556 ; rs232cmd.c 3796       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13557 ; rs232cmd.c 3797       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13558 ; rs232cmd.c 3798       /************************************************************************
                            **/
                      13559 ; rs232cmd.c 3799       void AudioGenAESEBUClick( void)
                      13560 ; rs232cmd.c 3800       {
                      13561         ALIGN   1
                      13563         PUBLIC  _AudioGenAESEBUClick
00333A                13564 _AudioGenAESEBUClick:
00333A A97E           13568         ADDS.W  R7,#0EH
                      13571 ; rs232cmd.c 3801               int click;
                      13572 ; rs232cmd.c 3802       
                      13573 ; rs232cmd.c 3803               if ( CmdExecute && !SCPIError)
00333C 964842rr       13575         MOV.B   ES,#SEG( _CmdExecute )
003340 9908rrrr       13576         MOV.W   R0,#SOF( _CmdExecute )
003344 8200           13577         MOV.B   R0L,[R0]
003346 F363           13578         BEQ     _953
003348 964842rr       13579         MOV.B   ES,#SEG( _SCPIError )
00334C 9908rrrr       13580         MOV.W   R0,#SOF( _SCPIError )
003350 8A00           13581         MOV.W   R0,[R0]
003352 F25D           13582         BNE     _953
                      13583 ; rs232cmd.c 3804               {
                      13584 ; rs232cmd.c 3805                       if ( CmdRequest)
003354 964842rr       13586         MOV.B   ES,#SEG( _CmdRequest )
003358 9908rrrr       13587         MOV.W   R0,#SOF( _CmdRequest )
00335C 8200           13588         MOV.B   R0L,[R0]
00335E F31C           13589         BEQ     _942
                      13590 ; rs232cmd.c 3806                       {
                      13591 ; rs232cmd.c 3807                               if ( ParCnt)
003360 964842rr       13593         MOV.B   ES,#SEG( _ParCnt )
003364 9908rrrr       13594         MOV.W   R0,#SOF( _ParCnt )
003368 8200           13595         MOV.B   R0L,[R0]
00336A F306           13596         BEQ     _941
                      13597 ; rs232cmd.c 3808                                       SCPIError = ParNotAllowed;
00336C 964842rr       13599         MOV.B   ES,#SEG( _SCPIError )
003370 9908rrrr       13600         MOV.W   R0,#SOF( _SCPIError )
003374 BA06           13601         MOV.W   [R0],#06H
003376 FE4B           13602         BR      _953
003376 FE4B           13602         BR      _953
003378                13603 _941:
                      13604 ; rs232cmd.c 3809                               else
                      13605 ; rs232cmd.c 3810                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
003378 B906           13607         MOV.W   R0,#06H
00337A 964842rr       13608         MOV.B   ES,#SEG( _AudioSetup+26 )
00337E 9918rrrr       13609         MOV.W   R1,#SOF( _AudioSetup+26 )
003382 8A11           13610         MOV.W   R1,[R1]
003384 0F02           13611         PUSH.W  R1
003386 9938rrrr       13613         MOV.W   R3,#SEG( _9 )
00338A 9928rrrr       13614         MOV.W   R2,#SOF( _9 )
00338E 0F0C           13615         PUSH.W  R2, R3
                      13617         CALL    _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 221

ADDR   CODE            LINE SOURCELINE
003390 C4rrrrrr       +13617 ;       FCALL   _rs232printf
003394 A976           13618         ADDS.W  R7,#06H
                      13620 ; rs232cmd.c 3811                       }
003396 FE3B           13622         BR      _953
003396 FE3B           13622         BR      _953
003398                13623 _942:
                      13624 ; rs232cmd.c 3812                       else
                      13625 ; rs232cmd.c 3813                       {
                      13626 ; rs232cmd.c 3814                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
003398 964842rr       13628         MOV.B   ES,#SEG( _ParCnt )
00339C 9908rrrr       13629         MOV.W   R0,#SOF( _ParCnt )
0033A0 8200           13630         MOV.B   R0L,[R0]
0033A2 910401         13631         CMP.B   R0L,#01H
0033A5 F215           13632         BNE     _943
0033A7 9918rrrr       13633         MOV.W   R1,#SEG( _Cmd )
0033AB 9908rrrr       13634         MOV.W   R0,#SOF( _Cmd )
0033AF 9168rr         13635         MOV.B   R3L,#SEG( __lc_bs )
0033B2 7177           13636         XOR.B   R3H,R3H
0033B4 8927           13637         MOV.W   R2,R7
0033B6 0F0C           13638         PUSH.W  R2, R3
0033B8 9938rrrr       13640         MOV.W   R3,#SEG( _10 )
0033BC 9928rrrr       13641         MOV.W   R2,#SOF( _10 )
0033C0 0F0C           13642         PUSH.W  R2, R3
                      13644         CALL    _sscanf
0033C2 C4rrrrrr       +13644 ;       FCALL   _sscanf
0033C6 99700008       13645         ADD.W   R7,#08H
0033CA 99040001       13647         CMP.W   R0,#01H
0033CE F306           13648         BEQ     _944
0033CE F306           13648         BEQ     _944
0033D0                13649 _943:
                      13650 ; rs232cmd.c 3815                                       SCPIError = SyntaxErr;
0033D0 964842rr       13652         MOV.B   ES,#SEG( _SCPIError )
0033D4 9908rrrr       13653         MOV.W   R0,#SOF( _SCPIError )
0033D8 BA03           13654         MOV.W   [R0],#03H
0033DA FE19           13655         BR      _953
0033DA FE19           13655         BR      _953
0033DC                13656 _944:
                      13657 ; rs232cmd.c 3816                               else
                      13658 ; rs232cmd.c 3817                               {
                      13659 ; rs232cmd.c 3818                                       if (( click != click1s) && ( click != cli
                            ck3s))
0033DC 9A740001       13661         CMP.W   [R7],#01H
0033E0 F30A           13662         BEQ     _946
0033E2 9A740003       13663         CMP.W   [R7],#03H
0033E6 F307           13664         BEQ     _946
                      13665 ; rs232cmd.c 3819                                               SCPIError = DataOutOfRange;
0033E8 964842rr       13667         MOV.B   ES,#SEG( _SCPIError )
0033EC 9908rrrr       13668         MOV.W   R0,#SOF( _SCPIError )
0033F0 9A080021       13669         MOV.W   [R0],#021H
0033F4 FE0C           13670         BR      _953
0033F4 FE0C           13670         BR      _953
0033F6                13671 _946:
                      13672 ; rs232cmd.c 3820                                       else
                      13673 ; rs232cmd.c 3821                                       {
                      13674 ; rs232cmd.c 3822                                               if ( SetAudioClick( AESEBUAudio, 
                            click) == FAIL)
0033F6 B901           13676         MOV.W   R0,#01H
0033F8 8A17           13677         MOV.W   R1,[R7]
                      13678         CALL    _SetAudioClick
0033FA C4rrrrrr       +13678 ;       FCALL   _SetAudioClick
0033FE 6900           13679         OR.W    R0,R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 222

ADDR   CODE            LINE SOURCELINE
003400 F206           13680         BNE     _953
                      13681 ; rs232cmd.c 3823                                                       SCPIError = ExecErr;
003402 964842rr       13683         MOV.B   ES,#SEG( _SCPIError )
003406 9908rrrr       13684         MOV.W   R0,#SOF( _SCPIError )
00340A 9A08001D       13685         MOV.W   [R0],#01DH
                      13686 ; rs232cmd.c 3824                                       }
                      13687 ; rs232cmd.c 3825                               }
                      13688 ; rs232cmd.c 3826                       }
                      13689 ; rs232cmd.c 3827               }
00340E                13691 _953:
                      13692 ; rs232cmd.c 3828       }
00340E A972           13694         ADDS.W  R7,#02H
003410 D680           13696         RET
                      13698 ; rs232cmd.c 3829       
                      13699 ; rs232cmd.c 3830       /************************************************************************
                            **/
                      13700 ; rs232cmd.c 3831       /* FactPassword                                                          
                                                                                                                             
                                                 RS232CMD.C */
                      13701 ; rs232cmd.c 3832       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13702 ; rs232cmd.c 3833       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13703 ; rs232cmd.c 3834       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      13704 ; rs232cmd.c 3835       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13705 ; rs232cmd.c 3836       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13706 ; rs232cmd.c 3837       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13707 ; rs232cmd.c 3838       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13708 ; rs232cmd.c 3839       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13709 ; rs232cmd.c 3840       /************************************************************************
                            **/
                      13710 ; rs232cmd.c 3841       void FactPassword( void)
                      13711 ; rs232cmd.c 3842       {
                      13712         ALIGN   1
                      13714         PUBLIC  _FactPassword
003412                13715 _FactPassword:
                      13719 ; rs232cmd.c 3843               if ( CmdExecute && !SCPIError)
003412 964842rr       13721         MOV.B   ES,#SEG( _CmdExecute )
003416 9908rrrr       13722         MOV.W   R0,#SOF( _CmdExecute )
00341A 8200           13723         MOV.B   R0L,[R0]
00341C F365           13724         BEQ     _974
00341E 964842rr       13725         MOV.B   ES,#SEG( _SCPIError )
003422 9908rrrr       13726         MOV.W   R0,#SOF( _SCPIError )
003426 8A00           13727         MOV.W   R0,[R0]
003428 F25F           13728         BNE     _974
                      13729 ; rs232cmd.c 3844               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 223

ADDR   CODE            LINE SOURCELINE
                      13730 ; rs232cmd.c 3845                       if ( CmdRequest)
00342A 964842rr       13732         MOV.B   ES,#SEG( _CmdRequest )
00342E 9908rrrr       13733         MOV.W   R0,#SOF( _CmdRequest )
003432 8200           13734         MOV.B   R0L,[R0]
003434 F320           13735         BEQ     _963
                      13736 ; rs232cmd.c 3846                       {
                      13737 ; rs232cmd.c 3847                               if ( ParCnt)
003436 964842rr       13739         MOV.B   ES,#SEG( _ParCnt )
00343A 9908rrrr       13740         MOV.W   R0,#SOF( _ParCnt )
00343E 8200           13741         MOV.B   R0L,[R0]
003440 F306           13742         BEQ     _961
                      13743 ; rs232cmd.c 3848                                       SCPIError = ParNotAllowed;
003442 964842rr       13745         MOV.B   ES,#SEG( _SCPIError )
003446 9908rrrr       13746         MOV.W   R0,#SOF( _SCPIError )
00344A BA06           13747         MOV.W   [R0],#06H
00344C D680           13748         RET
00344C D680           13748         RET
00344E                13749 _961:
                      13750 ; rs232cmd.c 3849                               else
                      13751 ; rs232cmd.c 3850                               {
                      13752 ; rs232cmd.c 3851                                       if ( PasswordProtected)
00344E 964842rr       13754         MOV.B   ES,#SEG( _PasswordProtected )
003452 9908rrrr       13755         MOV.W   R0,#SOF( _PasswordProtected )
003456 8A00           13756         MOV.W   R0,[R0]
003458 F307           13757         BEQ     _962
                      13758 ; rs232cmd.c 3852                                               rs232puts( "ON\n");
00345A 9918rrrr       13760         MOV.W   R1,#SEG( _958 )
00345E 9908rrrr       13761         MOV.W   R0,#SOF( _958 )
                      13762         CALL    _rs232puts
003462 C4rrrrrr       +13762 ;       FCALL   _rs232puts
003466 D680           13763         RET
003466 D680           13763         RET
003468                13764 _962:
                      13765 ; rs232cmd.c 3853                                       else
                      13766 ; rs232cmd.c 3854                                               rs232puts( "OFF\n");
003468 9918rrrr       13768         MOV.W   R1,#SEG( _959 )
00346C 9908rrrr       13769         MOV.W   R0,#SOF( _959 )
                      13770         CALL    _rs232puts
003470 C4rrrrrr       +13770 ;       FCALL   _rs232puts
                      13771 ; rs232cmd.c 3855                               }
                      13772 ; rs232cmd.c 3856                       }
003474 D680           13774         RET
003474 D680           13774         RET
003476                13775 _963:
                      13776 ; rs232cmd.c 3857                       else
                      13777 ; rs232cmd.c 3858                       {
                      13778 ; rs232cmd.c 3859                               if ( ParCnt != 1)
003476 964842rr       13780         MOV.B   ES,#SEG( _ParCnt )
00347A 9908rrrr       13781         MOV.W   R0,#SOF( _ParCnt )
00347E 8200           13782         MOV.B   R0L,[R0]
003480 910401         13783         CMP.B   R0L,#01H
003483 F307           13784         BEQ     _964
                      13785 ; rs232cmd.c 3860                                       SCPIError = SyntaxErr;
003485 964842rr       13787         MOV.B   ES,#SEG( _SCPIError )
003489 9908rrrr       13788         MOV.W   R0,#SOF( _SCPIError )
00348D BA03           13789         MOV.W   [R0],#03H
00348F D680           13790         RET
00348F D68000         13790         RET
003492                13791 _964:
                      13792 ; rs232cmd.c 3861                               else
                      13793 ; rs232cmd.c 3862                               {
                      13794 ; rs232cmd.c 3863                                       if ( !strcmp( Cmd, "ON"))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 224

ADDR   CODE            LINE SOURCELINE
003492 9938rrrr       13796         MOV.W   R3,#SEG( _960 )
003496 9928rrrr       13797         MOV.W   R2,#SOF( _960 )
00349A 9918rrrr       13798         MOV.W   R1,#SEG( _Cmd )
00349E 9908rrrr       13799         MOV.W   R0,#SOF( _Cmd )
                      13800         CALL    _strcmp
0034A2 C4rrrrrr       +13800 ;       FCALL   _strcmp
0034A6 6900           13801         OR.W    R0,R0
0034A8 F207           13802         BNE     _965
                      13803 ; rs232cmd.c 3864                                               PasswordProtected = true;
0034AA 964842rr       13805         MOV.B   ES,#SEG( _PasswordProtected )
0034AE 9908rrrr       13806         MOV.W   R0,#SOF( _PasswordProtected )
0034B2 9A08FFFF       13807         MOV.W   [R0],#0FFFFH
0034B6 D680           13808         RET
0034B6 D680           13808         RET
0034B8                13809 _965:
                      13810 ; rs232cmd.c 3865                                       else
                      13811 ; rs232cmd.c 3866                                               if ( !Cstrcmp( Cmd, PasswordText)
                            )
0034B8 9938rrrr       13813         MOV.W   R3,#SEG( _PasswordText )
0034BC 9928rrrr       13814         MOV.W   R2,#SOF( _PasswordText )
0034C0 9918rrrr       13815         MOV.W   R1,#SEG( _Cmd )
0034C4 9908rrrr       13816         MOV.W   R0,#SOF( _Cmd )
                      13817         CALL    _Cstrcmp
0034C8 C4rrrrrr       +13817 ;       FCALL   _Cstrcmp
0034CC 6900           13818         OR.W    R0,R0
0034CE F206           13819         BNE     _966
                      13820 ; rs232cmd.c 3867                                                       PasswordProtected = false
                            ;
0034D0 964842rr       13822         MOV.B   ES,#SEG( _PasswordProtected )
0034D4 9908rrrr       13823         MOV.W   R0,#SOF( _PasswordProtected )
0034D8 BA00           13824         MOV.W   [R0],#00H
0034DA D680           13825         RET
0034DA D680           13825         RET
0034DC                13826 _966:
                      13827 ; rs232cmd.c 3868                                       else
                      13828 ; rs232cmd.c 3869                                               SCPIError = IllegalParValue;
0034DC 964842rr       13830         MOV.B   ES,#SEG( _SCPIError )
0034E0 9908rrrr       13831         MOV.W   R0,#SOF( _SCPIError )
0034E4 9A080023       13832         MOV.W   [R0],#023H
                      13833 ; rs232cmd.c 3870                               }
                      13834 ; rs232cmd.c 3871                       }
                      13835 ; rs232cmd.c 3872               }
0034E8                13837 _974:
                      13838 ; rs232cmd.c 3873       }
0034E8 D680           13840         RET
                      13842 ; rs232cmd.c 3874       
                      13843 ; rs232cmd.c 3875       /************************************************************************
                            **/
                      13844 ; rs232cmd.c 3876       /* FactReset                                                             
                                                                                                                             
                                                         RS232CMD.C */
                      13845 ; rs232cmd.c 3877       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13846 ; rs232cmd.c 3878       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                      13847 ; rs232cmd.c 3879       /* Revised:       000914                                                 
                                                                                                                             
                                                                                    */
                      13848 ; rs232cmd.c 3880       /*                                                                       
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 225

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                    */
                      13849 ; rs232cmd.c 3881       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13850 ; rs232cmd.c 3882       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13851 ; rs232cmd.c 3883       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13852 ; rs232cmd.c 3884       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13853 ; rs232cmd.c 3885       /************************************************************************
                            **/
                      13854 ; rs232cmd.c 3886       void FactReset( void)
                      13855 ; rs232cmd.c 3887       {
                      13856         ALIGN   1
                      13858         PUBLIC  _FactReset
0034EA                13859 _FactReset:
0034EA 0F10           13863         PUSH.W  R4
                      13867 ; rs232cmd.c 3888               int i;
                      13868 ; rs232cmd.c 3889       
                      13869 ; rs232cmd.c 3890               if ( !PasswordProtected)
0034EC 964842rr       13871         MOV.B   ES,#SEG( _PasswordProtected )
0034F0 9908rrrr       13872         MOV.W   R0,#SOF( _PasswordProtected )
0034F4 8A00           13873         MOV.W   R0,[R0]
0034F6 F256           13874         BNE     _983
                      13875 ; rs232cmd.c 3891               {
                      13876 ; rs232cmd.c 3892                       if ( CmdExecute && !SCPIError)
0034F8 964842rr       13878         MOV.B   ES,#SEG( _CmdExecute )
0034FC 9908rrrr       13879         MOV.W   R0,#SOF( _CmdExecute )
003500 8200           13880         MOV.B   R0L,[R0]
003502 F350           13881         BEQ     _983
003504 964842rr       13882         MOV.B   ES,#SEG( _SCPIError )
003508 9908rrrr       13883         MOV.W   R0,#SOF( _SCPIError )
00350C 8A00           13884         MOV.W   R0,[R0]
00350E F24A           13885         BNE     _983
                      13886 ; rs232cmd.c 3893                       {
                      13887 ; rs232cmd.c 3894                               if ( CmdRequest)
003510 964842rr       13889         MOV.B   ES,#SEG( _CmdRequest )
003514 9908rrrr       13890         MOV.W   R0,#SOF( _CmdRequest )
003518 8200           13891         MOV.B   R0L,[R0]
00351A F306           13892         BEQ     _976
                      13893 ; rs232cmd.c 3895                                               SCPIError = SyntaxErr;
00351C 964842rr       13895         MOV.B   ES,#SEG( _SCPIError )
003520 9908rrrr       13896         MOV.W   R0,#SOF( _SCPIError )
003524 BA03           13897         MOV.W   [R0],#03H
003526 FE3E           13898         BR      _983
003526 FE3E           13898         BR      _983
003528                13899 _976:
                      13900 ; rs232cmd.c 3896                               else
                      13901 ; rs232cmd.c 3897                               {
                      13902 ; rs232cmd.c 3898                                       if ( ParCnt)
003528 964842rr       13904         MOV.B   ES,#SEG( _ParCnt )
00352C 9908rrrr       13905         MOV.W   R0,#SOF( _ParCnt )
003530 8200           13906         MOV.B   R0L,[R0]
003532 F306           13907         BEQ     _977
                      13908 ; rs232cmd.c 3899                                               SCPIError = SyntaxErr;
003534 964842rr       13910         MOV.B   ES,#SEG( _SCPIError )
003538 9908rrrr       13911         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 226

ADDR   CODE            LINE SOURCELINE
00353C BA03           13912         MOV.W   [R0],#03H
00353E FE32           13913         BR      _983
00353E FE32           13913         BR      _983
003540                13914 _977:
                      13915 ; rs232cmd.c 3900                                       else
                      13916 ; rs232cmd.c 3901                                       {
                      13917 ; rs232cmd.c 3902                                               GenlockDefaults();               
                                            // 
                      13919         CALL    _GenlockDefaults
003540 C4rrrrrr       +13919 ;       FCALL   _GenlockDefaults
                      13920 ; rs232cmd.c 3903                                               BBDefaults();                    
                                                            // 
                      13922         CALL    _BBDefaults
003544 C4rrrrrr       +13922 ;       FCALL   _BBDefaults
                      13923 ; rs232cmd.c 3904                                               CBDefaults();                    
                                                            //
                      13925         CALL    _CBDefaults
003548 C4rrrrrr       +13925 ;       FCALL   _CBDefaults
                      13926 ; rs232cmd.c 3905                                               AudioDefaults();                 
                                                    //
                      13928         CALL    _AudioDefaults
00354C C4rrrrrr       +13928 ;       FCALL   _AudioDefaults
                      13929 ; rs232cmd.c 3906       
                      13930 ; rs232cmd.c 3907                                               GenlockInit();                   
                                                    // init the genlock setup
                      13932         CALL    _GenlockInit
003550 C4rrrrrr       +13932 ;       FCALL   _GenlockInit
                      13933 ; rs232cmd.c 3908                                               BBInit();                        
                                                                            // init the black burst setups
                      13935         CALL    _BBInit
003554 C4rrrrrr       +13935 ;       FCALL   _BBInit
                      13936 ; rs232cmd.c 3909                                               CBInit();                        
                                                                            // init the colorbar generator (PAL,EBU ColorBar)
                            
                      13938         CALL    _CBInit
003558 C4rrrrrr       +13938 ;       FCALL   _CBInit
                      13939 ; rs232cmd.c 3910                                               AudioInit();                     
                                                            // init the audio setup, (this includes an AudioTimer)           
                                            
                      13941         CALL    _AudioInit
00355C C4rrrrrr       +13941 ;       FCALL   _AudioInit
                      13942 ; rs232cmd.c 3911       
                      13943 ; rs232cmd.c 3912                                               GenlockUpdate();                 
                                                    // update the genlock setup.
                      13945         CALL    _GenlockUpdate
003560 C4rrrrrr       +13945 ;       FCALL   _GenlockUpdate
                      13946 ; rs232cmd.c 3913                                               CBUpdate();                      
                                                                    // update the colorbar generator (PAL,EBU ColorBar)
                      13948         CALL    _CBUpdate
003564 C4rrrrrr       +13948 ;       FCALL   _CBUpdate
                      13949 ; rs232cmd.c 3914                                               BBUpdate();                      
                                                                    // update the black burst setups
                      13951         CALL    _BBUpdate
003568 C4rrrrrr       +13951 ;       FCALL   _BBUpdate
                      13952 ; rs232cmd.c 3915                                               AudioUpdate();                   
                                                    // update the audio setup
                      13954         CALL    _AudioUpdate
00356C C4rrrrrr       +13954 ;       FCALL   _AudioUpdate
                      13955 ; rs232cmd.c 3916       
                      13956 ; rs232cmd.c 3917                                               for ( i = 1; i <= NoOfPresets; i+
                            +)
003570 B941           13958         MOV.W   R4,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 227

ADDR   CODE            LINE SOURCELINE
003572                13960 _978:
                      13961 ; rs232cmd.c 3918                                                       StorePreset( i);
003572 8904           13963         MOV.W   R0,R4
                      13966         CALL    _StorePreset
003574 C4rrrrrr       +13966 ;       FCALL   _StorePreset
003578 A941           13970         ADDS.W  R4,#01H
00357A 99440004       13973         CMP.W   R4,#04H
00357E FDF9           13974         BLE     _978
                      13975 ; rs232cmd.c 3919       
                      13976 ; rs232cmd.c 3920                                               Settings.ActivePreset = 0;
003580 964842rr       13978         MOV.B   ES,#SEG( _Settings )
003584 9908rrrr       13979         MOV.W   R0,#SOF( _Settings )
003588 BA00           13980         MOV.W   [R0],#00H
                      13981 ; rs232cmd.c 3921                                               NV_Store( &Settings, SettingsPtr,
                             sizeof( Settings));
00358A 9918rrrr       13983         MOV.W   R1,#SEG( _Settings )
00358E 9908rrrr       13984         MOV.W   R0,#SOF( _Settings )
003592 964842rr       13985         MOV.B   ES,#SEG( _SettingsPtr )
003596 9928rrrr       13986         MOV.W   R2,#SOF( _SettingsPtr )
00359A 8A22           13987         MOV.W   R2,[R2]
00359C 9938004A       13988         MOV.W   R3,#04AH
                      13989         CALL    _NV_Store
0035A0 C4rrrrrr       +13989 ;       FCALL   _NV_Store
                      13990 ; rs232cmd.c 3922                                       }
                      13991 ; rs232cmd.c 3923                               }
                      13992 ; rs232cmd.c 3924                       }
                      13993 ; rs232cmd.c 3925               }
0035A4                13995 _983:
                      13996 ; rs232cmd.c 3926       }
0035A4 2F10           13998         POP.W   R4
0035A6 D680           14000         RET
                      14003 ; rs232cmd.c 3927       
                      14004 ; rs232cmd.c 3928       /************************************************************************
                            **/
                      14005 ; rs232cmd.c 3929       /* FactV24Command                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      14006 ; rs232cmd.c 3930       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14007 ; rs232cmd.c 3931       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      14008 ; rs232cmd.c 3932       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      14009 ; rs232cmd.c 3933       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14010 ; rs232cmd.c 3934       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14011 ; rs232cmd.c 3935       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14012 ; rs232cmd.c 3936       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 228

ADDR   CODE            LINE SOURCELINE
                      14013 ; rs232cmd.c 3937       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14014 ; rs232cmd.c 3938       /************************************************************************
                            **/
                      14015 ; rs232cmd.c 3939       void FactV24Command( void)
                      14016 ; rs232cmd.c 3940       {
                      14017         ALIGN   1
                      14019         PUBLIC  _FactV24Command
0035A8                14020 _FactV24Command:
0035A8 0F30           14024         PUSH.W  R4, R5
0035AA 9972003E       14026         SUB.W   R7,#03EH
                      14032 ; rs232cmd.c 3941               UC address;
                      14033 ; rs232cmd.c 3942               char command[30], result[30];;
                      14034 ; rs232cmd.c 3943       
                      14035 ; rs232cmd.c 3944               if ( !PasswordProtected)
0035AE 964842rr       14037         MOV.B   ES,#SEG( _PasswordProtected )
0035B2 9908rrrr       14038         MOV.W   R0,#SOF( _PasswordProtected )
0035B6 8A00           14039         MOV.W   R0,[R0]
                      14040         BNE     _1000
0035B8 F302           +14040 ;       BEQ     _LG_918
0035BA D50084         +14040 ;       JMP.L   _1000
0035BE D5008400       +14040 ;       JMP.L   _1000
0035BE                +14040 _LG_918:
                      14041 ; rs232cmd.c 3945               {
                      14042 ; rs232cmd.c 3946                       if ( CmdExecute && !SCPIError)
0035BE 964842rr       14044         MOV.B   ES,#SEG( _CmdExecute )
0035C2 9908rrrr       14045         MOV.W   R0,#SOF( _CmdExecute )
0035C6 8200           14046         MOV.B   R0L,[R0]
0035C8 F37D           14047         BEQ     _1000
0035CA 964842rr       14048         MOV.B   ES,#SEG( _SCPIError )
0035CE 9908rrrr       14049         MOV.W   R0,#SOF( _SCPIError )
0035D2 8A00           14050         MOV.W   R0,[R0]
0035D4 F277           14051         BNE     _1000
                      14052 ; rs232cmd.c 3947                       {
                      14053 ; rs232cmd.c 3948                               if ( CmdRequest)
0035D6 964842rr       14055         MOV.B   ES,#SEG( _CmdRequest )
0035DA 9908rrrr       14056         MOV.W   R0,#SOF( _CmdRequest )
0035DE 8200           14057         MOV.B   R0L,[R0]
0035E0 F306           14058         BEQ     _988
                      14059 ; rs232cmd.c 3949                                       SCPIError = SyntaxErr;
0035E2 964842rr       14061         MOV.B   ES,#SEG( _SCPIError )
0035E6 9908rrrr       14062         MOV.W   R0,#SOF( _SCPIError )
0035EA BA03           14063         MOV.W   [R0],#03H
0035EC FE6B           14064         BR      _1000
0035EC FE6B           14064         BR      _1000
0035EE                14065 _988:
                      14066 ; rs232cmd.c 3950                               else
                      14067 ; rs232cmd.c 3951                               {
                      14068 ; rs232cmd.c 3952                                       if (( ParCnt != 2) || ( sscanf( Cmd, "%d,
                            %s", &address, command) != 2))
0035EE 964842rr       14070         MOV.B   ES,#SEG( _ParCnt )
0035F2 9908rrrr       14071         MOV.W   R0,#SOF( _ParCnt )
0035F6 8200           14072         MOV.B   R0L,[R0]
0035F8 910402         14073         CMP.B   R0L,#02H
0035FB F21A           14074         BNE     _989
0035FD 9918rrrr       14075         MOV.W   R1,#SEG( _Cmd )
003601 9908rrrr       14076         MOV.W   R0,#SOF( _Cmd )
003605 9168rr         14077         MOV.B   R3L,#SEG( __lc_bs )
003608 7177           14078         XOR.B   R3H,R3H
00360A 8927           14079         MOV.W   R2,R7
00360C 91A8rr         14080         MOV.B   R5L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 229

ADDR   CODE            LINE SOURCELINE
00360F 71BB           14081         XOR.B   R5H,R5H
003611 404702         14082         LEA     R4,R7+2
003614 0F30           14083         PUSH.W  R4, R5
003616 0F0C           14085         PUSH.W  R2, R3
003618 9938rrrr       14087         MOV.W   R3,#SEG( _985 )
00361C 9928rrrr       14088         MOV.W   R2,#SOF( _985 )
003620 0F0C           14089         PUSH.W  R2, R3
                      14091         CALL    _sscanf
003622 C4rrrrrr       +14091 ;       FCALL   _sscanf
003626 9970000C       14092         ADD.W   R7,#0CH
00362A 99040002       14094         CMP.W   R0,#02H
00362E F306           14095         BEQ     _990
00362E F306           14095         BEQ     _990
003630                14096 _989:
                      14097 ; rs232cmd.c 3953                                               SCPIError = SyntaxErr;
003630 964842rr       14099         MOV.B   ES,#SEG( _SCPIError )
003634 9908rrrr       14100         MOV.W   R0,#SOF( _SCPIError )
003638 BA03           14101         MOV.W   [R0],#03H
00363A FE44           14102         BR      _1000
00363A FE44           14102         BR      _1000
00363C                14103 _990:
                      14104 ; rs232cmd.c 3954                                       else
                      14105 ; rs232cmd.c 3955                                       {
                      14106 ; rs232cmd.c 3956                                               if ( command[2] == '?')
00363C 9474043F       14108         CMP.B   [R7+4],#03FH
003640 F227           14109         BNE     _992
                      14110 ; rs232cmd.c 3957                                               {
                      14111 ; rs232cmd.c 3958                                                       if ( sio0SndRequest( 12, 
                            address, result, "%s", command) == OK)
003642 9908000C       14113         MOV.W   R0,#0CH
003646 8227           14114         MOV.B   R1L,[R7]
003648 B130           14115         MOVS.B  R1H,#00H
00364A 91A8rr         14116         MOV.B   R5L,#SEG( __lc_bs )
00364D 71BB           14117         XOR.B   R5H,R5H
00364F 404720         14118         LEA     R4,R7+32
003652 9168rr         14119         MOV.B   R3L,#SEG( __lc_bs )
003655 7177           14120         XOR.B   R3H,R3H
003657 402702         14121         LEA     R2,R7+2
00365A 0F0C           14122         PUSH.W  R2, R3
00365C 9938rrrr       14124         MOV.W   R3,#SEG( _986 )
003660 9928rrrr       14125         MOV.W   R2,#SOF( _986 )
003664 0F0C           14126         PUSH.W  R2, R3
003666 8935           14128         MOV.W   R3,R5
003668 8924           14129         MOV.W   R2,R4
                      14130         CALL    _sio0SndRequest
00366A C4rrrrrr       +14130 ;       FCALL   _sio0SndRequest
00366E 99700008       14131         ADD.W   R7,#08H
003672 9904FFFF       14133         CMP.W   R0,#0FFFFH
003676 F205           14134         BNE     _991
                      14135 ; rs232cmd.c 3959                                                               rs232puts( result
                            );
003678 8915           14137         MOV.W   R1,R5
00367A 8904           14138         MOV.W   R0,R4
                      14139         CALL    _rs232puts
00367C C4rrrrrr       +14139 ;       FCALL   _rs232puts
003680 FE21           14140         BR      _1000
003680 FE21           14140         BR      _1000
003682                14141 _991:
                      14142 ; rs232cmd.c 3960                                                       else
                      14143 ; rs232cmd.c 3961                                                               SCPIError = ExecE
                            rr;
003682 964842rr       14145         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 230

ADDR   CODE            LINE SOURCELINE
003686 9908rrrr       14146         MOV.W   R0,#SOF( _SCPIError )
00368A 9A08001D       14147         MOV.W   [R0],#01DH
                      14148 ; rs232cmd.c 3962                                               }
00368E FE1A           14150         BR      _1000
00368E FE1A           14150         BR      _1000
003690                14151 _992:
                      14152 ; rs232cmd.c 3963                                               else
                      14153 ; rs232cmd.c 3964                                               {
                      14154 ; rs232cmd.c 3965                                                       if ( sio0SndCommand( 20, 
                            address, "%s;", command) == FAIL)
003690 99080014       14156         MOV.W   R0,#014H
003694 8227           14157         MOV.B   R1L,[R7]
003696 B130           14158         MOVS.B  R1H,#00H
003698 9168rr         14159         MOV.B   R3L,#SEG( __lc_bs )
00369B 7177           14160         XOR.B   R3H,R3H
00369D 402702         14161         LEA     R2,R7+2
0036A0 0F0C           14162         PUSH.W  R2, R3
0036A2 9938rrrr       14164         MOV.W   R3,#SEG( _987 )
0036A6 9928rrrr       14165         MOV.W   R2,#SOF( _987 )
0036AA 0F0C           14166         PUSH.W  R2, R3
                      14168         CALL    _sio0SndCommand
0036AC C4rrrrrr       +14168 ;       FCALL   _sio0SndCommand
0036B0 99700008       14169         ADD.W   R7,#08H
0036B4 6900           14171         OR.W    R0,R0
0036B6 F206           14172         BNE     _1000
                      14173 ; rs232cmd.c 3966                                                               SCPIError = ExecE
                            rr;
0036B8 964842rr       14175         MOV.B   ES,#SEG( _SCPIError )
0036BC 9908rrrr       14176         MOV.W   R0,#SOF( _SCPIError )
0036C0 9A08001D       14177         MOV.W   [R0],#01DH
                      14178 ; rs232cmd.c 3967                                               }
                      14179 ; rs232cmd.c 3968                                       }
                      14180 ; rs232cmd.c 3969                               }
                      14181 ; rs232cmd.c 3970                       }
                      14182 ; rs232cmd.c 3971               }
0036C4                14184 _1000:
                      14185 ; rs232cmd.c 3972       }
0036C4 9970003E       14187         ADD.W   R7,#03EH
0036C8 2F30           14189         POP.W   R4, R5
0036CA D680           14191         RET
                      14193 ; rs232cmd.c 3973       
                      14194 ; rs232cmd.c 3974       /************************************************************************
                            **/
                      14195 ; rs232cmd.c 3975       /* FactV24Transparent                                                    
                                                                                                                             
                                RS232CMD.C  */
                      14196 ; rs232cmd.c 3976       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14197 ; rs232cmd.c 3977       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      14198 ; rs232cmd.c 3978       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      14199 ; rs232cmd.c 3979       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 231

ADDR   CODE            LINE SOURCELINE
                      14200 ; rs232cmd.c 3980       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14201 ; rs232cmd.c 3981       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14202 ; rs232cmd.c 3982       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14203 ; rs232cmd.c 3983       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14204 ; rs232cmd.c 3984       /************************************************************************
                            **/
                      14205 ; rs232cmd.c 3985       void FactV24Transparent( void)
                      14206 ; rs232cmd.c 3986       {
                      14207         ALIGN   1
                      14209         PUBLIC  _FactV24Transparent
0036CC                14210 _FactV24Transparent:
                      14216 ; rs232cmd.c 3987               int unit;
                      14217 ; rs232cmd.c 3988       
                      14218 ; rs232cmd.c 3989               if ( !PasswordProtected)
0036CC 964842rr       14220         MOV.B   ES,#SEG( _PasswordProtected )
0036D0 9908rrrr       14221         MOV.W   R0,#SOF( _PasswordProtected )
0036D4 8A00           14222         MOV.W   R0,[R0]
0036D6 F22E           14223         BNE     _1011
                      14224 ; rs232cmd.c 3990               {
                      14225 ; rs232cmd.c 3991                       if ( CmdExecute && !SCPIError)
0036D8 964842rr       14227         MOV.B   ES,#SEG( _CmdExecute )
0036DC 9908rrrr       14228         MOV.W   R0,#SOF( _CmdExecute )
0036E0 8200           14229         MOV.B   R0L,[R0]
0036E2 F328           14230         BEQ     _1011
0036E4 964842rr       14231         MOV.B   ES,#SEG( _SCPIError )
0036E8 9908rrrr       14232         MOV.W   R0,#SOF( _SCPIError )
0036EC 8A00           14233         MOV.W   R0,[R0]
0036EE F222           14234         BNE     _1011
                      14235 ; rs232cmd.c 3992                       {
                      14236 ; rs232cmd.c 3993                               if ( CmdRequest)
0036F0 964842rr       14238         MOV.B   ES,#SEG( _CmdRequest )
0036F4 9908rrrr       14239         MOV.W   R0,#SOF( _CmdRequest )
0036F8 8200           14240         MOV.B   R0L,[R0]
0036FA F306           14241         BEQ     _1005
                      14242 ; rs232cmd.c 3994                                       SCPIError = SyntaxErr;
0036FC 964842rr       14244         MOV.B   ES,#SEG( _SCPIError )
003700 9908rrrr       14245         MOV.W   R0,#SOF( _SCPIError )
003704 BA03           14246         MOV.W   [R0],#03H
003706 D680           14247         RET
003706 D680           14247         RET
003708                14248 _1005:
                      14249 ; rs232cmd.c 3995                               else
                      14250 ; rs232cmd.c 3996                               {
                      14251 ; rs232cmd.c 3997                                       unit = FindParameter( Cmd, UnitPar);
003708 9918rrrr       14253         MOV.W   R1,#SEG( _Cmd )
00370C 9908rrrr       14254         MOV.W   R0,#SOF( _Cmd )
003710 9938rrrr       14255         MOV.W   R3,#SEG( _UnitPar )
003714 9928rrrr       14256         MOV.W   R2,#SOF( _UnitPar )
003718 C51470         14257         CALL    _FindParameter
                      14259 ; rs232cmd.c 3998               
                      14260 ; rs232cmd.c 3999                                       if ( unit > -1)
00371B 9904FFFF       14262         CMP.W   R0,#0FFFFH
00371F FD04           14263         BLE     _1006
                      14264 ; rs232cmd.c 4000                                               BBSPGCommunication( unit);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 232

ADDR   CODE            LINE SOURCELINE
                      14266         CALL    _BBSPGCommunication
003721 C4rrrrrr       +14266 ;       FCALL   _BBSPGCommunication
003725 D680           14268         RET
003725 D68000         14268         RET
003728                14269 _1006:
                      14270 ; rs232cmd.c 4001                                       else
                      14271 ; rs232cmd.c 4002                                               SCPIError = DataOutOfRange;
003728 964842rr       14273         MOV.B   ES,#SEG( _SCPIError )
00372C 9908rrrr       14274         MOV.W   R0,#SOF( _SCPIError )
003730 9A080021       14275         MOV.W   [R0],#021H
                      14276 ; rs232cmd.c 4003                               }
                      14277 ; rs232cmd.c 4004                       }
                      14278 ; rs232cmd.c 4005               }
003734                14280 _1011:
                      14281 ; rs232cmd.c 4006       }
003734 D680           14283         RET
                      14285 ; rs232cmd.c 4007       
                      14286 ; rs232cmd.c 4008       /************************************************************************
                            **/
                      14287 ; rs232cmd.c 4009       /* FactChecksumCode                                                      
                                                                                                                             
                                         RS232CMD.C */
                      14288 ; rs232cmd.c 4010       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14289 ; rs232cmd.c 4011       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14290 ; rs232cmd.c 4012       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14291 ; rs232cmd.c 4013       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14292 ; rs232cmd.c 4014       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14293 ; rs232cmd.c 4015       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14294 ; rs232cmd.c 4016       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14295 ; rs232cmd.c 4017       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14296 ; rs232cmd.c 4018       /************************************************************************
                            **/
                      14297 ; rs232cmd.c 4019       void FactChecksumCode( void)
                      14298 ; rs232cmd.c 4020       {
                      14299         ALIGN   1
                      14301         PUBLIC  _FactChecksumCode
003736                14302 _FactChecksumCode:
003736 0F30           14306         PUSH.W  R4, R5
003738 9972001E       14308         SUB.W   R7,#01EH
                      14311 ; rs232cmd.c 4021               char buffer[30];
                      14312 ; rs232cmd.c 4022       
                      14313 ; rs232cmd.c 4023               if ( CmdExecute && !SCPIError)
00373C 964842rr       14315         MOV.B   ES,#SEG( _CmdExecute )
003740 9908rrrr       14316         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 233

ADDR   CODE            LINE SOURCELINE
003744 8200           14317         MOV.B   R0L,[R0]
003746 F338           14318         BEQ     _1019
003748 964842rr       14319         MOV.B   ES,#SEG( _SCPIError )
00374C 9908rrrr       14320         MOV.W   R0,#SOF( _SCPIError )
003750 8A00           14321         MOV.W   R0,[R0]
003752 F232           14322         BNE     _1019
                      14323 ; rs232cmd.c 4024               {
                      14324 ; rs232cmd.c 4025                       if ( CmdRequest)
003754 964842rr       14326         MOV.B   ES,#SEG( _CmdRequest )
003758 9908rrrr       14327         MOV.W   R0,#SOF( _CmdRequest )
00375C 8200           14328         MOV.B   R0L,[R0]
00375E F327           14329         BEQ     _1015
                      14330 ; rs232cmd.c 4026                       {
                      14331 ; rs232cmd.c 4027                               if ( ParCnt)
003760 964842rr       14333         MOV.B   ES,#SEG( _ParCnt )
003764 9908rrrr       14334         MOV.W   R0,#SOF( _ParCnt )
003768 8200           14335         MOV.B   R0L,[R0]
00376A F306           14336         BEQ     _1014
                      14337 ; rs232cmd.c 4028                                       SCPIError = SyntaxErr;
00376C 964842rr       14339         MOV.B   ES,#SEG( _SCPIError )
003770 9908rrrr       14340         MOV.W   R0,#SOF( _SCPIError )
003774 BA03           14341         MOV.W   [R0],#03H
003776 FE20           14342         BR      _1019
003776 FE20           14342         BR      _1019
003778                14343 _1014:
                      14344 ; rs232cmd.c 4029                               else
                      14345 ; rs232cmd.c 4030                               {               
                      14346 ; rs232cmd.c 4031                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPROMCode, StartOfPROMCode+SizeOfPROMCode-1));
003778 B910           14348         MOV.W   R1,#00H
00377A B900           14349         MOV.W   R0,#00H
00377C B933           14350         MOV.W   R3,#03H
00377E 9928FFFF       14351         MOV.W   R2,#0FFFFH
                      14352         CALL    _ROMChecksum
003782 C4rrrrrr       +14352 ;       FCALL   _ROMChecksum
003786 91A8rr         14353         MOV.B   R5L,#SEG( __lc_bs )
003789 71BB           14354         XOR.B   R5H,R5H
00378B 8947           14355         MOV.W   R4,R7
00378D 0F01           14356         PUSH.W  R0
00378F 9918rrrr       14358         MOV.W   R1,#SEG( _1013 )
003793 9908rrrr       14359         MOV.W   R0,#SOF( _1013 )
003797 0F03           14360         PUSH.W  R0, R1
003799 8915           14362         MOV.W   R1,R5
00379B 8904           14363         MOV.W   R0,R4
                      14364         CALL    _sprintf
00379D C4rrrrrr       +14364 ;       FCALL   _sprintf
0037A1 A976           14365         ADDS.W  R7,#06H
                      14367 ; rs232cmd.c 4032                                       rs232puts( buffer);
0037A3 8915           14369         MOV.W   R1,R5
0037A5 8904           14370         MOV.W   R0,R4
                      14371         CALL    _rs232puts
0037A7 C4rrrrrr       +14371 ;       FCALL   _rs232puts
                      14372 ; rs232cmd.c 4033                               }
                      14373 ; rs232cmd.c 4034                       }
0037AB FE06           14375         BR      _1019
0037AB FE0600         14375         BR      _1019
0037AE                14376 _1015:
                      14377 ; rs232cmd.c 4035                       else
                      14378 ; rs232cmd.c 4036                               SCPIError = SyntaxErr;
0037AE 964842rr       14380         MOV.B   ES,#SEG( _SCPIError )
0037B2 9908rrrr       14381         MOV.W   R0,#SOF( _SCPIError )
0037B6 BA03           14382         MOV.W   [R0],#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 234

ADDR   CODE            LINE SOURCELINE
                      14383 ; rs232cmd.c 4037               }
0037B8                14385 _1019:
                      14386 ; rs232cmd.c 4038       }
0037B8 9970001E       14388         ADD.W   R7,#01EH
0037BC 2F30           14390         POP.W   R4, R5
0037BE D680           14392         RET
                      14394 ; rs232cmd.c 4039       
                      14395 ; rs232cmd.c 4040       /************************************************************************
                            **/
                      14396 ; rs232cmd.c 4041       /* FactChecksumPLD                                                       
                                                                                                                             
                                         RS232CMD.C */
                      14397 ; rs232cmd.c 4042       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14398 ; rs232cmd.c 4043       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14399 ; rs232cmd.c 4044       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14400 ; rs232cmd.c 4045       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14401 ; rs232cmd.c 4046       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14402 ; rs232cmd.c 4047       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14403 ; rs232cmd.c 4048       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14404 ; rs232cmd.c 4049       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14405 ; rs232cmd.c 4050       /************************************************************************
                            **/
                      14406 ; rs232cmd.c 4051       void FactChecksumPLD( void)
                      14407 ; rs232cmd.c 4052       {
                      14408         ALIGN   1
                      14410         PUBLIC  _FactChecksumPLD
0037C0                14411 _FactChecksumPLD:
0037C0 0F30           14415         PUSH.W  R4, R5
0037C2 9972001E       14417         SUB.W   R7,#01EH
                      14420 ; rs232cmd.c 4053               char buffer[30];
                      14421 ; rs232cmd.c 4054       
                      14422 ; rs232cmd.c 4055               if ( CmdExecute && !SCPIError)
0037C6 964842rr       14424         MOV.B   ES,#SEG( _CmdExecute )
0037CA 9908rrrr       14425         MOV.W   R0,#SOF( _CmdExecute )
0037CE 8200           14426         MOV.B   R0L,[R0]
0037D0 F338           14427         BEQ     _1025
0037D2 964842rr       14428         MOV.B   ES,#SEG( _SCPIError )
0037D6 9908rrrr       14429         MOV.W   R0,#SOF( _SCPIError )
0037DA 8A00           14430         MOV.W   R0,[R0]
0037DC F232           14431         BNE     _1025
                      14432 ; rs232cmd.c 4056               {
                      14433 ; rs232cmd.c 4057                       if ( CmdRequest)
0037DE 964842rr       14435         MOV.B   ES,#SEG( _CmdRequest )
0037E2 9908rrrr       14436         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 235

ADDR   CODE            LINE SOURCELINE
0037E6 8200           14437         MOV.B   R0L,[R0]
0037E8 F327           14438         BEQ     _1021
                      14439 ; rs232cmd.c 4058                       {
                      14440 ; rs232cmd.c 4059                               if ( ParCnt)
0037EA 964842rr       14442         MOV.B   ES,#SEG( _ParCnt )
0037EE 9908rrrr       14443         MOV.W   R0,#SOF( _ParCnt )
0037F2 8200           14444         MOV.B   R0L,[R0]
0037F4 F306           14445         BEQ     _1020
                      14446 ; rs232cmd.c 4060                                       SCPIError = SyntaxErr;
0037F6 964842rr       14448         MOV.B   ES,#SEG( _SCPIError )
0037FA 9908rrrr       14449         MOV.W   R0,#SOF( _SCPIError )
0037FE BA03           14450         MOV.W   [R0],#03H
003800 FE20           14451         BR      _1025
003800 FE20           14451         BR      _1025
003802                14452 _1020:
                      14453 ; rs232cmd.c 4061                               else
                      14454 ; rs232cmd.c 4062                               {               
                      14455 ; rs232cmd.c 4063                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPLDCode, StartOfPLDCode+SizeOfPLDCode-1));
003802 B914           14457         MOV.W   R1,#04H
003804 B900           14458         MOV.W   R0,#00H
003806 B934           14459         MOV.W   R3,#04H
003808 99289FFF       14460         MOV.W   R2,#09FFFH
                      14461         CALL    _ROMChecksum
00380C C4rrrrrr       +14461 ;       FCALL   _ROMChecksum
003810 91A8rr         14462         MOV.B   R5L,#SEG( __lc_bs )
003813 71BB           14463         XOR.B   R5H,R5H
003815 8947           14464         MOV.W   R4,R7
003817 0F01           14465         PUSH.W  R0
003819 9918rrrr       14467         MOV.W   R1,#SEG( _1013 )
00381D 9908rrrr       14468         MOV.W   R0,#SOF( _1013 )
003821 0F03           14469         PUSH.W  R0, R1
003823 8915           14471         MOV.W   R1,R5
003825 8904           14472         MOV.W   R0,R4
                      14473         CALL    _sprintf
003827 C4rrrrrr       +14473 ;       FCALL   _sprintf
00382B A976           14474         ADDS.W  R7,#06H
                      14476 ; rs232cmd.c 4064                                       rs232puts( buffer);
00382D 8915           14478         MOV.W   R1,R5
00382F 8904           14479         MOV.W   R0,R4
                      14480         CALL    _rs232puts
003831 C4rrrrrr       +14480 ;       FCALL   _rs232puts
                      14481 ; rs232cmd.c 4065                               }
                      14482 ; rs232cmd.c 4066                       }
003835 FE06           14484         BR      _1025
003835 FE0600         14484         BR      _1025
003838                14485 _1021:
                      14486 ; rs232cmd.c 4067                       else
                      14487 ; rs232cmd.c 4068                               SCPIError = SyntaxErr;
003838 964842rr       14489         MOV.B   ES,#SEG( _SCPIError )
00383C 9908rrrr       14490         MOV.W   R0,#SOF( _SCPIError )
003840 BA03           14491         MOV.W   [R0],#03H
                      14492 ; rs232cmd.c 4069               }
003842                14494 _1025:
                      14495 ; rs232cmd.c 4070       }
003842 9970001E       14497         ADD.W   R7,#01EH
003846 2F30           14499         POP.W   R4, R5
003848 D680           14501         RET
                      14503 ; rs232cmd.c 4071       
                      14504 ; rs232cmd.c 4072       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 236

ADDR   CODE            LINE SOURCELINE
                      14505 ; rs232cmd.c 4073       /* FactChecksumEmbAudio                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      14506 ; rs232cmd.c 4074       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14507 ; rs232cmd.c 4075       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14508 ; rs232cmd.c 4076       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14509 ; rs232cmd.c 4077       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14510 ; rs232cmd.c 4078       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14511 ; rs232cmd.c 4079       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14512 ; rs232cmd.c 4080       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14513 ; rs232cmd.c 4081       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14514 ; rs232cmd.c 4082       /************************************************************************
                            **/
                      14515 ; rs232cmd.c 4083       void FactChecksumEmbAudio( void)
                      14516 ; rs232cmd.c 4084       {
                      14517         ALIGN   1
                      14519         PUBLIC  _FactChecksumEmbAudio
00384A                14520 _FactChecksumEmbAudio:
00384A 0F30           14524         PUSH.W  R4, R5
00384C 9972001E       14526         SUB.W   R7,#01EH
                      14529 ; rs232cmd.c 4085               char buffer[30];
                      14530 ; rs232cmd.c 4086       
                      14531 ; rs232cmd.c 4087               if ( CmdExecute && !SCPIError)
003850 964842rr       14533         MOV.B   ES,#SEG( _CmdExecute )
003854 9908rrrr       14534         MOV.W   R0,#SOF( _CmdExecute )
003858 8200           14535         MOV.B   R0L,[R0]
00385A F339           14536         BEQ     _1031
00385C 964842rr       14537         MOV.B   ES,#SEG( _SCPIError )
003860 9908rrrr       14538         MOV.W   R0,#SOF( _SCPIError )
003864 8A00           14539         MOV.W   R0,[R0]
003866 F233           14540         BNE     _1031
                      14541 ; rs232cmd.c 4088               {
                      14542 ; rs232cmd.c 4089                       if ( CmdRequest)
003868 964842rr       14544         MOV.B   ES,#SEG( _CmdRequest )
00386C 9908rrrr       14545         MOV.W   R0,#SOF( _CmdRequest )
003870 8200           14546         MOV.B   R0L,[R0]
003872 F328           14547         BEQ     _1027
                      14548 ; rs232cmd.c 4090                       {
                      14549 ; rs232cmd.c 4091                               if ( ParCnt)
003874 964842rr       14551         MOV.B   ES,#SEG( _ParCnt )
003878 9908rrrr       14552         MOV.W   R0,#SOF( _ParCnt )
00387C 8200           14553         MOV.B   R0L,[R0]
00387E F306           14554         BEQ     _1026
                      14555 ; rs232cmd.c 4092                                       SCPIError = SyntaxErr;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 237

ADDR   CODE            LINE SOURCELINE
003880 964842rr       14557         MOV.B   ES,#SEG( _SCPIError )
003884 9908rrrr       14558         MOV.W   R0,#SOF( _SCPIError )
003888 BA03           14559         MOV.W   [R0],#03H
00388A FE21           14560         BR      _1031
00388A FE21           14560         BR      _1031
00388C                14561 _1026:
                      14562 ; rs232cmd.c 4093                               else
                      14563 ; rs232cmd.c 4094                               {               
                      14564 ; rs232cmd.c 4095                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfEmbAudioCode, StartOfEmbAudioCode+SizeOfEmbAudioCode-1));
00388C B914           14566         MOV.W   R1,#04H
00388E 9908A000       14567         MOV.W   R0,#0A000H
003892 B934           14568         MOV.W   R3,#04H
003894 9928C3FF       14569         MOV.W   R2,#0C3FFH
                      14570         CALL    _ROMChecksum
003898 C4rrrrrr       +14570 ;       FCALL   _ROMChecksum
00389C 91A8rr         14571         MOV.B   R5L,#SEG( __lc_bs )
00389F 71BB           14572         XOR.B   R5H,R5H
0038A1 8947           14573         MOV.W   R4,R7
0038A3 0F01           14574         PUSH.W  R0
0038A5 9918rrrr       14576         MOV.W   R1,#SEG( _1013 )
0038A9 9908rrrr       14577         MOV.W   R0,#SOF( _1013 )
0038AD 0F03           14578         PUSH.W  R0, R1
0038AF 8915           14580         MOV.W   R1,R5
0038B1 8904           14581         MOV.W   R0,R4
                      14582         CALL    _sprintf
0038B3 C4rrrrrr       +14582 ;       FCALL   _sprintf
0038B7 A976           14583         ADDS.W  R7,#06H
                      14585 ; rs232cmd.c 4096                                       rs232puts( buffer);
0038B9 8915           14587         MOV.W   R1,R5
0038BB 8904           14588         MOV.W   R0,R4
                      14589         CALL    _rs232puts
0038BD C4rrrrrr       +14589 ;       FCALL   _rs232puts
                      14590 ; rs232cmd.c 4097                               }
                      14591 ; rs232cmd.c 4098                       }
0038C1 FE06           14593         BR      _1031
0038C1 FE0600         14593         BR      _1031
0038C4                14594 _1027:
                      14595 ; rs232cmd.c 4099                       else
                      14596 ; rs232cmd.c 4100                               SCPIError = SyntaxErr;
0038C4 964842rr       14598         MOV.B   ES,#SEG( _SCPIError )
0038C8 9908rrrr       14599         MOV.W   R0,#SOF( _SCPIError )
0038CC BA03           14600         MOV.W   [R0],#03H
                      14601 ; rs232cmd.c 4101               }
0038CE                14603 _1031:
                      14604 ; rs232cmd.c 4102       }
0038CE 9970001E       14606         ADD.W   R7,#01EH
0038D2 2F30           14608         POP.W   R4, R5
0038D4 D680           14610         RET
                      14612 ; rs232cmd.c 4103       
                      14613 ; rs232cmd.c 4104       /************************************************************************
                            **/
                      14614 ; rs232cmd.c 4105       /* FactChecksumPattern                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      14615 ; rs232cmd.c 4106       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14616 ; rs232cmd.c 4107       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 238

ADDR   CODE            LINE SOURCELINE
                      14617 ; rs232cmd.c 4108       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14618 ; rs232cmd.c 4109       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14619 ; rs232cmd.c 4110       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14620 ; rs232cmd.c 4111       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14621 ; rs232cmd.c 4112       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14622 ; rs232cmd.c 4113       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14623 ; rs232cmd.c 4114       /************************************************************************
                            **/
                      14624 ; rs232cmd.c 4115       void FactChecksumPattern( void)
                      14625 ; rs232cmd.c 4116       {
                      14626         ALIGN   1
                      14628         PUBLIC  _FactChecksumPattern
0038D6                14629 _FactChecksumPattern:
0038D6 0F30           14633         PUSH.W  R4, R5
0038D8 9972001E       14635         SUB.W   R7,#01EH
                      14638 ; rs232cmd.c 4117               char buffer[30];
                      14639 ; rs232cmd.c 4118       
                      14640 ; rs232cmd.c 4119               if ( CmdExecute && !SCPIError)
0038DC 964842rr       14642         MOV.B   ES,#SEG( _CmdExecute )
0038E0 9908rrrr       14643         MOV.W   R0,#SOF( _CmdExecute )
0038E4 8200           14644         MOV.B   R0L,[R0]
0038E6 F338           14645         BEQ     _1037
0038E8 964842rr       14646         MOV.B   ES,#SEG( _SCPIError )
0038EC 9908rrrr       14647         MOV.W   R0,#SOF( _SCPIError )
0038F0 8A00           14648         MOV.W   R0,[R0]
0038F2 F232           14649         BNE     _1037
                      14650 ; rs232cmd.c 4120               {
                      14651 ; rs232cmd.c 4121                       if ( CmdRequest)
0038F4 964842rr       14653         MOV.B   ES,#SEG( _CmdRequest )
0038F8 9908rrrr       14654         MOV.W   R0,#SOF( _CmdRequest )
0038FC 8200           14655         MOV.B   R0L,[R0]
0038FE F327           14656         BEQ     _1033
                      14657 ; rs232cmd.c 4122                       {
                      14658 ; rs232cmd.c 4123                               if ( ParCnt)
003900 964842rr       14660         MOV.B   ES,#SEG( _ParCnt )
003904 9908rrrr       14661         MOV.W   R0,#SOF( _ParCnt )
003908 8200           14662         MOV.B   R0L,[R0]
00390A F306           14663         BEQ     _1032
                      14664 ; rs232cmd.c 4124                                       SCPIError = SyntaxErr;
00390C 964842rr       14666         MOV.B   ES,#SEG( _SCPIError )
003910 9908rrrr       14667         MOV.W   R0,#SOF( _SCPIError )
003914 BA03           14668         MOV.W   [R0],#03H
003916 FE20           14669         BR      _1037
003916 FE20           14669         BR      _1037
003918                14670 _1032:
                      14671 ; rs232cmd.c 4125                               else
                      14672 ; rs232cmd.c 4126                               {               
                      14673 ; rs232cmd.c 4127                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfCBVideoCode, StartOfCBVideoCode+SizeOfCBVideoCode-1));
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 239

ADDR   CODE            LINE SOURCELINE
003918 B915           14675         MOV.W   R1,#05H
00391A B900           14676         MOV.W   R0,#00H
00391C B937           14677         MOV.W   R3,#07H
00391E 9928FFFF       14678         MOV.W   R2,#0FFFFH
                      14679         CALL    _ROMChecksum
003922 C4rrrrrr       +14679 ;       FCALL   _ROMChecksum
003926 91A8rr         14680         MOV.B   R5L,#SEG( __lc_bs )
003929 71BB           14681         XOR.B   R5H,R5H
00392B 8947           14682         MOV.W   R4,R7
00392D 0F01           14683         PUSH.W  R0
00392F 9918rrrr       14685         MOV.W   R1,#SEG( _1013 )
003933 9908rrrr       14686         MOV.W   R0,#SOF( _1013 )
003937 0F03           14687         PUSH.W  R0, R1
003939 8915           14689         MOV.W   R1,R5
00393B 8904           14690         MOV.W   R0,R4
                      14691         CALL    _sprintf
00393D C4rrrrrr       +14691 ;       FCALL   _sprintf
003941 A976           14692         ADDS.W  R7,#06H
                      14694 ; rs232cmd.c 4128                                       rs232puts( buffer);
003943 8915           14696         MOV.W   R1,R5
003945 8904           14697         MOV.W   R0,R4
                      14698         CALL    _rs232puts
003947 C4rrrrrr       +14698 ;       FCALL   _rs232puts
                      14699 ; rs232cmd.c 4129                               }
                      14700 ; rs232cmd.c 4130                       }
00394B FE06           14702         BR      _1037
00394B FE0600         14702         BR      _1037
00394E                14703 _1033:
                      14704 ; rs232cmd.c 4131                       else
                      14705 ; rs232cmd.c 4132                               SCPIError = SyntaxErr;
00394E 964842rr       14707         MOV.B   ES,#SEG( _SCPIError )
003952 9908rrrr       14708         MOV.W   R0,#SOF( _SCPIError )
003956 BA03           14709         MOV.W   [R0],#03H
                      14710 ; rs232cmd.c 4133               }
003958                14712 _1037:
                      14713 ; rs232cmd.c 4134       }
003958 9970001E       14715         ADD.W   R7,#01EH
00395C 2F30           14717         POP.W   R4, R5
00395E D680           14719         RET
                      14721 ; rs232cmd.c 4135       
                      14722 ; rs232cmd.c 4136       /************************************************************************
                            **/
                      14723 ; rs232cmd.c 4137       /* FactChecksumRange                                                     
                                                                                                                             
                                RS232CMD.C  */
                      14724 ; rs232cmd.c 4138       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14725 ; rs232cmd.c 4139       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14726 ; rs232cmd.c 4140       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14727 ; rs232cmd.c 4141       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14728 ; rs232cmd.c 4142       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 240

ADDR   CODE            LINE SOURCELINE
                      14729 ; rs232cmd.c 4143       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14730 ; rs232cmd.c 4144       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14731 ; rs232cmd.c 4145       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14732 ; rs232cmd.c 4146       /************************************************************************
                            **/
                      14733 ; rs232cmd.c 4147       void FactChecksumRange( void)
                      14734 ; rs232cmd.c 4148       {
                      14735         ALIGN   1
                      14737         PUBLIC  _FactChecksumRange
003960                14738 _FactChecksumRange:
003960 0F30           14742         PUSH.W  R4, R5
003962 99720026       14744         SUB.W   R7,#026H
                      14749 ; rs232cmd.c 4149               UL StartAddr, EndAddr;
                      14750 ; rs232cmd.c 4150       
                      14751 ; rs232cmd.c 4151               char buffer[30];
                      14752 ; rs232cmd.c 4152       
                      14753 ; rs232cmd.c 4153               if ( CmdExecute && !SCPIError)
003966 964842rr       14755         MOV.B   ES,#SEG( _CmdExecute )
00396A 9908rrrr       14756         MOV.W   R0,#SOF( _CmdExecute )
00396E 8200           14757         MOV.B   R0L,[R0]
003970 F354           14758         BEQ     _1045
003972 964842rr       14759         MOV.B   ES,#SEG( _SCPIError )
003976 9908rrrr       14760         MOV.W   R0,#SOF( _SCPIError )
00397A 8A00           14761         MOV.W   R0,[R0]
00397C F24E           14762         BNE     _1045
                      14763 ; rs232cmd.c 4154               {
                      14764 ; rs232cmd.c 4155                       if ( CmdRequest)
00397E 964842rr       14766         MOV.B   ES,#SEG( _CmdRequest )
003982 9908rrrr       14767         MOV.W   R0,#SOF( _CmdRequest )
003986 8200           14768         MOV.B   R0L,[R0]
003988 F343           14769         BEQ     _1041
                      14770 ; rs232cmd.c 4156                       {
                      14771 ; rs232cmd.c 4157                               if (( ParCnt != 2) || (( sscanf( Cmd, "%lu,%lu", 
                            &StartAddr, &EndAddr)) != 2))
00398A 964842rr       14773         MOV.B   ES,#SEG( _ParCnt )
00398E 9908rrrr       14774         MOV.W   R0,#SOF( _ParCnt )
003992 8200           14775         MOV.B   R0L,[R0]
003994 910402         14776         CMP.B   R0L,#02H
003997 F21A           14777         BNE     _1039
003999 9918rrrr       14778         MOV.W   R1,#SEG( _Cmd )
00399D 9908rrrr       14779         MOV.W   R0,#SOF( _Cmd )
0039A1 9168rr         14780         MOV.B   R3L,#SEG( __lc_bs )
0039A4 7177           14781         XOR.B   R3H,R3H
0039A6 8927           14782         MOV.W   R2,R7
0039A8 91A8rr         14783         MOV.B   R5L,#SEG( __lc_bs )
0039AB 71BB           14784         XOR.B   R5H,R5H
0039AD 404704         14785         LEA     R4,R7+4
0039B0 0F30           14786         PUSH.W  R4, R5
0039B2 0F0C           14788         PUSH.W  R2, R3
0039B4 9938rrrr       14790         MOV.W   R3,#SEG( _1038 )
0039B8 9928rrrr       14791         MOV.W   R2,#SOF( _1038 )
0039BC 0F0C           14792         PUSH.W  R2, R3
                      14794         CALL    _sscanf
0039BE C4rrrrrr       +14794 ;       FCALL   _sscanf
0039C2 9970000C       14795         ADD.W   R7,#0CH
0039C6 99040002       14797         CMP.W   R0,#02H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 241

ADDR   CODE            LINE SOURCELINE
0039CA F306           14798         BEQ     _1040
0039CA F306           14798         BEQ     _1040
0039CC                14799 _1039:
                      14800 ; rs232cmd.c 4158                                       SCPIError = SyntaxErr;
0039CC 964842rr       14802         MOV.B   ES,#SEG( _SCPIError )
0039D0 9908rrrr       14803         MOV.W   R0,#SOF( _SCPIError )
0039D4 BA03           14804         MOV.W   [R0],#03H
0039D6 FE21           14805         BR      _1045
0039D6 FE21           14805         BR      _1045
0039D8                14806 _1040:
                      14807 ; rs232cmd.c 4159                               else
                      14808 ; rs232cmd.c 4160                               {
                      14809 ; rs232cmd.c 4161                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtAddr, EndAddr));
0039D8 8C1702         14811         MOV.W   R1,[R7+2]
0039DB 8A07           14812         MOV.W   R0,[R7]
0039DD 8C3706         14813         MOV.W   R3,[R7+6]
0039E0 8C2704         14814         MOV.W   R2,[R7+4]
                      14815         CALL    _ROMChecksum
0039E3 C4rrrrrr       +14815 ;       FCALL   _ROMChecksum
0039E7 91A8rr         14816         MOV.B   R5L,#SEG( __lc_bs )
0039EA 71BB           14817         XOR.B   R5H,R5H
0039EC 404708         14818         LEA     R4,R7+8
0039EF 0F01           14819         PUSH.W  R0
0039F1 9918rrrr       14821         MOV.W   R1,#SEG( _1013 )
0039F5 9908rrrr       14822         MOV.W   R0,#SOF( _1013 )
0039F9 0F03           14823         PUSH.W  R0, R1
0039FB 8915           14825         MOV.W   R1,R5
0039FD 8904           14826         MOV.W   R0,R4
                      14827         CALL    _sprintf
0039FF C4rrrrrr       +14827 ;       FCALL   _sprintf
003A03 A976           14828         ADDS.W  R7,#06H
                      14830 ; rs232cmd.c 4162                                       rs232puts( buffer);
003A05 8915           14832         MOV.W   R1,R5
003A07 8904           14833         MOV.W   R0,R4
                      14834         CALL    _rs232puts
003A09 C4rrrrrr       +14834 ;       FCALL   _rs232puts
                      14835 ; rs232cmd.c 4163                               }
                      14836 ; rs232cmd.c 4164                       }
003A0D FE06           14838         BR      _1045
003A0D FE0600         14838         BR      _1045
003A10                14839 _1041:
                      14840 ; rs232cmd.c 4165                       else
                      14841 ; rs232cmd.c 4166                               SCPIError = SyntaxErr;
003A10 964842rr       14843         MOV.B   ES,#SEG( _SCPIError )
003A14 9908rrrr       14844         MOV.W   R0,#SOF( _SCPIError )
003A18 BA03           14845         MOV.W   [R0],#03H
                      14846 ; rs232cmd.c 4167               }
003A1A                14848 _1045:
                      14849 ; rs232cmd.c 4168       }
003A1A 99700026       14851         ADD.W   R7,#026H
003A1E 2F30           14853         POP.W   R4, R5
003A20 D680           14855         RET
                      14857 ; rs232cmd.c 4169       
                      14858 ; rs232cmd.c 4170       /************************************************************************
                            **/
                      14859 ; rs232cmd.c 4171       /* FactMainVersion                                                       
                                                                                                                             
                                         RS232CMD.C */
                      14860 ; rs232cmd.c 4172       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 242

ADDR   CODE            LINE SOURCELINE
                      14861 ; rs232cmd.c 4173       /* Author:              Kim Engedahl, DEV, 000620                        
                                                                                                                             
                                    */
                      14862 ; rs232cmd.c 4174       /* Revised:       000620                                                 
                                                                                                                             
                                                                                    */
                      14863 ; rs232cmd.c 4175       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14864 ; rs232cmd.c 4176       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14865 ; rs232cmd.c 4177       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14866 ; rs232cmd.c 4178       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14867 ; rs232cmd.c 4179       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14868 ; rs232cmd.c 4180       /************************************************************************
                            **/
                      14869 ; rs232cmd.c 4181       void FactMainVersion( void)
                      14870 ; rs232cmd.c 4182       {
                      14871         ALIGN   1
                      14873         PUBLIC  _FactMainVersion
003A22                14874 _FactMainVersion:
003A22 0F30           14878         PUSH.W  R4, R5
003A24 99720014       14880         SUB.W   R7,#014H
                      14883 ; rs232cmd.c 4183               char buffer[20];
                      14884 ; rs232cmd.c 4184       
                      14885 ; rs232cmd.c 4185               if ( CmdExecute && !SCPIError)
003A28 964842rr       14887         MOV.B   ES,#SEG( _CmdExecute )
003A2C 9908rrrr       14888         MOV.W   R0,#SOF( _CmdExecute )
003A30 8200           14889         MOV.B   R0L,[R0]
003A32 F333           14890         BEQ     _1053
003A34 964842rr       14891         MOV.B   ES,#SEG( _SCPIError )
003A38 9908rrrr       14892         MOV.W   R0,#SOF( _SCPIError )
003A3C 8A00           14893         MOV.W   R0,[R0]
003A3E F22D           14894         BNE     _1053
                      14895 ; rs232cmd.c 4186               {
                      14896 ; rs232cmd.c 4187                       if ( CmdRequest)
003A40 964842rr       14898         MOV.B   ES,#SEG( _CmdRequest )
003A44 9908rrrr       14899         MOV.W   R0,#SOF( _CmdRequest )
003A48 8200           14900         MOV.B   R0L,[R0]
003A4A F322           14901         BEQ     _1049
                      14902 ; rs232cmd.c 4188                       {
                      14903 ; rs232cmd.c 4189                               if ( ParCnt)
003A4C 964842rr       14905         MOV.B   ES,#SEG( _ParCnt )
003A50 9908rrrr       14906         MOV.W   R0,#SOF( _ParCnt )
003A54 8200           14907         MOV.B   R0L,[R0]
003A56 F306           14908         BEQ     _1048
                      14909 ; rs232cmd.c 4190                                       SCPIError = SyntaxErr;
003A58 964842rr       14911         MOV.B   ES,#SEG( _SCPIError )
003A5C 9908rrrr       14912         MOV.W   R0,#SOF( _SCPIError )
003A60 BA03           14913         MOV.W   [R0],#03H
003A62 FE1B           14914         BR      _1053
003A62 FE1B           14914         BR      _1053
003A64                14915 _1048:
                      14916 ; rs232cmd.c 4191                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 243

ADDR   CODE            LINE SOURCELINE
                      14917 ; rs232cmd.c 4192                               {
                      14918 ; rs232cmd.c 4193                                       sprintf( buffer, "%u\n", MasterSWVersion)
                            ;
003A64 91A8rr         14920         MOV.B   R5L,#SEG( __lc_bs )
003A67 71BB           14921         XOR.B   R5H,R5H
003A69 8947           14922         MOV.W   R4,R7
003A6B 99080017       14923         MOV.W   R0,#017H
003A6F 0F01           14924         PUSH.W  R0
003A71 9918rrrr       14926         MOV.W   R1,#SEG( _1013 )
003A75 9908rrrr       14927         MOV.W   R0,#SOF( _1013 )
003A79 0F03           14928         PUSH.W  R0, R1
003A7B 8915           14930         MOV.W   R1,R5
003A7D 8904           14931         MOV.W   R0,R4
                      14932         CALL    _sprintf
003A7F C4rrrrrr       +14932 ;       FCALL   _sprintf
003A83 A976           14933         ADDS.W  R7,#06H
                      14935 ; rs232cmd.c 4194                                       rs232puts( buffer);
003A85 8915           14937         MOV.W   R1,R5
003A87 8904           14938         MOV.W   R0,R4
                      14939         CALL    _rs232puts
003A89 C4rrrrrr       +14939 ;       FCALL   _rs232puts
                      14940 ; rs232cmd.c 4195                               }
                      14941 ; rs232cmd.c 4196                       }
003A8D FE06           14943         BR      _1053
003A8D FE0600         14943         BR      _1053
003A90                14944 _1049:
                      14945 ; rs232cmd.c 4197                       else
                      14946 ; rs232cmd.c 4198                               SCPIError = SyntaxErr;
003A90 964842rr       14948         MOV.B   ES,#SEG( _SCPIError )
003A94 9908rrrr       14949         MOV.W   R0,#SOF( _SCPIError )
003A98 BA03           14950         MOV.W   [R0],#03H
                      14951 ; rs232cmd.c 4199               }
003A9A                14953 _1053:
                      14954 ; rs232cmd.c 4200       }
003A9A 99700014       14956         ADD.W   R7,#014H
003A9E 2F30           14958         POP.W   R4, R5
003AA0 D680           14960         RET
                      14962 ; rs232cmd.c 4201       
                      14963 ; rs232cmd.c 4202       /************************************************************************
                            **/
                      14964 ; rs232cmd.c 4203       /* FactMainIDNCompany                                                    
                                                                                                                             
                                RS232CMD.C  */
                      14965 ; rs232cmd.c 4204       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14966 ; rs232cmd.c 4205       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      14967 ; rs232cmd.c 4206       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      14968 ; rs232cmd.c 4207       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14969 ; rs232cmd.c 4208       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 244

ADDR   CODE            LINE SOURCELINE
                      14970 ; rs232cmd.c 4209       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14971 ; rs232cmd.c 4210       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14972 ; rs232cmd.c 4211       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14973 ; rs232cmd.c 4212       /************************************************************************
                            **/
                      14974 ; rs232cmd.c 4213       void FactMainIDNCompany( void)
                      14975 ; rs232cmd.c 4214       {
                      14976         ALIGN   1
                      14978         PUBLIC  _FactMainIDNCompany
003AA2                14979 _FactMainIDNCompany:
003AA2 0F70           14983         PUSH.W  R4, R5, R6
003AA4 99720022       14985         SUB.W   R7,#022H
                      14988 ; rs232cmd.c 4215               char Company[33];
                      14989 ; rs232cmd.c 4216       
                      14990 ; rs232cmd.c 4217               if ( CmdExecute && !SCPIError)
003AA8 964842rr       14992         MOV.B   ES,#SEG( _CmdExecute )
003AAC 9908rrrr       14993         MOV.W   R0,#SOF( _CmdExecute )
003AB0 8200           14994         MOV.B   R0L,[R0]
003AB2 F364           14995         BEQ     _1064
003AB4 964842rr       14996         MOV.B   ES,#SEG( _SCPIError )
003AB8 9908rrrr       14997         MOV.W   R0,#SOF( _SCPIError )
003ABC 8A00           14998         MOV.W   R0,[R0]
003ABE F25E           14999         BNE     _1064
                      15000 ; rs232cmd.c 4218               {
                      15001 ; rs232cmd.c 4219                       if ( CmdRequest)
003AC0 964842rr       15003         MOV.B   ES,#SEG( _CmdRequest )
003AC4 9908rrrr       15004         MOV.W   R0,#SOF( _CmdRequest )
003AC8 8200           15005         MOV.B   R0L,[R0]
003ACA F317           15006         BEQ     _1056
                      15007 ; rs232cmd.c 4220                       {
                      15008 ; rs232cmd.c 4221                               if ( ParCnt)
003ACC 964842rr       15010         MOV.B   ES,#SEG( _ParCnt )
003AD0 9908rrrr       15011         MOV.W   R0,#SOF( _ParCnt )
003AD4 8200           15012         MOV.B   R0L,[R0]
003AD6 F306           15013         BEQ     _1055
                      15014 ; rs232cmd.c 4222                                       SCPIError = SyntaxErr;
003AD8 964842rr       15016         MOV.B   ES,#SEG( _SCPIError )
003ADC 9908rrrr       15017         MOV.W   R0,#SOF( _SCPIError )
003AE0 BA03           15018         MOV.W   [R0],#03H
003AE2 FE4C           15019         BR      _1064
003AE2 FE4C           15019         BR      _1064
003AE4                15020 _1055:
                      15021 ; rs232cmd.c 4223                               else
                      15022 ; rs232cmd.c 4224                               {
                      15023 ; rs232cmd.c 4225                                       rs232puts( Calibration.Company);
003AE4 9918rrrr       15025         MOV.W   R1,#SEG( _Calibration )
003AE8 9908rrrr       15026         MOV.W   R0,#SOF( _Calibration )
                      15027         CALL    _rs232puts
003AEC C4rrrrrr       +15027 ;       FCALL   _rs232puts
                      15028 ; rs232cmd.c 4226                                       rs232putchar( '\n');
003AF0 91080A         15030         MOV.B   R0L,#0AH
                      15031         CALL    _rs232putchar
003AF3 C4rrrrrr       +15031 ;       FCALL   _rs232putchar
                      15032 ; rs232cmd.c 4227                               }
                      15033 ; rs232cmd.c 4228                       }
003AF7 FE42           15035         BR      _1064
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 245

ADDR   CODE            LINE SOURCELINE
003AF7 FE4200         15035         BR      _1064
003AFA                15036 _1056:
                      15037 ; rs232cmd.c 4229                       else
                      15038 ; rs232cmd.c 4230                       {
                      15039 ; rs232cmd.c 4231                               if ( !PasswordProtected)
003AFA 964842rr       15041         MOV.B   ES,#SEG( _PasswordProtected )
003AFE 9908rrrr       15042         MOV.W   R0,#SOF( _PasswordProtected )
003B02 8A00           15043         MOV.W   R0,[R0]
003B04 F23B           15044         BNE     _1064
                      15045 ; rs232cmd.c 4232                               {
                      15046 ; rs232cmd.c 4233                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Company) != 1))
003B06 964842rr       15048         MOV.B   ES,#SEG( _ParCnt )
003B0A 9908rrrr       15049         MOV.W   R0,#SOF( _ParCnt )
003B0E 8200           15050         MOV.B   R0L,[R0]
003B10 910401         15051         CMP.B   R0L,#01H
003B13 F217           15052         BNE     _1057
003B15 9918rrrr       15053         MOV.W   R1,#SEG( _Cmd )
003B19 9908rrrr       15054         MOV.W   R0,#SOF( _Cmd )
003B1D 91A8rr         15055         MOV.B   R5L,#SEG( __lc_bs )
003B20 71BB           15056         XOR.B   R5H,R5H
003B22 8947           15057         MOV.W   R4,R7
003B24 8935           15058         MOV.W   R3,R5
003B26 8924           15059         MOV.W   R2,R4
003B28 0F0C           15060         PUSH.W  R2, R3
003B2A 9938rrrr       15062         MOV.W   R3,#SEG( _1054 )
003B2E 9928rrrr       15063         MOV.W   R2,#SOF( _1054 )
003B32 0F0C           15064         PUSH.W  R2, R3
                      15066         CALL    _sscanf
003B34 C4rrrrrr       +15066 ;       FCALL   _sscanf
003B38 99700008       15067         ADD.W   R7,#08H
003B3C 99040001       15069         CMP.W   R0,#01H
003B40 F306           15070         BEQ     _1058
003B40 F306           15070         BEQ     _1058
003B42                15071 _1057:
                      15072 ; rs232cmd.c 4234                                               SCPIError = SyntaxErr;
003B42 964842rr       15074         MOV.B   ES,#SEG( _SCPIError )
003B46 9908rrrr       15075         MOV.W   R0,#SOF( _SCPIError )
003B4A BA03           15076         MOV.W   [R0],#03H
003B4C FE17           15077         BR      _1064
003B4C FE17           15077         BR      _1064
003B4E                15078 _1058:
                      15079 ; rs232cmd.c 4235                                       else
                      15080 ; rs232cmd.c 4236                                       {
                      15081 ; rs232cmd.c 4237                                               strncpy( Calibration.Company, Com
                            pany, 32);
003B4E 99680020       15083         MOV.W   R6,#020H
003B52 9918rrrr       15084         MOV.W   R1,#SEG( _Calibration )
003B56 9908rrrr       15085         MOV.W   R0,#SOF( _Calibration )
003B5A 8935           15086         MOV.W   R3,R5
003B5C 8924           15087         MOV.W   R2,R4
                      15088         CALL    _strncpy
003B5E C4rrrrrr       +15088 ;       FCALL   _strncpy
                      15089 ; rs232cmd.c 4238       
                      15090 ; rs232cmd.c 4239                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003B62 964842rr       15092         MOV.B   ES,#SEG( _CalibrationPtr )
003B66 9928rrrr       15093         MOV.W   R2,#SOF( _CalibrationPtr )
003B6A 8A22           15094         MOV.W   R2,[R2]
003B6C 993800E0       15095         MOV.W   R3,#0E0H
003B70 9918rrrr       15096         MOV.W   R1,#SEG( _Calibration )
003B74 9908rrrr       15097         MOV.W   R0,#SOF( _Calibration )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 246

ADDR   CODE            LINE SOURCELINE
                      15098         CALL    _NV_Store
003B78 C4rrrrrr       +15098 ;       FCALL   _NV_Store
                      15099 ; rs232cmd.c 4240                                       }
                      15100 ; rs232cmd.c 4241                               }
                      15101 ; rs232cmd.c 4242                       }
                      15102 ; rs232cmd.c 4243               }
003B7C                15104 _1064:
                      15105 ; rs232cmd.c 4244       }
003B7C 99700022       15107         ADD.W   R7,#022H
003B80 2F70           15109         POP.W   R4, R5, R6
003B82 D680           15111         RET
                      15113 ; rs232cmd.c 4245       
                      15114 ; rs232cmd.c 4246       /************************************************************************
                            **/
                      15115 ; rs232cmd.c 4247       /* FactMainIDNType                                                       
                                                                                                                             
                                         RS232CMD.C */
                      15116 ; rs232cmd.c 4248       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15117 ; rs232cmd.c 4249       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15118 ; rs232cmd.c 4250       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      15119 ; rs232cmd.c 4251       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15120 ; rs232cmd.c 4252       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15121 ; rs232cmd.c 4253       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15122 ; rs232cmd.c 4254       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15123 ; rs232cmd.c 4255       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15124 ; rs232cmd.c 4256       /************************************************************************
                            **/
                      15125 ; rs232cmd.c 4257       void FactMainIDNType( void)
                      15126 ; rs232cmd.c 4258       {
                      15127         ALIGN   1
                      15129         PUBLIC  _FactMainIDNType
003B84                15130 _FactMainIDNType:
003B84 0F70           15134         PUSH.W  R4, R5, R6
003B86 99720022       15136         SUB.W   R7,#022H
                      15139 ; rs232cmd.c 4259               char Type[33];
                      15140 ; rs232cmd.c 4260       
                      15141 ; rs232cmd.c 4261               if ( CmdExecute && !SCPIError)
003B8A 964842rr       15143         MOV.B   ES,#SEG( _CmdExecute )
003B8E 9908rrrr       15144         MOV.W   R0,#SOF( _CmdExecute )
003B92 8200           15145         MOV.B   R0L,[R0]
003B94 F364           15146         BEQ     _1076
003B96 964842rr       15147         MOV.B   ES,#SEG( _SCPIError )
003B9A 9908rrrr       15148         MOV.W   R0,#SOF( _SCPIError )
003B9E 8A00           15149         MOV.W   R0,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 247

ADDR   CODE            LINE SOURCELINE
003BA0 F25E           15150         BNE     _1076
                      15151 ; rs232cmd.c 4262               {
                      15152 ; rs232cmd.c 4263                       if ( CmdRequest)
003BA2 964842rr       15154         MOV.B   ES,#SEG( _CmdRequest )
003BA6 9908rrrr       15155         MOV.W   R0,#SOF( _CmdRequest )
003BAA 8200           15156         MOV.B   R0L,[R0]
003BAC F317           15157         BEQ     _1068
                      15158 ; rs232cmd.c 4264                       {
                      15159 ; rs232cmd.c 4265                               if ( ParCnt)
003BAE 964842rr       15161         MOV.B   ES,#SEG( _ParCnt )
003BB2 9908rrrr       15162         MOV.W   R0,#SOF( _ParCnt )
003BB6 8200           15163         MOV.B   R0L,[R0]
003BB8 F306           15164         BEQ     _1067
                      15165 ; rs232cmd.c 4266                                       SCPIError = SyntaxErr;
003BBA 964842rr       15167         MOV.B   ES,#SEG( _SCPIError )
003BBE 9908rrrr       15168         MOV.W   R0,#SOF( _SCPIError )
003BC2 BA03           15169         MOV.W   [R0],#03H
003BC4 FE4C           15170         BR      _1076
003BC4 FE4C           15170         BR      _1076
003BC6                15171 _1067:
                      15172 ; rs232cmd.c 4267                               else
                      15173 ; rs232cmd.c 4268                               {
                      15174 ; rs232cmd.c 4269                                       rs232puts( Calibration.Type);
003BC6 9918rrrr       15176         MOV.W   R1,#SEG( _Calibration+33 )
003BCA 9908rrrr       15177         MOV.W   R0,#SOF( _Calibration+33 )
                      15178         CALL    _rs232puts
003BCE C4rrrrrr       +15178 ;       FCALL   _rs232puts
                      15179 ; rs232cmd.c 4270                                       rs232putchar( '\n');
003BD2 91080A         15181         MOV.B   R0L,#0AH
                      15182         CALL    _rs232putchar
003BD5 C4rrrrrr       +15182 ;       FCALL   _rs232putchar
                      15183 ; rs232cmd.c 4271                               }
                      15184 ; rs232cmd.c 4272                       }
003BD9 FE42           15186         BR      _1076
003BD9 FE4200         15186         BR      _1076
003BDC                15187 _1068:
                      15188 ; rs232cmd.c 4273                       else
                      15189 ; rs232cmd.c 4274                       {
                      15190 ; rs232cmd.c 4275                               if ( !PasswordProtected)
003BDC 964842rr       15192         MOV.B   ES,#SEG( _PasswordProtected )
003BE0 9908rrrr       15193         MOV.W   R0,#SOF( _PasswordProtected )
003BE4 8A00           15194         MOV.W   R0,[R0]
003BE6 F23B           15195         BNE     _1076
                      15196 ; rs232cmd.c 4276                               {
                      15197 ; rs232cmd.c 4277                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Type) != 1))
003BE8 964842rr       15199         MOV.B   ES,#SEG( _ParCnt )
003BEC 9908rrrr       15200         MOV.W   R0,#SOF( _ParCnt )
003BF0 8200           15201         MOV.B   R0L,[R0]
003BF2 910401         15202         CMP.B   R0L,#01H
003BF5 F217           15203         BNE     _1069
003BF7 9918rrrr       15204         MOV.W   R1,#SEG( _Cmd )
003BFB 9908rrrr       15205         MOV.W   R0,#SOF( _Cmd )
003BFF 91A8rr         15206         MOV.B   R5L,#SEG( __lc_bs )
003C02 71BB           15207         XOR.B   R5H,R5H
003C04 8947           15208         MOV.W   R4,R7
003C06 8935           15209         MOV.W   R3,R5
003C08 8924           15210         MOV.W   R2,R4
003C0A 0F0C           15211         PUSH.W  R2, R3
003C0C 9938rrrr       15213         MOV.W   R3,#SEG( _1054 )
003C10 9928rrrr       15214         MOV.W   R2,#SOF( _1054 )
003C14 0F0C           15215         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 248

ADDR   CODE            LINE SOURCELINE
                      15217         CALL    _sscanf
003C16 C4rrrrrr       +15217 ;       FCALL   _sscanf
003C1A 99700008       15218         ADD.W   R7,#08H
003C1E 99040001       15220         CMP.W   R0,#01H
003C22 F306           15221         BEQ     _1070
003C22 F306           15221         BEQ     _1070
003C24                15222 _1069:
                      15223 ; rs232cmd.c 4278                                               SCPIError = SyntaxErr;
003C24 964842rr       15225         MOV.B   ES,#SEG( _SCPIError )
003C28 9908rrrr       15226         MOV.W   R0,#SOF( _SCPIError )
003C2C BA03           15227         MOV.W   [R0],#03H
003C2E FE17           15228         BR      _1076
003C2E FE17           15228         BR      _1076
003C30                15229 _1070:
                      15230 ; rs232cmd.c 4279                                       else
                      15231 ; rs232cmd.c 4280                                       {
                      15232 ; rs232cmd.c 4281                                               strncpy( Calibration.Type, Type, 
                            32);
003C30 9918rrrr       15234         MOV.W   R1,#SEG( _Calibration+33 )
003C34 9908rrrr       15235         MOV.W   R0,#SOF( _Calibration+33 )
003C38 99680020       15236         MOV.W   R6,#020H
003C3C 8935           15237         MOV.W   R3,R5
003C3E 8924           15238         MOV.W   R2,R4
                      15239         CALL    _strncpy
003C40 C4rrrrrr       +15239 ;       FCALL   _strncpy
                      15240 ; rs232cmd.c 4282       
                      15241 ; rs232cmd.c 4283                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003C44 9918rrrr       15243         MOV.W   R1,#SEG( _Calibration )
003C48 9908rrrr       15244         MOV.W   R0,#SOF( _Calibration )
003C4C 964842rr       15245         MOV.B   ES,#SEG( _CalibrationPtr )
003C50 9928rrrr       15246         MOV.W   R2,#SOF( _CalibrationPtr )
003C54 8A22           15247         MOV.W   R2,[R2]
003C56 993800E0       15248         MOV.W   R3,#0E0H
                      15249         CALL    _NV_Store
003C5A C4rrrrrr       +15249 ;       FCALL   _NV_Store
                      15250 ; rs232cmd.c 4284                                       }
                      15251 ; rs232cmd.c 4285                               }
                      15252 ; rs232cmd.c 4286                       }
                      15253 ; rs232cmd.c 4287               }
003C5E                15255 _1076:
                      15256 ; rs232cmd.c 4288       }
003C5E 99700022       15258         ADD.W   R7,#022H
003C62 2F70           15260         POP.W   R4, R5, R6
003C64 D680           15262         RET
                      15264 ; rs232cmd.c 4289       
                      15265 ; rs232cmd.c 4290       /************************************************************************
                            **/
                      15266 ; rs232cmd.c 4291       /* FactMainIDNNumber                                                     
                                                                                                                         RS23
                            2CMD.C  */
                      15267 ; rs232cmd.c 4292       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15268 ; rs232cmd.c 4293       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15269 ; rs232cmd.c 4294       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      15270 ; rs232cmd.c 4295       /*                                                                       
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 249

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                    */
                      15271 ; rs232cmd.c 4296       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15272 ; rs232cmd.c 4297       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15273 ; rs232cmd.c 4298       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15274 ; rs232cmd.c 4299       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15275 ; rs232cmd.c 4300       /************************************************************************
                            **/
                      15276 ; rs232cmd.c 4301       void FactMainIDNKUNumber( void)
                      15277 ; rs232cmd.c 4302       {
                      15278         ALIGN   1
                      15280         PUBLIC  _FactMainIDNKUNumber
003C66                15281 _FactMainIDNKUNumber:
003C66 0F70           15285         PUSH.W  R4, R5, R6
003C68 9972000A       15287         SUB.W   R7,#0AH
                      15291 ; rs232cmd.c 4303               char KUNumber[9];
                      15292 ; rs232cmd.c 4304       
                      15293 ; rs232cmd.c 4305               if ( CmdExecute && !SCPIError)
003C6C 964842rr       15295         MOV.B   ES,#SEG( _CmdExecute )
003C70 9908rrrr       15296         MOV.W   R0,#SOF( _CmdExecute )
003C74 8200           15297         MOV.B   R0L,[R0]
003C76 F364           15298         BEQ     _1089
003C78 964842rr       15299         MOV.B   ES,#SEG( _SCPIError )
003C7C 9908rrrr       15300         MOV.W   R0,#SOF( _SCPIError )
003C80 8A00           15301         MOV.W   R0,[R0]
003C82 F25E           15302         BNE     _1089
                      15303 ; rs232cmd.c 4306               {
                      15304 ; rs232cmd.c 4307                       if ( CmdRequest)
003C84 964842rr       15306         MOV.B   ES,#SEG( _CmdRequest )
003C88 9908rrrr       15307         MOV.W   R0,#SOF( _CmdRequest )
003C8C 8200           15308         MOV.B   R0L,[R0]
003C8E F317           15309         BEQ     _1081
                      15310 ; rs232cmd.c 4308                       {
                      15311 ; rs232cmd.c 4309                               if ( ParCnt)
003C90 964842rr       15313         MOV.B   ES,#SEG( _ParCnt )
003C94 9908rrrr       15314         MOV.W   R0,#SOF( _ParCnt )
003C98 8200           15315         MOV.B   R0L,[R0]
003C9A F306           15316         BEQ     _1080
                      15317 ; rs232cmd.c 4310                                       SCPIError = SyntaxErr;
003C9C 964842rr       15319         MOV.B   ES,#SEG( _SCPIError )
003CA0 9908rrrr       15320         MOV.W   R0,#SOF( _SCPIError )
003CA4 BA03           15321         MOV.W   [R0],#03H
003CA6 FE4C           15322         BR      _1089
003CA6 FE4C           15322         BR      _1089
003CA8                15323 _1080:
                      15324 ; rs232cmd.c 4311                               else
                      15325 ; rs232cmd.c 4312                               {
                      15326 ; rs232cmd.c 4313                                       rs232puts( Calibration.KUNumber);
003CA8 9918rrrr       15328         MOV.W   R1,#SEG( _Calibration+66 )
003CAC 9908rrrr       15329         MOV.W   R0,#SOF( _Calibration+66 )
                      15330         CALL    _rs232puts
003CB0 C4rrrrrr       +15330 ;       FCALL   _rs232puts
                      15331 ; rs232cmd.c 4314                                       rs232putchar( '\n');
003CB4 91080A         15333         MOV.B   R0L,#0AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 250

ADDR   CODE            LINE SOURCELINE
                      15334         CALL    _rs232putchar
003CB7 C4rrrrrr       +15334 ;       FCALL   _rs232putchar
                      15335 ; rs232cmd.c 4315                               }
                      15336 ; rs232cmd.c 4316                       }
003CBB FE42           15338         BR      _1089
003CBB FE4200         15338         BR      _1089
003CBE                15339 _1081:
                      15340 ; rs232cmd.c 4317                       else
                      15341 ; rs232cmd.c 4318                       {
                      15342 ; rs232cmd.c 4319                               if ( !PasswordProtected)
003CBE 964842rr       15344         MOV.B   ES,#SEG( _PasswordProtected )
003CC2 9908rrrr       15345         MOV.W   R0,#SOF( _PasswordProtected )
003CC6 8A00           15346         MOV.W   R0,[R0]
003CC8 F23B           15347         BNE     _1089
                      15348 ; rs232cmd.c 4320                               {
                      15349 ; rs232cmd.c 4321                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", KUNumber) != 1))
003CCA 964842rr       15351         MOV.B   ES,#SEG( _ParCnt )
003CCE 9908rrrr       15352         MOV.W   R0,#SOF( _ParCnt )
003CD2 8200           15353         MOV.B   R0L,[R0]
003CD4 910401         15354         CMP.B   R0L,#01H
003CD7 F217           15355         BNE     _1082
003CD9 9918rrrr       15356         MOV.W   R1,#SEG( _Cmd )
003CDD 9908rrrr       15357         MOV.W   R0,#SOF( _Cmd )
003CE1 91A8rr         15358         MOV.B   R5L,#SEG( __lc_bs )
003CE4 71BB           15359         XOR.B   R5H,R5H
003CE6 8947           15360         MOV.W   R4,R7
003CE8 8935           15361         MOV.W   R3,R5
003CEA 8924           15362         MOV.W   R2,R4
003CEC 0F0C           15363         PUSH.W  R2, R3
003CEE 9938rrrr       15365         MOV.W   R3,#SEG( _1079 )
003CF2 9928rrrr       15366         MOV.W   R2,#SOF( _1079 )
003CF6 0F0C           15367         PUSH.W  R2, R3
                      15369         CALL    _sscanf
003CF8 C4rrrrrr       +15369 ;       FCALL   _sscanf
003CFC 99700008       15370         ADD.W   R7,#08H
003D00 99040001       15372         CMP.W   R0,#01H
003D04 F306           15373         BEQ     _1083
003D04 F306           15373         BEQ     _1083
003D06                15374 _1082:
                      15375 ; rs232cmd.c 4322                                               SCPIError = SyntaxErr;
003D06 964842rr       15377         MOV.B   ES,#SEG( _SCPIError )
003D0A 9908rrrr       15378         MOV.W   R0,#SOF( _SCPIError )
003D0E BA03           15379         MOV.W   [R0],#03H
003D10 FE17           15380         BR      _1089
003D10 FE17           15380         BR      _1089
003D12                15381 _1083:
                      15382 ; rs232cmd.c 4323                                       else
                      15383 ; rs232cmd.c 4324                                       {
                      15384 ; rs232cmd.c 4325                                               strncpy( Calibration.KUNumber, KU
                            Number, 9);
003D12 9918rrrr       15386         MOV.W   R1,#SEG( _Calibration+66 )
003D16 9908rrrr       15387         MOV.W   R0,#SOF( _Calibration+66 )
003D1A 99680009       15388         MOV.W   R6,#09H
003D1E 8935           15389         MOV.W   R3,R5
003D20 8924           15390         MOV.W   R2,R4
                      15391         CALL    _strncpy
003D22 C4rrrrrr       +15391 ;       FCALL   _strncpy
                      15392 ; rs232cmd.c 4326       
                      15393 ; rs232cmd.c 4327                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003D26 9918rrrr       15395         MOV.W   R1,#SEG( _Calibration )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 251

ADDR   CODE            LINE SOURCELINE
003D2A 9908rrrr       15396         MOV.W   R0,#SOF( _Calibration )
003D2E 964842rr       15397         MOV.B   ES,#SEG( _CalibrationPtr )
003D32 9928rrrr       15398         MOV.W   R2,#SOF( _CalibrationPtr )
003D36 8A22           15399         MOV.W   R2,[R2]
003D38 993800E0       15400         MOV.W   R3,#0E0H
                      15401         CALL    _NV_Store
003D3C C4rrrrrr       +15401 ;       FCALL   _NV_Store
                      15402 ; rs232cmd.c 4328                                       }
                      15403 ; rs232cmd.c 4329                               }
                      15404 ; rs232cmd.c 4330                       }
                      15405 ; rs232cmd.c 4331               }
003D40                15407 _1089:
                      15408 ; rs232cmd.c 4332       }
003D40 9970000A       15410         ADD.W   R7,#0AH
003D44 2F70           15412         POP.W   R4, R5, R6
003D46 D680           15414         RET
                      15416 ; rs232cmd.c 4333       
                      15417 ; rs232cmd.c 4334       /************************************************************************
                            **/
                      15418 ; rs232cmd.c 4335       /* FactMainIDNSWRevision                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      15419 ; rs232cmd.c 4336       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15420 ; rs232cmd.c 4337       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15421 ; rs232cmd.c 4338       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      15422 ; rs232cmd.c 4339       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15423 ; rs232cmd.c 4340       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15424 ; rs232cmd.c 4341       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15425 ; rs232cmd.c 4342       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15426 ; rs232cmd.c 4343       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15427 ; rs232cmd.c 4344       /************************************************************************
                            **/
                      15428 ; rs232cmd.c 4345       void FactMainIDNSWRevision( void)
                      15429 ; rs232cmd.c 4346       {
                      15430         ALIGN   1
                      15432         PUBLIC  _FactMainIDNSWRevision
003D48                15433 _FactMainIDNSWRevision:
003D48 0F70           15437         PUSH.W  R4, R5, R6
003D4A 9972000A       15439         SUB.W   R7,#0AH
                      15442 ; rs232cmd.c 4347               char SWRevision[9];
                      15443 ; rs232cmd.c 4348       
                      15444 ; rs232cmd.c 4349               if ( CmdExecute && !SCPIError)
003D4E 964842rr       15446         MOV.B   ES,#SEG( _CmdExecute )
003D52 9908rrrr       15447         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 252

ADDR   CODE            LINE SOURCELINE
003D56 8200           15448         MOV.B   R0L,[R0]
003D58 F364           15449         BEQ     _1101
003D5A 964842rr       15450         MOV.B   ES,#SEG( _SCPIError )
003D5E 9908rrrr       15451         MOV.W   R0,#SOF( _SCPIError )
003D62 8A00           15452         MOV.W   R0,[R0]
003D64 F25E           15453         BNE     _1101
                      15454 ; rs232cmd.c 4350               {
                      15455 ; rs232cmd.c 4351                       if ( CmdRequest)
003D66 964842rr       15457         MOV.B   ES,#SEG( _CmdRequest )
003D6A 9908rrrr       15458         MOV.W   R0,#SOF( _CmdRequest )
003D6E 8200           15459         MOV.B   R0L,[R0]
003D70 F317           15460         BEQ     _1093
                      15461 ; rs232cmd.c 4352                       {
                      15462 ; rs232cmd.c 4353                               if ( ParCnt)
003D72 964842rr       15464         MOV.B   ES,#SEG( _ParCnt )
003D76 9908rrrr       15465         MOV.W   R0,#SOF( _ParCnt )
003D7A 8200           15466         MOV.B   R0L,[R0]
003D7C F306           15467         BEQ     _1092
                      15468 ; rs232cmd.c 4354                                       SCPIError = SyntaxErr;
003D7E 964842rr       15470         MOV.B   ES,#SEG( _SCPIError )
003D82 9908rrrr       15471         MOV.W   R0,#SOF( _SCPIError )
003D86 BA03           15472         MOV.W   [R0],#03H
003D88 FE4C           15473         BR      _1101
003D88 FE4C           15473         BR      _1101
003D8A                15474 _1092:
                      15475 ; rs232cmd.c 4355                               else
                      15476 ; rs232cmd.c 4356                               {
                      15477 ; rs232cmd.c 4357                                       rs232puts( Calibration.SWRevision);
003D8A 9918rrrr       15479         MOV.W   R1,#SEG( _Calibration+75 )
003D8E 9908rrrr       15480         MOV.W   R0,#SOF( _Calibration+75 )
                      15481         CALL    _rs232puts
003D92 C4rrrrrr       +15481 ;       FCALL   _rs232puts
                      15482 ; rs232cmd.c 4358                                       rs232putchar( '\n');
003D96 91080A         15484         MOV.B   R0L,#0AH
                      15485         CALL    _rs232putchar
003D99 C4rrrrrr       +15485 ;       FCALL   _rs232putchar
                      15486 ; rs232cmd.c 4359                               }
                      15487 ; rs232cmd.c 4360                       }
003D9D FE42           15489         BR      _1101
003D9D FE4200         15489         BR      _1101
003DA0                15490 _1093:
                      15491 ; rs232cmd.c 4361                       else
                      15492 ; rs232cmd.c 4362                       {
                      15493 ; rs232cmd.c 4363                               if ( !PasswordProtected)
003DA0 964842rr       15495         MOV.B   ES,#SEG( _PasswordProtected )
003DA4 9908rrrr       15496         MOV.W   R0,#SOF( _PasswordProtected )
003DA8 8A00           15497         MOV.W   R0,[R0]
003DAA F23B           15498         BNE     _1101
                      15499 ; rs232cmd.c 4364                               {
                      15500 ; rs232cmd.c 4365                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", SWRevision) != 1))
003DAC 964842rr       15502         MOV.B   ES,#SEG( _ParCnt )
003DB0 9908rrrr       15503         MOV.W   R0,#SOF( _ParCnt )
003DB4 8200           15504         MOV.B   R0L,[R0]
003DB6 910401         15505         CMP.B   R0L,#01H
003DB9 F217           15506         BNE     _1094
003DBB 9918rrrr       15507         MOV.W   R1,#SEG( _Cmd )
003DBF 9908rrrr       15508         MOV.W   R0,#SOF( _Cmd )
003DC3 91A8rr         15509         MOV.B   R5L,#SEG( __lc_bs )
003DC6 71BB           15510         XOR.B   R5H,R5H
003DC8 8947           15511         MOV.W   R4,R7
003DCA 8935           15512         MOV.W   R3,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 253

ADDR   CODE            LINE SOURCELINE
003DCC 8924           15513         MOV.W   R2,R4
003DCE 0F0C           15514         PUSH.W  R2, R3
003DD0 9938rrrr       15516         MOV.W   R3,#SEG( _1079 )
003DD4 9928rrrr       15517         MOV.W   R2,#SOF( _1079 )
003DD8 0F0C           15518         PUSH.W  R2, R3
                      15520         CALL    _sscanf
003DDA C4rrrrrr       +15520 ;       FCALL   _sscanf
003DDE 99700008       15521         ADD.W   R7,#08H
003DE2 99040001       15523         CMP.W   R0,#01H
003DE6 F306           15524         BEQ     _1095
003DE6 F306           15524         BEQ     _1095
003DE8                15525 _1094:
                      15526 ; rs232cmd.c 4366                                               SCPIError = SyntaxErr;
003DE8 964842rr       15528         MOV.B   ES,#SEG( _SCPIError )
003DEC 9908rrrr       15529         MOV.W   R0,#SOF( _SCPIError )
003DF0 BA03           15530         MOV.W   [R0],#03H
003DF2 FE17           15531         BR      _1101
003DF2 FE17           15531         BR      _1101
003DF4                15532 _1095:
                      15533 ; rs232cmd.c 4367                                       else
                      15534 ; rs232cmd.c 4368                                       {
                      15535 ; rs232cmd.c 4369                                               strncpy( Calibration.SWRevision, 
                            SWRevision, 8);
003DF4 9918rrrr       15537         MOV.W   R1,#SEG( _Calibration+75 )
003DF8 9908rrrr       15538         MOV.W   R0,#SOF( _Calibration+75 )
003DFC 99680008       15539         MOV.W   R6,#08H
003E00 8935           15540         MOV.W   R3,R5
003E02 8924           15541         MOV.W   R2,R4
                      15542         CALL    _strncpy
003E04 C4rrrrrr       +15542 ;       FCALL   _strncpy
                      15543 ; rs232cmd.c 4370       
                      15544 ; rs232cmd.c 4371                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003E08 9918rrrr       15546         MOV.W   R1,#SEG( _Calibration )
003E0C 9908rrrr       15547         MOV.W   R0,#SOF( _Calibration )
003E10 964842rr       15548         MOV.B   ES,#SEG( _CalibrationPtr )
003E14 9928rrrr       15549         MOV.W   R2,#SOF( _CalibrationPtr )
003E18 8A22           15550         MOV.W   R2,[R2]
003E1A 993800E0       15551         MOV.W   R3,#0E0H
                      15552         CALL    _NV_Store
003E1E C4rrrrrr       +15552 ;       FCALL   _NV_Store
                      15553 ; rs232cmd.c 4372                                       }
                      15554 ; rs232cmd.c 4373                               }
                      15555 ; rs232cmd.c 4374                       }
                      15556 ; rs232cmd.c 4375               }
003E22                15558 _1101:
                      15559 ; rs232cmd.c 4376       }
003E22 9970000A       15561         ADD.W   R7,#0AH
003E26 2F70           15563         POP.W   R4, R5, R6
003E28 D680           15565         RET
                      15567 ; rs232cmd.c 4377       
                      15568 ; rs232cmd.c 4378       /************************************************************************
                            **/
                      15569 ; rs232cmd.c 4379       /* FactMainSystem                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      15570 ; rs232cmd.c 4380       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 254

ADDR   CODE            LINE SOURCELINE
                      15571 ; rs232cmd.c 4381       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                      15572 ; rs232cmd.c 4382       /* Revised:       000617                                                 
                                                                                                                             
                                                                                    */
                      15573 ; rs232cmd.c 4383       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15574 ; rs232cmd.c 4384       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15575 ; rs232cmd.c 4385       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15576 ; rs232cmd.c 4386       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15577 ; rs232cmd.c 4387       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15578 ; rs232cmd.c 4388       /************************************************************************
                            **/
                      15579 ; rs232cmd.c 4389       void FactMainSystem( void)
                      15580 ; rs232cmd.c 4390       {
                      15581         ALIGN   1
                      15583         PUBLIC  _FactMainSystem
003E2A                15584 _FactMainSystem:
003E2A 0F30           15588         PUSH.W  R4, R5
                      15594 ; rs232cmd.c 4391               int system;
                      15595 ; rs232cmd.c 4392               char code *str;
                      15596 ; rs232cmd.c 4393       
                      15597 ; rs232cmd.c 4394               if ( CmdExecute && !SCPIError)
003E2C 964842rr       15599         MOV.B   ES,#SEG( _CmdExecute )
003E30 9908rrrr       15600         MOV.W   R0,#SOF( _CmdExecute )
003E34 8200           15601         MOV.B   R0L,[R0]
                      15602         BEQ     _1117
003E36 F202           +15602 ;       BNE     _LG_1052
003E38 D5008C         +15602 ;       JMP.L   _1117
003E3C D5008C00       +15602 ;       JMP.L   _1117
003E3C                +15602 _LG_1052:
003E3C 964842rr       15603         MOV.B   ES,#SEG( _SCPIError )
003E40 9908rrrr       15604         MOV.W   R0,#SOF( _SCPIError )
003E44 8A00           15605         MOV.W   R0,[R0]
                      15606         BNE     _1117
003E46 F302           +15606 ;       BEQ     _LG_1054
003E48 D50084         +15606 ;       JMP.L   _1117
003E4C D5008400       +15606 ;       JMP.L   _1117
003E4C                +15606 _LG_1054:
                      15607 ; rs232cmd.c 4395               {
                      15608 ; rs232cmd.c 4396                       if ( CmdRequest)
003E4C 964842rr       15610         MOV.B   ES,#SEG( _CmdRequest )
003E50 9908rrrr       15611         MOV.W   R0,#SOF( _CmdRequest )
003E54 8200           15612         MOV.B   R0L,[R0]
003E56 F33F           15613         BEQ     _1107
                      15614 ; rs232cmd.c 4397                       {
                      15615 ; rs232cmd.c 4398                               if ( ParCnt)
003E58 964842rr       15617         MOV.B   ES,#SEG( _ParCnt )
003E5C 9908rrrr       15618         MOV.W   R0,#SOF( _ParCnt )
003E60 8200           15619         MOV.B   R0L,[R0]
003E62 F306           15620         BEQ     _1104
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 255

ADDR   CODE            LINE SOURCELINE
                      15621 ; rs232cmd.c 4399                                       SCPIError = ParNotAllowed;
003E64 964842rr       15623         MOV.B   ES,#SEG( _SCPIError )
003E68 9908rrrr       15624         MOV.W   R0,#SOF( _SCPIError )
003E6C BA06           15625         MOV.W   [R0],#06H
003E6E FE71           15626         BR      _1117
003E6E FE71           15626         BR      _1117
003E70                15627 _1104:
                      15628 ; rs232cmd.c 4400                               else
                      15629 ; rs232cmd.c 4401                               {
                      15630 ; rs232cmd.c 4402                                       str = SystemPar[Calibration.ResetSystem].
                            LongName;
003E70 964842rr       15632         MOV.B   ES,#SEG( _Calibration+97 )
003E74 9908rrrr       15633         MOV.W   R0,#SOF( _Calibration+97 )
003E78 8200           15634         MOV.B   R0L,[R0]
003E7A E8000C         15635         MULU.B  R0L,#0CH
003E7D 8920           15636         MOV.W   R2,R0
003E7F B930           15637         MOVS.W  R3,#00H
003E81 9918rrrr       15638         MOV.W   R1,#SEG( _SystemPar )
003E85 9908rrrr       15639         MOV.W   R0,#SOF( _SystemPar )
003E89 0902           15640         ADD.W   R0,R2
003E8B 1913           15641         ADDC.W  R1,R3
003E8D 862C43         15642         MOV.B   CS,R1L
003E90 8820           15643         MOVC.W  R2,[R0+]
003E92 99040000       15644         CMP.W   R0,#00H
003E96 F202           15645         BNE     _1118
003E98 A64143         15646         ADDS.B  CS,#01H
003E98 A6414300       15646         ADDS.B  CS,#01H
003E9C                15647 _1118:
003E9C 8830           15648         MOVC.W  R3,[R0+]
003E9E 8953           15649         MOV.W   R5,R3
003EA0 8942           15650         MOV.W   R4,R2
                      15652 ; rs232cmd.c 4403       
                      15653 ; rs232cmd.c 4404                                       while ( *str)
003EA2 866C43         15655         MOV.B   CS,R3L
003EA5 8062           15656         MOVC.B  R3L,[R2+]
003EA7 F312           15657         BEQ     _1106
003EA7 F31200         15657         BEQ     _1106
003EAA                15658 _1105:
                      15659 ; rs232cmd.c 4405                                               rs232putchar( *str++);
003EAA 8915           15661         MOV.W   R1,R5
003EAC 8904           15662         MOV.W   R0,R4
003EAE 862C43         15663         MOV.B   CS,R1L
003EB1 8020           15664         MOVC.B  R1L,[R0+]
003EB3 8102           15665         MOV.B   R0L,R1L
                      15666         CALL    _rs232putchar
003EB5 C4rrrrrr       +15666 ;       FCALL   _rs232putchar
003EB9 99400001       15667         ADD.W   R4,#01H
003EBD 99510000       15668         ADDC.W  R5,#00H
003EC1 8915           15672         MOV.W   R1,R5
003EC3 8904           15673         MOV.W   R0,R4
003EC5 862C43         15674         MOV.B   CS,R1L
003EC8 8020           15675         MOVC.B  R1L,[R0+]
003ECA F2EF           15676         BNE     _1105
003ECC                15678 _1106:
                      15679 ; rs232cmd.c 4406       
                      15680 ; rs232cmd.c 4407                                       rs232putchar('\n');
003ECC 91080A         15682         MOV.B   R0L,#0AH
                      15683         CALL    _rs232putchar
003ECF C4rrrrrr       +15683 ;       FCALL   _rs232putchar
                      15684 ; rs232cmd.c 4408                               }
                      15685 ; rs232cmd.c 4409                       }
003ED3 FE3F           15687         BR      _1117
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 256

ADDR   CODE            LINE SOURCELINE
003ED3 FE3F00         15687         BR      _1117
003ED6                15688 _1107:
                      15689 ; rs232cmd.c 4410                       else
                      15690 ; rs232cmd.c 4411                       {
                      15691 ; rs232cmd.c 4412                               if ( ParCnt != 1)
003ED6 964842rr       15693         MOV.B   ES,#SEG( _ParCnt )
003EDA 9908rrrr       15694         MOV.W   R0,#SOF( _ParCnt )
003EDE 8200           15695         MOV.B   R0L,[R0]
003EE0 910401         15696         CMP.B   R0L,#01H
003EE3 F307           15697         BEQ     _1108
                      15698 ; rs232cmd.c 4413                                       SCPIError = SyntaxErr;
003EE5 964842rr       15700         MOV.B   ES,#SEG( _SCPIError )
003EE9 9908rrrr       15701         MOV.W   R0,#SOF( _SCPIError )
003EED BA03           15702         MOV.W   [R0],#03H
003EEF FE31           15703         BR      _1117
003EEF FE3100         15703         BR      _1117
003EF2                15704 _1108:
                      15705 ; rs232cmd.c 4414                               else
                      15706 ; rs232cmd.c 4415                               {
                      15707 ; rs232cmd.c 4416                                       system = FindParameter( Cmd, SystemPar);
003EF2 9918rrrr       15709         MOV.W   R1,#SEG( _Cmd )
003EF6 9908rrrr       15710         MOV.W   R0,#SOF( _Cmd )
003EFA 9938rrrr       15711         MOV.W   R3,#SEG( _SystemPar )
003EFE 9928rrrr       15712         MOV.W   R2,#SOF( _SystemPar )
003F02 C5107B         15713         CALL    _FindParameter
                      15715 ; rs232cmd.c 4417       
                      15716 ; rs232cmd.c 4418                                       if ( system == PAL_PALID)                
                                                            // If line7, (PAL w/ID), ever should
003F05 99040001       15718         CMP.W   R0,#01H
003F09 F208           15719         BNE     _1109
                      15720 ; rs232cmd.c 4419                                               SCPIError = DataOutOfRange;      
                                                    //  be supported remove this exception
003F0B 964842rr       15722         MOV.B   ES,#SEG( _SCPIError )
003F0F 9908rrrr       15723         MOV.W   R0,#SOF( _SCPIError )
003F13 9A080021       15724         MOV.W   [R0],#021H
003F17 FE1D           15725         BR      _1117
003F17 FE1D00         15725         BR      _1117
003F1A                15726 _1109:
                      15728 ; rs232cmd.c 4420                                       else                                     
                                    
                      15729 ; rs232cmd.c 4421                                       {       
                      15730 ; rs232cmd.c 4422                                               if ( system > -1)
003F1A 9904FFFF       15732         CMP.W   R0,#0FFFFH
003F1E FD13           15733         BLE     _1110
                      15734 ; rs232cmd.c 4423                                               {
                      15735 ; rs232cmd.c 4424                                                       Calibration.ResetSystem =
                             system;
003F20 964842rr       15737         MOV.B   ES,#SEG( _Calibration+97 )
003F24 9918rrrr       15738         MOV.W   R1,#SOF( _Calibration+97 )
003F28 8209           15739         MOV.B   [R1],R0L
                      15740 ; rs232cmd.c 4425       
                      15741 ; rs232cmd.c 4426                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
003F2A 9918rrrr       15743         MOV.W   R1,#SEG( _Calibration )
003F2E 9908rrrr       15744         MOV.W   R0,#SOF( _Calibration )
003F32 964842rr       15745         MOV.B   ES,#SEG( _CalibrationPtr )
003F36 9928rrrr       15746         MOV.W   R2,#SOF( _CalibrationPtr )
003F3A 8A22           15747         MOV.W   R2,[R2]
003F3C 993800E0       15748         MOV.W   R3,#0E0H
                      15749         CALL    _NV_Store
003F40 C4rrrrrr       +15749 ;       FCALL   _NV_Store
                      15750 ; rs232cmd.c 4427                                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 257

ADDR   CODE            LINE SOURCELINE
003F44 FE06           15752         BR      _1117
003F44 FE06           15752         BR      _1117
003F46                15753 _1110:
                      15754 ; rs232cmd.c 4428                                               else
                      15755 ; rs232cmd.c 4429                                                       SCPIError = DataOutOfRang
                            e;
003F46 964842rr       15757         MOV.B   ES,#SEG( _SCPIError )
003F4A 9908rrrr       15758         MOV.W   R0,#SOF( _SCPIError )
003F4E 9A080021       15759         MOV.W   [R0],#021H
                      15760 ; rs232cmd.c 4430                                       }
                      15761 ; rs232cmd.c 4431                               }
                      15762 ; rs232cmd.c 4432                       }
                      15763 ; rs232cmd.c 4433               }
003F52                15765 _1117:
                      15766 ; rs232cmd.c 4434       }
003F52 2F30           15768         POP.W   R4, R5
003F54 D680           15770         RET
                      15773 ; rs232cmd.c 4435       
                      15774 ; rs232cmd.c 4436       /************************************************************************
                            **/
                      15775 ; rs232cmd.c 4437       /* FactMainFMSDateProd                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      15776 ; rs232cmd.c 4438       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15777 ; rs232cmd.c 4439       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15778 ; rs232cmd.c 4440       /* Revised:       0006014                                                
                                                                                                                             
                                                                                    */
                      15779 ; rs232cmd.c 4441       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15780 ; rs232cmd.c 4442       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15781 ; rs232cmd.c 4443       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15782 ; rs232cmd.c 4444       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15783 ; rs232cmd.c 4445       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15784 ; rs232cmd.c 4446       /************************************************************************
                            **/
                      15785 ; rs232cmd.c 4447       void FactMainFMSDateProd( void)
                      15786 ; rs232cmd.c 4448       {
                      15787         ALIGN   1
                      15789         PUBLIC  _FactMainFMSDateProd
003F56                15790 _FactMainFMSDateProd:
003F56 0F30           15794         PUSH.W  R4, R5
003F58 9972001A       15796         SUB.W   R7,#01AH
                      15802 ; rs232cmd.c 4449               UI year, month, day;
                      15803 ; rs232cmd.c 4450               char buffer[20];
                      15804 ; rs232cmd.c 4451       
                      15805 ; rs232cmd.c 4452               if ( CmdExecute && !SCPIError)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 258

ADDR   CODE            LINE SOURCELINE
003F5C 964842rr       15807         MOV.B   ES,#SEG( _CmdExecute )
003F60 9908rrrr       15808         MOV.W   R0,#SOF( _CmdExecute )
003F64 8200           15809         MOV.B   R0L,[R0]
                      15810         BEQ     _1134
003F66 F202           +15810 ;       BNE     _LG_1072
003F68 D500C7         +15810 ;       JMP.L   _1134
003F6C D500C700       +15810 ;       JMP.L   _1134
003F6C                +15810 _LG_1072:
003F6C 964842rr       15811         MOV.B   ES,#SEG( _SCPIError )
003F70 9908rrrr       15812         MOV.W   R0,#SOF( _SCPIError )
003F74 8A00           15813         MOV.W   R0,[R0]
                      15814         BNE     _1134
003F76 F302           +15814 ;       BEQ     _LG_1074
003F78 D500BF         +15814 ;       JMP.L   _1134
003F7C D500BF00       +15814 ;       JMP.L   _1134
003F7C                +15814 _LG_1074:
                      15815 ; rs232cmd.c 4453               {
                      15816 ; rs232cmd.c 4454                       if ( CmdRequest)
003F7C 964842rr       15818         MOV.B   ES,#SEG( _CmdRequest )
003F80 9908rrrr       15819         MOV.W   R0,#SOF( _CmdRequest )
003F84 8200           15820         MOV.B   R0L,[R0]
003F86 F35A           15821         BEQ     _1124
                      15822 ; rs232cmd.c 4455                       {
                      15823 ; rs232cmd.c 4456                               if ( ParCnt)
003F88 964842rr       15825         MOV.B   ES,#SEG( _ParCnt )
003F8C 9908rrrr       15826         MOV.W   R0,#SOF( _ParCnt )
003F90 8200           15827         MOV.B   R0L,[R0]
003F92 F307           15828         BEQ     _1123
                      15829 ; rs232cmd.c 4457                                       SCPIError = SyntaxErr;
003F94 964842rr       15831         MOV.B   ES,#SEG( _SCPIError )
003F98 9908rrrr       15832         MOV.W   R0,#SOF( _SCPIError )
003F9C BA03           15833         MOV.W   [R0],#03H
                      15834         BR      _1134
003F9E D500AC         +15834         JMP.L   _1134
003F9E D500AC00       +15834         JMP.L   _1134
003FA2                15835 _1123:
                      15836 ; rs232cmd.c 4458                               else
                      15837 ; rs232cmd.c 4459                               {
                      15838 ; rs232cmd.c 4460                                       day = Calibration.ProdDate % 100;
003FA2 964842rr       15840         MOV.B   ES,#SEG( _Calibration+98 )
003FA6 9918rrrr       15841         MOV.W   R1,#SOF( _Calibration+98 )
003FAA 8B01           15842         MOV.W   R0,[R1+]
003FAC 8A11           15843         MOV.W   R1,[R1]
003FAE B930           15844         MOV.W   R3,#00H
003FB0 99280064       15845         MOV.W   R2,#064H
003FB4 964842rr       15846         MOV.B   ES,#SEG( _Calibration+98 )
003FB8 9948rrrr       15847         MOV.W   R4,#SOF( _Calibration+98 )
003FBC 8B0C           15848         MOV.W   [R4+],R0
003FBE 8A1C           15849         MOV.W   [R4],R1
003FC0 C4rrrrrr       15850         FCALL   __UMODL
003FC4 8C0F04         15851         MOV.W   [R7+4],R0
003FC7 964842rr       15852         MOV.B   ES,#SEG( _Calibration+98 )
003FCB 9918rrrr       15853         MOV.W   R1,#SOF( _Calibration+98 )
003FCF 8B01           15854         MOV.W   R0,[R1+]
003FD1 8A11           15855         MOV.W   R1,[R1]
                      15856 ; rs232cmd.c 4461                                       month = ( Calibration.ProdDate / 100) % 1
                            00;
003FD3 B930           15858         MOV.W   R3,#00H
003FD5 99280064       15859         MOV.W   R2,#064H
003FD9 8953           15860         MOV.W   R5,R3
003FDB 8942           15861         MOV.W   R4,R2
003FDD C4rrrrrr       15862         FCALL   __UDIVL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 259

ADDR   CODE            LINE SOURCELINE
003FE1 8935           15863         MOV.W   R3,R5
003FE3 8924           15864         MOV.W   R2,R4
003FE5 C4rrrrrr       15865         FCALL   __UMODL
003FE9 8C0F02         15866         MOV.W   [R7+2],R0
                      15867 ; rs232cmd.c 4462                                       year = ( Calibration.ProdDate / 10000);
003FEC B930           15869         MOV.W   R3,#00H
003FEE 99282710       15870         MOV.W   R2,#02710H
003FF2 964842rr       15871         MOV.B   ES,#SEG( _Calibration+98 )
003FF6 9918rrrr       15872         MOV.W   R1,#SOF( _Calibration+98 )
003FFA 8B01           15873         MOV.W   R0,[R1+]
003FFC 8A11           15874         MOV.W   R1,[R1]
003FFE C4rrrrrr       15875         FCALL   __UDIVL
004002 8A0F           15876         MOV.W   [R7],R0
                      15877 ; rs232cmd.c 4463       
                      15878 ; rs232cmd.c 4464                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
004004 91A8rr         15880         MOV.B   R5L,#SEG( __lc_bs )
004007 71BB           15881         XOR.B   R5H,R5H
004009 404706         15882         LEA     R4,R7+6
00400C 8C0704         15883         MOV.W   R0,[R7+4]
00400F 0F01           15884         PUSH.W  R0
004011 8C0704         15886         MOV.W   R0,[R7+4]
004014 0F01           15887         PUSH.W  R0
004016 8C0704         15889         MOV.W   R0,[R7+4]
004019 0F01           15890         PUSH.W  R0
00401B 9918rrrr       15892         MOV.W   R1,#SEG( _183 )
00401F 9908rrrr       15893         MOV.W   R0,#SOF( _183 )
004023 0F03           15894         PUSH.W  R0, R1
004025 8915           15896         MOV.W   R1,R5
004027 8904           15897         MOV.W   R0,R4
                      15898         CALL    _sprintf
004029 C4rrrrrr       +15898 ;       FCALL   _sprintf
00402D 9970000A       15899         ADD.W   R7,#0AH
                      15901 ; rs232cmd.c 4465       
                      15902 ; rs232cmd.c 4466                                       rs232puts( buffer);
004031 8915           15904         MOV.W   R1,R5
004033 8904           15905         MOV.W   R0,R4
                      15906         CALL    _rs232puts
004035 C4rrrrrr       +15906 ;       FCALL   _rs232puts
                      15907 ; rs232cmd.c 4467                               }
                      15908 ; rs232cmd.c 4468                       }
004039 FE5F           15910         BR      _1134
004039 FE5F00         15910         BR      _1134
00403C                15911 _1124:
                      15912 ; rs232cmd.c 4469                       else
                      15913 ; rs232cmd.c 4470                       {
                      15914 ; rs232cmd.c 4471                               if ( !PasswordProtected)
00403C 964842rr       15916         MOV.B   ES,#SEG( _PasswordProtected )
004040 9908rrrr       15917         MOV.W   R0,#SOF( _PasswordProtected )
004044 8A00           15918         MOV.W   R0,[R0]
004046 F258           15919         BNE     _1134
                      15920 ; rs232cmd.c 4472                               {
                      15921 ; rs232cmd.c 4473                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
004048 964842rr       15923         MOV.B   ES,#SEG( _ParCnt )
00404C 9908rrrr       15924         MOV.W   R0,#SOF( _ParCnt )
004050 8200           15925         MOV.B   R0L,[R0]
004052 910403         15926         CMP.B   R0L,#03H
004055 F21F           15927         BNE     _1125
004057 9168rr         15928         MOV.B   R3L,#SEG( __lc_bs )
00405A 7177           15929         XOR.B   R3H,R3H
00405C 8927           15930         MOV.W   R2,R7
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 260

ADDR   CODE            LINE SOURCELINE
00405E 91A8rr         15931         MOV.B   R5L,#SEG( __lc_bs )
004061 71BB           15932         XOR.B   R5H,R5H
004063 404702         15933         LEA     R4,R7+2
004066 9128rr         15934         MOV.B   R1L,#SEG( __lc_bs )
004069 7133           15935         XOR.B   R1H,R1H
00406B 400704         15936         LEA     R0,R7+4
00406E 0F03           15937         PUSH.W  R0, R1
004070 0F30           15939         PUSH.W  R4, R5
004072 0F0C           15941         PUSH.W  R2, R3
004074 9938rrrr       15943         MOV.W   R3,#SEG( _1122 )
004078 9928rrrr       15944         MOV.W   R2,#SOF( _1122 )
00407C 0F0C           15945         PUSH.W  R2, R3
00407E 9918rrrr       15947         MOV.W   R1,#SEG( _Cmd )
004082 9908rrrr       15948         MOV.W   R0,#SOF( _Cmd )
                      15949         CALL    _sscanf
004086 C4rrrrrr       +15949 ;       FCALL   _sscanf
00408A 99700010       15950         ADD.W   R7,#010H
00408E 99040003       15952         CMP.W   R0,#03H
004092 F306           15953         BEQ     _1126
004092 F306           15953         BEQ     _1126
004094                15954 _1125:
                      15955 ; rs232cmd.c 4474                                               SCPIError = SyntaxErr;
004094 964842rr       15957         MOV.B   ES,#SEG( _SCPIError )
004098 9908rrrr       15958         MOV.W   R0,#SOF( _SCPIError )
00409C BA03           15959         MOV.W   [R0],#03H
00409E FE2C           15960         BR      _1134
00409E FE2C           15960         BR      _1134
0040A0                15961 _1126:
                      15962 ; rs232cmd.c 4475                                       else
                      15963 ; rs232cmd.c 4476                                       {
                      15964 ; rs232cmd.c 4477                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0040A0 8A07           15966         MOV.W   R0,[R7]
0040A2 8C1702         15967         MOV.W   R1,[R7+2]
0040A5 8C2704         15968         MOV.W   R2,[R7+4]
                      15969         CALL    _ValidateDate
0040A8 C4rrrrrr       +15969 ;       FCALL   _ValidateDate
0040AC 6900           15970         OR.W    R0,R0
0040AE F207           15971         BNE     _1127
                      15972 ; rs232cmd.c 4478                                                       SCPIError = ExecErr;
0040B0 964842rr       15974         MOV.B   ES,#SEG( _SCPIError )
0040B4 9908rrrr       15975         MOV.W   R0,#SOF( _SCPIError )
0040B8 9A08001D       15976         MOV.W   [R0],#01DH
0040BC FE1D           15977         BR      _1134
0040BC FE1D           15977         BR      _1134
0040BE                15978 _1127:
                      15979 ; rs232cmd.c 4479                                               else
                      15980 ; rs232cmd.c 4480                                               {
                      15981 ; rs232cmd.c 4481                                                       Calibration.ProdDate = da
                            y + 100*month + 10000*year;
0040BE 8C0702         15983         MOV.W   R0,[R7+2]
0040C1 E9000064       15984         MULU.W  R0,#064H
0040C5 0C0704         15985         ADD.W   R0,[R7+4]
0040C8 8A27           15986         MOV.W   R2,[R7]
0040CA E9202710       15987         MULU.W  R2,#02710H
0040CE 0902           15988         ADD.W   R0,R2
0040D0 B910           15989         MOVS.W  R1,#00H
0040D2 964842rr       15990         MOV.B   ES,#SEG( _Calibration+98 )
0040D6 9928rrrr       15991         MOV.W   R2,#SOF( _Calibration+98 )
0040DA 8B0A           15992         MOV.W   [R2+],R0
0040DC 8A1A           15993         MOV.W   [R2],R1
                      15994 ; rs232cmd.c 4482                                               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 261

ADDR   CODE            LINE SOURCELINE
                      15995 ; rs232cmd.c 4483                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0040DE 9918rrrr       15997         MOV.W   R1,#SEG( _Calibration )
0040E2 9908rrrr       15998         MOV.W   R0,#SOF( _Calibration )
0040E6 964842rr       15999         MOV.B   ES,#SEG( _CalibrationPtr )
0040EA 9928rrrr       16000         MOV.W   R2,#SOF( _CalibrationPtr )
0040EE 8A22           16001         MOV.W   R2,[R2]
0040F0 993800E0       16002         MOV.W   R3,#0E0H
                      16003         CALL    _NV_Store
0040F4 C4rrrrrr       +16003 ;       FCALL   _NV_Store
                      16004 ; rs232cmd.c 4484                                               }
                      16005 ; rs232cmd.c 4485                                       }                               
                      16006 ; rs232cmd.c 4486                               }
                      16007 ; rs232cmd.c 4487                       }
                      16008 ; rs232cmd.c 4488               }
0040F8                16010 _1134:
                      16011 ; rs232cmd.c 4489       }
0040F8 9970001A       16013         ADD.W   R7,#01AH
0040FC 2F30           16015         POP.W   R4, R5
0040FE D680           16017         RET
                      16019 ; rs232cmd.c 4490       
                      16020 ; rs232cmd.c 4491       /************************************************************************
                            **/
                      16021 ; rs232cmd.c 4492       /* FactMainFMSDateUpd                                                    
                                                                                                                             
                                RS232CMD.C  */
                      16022 ; rs232cmd.c 4493       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16023 ; rs232cmd.c 4494       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      16024 ; rs232cmd.c 4495       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16025 ; rs232cmd.c 4496       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16026 ; rs232cmd.c 4497       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16027 ; rs232cmd.c 4498       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16028 ; rs232cmd.c 4499       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16029 ; rs232cmd.c 4500       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16030 ; rs232cmd.c 4501       /************************************************************************
                            **/
                      16031 ; rs232cmd.c 4502       void FactMainFMSDateUpd( void)
                      16032 ; rs232cmd.c 4503       {
                      16033         ALIGN   1
                      16035         PUBLIC  _FactMainFMSDateUpd
004100                16036 _FactMainFMSDateUpd:
004100 0F30           16040         PUSH.W  R4, R5
004102 9972001A       16042         SUB.W   R7,#01AH
                      16048 ; rs232cmd.c 4504               UI year, month, day;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 262

ADDR   CODE            LINE SOURCELINE
                      16049 ; rs232cmd.c 4505               char buffer[20];
                      16050 ; rs232cmd.c 4506       
                      16051 ; rs232cmd.c 4507               if ( CmdExecute && !SCPIError)
004106 964842rr       16053         MOV.B   ES,#SEG( _CmdExecute )
00410A 9908rrrr       16054         MOV.W   R0,#SOF( _CmdExecute )
00410E 8200           16055         MOV.B   R0L,[R0]
                      16056         BEQ     _1148
004110 F202           +16056 ;       BNE     _LG_1088
004112 D500C7         +16056 ;       JMP.L   _1148
004116 D500C700       +16056 ;       JMP.L   _1148
004116                +16056 _LG_1088:
004116 964842rr       16057         MOV.B   ES,#SEG( _SCPIError )
00411A 9908rrrr       16058         MOV.W   R0,#SOF( _SCPIError )
00411E 8A00           16059         MOV.W   R0,[R0]
                      16060         BNE     _1148
004120 F302           +16060 ;       BEQ     _LG_1090
004122 D500BF         +16060 ;       JMP.L   _1148
004126 D500BF00       +16060 ;       JMP.L   _1148
004126                +16060 _LG_1090:
                      16061 ; rs232cmd.c 4508               {
                      16062 ; rs232cmd.c 4509                       if ( CmdRequest)
004126 964842rr       16064         MOV.B   ES,#SEG( _CmdRequest )
00412A 9908rrrr       16065         MOV.W   R0,#SOF( _CmdRequest )
00412E 8200           16066         MOV.B   R0L,[R0]
004130 F35A           16067         BEQ     _1138
                      16068 ; rs232cmd.c 4510                       {
                      16069 ; rs232cmd.c 4511                               if ( ParCnt)
004132 964842rr       16071         MOV.B   ES,#SEG( _ParCnt )
004136 9908rrrr       16072         MOV.W   R0,#SOF( _ParCnt )
00413A 8200           16073         MOV.B   R0L,[R0]
00413C F307           16074         BEQ     _1137
                      16075 ; rs232cmd.c 4512                                       SCPIError = SyntaxErr;
00413E 964842rr       16077         MOV.B   ES,#SEG( _SCPIError )
004142 9908rrrr       16078         MOV.W   R0,#SOF( _SCPIError )
004146 BA03           16079         MOV.W   [R0],#03H
                      16080         BR      _1148
004148 D500AC         +16080         JMP.L   _1148
004148 D500AC00       +16080         JMP.L   _1148
00414C                16081 _1137:
                      16082 ; rs232cmd.c 4513                               else
                      16083 ; rs232cmd.c 4514                               {
                      16084 ; rs232cmd.c 4515                                       day = Calibration.UpdateDate % 100;
00414C 964842rr       16086         MOV.B   ES,#SEG( _Calibration+102 )
004150 9918rrrr       16087         MOV.W   R1,#SOF( _Calibration+102 )
004154 8B01           16088         MOV.W   R0,[R1+]
004156 8A11           16089         MOV.W   R1,[R1]
004158 B930           16090         MOV.W   R3,#00H
00415A 99280064       16091         MOV.W   R2,#064H
00415E 964842rr       16092         MOV.B   ES,#SEG( _Calibration+102 )
004162 9948rrrr       16093         MOV.W   R4,#SOF( _Calibration+102 )
004166 8B0C           16094         MOV.W   [R4+],R0
004168 8A1C           16095         MOV.W   [R4],R1
00416A C4rrrrrr       16096         FCALL   __UMODL
00416E 8C0F04         16097         MOV.W   [R7+4],R0
004171 964842rr       16098         MOV.B   ES,#SEG( _Calibration+102 )
004175 9918rrrr       16099         MOV.W   R1,#SOF( _Calibration+102 )
004179 8B01           16100         MOV.W   R0,[R1+]
00417B 8A11           16101         MOV.W   R1,[R1]
                      16102 ; rs232cmd.c 4516                                       month = ( Calibration.UpdateDate / 100) %
                             100;
00417D B930           16104         MOV.W   R3,#00H
00417F 99280064       16105         MOV.W   R2,#064H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 263

ADDR   CODE            LINE SOURCELINE
004183 8953           16106         MOV.W   R5,R3
004185 8942           16107         MOV.W   R4,R2
004187 C4rrrrrr       16108         FCALL   __UDIVL
00418B 8935           16109         MOV.W   R3,R5
00418D 8924           16110         MOV.W   R2,R4
00418F C4rrrrrr       16111         FCALL   __UMODL
004193 8C0F02         16112         MOV.W   [R7+2],R0
                      16113 ; rs232cmd.c 4517                                       year = ( Calibration.UpdateDate / 10000);
                            
004196 B930           16115         MOV.W   R3,#00H
004198 99282710       16116         MOV.W   R2,#02710H
00419C 964842rr       16117         MOV.B   ES,#SEG( _Calibration+102 )
0041A0 9918rrrr       16118         MOV.W   R1,#SOF( _Calibration+102 )
0041A4 8B01           16119         MOV.W   R0,[R1+]
0041A6 8A11           16120         MOV.W   R1,[R1]
0041A8 C4rrrrrr       16121         FCALL   __UDIVL
0041AC 8A0F           16122         MOV.W   [R7],R0
                      16123 ; rs232cmd.c 4518       
                      16124 ; rs232cmd.c 4519                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
0041AE 91A8rr         16126         MOV.B   R5L,#SEG( __lc_bs )
0041B1 71BB           16127         XOR.B   R5H,R5H
0041B3 404706         16128         LEA     R4,R7+6
0041B6 8C0704         16129         MOV.W   R0,[R7+4]
0041B9 0F01           16130         PUSH.W  R0
0041BB 8C0704         16132         MOV.W   R0,[R7+4]
0041BE 0F01           16133         PUSH.W  R0
0041C0 8C0704         16135         MOV.W   R0,[R7+4]
0041C3 0F01           16136         PUSH.W  R0
0041C5 9918rrrr       16138         MOV.W   R1,#SEG( _183 )
0041C9 9908rrrr       16139         MOV.W   R0,#SOF( _183 )
0041CD 0F03           16140         PUSH.W  R0, R1
0041CF 8915           16142         MOV.W   R1,R5
0041D1 8904           16143         MOV.W   R0,R4
                      16144         CALL    _sprintf
0041D3 C4rrrrrr       +16144 ;       FCALL   _sprintf
0041D7 9970000A       16145         ADD.W   R7,#0AH
                      16147 ; rs232cmd.c 4520       
                      16148 ; rs232cmd.c 4521                                       rs232puts( buffer);
0041DB 8915           16150         MOV.W   R1,R5
0041DD 8904           16151         MOV.W   R0,R4
                      16152         CALL    _rs232puts
0041DF C4rrrrrr       +16152 ;       FCALL   _rs232puts
                      16153 ; rs232cmd.c 4522                               }
                      16154 ; rs232cmd.c 4523                       }
0041E3 FE5F           16156         BR      _1148
0041E3 FE5F00         16156         BR      _1148
0041E6                16157 _1138:
                      16158 ; rs232cmd.c 4524                       else
                      16159 ; rs232cmd.c 4525                       {
                      16160 ; rs232cmd.c 4526                               if ( !PasswordProtected)
0041E6 964842rr       16162         MOV.B   ES,#SEG( _PasswordProtected )
0041EA 9908rrrr       16163         MOV.W   R0,#SOF( _PasswordProtected )
0041EE 8A00           16164         MOV.W   R0,[R0]
0041F0 F258           16165         BNE     _1148
                      16166 ; rs232cmd.c 4527                               {
                      16167 ; rs232cmd.c 4528                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
0041F2 964842rr       16169         MOV.B   ES,#SEG( _ParCnt )
0041F6 9908rrrr       16170         MOV.W   R0,#SOF( _ParCnt )
0041FA 8200           16171         MOV.B   R0L,[R0]
0041FC 910403         16172         CMP.B   R0L,#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 264

ADDR   CODE            LINE SOURCELINE
0041FF F21F           16173         BNE     _1139
004201 9168rr         16174         MOV.B   R3L,#SEG( __lc_bs )
004204 7177           16175         XOR.B   R3H,R3H
004206 8927           16176         MOV.W   R2,R7
004208 91A8rr         16177         MOV.B   R5L,#SEG( __lc_bs )
00420B 71BB           16178         XOR.B   R5H,R5H
00420D 404702         16179         LEA     R4,R7+2
004210 9128rr         16180         MOV.B   R1L,#SEG( __lc_bs )
004213 7133           16181         XOR.B   R1H,R1H
004215 400704         16182         LEA     R0,R7+4
004218 0F03           16183         PUSH.W  R0, R1
00421A 0F30           16185         PUSH.W  R4, R5
00421C 0F0C           16187         PUSH.W  R2, R3
00421E 9938rrrr       16189         MOV.W   R3,#SEG( _1122 )
004222 9928rrrr       16190         MOV.W   R2,#SOF( _1122 )
004226 0F0C           16191         PUSH.W  R2, R3
004228 9918rrrr       16193         MOV.W   R1,#SEG( _Cmd )
00422C 9908rrrr       16194         MOV.W   R0,#SOF( _Cmd )
                      16195         CALL    _sscanf
004230 C4rrrrrr       +16195 ;       FCALL   _sscanf
004234 99700010       16196         ADD.W   R7,#010H
004238 99040003       16198         CMP.W   R0,#03H
00423C F306           16199         BEQ     _1140
00423C F306           16199         BEQ     _1140
00423E                16200 _1139:
                      16201 ; rs232cmd.c 4529                                               SCPIError = SyntaxErr;
00423E 964842rr       16203         MOV.B   ES,#SEG( _SCPIError )
004242 9908rrrr       16204         MOV.W   R0,#SOF( _SCPIError )
004246 BA03           16205         MOV.W   [R0],#03H
004248 FE2C           16206         BR      _1148
004248 FE2C           16206         BR      _1148
00424A                16207 _1140:
                      16208 ; rs232cmd.c 4530                                       else
                      16209 ; rs232cmd.c 4531                                       {
                      16210 ; rs232cmd.c 4532                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
00424A 8A07           16212         MOV.W   R0,[R7]
00424C 8C1702         16213         MOV.W   R1,[R7+2]
00424F 8C2704         16214         MOV.W   R2,[R7+4]
                      16215         CALL    _ValidateDate
004252 C4rrrrrr       +16215 ;       FCALL   _ValidateDate
004256 6900           16216         OR.W    R0,R0
004258 F207           16217         BNE     _1141
                      16218 ; rs232cmd.c 4533                                                       SCPIError = ExecErr;
00425A 964842rr       16220         MOV.B   ES,#SEG( _SCPIError )
00425E 9908rrrr       16221         MOV.W   R0,#SOF( _SCPIError )
004262 9A08001D       16222         MOV.W   [R0],#01DH
004266 FE1D           16223         BR      _1148
004266 FE1D           16223         BR      _1148
004268                16224 _1141:
                      16225 ; rs232cmd.c 4534                                               else
                      16226 ; rs232cmd.c 4535                                               {
                      16227 ; rs232cmd.c 4536                                                       Calibration.UpdateDate = 
                            day + 100*month + 10000*year;
004268 8C0702         16229         MOV.W   R0,[R7+2]
00426B E9000064       16230         MULU.W  R0,#064H
00426F 0C0704         16231         ADD.W   R0,[R7+4]
004272 8A27           16232         MOV.W   R2,[R7]
004274 E9202710       16233         MULU.W  R2,#02710H
004278 0902           16234         ADD.W   R0,R2
00427A B910           16235         MOVS.W  R1,#00H
00427C 964842rr       16236         MOV.B   ES,#SEG( _Calibration+102 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 265

ADDR   CODE            LINE SOURCELINE
004280 9928rrrr       16237         MOV.W   R2,#SOF( _Calibration+102 )
004284 8B0A           16238         MOV.W   [R2+],R0
004286 8A1A           16239         MOV.W   [R2],R1
                      16240 ; rs232cmd.c 4537                                               
                      16241 ; rs232cmd.c 4538                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004288 9918rrrr       16243         MOV.W   R1,#SEG( _Calibration )
00428C 9908rrrr       16244         MOV.W   R0,#SOF( _Calibration )
004290 964842rr       16245         MOV.B   ES,#SEG( _CalibrationPtr )
004294 9928rrrr       16246         MOV.W   R2,#SOF( _CalibrationPtr )
004298 8A22           16247         MOV.W   R2,[R2]
00429A 993800E0       16248         MOV.W   R3,#0E0H
                      16249         CALL    _NV_Store
00429E C4rrrrrr       +16249 ;       FCALL   _NV_Store
                      16250 ; rs232cmd.c 4539                                               }
                      16251 ; rs232cmd.c 4540                                       }                               
                      16252 ; rs232cmd.c 4541                               }
                      16253 ; rs232cmd.c 4542                       }
                      16254 ; rs232cmd.c 4543               }
0042A2                16256 _1148:
                      16257 ; rs232cmd.c 4544       }
0042A2 9970001A       16259         ADD.W   R7,#01AH
0042A6 2F30           16261         POP.W   R4, R5
0042A8 D680           16263         RET
                      16265 ; rs232cmd.c 4545       
                      16266 ; rs232cmd.c 4546       /************************************************************************
                            **/
                      16267 ; rs232cmd.c 4547       /* FactGenlockGenDate                                                    
                                                                                                                             
                                RS232CMD.C  */
                      16268 ; rs232cmd.c 4548       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16269 ; rs232cmd.c 4549       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      16270 ; rs232cmd.c 4550       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16271 ; rs232cmd.c 4551       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16272 ; rs232cmd.c 4552       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16273 ; rs232cmd.c 4553       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16274 ; rs232cmd.c 4554       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16275 ; rs232cmd.c 4555       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16276 ; rs232cmd.c 4556       /************************************************************************
                            **/
                      16277 ; rs232cmd.c 4557       void FactGenlockGenDate( void)
                      16278 ; rs232cmd.c 4558       {
                      16279         ALIGN   1
                      16281         PUBLIC  _FactGenlockGenDate
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 266

ADDR   CODE            LINE SOURCELINE
0042AA                16282 _FactGenlockGenDate:
0042AA 0F30           16286         PUSH.W  R4, R5
0042AC 9972001A       16288         SUB.W   R7,#01AH
                      16294 ; rs232cmd.c 4559               UI year, month, day;
                      16295 ; rs232cmd.c 4560               char buffer[20];
                      16296 ; rs232cmd.c 4561       
                      16297 ; rs232cmd.c 4562               if ( CmdExecute && !SCPIError)
0042B0 964842rr       16299         MOV.B   ES,#SEG( _CmdExecute )
0042B4 9908rrrr       16300         MOV.W   R0,#SOF( _CmdExecute )
0042B8 8200           16301         MOV.B   R0L,[R0]
                      16302         BEQ     _1162
0042BA F202           +16302 ;       BNE     _LG_1104
0042BC D500C7         +16302 ;       JMP.L   _1162
0042C0 D500C700       +16302 ;       JMP.L   _1162
0042C0                +16302 _LG_1104:
0042C0 964842rr       16303         MOV.B   ES,#SEG( _SCPIError )
0042C4 9908rrrr       16304         MOV.W   R0,#SOF( _SCPIError )
0042C8 8A00           16305         MOV.W   R0,[R0]
                      16306         BNE     _1162
0042CA F302           +16306 ;       BEQ     _LG_1106
0042CC D500BF         +16306 ;       JMP.L   _1162
0042D0 D500BF00       +16306 ;       JMP.L   _1162
0042D0                +16306 _LG_1106:
                      16307 ; rs232cmd.c 4563               {
                      16308 ; rs232cmd.c 4564                       if ( CmdRequest)
0042D0 964842rr       16310         MOV.B   ES,#SEG( _CmdRequest )
0042D4 9908rrrr       16311         MOV.W   R0,#SOF( _CmdRequest )
0042D8 8200           16312         MOV.B   R0L,[R0]
0042DA F35A           16313         BEQ     _1152
                      16314 ; rs232cmd.c 4565                       {
                      16315 ; rs232cmd.c 4566                               if ( ParCnt)
0042DC 964842rr       16317         MOV.B   ES,#SEG( _ParCnt )
0042E0 9908rrrr       16318         MOV.W   R0,#SOF( _ParCnt )
0042E4 8200           16319         MOV.B   R0L,[R0]
0042E6 F307           16320         BEQ     _1151
                      16321 ; rs232cmd.c 4567                                       SCPIError = SyntaxErr;
0042E8 964842rr       16323         MOV.B   ES,#SEG( _SCPIError )
0042EC 9908rrrr       16324         MOV.W   R0,#SOF( _SCPIError )
0042F0 BA03           16325         MOV.W   [R0],#03H
                      16326         BR      _1162
0042F2 D500AC         +16326         JMP.L   _1162
0042F2 D500AC00       +16326         JMP.L   _1162
0042F6                16327 _1151:
                      16328 ; rs232cmd.c 4568                               else
                      16329 ; rs232cmd.c 4569                               {
                      16330 ; rs232cmd.c 4570                                       day = Calibration.GenlockCalibration.Date
                             % 100;
0042F6 964842rr       16332         MOV.B   ES,#SEG( _Calibration+106 )
0042FA 9918rrrr       16333         MOV.W   R1,#SOF( _Calibration+106 )
0042FE 8B01           16334         MOV.W   R0,[R1+]
004300 8A11           16335         MOV.W   R1,[R1]
004302 B930           16336         MOV.W   R3,#00H
004304 99280064       16337         MOV.W   R2,#064H
004308 964842rr       16338         MOV.B   ES,#SEG( _Calibration+106 )
00430C 9948rrrr       16339         MOV.W   R4,#SOF( _Calibration+106 )
004310 8B0C           16340         MOV.W   [R4+],R0
004312 8A1C           16341         MOV.W   [R4],R1
004314 C4rrrrrr       16342         FCALL   __UMODL
004318 8C0F04         16343         MOV.W   [R7+4],R0
00431B 964842rr       16344         MOV.B   ES,#SEG( _Calibration+106 )
00431F 9918rrrr       16345         MOV.W   R1,#SOF( _Calibration+106 )
004323 8B01           16346         MOV.W   R0,[R1+]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 267

ADDR   CODE            LINE SOURCELINE
004325 8A11           16347         MOV.W   R1,[R1]
                      16348 ; rs232cmd.c 4571                                       month = ( Calibration.GenlockCalibration.
                            Date / 100) % 100;
004327 B930           16350         MOV.W   R3,#00H
004329 99280064       16351         MOV.W   R2,#064H
00432D 8953           16352         MOV.W   R5,R3
00432F 8942           16353         MOV.W   R4,R2
004331 C4rrrrrr       16354         FCALL   __UDIVL
004335 8935           16355         MOV.W   R3,R5
004337 8924           16356         MOV.W   R2,R4
004339 C4rrrrrr       16357         FCALL   __UMODL
00433D 8C0F02         16358         MOV.W   [R7+2],R0
                      16359 ; rs232cmd.c 4572                                       year = ( Calibration.GenlockCalibration.D
                            ate / 10000);
004340 B930           16361         MOV.W   R3,#00H
004342 99282710       16362         MOV.W   R2,#02710H
004346 964842rr       16363         MOV.B   ES,#SEG( _Calibration+106 )
00434A 9918rrrr       16364         MOV.W   R1,#SOF( _Calibration+106 )
00434E 8B01           16365         MOV.W   R0,[R1+]
004350 8A11           16366         MOV.W   R1,[R1]
004352 C4rrrrrr       16367         FCALL   __UDIVL
004356 8A0F           16368         MOV.W   [R7],R0
                      16369 ; rs232cmd.c 4573       
                      16370 ; rs232cmd.c 4574                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
004358 91A8rr         16372         MOV.B   R5L,#SEG( __lc_bs )
00435B 71BB           16373         XOR.B   R5H,R5H
00435D 404706         16374         LEA     R4,R7+6
004360 8C0704         16375         MOV.W   R0,[R7+4]
004363 0F01           16376         PUSH.W  R0
004365 8C0704         16378         MOV.W   R0,[R7+4]
004368 0F01           16379         PUSH.W  R0
00436A 8C0704         16381         MOV.W   R0,[R7+4]
00436D 0F01           16382         PUSH.W  R0
00436F 9918rrrr       16384         MOV.W   R1,#SEG( _183 )
004373 9908rrrr       16385         MOV.W   R0,#SOF( _183 )
004377 0F03           16386         PUSH.W  R0, R1
004379 8915           16388         MOV.W   R1,R5
00437B 8904           16389         MOV.W   R0,R4
                      16390         CALL    _sprintf
00437D C4rrrrrr       +16390 ;       FCALL   _sprintf
004381 9970000A       16391         ADD.W   R7,#0AH
                      16393 ; rs232cmd.c 4575       
                      16394 ; rs232cmd.c 4576                                       rs232puts( buffer);
004385 8915           16396         MOV.W   R1,R5
004387 8904           16397         MOV.W   R0,R4
                      16398         CALL    _rs232puts
004389 C4rrrrrr       +16398 ;       FCALL   _rs232puts
                      16399 ; rs232cmd.c 4577                               }
                      16400 ; rs232cmd.c 4578                       }
00438D FE5F           16402         BR      _1162
00438D FE5F00         16402         BR      _1162
004390                16403 _1152:
                      16404 ; rs232cmd.c 4579                       else
                      16405 ; rs232cmd.c 4580                       {
                      16406 ; rs232cmd.c 4581                               if ( !PasswordProtected)
004390 964842rr       16408         MOV.B   ES,#SEG( _PasswordProtected )
004394 9908rrrr       16409         MOV.W   R0,#SOF( _PasswordProtected )
004398 8A00           16410         MOV.W   R0,[R0]
00439A F258           16411         BNE     _1162
                      16412 ; rs232cmd.c 4582                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 268

ADDR   CODE            LINE SOURCELINE
                      16413 ; rs232cmd.c 4583                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
00439C 964842rr       16415         MOV.B   ES,#SEG( _ParCnt )
0043A0 9908rrrr       16416         MOV.W   R0,#SOF( _ParCnt )
0043A4 8200           16417         MOV.B   R0L,[R0]
0043A6 910403         16418         CMP.B   R0L,#03H
0043A9 F21F           16419         BNE     _1153
0043AB 9168rr         16420         MOV.B   R3L,#SEG( __lc_bs )
0043AE 7177           16421         XOR.B   R3H,R3H
0043B0 8927           16422         MOV.W   R2,R7
0043B2 91A8rr         16423         MOV.B   R5L,#SEG( __lc_bs )
0043B5 71BB           16424         XOR.B   R5H,R5H
0043B7 404702         16425         LEA     R4,R7+2
0043BA 9128rr         16426         MOV.B   R1L,#SEG( __lc_bs )
0043BD 7133           16427         XOR.B   R1H,R1H
0043BF 400704         16428         LEA     R0,R7+4
0043C2 0F03           16429         PUSH.W  R0, R1
0043C4 0F30           16431         PUSH.W  R4, R5
0043C6 0F0C           16433         PUSH.W  R2, R3
0043C8 9938rrrr       16435         MOV.W   R3,#SEG( _1122 )
0043CC 9928rrrr       16436         MOV.W   R2,#SOF( _1122 )
0043D0 0F0C           16437         PUSH.W  R2, R3
0043D2 9918rrrr       16439         MOV.W   R1,#SEG( _Cmd )
0043D6 9908rrrr       16440         MOV.W   R0,#SOF( _Cmd )
                      16441         CALL    _sscanf
0043DA C4rrrrrr       +16441 ;       FCALL   _sscanf
0043DE 99700010       16442         ADD.W   R7,#010H
0043E2 99040003       16444         CMP.W   R0,#03H
0043E6 F306           16445         BEQ     _1154
0043E6 F306           16445         BEQ     _1154
0043E8                16446 _1153:
                      16447 ; rs232cmd.c 4584                                               SCPIError = SyntaxErr;
0043E8 964842rr       16449         MOV.B   ES,#SEG( _SCPIError )
0043EC 9908rrrr       16450         MOV.W   R0,#SOF( _SCPIError )
0043F0 BA03           16451         MOV.W   [R0],#03H
0043F2 FE2C           16452         BR      _1162
0043F2 FE2C           16452         BR      _1162
0043F4                16453 _1154:
                      16454 ; rs232cmd.c 4585                                       else
                      16455 ; rs232cmd.c 4586                                       {
                      16456 ; rs232cmd.c 4587                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0043F4 8A07           16458         MOV.W   R0,[R7]
0043F6 8C1702         16459         MOV.W   R1,[R7+2]
0043F9 8C2704         16460         MOV.W   R2,[R7+4]
                      16461         CALL    _ValidateDate
0043FC C4rrrrrr       +16461 ;       FCALL   _ValidateDate
004400 6900           16462         OR.W    R0,R0
004402 F207           16463         BNE     _1155
                      16464 ; rs232cmd.c 4588                                                       SCPIError = ExecErr;
004404 964842rr       16466         MOV.B   ES,#SEG( _SCPIError )
004408 9908rrrr       16467         MOV.W   R0,#SOF( _SCPIError )
00440C 9A08001D       16468         MOV.W   [R0],#01DH
004410 FE1D           16469         BR      _1162
004410 FE1D           16469         BR      _1162
004412                16470 _1155:
                      16471 ; rs232cmd.c 4589                                               else
                      16472 ; rs232cmd.c 4590                                               {
                      16473 ; rs232cmd.c 4591                                                       Calibration.GenlockCalibr
                            ation.Date = day + 100*month + 10000*year;
004412 8C0702         16475         MOV.W   R0,[R7+2]
004415 E9000064       16476         MULU.W  R0,#064H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 269

ADDR   CODE            LINE SOURCELINE
004419 0C0704         16477         ADD.W   R0,[R7+4]
00441C 8A27           16478         MOV.W   R2,[R7]
00441E E9202710       16479         MULU.W  R2,#02710H
004422 0902           16480         ADD.W   R0,R2
004424 B910           16481         MOVS.W  R1,#00H
004426 964842rr       16482         MOV.B   ES,#SEG( _Calibration+106 )
00442A 9928rrrr       16483         MOV.W   R2,#SOF( _Calibration+106 )
00442E 8B0A           16484         MOV.W   [R2+],R0
004430 8A1A           16485         MOV.W   [R2],R1
                      16486 ; rs232cmd.c 4592                                               
                      16487 ; rs232cmd.c 4593                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004432 9918rrrr       16489         MOV.W   R1,#SEG( _Calibration )
004436 9908rrrr       16490         MOV.W   R0,#SOF( _Calibration )
00443A 964842rr       16491         MOV.B   ES,#SEG( _CalibrationPtr )
00443E 9928rrrr       16492         MOV.W   R2,#SOF( _CalibrationPtr )
004442 8A22           16493         MOV.W   R2,[R2]
004444 993800E0       16494         MOV.W   R3,#0E0H
                      16495         CALL    _NV_Store
004448 C4rrrrrr       +16495 ;       FCALL   _NV_Store
                      16496 ; rs232cmd.c 4594                                               }
                      16497 ; rs232cmd.c 4595                                       }                               
                      16498 ; rs232cmd.c 4596                               }
                      16499 ; rs232cmd.c 4597                       }
                      16500 ; rs232cmd.c 4598               }
00444C                16502 _1162:
                      16503 ; rs232cmd.c 4599       }
00444C 9970001A       16505         ADD.W   R7,#01AH
004450 2F30           16507         POP.W   R4, R5
004452 D680           16509         RET
                      16511 ; rs232cmd.c 4600       
                      16512 ; rs232cmd.c 4601       /************************************************************************
                            **/
                      16513 ; rs232cmd.c 4602       /* FactGenlockGenVersion                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      16514 ; rs232cmd.c 4603       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16515 ; rs232cmd.c 4604       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16516 ; rs232cmd.c 4605       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16517 ; rs232cmd.c 4606       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16518 ; rs232cmd.c 4607       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16519 ; rs232cmd.c 4608       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16520 ; rs232cmd.c 4609       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16521 ; rs232cmd.c 4610       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 270

ADDR   CODE            LINE SOURCELINE
                      16522 ; rs232cmd.c 4611       /************************************************************************
                            **/
                      16523 ; rs232cmd.c 4612       void FactGenlockGenVersion( void)
                      16524 ; rs232cmd.c 4613       {
                      16525         ALIGN   1
                      16527         PUBLIC  _FactGenlockGenVersion
004454                16528 _FactGenlockGenVersion:
004454 0F30           16532         PUSH.W  R4, R5
004456 9972000A       16534         SUB.W   R7,#0AH
                      16538 ; rs232cmd.c 4614               char result[10];
                      16539 ; rs232cmd.c 4615       
                      16540 ; rs232cmd.c 4616               if ( CmdExecute && !SCPIError)
00445A 964842rr       16542         MOV.B   ES,#SEG( _CmdExecute )
00445E 9908rrrr       16543         MOV.W   R0,#SOF( _CmdExecute )
004462 8200           16544         MOV.B   R0L,[R0]
004464 F337           16545         BEQ     _1172
004466 964842rr       16546         MOV.B   ES,#SEG( _SCPIError )
00446A 9908rrrr       16547         MOV.W   R0,#SOF( _SCPIError )
00446E 8A00           16548         MOV.W   R0,[R0]
004470 F231           16549         BNE     _1172
                      16550 ; rs232cmd.c 4617               {
                      16551 ; rs232cmd.c 4618                       if ( CmdRequest)
004472 964842rr       16553         MOV.B   ES,#SEG( _CmdRequest )
004476 9908rrrr       16554         MOV.W   R0,#SOF( _CmdRequest )
00447A 8200           16555         MOV.B   R0L,[R0]
00447C F326           16556         BEQ     _1167
                      16557 ; rs232cmd.c 4619                       {
                      16558 ; rs232cmd.c 4620                               if ( ParCnt)
00447E 964842rr       16560         MOV.B   ES,#SEG( _ParCnt )
004482 9908rrrr       16561         MOV.W   R0,#SOF( _ParCnt )
004486 8200           16562         MOV.B   R0L,[R0]
004488 F306           16563         BEQ     _1165
                      16564 ; rs232cmd.c 4621                                       SCPIError = SyntaxErr;
00448A 964842rr       16566         MOV.B   ES,#SEG( _SCPIError )
00448E 9908rrrr       16567         MOV.W   R0,#SOF( _SCPIError )
004492 BA03           16568         MOV.W   [R0],#03H
004494 FE1F           16569         BR      _1172
004494 FE1F           16569         BR      _1172
004496                16570 _1165:
                      16571 ; rs232cmd.c 4622                               else
                      16572 ; rs232cmd.c 4623                               {
                      16573 ; rs232cmd.c 4624                                       if ( GenlockVersion( result) == OK)
004496 91A8rr         16575         MOV.B   R5L,#SEG( __lc_bs )
004499 71BB           16576         XOR.B   R5H,R5H
00449B 8947           16577         MOV.W   R4,R7
00449D 8915           16578         MOV.W   R1,R5
00449F 8904           16579         MOV.W   R0,R4
                      16580         CALL    _GenlockVersion
0044A1 C4rrrrrr       +16580 ;       FCALL   _GenlockVersion
0044A5 9904FFFF       16581         CMP.W   R0,#0FFFFH
0044A9 F209           16582         BNE     _1166
                      16583 ; rs232cmd.c 4625                                       {
                      16584 ; rs232cmd.c 4626                                               rs232puts( result);
0044AB 8915           16586         MOV.W   R1,R5
0044AD 8904           16587         MOV.W   R0,R4
                      16588         CALL    _rs232puts
0044AF C4rrrrrr       +16588 ;       FCALL   _rs232puts
                      16589 ; rs232cmd.c 4627                                               rs232putchar( '\n');
0044B3 91080A         16591         MOV.B   R0L,#0AH
                      16592         CALL    _rs232putchar
0044B6 C4rrrrrr       +16592 ;       FCALL   _rs232putchar
                      16593 ; rs232cmd.c 4628                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 271

ADDR   CODE            LINE SOURCELINE
0044BA FE0C           16595         BR      _1172
0044BA FE0C           16595         BR      _1172
0044BC                16596 _1166:
                      16597 ; rs232cmd.c 4629                                       else
                      16598 ; rs232cmd.c 4630                                               SCPIError = ExecErr;             
                                    
0044BC 964842rr       16600         MOV.B   ES,#SEG( _SCPIError )
0044C0 9908rrrr       16601         MOV.W   R0,#SOF( _SCPIError )
0044C4 9A08001D       16602         MOV.W   [R0],#01DH
                      16603 ; rs232cmd.c 4631                               }
                      16604 ; rs232cmd.c 4632                       }
0044C8 FE05           16606         BR      _1172
0044C8 FE05           16606         BR      _1172
0044CA                16607 _1167:
                      16608 ; rs232cmd.c 4633                       else
                      16609 ; rs232cmd.c 4634                               SCPIError = SyntaxErr;
0044CA 964842rr       16611         MOV.B   ES,#SEG( _SCPIError )
0044CE 9908rrrr       16612         MOV.W   R0,#SOF( _SCPIError )
0044D2 BA03           16613         MOV.W   [R0],#03H
                      16614 ; rs232cmd.c 4635               }
0044D4                16616 _1172:
                      16617 ; rs232cmd.c 4636       }
0044D4 9970000A       16619         ADD.W   R7,#0AH
0044D8 2F30           16621         POP.W   R4, R5
0044DA D680           16623         RET
                      16625 ; rs232cmd.c 4637       
                      16626 ; rs232cmd.c 4638       /************************************************************************
                            **/
                      16627 ; rs232cmd.c 4639       /* FactGenlockGenFRefDate                                                
                                                                                                                         RS23
                            2CMD.C  */
                      16628 ; rs232cmd.c 4640       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16629 ; rs232cmd.c 4641       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16630 ; rs232cmd.c 4642       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      16631 ; rs232cmd.c 4643       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16632 ; rs232cmd.c 4644       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16633 ; rs232cmd.c 4645       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16634 ; rs232cmd.c 4646       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16635 ; rs232cmd.c 4647       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16636 ; rs232cmd.c 4648       /************************************************************************
                            **/
                      16637 ; rs232cmd.c 4649       void FactGenlockGenFRefDate( void)
                      16638 ; rs232cmd.c 4650       {
                      16639         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 272

ADDR   CODE            LINE SOURCELINE
                      16641         PUBLIC  _FactGenlockGenFRefDate
0044DC                16642 _FactGenlockGenFRefDate:
0044DC 0F30           16646         PUSH.W  R4, R5
0044DE 9972001A       16648         SUB.W   R7,#01AH
                      16654 ; rs232cmd.c 4651               UI year, month, day;
                      16655 ; rs232cmd.c 4652               char buffer[20];
                      16656 ; rs232cmd.c 4653       
                      16657 ; rs232cmd.c 4654               if ( CmdExecute && !SCPIError)
0044E2 964842rr       16659         MOV.B   ES,#SEG( _CmdExecute )
0044E6 9908rrrr       16660         MOV.W   R0,#SOF( _CmdExecute )
0044EA 8200           16661         MOV.B   R0L,[R0]
                      16662         BEQ     _1187
0044EC F202           +16662 ;       BNE     _LG_1130
0044EE D500C7         +16662 ;       JMP.L   _1187
0044F2 D500C700       +16662 ;       JMP.L   _1187
0044F2                +16662 _LG_1130:
0044F2 964842rr       16663         MOV.B   ES,#SEG( _SCPIError )
0044F6 9908rrrr       16664         MOV.W   R0,#SOF( _SCPIError )
0044FA 8A00           16665         MOV.W   R0,[R0]
                      16666         BNE     _1187
0044FC F302           +16666 ;       BEQ     _LG_1132
0044FE D500BF         +16666 ;       JMP.L   _1187
004502 D500BF00       +16666 ;       JMP.L   _1187
004502                +16666 _LG_1132:
                      16667 ; rs232cmd.c 4655               {
                      16668 ; rs232cmd.c 4656                       if ( CmdRequest)
004502 964842rr       16670         MOV.B   ES,#SEG( _CmdRequest )
004506 9908rrrr       16671         MOV.W   R0,#SOF( _CmdRequest )
00450A 8200           16672         MOV.B   R0L,[R0]
00450C F35A           16673         BEQ     _1177
                      16674 ; rs232cmd.c 4657                       {
                      16675 ; rs232cmd.c 4658                               if ( ParCnt)
00450E 964842rr       16677         MOV.B   ES,#SEG( _ParCnt )
004512 9908rrrr       16678         MOV.W   R0,#SOF( _ParCnt )
004516 8200           16679         MOV.B   R0L,[R0]
004518 F307           16680         BEQ     _1176
                      16681 ; rs232cmd.c 4659                                       SCPIError = SyntaxErr;
00451A 964842rr       16683         MOV.B   ES,#SEG( _SCPIError )
00451E 9908rrrr       16684         MOV.W   R0,#SOF( _SCPIError )
004522 BA03           16685         MOV.W   [R0],#03H
                      16686         BR      _1187
004524 D500AC         +16686         JMP.L   _1187
004524 D500AC00       +16686         JMP.L   _1187
004528                16687 _1176:
                      16688 ; rs232cmd.c 4660                               else
                      16689 ; rs232cmd.c 4661                               {
                      16690 ; rs232cmd.c 4662                                       day = Calibration.GenlockCalibration.DACF
                            actDate % 100;
004528 964842rr       16692         MOV.B   ES,#SEG( _Calibration+110 )
00452C 9918rrrr       16693         MOV.W   R1,#SOF( _Calibration+110 )
004530 8B01           16694         MOV.W   R0,[R1+]
004532 8A11           16695         MOV.W   R1,[R1]
004534 B930           16696         MOV.W   R3,#00H
004536 99280064       16697         MOV.W   R2,#064H
00453A 964842rr       16698         MOV.B   ES,#SEG( _Calibration+110 )
00453E 9948rrrr       16699         MOV.W   R4,#SOF( _Calibration+110 )
004542 8B0C           16700         MOV.W   [R4+],R0
004544 8A1C           16701         MOV.W   [R4],R1
004546 C4rrrrrr       16702         FCALL   __UMODL
00454A 8C0F04         16703         MOV.W   [R7+4],R0
00454D 964842rr       16704         MOV.B   ES,#SEG( _Calibration+110 )
004551 9918rrrr       16705         MOV.W   R1,#SOF( _Calibration+110 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 273

ADDR   CODE            LINE SOURCELINE
004555 8B01           16706         MOV.W   R0,[R1+]
004557 8A11           16707         MOV.W   R1,[R1]
                      16708 ; rs232cmd.c 4663                                       month = ( Calibration.GenlockCalibration.
                            DACFactDate / 100) % 100;
004559 B930           16710         MOV.W   R3,#00H
00455B 99280064       16711         MOV.W   R2,#064H
00455F 8953           16712         MOV.W   R5,R3
004561 8942           16713         MOV.W   R4,R2
004563 C4rrrrrr       16714         FCALL   __UDIVL
004567 8935           16715         MOV.W   R3,R5
004569 8924           16716         MOV.W   R2,R4
00456B C4rrrrrr       16717         FCALL   __UMODL
00456F 8C0F02         16718         MOV.W   [R7+2],R0
                      16719 ; rs232cmd.c 4664                                       year = ( Calibration.GenlockCalibration.D
                            ACFactDate / 10000);
004572 B930           16721         MOV.W   R3,#00H
004574 99282710       16722         MOV.W   R2,#02710H
004578 964842rr       16723         MOV.B   ES,#SEG( _Calibration+110 )
00457C 9918rrrr       16724         MOV.W   R1,#SOF( _Calibration+110 )
004580 8B01           16725         MOV.W   R0,[R1+]
004582 8A11           16726         MOV.W   R1,[R1]
004584 C4rrrrrr       16727         FCALL   __UDIVL
004588 8A0F           16728         MOV.W   [R7],R0
                      16729 ; rs232cmd.c 4665       
                      16730 ; rs232cmd.c 4666                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
00458A 91A8rr         16732         MOV.B   R5L,#SEG( __lc_bs )
00458D 71BB           16733         XOR.B   R5H,R5H
00458F 404706         16734         LEA     R4,R7+6
004592 8C0704         16735         MOV.W   R0,[R7+4]
004595 0F01           16736         PUSH.W  R0
004597 8C0704         16738         MOV.W   R0,[R7+4]
00459A 0F01           16739         PUSH.W  R0
00459C 8C0704         16741         MOV.W   R0,[R7+4]
00459F 0F01           16742         PUSH.W  R0
0045A1 9918rrrr       16744         MOV.W   R1,#SEG( _1174 )
0045A5 9908rrrr       16745         MOV.W   R0,#SOF( _1174 )
0045A9 0F03           16746         PUSH.W  R0, R1
0045AB 8915           16748         MOV.W   R1,R5
0045AD 8904           16749         MOV.W   R0,R4
                      16750         CALL    _sprintf
0045AF C4rrrrrr       +16750 ;       FCALL   _sprintf
0045B3 9970000A       16751         ADD.W   R7,#0AH
                      16753 ; rs232cmd.c 4667       
                      16754 ; rs232cmd.c 4668                                       rs232puts( buffer);
0045B7 8915           16756         MOV.W   R1,R5
0045B9 8904           16757         MOV.W   R0,R4
                      16758         CALL    _rs232puts
0045BB C4rrrrrr       +16758 ;       FCALL   _rs232puts
                      16759 ; rs232cmd.c 4669                               }
                      16760 ; rs232cmd.c 4670                       }
0045BF FE5F           16762         BR      _1187
0045BF FE5F00         16762         BR      _1187
0045C2                16763 _1177:
                      16764 ; rs232cmd.c 4671                       else
                      16765 ; rs232cmd.c 4672                       {
                      16766 ; rs232cmd.c 4673                               if ( !PasswordProtected)
0045C2 964842rr       16768         MOV.B   ES,#SEG( _PasswordProtected )
0045C6 9908rrrr       16769         MOV.W   R0,#SOF( _PasswordProtected )
0045CA 8A00           16770         MOV.W   R0,[R0]
0045CC F258           16771         BNE     _1187
                      16772 ; rs232cmd.c 4674                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 274

ADDR   CODE            LINE SOURCELINE
                      16773 ; rs232cmd.c 4675                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
0045CE 964842rr       16775         MOV.B   ES,#SEG( _ParCnt )
0045D2 9908rrrr       16776         MOV.W   R0,#SOF( _ParCnt )
0045D6 8200           16777         MOV.B   R0L,[R0]
0045D8 910403         16778         CMP.B   R0L,#03H
0045DB F21F           16779         BNE     _1178
0045DD 9168rr         16780         MOV.B   R3L,#SEG( __lc_bs )
0045E0 7177           16781         XOR.B   R3H,R3H
0045E2 8927           16782         MOV.W   R2,R7
0045E4 91A8rr         16783         MOV.B   R5L,#SEG( __lc_bs )
0045E7 71BB           16784         XOR.B   R5H,R5H
0045E9 404702         16785         LEA     R4,R7+2
0045EC 9128rr         16786         MOV.B   R1L,#SEG( __lc_bs )
0045EF 7133           16787         XOR.B   R1H,R1H
0045F1 400704         16788         LEA     R0,R7+4
0045F4 0F03           16789         PUSH.W  R0, R1
0045F6 0F30           16791         PUSH.W  R4, R5
0045F8 0F0C           16793         PUSH.W  R2, R3
0045FA 9938rrrr       16795         MOV.W   R3,#SEG( _1175 )
0045FE 9928rrrr       16796         MOV.W   R2,#SOF( _1175 )
004602 0F0C           16797         PUSH.W  R2, R3
004604 9918rrrr       16799         MOV.W   R1,#SEG( _Cmd )
004608 9908rrrr       16800         MOV.W   R0,#SOF( _Cmd )
                      16801         CALL    _sscanf
00460C C4rrrrrr       +16801 ;       FCALL   _sscanf
004610 99700010       16802         ADD.W   R7,#010H
004614 99040003       16804         CMP.W   R0,#03H
004618 F306           16805         BEQ     _1179
004618 F306           16805         BEQ     _1179
00461A                16806 _1178:
                      16807 ; rs232cmd.c 4676                                               SCPIError = SyntaxErr;
00461A 964842rr       16809         MOV.B   ES,#SEG( _SCPIError )
00461E 9908rrrr       16810         MOV.W   R0,#SOF( _SCPIError )
004622 BA03           16811         MOV.W   [R0],#03H
004624 FE2C           16812         BR      _1187
004624 FE2C           16812         BR      _1187
004626                16813 _1179:
                      16814 ; rs232cmd.c 4677                                       else
                      16815 ; rs232cmd.c 4678                                       {
                      16816 ; rs232cmd.c 4679                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004626 8A07           16818         MOV.W   R0,[R7]
004628 8C1702         16819         MOV.W   R1,[R7+2]
00462B 8C2704         16820         MOV.W   R2,[R7+4]
                      16821         CALL    _ValidateDate
00462E C4rrrrrr       +16821 ;       FCALL   _ValidateDate
004632 6900           16822         OR.W    R0,R0
004634 F207           16823         BNE     _1180
                      16824 ; rs232cmd.c 4680                                                       SCPIError = ExecErr;
004636 964842rr       16826         MOV.B   ES,#SEG( _SCPIError )
00463A 9908rrrr       16827         MOV.W   R0,#SOF( _SCPIError )
00463E 9A08001D       16828         MOV.W   [R0],#01DH
004642 FE1D           16829         BR      _1187
004642 FE1D           16829         BR      _1187
004644                16830 _1180:
                      16831 ; rs232cmd.c 4681                                               else
                      16832 ; rs232cmd.c 4682                                               {
                      16833 ; rs232cmd.c 4683                                                       Calibration.GenlockCalibr
                            ation.DACFactDate = day + 100*month + 10000*year;
004644 8C0702         16835         MOV.W   R0,[R7+2]
004647 E9000064       16836         MULU.W  R0,#064H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 275

ADDR   CODE            LINE SOURCELINE
00464B 0C0704         16837         ADD.W   R0,[R7+4]
00464E 8A27           16838         MOV.W   R2,[R7]
004650 E9202710       16839         MULU.W  R2,#02710H
004654 0902           16840         ADD.W   R0,R2
004656 B910           16841         MOVS.W  R1,#00H
004658 964842rr       16842         MOV.B   ES,#SEG( _Calibration+110 )
00465C 9928rrrr       16843         MOV.W   R2,#SOF( _Calibration+110 )
004660 8B0A           16844         MOV.W   [R2+],R0
004662 8A1A           16845         MOV.W   [R2],R1
                      16846 ; rs232cmd.c 4684                                               
                      16847 ; rs232cmd.c 4685                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004664 9918rrrr       16849         MOV.W   R1,#SEG( _Calibration )
004668 9908rrrr       16850         MOV.W   R0,#SOF( _Calibration )
00466C 964842rr       16851         MOV.B   ES,#SEG( _CalibrationPtr )
004670 9928rrrr       16852         MOV.W   R2,#SOF( _CalibrationPtr )
004674 8A22           16853         MOV.W   R2,[R2]
004676 993800E0       16854         MOV.W   R3,#0E0H
                      16855         CALL    _NV_Store
00467A C4rrrrrr       +16855 ;       FCALL   _NV_Store
                      16856 ; rs232cmd.c 4686                                               }
                      16857 ; rs232cmd.c 4687                                       }                               
                      16858 ; rs232cmd.c 4688                               }
                      16859 ; rs232cmd.c 4689                       }
                      16860 ; rs232cmd.c 4690               }
00467E                16862 _1187:
                      16863 ; rs232cmd.c 4691       }
00467E 9970001A       16865         ADD.W   R7,#01AH
004682 2F30           16867         POP.W   R4, R5
004684 D680           16869         RET
                      16871 ; rs232cmd.c 4692       
                      16872 ; rs232cmd.c 4693       /************************************************************************
                            **/
                      16873 ; rs232cmd.c 4694       /* FactGenlockGenFRefDAC                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      16874 ; rs232cmd.c 4695       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16875 ; rs232cmd.c 4696       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16876 ; rs232cmd.c 4697       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      16877 ; rs232cmd.c 4698       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16878 ; rs232cmd.c 4699       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16879 ; rs232cmd.c 4700       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16880 ; rs232cmd.c 4701       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16881 ; rs232cmd.c 4702       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 276

ADDR   CODE            LINE SOURCELINE
                      16882 ; rs232cmd.c 4703       /************************************************************************
                            **/
                      16883 ; rs232cmd.c 4704       void FactGenlockGenFRefDAC( void)
                      16884 ; rs232cmd.c 4705       {
                      16885         ALIGN   1
                      16887         PUBLIC  _FactGenlockGenFRefDAC
004686                16888 _FactGenlockGenFRefDAC:
004686 0F30           16892         PUSH.W  R4, R5
004688 99720016       16894         SUB.W   R7,#016H
                      16898 ; rs232cmd.c 4706               char buffer[20];
                      16899 ; rs232cmd.c 4707               UI DACValue;
                      16900 ; rs232cmd.c 4708       
                      16901 ; rs232cmd.c 4709               if ( CmdExecute && !SCPIError)
00468C 964842rr       16903         MOV.B   ES,#SEG( _CmdExecute )
004690 9908rrrr       16904         MOV.W   R0,#SOF( _CmdExecute )
004694 8200           16905         MOV.B   R0L,[R0]
004696 F36E           16906         BEQ     _1200
004698 964842rr       16907         MOV.B   ES,#SEG( _SCPIError )
00469C 9908rrrr       16908         MOV.W   R0,#SOF( _SCPIError )
0046A0 8A00           16909         MOV.W   R0,[R0]
0046A2 F268           16910         BNE     _1200
                      16911 ; rs232cmd.c 4710               {
                      16912 ; rs232cmd.c 4711                       if ( CmdRequest)
0046A4 964842rr       16914         MOV.B   ES,#SEG( _CmdRequest )
0046A8 9908rrrr       16915         MOV.W   R0,#SOF( _CmdRequest )
0046AC 8200           16916         MOV.B   R0L,[R0]
0046AE F325           16917         BEQ     _1192
                      16918 ; rs232cmd.c 4712                       {
                      16919 ; rs232cmd.c 4713                               if ( ParCnt)
0046B0 964842rr       16921         MOV.B   ES,#SEG( _ParCnt )
0046B4 9908rrrr       16922         MOV.W   R0,#SOF( _ParCnt )
0046B8 8200           16923         MOV.B   R0L,[R0]
0046BA F306           16924         BEQ     _1191
                      16925 ; rs232cmd.c 4714                                       SCPIError = SyntaxErr;
0046BC 964842rr       16927         MOV.B   ES,#SEG( _SCPIError )
0046C0 9908rrrr       16928         MOV.W   R0,#SOF( _SCPIError )
0046C4 BA03           16929         MOV.W   [R0],#03H
0046C6 FE56           16930         BR      _1200
0046C6 FE56           16930         BR      _1200
0046C8                16931 _1191:
                      16932 ; rs232cmd.c 4715                               else
                      16933 ; rs232cmd.c 4716                               {
                      16934 ; rs232cmd.c 4717                                       sprintf( buffer, "%u\n", Calibration.Genl
                            ockCalibration.DACFactValue);
0046C8 91A8rr         16936         MOV.B   R5L,#SEG( __lc_bs )
0046CB 71BB           16937         XOR.B   R5H,R5H
0046CD 8947           16938         MOV.W   R4,R7
0046CF 964842rr       16939         MOV.B   ES,#SEG( _Calibration+118 )
0046D3 9908rrrr       16940         MOV.W   R0,#SOF( _Calibration+118 )
0046D7 8A00           16941         MOV.W   R0,[R0]
0046D9 0F01           16942         PUSH.W  R0
0046DB 9918rrrr       16944         MOV.W   R1,#SEG( _1013 )
0046DF 9908rrrr       16945         MOV.W   R0,#SOF( _1013 )
0046E3 0F03           16946         PUSH.W  R0, R1
0046E5 8915           16948         MOV.W   R1,R5
0046E7 8904           16949         MOV.W   R0,R4
                      16950         CALL    _sprintf
0046E9 C4rrrrrr       +16950 ;       FCALL   _sprintf
0046ED A976           16951         ADDS.W  R7,#06H
                      16953 ; rs232cmd.c 4718       
                      16954 ; rs232cmd.c 4719                                       rs232puts( buffer);
0046EF 8915           16956         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 277

ADDR   CODE            LINE SOURCELINE
0046F1 8904           16957         MOV.W   R0,R4
                      16958         CALL    _rs232puts
0046F3 C4rrrrrr       +16958 ;       FCALL   _rs232puts
                      16959 ; rs232cmd.c 4720                               }
                      16960 ; rs232cmd.c 4721                       }
0046F7 FE3E           16962         BR      _1200
0046F7 FE3E00         16962         BR      _1200
0046FA                16963 _1192:
                      16964 ; rs232cmd.c 4722                       else
                      16965 ; rs232cmd.c 4723                       {
                      16966 ; rs232cmd.c 4724                               if ( !PasswordProtected)
0046FA 964842rr       16968         MOV.B   ES,#SEG( _PasswordProtected )
0046FE 9908rrrr       16969         MOV.W   R0,#SOF( _PasswordProtected )
004702 8A00           16970         MOV.W   R0,[R0]
004704 F237           16971         BNE     _1200
                      16972 ; rs232cmd.c 4725                               {
                      16973 ; rs232cmd.c 4726                                       if (( ParCnt != 1) || (( sscanf( Cmd, "%u
                            ", &DACValue)) != 1))
004706 964842rr       16975         MOV.B   ES,#SEG( _ParCnt )
00470A 9908rrrr       16976         MOV.W   R0,#SOF( _ParCnt )
00470E 8200           16977         MOV.B   R0L,[R0]
004710 910401         16978         CMP.B   R0L,#01H
004713 F216           16979         BNE     _1193
004715 9918rrrr       16980         MOV.W   R1,#SEG( _Cmd )
004719 9908rrrr       16981         MOV.W   R0,#SOF( _Cmd )
00471D 9168rr         16982         MOV.B   R3L,#SEG( __lc_bs )
004720 7177           16983         XOR.B   R3H,R3H
004722 402714         16984         LEA     R2,R7+20
004725 0F0C           16985         PUSH.W  R2, R3
004727 9938rrrr       16987         MOV.W   R3,#SEG( _1190 )
00472B 9928rrrr       16988         MOV.W   R2,#SOF( _1190 )
00472F 0F0C           16989         PUSH.W  R2, R3
                      16991         CALL    _sscanf
004731 C4rrrrrr       +16991 ;       FCALL   _sscanf
004735 99700008       16992         ADD.W   R7,#08H
004739 99040001       16994         CMP.W   R0,#01H
00473D F307           16995         BEQ     _1194
00473D F30700         16995         BEQ     _1194
004740                16996 _1193:
                      16997 ; rs232cmd.c 4727                                               SCPIError = SyntaxErr;
004740 964842rr       16999         MOV.B   ES,#SEG( _SCPIError )
004744 9908rrrr       17000         MOV.W   R0,#SOF( _SCPIError )
004748 BA03           17001         MOV.W   [R0],#03H
00474A FE14           17002         BR      _1200
00474A FE14           17002         BR      _1200
00474C                17003 _1194:
                      17004 ; rs232cmd.c 4728                                       else
                      17005 ; rs232cmd.c 4729                                       {
                      17006 ; rs232cmd.c 4730                                               Calibration.GenlockCalibration.DA
                            CFactValue = DACValue;
00474C 8C0714         17008         MOV.W   R0,[R7+20]
00474F 964842rr       17009         MOV.B   ES,#SEG( _Calibration+118 )
004753 9918rrrr       17010         MOV.W   R1,#SOF( _Calibration+118 )
004757 8A09           17011         MOV.W   [R1],R0
                      17012 ; rs232cmd.c 4731                                                               
                      17013 ; rs232cmd.c 4732                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004759 9918rrrr       17015         MOV.W   R1,#SEG( _Calibration )
00475D 9908rrrr       17016         MOV.W   R0,#SOF( _Calibration )
004761 964842rr       17017         MOV.B   ES,#SEG( _CalibrationPtr )
004765 9928rrrr       17018         MOV.W   R2,#SOF( _CalibrationPtr )
004769 8A22           17019         MOV.W   R2,[R2]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 278

ADDR   CODE            LINE SOURCELINE
00476B 993800E0       17020         MOV.W   R3,#0E0H
                      17021         CALL    _NV_Store
00476F C4rrrrrr       +17021 ;       FCALL   _NV_Store
                      17022 ; rs232cmd.c 4733                                       }
                      17023 ; rs232cmd.c 4734                               }
                      17024 ; rs232cmd.c 4735                       }
                      17025 ; rs232cmd.c 4736               }
004774                17027 _1200:
                      17028 ; rs232cmd.c 4737       }
004774 99700016       17030         ADD.W   R7,#016H
004778 2F30           17032         POP.W   R4, R5
00477A D680           17034         RET
                      17036 ; rs232cmd.c 4738       
                      17037 ; rs232cmd.c 4739       /************************************************************************
                            **/
                      17038 ; rs232cmd.c 4740       /* FactGenlockGenURefDate                                                
                                                                                                                         RS23
                            2CMD.C  */
                      17039 ; rs232cmd.c 4741       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17040 ; rs232cmd.c 4742       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      17041 ; rs232cmd.c 4743       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17042 ; rs232cmd.c 4744       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17043 ; rs232cmd.c 4745       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17044 ; rs232cmd.c 4746       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17045 ; rs232cmd.c 4747       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17046 ; rs232cmd.c 4748       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17047 ; rs232cmd.c 4749       /************************************************************************
                            **/
                      17048 ; rs232cmd.c 4750       void FactGenlockGenURefDate( void)
                      17049 ; rs232cmd.c 4751       {
                      17050         ALIGN   1
                      17052         PUBLIC  _FactGenlockGenURefDate
00477C                17053 _FactGenlockGenURefDate:
00477C 0F30           17057         PUSH.W  R4, R5
00477E 9972001A       17059         SUB.W   R7,#01AH
                      17065 ; rs232cmd.c 4752               UI year, month, day;
                      17066 ; rs232cmd.c 4753               char buffer[20];
                      17067 ; rs232cmd.c 4754       
                      17068 ; rs232cmd.c 4755               if ( CmdExecute && !SCPIError)
004782 964842rr       17070         MOV.B   ES,#SEG( _CmdExecute )
004786 9908rrrr       17071         MOV.W   R0,#SOF( _CmdExecute )
00478A 8200           17072         MOV.B   R0L,[R0]
                      17073         BEQ     _1213
00478C F202           +17073 ;       BNE     _LG_1160
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 279

ADDR   CODE            LINE SOURCELINE
00478E D500C1         +17073 ;       JMP.L   _1213
004792 D500C100       +17073 ;       JMP.L   _1213
004792                +17073 _LG_1160:
004792 964842rr       17074         MOV.B   ES,#SEG( _SCPIError )
004796 9908rrrr       17075         MOV.W   R0,#SOF( _SCPIError )
00479A 8A00           17076         MOV.W   R0,[R0]
                      17077         BNE     _1213
00479C F302           +17077 ;       BEQ     _LG_1162
00479E D500B9         +17077 ;       JMP.L   _1213
0047A2 D500B900       +17077 ;       JMP.L   _1213
0047A2                +17077 _LG_1162:
                      17078 ; rs232cmd.c 4756               {
                      17079 ; rs232cmd.c 4757                       if ( CmdRequest)
0047A2 964842rr       17081         MOV.B   ES,#SEG( _CmdRequest )
0047A6 9908rrrr       17082         MOV.W   R0,#SOF( _CmdRequest )
0047AA 8200           17083         MOV.B   R0L,[R0]
0047AC F35A           17084         BEQ     _1204
                      17085 ; rs232cmd.c 4758                       {
                      17086 ; rs232cmd.c 4759                               if ( ParCnt)
0047AE 964842rr       17088         MOV.B   ES,#SEG( _ParCnt )
0047B2 9908rrrr       17089         MOV.W   R0,#SOF( _ParCnt )
0047B6 8200           17090         MOV.B   R0L,[R0]
0047B8 F307           17091         BEQ     _1203
                      17092 ; rs232cmd.c 4760                                       SCPIError = SyntaxErr;
0047BA 964842rr       17094         MOV.B   ES,#SEG( _SCPIError )
0047BE 9908rrrr       17095         MOV.W   R0,#SOF( _SCPIError )
0047C2 BA03           17096         MOV.W   [R0],#03H
                      17097         BR      _1213
0047C4 D500A6         +17097         JMP.L   _1213
0047C4 D500A600       +17097         JMP.L   _1213
0047C8                17098 _1203:
                      17099 ; rs232cmd.c 4761                               else
                      17100 ; rs232cmd.c 4762                               {
                      17101 ; rs232cmd.c 4763                                       day = Calibration.GenlockCalibration.DACU
                            serDate % 100;
0047C8 964842rr       17103         MOV.B   ES,#SEG( _Calibration+114 )
0047CC 9918rrrr       17104         MOV.W   R1,#SOF( _Calibration+114 )
0047D0 8B01           17105         MOV.W   R0,[R1+]
0047D2 8A11           17106         MOV.W   R1,[R1]
0047D4 B930           17107         MOV.W   R3,#00H
0047D6 99280064       17108         MOV.W   R2,#064H
0047DA 964842rr       17109         MOV.B   ES,#SEG( _Calibration+114 )
0047DE 9948rrrr       17110         MOV.W   R4,#SOF( _Calibration+114 )
0047E2 8B0C           17111         MOV.W   [R4+],R0
0047E4 8A1C           17112         MOV.W   [R4],R1
0047E6 C4rrrrrr       17113         FCALL   __UMODL
0047EA 8C0F04         17114         MOV.W   [R7+4],R0
0047ED 964842rr       17115         MOV.B   ES,#SEG( _Calibration+114 )
0047F1 9918rrrr       17116         MOV.W   R1,#SOF( _Calibration+114 )
0047F5 8B01           17117         MOV.W   R0,[R1+]
0047F7 8A11           17118         MOV.W   R1,[R1]
                      17119 ; rs232cmd.c 4764                                       month = ( Calibration.GenlockCalibration.
                            DACUserDate / 100) % 100;
0047F9 B930           17121         MOV.W   R3,#00H
0047FB 99280064       17122         MOV.W   R2,#064H
0047FF 8953           17123         MOV.W   R5,R3
004801 8942           17124         MOV.W   R4,R2
004803 C4rrrrrr       17125         FCALL   __UDIVL
004807 8935           17126         MOV.W   R3,R5
004809 8924           17127         MOV.W   R2,R4
00480B C4rrrrrr       17128         FCALL   __UMODL
00480F 8C0F02         17129         MOV.W   [R7+2],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 280

ADDR   CODE            LINE SOURCELINE
                      17130 ; rs232cmd.c 4765                                       year = ( Calibration.GenlockCalibration.D
                            ACUserDate / 10000);
004812 B930           17132         MOV.W   R3,#00H
004814 99282710       17133         MOV.W   R2,#02710H
004818 964842rr       17134         MOV.B   ES,#SEG( _Calibration+114 )
00481C 9918rrrr       17135         MOV.W   R1,#SOF( _Calibration+114 )
004820 8B01           17136         MOV.W   R0,[R1+]
004822 8A11           17137         MOV.W   R1,[R1]
004824 C4rrrrrr       17138         FCALL   __UDIVL
004828 8A0F           17139         MOV.W   [R7],R0
                      17140 ; rs232cmd.c 4766       
                      17141 ; rs232cmd.c 4767                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
00482A 91A8rr         17143         MOV.B   R5L,#SEG( __lc_bs )
00482D 71BB           17144         XOR.B   R5H,R5H
00482F 404706         17145         LEA     R4,R7+6
004832 8C0704         17146         MOV.W   R0,[R7+4]
004835 0F01           17147         PUSH.W  R0
004837 8C0704         17149         MOV.W   R0,[R7+4]
00483A 0F01           17150         PUSH.W  R0
00483C 8C0704         17152         MOV.W   R0,[R7+4]
00483F 0F01           17153         PUSH.W  R0
004841 9918rrrr       17155         MOV.W   R1,#SEG( _1174 )
004845 9908rrrr       17156         MOV.W   R0,#SOF( _1174 )
004849 0F03           17157         PUSH.W  R0, R1
00484B 8915           17159         MOV.W   R1,R5
00484D 8904           17160         MOV.W   R0,R4
                      17161         CALL    _sprintf
00484F C4rrrrrr       +17161 ;       FCALL   _sprintf
004853 9970000A       17162         ADD.W   R7,#0AH
                      17164 ; rs232cmd.c 4768       
                      17165 ; rs232cmd.c 4769                                       rs232puts( buffer);
004857 8915           17167         MOV.W   R1,R5
004859 8904           17168         MOV.W   R0,R4
                      17169         CALL    _rs232puts
00485B C4rrrrrr       +17169 ;       FCALL   _rs232puts
                      17170 ; rs232cmd.c 4770                               }
                      17171 ; rs232cmd.c 4771                       }
00485F FE59           17173         BR      _1213
00485F FE5900         17173         BR      _1213
004862                17174 _1204:
                      17175 ; rs232cmd.c 4772                       else
                      17176 ; rs232cmd.c 4773                       {
                      17177 ; rs232cmd.c 4774                               if (( ParCnt != 3) || (( sscanf( Cmd, "%u,%u,%u",
                             &year, &month, &day)) != 3))
004862 964842rr       17179         MOV.B   ES,#SEG( _ParCnt )
004866 9908rrrr       17180         MOV.W   R0,#SOF( _ParCnt )
00486A 8200           17181         MOV.B   R0L,[R0]
00486C 910403         17182         CMP.B   R0L,#03H
00486F F21F           17183         BNE     _1205
004871 9168rr         17184         MOV.B   R3L,#SEG( __lc_bs )
004874 7177           17185         XOR.B   R3H,R3H
004876 8927           17186         MOV.W   R2,R7
004878 91A8rr         17187         MOV.B   R5L,#SEG( __lc_bs )
00487B 71BB           17188         XOR.B   R5H,R5H
00487D 404702         17189         LEA     R4,R7+2
004880 9128rr         17190         MOV.B   R1L,#SEG( __lc_bs )
004883 7133           17191         XOR.B   R1H,R1H
004885 400704         17192         LEA     R0,R7+4
004888 0F03           17193         PUSH.W  R0, R1
00488A 0F30           17195         PUSH.W  R4, R5
00488C 0F0C           17197         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 281

ADDR   CODE            LINE SOURCELINE
00488E 9938rrrr       17199         MOV.W   R3,#SEG( _1175 )
004892 9928rrrr       17200         MOV.W   R2,#SOF( _1175 )
004896 0F0C           17201         PUSH.W  R2, R3
004898 9918rrrr       17203         MOV.W   R1,#SEG( _Cmd )
00489C 9908rrrr       17204         MOV.W   R0,#SOF( _Cmd )
                      17205         CALL    _sscanf
0048A0 C4rrrrrr       +17205 ;       FCALL   _sscanf
0048A4 99700010       17206         ADD.W   R7,#010H
0048A8 99040003       17208         CMP.W   R0,#03H
0048AC F306           17209         BEQ     _1206
0048AC F306           17209         BEQ     _1206
0048AE                17210 _1205:
                      17211 ; rs232cmd.c 4775                                       SCPIError = SyntaxErr;
0048AE 964842rr       17213         MOV.B   ES,#SEG( _SCPIError )
0048B2 9908rrrr       17214         MOV.W   R0,#SOF( _SCPIError )
0048B6 BA03           17215         MOV.W   [R0],#03H
0048B8 FE2C           17216         BR      _1213
0048B8 FE2C           17216         BR      _1213
0048BA                17217 _1206:
                      17218 ; rs232cmd.c 4776                               else
                      17219 ; rs232cmd.c 4777                               {
                      17220 ; rs232cmd.c 4778                                       if ( ValidateDate( year, month, day) == F
                            AIL)
0048BA 8A07           17222         MOV.W   R0,[R7]
0048BC 8C1702         17223         MOV.W   R1,[R7+2]
0048BF 8C2704         17224         MOV.W   R2,[R7+4]
                      17225         CALL    _ValidateDate
0048C2 C4rrrrrr       +17225 ;       FCALL   _ValidateDate
0048C6 6900           17226         OR.W    R0,R0
0048C8 F207           17227         BNE     _1207
                      17228 ; rs232cmd.c 4779                                               SCPIError = ExecErr;
0048CA 964842rr       17230         MOV.B   ES,#SEG( _SCPIError )
0048CE 9908rrrr       17231         MOV.W   R0,#SOF( _SCPIError )
0048D2 9A08001D       17232         MOV.W   [R0],#01DH
0048D6 FE1D           17233         BR      _1213
0048D6 FE1D           17233         BR      _1213
0048D8                17234 _1207:
                      17235 ; rs232cmd.c 4780                                       else
                      17236 ; rs232cmd.c 4781                                       {
                      17237 ; rs232cmd.c 4782                                               Calibration.GenlockCalibration.DA
                            CUserDate = day + 100*month + 10000*year;
0048D8 8C0702         17239         MOV.W   R0,[R7+2]
0048DB E9000064       17240         MULU.W  R0,#064H
0048DF 0C0704         17241         ADD.W   R0,[R7+4]
0048E2 8A27           17242         MOV.W   R2,[R7]
0048E4 E9202710       17243         MULU.W  R2,#02710H
0048E8 0902           17244         ADD.W   R0,R2
0048EA B910           17245         MOVS.W  R1,#00H
0048EC 964842rr       17246         MOV.B   ES,#SEG( _Calibration+114 )
0048F0 9928rrrr       17247         MOV.W   R2,#SOF( _Calibration+114 )
0048F4 8B0A           17248         MOV.W   [R2+],R0
0048F6 8A1A           17249         MOV.W   [R2],R1
                      17250 ; rs232cmd.c 4783                                               
                      17251 ; rs232cmd.c 4784                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0048F8 9918rrrr       17253         MOV.W   R1,#SEG( _Calibration )
0048FC 9908rrrr       17254         MOV.W   R0,#SOF( _Calibration )
004900 964842rr       17255         MOV.B   ES,#SEG( _CalibrationPtr )
004904 9928rrrr       17256         MOV.W   R2,#SOF( _CalibrationPtr )
004908 8A22           17257         MOV.W   R2,[R2]
00490A 993800E0       17258         MOV.W   R3,#0E0H
                      17259         CALL    _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 282

ADDR   CODE            LINE SOURCELINE
00490E C4rrrrrr       +17259 ;       FCALL   _NV_Store
                      17260 ; rs232cmd.c 4785                                       }                               
                      17261 ; rs232cmd.c 4786                               }
                      17262 ; rs232cmd.c 4787                       }
                      17263 ; rs232cmd.c 4788               }
004912                17265 _1213:
                      17266 ; rs232cmd.c 4789       }
004912 9970001A       17268         ADD.W   R7,#01AH
004916 2F30           17270         POP.W   R4, R5
004918 D680           17272         RET
                      17274 ; rs232cmd.c 4790       
                      17275 ; rs232cmd.c 4791       /************************************************************************
                            **/
                      17276 ; rs232cmd.c 4792       /* FactGenlockGenURefDAC                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      17277 ; rs232cmd.c 4793       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17278 ; rs232cmd.c 4794       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      17279 ; rs232cmd.c 4795       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17280 ; rs232cmd.c 4796       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17281 ; rs232cmd.c 4797       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17282 ; rs232cmd.c 4798       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17283 ; rs232cmd.c 4799       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17284 ; rs232cmd.c 4800       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17285 ; rs232cmd.c 4801       /************************************************************************
                            **/
                      17286 ; rs232cmd.c 4802       void FactGenlockGenURefDAC( void)
                      17287 ; rs232cmd.c 4803       {
                      17288         ALIGN   1
                      17290         PUBLIC  _FactGenlockGenURefDAC
00491A                17291 _FactGenlockGenURefDAC:
00491A 0F30           17295         PUSH.W  R4, R5
00491C 99720016       17297         SUB.W   R7,#016H
                      17301 ; rs232cmd.c 4804               char buffer[20];
                      17302 ; rs232cmd.c 4805               UI DACValue;
                      17303 ; rs232cmd.c 4806       
                      17304 ; rs232cmd.c 4807               if ( CmdExecute && !SCPIError)
004920 964842rr       17306         MOV.B   ES,#SEG( _CmdExecute )
004924 9908rrrr       17307         MOV.W   R0,#SOF( _CmdExecute )
004928 8200           17308         MOV.B   R0L,[R0]
00492A F368           17309         BEQ     _1224
00492C 964842rr       17310         MOV.B   ES,#SEG( _SCPIError )
004930 9908rrrr       17311         MOV.W   R0,#SOF( _SCPIError )
004934 8A00           17312         MOV.W   R0,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 283

ADDR   CODE            LINE SOURCELINE
004936 F262           17313         BNE     _1224
                      17314 ; rs232cmd.c 4808               {
                      17315 ; rs232cmd.c 4809                       if ( CmdRequest)
004938 964842rr       17317         MOV.B   ES,#SEG( _CmdRequest )
00493C 9908rrrr       17318         MOV.W   R0,#SOF( _CmdRequest )
004940 8200           17319         MOV.B   R0L,[R0]
004942 F325           17320         BEQ     _1217
                      17321 ; rs232cmd.c 4810                       {
                      17322 ; rs232cmd.c 4811                               if ( ParCnt)
004944 964842rr       17324         MOV.B   ES,#SEG( _ParCnt )
004948 9908rrrr       17325         MOV.W   R0,#SOF( _ParCnt )
00494C 8200           17326         MOV.B   R0L,[R0]
00494E F306           17327         BEQ     _1216
                      17328 ; rs232cmd.c 4812                                       SCPIError = SyntaxErr;
004950 964842rr       17330         MOV.B   ES,#SEG( _SCPIError )
004954 9908rrrr       17331         MOV.W   R0,#SOF( _SCPIError )
004958 BA03           17332         MOV.W   [R0],#03H
00495A FE50           17333         BR      _1224
00495A FE50           17333         BR      _1224
00495C                17334 _1216:
                      17335 ; rs232cmd.c 4813                               else
                      17336 ; rs232cmd.c 4814                               {
                      17337 ; rs232cmd.c 4815                                       sprintf( buffer, "%u\n", Calibration.Genl
                            ockCalibration.DACUserValue);
00495C 91A8rr         17339         MOV.B   R5L,#SEG( __lc_bs )
00495F 71BB           17340         XOR.B   R5H,R5H
004961 8947           17341         MOV.W   R4,R7
004963 964842rr       17342         MOV.B   ES,#SEG( _Calibration+120 )
004967 9908rrrr       17343         MOV.W   R0,#SOF( _Calibration+120 )
00496B 8A00           17344         MOV.W   R0,[R0]
00496D 0F01           17345         PUSH.W  R0
00496F 9918rrrr       17347         MOV.W   R1,#SEG( _1013 )
004973 9908rrrr       17348         MOV.W   R0,#SOF( _1013 )
004977 0F03           17349         PUSH.W  R0, R1
004979 8915           17351         MOV.W   R1,R5
00497B 8904           17352         MOV.W   R0,R4
                      17353         CALL    _sprintf
00497D C4rrrrrr       +17353 ;       FCALL   _sprintf
004981 A976           17354         ADDS.W  R7,#06H
                      17356 ; rs232cmd.c 4816       
                      17357 ; rs232cmd.c 4817                                       rs232puts( buffer);
004983 8915           17359         MOV.W   R1,R5
004985 8904           17360         MOV.W   R0,R4
                      17361         CALL    _rs232puts
004987 C4rrrrrr       +17361 ;       FCALL   _rs232puts
                      17362 ; rs232cmd.c 4818                               }
                      17363 ; rs232cmd.c 4819                       }
00498B FE38           17365         BR      _1224
00498B FE3800         17365         BR      _1224
00498E                17366 _1217:
                      17367 ; rs232cmd.c 4820                       else
                      17368 ; rs232cmd.c 4821                       {
                      17369 ; rs232cmd.c 4822                               if (( ParCnt != 1) || (( sscanf( Cmd, "%u", &DACV
                            alue)) != 1))
00498E 964842rr       17371         MOV.B   ES,#SEG( _ParCnt )
004992 9908rrrr       17372         MOV.W   R0,#SOF( _ParCnt )
004996 8200           17373         MOV.B   R0L,[R0]
004998 910401         17374         CMP.B   R0L,#01H
00499B F216           17375         BNE     _1218
00499D 9918rrrr       17376         MOV.W   R1,#SEG( _Cmd )
0049A1 9908rrrr       17377         MOV.W   R0,#SOF( _Cmd )
0049A5 9168rr         17378         MOV.B   R3L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 284

ADDR   CODE            LINE SOURCELINE
0049A8 7177           17379         XOR.B   R3H,R3H
0049AA 402714         17380         LEA     R2,R7+20
0049AD 0F0C           17381         PUSH.W  R2, R3
0049AF 9938rrrr       17383         MOV.W   R3,#SEG( _1190 )
0049B3 9928rrrr       17384         MOV.W   R2,#SOF( _1190 )
0049B7 0F0C           17385         PUSH.W  R2, R3
                      17387         CALL    _sscanf
0049B9 C4rrrrrr       +17387 ;       FCALL   _sscanf
0049BD 99700008       17388         ADD.W   R7,#08H
0049C1 99040001       17390         CMP.W   R0,#01H
0049C5 F307           17391         BEQ     _1219
0049C5 F30700         17391         BEQ     _1219
0049C8                17392 _1218:
                      17393 ; rs232cmd.c 4823                                       SCPIError = SyntaxErr;
0049C8 964842rr       17395         MOV.B   ES,#SEG( _SCPIError )
0049CC 9908rrrr       17396         MOV.W   R0,#SOF( _SCPIError )
0049D0 BA03           17397         MOV.W   [R0],#03H
0049D2 FE14           17398         BR      _1224
0049D2 FE14           17398         BR      _1224
0049D4                17399 _1219:
                      17400 ; rs232cmd.c 4824                               else
                      17401 ; rs232cmd.c 4825                               {
                      17402 ; rs232cmd.c 4826                                       Calibration.GenlockCalibration.DACUserVal
                            ue = DACValue;
0049D4 8C0714         17404         MOV.W   R0,[R7+20]
0049D7 964842rr       17405         MOV.B   ES,#SEG( _Calibration+120 )
0049DB 9918rrrr       17406         MOV.W   R1,#SOF( _Calibration+120 )
0049DF 8A09           17407         MOV.W   [R1],R0
                      17408 ; rs232cmd.c 4827                                                               
                      17409 ; rs232cmd.c 4828                                       NV_Store( &Calibration, CalibrationPtr, s
                            izeof( Calibration));
0049E1 9918rrrr       17411         MOV.W   R1,#SEG( _Calibration )
0049E5 9908rrrr       17412         MOV.W   R0,#SOF( _Calibration )
0049E9 964842rr       17413         MOV.B   ES,#SEG( _CalibrationPtr )
0049ED 9928rrrr       17414         MOV.W   R2,#SOF( _CalibrationPtr )
0049F1 8A22           17415         MOV.W   R2,[R2]
0049F3 993800E0       17416         MOV.W   R3,#0E0H
                      17417         CALL    _NV_Store
0049F7 C4rrrrrr       +17417 ;       FCALL   _NV_Store
                      17418 ; rs232cmd.c 4829                               }
                      17419 ; rs232cmd.c 4830                       }
                      17420 ; rs232cmd.c 4831               }
0049FC                17422 _1224:
                      17423 ; rs232cmd.c 4832       }
0049FC 99700016       17425         ADD.W   R7,#016H
004A00 2F30           17427         POP.W   R4, R5
004A02 D680           17429         RET
                      17431 ; rs232cmd.c 4833       
                      17432 ; rs232cmd.c 4834       /************************************************************************
                            **/
                      17433 ; rs232cmd.c 4835       /* FactGenlockGenHPHZero                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      17434 ; rs232cmd.c 4836       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17435 ; rs232cmd.c 4837       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 285

ADDR   CODE            LINE SOURCELINE
                      17436 ; rs232cmd.c 4838       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17437 ; rs232cmd.c 4839       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17438 ; rs232cmd.c 4840       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17439 ; rs232cmd.c 4841       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17440 ; rs232cmd.c 4842       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17441 ; rs232cmd.c 4843       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17442 ; rs232cmd.c 4844       /************************************************************************
                            **/
                      17443 ; rs232cmd.c 4845       void FactGenlockGenHPHZero( void)
                      17444 ; rs232cmd.c 4846       {
                      17445         ALIGN   1
                      17447         PUBLIC  _FactGenlockGenHPHZero
004A04                17448 _FactGenlockGenHPHZero:
004A04 0F30           17452         PUSH.W  R4, R5
004A06 99720026       17454         SUB.W   R7,#026H
                      17459 ; rs232cmd.c 4847               char buffer[30];
                      17460 ; rs232cmd.c 4848               UL HPHZeroG, HPHZeroM;
                      17461 ; rs232cmd.c 4849       
                      17462 ; rs232cmd.c 4850               if ( CmdExecute && !SCPIError)
004A0A 964842rr       17464         MOV.B   ES,#SEG( _CmdExecute )
004A0E 9908rrrr       17465         MOV.W   R0,#SOF( _CmdExecute )
004A12 8200           17466         MOV.B   R0L,[R0]
                      17467         BEQ     _1237
004A14 F202           +17467 ;       BNE     _LG_1186
004A16 D5008A         +17467 ;       JMP.L   _1237
004A1A D5008A00       +17467 ;       JMP.L   _1237
004A1A                +17467 _LG_1186:
004A1A 964842rr       17468         MOV.B   ES,#SEG( _SCPIError )
004A1E 9908rrrr       17469         MOV.W   R0,#SOF( _SCPIError )
004A22 8A00           17470         MOV.W   R0,[R0]
                      17471         BNE     _1237
004A24 F302           +17471 ;       BEQ     _LG_1188
004A26 D50082         +17471 ;       JMP.L   _1237
004A2A D5008200       +17471 ;       JMP.L   _1237
004A2A                +17471 _LG_1188:
                      17472 ; rs232cmd.c 4851               {
                      17473 ; rs232cmd.c 4852                       if ( CmdRequest)
004A2A 964842rr       17475         MOV.B   ES,#SEG( _CmdRequest )
004A2E 9908rrrr       17476         MOV.W   R0,#SOF( _CmdRequest )
004A32 8200           17477         MOV.B   R0L,[R0]
004A34 F32E           17478         BEQ     _1229
                      17479 ; rs232cmd.c 4853                       {
                      17480 ; rs232cmd.c 4854                               if ( ParCnt)
004A36 964842rr       17482         MOV.B   ES,#SEG( _ParCnt )
004A3A 9908rrrr       17483         MOV.W   R0,#SOF( _ParCnt )
004A3E 8200           17484         MOV.B   R0L,[R0]
004A40 F306           17485         BEQ     _1228
                      17486 ; rs232cmd.c 4855                                       SCPIError = SyntaxErr;
004A42 964842rr       17488         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 286

ADDR   CODE            LINE SOURCELINE
004A46 9908rrrr       17489         MOV.W   R0,#SOF( _SCPIError )
004A4A BA03           17490         MOV.W   [R0],#03H
004A4C FE6F           17491         BR      _1237
004A4C FE6F           17491         BR      _1237
004A4E                17492 _1228:
                      17493 ; rs232cmd.c 4856                               else
                      17494 ; rs232cmd.c 4857                               {
                      17495 ; rs232cmd.c 4858                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .GenlockCalibration.HPHZeroG, 
                      17496 ; rs232cmd.c 4859                                                                                
                                                                                                Calibration.GenlockCalibratio
                            n.HPHZeroM);
004A4E 91A8rr         17498         MOV.B   R5L,#SEG( __lc_bs )
004A51 71BB           17499         XOR.B   R5H,R5H
004A53 8947           17500         MOV.W   R4,R7
004A55 964842rr       17501         MOV.B   ES,#SEG( _Calibration+122 )
004A59 9918rrrr       17502         MOV.W   R1,#SOF( _Calibration+122 )
004A5D 8B01           17503         MOV.W   R0,[R1+]
004A5F 8A11           17504         MOV.W   R1,[R1]
004A61 964842rr       17505         MOV.B   ES,#SEG( _Calibration+130 )
004A65 9938rrrr       17506         MOV.W   R3,#SOF( _Calibration+130 )
004A69 8B23           17507         MOV.W   R2,[R3+]
004A6B 8A33           17508         MOV.W   R3,[R3]
004A6D 0F0C           17509         PUSH.W  R2, R3
004A6F 0F03           17511         PUSH.W  R0, R1
004A71 9918rrrr       17513         MOV.W   R1,#SEG( _1227 )
004A75 9908rrrr       17514         MOV.W   R0,#SOF( _1227 )
004A79 0F03           17515         PUSH.W  R0, R1
004A7B 8915           17517         MOV.W   R1,R5
004A7D 8904           17518         MOV.W   R0,R4
                      17519         CALL    _sprintf
004A7F C4rrrrrr       +17519 ;       FCALL   _sprintf
004A83 9970000C       17520         ADD.W   R7,#0CH
                      17522 ; rs232cmd.c 4860                                       rs232puts( buffer);
004A87 8915           17524         MOV.W   R1,R5
004A89 8904           17525         MOV.W   R0,R4
                      17526         CALL    _rs232puts
004A8B C4rrrrrr       +17526 ;       FCALL   _rs232puts
                      17527 ; rs232cmd.c 4861                               }
                      17528 ; rs232cmd.c 4862                       }
004A8F FE4E           17530         BR      _1237
004A8F FE4E00         17530         BR      _1237
004A92                17531 _1229:
                      17532 ; rs232cmd.c 4863                       else
                      17533 ; rs232cmd.c 4864                       {
                      17534 ; rs232cmd.c 4865                               if ( !PasswordProtected)
004A92 964842rr       17536         MOV.B   ES,#SEG( _PasswordProtected )
004A96 9908rrrr       17537         MOV.W   R0,#SOF( _PasswordProtected )
004A9A 8A00           17538         MOV.W   R0,[R0]
004A9C F247           17539         BNE     _1237
                      17540 ; rs232cmd.c 4866                               {
                      17541 ; rs232cmd.c 4867                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &HPHZeroG, &HPHZeroM)) != 2))
004A9E 964842rr       17543         MOV.B   ES,#SEG( _ParCnt )
004AA2 9908rrrr       17544         MOV.W   R0,#SOF( _ParCnt )
004AA6 8200           17545         MOV.B   R0L,[R0]
004AA8 910402         17546         CMP.B   R0L,#02H
004AAB F21B           17547         BNE     _1230
004AAD 9918rrrr       17548         MOV.W   R1,#SEG( _Cmd )
004AB1 9908rrrr       17549         MOV.W   R0,#SOF( _Cmd )
004AB5 9168rr         17550         MOV.B   R3L,#SEG( __lc_bs )
004AB8 7177           17551         XOR.B   R3H,R3H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 287

ADDR   CODE            LINE SOURCELINE
004ABA 40271E         17552         LEA     R2,R7+30
004ABD 91A8rr         17553         MOV.B   R5L,#SEG( __lc_bs )
004AC0 71BB           17554         XOR.B   R5H,R5H
004AC2 404722         17555         LEA     R4,R7+34
004AC5 0F30           17556         PUSH.W  R4, R5
004AC7 0F0C           17558         PUSH.W  R2, R3
004AC9 9938rrrr       17560         MOV.W   R3,#SEG( _1038 )
004ACD 9928rrrr       17561         MOV.W   R2,#SOF( _1038 )
004AD1 0F0C           17562         PUSH.W  R2, R3
                      17564         CALL    _sscanf
004AD3 C4rrrrrr       +17564 ;       FCALL   _sscanf
004AD7 9970000C       17565         ADD.W   R7,#0CH
004ADB 99040002       17567         CMP.W   R0,#02H
004ADF F307           17568         BEQ     _1231
004ADF F30700         17568         BEQ     _1231
004AE2                17569 _1230:
                      17570 ; rs232cmd.c 4868                                               SCPIError = SyntaxErr;
004AE2 964842rr       17572         MOV.B   ES,#SEG( _SCPIError )
004AE6 9908rrrr       17573         MOV.W   R0,#SOF( _SCPIError )
004AEA BA03           17574         MOV.W   [R0],#03H
004AEC FE1F           17575         BR      _1237
004AEC FE1F           17575         BR      _1237
004AEE                17576 _1231:
                      17577 ; rs232cmd.c 4869                                       else
                      17578 ; rs232cmd.c 4870                                       {
                      17579 ; rs232cmd.c 4871                                               Calibration.GenlockCalibration.HP
                            HZeroG = HPHZeroG;
004AEE 8C1720         17581         MOV.W   R1,[R7+32]
004AF1 8C071E         17582         MOV.W   R0,[R7+30]
004AF4 964842rr       17583         MOV.B   ES,#SEG( _Calibration+122 )
004AF8 9928rrrr       17584         MOV.W   R2,#SOF( _Calibration+122 )
004AFC 8B0A           17585         MOV.W   [R2+],R0
004AFE 8A1A           17586         MOV.W   [R2],R1
                      17587 ; rs232cmd.c 4872                                               Calibration.GenlockCalibration.HP
                            HZeroM = HPHZeroM;
004B00 8C1724         17589         MOV.W   R1,[R7+36]
004B03 8C0722         17590         MOV.W   R0,[R7+34]
004B06 964842rr       17591         MOV.B   ES,#SEG( _Calibration+130 )
004B0A 9928rrrr       17592         MOV.W   R2,#SOF( _Calibration+130 )
004B0E 8B0A           17593         MOV.W   [R2+],R0
004B10 8A1A           17594         MOV.W   [R2],R1
                      17595 ; rs232cmd.c 4873                                       
                      17596 ; rs232cmd.c 4874                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004B12 9918rrrr       17598         MOV.W   R1,#SEG( _Calibration )
004B16 9908rrrr       17599         MOV.W   R0,#SOF( _Calibration )
004B1A 964842rr       17600         MOV.B   ES,#SEG( _CalibrationPtr )
004B1E 9928rrrr       17601         MOV.W   R2,#SOF( _CalibrationPtr )
004B22 8A22           17602         MOV.W   R2,[R2]
004B24 993800E0       17603         MOV.W   R3,#0E0H
                      17604         CALL    _NV_Store
004B28 C4rrrrrr       +17604 ;       FCALL   _NV_Store
                      17605 ; rs232cmd.c 4875                                       }
                      17606 ; rs232cmd.c 4876                               }
                      17607 ; rs232cmd.c 4877                       }
                      17608 ; rs232cmd.c 4878               }
004B2C                17610 _1237:
                      17611 ; rs232cmd.c 4879       }
004B2C 99700026       17613         ADD.W   R7,#026H
004B30 2F30           17615         POP.W   R4, R5
004B32 D680           17617         RET
                      17619 ; rs232cmd.c 4880       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 288

ADDR   CODE            LINE SOURCELINE
                      17620 ; rs232cmd.c 4881       /************************************************************************
                            **/
                      17621 ; rs232cmd.c 4882       /* FactGenlockGenPhase                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      17622 ; rs232cmd.c 4883       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17623 ; rs232cmd.c 4884       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      17624 ; rs232cmd.c 4885       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17625 ; rs232cmd.c 4886       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17626 ; rs232cmd.c 4887       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17627 ; rs232cmd.c 4888       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17628 ; rs232cmd.c 4889       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17629 ; rs232cmd.c 4890       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17630 ; rs232cmd.c 4891       /************************************************************************
                            **/
                      17631 ; rs232cmd.c 4892       void FactGenlockGenPhase( void)
                      17632 ; rs232cmd.c 4893       {
                      17633         ALIGN   1
                      17635         PUBLIC  _FactGenlockGenPhase
004B34                17636 _FactGenlockGenPhase:
004B34 0F30           17640         PUSH.W  R4, R5
004B36 99720026       17642         SUB.W   R7,#026H
                      17647 ; rs232cmd.c 4894               char buffer[30];
                      17648 ; rs232cmd.c 4895               UL PhaseG, PhaseM;
                      17649 ; rs232cmd.c 4896       
                      17650 ; rs232cmd.c 4897               if ( CmdExecute && !SCPIError)
004B3A 964842rr       17652         MOV.B   ES,#SEG( _CmdExecute )
004B3E 9908rrrr       17653         MOV.W   R0,#SOF( _CmdExecute )
004B42 8200           17654         MOV.B   R0L,[R0]
                      17655         BEQ     _1249
004B44 F202           +17655 ;       BNE     _LG_1200
004B46 D5008A         +17655 ;       JMP.L   _1249
004B4A D5008A00       +17655 ;       JMP.L   _1249
004B4A                +17655 _LG_1200:
004B4A 964842rr       17656         MOV.B   ES,#SEG( _SCPIError )
004B4E 9908rrrr       17657         MOV.W   R0,#SOF( _SCPIError )
004B52 8A00           17658         MOV.W   R0,[R0]
                      17659         BNE     _1249
004B54 F302           +17659 ;       BEQ     _LG_1202
004B56 D50082         +17659 ;       JMP.L   _1249
004B5A D5008200       +17659 ;       JMP.L   _1249
004B5A                +17659 _LG_1202:
                      17660 ; rs232cmd.c 4898               {
                      17661 ; rs232cmd.c 4899                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 289

ADDR   CODE            LINE SOURCELINE
004B5A 964842rr       17663         MOV.B   ES,#SEG( _CmdRequest )
004B5E 9908rrrr       17664         MOV.W   R0,#SOF( _CmdRequest )
004B62 8200           17665         MOV.B   R0L,[R0]
004B64 F32E           17666         BEQ     _1241
                      17667 ; rs232cmd.c 4900                       {
                      17668 ; rs232cmd.c 4901                               if ( ParCnt)
004B66 964842rr       17670         MOV.B   ES,#SEG( _ParCnt )
004B6A 9908rrrr       17671         MOV.W   R0,#SOF( _ParCnt )
004B6E 8200           17672         MOV.B   R0L,[R0]
004B70 F306           17673         BEQ     _1240
                      17674 ; rs232cmd.c 4902                                       SCPIError = SyntaxErr;
004B72 964842rr       17676         MOV.B   ES,#SEG( _SCPIError )
004B76 9908rrrr       17677         MOV.W   R0,#SOF( _SCPIError )
004B7A BA03           17678         MOV.W   [R0],#03H
004B7C FE6F           17679         BR      _1249
004B7C FE6F           17679         BR      _1249
004B7E                17680 _1240:
                      17681 ; rs232cmd.c 4903                               else
                      17682 ; rs232cmd.c 4904                               {
                      17683 ; rs232cmd.c 4905                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .GenlockCalibration.PhaseG, 
                      17684 ; rs232cmd.c 4906                                                                                
                                                                                                Calibration.GenlockCalibratio
                            n.PhaseM);
004B7E 91A8rr         17686         MOV.B   R5L,#SEG( __lc_bs )
004B81 71BB           17687         XOR.B   R5H,R5H
004B83 8947           17688         MOV.W   R4,R7
004B85 964842rr       17689         MOV.B   ES,#SEG( _Calibration+126 )
004B89 9918rrrr       17690         MOV.W   R1,#SOF( _Calibration+126 )
004B8D 8B01           17691         MOV.W   R0,[R1+]
004B8F 8A11           17692         MOV.W   R1,[R1]
004B91 964842rr       17693         MOV.B   ES,#SEG( _Calibration+134 )
004B95 9938rrrr       17694         MOV.W   R3,#SOF( _Calibration+134 )
004B99 8B23           17695         MOV.W   R2,[R3+]
004B9B 8A33           17696         MOV.W   R3,[R3]
004B9D 0F0C           17697         PUSH.W  R2, R3
004B9F 0F03           17699         PUSH.W  R0, R1
004BA1 9918rrrr       17701         MOV.W   R1,#SEG( _1227 )
004BA5 9908rrrr       17702         MOV.W   R0,#SOF( _1227 )
004BA9 0F03           17703         PUSH.W  R0, R1
004BAB 8915           17705         MOV.W   R1,R5
004BAD 8904           17706         MOV.W   R0,R4
                      17707         CALL    _sprintf
004BAF C4rrrrrr       +17707 ;       FCALL   _sprintf
004BB3 9970000C       17708         ADD.W   R7,#0CH
                      17710 ; rs232cmd.c 4907                                       rs232puts( buffer);
004BB7 8915           17712         MOV.W   R1,R5
004BB9 8904           17713         MOV.W   R0,R4
                      17714         CALL    _rs232puts
004BBB C4rrrrrr       +17714 ;       FCALL   _rs232puts
                      17715 ; rs232cmd.c 4908                               }
                      17716 ; rs232cmd.c 4909                       }
004BBF FE4E           17718         BR      _1249
004BBF FE4E00         17718         BR      _1249
004BC2                17719 _1241:
                      17720 ; rs232cmd.c 4910                       else
                      17721 ; rs232cmd.c 4911                       {
                      17722 ; rs232cmd.c 4912                               if ( !PasswordProtected)
004BC2 964842rr       17724         MOV.B   ES,#SEG( _PasswordProtected )
004BC6 9908rrrr       17725         MOV.W   R0,#SOF( _PasswordProtected )
004BCA 8A00           17726         MOV.W   R0,[R0]
004BCC F247           17727         BNE     _1249
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 290

ADDR   CODE            LINE SOURCELINE
                      17728 ; rs232cmd.c 4913                               {
                      17729 ; rs232cmd.c 4914                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
004BCE 964842rr       17731         MOV.B   ES,#SEG( _ParCnt )
004BD2 9908rrrr       17732         MOV.W   R0,#SOF( _ParCnt )
004BD6 8200           17733         MOV.B   R0L,[R0]
004BD8 910402         17734         CMP.B   R0L,#02H
004BDB F21B           17735         BNE     _1242
004BDD 9918rrrr       17736         MOV.W   R1,#SEG( _Cmd )
004BE1 9908rrrr       17737         MOV.W   R0,#SOF( _Cmd )
004BE5 9168rr         17738         MOV.B   R3L,#SEG( __lc_bs )
004BE8 7177           17739         XOR.B   R3H,R3H
004BEA 40271E         17740         LEA     R2,R7+30
004BED 91A8rr         17741         MOV.B   R5L,#SEG( __lc_bs )
004BF0 71BB           17742         XOR.B   R5H,R5H
004BF2 404722         17743         LEA     R4,R7+34
004BF5 0F30           17744         PUSH.W  R4, R5
004BF7 0F0C           17746         PUSH.W  R2, R3
004BF9 9938rrrr       17748         MOV.W   R3,#SEG( _1038 )
004BFD 9928rrrr       17749         MOV.W   R2,#SOF( _1038 )
004C01 0F0C           17750         PUSH.W  R2, R3
                      17752         CALL    _sscanf
004C03 C4rrrrrr       +17752 ;       FCALL   _sscanf
004C07 9970000C       17753         ADD.W   R7,#0CH
004C0B 99040002       17755         CMP.W   R0,#02H
004C0F F307           17756         BEQ     _1243
004C0F F30700         17756         BEQ     _1243
004C12                17757 _1242:
                      17758 ; rs232cmd.c 4915                                               SCPIError = SyntaxErr;
004C12 964842rr       17760         MOV.B   ES,#SEG( _SCPIError )
004C16 9908rrrr       17761         MOV.W   R0,#SOF( _SCPIError )
004C1A BA03           17762         MOV.W   [R0],#03H
004C1C FE1F           17763         BR      _1249
004C1C FE1F           17763         BR      _1249
004C1E                17764 _1243:
                      17765 ; rs232cmd.c 4916                                       else
                      17766 ; rs232cmd.c 4917                                       {
                      17767 ; rs232cmd.c 4918                                               Calibration.GenlockCalibration.Ph
                            aseG = PhaseG;
004C1E 8C1720         17769         MOV.W   R1,[R7+32]
004C21 8C071E         17770         MOV.W   R0,[R7+30]
004C24 964842rr       17771         MOV.B   ES,#SEG( _Calibration+126 )
004C28 9928rrrr       17772         MOV.W   R2,#SOF( _Calibration+126 )
004C2C 8B0A           17773         MOV.W   [R2+],R0
004C2E 8A1A           17774         MOV.W   [R2],R1
                      17775 ; rs232cmd.c 4919                                               Calibration.GenlockCalibration.Ph
                            aseM = PhaseM;
004C30 8C1724         17777         MOV.W   R1,[R7+36]
004C33 8C0722         17778         MOV.W   R0,[R7+34]
004C36 964842rr       17779         MOV.B   ES,#SEG( _Calibration+134 )
004C3A 9928rrrr       17780         MOV.W   R2,#SOF( _Calibration+134 )
004C3E 8B0A           17781         MOV.W   [R2+],R0
004C40 8A1A           17782         MOV.W   [R2],R1
                      17783 ; rs232cmd.c 4920                                       
                      17784 ; rs232cmd.c 4921                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004C42 9918rrrr       17786         MOV.W   R1,#SEG( _Calibration )
004C46 9908rrrr       17787         MOV.W   R0,#SOF( _Calibration )
004C4A 964842rr       17788         MOV.B   ES,#SEG( _CalibrationPtr )
004C4E 9928rrrr       17789         MOV.W   R2,#SOF( _CalibrationPtr )
004C52 8A22           17790         MOV.W   R2,[R2]
004C54 993800E0       17791         MOV.W   R3,#0E0H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 291

ADDR   CODE            LINE SOURCELINE
                      17792         CALL    _NV_Store
004C58 C4rrrrrr       +17792 ;       FCALL   _NV_Store
                      17793 ; rs232cmd.c 4922                                       }
                      17794 ; rs232cmd.c 4923                               }
                      17795 ; rs232cmd.c 4924                       }
                      17796 ; rs232cmd.c 4925               }
004C5C                17798 _1249:
                      17799 ; rs232cmd.c 4926       }
004C5C 99700026       17801         ADD.W   R7,#026H
004C60 2F30           17803         POP.W   R4, R5
004C62 D680           17805         RET
                      17807 ; rs232cmd.c 4927       
                      17808 ; rs232cmd.c 4928       /************************************************************************
                            **/
                      17809 ; rs232cmd.c 4929       /* FactBBGenDate                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      17810 ; rs232cmd.c 4930       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17811 ; rs232cmd.c 4931       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      17812 ; rs232cmd.c 4932       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17813 ; rs232cmd.c 4933       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17814 ; rs232cmd.c 4934       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17815 ; rs232cmd.c 4935       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17816 ; rs232cmd.c 4936       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17817 ; rs232cmd.c 4937       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17818 ; rs232cmd.c 4938       /************************************************************************
                            **/
                      17819 ; rs232cmd.c 4939       void FactBBGenDate( void)
                      17820 ; rs232cmd.c 4940       {
                      17821         ALIGN   1
                      17823         PUBLIC  _FactBBGenDate
004C64                17824 _FactBBGenDate:
004C64 0F30           17828         PUSH.W  R4, R5
004C66 9972001E       17830         SUB.W   R7,#01EH
                      17836 ; rs232cmd.c 4941               UI year, month, day;
                      17837 ; rs232cmd.c 4942               char buffer[20];
                      17838 ; rs232cmd.c 4943       
                      17839 ; rs232cmd.c 4944               if ( CmdExecute && !SCPIError)
004C6A 964842rr       17841         MOV.B   ES,#SEG( _CmdExecute )
004C6E 9908rrrr       17842         MOV.W   R0,#SOF( _CmdExecute )
004C72 8200           17843         MOV.B   R0L,[R0]
                      17844         BEQ     _1263
004C74 F202           +17844 ;       BNE     _LG_1214
004C76 D500D0         +17844 ;       JMP.L   _1263
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 292

ADDR   CODE            LINE SOURCELINE
004C7A D500D000       +17844 ;       JMP.L   _1263
004C7A                +17844 _LG_1214:
004C7A 964842rr       17845         MOV.B   ES,#SEG( _SCPIError )
004C7E 9908rrrr       17846         MOV.W   R0,#SOF( _SCPIError )
004C82 8A00           17847         MOV.W   R0,[R0]
                      17848         BNE     _1263
004C84 F302           +17848 ;       BEQ     _LG_1216
004C86 D500C8         +17848 ;       JMP.L   _1263
004C8A D500C800       +17848 ;       JMP.L   _1263
004C8A                +17848 _LG_1216:
                      17849 ; rs232cmd.c 4945               {
                      17850 ; rs232cmd.c 4946                       if ( CmdRequest)
004C8A 964842rr       17852         MOV.B   ES,#SEG( _CmdRequest )
004C8E 9908rrrr       17853         MOV.W   R0,#SOF( _CmdRequest )
004C92 8200           17854         MOV.B   R0L,[R0]
004C94 F358           17855         BEQ     _1253
                      17856 ; rs232cmd.c 4947                       {
                      17857 ; rs232cmd.c 4948                               if ( ParCnt)
004C96 964842rr       17859         MOV.B   ES,#SEG( _ParCnt )
004C9A 9908rrrr       17860         MOV.W   R0,#SOF( _ParCnt )
004C9E 8200           17861         MOV.B   R0L,[R0]
004CA0 F307           17862         BEQ     _1252
                      17863 ; rs232cmd.c 4949                                       SCPIError = SyntaxErr;
004CA2 964842rr       17865         MOV.B   ES,#SEG( _SCPIError )
004CA6 9908rrrr       17866         MOV.W   R0,#SOF( _SCPIError )
004CAA BA03           17867         MOV.W   [R0],#03H
                      17868         BR      _1263
004CAC D500B5         +17868         JMP.L   _1263
004CAC D500B500       +17868         JMP.L   _1263
004CB0                17869 _1252:
                      17870 ; rs232cmd.c 4950                               else
                      17871 ; rs232cmd.c 4951                               {
                      17872 ; rs232cmd.c 4952                                       day = Calibration.BBCalibration[Suffix[0]
                            ].Date % 100;
004CB0 964842rr       17874         MOV.B   ES,#SEG( _Suffix )
004CB4 9908rrrr       17875         MOV.W   R0,#SOF( _Suffix )
004CB8 8A00           17876         MOV.W   R0,[R0]
004CBA E9000014       17877         MULU.W  R0,#014H
004CBE B910           17878         MOVS.W  R1,#00H
004CC0 964842rr       17879         MOV.B   ES,#SEG( _Calibration+138 )
004CC4 8D10rrrr       17880         MOV.W   R1,[R0+SOF( _Calibration+140 )]
004CC8 8D00rrrr       17881         MOV.W   R0,[R0+SOF( _Calibration+138 )]
004CCC B930           17882         MOV.W   R3,#00H
004CCE 99280064       17883         MOV.W   R2,#064H
004CD2 8C1F02         17884         MOV.W   [R7+2],R1
004CD5 8A0F           17885         MOV.W   [R7],R0
004CD7 C4rrrrrr       17886         FCALL   __UMODL
004CDB 8C0F08         17887         MOV.W   [R7+8],R0
                      17888 ; rs232cmd.c 4953                                       month = ( Calibration.BBCalibration[Suffi
                            x[0]].Date / 100) % 100;
004CDE B930           17890         MOV.W   R3,#00H
004CE0 99280064       17891         MOV.W   R2,#064H
004CE4 8953           17892         MOV.W   R5,R3
004CE6 8942           17893         MOV.W   R4,R2
004CE8 8C1702         17894         MOV.W   R1,[R7+2]
004CEB 8A07           17895         MOV.W   R0,[R7]
004CED C4rrrrrr       17896         FCALL   __UDIVL
004CF1 8935           17897         MOV.W   R3,R5
004CF3 8924           17898         MOV.W   R2,R4
004CF5 C4rrrrrr       17899         FCALL   __UMODL
004CF9 8C0F06         17900         MOV.W   [R7+6],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 293

ADDR   CODE            LINE SOURCELINE
                      17901 ; rs232cmd.c 4954                                       year = ( Calibration.BBCalibration[Suffix
                            [0]].Date / 10000);
004CFC B930           17903         MOV.W   R3,#00H
004CFE 99282710       17904         MOV.W   R2,#02710H
004D02 8C1702         17905         MOV.W   R1,[R7+2]
004D05 8A07           17906         MOV.W   R0,[R7]
004D07 C4rrrrrr       17907         FCALL   __UDIVL
004D0B 8C0F04         17908         MOV.W   [R7+4],R0
                      17909 ; rs232cmd.c 4955       
                      17910 ; rs232cmd.c 4956                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
004D0E 91A8rr         17912         MOV.B   R5L,#SEG( __lc_bs )
004D11 71BB           17913         XOR.B   R5H,R5H
004D13 40470A         17914         LEA     R4,R7+10
004D16 8C0708         17915         MOV.W   R0,[R7+8]
004D19 0F01           17916         PUSH.W  R0
004D1B 8C0708         17918         MOV.W   R0,[R7+8]
004D1E 0F01           17919         PUSH.W  R0
004D20 8C0708         17921         MOV.W   R0,[R7+8]
004D23 0F01           17922         PUSH.W  R0
004D25 9918rrrr       17924         MOV.W   R1,#SEG( _1174 )
004D29 9908rrrr       17925         MOV.W   R0,#SOF( _1174 )
004D2D 0F03           17926         PUSH.W  R0, R1
004D2F 8915           17928         MOV.W   R1,R5
004D31 8904           17929         MOV.W   R0,R4
                      17930         CALL    _sprintf
004D33 C4rrrrrr       +17930 ;       FCALL   _sprintf
004D37 9970000A       17931         ADD.W   R7,#0AH
                      17933 ; rs232cmd.c 4957       
                      17934 ; rs232cmd.c 4958                                       rs232puts( buffer);
004D3B 8915           17936         MOV.W   R1,R5
004D3D 8904           17937         MOV.W   R0,R4
                      17938         CALL    _rs232puts
004D3F C4rrrrrr       +17938 ;       FCALL   _rs232puts
                      17939 ; rs232cmd.c 4959                               }
                      17940 ; rs232cmd.c 4960                       }
004D43 FE6A           17942         BR      _1263
004D43 FE6A00         17942         BR      _1263
004D46                17943 _1253:
                      17944 ; rs232cmd.c 4961                       else
                      17945 ; rs232cmd.c 4962                       {
                      17946 ; rs232cmd.c 4963                               if ( !PasswordProtected)
004D46 964842rr       17948         MOV.B   ES,#SEG( _PasswordProtected )
004D4A 9908rrrr       17949         MOV.W   R0,#SOF( _PasswordProtected )
004D4E 8A00           17950         MOV.W   R0,[R0]
004D50 F263           17951         BNE     _1263
                      17952 ; rs232cmd.c 4964                               {
                      17953 ; rs232cmd.c 4965                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
004D52 964842rr       17955         MOV.B   ES,#SEG( _ParCnt )
004D56 9908rrrr       17956         MOV.W   R0,#SOF( _ParCnt )
004D5A 8200           17957         MOV.B   R0L,[R0]
004D5C 910403         17958         CMP.B   R0L,#03H
004D5F F220           17959         BNE     _1254
004D61 9168rr         17960         MOV.B   R3L,#SEG( __lc_bs )
004D64 7177           17961         XOR.B   R3H,R3H
004D66 402704         17962         LEA     R2,R7+4
004D69 91A8rr         17963         MOV.B   R5L,#SEG( __lc_bs )
004D6C 71BB           17964         XOR.B   R5H,R5H
004D6E 404706         17965         LEA     R4,R7+6
004D71 9128rr         17966         MOV.B   R1L,#SEG( __lc_bs )
004D74 7133           17967         XOR.B   R1H,R1H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 294

ADDR   CODE            LINE SOURCELINE
004D76 400708         17968         LEA     R0,R7+8
004D79 0F03           17969         PUSH.W  R0, R1
004D7B 0F30           17971         PUSH.W  R4, R5
004D7D 0F0C           17973         PUSH.W  R2, R3
004D7F 9938rrrr       17975         MOV.W   R3,#SEG( _1175 )
004D83 9928rrrr       17976         MOV.W   R2,#SOF( _1175 )
004D87 0F0C           17977         PUSH.W  R2, R3
004D89 9918rrrr       17979         MOV.W   R1,#SEG( _Cmd )
004D8D 9908rrrr       17980         MOV.W   R0,#SOF( _Cmd )
                      17981         CALL    _sscanf
004D91 C4rrrrrr       +17981 ;       FCALL   _sscanf
004D95 99700010       17982         ADD.W   R7,#010H
004D99 99040003       17984         CMP.W   R0,#03H
004D9D F307           17985         BEQ     _1255
004D9D F30700         17985         BEQ     _1255
004DA0                17986 _1254:
                      17987 ; rs232cmd.c 4966                                               SCPIError = SyntaxErr;
004DA0 964842rr       17989         MOV.B   ES,#SEG( _SCPIError )
004DA4 9908rrrr       17990         MOV.W   R0,#SOF( _SCPIError )
004DA8 BA03           17991         MOV.W   [R0],#03H
004DAA FE36           17992         BR      _1263
004DAA FE36           17992         BR      _1263
004DAC                17993 _1255:
                      17994 ; rs232cmd.c 4967                                       else
                      17995 ; rs232cmd.c 4968                                       {
                      17996 ; rs232cmd.c 4969                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004DAC 8C0704         17998         MOV.W   R0,[R7+4]
004DAF 8C1706         17999         MOV.W   R1,[R7+6]
004DB2 8C2708         18000         MOV.W   R2,[R7+8]
                      18001         CALL    _ValidateDate
004DB5 C4rrrrrr       +18001 ;       FCALL   _ValidateDate
004DB9 6900           18002         OR.W    R0,R0
004DBB F208           18003         BNE     _1256
                      18004 ; rs232cmd.c 4970                                                       SCPIError = ExecErr;
004DBD 964842rr       18006         MOV.B   ES,#SEG( _SCPIError )
004DC1 9908rrrr       18007         MOV.W   R0,#SOF( _SCPIError )
004DC5 9A08001D       18008         MOV.W   [R0],#01DH
004DC9 FE27           18009         BR      _1263
004DC9 FE2700         18009         BR      _1263
004DCC                18010 _1256:
                      18011 ; rs232cmd.c 4971                                               else
                      18012 ; rs232cmd.c 4972                                               {
                      18013 ; rs232cmd.c 4973                                                       Calibration.BBCalibration
                            [Suffix[0]].Date = day + 100*month + 10000*year;
004DCC 8C0706         18015         MOV.W   R0,[R7+6]
004DCF E9000064       18016         MULU.W  R0,#064H
004DD3 0C0708         18017         ADD.W   R0,[R7+8]
004DD6 8C2704         18018         MOV.W   R2,[R7+4]
004DD9 E9202710       18019         MULU.W  R2,#02710H
004DDD 0902           18020         ADD.W   R0,R2
004DDF B910           18021         MOVS.W  R1,#00H
004DE1 964842rr       18022         MOV.B   ES,#SEG( _Suffix )
004DE5 9928rrrr       18023         MOV.W   R2,#SOF( _Suffix )
004DE9 8A22           18024         MOV.W   R2,[R2]
004DEB E9200014       18025         MULU.W  R2,#014H
004DEF B930           18026         MOVS.W  R3,#00H
004DF1 964842rr       18027         MOV.B   ES,#SEG( _Calibration+138 )
004DF5 8D0Arrrr       18028         MOV.W   [R2+SOF( _Calibration+138 )],R0
004DF9 8D1Arrrr       18029         MOV.W   [R2+SOF( _Calibration+140 )],R1
                      18030 ; rs232cmd.c 4974                                               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 295

ADDR   CODE            LINE SOURCELINE
                      18031 ; rs232cmd.c 4975                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004DFD 9918rrrr       18033         MOV.W   R1,#SEG( _Calibration )
004E01 9908rrrr       18034         MOV.W   R0,#SOF( _Calibration )
004E05 964842rr       18035         MOV.B   ES,#SEG( _CalibrationPtr )
004E09 9928rrrr       18036         MOV.W   R2,#SOF( _CalibrationPtr )
004E0D 8A22           18037         MOV.W   R2,[R2]
004E0F 993800E0       18038         MOV.W   R3,#0E0H
                      18039         CALL    _NV_Store
004E13 C4rrrrrr       +18039 ;       FCALL   _NV_Store
                      18040 ; rs232cmd.c 4976                                               }
                      18041 ; rs232cmd.c 4977                                       }                               
                      18042 ; rs232cmd.c 4978                               }
                      18043 ; rs232cmd.c 4979                       }
                      18044 ; rs232cmd.c 4980               }
004E18                18046 _1263:
                      18047 ; rs232cmd.c 4981       }
004E18 9970001E       18049         ADD.W   R7,#01EH
004E1C 2F30           18051         POP.W   R4, R5
004E1E D680           18053         RET
                      18055 ; rs232cmd.c 4982       
                      18056 ; rs232cmd.c 4983       /************************************************************************
                            **/
                      18057 ; rs232cmd.c 4984       /* FactBBGenVersion                                                      
                                                                                                                             
                                         RS232CMD.C */
                      18058 ; rs232cmd.c 4985       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18059 ; rs232cmd.c 4986       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      18060 ; rs232cmd.c 4987       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      18061 ; rs232cmd.c 4988       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18062 ; rs232cmd.c 4989       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18063 ; rs232cmd.c 4990       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18064 ; rs232cmd.c 4991       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18065 ; rs232cmd.c 4992       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18066 ; rs232cmd.c 4993       /************************************************************************
                            **/
                      18067 ; rs232cmd.c 4994       void FactBBGenVersion( void)
                      18068 ; rs232cmd.c 4995       {
                      18069         ALIGN   1
                      18071         PUBLIC  _FactBBGenVersion
004E20                18072 _FactBBGenVersion:
004E20 0F30           18076         PUSH.W  R4, R5
004E22 9972000A       18078         SUB.W   R7,#0AH
                      18081 ; rs232cmd.c 4996               char result[10];
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 296

ADDR   CODE            LINE SOURCELINE
                      18082 ; rs232cmd.c 4997       
                      18083 ; rs232cmd.c 4998               if ( CmdExecute && !SCPIError)
004E26 964842rr       18085         MOV.B   ES,#SEG( _CmdExecute )
004E2A 9908rrrr       18086         MOV.W   R0,#SOF( _CmdExecute )
004E2E 8200           18087         MOV.B   R0L,[R0]
004E30 F33D           18088         BEQ     _1274
004E32 964842rr       18089         MOV.B   ES,#SEG( _SCPIError )
004E36 9908rrrr       18090         MOV.W   R0,#SOF( _SCPIError )
004E3A 8A00           18091         MOV.W   R0,[R0]
004E3C F237           18092         BNE     _1274
                      18093 ; rs232cmd.c 4999               {
                      18094 ; rs232cmd.c 5000                       if ( CmdRequest)
004E3E 964842rr       18096         MOV.B   ES,#SEG( _CmdRequest )
004E42 9908rrrr       18097         MOV.W   R0,#SOF( _CmdRequest )
004E46 8200           18098         MOV.B   R0L,[R0]
004E48 F32C           18099         BEQ     _1269
                      18100 ; rs232cmd.c 5001                       {
                      18101 ; rs232cmd.c 5002                               if ( ParCnt || Suffix[0])
004E4A 964842rr       18103         MOV.B   ES,#SEG( _ParCnt )
004E4E 9908rrrr       18104         MOV.W   R0,#SOF( _ParCnt )
004E52 8200           18105         MOV.B   R0L,[R0]
004E54 F206           18106         BNE     _1266
004E56 964842rr       18107         MOV.B   ES,#SEG( _Suffix )
004E5A 9908rrrr       18108         MOV.W   R0,#SOF( _Suffix )
004E5E 8A00           18109         MOV.W   R0,[R0]
004E60 F306           18110         BEQ     _1267
004E60 F306           18110         BEQ     _1267
004E62                18111 _1266:
                      18112 ; rs232cmd.c 5003                                       SCPIError = SyntaxErr;
004E62 964842rr       18114         MOV.B   ES,#SEG( _SCPIError )
004E66 9908rrrr       18115         MOV.W   R0,#SOF( _SCPIError )
004E6A BA03           18116         MOV.W   [R0],#03H
004E6C FE1F           18117         BR      _1274
004E6C FE1F           18117         BR      _1274
004E6E                18118 _1267:
                      18119 ; rs232cmd.c 5004                               else
                      18120 ; rs232cmd.c 5005                               {
                      18121 ; rs232cmd.c 5006                                       if ( BBVersion( result) == OK)
004E6E 91A8rr         18123         MOV.B   R5L,#SEG( __lc_bs )
004E71 71BB           18124         XOR.B   R5H,R5H
004E73 8947           18125         MOV.W   R4,R7
004E75 8915           18126         MOV.W   R1,R5
004E77 8904           18127         MOV.W   R0,R4
                      18128         CALL    _BBVersion
004E79 C4rrrrrr       +18128 ;       FCALL   _BBVersion
004E7D 9904FFFF       18129         CMP.W   R0,#0FFFFH
004E81 F209           18130         BNE     _1268
                      18131 ; rs232cmd.c 5007                                       {
                      18132 ; rs232cmd.c 5008                                               rs232puts( result);
004E83 8915           18134         MOV.W   R1,R5
004E85 8904           18135         MOV.W   R0,R4
                      18136         CALL    _rs232puts
004E87 C4rrrrrr       +18136 ;       FCALL   _rs232puts
                      18137 ; rs232cmd.c 5009                                               rs232putchar( '\n');
004E8B 91080A         18139         MOV.B   R0L,#0AH
                      18140         CALL    _rs232putchar
004E8E C4rrrrrr       +18140 ;       FCALL   _rs232putchar
                      18141 ; rs232cmd.c 5010                                       }
004E92 FE0C           18143         BR      _1274
004E92 FE0C           18143         BR      _1274
004E94                18144 _1268:
                      18145 ; rs232cmd.c 5011                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 297

ADDR   CODE            LINE SOURCELINE
                      18146 ; rs232cmd.c 5012                                               SCPIError = ExecErr;             
                                    
004E94 964842rr       18148         MOV.B   ES,#SEG( _SCPIError )
004E98 9908rrrr       18149         MOV.W   R0,#SOF( _SCPIError )
004E9C 9A08001D       18150         MOV.W   [R0],#01DH
                      18151 ; rs232cmd.c 5013                               }
                      18152 ; rs232cmd.c 5014                       }
004EA0 FE05           18154         BR      _1274
004EA0 FE05           18154         BR      _1274
004EA2                18155 _1269:
                      18156 ; rs232cmd.c 5015                       else
                      18157 ; rs232cmd.c 5016                               SCPIError = SyntaxErr;
004EA2 964842rr       18159         MOV.B   ES,#SEG( _SCPIError )
004EA6 9908rrrr       18160         MOV.W   R0,#SOF( _SCPIError )
004EAA BA03           18161         MOV.W   [R0],#03H
                      18162 ; rs232cmd.c 5017               }
004EAC                18164 _1274:
                      18165 ; rs232cmd.c 5018       }
004EAC 9970000A       18167         ADD.W   R7,#0AH
004EB0 2F30           18169         POP.W   R4, R5
004EB2 D680           18171         RET
                      18173 ; rs232cmd.c 5019       
                      18174 ; rs232cmd.c 5020       /************************************************************************
                            **/
                      18175 ; rs232cmd.c 5021       /* FactBBGenSignal                                                       
                                                                                                                             
                                         RS232CMD.C */
                      18176 ; rs232cmd.c 5022       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18177 ; rs232cmd.c 5023       /* Author:              Kim Engedahl, DEV, 000503                        
                                                                                                                             
                                    */
                      18178 ; rs232cmd.c 5024       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      18179 ; rs232cmd.c 5025       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18180 ; rs232cmd.c 5026       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18181 ; rs232cmd.c 5027       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18182 ; rs232cmd.c 5028       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18183 ; rs232cmd.c 5029       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18184 ; rs232cmd.c 5030       /************************************************************************
                            **/
                      18185 ; rs232cmd.c 5031       void FactBBGenSignal( void)
                      18186 ; rs232cmd.c 5032       {
                      18187         ALIGN   1
                      18189         PUBLIC  _FactBBGenSignal
004EB4                18190 _FactBBGenSignal:
                      18196 ; rs232cmd.c 5033               int signal;
                      18197 ; rs232cmd.c 5034       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 298

ADDR   CODE            LINE SOURCELINE
                      18198 ; rs232cmd.c 5035               if ( CmdExecute && !SCPIError)
004EB4 964842rr       18200         MOV.B   ES,#SEG( _CmdExecute )
004EB8 9908rrrr       18201         MOV.W   R0,#SOF( _CmdExecute )
004EBC 8200           18202         MOV.B   R0L,[R0]
004EBE F349           18203         BEQ     _1287
004EC0 964842rr       18204         MOV.B   ES,#SEG( _SCPIError )
004EC4 9908rrrr       18205         MOV.W   R0,#SOF( _SCPIError )
004EC8 8A00           18206         MOV.W   R0,[R0]
004ECA F243           18207         BNE     _1287
                      18208 ; rs232cmd.c 5036               {
                      18209 ; rs232cmd.c 5037                       if ( CmdRequest)
004ECC 964842rr       18211         MOV.B   ES,#SEG( _CmdRequest )
004ED0 9908rrrr       18212         MOV.W   R0,#SOF( _CmdRequest )
004ED4 8200           18213         MOV.B   R0L,[R0]
004ED6 F306           18214         BEQ     _1276
                      18215 ; rs232cmd.c 5038                               SCPIError = SyntaxErr;
004ED8 964842rr       18217         MOV.B   ES,#SEG( _SCPIError )
004EDC 9908rrrr       18218         MOV.W   R0,#SOF( _SCPIError )
004EE0 BA03           18219         MOV.W   [R0],#03H
004EE2 D680           18220         RET
004EE2 D680           18220         RET
004EE4                18221 _1276:
                      18222 ; rs232cmd.c 5039                       else
                      18223 ; rs232cmd.c 5040                       {
                      18224 ; rs232cmd.c 5041                               if ( !PasswordProtected)
004EE4 964842rr       18226         MOV.B   ES,#SEG( _PasswordProtected )
004EE8 9908rrrr       18227         MOV.W   R0,#SOF( _PasswordProtected )
004EEC 8A00           18228         MOV.W   R0,[R0]
004EEE F231           18229         BNE     _1287
                      18230 ; rs232cmd.c 5042                               {
                      18231 ; rs232cmd.c 5043                                       if ( ParCnt != 1)
004EF0 964842rr       18233         MOV.B   ES,#SEG( _ParCnt )
004EF4 9908rrrr       18234         MOV.W   R0,#SOF( _ParCnt )
004EF8 8200           18235         MOV.B   R0L,[R0]
004EFA 910401         18236         CMP.B   R0L,#01H
004EFD F307           18237         BEQ     _1277
                      18238 ; rs232cmd.c 5044                                               SCPIError = SyntaxErr;
004EFF 964842rr       18240         MOV.B   ES,#SEG( _SCPIError )
004F03 9908rrrr       18241         MOV.W   R0,#SOF( _SCPIError )
004F07 BA03           18242         MOV.W   [R0],#03H
004F09 D680           18243         RET
004F09 D68000         18243         RET
004F0C                18244 _1277:
                      18245 ; rs232cmd.c 5045                                       else
                      18246 ; rs232cmd.c 5046                                       {
                      18247 ; rs232cmd.c 5047                                               signal = FindParameter( Cmd, Fact
                            BBGenSignalPar);
004F0C 9918rrrr       18249         MOV.W   R1,#SEG( _Cmd )
004F10 9908rrrr       18250         MOV.W   R0,#SOF( _Cmd )
004F14 9938rrrr       18251         MOV.W   R3,#SEG( _FactBBGenSignalPar )
004F18 9928rrrr       18252         MOV.W   R2,#SOF( _FactBBGenSignalPar )
004F1C C5086E         18253         CALL    _FindParameter
                      18255 ; rs232cmd.c 5048               
                      18256 ; rs232cmd.c 5049                                               switch ( signal)
004F1F 99040000       18258         CMP.W   R0,#00H
004F23 F305           18259         BEQ     _1278
004F25 99040001       18260         CMP.W   R0,#01H
004F29 F308           18261         BEQ     _1279
004F2B FE0D           18262         BR      _1280
                      18263 ; rs232cmd.c 5050                                               {
                      18264 ; rs232cmd.c 5051                                                       case 0:
004F2E                18266 _1278:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 299

ADDR   CODE            LINE SOURCELINE
                      18267 ; rs232cmd.c 5052                                                               BBControlPort = 0
                            ;
004F2E 964842rr       18269         MOV.B   ES,#SEG( _BBControlPort )
004F32 9908rrrr       18270         MOV.W   R0,#SOF( _BBControlPort )
004F36 BA00           18271         MOV.W   [R0],#00H
                      18272 ; rs232cmd.c 5053                                                               break;
004F38 D680           18274         RET
                      18275 ; rs232cmd.c 5054       
                      18276 ; rs232cmd.c 5055                                                       case 1:
004F3A                18278 _1279:
                      18279 ; rs232cmd.c 5056                                                               BBControlPort = 1
                            ;
004F3A 964842rr       18281         MOV.B   ES,#SEG( _BBControlPort )
004F3E 9908rrrr       18282         MOV.W   R0,#SOF( _BBControlPort )
004F42 BA01           18283         MOV.W   [R0],#01H
                      18284 ; rs232cmd.c 5057                                                               break;
004F44 D680           18286         RET
                      18287 ; rs232cmd.c 5058       
                      18288 ; rs232cmd.c 5059                                                       default:
004F46                18290 _1280:
                      18291 ; rs232cmd.c 5060                                                               SCPIError = DataO
                            utOfRange;
004F46 964842rr       18293         MOV.B   ES,#SEG( _SCPIError )
004F4A 9908rrrr       18294         MOV.W   R0,#SOF( _SCPIError )
004F4E 9A080021       18295         MOV.W   [R0],#021H
                      18296 ; rs232cmd.c 5061                                                               break;
                      18297 ; rs232cmd.c 5062                                               }
                      18298 ; rs232cmd.c 5063                                       }
                      18299 ; rs232cmd.c 5064                               }
                      18300 ; rs232cmd.c 5065                       }
                      18301 ; rs232cmd.c 5066               }
004F52                18303 _1287:
                      18304 ; rs232cmd.c 5067       }
004F52 D680           18306         RET
                      18309 ; rs232cmd.c 5068       
                      18310 ; rs232cmd.c 5069       /************************************************************************
                            **/
                      18311 ; rs232cmd.c 5070       /* FactBBGenPhase                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      18312 ; rs232cmd.c 5071       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18313 ; rs232cmd.c 5072       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18314 ; rs232cmd.c 5073       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18315 ; rs232cmd.c 5074       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18316 ; rs232cmd.c 5075       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18317 ; rs232cmd.c 5076       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 300

ADDR   CODE            LINE SOURCELINE
                      18318 ; rs232cmd.c 5077       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18319 ; rs232cmd.c 5078       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18320 ; rs232cmd.c 5079       /************************************************************************
                            **/
                      18321 ; rs232cmd.c 5080       void FactBBGenPhase( void)
                      18322 ; rs232cmd.c 5081       {
                      18323         ALIGN   1
                      18325         PUBLIC  _FactBBGenPhase
004F54                18326 _FactBBGenPhase:
004F54 0F30           18330         PUSH.W  R4, R5
004F56 99720026       18332         SUB.W   R7,#026H
                      18337 ; rs232cmd.c 5082               char buffer[30];
                      18338 ; rs232cmd.c 5083               UL PhaseG, PhaseM;
                      18339 ; rs232cmd.c 5084       
                      18340 ; rs232cmd.c 5085               if ( CmdExecute && !SCPIError)
004F5A 964842rr       18342         MOV.B   ES,#SEG( _CmdExecute )
004F5E 9908rrrr       18343         MOV.W   R0,#SOF( _CmdExecute )
004F62 8200           18344         MOV.B   R0L,[R0]
                      18345         BEQ     _1298
004F64 F202           +18345 ;       BNE     _LG_1256
004F66 D5009A         +18345 ;       JMP.L   _1298
004F6A D5009A00       +18345 ;       JMP.L   _1298
004F6A                +18345 _LG_1256:
004F6A 964842rr       18346         MOV.B   ES,#SEG( _SCPIError )
004F6E 9908rrrr       18347         MOV.W   R0,#SOF( _SCPIError )
004F72 8A00           18348         MOV.W   R0,[R0]
                      18349         BNE     _1298
004F74 F302           +18349 ;       BEQ     _LG_1258
004F76 D50092         +18349 ;       JMP.L   _1298
004F7A D5009200       +18349 ;       JMP.L   _1298
004F7A                +18349 _LG_1258:
                      18350 ; rs232cmd.c 5086               {
                      18351 ; rs232cmd.c 5087                       if ( CmdRequest)
004F7A 964842rr       18353         MOV.B   ES,#SEG( _CmdRequest )
004F7E 9908rrrr       18354         MOV.W   R0,#SOF( _CmdRequest )
004F82 8200           18355         MOV.B   R0L,[R0]
004F84 F336           18356         BEQ     _1290
                      18357 ; rs232cmd.c 5088                       {
                      18358 ; rs232cmd.c 5089                               if ( ParCnt)
004F86 964842rr       18360         MOV.B   ES,#SEG( _ParCnt )
004F8A 9908rrrr       18361         MOV.W   R0,#SOF( _ParCnt )
004F8E 8200           18362         MOV.B   R0L,[R0]
004F90 F306           18363         BEQ     _1289
                      18364 ; rs232cmd.c 5090                                       SCPIError = SyntaxErr;
004F92 964842rr       18366         MOV.B   ES,#SEG( _SCPIError )
004F96 9908rrrr       18367         MOV.W   R0,#SOF( _SCPIError )
004F9A BA03           18368         MOV.W   [R0],#03H
004F9C FE7F           18369         BR      _1298
004F9C FE7F           18369         BR      _1298
004F9E                18370 _1289:
                      18371 ; rs232cmd.c 5091                               else
                      18372 ; rs232cmd.c 5092                               {
                      18373 ; rs232cmd.c 5093                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .BBCalibration[Suffix[0]].PhaseG, 
                      18374 ; rs232cmd.c 5094                                                                                
                                                                                                Calibration.BBCalibration[Suf
                            fix[0]].PhaseM);
004F9E 91A8rr         18376         MOV.B   R5L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 301

ADDR   CODE            LINE SOURCELINE
004FA1 71BB           18377         XOR.B   R5H,R5H
004FA3 8947           18378         MOV.W   R4,R7
004FA5 964842rr       18379         MOV.B   ES,#SEG( _Suffix )
004FA9 9908rrrr       18380         MOV.W   R0,#SOF( _Suffix )
004FAD 8A00           18381         MOV.W   R0,[R0]
004FAF E9000014       18382         MULU.W  R0,#014H
004FB3 B910           18383         MOVS.W  R1,#00H
004FB5 964842rr       18384         MOV.B   ES,#SEG( _Calibration+142 )
004FB9 8D20rrrr       18385         MOV.W   R2,[R0+SOF( _Calibration+142 )]
004FBD 8D30rrrr       18386         MOV.W   R3,[R0+SOF( _Calibration+144 )]
004FC1 964842rr       18387         MOV.B   ES,#SEG( _Calibration+148 )
004FC5 8D10rrrr       18388         MOV.W   R1,[R0+SOF( _Calibration+150 )]
004FC9 8D00rrrr       18389         MOV.W   R0,[R0+SOF( _Calibration+148 )]
004FCD 0F03           18390         PUSH.W  R0, R1
004FCF 0F0C           18392         PUSH.W  R2, R3
004FD1 9918rrrr       18394         MOV.W   R1,#SEG( _1227 )
004FD5 9908rrrr       18395         MOV.W   R0,#SOF( _1227 )
004FD9 0F03           18396         PUSH.W  R0, R1
004FDB 8915           18398         MOV.W   R1,R5
004FDD 8904           18399         MOV.W   R0,R4
                      18400         CALL    _sprintf
004FDF C4rrrrrr       +18400 ;       FCALL   _sprintf
004FE3 9970000C       18401         ADD.W   R7,#0CH
                      18403 ; rs232cmd.c 5095                                       rs232puts( buffer);
004FE7 8915           18405         MOV.W   R1,R5
004FE9 8904           18406         MOV.W   R0,R4
                      18407         CALL    _rs232puts
004FEB C4rrrrrr       +18407 ;       FCALL   _rs232puts
                      18408 ; rs232cmd.c 5096                               }
                      18409 ; rs232cmd.c 5097                       }
004FEF FE56           18411         BR      _1298
004FEF FE5600         18411         BR      _1298
004FF2                18412 _1290:
                      18413 ; rs232cmd.c 5098                       else
                      18414 ; rs232cmd.c 5099                       {
                      18415 ; rs232cmd.c 5100                               if ( !PasswordProtected)
004FF2 964842rr       18417         MOV.B   ES,#SEG( _PasswordProtected )
004FF6 9908rrrr       18418         MOV.W   R0,#SOF( _PasswordProtected )
004FFA 8A00           18419         MOV.W   R0,[R0]
004FFC F24F           18420         BNE     _1298
                      18421 ; rs232cmd.c 5101                               {
                      18422 ; rs232cmd.c 5102                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
004FFE 964842rr       18424         MOV.B   ES,#SEG( _ParCnt )
005002 9908rrrr       18425         MOV.W   R0,#SOF( _ParCnt )
005006 8200           18426         MOV.B   R0L,[R0]
005008 910402         18427         CMP.B   R0L,#02H
00500B F21B           18428         BNE     _1291
00500D 9918rrrr       18429         MOV.W   R1,#SEG( _Cmd )
005011 9908rrrr       18430         MOV.W   R0,#SOF( _Cmd )
005015 9168rr         18431         MOV.B   R3L,#SEG( __lc_bs )
005018 7177           18432         XOR.B   R3H,R3H
00501A 40271E         18433         LEA     R2,R7+30
00501D 91A8rr         18434         MOV.B   R5L,#SEG( __lc_bs )
005020 71BB           18435         XOR.B   R5H,R5H
005022 404722         18436         LEA     R4,R7+34
005025 0F30           18437         PUSH.W  R4, R5
005027 0F0C           18439         PUSH.W  R2, R3
005029 9938rrrr       18441         MOV.W   R3,#SEG( _1038 )
00502D 9928rrrr       18442         MOV.W   R2,#SOF( _1038 )
005031 0F0C           18443         PUSH.W  R2, R3
                      18445         CALL    _sscanf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 302

ADDR   CODE            LINE SOURCELINE
005033 C4rrrrrr       +18445 ;       FCALL   _sscanf
005037 9970000C       18446         ADD.W   R7,#0CH
00503B 99040002       18448         CMP.W   R0,#02H
00503F F307           18449         BEQ     _1292
00503F F30700         18449         BEQ     _1292
005042                18450 _1291:
                      18451 ; rs232cmd.c 5103                                               SCPIError = SyntaxErr;
005042 964842rr       18453         MOV.B   ES,#SEG( _SCPIError )
005046 9908rrrr       18454         MOV.W   R0,#SOF( _SCPIError )
00504A BA03           18455         MOV.W   [R0],#03H
00504C FE27           18456         BR      _1298
00504C FE27           18456         BR      _1298
00504E                18457 _1292:
                      18458 ; rs232cmd.c 5104                                       else
                      18459 ; rs232cmd.c 5105                                       {
                      18460 ; rs232cmd.c 5106                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseG = PhaseG;
00504E 964842rr       18462         MOV.B   ES,#SEG( _Suffix )
005052 9908rrrr       18463         MOV.W   R0,#SOF( _Suffix )
005056 8A00           18464         MOV.W   R0,[R0]
005058 E9000014       18465         MULU.W  R0,#014H
00505C B910           18466         MOVS.W  R1,#00H
00505E 8C3720         18467         MOV.W   R3,[R7+32]
005061 8C271E         18468         MOV.W   R2,[R7+30]
005064 964842rr       18469         MOV.B   ES,#SEG( _Calibration+142 )
005068 8D28rrrr       18470         MOV.W   [R0+SOF( _Calibration+142 )],R2
00506C 8D38rrrr       18471         MOV.W   [R0+SOF( _Calibration+144 )],R3
                      18472 ; rs232cmd.c 5107                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseM = PhaseM;
005070 8C3724         18474         MOV.W   R3,[R7+36]
005073 8C2722         18475         MOV.W   R2,[R7+34]
005076 964842rr       18476         MOV.B   ES,#SEG( _Calibration+148 )
00507A 8D28rrrr       18477         MOV.W   [R0+SOF( _Calibration+148 )],R2
00507E 8D38rrrr       18478         MOV.W   [R0+SOF( _Calibration+150 )],R3
                      18479 ; rs232cmd.c 5108                                       
                      18480 ; rs232cmd.c 5109                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005082 9918rrrr       18482         MOV.W   R1,#SEG( _Calibration )
005086 9908rrrr       18483         MOV.W   R0,#SOF( _Calibration )
00508A 964842rr       18484         MOV.B   ES,#SEG( _CalibrationPtr )
00508E 9928rrrr       18485         MOV.W   R2,#SOF( _CalibrationPtr )
005092 8A22           18486         MOV.W   R2,[R2]
005094 993800E0       18487         MOV.W   R3,#0E0H
                      18488         CALL    _NV_Store
005098 C4rrrrrr       +18488 ;       FCALL   _NV_Store
                      18489 ; rs232cmd.c 5110                                       }
                      18490 ; rs232cmd.c 5111                               }
                      18491 ; rs232cmd.c 5112                       }
                      18492 ; rs232cmd.c 5113               }
00509C                18494 _1298:
                      18495 ; rs232cmd.c 5114       }
00509C 99700026       18497         ADD.W   R7,#026H
0050A0 2F30           18499         POP.W   R4, R5
0050A2 D680           18501         RET
                      18503 ; rs232cmd.c 5115       
                      18504 ; rs232cmd.c 5116       /************************************************************************
                            **/
                      18505 ; rs232cmd.c 5117       /* FactBBGenScHPhase                                                     
                                                                                                                             
                                RS232CMD.C  */
                      18506 ; rs232cmd.c 5118       /*                                                                       
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 303

ADDR   CODE            LINE SOURCELINE
                                                    */
                      18507 ; rs232cmd.c 5119       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18508 ; rs232cmd.c 5120       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18509 ; rs232cmd.c 5121       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18510 ; rs232cmd.c 5122       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18511 ; rs232cmd.c 5123       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18512 ; rs232cmd.c 5124       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18513 ; rs232cmd.c 5125       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18514 ; rs232cmd.c 5126       /************************************************************************
                            **/
                      18515 ; rs232cmd.c 5127       void FactBBGenScHPhase( void)
                      18516 ; rs232cmd.c 5128       {
                      18517         ALIGN   1
                      18519         PUBLIC  _FactBBGenScHPhase
0050A4                18520 _FactBBGenScHPhase:
0050A4 0F30           18524         PUSH.W  R4, R5
0050A6 99720022       18526         SUB.W   R7,#022H
                      18531 ; rs232cmd.c 5129               char buffer[30];
                      18532 ; rs232cmd.c 5130               UI ScHPhaseG, ScHPhaseM;
                      18533 ; rs232cmd.c 5131       
                      18534 ; rs232cmd.c 5132               if ( CmdExecute && !SCPIError)
0050AA 964842rr       18536         MOV.B   ES,#SEG( _CmdExecute )
0050AE 9908rrrr       18537         MOV.W   R0,#SOF( _CmdExecute )
0050B2 8200           18538         MOV.B   R0L,[R0]
                      18539         BEQ     _1312
0050B4 F202           +18539 ;       BNE     _LG_1270
0050B6 D50097         +18539 ;       JMP.L   _1312
0050BA D5009700       +18539 ;       JMP.L   _1312
0050BA                +18539 _LG_1270:
0050BA 964842rr       18540         MOV.B   ES,#SEG( _SCPIError )
0050BE 9908rrrr       18541         MOV.W   R0,#SOF( _SCPIError )
0050C2 8A00           18542         MOV.W   R0,[R0]
                      18543         BNE     _1312
0050C4 F302           +18543 ;       BEQ     _LG_1272
0050C6 D5008F         +18543 ;       JMP.L   _1312
0050CA D5008F00       +18543 ;       JMP.L   _1312
0050CA                +18543 _LG_1272:
                      18544 ; rs232cmd.c 5133               {
                      18545 ; rs232cmd.c 5134                       if ( CmdRequest)
0050CA 964842rr       18547         MOV.B   ES,#SEG( _CmdRequest )
0050CE 9908rrrr       18548         MOV.W   R0,#SOF( _CmdRequest )
0050D2 8200           18549         MOV.B   R0L,[R0]
0050D4 F332           18550         BEQ     _1304
                      18551 ; rs232cmd.c 5135                       {
                      18552 ; rs232cmd.c 5136                               if ( ParCnt)
0050D6 964842rr       18554         MOV.B   ES,#SEG( _ParCnt )
0050DA 9908rrrr       18555         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 304

ADDR   CODE            LINE SOURCELINE
0050DE 8200           18556         MOV.B   R0L,[R0]
0050E0 F306           18557         BEQ     _1303
                      18558 ; rs232cmd.c 5137                                       SCPIError = SyntaxErr;
0050E2 964842rr       18560         MOV.B   ES,#SEG( _SCPIError )
0050E6 9908rrrr       18561         MOV.W   R0,#SOF( _SCPIError )
0050EA BA03           18562         MOV.W   [R0],#03H
0050EC FE7C           18563         BR      _1312
0050EC FE7C           18563         BR      _1312
0050EE                18564 _1303:
                      18565 ; rs232cmd.c 5138                               else
                      18566 ; rs232cmd.c 5139                               {
                      18567 ; rs232cmd.c 5140                                       sprintf( buffer, "%u,%u\n", Calibration.B
                            BCalibration[Suffix[0]].ScHPhaseG, 
                      18568 ; rs232cmd.c 5141                                                                                
                                                                                        Calibration.BBCalibration[Suffix[0]].
                            ScHPhaseM);
0050EE 91A8rr         18570         MOV.B   R5L,#SEG( __lc_bs )
0050F1 71BB           18571         XOR.B   R5H,R5H
0050F3 8947           18572         MOV.W   R4,R7
0050F5 964842rr       18573         MOV.B   ES,#SEG( _Suffix )
0050F9 9908rrrr       18574         MOV.W   R0,#SOF( _Suffix )
0050FD 8A00           18575         MOV.W   R0,[R0]
0050FF E9000014       18576         MULU.W  R0,#014H
005103 B910           18577         MOVS.W  R1,#00H
005105 964842rr       18578         MOV.B   ES,#SEG( _Calibration+146 )
005109 8D20rrrr       18579         MOV.W   R2,[R0+SOF( _Calibration+146 )]
00510D 964842rr       18580         MOV.B   ES,#SEG( _Calibration+152 )
005111 8D00rrrr       18581         MOV.W   R0,[R0+SOF( _Calibration+152 )]
005115 0F01           18582         PUSH.W  R0
005117 0F04           18584         PUSH.W  R2
005119 9918rrrr       18586         MOV.W   R1,#SEG( _1301 )
00511D 9908rrrr       18587         MOV.W   R0,#SOF( _1301 )
005121 0F03           18588         PUSH.W  R0, R1
005123 8915           18590         MOV.W   R1,R5
005125 8904           18591         MOV.W   R0,R4
                      18592         CALL    _sprintf
005127 C4rrrrrr       +18592 ;       FCALL   _sprintf
00512B 99700008       18593         ADD.W   R7,#08H
                      18595 ; rs232cmd.c 5142                                       rs232puts( buffer);
00512F 8915           18597         MOV.W   R1,R5
005131 8904           18598         MOV.W   R0,R4
                      18599         CALL    _rs232puts
005133 C4rrrrrr       +18599 ;       FCALL   _rs232puts
                      18600 ; rs232cmd.c 5143                               }
                      18601 ; rs232cmd.c 5144                       }
005137 FE57           18603         BR      _1312
005137 FE5700         18603         BR      _1312
00513A                18604 _1304:
                      18605 ; rs232cmd.c 5145                       else
                      18606 ; rs232cmd.c 5146                       {
                      18607 ; rs232cmd.c 5147                               if ( !PasswordProtected)
00513A 964842rr       18609         MOV.B   ES,#SEG( _PasswordProtected )
00513E 9908rrrr       18610         MOV.W   R0,#SOF( _PasswordProtected )
005142 8A00           18611         MOV.W   R0,[R0]
005144 F250           18612         BNE     _1312
                      18613 ; rs232cmd.c 5148                               {
                      18614 ; rs232cmd.c 5149                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005146 964842rr       18616         MOV.B   ES,#SEG( _ParCnt )
00514A 9908rrrr       18617         MOV.W   R0,#SOF( _ParCnt )
00514E 8200           18618         MOV.B   R0L,[R0]
005150 910402         18619         CMP.B   R0L,#02H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 305

ADDR   CODE            LINE SOURCELINE
005153 F21B           18620         BNE     _1305
005155 9918rrrr       18621         MOV.W   R1,#SEG( _Cmd )
005159 9908rrrr       18622         MOV.W   R0,#SOF( _Cmd )
00515D 9168rr         18623         MOV.B   R3L,#SEG( __lc_bs )
005160 7177           18624         XOR.B   R3H,R3H
005162 40271E         18625         LEA     R2,R7+30
005165 91A8rr         18626         MOV.B   R5L,#SEG( __lc_bs )
005168 71BB           18627         XOR.B   R5H,R5H
00516A 404720         18628         LEA     R4,R7+32
00516D 0F30           18629         PUSH.W  R4, R5
00516F 0F0C           18631         PUSH.W  R2, R3
005171 9938rrrr       18633         MOV.W   R3,#SEG( _1302 )
005175 9928rrrr       18634         MOV.W   R2,#SOF( _1302 )
005179 0F0C           18635         PUSH.W  R2, R3
                      18637         CALL    _sscanf
00517B C4rrrrrr       +18637 ;       FCALL   _sscanf
00517F 9970000C       18638         ADD.W   R7,#0CH
005183 99040002       18640         CMP.W   R0,#02H
005187 F307           18641         BEQ     _1306
005187 F30700         18641         BEQ     _1306
00518A                18642 _1305:
                      18643 ; rs232cmd.c 5150                                               SCPIError = SyntaxErr;
00518A 964842rr       18645         MOV.B   ES,#SEG( _SCPIError )
00518E 9908rrrr       18646         MOV.W   R0,#SOF( _SCPIError )
005192 BA03           18647         MOV.W   [R0],#03H
005194 FE28           18648         BR      _1312
005194 FE28           18648         BR      _1312
005196                18649 _1306:
                      18650 ; rs232cmd.c 5151                                       else
                      18651 ; rs232cmd.c 5152                                       {
                      18652 ; rs232cmd.c 5153                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseG = ScHPhaseG;
005196 964842rr       18654         MOV.B   ES,#SEG( _Suffix )
00519A 9908rrrr       18655         MOV.W   R0,#SOF( _Suffix )
00519E 8A00           18656         MOV.W   R0,[R0]
0051A0 E9000014       18657         MULU.W  R0,#014H
0051A4 B910           18658         MOVS.W  R1,#00H
0051A6 8C271E         18659         MOV.W   R2,[R7+30]
0051A9 964842rr       18660         MOV.B   ES,#SEG( _Calibration+146 )
0051AD 8D28rrrr       18661         MOV.W   [R0+SOF( _Calibration+146 )],R2
                      18662 ; rs232cmd.c 5154                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseM = ScHPhaseM;
0051B1 964842rr       18664         MOV.B   ES,#SEG( _Suffix )
0051B5 9908rrrr       18665         MOV.W   R0,#SOF( _Suffix )
0051B9 8A00           18666         MOV.W   R0,[R0]
0051BB E9000014       18667         MULU.W  R0,#014H
0051BF B910           18668         MOVS.W  R1,#00H
0051C1 8C2720         18669         MOV.W   R2,[R7+32]
0051C4 964842rr       18670         MOV.B   ES,#SEG( _Calibration+152 )
0051C8 8D28rrrr       18671         MOV.W   [R0+SOF( _Calibration+152 )],R2
                      18672 ; rs232cmd.c 5155                                       
                      18673 ; rs232cmd.c 5156                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0051CC 9918rrrr       18675         MOV.W   R1,#SEG( _Calibration )
0051D0 9908rrrr       18676         MOV.W   R0,#SOF( _Calibration )
0051D4 964842rr       18677         MOV.B   ES,#SEG( _CalibrationPtr )
0051D8 9928rrrr       18678         MOV.W   R2,#SOF( _CalibrationPtr )
0051DC 8A22           18679         MOV.W   R2,[R2]
0051DE 993800E0       18680         MOV.W   R3,#0E0H
                      18681         CALL    _NV_Store
0051E2 C4rrrrrr       +18681 ;       FCALL   _NV_Store
                      18682 ; rs232cmd.c 5157                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 306

ADDR   CODE            LINE SOURCELINE
                      18683 ; rs232cmd.c 5158                               }
                      18684 ; rs232cmd.c 5159                       }
                      18685 ; rs232cmd.c 5160               }
0051E6                18687 _1312:
                      18688 ; rs232cmd.c 5161       }
0051E6 99700022       18690         ADD.W   R7,#022H
0051EA 2F30           18692         POP.W   R4, R5
0051EC D680           18694         RET
                      18696 ; rs232cmd.c 5162       
                      18697 ; rs232cmd.c 5163       /************************************************************************
                            **/
                      18698 ; rs232cmd.c 5164       /* FactBBGenDAC                                                          
                                                                                                                             
                                                 RS232CMD.C */
                      18699 ; rs232cmd.c 5165       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18700 ; rs232cmd.c 5166       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18701 ; rs232cmd.c 5167       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18702 ; rs232cmd.c 5168       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18703 ; rs232cmd.c 5169       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18704 ; rs232cmd.c 5170       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18705 ; rs232cmd.c 5171       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18706 ; rs232cmd.c 5172       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18707 ; rs232cmd.c 5173       /************************************************************************
                            **/
                      18708 ; rs232cmd.c 5174       void FactBBGenDAC( void)
                      18709 ; rs232cmd.c 5175       {
                      18710         ALIGN   1
                      18712         PUBLIC  _FactBBGenDAC
0051EE                18713 _FactBBGenDAC:
0051EE 0F30           18717         PUSH.W  R4, R5
0051F0 99720024       18719         SUB.W   R7,#024H
                      18725 ; rs232cmd.c 5176               char buffer[30];
                      18726 ; rs232cmd.c 5177               UI DACGain, DACOffset, DACLevel;
                      18727 ; rs232cmd.c 5178       
                      18728 ; rs232cmd.c 5179               if ( CmdExecute && !SCPIError)
0051F4 964842rr       18730         MOV.B   ES,#SEG( _CmdExecute )
0051F8 9908rrrr       18731         MOV.W   R0,#SOF( _CmdExecute )
0051FC 8200           18732         MOV.B   R0L,[R0]
                      18733         BEQ     _1324
0051FE F202           +18733 ;       BNE     _LG_1284
005200 D500A3         +18733 ;       JMP.L   _1324
005204 D500A300       +18733 ;       JMP.L   _1324
005204                +18733 _LG_1284:
005204 964842rr       18734         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 307

ADDR   CODE            LINE SOURCELINE
005208 9908rrrr       18735         MOV.W   R0,#SOF( _SCPIError )
00520C 8A00           18736         MOV.W   R0,[R0]
                      18737         BNE     _1324
00520E F302           +18737 ;       BEQ     _LG_1286
005210 D5009B         +18737 ;       JMP.L   _1324
005214 D5009B00       +18737 ;       JMP.L   _1324
005214                +18737 _LG_1286:
                      18738 ; rs232cmd.c 5180               {
                      18739 ; rs232cmd.c 5181                       if ( CmdRequest)
005214 964842rr       18741         MOV.B   ES,#SEG( _CmdRequest )
005218 9908rrrr       18742         MOV.W   R0,#SOF( _CmdRequest )
00521C 8200           18743         MOV.B   R0L,[R0]
00521E F33B           18744         BEQ     _1316
                      18745 ; rs232cmd.c 5182                       {
                      18746 ; rs232cmd.c 5183                               if ( ParCnt)
005220 964842rr       18748         MOV.B   ES,#SEG( _ParCnt )
005224 9908rrrr       18749         MOV.W   R0,#SOF( _ParCnt )
005228 8200           18750         MOV.B   R0L,[R0]
00522A F307           18751         BEQ     _1315
                      18752 ; rs232cmd.c 5184                                       SCPIError = SyntaxErr;
00522C 964842rr       18754         MOV.B   ES,#SEG( _SCPIError )
005230 9908rrrr       18755         MOV.W   R0,#SOF( _SCPIError )
005234 BA03           18756         MOV.W   [R0],#03H
                      18757         BR      _1324
005236 D50088         +18757         JMP.L   _1324
005236 D5008800       +18757         JMP.L   _1324
00523A                18758 _1315:
                      18759 ; rs232cmd.c 5185                               else
                      18760 ; rs232cmd.c 5186                               {
                      18761 ; rs232cmd.c 5187                                       sprintf( buffer, "%u,%u,%u\n", Calibratio
                            n.BBCalibration[Suffix[0]].DACGain, 
                      18762 ; rs232cmd.c 5188                                                                                
                                                                                                 Calibration.BBCalibration[Su
                            ffix[0]].DACOffset,
                      18763 ; rs232cmd.c 5189                                                                                
                                                                                                 Calibration.BBCalibration[Su
                            ffix[0]].DACLevel);
00523A 91A8rr         18765         MOV.B   R5L,#SEG( __lc_bs )
00523D 71BB           18766         XOR.B   R5H,R5H
00523F 8947           18767         MOV.W   R4,R7
005241 964842rr       18768         MOV.B   ES,#SEG( _Suffix )
005245 9908rrrr       18769         MOV.W   R0,#SOF( _Suffix )
005249 8A00           18770         MOV.W   R0,[R0]
00524B E9000014       18771         MULU.W  R0,#014H
00524F B910           18772         MOVS.W  R1,#00H
005251 964842rr       18773         MOV.B   ES,#SEG( _Calibration+154 )
005255 8540rrrr       18774         MOV.B   R2L,[R0+SOF( _Calibration+154 )]
005259 B150           18775         MOVS.B  R2H,#00H
00525B 964842rr       18776         MOV.B   ES,#SEG( _Calibration+155 )
00525F 8560rrrr       18777         MOV.B   R3L,[R0+SOF( _Calibration+155 )]
005263 B170           18778         MOVS.B  R3H,#00H
005265 964842rr       18779         MOV.B   ES,#SEG( _Calibration+156 )
005269 8500rrrr       18780         MOV.B   R0L,[R0+SOF( _Calibration+156 )]
00526D B110           18781         MOVS.B  R0H,#00H
00526F 0F01           18782         PUSH.W  R0
005271 0F08           18784         PUSH.W  R3
005273 0F04           18786         PUSH.W  R2
005275 9918rrrr       18788         MOV.W   R1,#SEG( _1174 )
005279 9908rrrr       18789         MOV.W   R0,#SOF( _1174 )
00527D 0F03           18790         PUSH.W  R0, R1
00527F 8915           18792         MOV.W   R1,R5
005281 8904           18793         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 308

ADDR   CODE            LINE SOURCELINE
                      18794         CALL    _sprintf
005283 C4rrrrrr       +18794 ;       FCALL   _sprintf
005287 9970000A       18795         ADD.W   R7,#0AH
                      18797 ; rs232cmd.c 5190                                       rs232puts( buffer);
00528B 8915           18799         MOV.W   R1,R5
00528D 8904           18800         MOV.W   R0,R4
                      18801         CALL    _rs232puts
00528F C4rrrrrr       +18801 ;       FCALL   _rs232puts
                      18802 ; rs232cmd.c 5191                               }
                      18803 ; rs232cmd.c 5192                       }
005293 FE5A           18805         BR      _1324
005293 FE5A00         18805         BR      _1324
005296                18806 _1316:
                      18807 ; rs232cmd.c 5193                       else
                      18808 ; rs232cmd.c 5194                       {
                      18809 ; rs232cmd.c 5195                               if ( !PasswordProtected)
005296 964842rr       18811         MOV.B   ES,#SEG( _PasswordProtected )
00529A 9908rrrr       18812         MOV.W   R0,#SOF( _PasswordProtected )
00529E 8A00           18813         MOV.W   R0,[R0]
0052A0 F253           18814         BNE     _1324
                      18815 ; rs232cmd.c 5196                               {
                      18816 ; rs232cmd.c 5197                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &DACGain, &DACOffset, &DACLevel)) != 3))
0052A2 964842rr       18818         MOV.B   ES,#SEG( _ParCnt )
0052A6 9908rrrr       18819         MOV.W   R0,#SOF( _ParCnt )
0052AA 8200           18820         MOV.B   R0L,[R0]
0052AC 910403         18821         CMP.B   R0L,#03H
0052AF F220           18822         BNE     _1317
0052B1 9168rr         18823         MOV.B   R3L,#SEG( __lc_bs )
0052B4 7177           18824         XOR.B   R3H,R3H
0052B6 40271E         18825         LEA     R2,R7+30
0052B9 91A8rr         18826         MOV.B   R5L,#SEG( __lc_bs )
0052BC 71BB           18827         XOR.B   R5H,R5H
0052BE 404720         18828         LEA     R4,R7+32
0052C1 9128rr         18829         MOV.B   R1L,#SEG( __lc_bs )
0052C4 7133           18830         XOR.B   R1H,R1H
0052C6 400722         18831         LEA     R0,R7+34
0052C9 0F03           18832         PUSH.W  R0, R1
0052CB 0F30           18834         PUSH.W  R4, R5
0052CD 0F0C           18836         PUSH.W  R2, R3
0052CF 9938rrrr       18838         MOV.W   R3,#SEG( _1175 )
0052D3 9928rrrr       18839         MOV.W   R2,#SOF( _1175 )
0052D7 0F0C           18840         PUSH.W  R2, R3
0052D9 9918rrrr       18842         MOV.W   R1,#SEG( _Cmd )
0052DD 9908rrrr       18843         MOV.W   R0,#SOF( _Cmd )
                      18844         CALL    _sscanf
0052E1 C4rrrrrr       +18844 ;       FCALL   _sscanf
0052E5 99700010       18845         ADD.W   R7,#010H
0052E9 99040003       18847         CMP.W   R0,#03H
0052ED F307           18848         BEQ     _1318
0052ED F30700         18848         BEQ     _1318
0052F0                18849 _1317:
                      18850 ; rs232cmd.c 5198                                               SCPIError = SyntaxErr;
0052F0 964842rr       18852         MOV.B   ES,#SEG( _SCPIError )
0052F4 9908rrrr       18853         MOV.W   R0,#SOF( _SCPIError )
0052F8 BA03           18854         MOV.W   [R0],#03H
0052FA FE26           18855         BR      _1324
0052FA FE26           18855         BR      _1324
0052FC                18856 _1318:
                      18857 ; rs232cmd.c 5199                                       else
                      18858 ; rs232cmd.c 5200                                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 309

ADDR   CODE            LINE SOURCELINE
                      18859 ; rs232cmd.c 5201                                               Calibration.BBCalibration[Suffix[
                            0]].DACGain = DACGain;
0052FC 8C271E         18861         MOV.W   R2,[R7+30]
0052FF 964842rr       18862         MOV.B   ES,#SEG( _Suffix )
005303 9908rrrr       18863         MOV.W   R0,#SOF( _Suffix )
005307 8A00           18864         MOV.W   R0,[R0]
005309 E9000014       18865         MULU.W  R0,#014H
00530D B910           18866         MOVS.W  R1,#00H
00530F 964842rr       18867         MOV.B   ES,#SEG( _Calibration+154 )
005313 8548rrrr       18868         MOV.B   [R0+SOF( _Calibration+154 )],R2L
                      18869 ; rs232cmd.c 5202                                               Calibration.BBCalibration[Suffix[
                            0]].DACOffset = DACOffset;
005317 8C2720         18871         MOV.W   R2,[R7+32]
00531A 964842rr       18872         MOV.B   ES,#SEG( _Calibration+155 )
00531E 8548rrrr       18873         MOV.B   [R0+SOF( _Calibration+155 )],R2L
                      18874 ; rs232cmd.c 5203                                               Calibration.BBCalibration[Suffix[
                            0]].DACLevel = DACLevel;        
005322 8C2722         18876         MOV.W   R2,[R7+34]
005325 964842rr       18877         MOV.B   ES,#SEG( _Calibration+156 )
005329 8548rrrr       18878         MOV.B   [R0+SOF( _Calibration+156 )],R2L
                      18879 ; rs232cmd.c 5204                                                               
                      18880 ; rs232cmd.c 5205                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
00532D 9918rrrr       18882         MOV.W   R1,#SEG( _Calibration )
005331 9908rrrr       18883         MOV.W   R0,#SOF( _Calibration )
005335 964842rr       18884         MOV.B   ES,#SEG( _CalibrationPtr )
005339 9928rrrr       18885         MOV.W   R2,#SOF( _CalibrationPtr )
00533D 8A22           18886         MOV.W   R2,[R2]
00533F 993800E0       18887         MOV.W   R3,#0E0H
                      18888         CALL    _NV_Store
005343 C4rrrrrr       +18888 ;       FCALL   _NV_Store
                      18889 ; rs232cmd.c 5206                                       }
                      18890 ; rs232cmd.c 5207                               }
                      18891 ; rs232cmd.c 5208                       }
                      18892 ; rs232cmd.c 5209               }
005348                18894 _1324:
                      18895 ; rs232cmd.c 5210       }
005348 99700024       18897         ADD.W   R7,#024H
00534C 2F30           18899         POP.W   R4, R5
00534E D680           18901         RET
                      18903 ; rs232cmd.c 5211       
                      18904 ; rs232cmd.c 5212       /************************************************************************
                            **/
                      18905 ; rs232cmd.c 5213       /* FactTSGenDate                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      18906 ; rs232cmd.c 5214       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18907 ; rs232cmd.c 5215       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18908 ; rs232cmd.c 5216       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      18909 ; rs232cmd.c 5217       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 310

ADDR   CODE            LINE SOURCELINE
                      18910 ; rs232cmd.c 5218       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18911 ; rs232cmd.c 5219       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18912 ; rs232cmd.c 5220       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18913 ; rs232cmd.c 5221       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18914 ; rs232cmd.c 5222       /************************************************************************
                            **/
                      18915 ; rs232cmd.c 5223       void FactTSGenDate( void)
                      18916 ; rs232cmd.c 5224       {
                      18917         ALIGN   1
                      18919         PUBLIC  _FactTSGenDate
005350                18920 _FactTSGenDate:
005350 0F30           18924         PUSH.W  R4, R5
005352 9972001A       18926         SUB.W   R7,#01AH
                      18932 ; rs232cmd.c 5225               UI year, month, day;
                      18933 ; rs232cmd.c 5226               char buffer[20];
                      18934 ; rs232cmd.c 5227       
                      18935 ; rs232cmd.c 5228               if ( CmdExecute && !SCPIError)
005356 964842rr       18937         MOV.B   ES,#SEG( _CmdExecute )
00535A 9908rrrr       18938         MOV.W   R0,#SOF( _CmdExecute )
00535E 8200           18939         MOV.B   R0L,[R0]
                      18940         BEQ     _1338
005360 F202           +18940 ;       BNE     _LG_1298
005362 D500C7         +18940 ;       JMP.L   _1338
005366 D500C700       +18940 ;       JMP.L   _1338
005366                +18940 _LG_1298:
005366 964842rr       18941         MOV.B   ES,#SEG( _SCPIError )
00536A 9908rrrr       18942         MOV.W   R0,#SOF( _SCPIError )
00536E 8A00           18943         MOV.W   R0,[R0]
                      18944         BNE     _1338
005370 F302           +18944 ;       BEQ     _LG_1300
005372 D500BF         +18944 ;       JMP.L   _1338
005376 D500BF00       +18944 ;       JMP.L   _1338
005376                +18944 _LG_1300:
                      18945 ; rs232cmd.c 5229               {
                      18946 ; rs232cmd.c 5230                       if ( CmdRequest)
005376 964842rr       18948         MOV.B   ES,#SEG( _CmdRequest )
00537A 9908rrrr       18949         MOV.W   R0,#SOF( _CmdRequest )
00537E 8200           18950         MOV.B   R0L,[R0]
005380 F35A           18951         BEQ     _1328
                      18952 ; rs232cmd.c 5231                       {
                      18953 ; rs232cmd.c 5232                               if ( ParCnt)
005382 964842rr       18955         MOV.B   ES,#SEG( _ParCnt )
005386 9908rrrr       18956         MOV.W   R0,#SOF( _ParCnt )
00538A 8200           18957         MOV.B   R0L,[R0]
00538C F307           18958         BEQ     _1327
                      18959 ; rs232cmd.c 5233                                       SCPIError = SyntaxErr;
00538E 964842rr       18961         MOV.B   ES,#SEG( _SCPIError )
005392 9908rrrr       18962         MOV.W   R0,#SOF( _SCPIError )
005396 BA03           18963         MOV.W   [R0],#03H
                      18964         BR      _1338
005398 D500AC         +18964         JMP.L   _1338
005398 D500AC00       +18964         JMP.L   _1338
00539C                18965 _1327:
                      18966 ; rs232cmd.c 5234                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 311

ADDR   CODE            LINE SOURCELINE
                      18967 ; rs232cmd.c 5235                               {
                      18968 ; rs232cmd.c 5236                                       day = Calibration.CBCalibration.Date % 10
                            0;
00539C 964842rr       18970         MOV.B   ES,#SEG( _Calibration+198 )
0053A0 9918rrrr       18971         MOV.W   R1,#SOF( _Calibration+198 )
0053A4 8B01           18972         MOV.W   R0,[R1+]
0053A6 8A11           18973         MOV.W   R1,[R1]
0053A8 B930           18974         MOV.W   R3,#00H
0053AA 99280064       18975         MOV.W   R2,#064H
0053AE 964842rr       18976         MOV.B   ES,#SEG( _Calibration+198 )
0053B2 9948rrrr       18977         MOV.W   R4,#SOF( _Calibration+198 )
0053B6 8B0C           18978         MOV.W   [R4+],R0
0053B8 8A1C           18979         MOV.W   [R4],R1
0053BA C4rrrrrr       18980         FCALL   __UMODL
0053BE 8C0F04         18981         MOV.W   [R7+4],R0
0053C1 964842rr       18982         MOV.B   ES,#SEG( _Calibration+198 )
0053C5 9918rrrr       18983         MOV.W   R1,#SOF( _Calibration+198 )
0053C9 8B01           18984         MOV.W   R0,[R1+]
0053CB 8A11           18985         MOV.W   R1,[R1]
                      18986 ; rs232cmd.c 5237                                       month = ( Calibration.CBCalibration.Date 
                            / 100) % 100;
0053CD B930           18988         MOV.W   R3,#00H
0053CF 99280064       18989         MOV.W   R2,#064H
0053D3 8953           18990         MOV.W   R5,R3
0053D5 8942           18991         MOV.W   R4,R2
0053D7 C4rrrrrr       18992         FCALL   __UDIVL
0053DB 8935           18993         MOV.W   R3,R5
0053DD 8924           18994         MOV.W   R2,R4
0053DF C4rrrrrr       18995         FCALL   __UMODL
0053E3 8C0F02         18996         MOV.W   [R7+2],R0
                      18997 ; rs232cmd.c 5238                                       year = ( Calibration.CBCalibration.Date /
                             10000);
0053E6 B930           18999         MOV.W   R3,#00H
0053E8 99282710       19000         MOV.W   R2,#02710H
0053EC 964842rr       19001         MOV.B   ES,#SEG( _Calibration+198 )
0053F0 9918rrrr       19002         MOV.W   R1,#SOF( _Calibration+198 )
0053F4 8B01           19003         MOV.W   R0,[R1+]
0053F6 8A11           19004         MOV.W   R1,[R1]
0053F8 C4rrrrrr       19005         FCALL   __UDIVL
0053FC 8A0F           19006         MOV.W   [R7],R0
                      19007 ; rs232cmd.c 5239       
                      19008 ; rs232cmd.c 5240                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
0053FE 91A8rr         19010         MOV.B   R5L,#SEG( __lc_bs )
005401 71BB           19011         XOR.B   R5H,R5H
005403 404706         19012         LEA     R4,R7+6
005406 8C0704         19013         MOV.W   R0,[R7+4]
005409 0F01           19014         PUSH.W  R0
00540B 8C0704         19016         MOV.W   R0,[R7+4]
00540E 0F01           19017         PUSH.W  R0
005410 8C0704         19019         MOV.W   R0,[R7+4]
005413 0F01           19020         PUSH.W  R0
005415 9918rrrr       19022         MOV.W   R1,#SEG( _1174 )
005419 9908rrrr       19023         MOV.W   R0,#SOF( _1174 )
00541D 0F03           19024         PUSH.W  R0, R1
00541F 8915           19026         MOV.W   R1,R5
005421 8904           19027         MOV.W   R0,R4
                      19028         CALL    _sprintf
005423 C4rrrrrr       +19028 ;       FCALL   _sprintf
005427 9970000A       19029         ADD.W   R7,#0AH
                      19031 ; rs232cmd.c 5241       
                      19032 ; rs232cmd.c 5242                                       rs232puts( buffer);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 312

ADDR   CODE            LINE SOURCELINE
00542B 8915           19034         MOV.W   R1,R5
00542D 8904           19035         MOV.W   R0,R4
                      19036         CALL    _rs232puts
00542F C4rrrrrr       +19036 ;       FCALL   _rs232puts
                      19037 ; rs232cmd.c 5243                               }
                      19038 ; rs232cmd.c 5244                       }
005433 FE5F           19040         BR      _1338
005433 FE5F00         19040         BR      _1338
005436                19041 _1328:
                      19042 ; rs232cmd.c 5245                       else
                      19043 ; rs232cmd.c 5246                       {
                      19044 ; rs232cmd.c 5247                               if ( !PasswordProtected)
005436 964842rr       19046         MOV.B   ES,#SEG( _PasswordProtected )
00543A 9908rrrr       19047         MOV.W   R0,#SOF( _PasswordProtected )
00543E 8A00           19048         MOV.W   R0,[R0]
005440 F258           19049         BNE     _1338
                      19050 ; rs232cmd.c 5248                               {
                      19051 ; rs232cmd.c 5249                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
005442 964842rr       19053         MOV.B   ES,#SEG( _ParCnt )
005446 9908rrrr       19054         MOV.W   R0,#SOF( _ParCnt )
00544A 8200           19055         MOV.B   R0L,[R0]
00544C 910403         19056         CMP.B   R0L,#03H
00544F F21F           19057         BNE     _1329
005451 9168rr         19058         MOV.B   R3L,#SEG( __lc_bs )
005454 7177           19059         XOR.B   R3H,R3H
005456 8927           19060         MOV.W   R2,R7
005458 91A8rr         19061         MOV.B   R5L,#SEG( __lc_bs )
00545B 71BB           19062         XOR.B   R5H,R5H
00545D 404702         19063         LEA     R4,R7+2
005460 9128rr         19064         MOV.B   R1L,#SEG( __lc_bs )
005463 7133           19065         XOR.B   R1H,R1H
005465 400704         19066         LEA     R0,R7+4
005468 0F03           19067         PUSH.W  R0, R1
00546A 0F30           19069         PUSH.W  R4, R5
00546C 0F0C           19071         PUSH.W  R2, R3
00546E 9938rrrr       19073         MOV.W   R3,#SEG( _1175 )
005472 9928rrrr       19074         MOV.W   R2,#SOF( _1175 )
005476 0F0C           19075         PUSH.W  R2, R3
005478 9918rrrr       19077         MOV.W   R1,#SEG( _Cmd )
00547C 9908rrrr       19078         MOV.W   R0,#SOF( _Cmd )
                      19079         CALL    _sscanf
005480 C4rrrrrr       +19079 ;       FCALL   _sscanf
005484 99700010       19080         ADD.W   R7,#010H
005488 99040003       19082         CMP.W   R0,#03H
00548C F306           19083         BEQ     _1330
00548C F306           19083         BEQ     _1330
00548E                19084 _1329:
                      19085 ; rs232cmd.c 5250                                               SCPIError = SyntaxErr;
00548E 964842rr       19087         MOV.B   ES,#SEG( _SCPIError )
005492 9908rrrr       19088         MOV.W   R0,#SOF( _SCPIError )
005496 BA03           19089         MOV.W   [R0],#03H
005498 FE2C           19090         BR      _1338
005498 FE2C           19090         BR      _1338
00549A                19091 _1330:
                      19092 ; rs232cmd.c 5251                                       else
                      19093 ; rs232cmd.c 5252                                       {
                      19094 ; rs232cmd.c 5253                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
00549A 8A07           19096         MOV.W   R0,[R7]
00549C 8C1702         19097         MOV.W   R1,[R7+2]
00549F 8C2704         19098         MOV.W   R2,[R7+4]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 313

ADDR   CODE            LINE SOURCELINE
                      19099         CALL    _ValidateDate
0054A2 C4rrrrrr       +19099 ;       FCALL   _ValidateDate
0054A6 6900           19100         OR.W    R0,R0
0054A8 F207           19101         BNE     _1331
                      19102 ; rs232cmd.c 5254                                                       SCPIError = ExecErr;
0054AA 964842rr       19104         MOV.B   ES,#SEG( _SCPIError )
0054AE 9908rrrr       19105         MOV.W   R0,#SOF( _SCPIError )
0054B2 9A08001D       19106         MOV.W   [R0],#01DH
0054B6 FE1D           19107         BR      _1338
0054B6 FE1D           19107         BR      _1338
0054B8                19108 _1331:
                      19109 ; rs232cmd.c 5255                                               else
                      19110 ; rs232cmd.c 5256                                               {
                      19111 ; rs232cmd.c 5257                                                       Calibration.CBCalibration
                            .Date = day + 100*month + 10000*year;
0054B8 8C0702         19113         MOV.W   R0,[R7+2]
0054BB E9000064       19114         MULU.W  R0,#064H
0054BF 0C0704         19115         ADD.W   R0,[R7+4]
0054C2 8A27           19116         MOV.W   R2,[R7]
0054C4 E9202710       19117         MULU.W  R2,#02710H
0054C8 0902           19118         ADD.W   R0,R2
0054CA B910           19119         MOVS.W  R1,#00H
0054CC 964842rr       19120         MOV.B   ES,#SEG( _Calibration+198 )
0054D0 9928rrrr       19121         MOV.W   R2,#SOF( _Calibration+198 )
0054D4 8B0A           19122         MOV.W   [R2+],R0
0054D6 8A1A           19123         MOV.W   [R2],R1
                      19124 ; rs232cmd.c 5258                                               
                      19125 ; rs232cmd.c 5259                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0054D8 9918rrrr       19127         MOV.W   R1,#SEG( _Calibration )
0054DC 9908rrrr       19128         MOV.W   R0,#SOF( _Calibration )
0054E0 964842rr       19129         MOV.B   ES,#SEG( _CalibrationPtr )
0054E4 9928rrrr       19130         MOV.W   R2,#SOF( _CalibrationPtr )
0054E8 8A22           19131         MOV.W   R2,[R2]
0054EA 993800E0       19132         MOV.W   R3,#0E0H
                      19133         CALL    _NV_Store
0054EE C4rrrrrr       +19133 ;       FCALL   _NV_Store
                      19134 ; rs232cmd.c 5260                                               }
                      19135 ; rs232cmd.c 5261                                       }                               
                      19136 ; rs232cmd.c 5262                               }
                      19137 ; rs232cmd.c 5263                       }
                      19138 ; rs232cmd.c 5264               }
0054F2                19140 _1338:
                      19141 ; rs232cmd.c 5265       }
0054F2 9970001A       19143         ADD.W   R7,#01AH
0054F6 2F30           19145         POP.W   R4, R5
0054F8 D680           19147         RET
                      19149 ; rs232cmd.c 5266       
                      19150 ; rs232cmd.c 5267       /************************************************************************
                            **/
                      19151 ; rs232cmd.c 5268       /* FactTSGenAGain                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19152 ; rs232cmd.c 5269       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19153 ; rs232cmd.c 5270       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 314

ADDR   CODE            LINE SOURCELINE
                      19154 ; rs232cmd.c 5271       /* Revised:       000727,                                                
                                                                                                                             
                                                                                    */
                      19155 ; rs232cmd.c 5272       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19156 ; rs232cmd.c 5273       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19157 ; rs232cmd.c 5274       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      19158 ; rs232cmd.c 5275       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19159 ; rs232cmd.c 5276       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19160 ; rs232cmd.c 5277       /************************************************************************
                            **/
                      19161 ; rs232cmd.c 5278       void FactTSGenAGain( void)
                      19162 ; rs232cmd.c 5279       {
                      19163         ALIGN   1
                      19165         PUBLIC  _FactTSGenAGain
0054FA                19166 _FactTSGenAGain:
0054FA 0F30           19170         PUSH.W  R4, R5
0054FC 99720018       19172         SUB.W   R7,#018H
                      19177 ; rs232cmd.c 5280               char buffer[20];
                      19178 ; rs232cmd.c 5281               UC GainG, GainM;
                      19179 ; rs232cmd.c 5282       
                      19180 ; rs232cmd.c 5283               if ( CmdExecute && !SCPIError)
005500 964842rr       19182         MOV.B   ES,#SEG( _CmdExecute )
005504 9908rrrr       19183         MOV.W   R0,#SOF( _CmdExecute )
005508 8200           19184         MOV.B   R0L,[R0]
                      19185         BEQ     _1352
00550A F202           +19185 ;       BNE     _LG_1314
00550C D50095         +19185 ;       JMP.L   _1352
005510 D5009500       +19185 ;       JMP.L   _1352
005510                +19185 _LG_1314:
005510 964842rr       19186         MOV.B   ES,#SEG( _SCPIError )
005514 9908rrrr       19187         MOV.W   R0,#SOF( _SCPIError )
005518 8A00           19188         MOV.W   R0,[R0]
                      19189         BNE     _1352
00551A F302           +19189 ;       BEQ     _LG_1316
00551C D5008D         +19189 ;       JMP.L   _1352
005520 D5008D00       +19189 ;       JMP.L   _1352
005520                +19189 _LG_1316:
                      19190 ; rs232cmd.c 5284               {
                      19191 ; rs232cmd.c 5285                       if ( CmdRequest)
005520 964842rr       19193         MOV.B   ES,#SEG( _CmdRequest )
005524 9908rrrr       19194         MOV.W   R0,#SOF( _CmdRequest )
005528 8200           19195         MOV.B   R0L,[R0]
00552A F32E           19196         BEQ     _1342
                      19197 ; rs232cmd.c 5286                       {
                      19198 ; rs232cmd.c 5287                               if ( ParCnt)
00552C 964842rr       19200         MOV.B   ES,#SEG( _ParCnt )
005530 9908rrrr       19201         MOV.W   R0,#SOF( _ParCnt )
005534 8200           19202         MOV.B   R0L,[R0]
005536 F306           19203         BEQ     _1341
                      19204 ; rs232cmd.c 5288                                       SCPIError = SyntaxErr;
005538 964842rr       19206         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 315

ADDR   CODE            LINE SOURCELINE
00553C 9908rrrr       19207         MOV.W   R0,#SOF( _SCPIError )
005540 BA03           19208         MOV.W   [R0],#03H
005542 FE7A           19209         BR      _1352
005542 FE7A           19209         BR      _1352
005544                19210 _1341:
                      19211 ; rs232cmd.c 5289                               else
                      19212 ; rs232cmd.c 5290                               {
                      19213 ; rs232cmd.c 5291                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.GainG, 
                      19214 ; rs232cmd.c 5292                                                                                
                                                                                        Calibration.CBCalibration.GainM);
005544 91A8rr         19216         MOV.B   R5L,#SEG( __lc_bs )
005547 71BB           19217         XOR.B   R5H,R5H
005549 8947           19218         MOV.W   R4,R7
00554B 964842rr       19219         MOV.B   ES,#SEG( _Calibration+213 )
00554F 9908rrrr       19220         MOV.W   R0,#SOF( _Calibration+213 )
005553 8200           19221         MOV.B   R0L,[R0]
005555 B110           19222         MOVS.B  R0H,#00H
005557 964842rr       19223         MOV.B   ES,#SEG( _Calibration+215 )
00555B 9918rrrr       19224         MOV.W   R1,#SOF( _Calibration+215 )
00555F 8221           19225         MOV.B   R1L,[R1]
005561 B130           19226         MOVS.B  R1H,#00H
005563 0F02           19227         PUSH.W  R1
005565 0F01           19229         PUSH.W  R0
005567 9918rrrr       19231         MOV.W   R1,#SEG( _1301 )
00556B 9908rrrr       19232         MOV.W   R0,#SOF( _1301 )
00556F 0F03           19233         PUSH.W  R0, R1
005571 8915           19235         MOV.W   R1,R5
005573 8904           19236         MOV.W   R0,R4
                      19237         CALL    _sprintf
005575 C4rrrrrr       +19237 ;       FCALL   _sprintf
005579 99700008       19238         ADD.W   R7,#08H
                      19240 ; rs232cmd.c 5293                                       rs232puts( buffer);
00557D 8915           19242         MOV.W   R1,R5
00557F 8904           19243         MOV.W   R0,R4
                      19244         CALL    _rs232puts
005581 C4rrrrrr       +19244 ;       FCALL   _rs232puts
                      19245 ; rs232cmd.c 5294                               }
                      19246 ; rs232cmd.c 5295                       }
005585 FE59           19248         BR      _1352
005585 FE5900         19248         BR      _1352
005588                19249 _1342:
                      19250 ; rs232cmd.c 5296                       else
                      19251 ; rs232cmd.c 5297                       {
                      19252 ; rs232cmd.c 5298                               if ( !PasswordProtected)
005588 964842rr       19254         MOV.B   ES,#SEG( _PasswordProtected )
00558C 9908rrrr       19255         MOV.W   R0,#SOF( _PasswordProtected )
005590 8A00           19256         MOV.W   R0,[R0]
005592 F252           19257         BNE     _1352
                      19258 ; rs232cmd.c 5299                               {
                      19259 ; rs232cmd.c 5300                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &GainG, &GainM)) != 2))
005594 964842rr       19261         MOV.B   ES,#SEG( _ParCnt )
005598 9908rrrr       19262         MOV.W   R0,#SOF( _ParCnt )
00559C 8200           19263         MOV.B   R0L,[R0]
00559E 910402         19264         CMP.B   R0L,#02H
0055A1 F21B           19265         BNE     _1343
0055A3 9918rrrr       19266         MOV.W   R1,#SEG( _Cmd )
0055A7 9908rrrr       19267         MOV.W   R0,#SOF( _Cmd )
0055AB 9168rr         19268         MOV.B   R3L,#SEG( __lc_bs )
0055AE 7177           19269         XOR.B   R3H,R3H
0055B0 402714         19270         LEA     R2,R7+20
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 316

ADDR   CODE            LINE SOURCELINE
0055B3 91A8rr         19271         MOV.B   R5L,#SEG( __lc_bs )
0055B6 71BB           19272         XOR.B   R5H,R5H
0055B8 404716         19273         LEA     R4,R7+22
0055BB 0F30           19274         PUSH.W  R4, R5
0055BD 0F0C           19276         PUSH.W  R2, R3
0055BF 9938rrrr       19278         MOV.W   R3,#SEG( _1302 )
0055C3 9928rrrr       19279         MOV.W   R2,#SOF( _1302 )
0055C7 0F0C           19280         PUSH.W  R2, R3
                      19282         CALL    _sscanf
0055C9 C4rrrrrr       +19282 ;       FCALL   _sscanf
0055CD 9970000C       19283         ADD.W   R7,#0CH
0055D1 99040002       19285         CMP.W   R0,#02H
0055D5 F307           19286         BEQ     _1344
0055D5 F30700         19286         BEQ     _1344
0055D8                19287 _1343:
                      19288 ; rs232cmd.c 5301                                               SCPIError = SyntaxErr;
0055D8 964842rr       19290         MOV.B   ES,#SEG( _SCPIError )
0055DC 9908rrrr       19291         MOV.W   R0,#SOF( _SCPIError )
0055E0 BA03           19292         MOV.W   [R0],#03H
0055E2 FE2A           19293         BR      _1352
0055E2 FE2A           19293         BR      _1352
0055E4                19294 _1344:
                      19295 ; rs232cmd.c 5302                                       else
                      19296 ; rs232cmd.c 5303                                       {
                      19297 ; rs232cmd.c 5304                                               Calibration.CBCalibration.GainG =
                             GainG;
0055E4 840714         19299         MOV.B   R0L,[R7+20]
0055E7 964842rr       19300         MOV.B   ES,#SEG( _Calibration+213 )
0055EB 9918rrrr       19301         MOV.W   R1,#SOF( _Calibration+213 )
0055EF 8209           19302         MOV.B   [R1],R0L
                      19303 ; rs232cmd.c 5305                                               Calibration.CBCalibration.GainM =
                             GainM;
0055F1 840716         19305         MOV.B   R0L,[R7+22]
0055F4 964842rr       19306         MOV.B   ES,#SEG( _Calibration+215 )
0055F8 9918rrrr       19307         MOV.W   R1,#SOF( _Calibration+215 )
0055FC 8209           19308         MOV.B   [R1],R0L
                      19309 ; rs232cmd.c 5306                                                                                
                                                                                                                             
                                                                                                                            
                      19310 ; rs232cmd.c 5307                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0055FE 9918rrrr       19312         MOV.W   R1,#SEG( _Calibration )
005602 9908rrrr       19313         MOV.W   R0,#SOF( _Calibration )
005606 964842rr       19314         MOV.B   ES,#SEG( _CalibrationPtr )
00560A 9928rrrr       19315         MOV.W   R2,#SOF( _CalibrationPtr )
00560E 8A22           19316         MOV.W   R2,[R2]
005610 993800E0       19317         MOV.W   R3,#0E0H
                      19318         CALL    _NV_Store
005614 C4rrrrrr       +19318 ;       FCALL   _NV_Store
                      19319 ; rs232cmd.c 5308       
                      19320 ; rs232cmd.c 5309                                               if ( CBSetup.System < NTSC_US)
005618 964842rr       19322         MOV.B   ES,#SEG( _CBSetup )
00561C 9908rrrr       19323         MOV.W   R0,#SOF( _CBSetup )
005620 8200           19324         MOV.B   R0L,[R0]
005622 910402         19325         CMP.B   R0L,#02H
005625 F005           19326         BCC     _1345
                      19327 ; rs232cmd.c 5310                                                       WriteCBGain( GainG);
005627 840714         19329         MOV.B   R0L,[R7+20]
                      19330         CALL    _WriteCBGain
00562A C4rrrrrr       +19330 ;       FCALL   _WriteCBGain
00562E FE04           19331         BR      _1352
00562E FE04           19331         BR      _1352
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 317

ADDR   CODE            LINE SOURCELINE
005630                19332 _1345:
                      19333 ; rs232cmd.c 5311                                               else
                      19334 ; rs232cmd.c 5312                                                       WriteCBGain( GainM);
005630 840716         19336         MOV.B   R0L,[R7+22]
                      19337         CALL    _WriteCBGain
005633 C4rrrrrr       +19337 ;       FCALL   _WriteCBGain
                      19338 ; rs232cmd.c 5313                                       }
                      19339 ; rs232cmd.c 5314                               }
                      19340 ; rs232cmd.c 5315                       }
                      19341 ; rs232cmd.c 5316               }
005638                19343 _1352:
                      19344 ; rs232cmd.c 5317       }
005638 99700018       19346         ADD.W   R7,#018H
00563C 2F30           19348         POP.W   R4, R5
00563E D680           19350         RET
                      19352 ; rs232cmd.c 5318       
                      19353 ; rs232cmd.c 5319       /************************************************************************
                            **/
                      19354 ; rs232cmd.c 5320       /* FactTSGenCGain                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19355 ; rs232cmd.c 5321       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19356 ; rs232cmd.c 5322       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19357 ; rs232cmd.c 5323       /* Revised:       000727,                                                
                                                                                                                             
                                                                                    */
                      19358 ; rs232cmd.c 5324       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19359 ; rs232cmd.c 5325       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19360 ; rs232cmd.c 5326       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      19361 ; rs232cmd.c 5327       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19362 ; rs232cmd.c 5328       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19363 ; rs232cmd.c 5329       /************************************************************************
                            **/
                      19364 ; rs232cmd.c 5330       void FactTSGenCGain( void)
                      19365 ; rs232cmd.c 5331       {
                      19366         ALIGN   1
                      19368         PUBLIC  _FactTSGenCGain
005640                19369 _FactTSGenCGain:
005640 0F30           19373         PUSH.W  R4, R5
005642 99720018       19375         SUB.W   R7,#018H
                      19380 ; rs232cmd.c 5332               char buffer[20];
                      19381 ; rs232cmd.c 5333               UC ChromaGainG, ChromaGainM;
                      19382 ; rs232cmd.c 5334       
                      19383 ; rs232cmd.c 5335               if ( CmdExecute && !SCPIError)
005646 964842rr       19385         MOV.B   ES,#SEG( _CmdExecute )
00564A 9908rrrr       19386         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 318

ADDR   CODE            LINE SOURCELINE
00564E 8200           19387         MOV.B   R0L,[R0]
                      19388         BEQ     _1367
005650 F202           +19388 ;       BNE     _LG_1330
005652 D50095         +19388 ;       JMP.L   _1367
005656 D5009500       +19388 ;       JMP.L   _1367
005656                +19388 _LG_1330:
005656 964842rr       19389         MOV.B   ES,#SEG( _SCPIError )
00565A 9908rrrr       19390         MOV.W   R0,#SOF( _SCPIError )
00565E 8A00           19391         MOV.W   R0,[R0]
                      19392         BNE     _1367
005660 F302           +19392 ;       BEQ     _LG_1332
005662 D5008D         +19392 ;       JMP.L   _1367
005666 D5008D00       +19392 ;       JMP.L   _1367
005666                +19392 _LG_1332:
                      19393 ; rs232cmd.c 5336               {
                      19394 ; rs232cmd.c 5337                       if ( CmdRequest)
005666 964842rr       19396         MOV.B   ES,#SEG( _CmdRequest )
00566A 9908rrrr       19397         MOV.W   R0,#SOF( _CmdRequest )
00566E 8200           19398         MOV.B   R0L,[R0]
005670 F32E           19399         BEQ     _1357
                      19400 ; rs232cmd.c 5338                       {
                      19401 ; rs232cmd.c 5339                               if ( ParCnt)
005672 964842rr       19403         MOV.B   ES,#SEG( _ParCnt )
005676 9908rrrr       19404         MOV.W   R0,#SOF( _ParCnt )
00567A 8200           19405         MOV.B   R0L,[R0]
00567C F306           19406         BEQ     _1356
                      19407 ; rs232cmd.c 5340                                       SCPIError = SyntaxErr;
00567E 964842rr       19409         MOV.B   ES,#SEG( _SCPIError )
005682 9908rrrr       19410         MOV.W   R0,#SOF( _SCPIError )
005686 BA03           19411         MOV.W   [R0],#03H
005688 FE7A           19412         BR      _1367
005688 FE7A           19412         BR      _1367
00568A                19413 _1356:
                      19414 ; rs232cmd.c 5341                               else
                      19415 ; rs232cmd.c 5342                               {
                      19416 ; rs232cmd.c 5343                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ChromaGainG, 
                      19417 ; rs232cmd.c 5344                                                                                
                                                                                        Calibration.CBCalibration.ChromaGainM
                            );
00568A 91A8rr         19419         MOV.B   R5L,#SEG( __lc_bs )
00568D 71BB           19420         XOR.B   R5H,R5H
00568F 8947           19421         MOV.W   R4,R7
005691 964842rr       19422         MOV.B   ES,#SEG( _Calibration+214 )
005695 9908rrrr       19423         MOV.W   R0,#SOF( _Calibration+214 )
005699 8200           19424         MOV.B   R0L,[R0]
00569B B110           19425         MOVS.B  R0H,#00H
00569D 964842rr       19426         MOV.B   ES,#SEG( _Calibration+216 )
0056A1 9918rrrr       19427         MOV.W   R1,#SOF( _Calibration+216 )
0056A5 8221           19428         MOV.B   R1L,[R1]
0056A7 B130           19429         MOVS.B  R1H,#00H
0056A9 0F02           19430         PUSH.W  R1
0056AB 0F01           19432         PUSH.W  R0
0056AD 9918rrrr       19434         MOV.W   R1,#SEG( _1301 )
0056B1 9908rrrr       19435         MOV.W   R0,#SOF( _1301 )
0056B5 0F03           19436         PUSH.W  R0, R1
0056B7 8915           19438         MOV.W   R1,R5
0056B9 8904           19439         MOV.W   R0,R4
                      19440         CALL    _sprintf
0056BB C4rrrrrr       +19440 ;       FCALL   _sprintf
0056BF 99700008       19441         ADD.W   R7,#08H
                      19443 ; rs232cmd.c 5345                                       rs232puts( buffer);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 319

ADDR   CODE            LINE SOURCELINE
0056C3 8915           19445         MOV.W   R1,R5
0056C5 8904           19446         MOV.W   R0,R4
                      19447         CALL    _rs232puts
0056C7 C4rrrrrr       +19447 ;       FCALL   _rs232puts
                      19448 ; rs232cmd.c 5346                               }
                      19449 ; rs232cmd.c 5347                       }
0056CB FE59           19451         BR      _1367
0056CB FE5900         19451         BR      _1367
0056CE                19452 _1357:
                      19453 ; rs232cmd.c 5348                       else
                      19454 ; rs232cmd.c 5349                       {
                      19455 ; rs232cmd.c 5350                               if ( !PasswordProtected)
0056CE 964842rr       19457         MOV.B   ES,#SEG( _PasswordProtected )
0056D2 9908rrrr       19458         MOV.W   R0,#SOF( _PasswordProtected )
0056D6 8A00           19459         MOV.W   R0,[R0]
0056D8 F252           19460         BNE     _1367
                      19461 ; rs232cmd.c 5351                               {
                      19462 ; rs232cmd.c 5352                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ChromaGainG, &ChromaGainM)) != 2))
0056DA 964842rr       19464         MOV.B   ES,#SEG( _ParCnt )
0056DE 9908rrrr       19465         MOV.W   R0,#SOF( _ParCnt )
0056E2 8200           19466         MOV.B   R0L,[R0]
0056E4 910402         19467         CMP.B   R0L,#02H
0056E7 F21B           19468         BNE     _1358
0056E9 9918rrrr       19469         MOV.W   R1,#SEG( _Cmd )
0056ED 9908rrrr       19470         MOV.W   R0,#SOF( _Cmd )
0056F1 9168rr         19471         MOV.B   R3L,#SEG( __lc_bs )
0056F4 7177           19472         XOR.B   R3H,R3H
0056F6 402714         19473         LEA     R2,R7+20
0056F9 91A8rr         19474         MOV.B   R5L,#SEG( __lc_bs )
0056FC 71BB           19475         XOR.B   R5H,R5H
0056FE 404716         19476         LEA     R4,R7+22
005701 0F30           19477         PUSH.W  R4, R5
005703 0F0C           19479         PUSH.W  R2, R3
005705 9938rrrr       19481         MOV.W   R3,#SEG( _1302 )
005709 9928rrrr       19482         MOV.W   R2,#SOF( _1302 )
00570D 0F0C           19483         PUSH.W  R2, R3
                      19485         CALL    _sscanf
00570F C4rrrrrr       +19485 ;       FCALL   _sscanf
005713 9970000C       19486         ADD.W   R7,#0CH
005717 99040002       19488         CMP.W   R0,#02H
00571B F307           19489         BEQ     _1359
00571B F30700         19489         BEQ     _1359
00571E                19490 _1358:
                      19491 ; rs232cmd.c 5353                                               SCPIError = SyntaxErr;
00571E 964842rr       19493         MOV.B   ES,#SEG( _SCPIError )
005722 9908rrrr       19494         MOV.W   R0,#SOF( _SCPIError )
005726 BA03           19495         MOV.W   [R0],#03H
005728 FE2A           19496         BR      _1367
005728 FE2A           19496         BR      _1367
00572A                19497 _1359:
                      19498 ; rs232cmd.c 5354                                       else
                      19499 ; rs232cmd.c 5355                                       {
                      19500 ; rs232cmd.c 5356                                               Calibration.CBCalibration.ChromaG
                            ainG = ChromaGainG;
00572A 840714         19502         MOV.B   R0L,[R7+20]
00572D 964842rr       19503         MOV.B   ES,#SEG( _Calibration+214 )
005731 9918rrrr       19504         MOV.W   R1,#SOF( _Calibration+214 )
005735 8209           19505         MOV.B   [R1],R0L
                      19506 ; rs232cmd.c 5357                                               Calibration.CBCalibration.ChromaG
                            ainM = ChromaGainM;
005737 840716         19508         MOV.B   R0L,[R7+22]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 320

ADDR   CODE            LINE SOURCELINE
00573A 964842rr       19509         MOV.B   ES,#SEG( _Calibration+216 )
00573E 9918rrrr       19510         MOV.W   R1,#SOF( _Calibration+216 )
005742 8209           19511         MOV.B   [R1],R0L
                      19512 ; rs232cmd.c 5358                                                                                
                                                                                                                             
                                                                                                                            
                      19513 ; rs232cmd.c 5359                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005744 9918rrrr       19515         MOV.W   R1,#SEG( _Calibration )
005748 9908rrrr       19516         MOV.W   R0,#SOF( _Calibration )
00574C 964842rr       19517         MOV.B   ES,#SEG( _CalibrationPtr )
005750 9928rrrr       19518         MOV.W   R2,#SOF( _CalibrationPtr )
005754 8A22           19519         MOV.W   R2,[R2]
005756 993800E0       19520         MOV.W   R3,#0E0H
                      19521         CALL    _NV_Store
00575A C4rrrrrr       +19521 ;       FCALL   _NV_Store
                      19522 ; rs232cmd.c 5360       
                      19523 ; rs232cmd.c 5361                                               if ( CBSetup.System < NTSC_US )
00575E 964842rr       19525         MOV.B   ES,#SEG( _CBSetup )
005762 9908rrrr       19526         MOV.W   R0,#SOF( _CBSetup )
005766 8200           19527         MOV.B   R0L,[R0]
005768 910402         19528         CMP.B   R0L,#02H
00576B F005           19529         BCC     _1360
                      19530 ; rs232cmd.c 5362                                                       WriteCBChromaGain( Chroma
                            GainG);
00576D 840714         19532         MOV.B   R0L,[R7+20]
                      19533         CALL    _WriteCBChromaGain
005770 C4rrrrrr       +19533 ;       FCALL   _WriteCBChromaGain
005774 FE04           19534         BR      _1367
005774 FE04           19534         BR      _1367
005776                19535 _1360:
                      19536 ; rs232cmd.c 5363                                               else
                      19537 ; rs232cmd.c 5364                                                       WriteCBChromaGain( Chroma
                            GainM);
005776 840716         19539         MOV.B   R0L,[R7+22]
                      19540         CALL    _WriteCBChromaGain
005779 C4rrrrrr       +19540 ;       FCALL   _WriteCBChromaGain
                      19541 ; rs232cmd.c 5365                                       }
                      19542 ; rs232cmd.c 5366                               }
                      19543 ; rs232cmd.c 5367                       }
                      19544 ; rs232cmd.c 5368               }
00577E                19546 _1367:
                      19547 ; rs232cmd.c 5369       }
00577E 99700018       19549         ADD.W   R7,#018H
005782 2F30           19551         POP.W   R4, R5
005784 D680           19553         RET
                      19555 ; rs232cmd.c 5370       
                      19556 ; rs232cmd.c 5371       /************************************************************************
                            **/
                      19557 ; rs232cmd.c 5372       /* FactTSGenPhase                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19558 ; rs232cmd.c 5373       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19559 ; rs232cmd.c 5374       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19560 ; rs232cmd.c 5375       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      19561 ; rs232cmd.c 5376       /*                                                                       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 321

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                             
                                                    */
                      19562 ; rs232cmd.c 5377       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19563 ; rs232cmd.c 5378       /* Remarks:             PAL range: 0-4*625*1728, NTSC range: 0-2*525*1716
                                                                            */
                      19564 ; rs232cmd.c 5379       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19565 ; rs232cmd.c 5380       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19566 ; rs232cmd.c 5381       /************************************************************************
                            **/
                      19567 ; rs232cmd.c 5382       void FactTSGenPhase( void)
                      19568 ; rs232cmd.c 5383       {
                      19569         ALIGN   1
                      19571         PUBLIC  _FactTSGenPhase
005786                19572 _FactTSGenPhase:
005786 0F30           19576         PUSH.W  R4, R5
005788 99720026       19578         SUB.W   R7,#026H
                      19583 ; rs232cmd.c 5384               char buffer[30];
                      19584 ; rs232cmd.c 5385               UL PhaseG, PhaseM;
                      19585 ; rs232cmd.c 5386       
                      19586 ; rs232cmd.c 5387               if ( CmdExecute && !SCPIError)
00578C 964842rr       19588         MOV.B   ES,#SEG( _CmdExecute )
005790 9908rrrr       19589         MOV.W   R0,#SOF( _CmdExecute )
005794 8200           19590         MOV.B   R0L,[R0]
                      19591         BEQ     _1380
005796 F202           +19591 ;       BNE     _LG_1346
005798 D50092         +19591 ;       JMP.L   _1380
00579C D5009200       +19591 ;       JMP.L   _1380
00579C                +19591 _LG_1346:
00579C 964842rr       19592         MOV.B   ES,#SEG( _SCPIError )
0057A0 9908rrrr       19593         MOV.W   R0,#SOF( _SCPIError )
0057A4 8A00           19594         MOV.W   R0,[R0]
                      19595         BNE     _1380
0057A6 F302           +19595 ;       BEQ     _LG_1348
0057A8 D5008A         +19595 ;       JMP.L   _1380
0057AC D5008A00       +19595 ;       JMP.L   _1380
0057AC                +19595 _LG_1348:
                      19596 ; rs232cmd.c 5388               {
                      19597 ; rs232cmd.c 5389                       if ( CmdRequest)
0057AC 964842rr       19599         MOV.B   ES,#SEG( _CmdRequest )
0057B0 9908rrrr       19600         MOV.W   R0,#SOF( _CmdRequest )
0057B4 8200           19601         MOV.B   R0L,[R0]
0057B6 F32E           19602         BEQ     _1372
                      19603 ; rs232cmd.c 5390                       {
                      19604 ; rs232cmd.c 5391                               if ( ParCnt)
0057B8 964842rr       19606         MOV.B   ES,#SEG( _ParCnt )
0057BC 9908rrrr       19607         MOV.W   R0,#SOF( _ParCnt )
0057C0 8200           19608         MOV.B   R0L,[R0]
0057C2 F306           19609         BEQ     _1371
                      19610 ; rs232cmd.c 5392                                       SCPIError = SyntaxErr;
0057C4 964842rr       19612         MOV.B   ES,#SEG( _SCPIError )
0057C8 9908rrrr       19613         MOV.W   R0,#SOF( _SCPIError )
0057CC BA03           19614         MOV.W   [R0],#03H
0057CE FE77           19615         BR      _1380
0057CE FE77           19615         BR      _1380
0057D0                19616 _1371:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 322

ADDR   CODE            LINE SOURCELINE
                      19617 ; rs232cmd.c 5393                               else
                      19618 ; rs232cmd.c 5394                               {
                      19619 ; rs232cmd.c 5395                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .CBCalibration.PhaseG, 
                      19620 ; rs232cmd.c 5396                                                                                
                                                                                                Calibration.CBCalibration.Pha
                            seM);
0057D0 91A8rr         19622         MOV.B   R5L,#SEG( __lc_bs )
0057D3 71BB           19623         XOR.B   R5H,R5H
0057D5 8947           19624         MOV.W   R4,R7
0057D7 964842rr       19625         MOV.B   ES,#SEG( _Calibration+202 )
0057DB 9918rrrr       19626         MOV.W   R1,#SOF( _Calibration+202 )
0057DF 8B01           19627         MOV.W   R0,[R1+]
0057E1 8A11           19628         MOV.W   R1,[R1]
0057E3 964842rr       19629         MOV.B   ES,#SEG( _Calibration+208 )
0057E7 9938rrrr       19630         MOV.W   R3,#SOF( _Calibration+208 )
0057EB 8B23           19631         MOV.W   R2,[R3+]
0057ED 8A33           19632         MOV.W   R3,[R3]
0057EF 0F0C           19633         PUSH.W  R2, R3
0057F1 0F03           19635         PUSH.W  R0, R1
0057F3 9918rrrr       19637         MOV.W   R1,#SEG( _1227 )
0057F7 9908rrrr       19638         MOV.W   R0,#SOF( _1227 )
0057FB 0F03           19639         PUSH.W  R0, R1
0057FD 8915           19641         MOV.W   R1,R5
0057FF 8904           19642         MOV.W   R0,R4
                      19643         CALL    _sprintf
005801 C4rrrrrr       +19643 ;       FCALL   _sprintf
005805 9970000C       19644         ADD.W   R7,#0CH
                      19646 ; rs232cmd.c 5397                                       rs232puts( buffer);
005809 8915           19648         MOV.W   R1,R5
00580B 8904           19649         MOV.W   R0,R4
                      19650         CALL    _rs232puts
00580D C4rrrrrr       +19650 ;       FCALL   _rs232puts
                      19651 ; rs232cmd.c 5398                               }
                      19652 ; rs232cmd.c 5399                       }
005811 FE56           19654         BR      _1380
005811 FE5600         19654         BR      _1380
005814                19655 _1372:
                      19656 ; rs232cmd.c 5400                       else
                      19657 ; rs232cmd.c 5401                       {
                      19658 ; rs232cmd.c 5402                               if ( !PasswordProtected)
005814 964842rr       19660         MOV.B   ES,#SEG( _PasswordProtected )
005818 9908rrrr       19661         MOV.W   R0,#SOF( _PasswordProtected )
00581C 8A00           19662         MOV.W   R0,[R0]
00581E F24F           19663         BNE     _1380
                      19664 ; rs232cmd.c 5403                               {
                      19665 ; rs232cmd.c 5404                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
005820 964842rr       19667         MOV.B   ES,#SEG( _ParCnt )
005824 9908rrrr       19668         MOV.W   R0,#SOF( _ParCnt )
005828 8200           19669         MOV.B   R0L,[R0]
00582A 910402         19670         CMP.B   R0L,#02H
00582D F21B           19671         BNE     _1373
00582F 9918rrrr       19672         MOV.W   R1,#SEG( _Cmd )
005833 9908rrrr       19673         MOV.W   R0,#SOF( _Cmd )
005837 9168rr         19674         MOV.B   R3L,#SEG( __lc_bs )
00583A 7177           19675         XOR.B   R3H,R3H
00583C 40271E         19676         LEA     R2,R7+30
00583F 91A8rr         19677         MOV.B   R5L,#SEG( __lc_bs )
005842 71BB           19678         XOR.B   R5H,R5H
005844 404722         19679         LEA     R4,R7+34
005847 0F30           19680         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 323

ADDR   CODE            LINE SOURCELINE
005849 0F0C           19682         PUSH.W  R2, R3
00584B 9938rrrr       19684         MOV.W   R3,#SEG( _1038 )
00584F 9928rrrr       19685         MOV.W   R2,#SOF( _1038 )
005853 0F0C           19686         PUSH.W  R2, R3
                      19688         CALL    _sscanf
005855 C4rrrrrr       +19688 ;       FCALL   _sscanf
005859 9970000C       19689         ADD.W   R7,#0CH
00585D 99040002       19691         CMP.W   R0,#02H
005861 F307           19692         BEQ     _1374
005861 F30700         19692         BEQ     _1374
005864                19693 _1373:
                      19694 ; rs232cmd.c 5405                                               SCPIError = SyntaxErr;
005864 964842rr       19696         MOV.B   ES,#SEG( _SCPIError )
005868 9908rrrr       19697         MOV.W   R0,#SOF( _SCPIError )
00586C BA03           19698         MOV.W   [R0],#03H
00586E FE27           19699         BR      _1380
00586E FE27           19699         BR      _1380
005870                19700 _1374:
                      19701 ; rs232cmd.c 5406                                       else
                      19702 ; rs232cmd.c 5407                                       {
                      19703 ; rs232cmd.c 5408                                               Calibration.CBCalibration.PhaseG 
                            = PhaseG;
005870 8C1720         19705         MOV.W   R1,[R7+32]
005873 8C071E         19706         MOV.W   R0,[R7+30]
005876 964842rr       19707         MOV.B   ES,#SEG( _Calibration+202 )
00587A 9928rrrr       19708         MOV.W   R2,#SOF( _Calibration+202 )
00587E 8B0A           19709         MOV.W   [R2+],R0
005880 8A1A           19710         MOV.W   [R2],R1
                      19711 ; rs232cmd.c 5409                                               Calibration.CBCalibration.PhaseM 
                            = PhaseM;
005882 8C1724         19713         MOV.W   R1,[R7+36]
005885 8C0722         19714         MOV.W   R0,[R7+34]
005888 964842rr       19715         MOV.B   ES,#SEG( _Calibration+208 )
00588C 9928rrrr       19716         MOV.W   R2,#SOF( _Calibration+208 )
005890 8B0A           19717         MOV.W   [R2+],R0
005892 8A1A           19718         MOV.W   [R2],R1
                      19719 ; rs232cmd.c 5410                                       
                      19720 ; rs232cmd.c 5411                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005894 9918rrrr       19722         MOV.W   R1,#SEG( _Calibration )
005898 9908rrrr       19723         MOV.W   R0,#SOF( _Calibration )
00589C 964842rr       19724         MOV.B   ES,#SEG( _CalibrationPtr )
0058A0 9928rrrr       19725         MOV.W   R2,#SOF( _CalibrationPtr )
0058A4 8A22           19726         MOV.W   R2,[R2]
0058A6 993800E0       19727         MOV.W   R3,#0E0H
                      19728         CALL    _NV_Store
0058AA C4rrrrrr       +19728 ;       FCALL   _NV_Store
                      19729 ; rs232cmd.c 5412       
                      19730 ; rs232cmd.c 5413                                               SetCBDelay( CBSetup.Delay);
0058AE 964842rr       19732         MOV.B   ES,#SEG( _CBSetup+4 )
0058B2 9918rrrr       19733         MOV.W   R1,#SOF( _CBSetup+4 )
0058B6 8B01           19734         MOV.W   R0,[R1+]
0058B8 8A11           19735         MOV.W   R1,[R1]
                      19736         CALL    _SetCBDelay
0058BA C4rrrrrr       +19736 ;       FCALL   _SetCBDelay
                      19737 ; rs232cmd.c 5414                                       }
                      19738 ; rs232cmd.c 5415                               }
                      19739 ; rs232cmd.c 5416                       }
                      19740 ; rs232cmd.c 5417               }
0058BE                19742 _1380:
                      19743 ; rs232cmd.c 5418       }
0058BE 99700026       19745         ADD.W   R7,#026H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 324

ADDR   CODE            LINE SOURCELINE
0058C2 2F30           19747         POP.W   R4, R5
0058C4 D680           19749         RET
                      19751 ; rs232cmd.c 5419       
                      19752 ; rs232cmd.c 5420       /************************************************************************
                            **/
                      19753 ; rs232cmd.c 5421       /* FactTSGenScHPhase                                                     
                                                                                                                             
                                RS232CMD.C  */
                      19754 ; rs232cmd.c 5422       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19755 ; rs232cmd.c 5423       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19756 ; rs232cmd.c 5424       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      19757 ; rs232cmd.c 5425       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19758 ; rs232cmd.c 5426       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19759 ; rs232cmd.c 5427       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      19760 ; rs232cmd.c 5428       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19761 ; rs232cmd.c 5429       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19762 ; rs232cmd.c 5430       /************************************************************************
                            **/
                      19763 ; rs232cmd.c 5431       void FactTSGenScHPhase( void)
                      19764 ; rs232cmd.c 5432       {
                      19765         ALIGN   1
                      19767         PUBLIC  _FactTSGenScHPhase
0058C6                19768 _FactTSGenScHPhase:
0058C6 0F30           19772         PUSH.W  R4, R5
0058C8 99720022       19774         SUB.W   R7,#022H
                      19779 ; rs232cmd.c 5433               char buffer[30];
                      19780 ; rs232cmd.c 5434               UC ScHPhaseG, ScHPhaseM;
                      19781 ; rs232cmd.c 5435       
                      19782 ; rs232cmd.c 5436               if ( CmdExecute && !SCPIError)
0058CC 964842rr       19784         MOV.B   ES,#SEG( _CmdExecute )
0058D0 9908rrrr       19785         MOV.W   R0,#SOF( _CmdExecute )
0058D4 8200           19786         MOV.B   R0L,[R0]
                      19787         BEQ     _1392
0058D6 F202           +19787 ;       BNE     _LG_1360
0058D8 D5008C         +19787 ;       JMP.L   _1392
0058DC D5008C00       +19787 ;       JMP.L   _1392
0058DC                +19787 _LG_1360:
0058DC 964842rr       19788         MOV.B   ES,#SEG( _SCPIError )
0058E0 9908rrrr       19789         MOV.W   R0,#SOF( _SCPIError )
0058E4 8A00           19790         MOV.W   R0,[R0]
                      19791         BNE     _1392
0058E6 F302           +19791 ;       BEQ     _LG_1362
0058E8 D50084         +19791 ;       JMP.L   _1392
0058EC D5008400       +19791 ;       JMP.L   _1392
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 325

ADDR   CODE            LINE SOURCELINE
0058EC                +19791 _LG_1362:
                      19792 ; rs232cmd.c 5437               {
                      19793 ; rs232cmd.c 5438                       if ( CmdRequest)
0058EC 964842rr       19795         MOV.B   ES,#SEG( _CmdRequest )
0058F0 9908rrrr       19796         MOV.W   R0,#SOF( _CmdRequest )
0058F4 8200           19797         MOV.B   R0L,[R0]
0058F6 F32E           19798         BEQ     _1384
                      19799 ; rs232cmd.c 5439                       {
                      19800 ; rs232cmd.c 5440                               if ( ParCnt)
0058F8 964842rr       19802         MOV.B   ES,#SEG( _ParCnt )
0058FC 9908rrrr       19803         MOV.W   R0,#SOF( _ParCnt )
005900 8200           19804         MOV.B   R0L,[R0]
005902 F306           19805         BEQ     _1383
                      19806 ; rs232cmd.c 5441                                       SCPIError = SyntaxErr;
005904 964842rr       19808         MOV.B   ES,#SEG( _SCPIError )
005908 9908rrrr       19809         MOV.W   R0,#SOF( _SCPIError )
00590C BA03           19810         MOV.W   [R0],#03H
00590E FE71           19811         BR      _1392
00590E FE71           19811         BR      _1392
005910                19812 _1383:
                      19813 ; rs232cmd.c 5442                               else
                      19814 ; rs232cmd.c 5443                               {
                      19815 ; rs232cmd.c 5444                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ScHPhaseG, 
                      19816 ; rs232cmd.c 5445                                                                                
                                                                                        Calibration.CBCalibration.ScHPhaseM);
                            
005910 91A8rr         19818         MOV.B   R5L,#SEG( __lc_bs )
005913 71BB           19819         XOR.B   R5H,R5H
005915 8947           19820         MOV.W   R4,R7
005917 964842rr       19821         MOV.B   ES,#SEG( _Calibration+206 )
00591B 9908rrrr       19822         MOV.W   R0,#SOF( _Calibration+206 )
00591F 8200           19823         MOV.B   R0L,[R0]
005921 B110           19824         MOVS.B  R0H,#00H
005923 964842rr       19825         MOV.B   ES,#SEG( _Calibration+212 )
005927 9918rrrr       19826         MOV.W   R1,#SOF( _Calibration+212 )
00592B 8221           19827         MOV.B   R1L,[R1]
00592D B130           19828         MOVS.B  R1H,#00H
00592F 0F02           19829         PUSH.W  R1
005931 0F01           19831         PUSH.W  R0
005933 9918rrrr       19833         MOV.W   R1,#SEG( _1301 )
005937 9908rrrr       19834         MOV.W   R0,#SOF( _1301 )
00593B 0F03           19835         PUSH.W  R0, R1
00593D 8915           19837         MOV.W   R1,R5
00593F 8904           19838         MOV.W   R0,R4
                      19839         CALL    _sprintf
005941 C4rrrrrr       +19839 ;       FCALL   _sprintf
005945 99700008       19840         ADD.W   R7,#08H
                      19842 ; rs232cmd.c 5446                                       rs232puts( buffer);
005949 8915           19844         MOV.W   R1,R5
00594B 8904           19845         MOV.W   R0,R4
                      19846         CALL    _rs232puts
00594D C4rrrrrr       +19846 ;       FCALL   _rs232puts
                      19847 ; rs232cmd.c 5447                               }
                      19848 ; rs232cmd.c 5448                       }
005951 FE50           19850         BR      _1392
005951 FE5000         19850         BR      _1392
005954                19851 _1384:
                      19852 ; rs232cmd.c 5449                       else
                      19853 ; rs232cmd.c 5450                       {
                      19854 ; rs232cmd.c 5451                               if ( !PasswordProtected)
005954 964842rr       19856         MOV.B   ES,#SEG( _PasswordProtected )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 326

ADDR   CODE            LINE SOURCELINE
005958 9908rrrr       19857         MOV.W   R0,#SOF( _PasswordProtected )
00595C 8A00           19858         MOV.W   R0,[R0]
00595E F249           19859         BNE     _1392
                      19860 ; rs232cmd.c 5452                               {
                      19861 ; rs232cmd.c 5453                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005960 964842rr       19863         MOV.B   ES,#SEG( _ParCnt )
005964 9908rrrr       19864         MOV.W   R0,#SOF( _ParCnt )
005968 8200           19865         MOV.B   R0L,[R0]
00596A 910402         19866         CMP.B   R0L,#02H
00596D F21B           19867         BNE     _1385
00596F 9918rrrr       19868         MOV.W   R1,#SEG( _Cmd )
005973 9908rrrr       19869         MOV.W   R0,#SOF( _Cmd )
005977 9168rr         19870         MOV.B   R3L,#SEG( __lc_bs )
00597A 7177           19871         XOR.B   R3H,R3H
00597C 40271E         19872         LEA     R2,R7+30
00597F 91A8rr         19873         MOV.B   R5L,#SEG( __lc_bs )
005982 71BB           19874         XOR.B   R5H,R5H
005984 404720         19875         LEA     R4,R7+32
005987 0F30           19876         PUSH.W  R4, R5
005989 0F0C           19878         PUSH.W  R2, R3
00598B 9938rrrr       19880         MOV.W   R3,#SEG( _1302 )
00598F 9928rrrr       19881         MOV.W   R2,#SOF( _1302 )
005993 0F0C           19882         PUSH.W  R2, R3
                      19884         CALL    _sscanf
005995 C4rrrrrr       +19884 ;       FCALL   _sscanf
005999 9970000C       19885         ADD.W   R7,#0CH
00599D 99040002       19887         CMP.W   R0,#02H
0059A1 F307           19888         BEQ     _1386
0059A1 F30700         19888         BEQ     _1386
0059A4                19889 _1385:
                      19890 ; rs232cmd.c 5454                                               SCPIError = SyntaxErr;
0059A4 964842rr       19892         MOV.B   ES,#SEG( _SCPIError )
0059A8 9908rrrr       19893         MOV.W   R0,#SOF( _SCPIError )
0059AC BA03           19894         MOV.W   [R0],#03H
0059AE FE21           19895         BR      _1392
0059AE FE21           19895         BR      _1392
0059B0                19896 _1386:
                      19897 ; rs232cmd.c 5455                                       else
                      19898 ; rs232cmd.c 5456                                       {
                      19899 ; rs232cmd.c 5457                                               Calibration.CBCalibration.ScHPhas
                            eG = ScHPhaseG;
0059B0 84071E         19901         MOV.B   R0L,[R7+30]
0059B3 964842rr       19902         MOV.B   ES,#SEG( _Calibration+206 )
0059B7 9918rrrr       19903         MOV.W   R1,#SOF( _Calibration+206 )
0059BB 8209           19904         MOV.B   [R1],R0L
                      19905 ; rs232cmd.c 5458                                               Calibration.CBCalibration.ScHPhas
                            eM = ScHPhaseM;
0059BD 840720         19907         MOV.B   R0L,[R7+32]
0059C0 964842rr       19908         MOV.B   ES,#SEG( _Calibration+212 )
0059C4 9918rrrr       19909         MOV.W   R1,#SOF( _Calibration+212 )
0059C8 8209           19910         MOV.B   [R1],R0L
                      19911 ; rs232cmd.c 5459                                       
                      19912 ; rs232cmd.c 5460                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0059CA 9918rrrr       19914         MOV.W   R1,#SEG( _Calibration )
0059CE 9908rrrr       19915         MOV.W   R0,#SOF( _Calibration )
0059D2 964842rr       19916         MOV.B   ES,#SEG( _CalibrationPtr )
0059D6 9928rrrr       19917         MOV.W   R2,#SOF( _CalibrationPtr )
0059DA 8A22           19918         MOV.W   R2,[R2]
0059DC 993800E0       19919         MOV.W   R3,#0E0H
                      19920         CALL    _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 327

ADDR   CODE            LINE SOURCELINE
0059E0 C4rrrrrr       +19920 ;       FCALL   _NV_Store
                      19921 ; rs232cmd.c 5461       
                      19922 ; rs232cmd.c 5462                                               SetCBScHPhase( CBSetup.ScHPhase);
                            
0059E4 964842rr       19924         MOV.B   ES,#SEG( _CBSetup+8 )
0059E8 9908rrrr       19925         MOV.W   R0,#SOF( _CBSetup+8 )
0059EC 8A00           19926         MOV.W   R0,[R0]
                      19927         CALL    _SetCBScHPhase
0059EE C4rrrrrr       +19927 ;       FCALL   _SetCBScHPhase
                      19928 ; rs232cmd.c 5463                                       }
                      19929 ; rs232cmd.c 5464                               }
                      19930 ; rs232cmd.c 5465                       }
                      19931 ; rs232cmd.c 5466               }
0059F2                19933 _1392:
                      19934 ; rs232cmd.c 5467       }
0059F2 99700022       19936         ADD.W   R7,#022H
0059F6 2F30           19938         POP.W   R4, R5
0059F8 D680           19940         RET
                      19942 ; rs232cmd.c 5468       
                      19943 ; rs232cmd.c 5469       /************************************************************************
                            **/
                      19944 ; rs232cmd.c 5470       /* FactAudioGenStatus                                                    
                                                                                                                             
                                RS232CMD.C  */
                      19945 ; rs232cmd.c 5471       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19946 ; rs232cmd.c 5472       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      19947 ; rs232cmd.c 5473       /* Revised:       000625                                                 
                                                                                                                             
                                                                                    */
                      19948 ; rs232cmd.c 5474       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19949 ; rs232cmd.c 5475       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19950 ; rs232cmd.c 5476       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                      19951 ; rs232cmd.c 5477       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19952 ; rs232cmd.c 5478       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19953 ; rs232cmd.c 5479       /************************************************************************
                            **/
                      19954 ; rs232cmd.c 5480       void FactAudioGenStatus( void)
                      19955 ; rs232cmd.c 5481       {
                      19956         ALIGN   1
                      19958         PUBLIC  _FactAudioGenStatus
0059FA                19959 _FactAudioGenStatus:
0059FA 0F30           19963         PUSH.W  R4, R5
0059FC 99720014       19965         SUB.W   R7,#014H
                      19968 ; rs232cmd.c 5482               char buffer[20];
                      19969 ; rs232cmd.c 5483       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 328

ADDR   CODE            LINE SOURCELINE
                      19970 ; rs232cmd.c 5484               if ( CmdExecute && !SCPIError)
005A00 964842rr       19972         MOV.B   ES,#SEG( _CmdExecute )
005A04 9908rrrr       19973         MOV.W   R0,#SOF( _CmdExecute )
005A08 8200           19974         MOV.B   R0L,[R0]
005A0A F337           19975         BEQ     _1400
005A0C 964842rr       19976         MOV.B   ES,#SEG( _SCPIError )
005A10 9908rrrr       19977         MOV.W   R0,#SOF( _SCPIError )
005A14 8A00           19978         MOV.W   R0,[R0]
005A16 F231           19979         BNE     _1400
                      19980 ; rs232cmd.c 5485               {
                      19981 ; rs232cmd.c 5486                       if ( CmdRequest)
005A18 964842rr       19983         MOV.B   ES,#SEG( _CmdRequest )
005A1C 9908rrrr       19984         MOV.W   R0,#SOF( _CmdRequest )
005A20 8200           19985         MOV.B   R0L,[R0]
005A22 F326           19986         BEQ     _1396
                      19987 ; rs232cmd.c 5487                       {
                      19988 ; rs232cmd.c 5488                               if ( ParCnt)
005A24 964842rr       19990         MOV.B   ES,#SEG( _ParCnt )
005A28 9908rrrr       19991         MOV.W   R0,#SOF( _ParCnt )
005A2C 8200           19992         MOV.B   R0L,[R0]
005A2E F306           19993         BEQ     _1395
                      19994 ; rs232cmd.c 5489                                       SCPIError = SyntaxErr;
005A30 964842rr       19996         MOV.B   ES,#SEG( _SCPIError )
005A34 9908rrrr       19997         MOV.W   R0,#SOF( _SCPIError )
005A38 BA03           19998         MOV.W   [R0],#03H
005A3A FE1F           19999         BR      _1400
005A3A FE1F           19999         BR      _1400
005A3C                20000 _1395:
                      20001 ; rs232cmd.c 5490                               else
                      20002 ; rs232cmd.c 5491                               {
                      20003 ; rs232cmd.c 5492                                       sprintf( buffer, "%u\n", 0, AudioStatus()
                            );
                      20005         CALL    _AudioStatus
005A3C C4rrrrrr       +20005 ;       FCALL   _AudioStatus
005A40 B110           20006         MOVS.B  R0H,#00H
005A42 91A8rr         20007         MOV.B   R5L,#SEG( __lc_bs )
005A45 71BB           20008         XOR.B   R5H,R5H
005A47 8947           20009         MOV.W   R4,R7
005A49 0F01           20010         PUSH.W  R0
005A4B B900           20012         MOV.W   R0,#00H
005A4D 0F01           20013         PUSH.W  R0
005A4F 9918rrrr       20015         MOV.W   R1,#SEG( _1013 )
005A53 9908rrrr       20016         MOV.W   R0,#SOF( _1013 )
005A57 0F03           20017         PUSH.W  R0, R1
005A59 8915           20019         MOV.W   R1,R5
005A5B 8904           20020         MOV.W   R0,R4
                      20021         CALL    _sprintf
005A5D C4rrrrrr       +20021 ;       FCALL   _sprintf
005A61 99700008       20022         ADD.W   R7,#08H
                      20024 ; rs232cmd.c 5493                                       rs232puts( buffer);
005A65 8915           20026         MOV.W   R1,R5
005A67 8904           20027         MOV.W   R0,R4
                      20028         CALL    _rs232puts
005A69 C4rrrrrr       +20028 ;       FCALL   _rs232puts
                      20029 ; rs232cmd.c 5494                               }
                      20030 ; rs232cmd.c 5495                       }
005A6D FE06           20032         BR      _1400
005A6D FE0600         20032         BR      _1400
005A70                20033 _1396:
                      20034 ; rs232cmd.c 5496                       else
                      20035 ; rs232cmd.c 5497                               SCPIError = SyntaxErr;
005A70 964842rr       20037         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 329

ADDR   CODE            LINE SOURCELINE
005A74 9908rrrr       20038         MOV.W   R0,#SOF( _SCPIError )
005A78 BA03           20039         MOV.W   [R0],#03H
                      20040 ; rs232cmd.c 5498               }
005A7A                20042 _1400:
                      20043 ; rs232cmd.c 5499       }
005A7A 99700014       20045         ADD.W   R7,#014H
005A7E 2F30           20047         POP.W   R4, R5
005A80 D680           20049         RET
                      20051 ; rs232cmd.c 5500       
                      20052 ; rs232cmd.c 5501       /************************************************************************
                            **/
                      20053 ; rs232cmd.c 5502       /* FactAudioGenDate                                                      
                                                                                                                             
                                         RS232CMD.C */
                      20054 ; rs232cmd.c 5503       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20055 ; rs232cmd.c 5504       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      20056 ; rs232cmd.c 5505       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      20057 ; rs232cmd.c 5506       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20058 ; rs232cmd.c 5507       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20059 ; rs232cmd.c 5508       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20060 ; rs232cmd.c 5509       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20061 ; rs232cmd.c 5510       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20062 ; rs232cmd.c 5511       /************************************************************************
                            **/
                      20063 ; rs232cmd.c 5512       void FactAudioGenDate( void)
                      20064 ; rs232cmd.c 5513       {
                      20065         ALIGN   1
                      20067         PUBLIC  _FactAudioGenDate
005A82                20068 _FactAudioGenDate:
005A82 0F30           20072         PUSH.W  R4, R5
005A84 9972001A       20074         SUB.W   R7,#01AH
                      20080 ; rs232cmd.c 5514               UI year, month, day;
                      20081 ; rs232cmd.c 5515               char buffer[20];
                      20082 ; rs232cmd.c 5516       
                      20083 ; rs232cmd.c 5517               if ( CmdExecute && !SCPIError)
005A88 964842rr       20085         MOV.B   ES,#SEG( _CmdExecute )
005A8C 9908rrrr       20086         MOV.W   R0,#SOF( _CmdExecute )
005A90 8200           20087         MOV.B   R0L,[R0]
                      20088         BEQ     _1412
005A92 F202           +20088 ;       BNE     _LG_1382
005A94 D500C7         +20088 ;       JMP.L   _1412
005A98 D500C700       +20088 ;       JMP.L   _1412
005A98                +20088 _LG_1382:
005A98 964842rr       20089         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 330

ADDR   CODE            LINE SOURCELINE
005A9C 9908rrrr       20090         MOV.W   R0,#SOF( _SCPIError )
005AA0 8A00           20091         MOV.W   R0,[R0]
                      20092         BNE     _1412
005AA2 F302           +20092 ;       BEQ     _LG_1384
005AA4 D500BF         +20092 ;       JMP.L   _1412
005AA8 D500BF00       +20092 ;       JMP.L   _1412
005AA8                +20092 _LG_1384:
                      20093 ; rs232cmd.c 5518               {
                      20094 ; rs232cmd.c 5519                       if ( CmdRequest)
005AA8 964842rr       20096         MOV.B   ES,#SEG( _CmdRequest )
005AAC 9908rrrr       20097         MOV.W   R0,#SOF( _CmdRequest )
005AB0 8200           20098         MOV.B   R0L,[R0]
005AB2 F35A           20099         BEQ     _1402
                      20100 ; rs232cmd.c 5520                       {
                      20101 ; rs232cmd.c 5521                               if ( ParCnt)
005AB4 964842rr       20103         MOV.B   ES,#SEG( _ParCnt )
005AB8 9908rrrr       20104         MOV.W   R0,#SOF( _ParCnt )
005ABC 8200           20105         MOV.B   R0L,[R0]
005ABE F307           20106         BEQ     _1401
                      20107 ; rs232cmd.c 5522                                       SCPIError = SyntaxErr;
005AC0 964842rr       20109         MOV.B   ES,#SEG( _SCPIError )
005AC4 9908rrrr       20110         MOV.W   R0,#SOF( _SCPIError )
005AC8 BA03           20111         MOV.W   [R0],#03H
                      20112         BR      _1412
005ACA D500AC         +20112         JMP.L   _1412
005ACA D500AC00       +20112         JMP.L   _1412
005ACE                20113 _1401:
                      20114 ; rs232cmd.c 5523                               else
                      20115 ; rs232cmd.c 5524                               {
                      20116 ; rs232cmd.c 5525                                       day = Calibration.AudioCalibration.Date %
                             100;
005ACE 964842rr       20118         MOV.B   ES,#SEG( _Calibration+218 )
005AD2 9918rrrr       20119         MOV.W   R1,#SOF( _Calibration+218 )
005AD6 8B01           20120         MOV.W   R0,[R1+]
005AD8 8A11           20121         MOV.W   R1,[R1]
005ADA B930           20122         MOV.W   R3,#00H
005ADC 99280064       20123         MOV.W   R2,#064H
005AE0 964842rr       20124         MOV.B   ES,#SEG( _Calibration+218 )
005AE4 9948rrrr       20125         MOV.W   R4,#SOF( _Calibration+218 )
005AE8 8B0C           20126         MOV.W   [R4+],R0
005AEA 8A1C           20127         MOV.W   [R4],R1
005AEC C4rrrrrr       20128         FCALL   __UMODL
005AF0 8C0F04         20129         MOV.W   [R7+4],R0
005AF3 964842rr       20130         MOV.B   ES,#SEG( _Calibration+218 )
005AF7 9918rrrr       20131         MOV.W   R1,#SOF( _Calibration+218 )
005AFB 8B01           20132         MOV.W   R0,[R1+]
005AFD 8A11           20133         MOV.W   R1,[R1]
                      20134 ; rs232cmd.c 5526                                       month = ( Calibration.AudioCalibration.Da
                            te / 100) % 100;
005AFF B930           20136         MOV.W   R3,#00H
005B01 99280064       20137         MOV.W   R2,#064H
005B05 8953           20138         MOV.W   R5,R3
005B07 8942           20139         MOV.W   R4,R2
005B09 C4rrrrrr       20140         FCALL   __UDIVL
005B0D 8935           20141         MOV.W   R3,R5
005B0F 8924           20142         MOV.W   R2,R4
005B11 C4rrrrrr       20143         FCALL   __UMODL
005B15 8C0F02         20144         MOV.W   [R7+2],R0
                      20145 ; rs232cmd.c 5527                                       year = ( Calibration.AudioCalibration.Dat
                            e / 10000);
005B18 B930           20147         MOV.W   R3,#00H
005B1A 99282710       20148         MOV.W   R2,#02710H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 331

ADDR   CODE            LINE SOURCELINE
005B1E 964842rr       20149         MOV.B   ES,#SEG( _Calibration+218 )
005B22 9918rrrr       20150         MOV.W   R1,#SOF( _Calibration+218 )
005B26 8B01           20151         MOV.W   R0,[R1+]
005B28 8A11           20152         MOV.W   R1,[R1]
005B2A C4rrrrrr       20153         FCALL   __UDIVL
005B2E 8A0F           20154         MOV.W   [R7],R0
                      20155 ; rs232cmd.c 5528       
                      20156 ; rs232cmd.c 5529                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
005B30 91A8rr         20158         MOV.B   R5L,#SEG( __lc_bs )
005B33 71BB           20159         XOR.B   R5H,R5H
005B35 404706         20160         LEA     R4,R7+6
005B38 8C0704         20161         MOV.W   R0,[R7+4]
005B3B 0F01           20162         PUSH.W  R0
005B3D 8C0704         20164         MOV.W   R0,[R7+4]
005B40 0F01           20165         PUSH.W  R0
005B42 8C0704         20167         MOV.W   R0,[R7+4]
005B45 0F01           20168         PUSH.W  R0
005B47 9918rrrr       20170         MOV.W   R1,#SEG( _1174 )
005B4B 9908rrrr       20171         MOV.W   R0,#SOF( _1174 )
005B4F 0F03           20172         PUSH.W  R0, R1
005B51 8915           20174         MOV.W   R1,R5
005B53 8904           20175         MOV.W   R0,R4
                      20176         CALL    _sprintf
005B55 C4rrrrrr       +20176 ;       FCALL   _sprintf
005B59 9970000A       20177         ADD.W   R7,#0AH
                      20179 ; rs232cmd.c 5530       
                      20180 ; rs232cmd.c 5531                                       rs232puts( buffer);
005B5D 8915           20182         MOV.W   R1,R5
005B5F 8904           20183         MOV.W   R0,R4
                      20184         CALL    _rs232puts
005B61 C4rrrrrr       +20184 ;       FCALL   _rs232puts
                      20185 ; rs232cmd.c 5532                               }
                      20186 ; rs232cmd.c 5533                       }
005B65 FE5F           20188         BR      _1412
005B65 FE5F00         20188         BR      _1412
005B68                20189 _1402:
                      20190 ; rs232cmd.c 5534                       else
                      20191 ; rs232cmd.c 5535                       {
                      20192 ; rs232cmd.c 5536                               if ( !PasswordProtected)
005B68 964842rr       20194         MOV.B   ES,#SEG( _PasswordProtected )
005B6C 9908rrrr       20195         MOV.W   R0,#SOF( _PasswordProtected )
005B70 8A00           20196         MOV.W   R0,[R0]
005B72 F258           20197         BNE     _1412
                      20198 ; rs232cmd.c 5537                               {
                      20199 ; rs232cmd.c 5538                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
005B74 964842rr       20201         MOV.B   ES,#SEG( _ParCnt )
005B78 9908rrrr       20202         MOV.W   R0,#SOF( _ParCnt )
005B7C 8200           20203         MOV.B   R0L,[R0]
005B7E 910403         20204         CMP.B   R0L,#03H
005B81 F21F           20205         BNE     _1403
005B83 9168rr         20206         MOV.B   R3L,#SEG( __lc_bs )
005B86 7177           20207         XOR.B   R3H,R3H
005B88 8927           20208         MOV.W   R2,R7
005B8A 91A8rr         20209         MOV.B   R5L,#SEG( __lc_bs )
005B8D 71BB           20210         XOR.B   R5H,R5H
005B8F 404702         20211         LEA     R4,R7+2
005B92 9128rr         20212         MOV.B   R1L,#SEG( __lc_bs )
005B95 7133           20213         XOR.B   R1H,R1H
005B97 400704         20214         LEA     R0,R7+4
005B9A 0F03           20215         PUSH.W  R0, R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 332

ADDR   CODE            LINE SOURCELINE
005B9C 0F30           20217         PUSH.W  R4, R5
005B9E 0F0C           20219         PUSH.W  R2, R3
005BA0 9938rrrr       20221         MOV.W   R3,#SEG( _1175 )
005BA4 9928rrrr       20222         MOV.W   R2,#SOF( _1175 )
005BA8 0F0C           20223         PUSH.W  R2, R3
005BAA 9918rrrr       20225         MOV.W   R1,#SEG( _Cmd )
005BAE 9908rrrr       20226         MOV.W   R0,#SOF( _Cmd )
                      20227         CALL    _sscanf
005BB2 C4rrrrrr       +20227 ;       FCALL   _sscanf
005BB6 99700010       20228         ADD.W   R7,#010H
005BBA 99040003       20230         CMP.W   R0,#03H
005BBE F306           20231         BEQ     _1404
005BBE F306           20231         BEQ     _1404
005BC0                20232 _1403:
                      20233 ; rs232cmd.c 5539                                               SCPIError = SyntaxErr;
005BC0 964842rr       20235         MOV.B   ES,#SEG( _SCPIError )
005BC4 9908rrrr       20236         MOV.W   R0,#SOF( _SCPIError )
005BC8 BA03           20237         MOV.W   [R0],#03H
005BCA FE2C           20238         BR      _1412
005BCA FE2C           20238         BR      _1412
005BCC                20239 _1404:
                      20240 ; rs232cmd.c 5540                                       else
                      20241 ; rs232cmd.c 5541                                       {
                      20242 ; rs232cmd.c 5542                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
005BCC 8A07           20244         MOV.W   R0,[R7]
005BCE 8C1702         20245         MOV.W   R1,[R7+2]
005BD1 8C2704         20246         MOV.W   R2,[R7+4]
                      20247         CALL    _ValidateDate
005BD4 C4rrrrrr       +20247 ;       FCALL   _ValidateDate
005BD8 6900           20248         OR.W    R0,R0
005BDA F207           20249         BNE     _1405
                      20250 ; rs232cmd.c 5543                                                       SCPIError = ExecErr;
005BDC 964842rr       20252         MOV.B   ES,#SEG( _SCPIError )
005BE0 9908rrrr       20253         MOV.W   R0,#SOF( _SCPIError )
005BE4 9A08001D       20254         MOV.W   [R0],#01DH
005BE8 FE1D           20255         BR      _1412
005BE8 FE1D           20255         BR      _1412
005BEA                20256 _1405:
                      20257 ; rs232cmd.c 5544                                               else
                      20258 ; rs232cmd.c 5545                                               {
                      20259 ; rs232cmd.c 5546                                                       Calibration.AudioCalibrat
                            ion.Date = day + 100*month + 10000*year;
005BEA 8C0702         20261         MOV.W   R0,[R7+2]
005BED E9000064       20262         MULU.W  R0,#064H
005BF1 0C0704         20263         ADD.W   R0,[R7+4]
005BF4 8A27           20264         MOV.W   R2,[R7]
005BF6 E9202710       20265         MULU.W  R2,#02710H
005BFA 0902           20266         ADD.W   R0,R2
005BFC B910           20267         MOVS.W  R1,#00H
005BFE 964842rr       20268         MOV.B   ES,#SEG( _Calibration+218 )
005C02 9928rrrr       20269         MOV.W   R2,#SOF( _Calibration+218 )
005C06 8B0A           20270         MOV.W   [R2+],R0
005C08 8A1A           20271         MOV.W   [R2],R1
                      20272 ; rs232cmd.c 5547                                               
                      20273 ; rs232cmd.c 5548                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
005C0A 9918rrrr       20275         MOV.W   R1,#SEG( _Calibration )
005C0E 9908rrrr       20276         MOV.W   R0,#SOF( _Calibration )
005C12 964842rr       20277         MOV.B   ES,#SEG( _CalibrationPtr )
005C16 9928rrrr       20278         MOV.W   R2,#SOF( _CalibrationPtr )
005C1A 8A22           20279         MOV.W   R2,[R2]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 333

ADDR   CODE            LINE SOURCELINE
005C1C 993800E0       20280         MOV.W   R3,#0E0H
                      20281         CALL    _NV_Store
005C20 C4rrrrrr       +20281 ;       FCALL   _NV_Store
                      20282 ; rs232cmd.c 5549                                               }
                      20283 ; rs232cmd.c 5550                                       }                               
                      20284 ; rs232cmd.c 5551                               }
                      20285 ; rs232cmd.c 5552                       }
                      20286 ; rs232cmd.c 5553               }
005C24                20288 _1412:
                      20289 ; rs232cmd.c 5554       }
005C24 9970001A       20291         ADD.W   R7,#01AH
005C28 2F30           20293         POP.W   R4, R5
005C2A D680           20295         RET
                      20297 ; rs232cmd.c 5555       
                      20298 ; rs232cmd.c 5556       /************************************************************************
                            **/
                      20299 ; rs232cmd.c 5557       /* FactAudioGenLevel                                                     
                                                                                                                             
                                RS232CMD.C  */
                      20300 ; rs232cmd.c 5558       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20301 ; rs232cmd.c 5559       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      20302 ; rs232cmd.c 5560       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      20303 ; rs232cmd.c 5561       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20304 ; rs232cmd.c 5562       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20305 ; rs232cmd.c 5563       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20306 ; rs232cmd.c 5564       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20307 ; rs232cmd.c 5565       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20308 ; rs232cmd.c 5566       /************************************************************************
                            **/
                      20309 ; rs232cmd.c 5567       void FactAudioGenLevel( void)
                      20310 ; rs232cmd.c 5568       {
                      20311         ALIGN   1
                      20313         PUBLIC  _FactAudioGenLevel
005C2C                20314 _FactAudioGenLevel:
005C2C 0F30           20318         PUSH.W  R4, R5
005C2E 99720018       20320         SUB.W   R7,#018H
                      20325 ; rs232cmd.c 5569               char buffer[20];
                      20326 ; rs232cmd.c 5570               UC AnalogLeft, AnalogRight;
                      20327 ; rs232cmd.c 5571       
                      20328 ; rs232cmd.c 5572               if ( CmdExecute && !SCPIError)
005C32 964842rr       20330         MOV.B   ES,#SEG( _CmdExecute )
005C36 9908rrrr       20331         MOV.W   R0,#SOF( _CmdExecute )
005C3A 8200           20332         MOV.B   R0L,[R0]
                      20333         BEQ     _1424
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 334

ADDR   CODE            LINE SOURCELINE
005C3C F202           +20333 ;       BNE     _LG_1398
005C3E D5008A         +20333 ;       JMP.L   _1424
005C42 D5008A00       +20333 ;       JMP.L   _1424
005C42                +20333 _LG_1398:
005C42 964842rr       20334         MOV.B   ES,#SEG( _SCPIError )
005C46 9908rrrr       20335         MOV.W   R0,#SOF( _SCPIError )
005C4A 8A00           20336         MOV.W   R0,[R0]
                      20337         BNE     _1424
005C4C F302           +20337 ;       BEQ     _LG_1400
005C4E D50082         +20337 ;       JMP.L   _1424
005C52 D5008200       +20337 ;       JMP.L   _1424
005C52                +20337 _LG_1400:
                      20338 ; rs232cmd.c 5573               {
                      20339 ; rs232cmd.c 5574                       if ( CmdRequest)
005C52 964842rr       20341         MOV.B   ES,#SEG( _CmdRequest )
005C56 9908rrrr       20342         MOV.W   R0,#SOF( _CmdRequest )
005C5A 8200           20343         MOV.B   R0L,[R0]
005C5C F32E           20344         BEQ     _1416
                      20345 ; rs232cmd.c 5575                       {
                      20346 ; rs232cmd.c 5576                               if ( ParCnt)
005C5E 964842rr       20348         MOV.B   ES,#SEG( _ParCnt )
005C62 9908rrrr       20349         MOV.W   R0,#SOF( _ParCnt )
005C66 8200           20350         MOV.B   R0L,[R0]
005C68 F306           20351         BEQ     _1415
                      20352 ; rs232cmd.c 5577                                       SCPIError = SyntaxErr;
005C6A 964842rr       20354         MOV.B   ES,#SEG( _SCPIError )
005C6E 9908rrrr       20355         MOV.W   R0,#SOF( _SCPIError )
005C72 BA03           20356         MOV.W   [R0],#03H
005C74 FE6F           20357         BR      _1424
005C74 FE6F           20357         BR      _1424
005C76                20358 _1415:
                      20359 ; rs232cmd.c 5578                               else
                      20360 ; rs232cmd.c 5579                               {
                      20361 ; rs232cmd.c 5580                                       sprintf( buffer, "%u,%u\n", Calibration.A
                            udioCalibration.AnalogLeftChannel, 
                      20362 ; rs232cmd.c 5581                                                                                
                                                                                        Calibration.AudioCalibration.AnalogRi
                            ghtChannel);
005C76 91A8rr         20364         MOV.B   R5L,#SEG( __lc_bs )
005C79 71BB           20365         XOR.B   R5H,R5H
005C7B 8947           20366         MOV.W   R4,R7
005C7D 964842rr       20367         MOV.B   ES,#SEG( _Calibration+222 )
005C81 9908rrrr       20368         MOV.W   R0,#SOF( _Calibration+222 )
005C85 8200           20369         MOV.B   R0L,[R0]
005C87 B110           20370         MOVS.B  R0H,#00H
005C89 964842rr       20371         MOV.B   ES,#SEG( _Calibration+223 )
005C8D 9918rrrr       20372         MOV.W   R1,#SOF( _Calibration+223 )
005C91 8221           20373         MOV.B   R1L,[R1]
005C93 B130           20374         MOVS.B  R1H,#00H
005C95 0F02           20375         PUSH.W  R1
005C97 0F01           20377         PUSH.W  R0
005C99 9918rrrr       20379         MOV.W   R1,#SEG( _1301 )
005C9D 9908rrrr       20380         MOV.W   R0,#SOF( _1301 )
005CA1 0F03           20381         PUSH.W  R0, R1
005CA3 8915           20383         MOV.W   R1,R5
005CA5 8904           20384         MOV.W   R0,R4
                      20385         CALL    _sprintf
005CA7 C4rrrrrr       +20385 ;       FCALL   _sprintf
005CAB 99700008       20386         ADD.W   R7,#08H
                      20388 ; rs232cmd.c 5582                                       rs232puts( buffer);
005CAF 8915           20390         MOV.W   R1,R5
005CB1 8904           20391         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 335

ADDR   CODE            LINE SOURCELINE
                      20392         CALL    _rs232puts
005CB3 C4rrrrrr       +20392 ;       FCALL   _rs232puts
                      20393 ; rs232cmd.c 5583                               }
                      20394 ; rs232cmd.c 5584                       }
005CB7 FE4E           20396         BR      _1424
005CB7 FE4E00         20396         BR      _1424
005CBA                20397 _1416:
                      20398 ; rs232cmd.c 5585                       else
                      20399 ; rs232cmd.c 5586                       {
                      20400 ; rs232cmd.c 5587                               if ( !PasswordProtected)
005CBA 964842rr       20402         MOV.B   ES,#SEG( _PasswordProtected )
005CBE 9908rrrr       20403         MOV.W   R0,#SOF( _PasswordProtected )
005CC2 8A00           20404         MOV.W   R0,[R0]
005CC4 F247           20405         BNE     _1424
                      20406 ; rs232cmd.c 5588                               {
                      20407 ; rs232cmd.c 5589                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &AnalogLeft, &AnalogRight)) != 2))
005CC6 964842rr       20409         MOV.B   ES,#SEG( _ParCnt )
005CCA 9908rrrr       20410         MOV.W   R0,#SOF( _ParCnt )
005CCE 8200           20411         MOV.B   R0L,[R0]
005CD0 910402         20412         CMP.B   R0L,#02H
005CD3 F21B           20413         BNE     _1417
005CD5 9918rrrr       20414         MOV.W   R1,#SEG( _Cmd )
005CD9 9908rrrr       20415         MOV.W   R0,#SOF( _Cmd )
005CDD 9168rr         20416         MOV.B   R3L,#SEG( __lc_bs )
005CE0 7177           20417         XOR.B   R3H,R3H
005CE2 402714         20418         LEA     R2,R7+20
005CE5 91A8rr         20419         MOV.B   R5L,#SEG( __lc_bs )
005CE8 71BB           20420         XOR.B   R5H,R5H
005CEA 404716         20421         LEA     R4,R7+22
005CED 0F30           20422         PUSH.W  R4, R5
005CEF 0F0C           20424         PUSH.W  R2, R3
005CF1 9938rrrr       20426         MOV.W   R3,#SEG( _1302 )
005CF5 9928rrrr       20427         MOV.W   R2,#SOF( _1302 )
005CF9 0F0C           20428         PUSH.W  R2, R3
                      20430         CALL    _sscanf
005CFB C4rrrrrr       +20430 ;       FCALL   _sscanf
005CFF 9970000C       20431         ADD.W   R7,#0CH
005D03 99040002       20433         CMP.W   R0,#02H
005D07 F307           20434         BEQ     _1418
005D07 F30700         20434         BEQ     _1418
005D0A                20435 _1417:
                      20436 ; rs232cmd.c 5590                                               SCPIError = SyntaxErr;
005D0A 964842rr       20438         MOV.B   ES,#SEG( _SCPIError )
005D0E 9908rrrr       20439         MOV.W   R0,#SOF( _SCPIError )
005D12 BA03           20440         MOV.W   [R0],#03H
005D14 FE1F           20441         BR      _1424
005D14 FE1F           20441         BR      _1424
005D16                20442 _1418:
                      20443 ; rs232cmd.c 5591                                       else
                      20444 ; rs232cmd.c 5592                                       {
                      20445 ; rs232cmd.c 5593                                               Calibration.AudioCalibration.Anal
                            ogLeftChannel = AnalogLeft;
005D16 840714         20447         MOV.B   R0L,[R7+20]
005D19 964842rr       20448         MOV.B   ES,#SEG( _Calibration+222 )
005D1D 9918rrrr       20449         MOV.W   R1,#SOF( _Calibration+222 )
005D21 8209           20450         MOV.B   [R1],R0L
                      20451 ; rs232cmd.c 5594                                               Calibration.AudioCalibration.Anal
                            ogRightChannel = AnalogRight;
005D23 840716         20453         MOV.B   R0L,[R7+22]
005D26 964842rr       20454         MOV.B   ES,#SEG( _Calibration+223 )
005D2A 9918rrrr       20455         MOV.W   R1,#SOF( _Calibration+223 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 336

ADDR   CODE            LINE SOURCELINE
005D2E 8209           20456         MOV.B   [R1],R0L
                      20457 ; rs232cmd.c 5595                                                               
                      20458 ; rs232cmd.c 5596                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005D30 9918rrrr       20460         MOV.W   R1,#SEG( _Calibration )
005D34 9908rrrr       20461         MOV.W   R0,#SOF( _Calibration )
005D38 964842rr       20462         MOV.B   ES,#SEG( _CalibrationPtr )
005D3C 9928rrrr       20463         MOV.W   R2,#SOF( _CalibrationPtr )
005D40 8A22           20464         MOV.W   R2,[R2]
005D42 993800E0       20465         MOV.W   R3,#0E0H
                      20466         CALL    _NV_Store
005D46 C4rrrrrr       +20466 ;       FCALL   _NV_Store
                      20467 ; rs232cmd.c 5597       
                      20468 ; rs232cmd.c 5598                                               WriteAnlAudioDACLevel( AnalogLeft
                            , AnalogRight);
005D4A 840714         20470         MOV.B   R0L,[R7+20]
005D4D 841716         20471         MOV.B   R0H,[R7+22]
                      20472         CALL    _WriteAnlAudioDACLevel
005D50 C4rrrrrr       +20472 ;       FCALL   _WriteAnlAudioDACLevel
                      20473 ; rs232cmd.c 5599                                       }
                      20474 ; rs232cmd.c 5600                               }
                      20475 ; rs232cmd.c 5601                       }
                      20476 ; rs232cmd.c 5602               }
005D54                20478 _1424:
                      20479 ; rs232cmd.c 5603       }
005D54 99700018       20481         ADD.W   R7,#018H
005D58 2F30           20483         POP.W   R4, R5
005D5A D680           20485         RET
                      20487 ; rs232cmd.c 5604       
                      20488 ; rs232cmd.c 5605       /************************************************************************
                            **/
                      20489 ; rs232cmd.c 5606       /* FactPLDVersion                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      20490 ; rs232cmd.c 5607       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20491 ; rs232cmd.c 5608       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      20492 ; rs232cmd.c 5609       /* Revised:       000625                                                 
                                                                                                                             
                                                                                    */
                      20493 ; rs232cmd.c 5610       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20494 ; rs232cmd.c 5611       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20495 ; rs232cmd.c 5612       /* Remarks:             NOTE! The video PLD version has not been implemen
                            ted at this*/
                      20496 ; rs232cmd.c 5613       /*                                              this time, hence the retu
                            rn value of 0 does NOT reflect the      */
                      20497 ; rs232cmd.c 5614       /*                                              video PLD version.       
                                                                                                                             
                                                                                            */
                      20498 ; rs232cmd.c 5615       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 337

ADDR   CODE            LINE SOURCELINE
                      20499 ; rs232cmd.c 5616       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20500 ; rs232cmd.c 5617       /************************************************************************
                            **/
                      20501 ; rs232cmd.c 5618       void FactPLDVersion( void)
                      20502 ; rs232cmd.c 5619       {
                      20503         ALIGN   1
                      20505         PUBLIC  _FactPLDVersion
005D5C                20506 _FactPLDVersion:
005D5C 0F30           20510         PUSH.W  R4, R5
005D5E 99720014       20512         SUB.W   R7,#014H
                      20515 ; rs232cmd.c 5620               char buffer[20];
                      20516 ; rs232cmd.c 5621       
                      20517 ; rs232cmd.c 5622               if ( CmdExecute && !SCPIError)
005D62 964842rr       20519         MOV.B   ES,#SEG( _CmdExecute )
005D66 9908rrrr       20520         MOV.W   R0,#SOF( _CmdExecute )
005D6A 8200           20521         MOV.B   R0L,[R0]
005D6C F336           20522         BEQ     _1432
005D6E 964842rr       20523         MOV.B   ES,#SEG( _SCPIError )
005D72 9908rrrr       20524         MOV.W   R0,#SOF( _SCPIError )
005D76 8A00           20525         MOV.W   R0,[R0]
005D78 F230           20526         BNE     _1432
                      20527 ; rs232cmd.c 5623               {
                      20528 ; rs232cmd.c 5624                       if ( CmdRequest)
005D7A 964842rr       20530         MOV.B   ES,#SEG( _CmdRequest )
005D7E 9908rrrr       20531         MOV.W   R0,#SOF( _CmdRequest )
005D82 8200           20532         MOV.B   R0L,[R0]
005D84 F325           20533         BEQ     _1428
                      20534 ; rs232cmd.c 5625                       {
                      20535 ; rs232cmd.c 5626                               if ( ParCnt)
005D86 964842rr       20537         MOV.B   ES,#SEG( _ParCnt )
005D8A 9908rrrr       20538         MOV.W   R0,#SOF( _ParCnt )
005D8E 8200           20539         MOV.B   R0L,[R0]
005D90 F306           20540         BEQ     _1427
                      20541 ; rs232cmd.c 5627                                       SCPIError = SyntaxErr;
005D92 964842rr       20543         MOV.B   ES,#SEG( _SCPIError )
005D96 9908rrrr       20544         MOV.W   R0,#SOF( _SCPIError )
005D9A BA03           20545         MOV.W   [R0],#03H
005D9C FE1E           20546         BR      _1432
005D9C FE1E           20546         BR      _1432
005D9E                20547 _1427:
                      20548 ; rs232cmd.c 5628                               else
                      20549 ; rs232cmd.c 5629                               {
                      20550 ; rs232cmd.c 5630                                       sprintf( buffer, "%u,%u\n", 0, pld_versio
                            n());
                      20552         CALL    _pld_version
005D9E C4rrrrrr       +20552 ;       FCALL   _pld_version
005DA2 91A8rr         20553         MOV.B   R5L,#SEG( __lc_bs )
005DA5 71BB           20554         XOR.B   R5H,R5H
005DA7 8947           20555         MOV.W   R4,R7
005DA9 0F01           20556         PUSH.W  R0
005DAB B900           20558         MOV.W   R0,#00H
005DAD 0F01           20559         PUSH.W  R0
005DAF 9918rrrr       20561         MOV.W   R1,#SEG( _1301 )
005DB3 9908rrrr       20562         MOV.W   R0,#SOF( _1301 )
005DB7 0F03           20563         PUSH.W  R0, R1
005DB9 8915           20565         MOV.W   R1,R5
005DBB 8904           20566         MOV.W   R0,R4
                      20567         CALL    _sprintf
005DBD C4rrrrrr       +20567 ;       FCALL   _sprintf
005DC1 99700008       20568         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 338

ADDR   CODE            LINE SOURCELINE
                      20570 ; rs232cmd.c 5631                                       rs232puts( buffer);
005DC5 8915           20572         MOV.W   R1,R5
005DC7 8904           20573         MOV.W   R0,R4
                      20574         CALL    _rs232puts
005DC9 C4rrrrrr       +20574 ;       FCALL   _rs232puts
                      20575 ; rs232cmd.c 5632                               }
                      20576 ; rs232cmd.c 5633                       }
005DCD FE06           20578         BR      _1432
005DCD FE0600         20578         BR      _1432
005DD0                20579 _1428:
                      20580 ; rs232cmd.c 5634                       else
                      20581 ; rs232cmd.c 5635                               SCPIError = SyntaxErr;
005DD0 964842rr       20583         MOV.B   ES,#SEG( _SCPIError )
005DD4 9908rrrr       20584         MOV.W   R0,#SOF( _SCPIError )
005DD8 BA03           20585         MOV.W   [R0],#03H
                      20586 ; rs232cmd.c 5636               }
005DDA                20588 _1432:
                      20589 ; rs232cmd.c 5637       }
005DDA 99700014       20591         ADD.W   R7,#014H
005DDE 2F30           20593         POP.W   R4, R5
005DE0 D680           20595         RET
                      20597 ; rs232cmd.c 5638       
                      20598 ; rs232cmd.c 5639       /************************************************************************
                            **/
                      20599 ; rs232cmd.c 5640       /* FactTCXOStatus                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      20600 ; rs232cmd.c 5641       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20601 ; rs232cmd.c 5642       /* Author:              Kim Engedahl, DEV, 000628                        
                                                                                                                             
                                    */
                      20602 ; rs232cmd.c 5643       /* Revised:       000628                                                 
                                                                                                                             
                                                                                    */
                      20603 ; rs232cmd.c 5644       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20604 ; rs232cmd.c 5645       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20605 ; rs232cmd.c 5646       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                      20606 ; rs232cmd.c 5647       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20607 ; rs232cmd.c 5648       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20608 ; rs232cmd.c 5649       /************************************************************************
                            **/
                      20609 ; rs232cmd.c 5650       void FactTCXOStatus( void)
                      20610 ; rs232cmd.c 5651       {
                      20611         ALIGN   1
                      20613         PUBLIC  _FactTCXOStatus
005DE2                20614 _FactTCXOStatus:
005DE2 0F30           20618         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 339

ADDR   CODE            LINE SOURCELINE
005DE4 99720014       20620         SUB.W   R7,#014H
                      20623 ; rs232cmd.c 5652               char buffer[20];
                      20624 ; rs232cmd.c 5653       
                      20625 ; rs232cmd.c 5654               if ( CmdExecute && !SCPIError)
005DE8 964842rr       20627         MOV.B   ES,#SEG( _CmdExecute )
005DEC 9908rrrr       20628         MOV.W   R0,#SOF( _CmdExecute )
005DF0 8200           20629         MOV.B   R0L,[R0]
005DF2 F333           20630         BEQ     _1438
005DF4 964842rr       20631         MOV.B   ES,#SEG( _SCPIError )
005DF8 9908rrrr       20632         MOV.W   R0,#SOF( _SCPIError )
005DFC 8A00           20633         MOV.W   R0,[R0]
005DFE F22D           20634         BNE     _1438
                      20635 ; rs232cmd.c 5655               {
                      20636 ; rs232cmd.c 5656                       if ( CmdRequest)
005E00 964842rr       20638         MOV.B   ES,#SEG( _CmdRequest )
005E04 9908rrrr       20639         MOV.W   R0,#SOF( _CmdRequest )
005E08 8200           20640         MOV.B   R0L,[R0]
005E0A F322           20641         BEQ     _1434
                      20642 ; rs232cmd.c 5657                       {
                      20643 ; rs232cmd.c 5658                               if ( ParCnt)
005E0C 964842rr       20645         MOV.B   ES,#SEG( _ParCnt )
005E10 9908rrrr       20646         MOV.W   R0,#SOF( _ParCnt )
005E14 8200           20647         MOV.B   R0L,[R0]
005E16 F306           20648         BEQ     _1433
                      20649 ; rs232cmd.c 5659                                       SCPIError = SyntaxErr;
005E18 964842rr       20651         MOV.B   ES,#SEG( _SCPIError )
005E1C 9908rrrr       20652         MOV.W   R0,#SOF( _SCPIError )
005E20 BA03           20653         MOV.W   [R0],#03H
005E22 FE1B           20654         BR      _1438
005E22 FE1B           20654         BR      _1438
005E24                20655 _1433:
                      20656 ; rs232cmd.c 5660                               else
                      20657 ; rs232cmd.c 5661                               {
                      20658 ; rs232cmd.c 5662                                       sprintf( buffer, "%u\n", tcxo_status());
                      20660         CALL    _tcxo_status
005E24 C4rrrrrr       +20660 ;       FCALL   _tcxo_status
005E28 91A8rr         20661         MOV.B   R5L,#SEG( __lc_bs )
005E2B 71BB           20662         XOR.B   R5H,R5H
005E2D 8947           20663         MOV.W   R4,R7
005E2F 0F01           20664         PUSH.W  R0
005E31 9918rrrr       20666         MOV.W   R1,#SEG( _1013 )
005E35 9908rrrr       20667         MOV.W   R0,#SOF( _1013 )
005E39 0F03           20668         PUSH.W  R0, R1
005E3B 8915           20670         MOV.W   R1,R5
005E3D 8904           20671         MOV.W   R0,R4
                      20672         CALL    _sprintf
005E3F C4rrrrrr       +20672 ;       FCALL   _sprintf
005E43 A976           20673         ADDS.W  R7,#06H
                      20675 ; rs232cmd.c 5663                                       rs232puts( buffer);
005E45 8915           20677         MOV.W   R1,R5
005E47 8904           20678         MOV.W   R0,R4
                      20679         CALL    _rs232puts
005E49 C4rrrrrr       +20679 ;       FCALL   _rs232puts
                      20680 ; rs232cmd.c 5664                               }
                      20681 ; rs232cmd.c 5665                       }
005E4D FE06           20683         BR      _1438
005E4D FE0600         20683         BR      _1438
005E50                20684 _1434:
                      20685 ; rs232cmd.c 5666                       else
                      20686 ; rs232cmd.c 5667                               SCPIError = SyntaxErr;
005E50 964842rr       20688         MOV.B   ES,#SEG( _SCPIError )
005E54 9908rrrr       20689         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 340

ADDR   CODE            LINE SOURCELINE
005E58 BA03           20690         MOV.W   [R0],#03H
                      20691 ; rs232cmd.c 5668               }
005E5A                20693 _1438:
                      20694 ; rs232cmd.c 5669       }
005E5A 99700014       20696         ADD.W   R7,#014H
005E5E 2F30           20698         POP.W   R4, R5
005E60 D680           20700         RET
                      20702 ; rs232cmd.c 5670       
                      20703 ; rs232cmd.c 5671       /************************************************************************
                            **/
                      20704 ; rs232cmd.c 5672       /* FactMultiMediaChip                                                    
                                                                                                                             
                                RS232CMD.C  */
                      20705 ; rs232cmd.c 5673       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20706 ; rs232cmd.c 5674       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      20707 ; rs232cmd.c 5675       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      20708 ; rs232cmd.c 5676       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20709 ; rs232cmd.c 5677       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20710 ; rs232cmd.c 5678       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20711 ; rs232cmd.c 5679       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20712 ; rs232cmd.c 5680       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20713 ; rs232cmd.c 5681       /************************************************************************
                            **/
                      20714 ; rs232cmd.c 5682       void FactMultiMediaChip( void)
                      20715 ; rs232cmd.c 5683       {
                      20716         ALIGN   1
                      20718         PUBLIC  _FactMultiMediaChip
005E62                20719 _FactMultiMediaChip:
005E62 0F30           20723         PUSH.W  R4, R5
005E64 A97A           20725         ADDS.W  R7,#0AH
                      20731 ; rs232cmd.c 5684               UI test[2];
                      20732 ; rs232cmd.c 5685               UC tmp[2];
                      20733 ; rs232cmd.c 5686       
                      20734 ; rs232cmd.c 5687               if ( CmdExecute && !SCPIError)
005E66 964842rr       20736         MOV.B   ES,#SEG( _CmdExecute )
005E6A 9908rrrr       20737         MOV.W   R0,#SOF( _CmdExecute )
005E6E 8200           20738         MOV.B   R0L,[R0]
                      20739         BEQ     _1449
005E70 F202           +20739 ;       BNE     _LG_1428
005E72 D500C0         +20739 ;       JMP.L   _1449
005E76 D500C000       +20739 ;       JMP.L   _1449
005E76                +20739 _LG_1428:
005E76 964842rr       20740         MOV.B   ES,#SEG( _SCPIError )
005E7A 9908rrrr       20741         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 341

ADDR   CODE            LINE SOURCELINE
005E7E 8A00           20742         MOV.W   R0,[R0]
                      20743         BNE     _1449
005E80 F302           +20743 ;       BEQ     _LG_1430
005E82 D500B8         +20743 ;       JMP.L   _1449
005E86 D500B800       +20743 ;       JMP.L   _1449
005E86                +20743 _LG_1430:
                      20744 ; rs232cmd.c 5688               {
                      20745 ; rs232cmd.c 5689                       if ( CmdRequest)
005E86 964842rr       20747         MOV.B   ES,#SEG( _CmdRequest )
005E8A 9908rrrr       20748         MOV.W   R0,#SOF( _CmdRequest )
005E8E 8200           20749         MOV.B   R0L,[R0]
005E90 F34C           20750         BEQ     _1442
                      20751 ; rs232cmd.c 5690                       {
                      20752 ; rs232cmd.c 5691                               if ( ParCnt != 1)
005E92 964842rr       20754         MOV.B   ES,#SEG( _ParCnt )
005E96 9908rrrr       20755         MOV.W   R0,#SOF( _ParCnt )
005E9A 8200           20756         MOV.B   R0L,[R0]
005E9C 910401         20757         CMP.B   R0L,#01H
005E9F F307           20758         BEQ     _1441
                      20759 ; rs232cmd.c 5692                                       SCPIError = SyntaxErr;
005EA1 964842rr       20761         MOV.B   ES,#SEG( _SCPIError )
005EA5 9908rrrr       20762         MOV.W   R0,#SOF( _SCPIError )
005EA9 BA03           20763         MOV.W   [R0],#03H
                      20764         BR      _1449
005EAB D500A3         +20764         JMP.L   _1449
005EAB D500A3         +20764         JMP.L   _1449
005EAE                20765 _1441:
                      20766 ; rs232cmd.c 5693                               else
                      20767 ; rs232cmd.c 5694                               {
                      20768 ; rs232cmd.c 5695                                       sscanf( Cmd, "%d", &test[0]);
005EAE 9918rrrr       20770         MOV.W   R1,#SEG( _Cmd )
005EB2 9908rrrr       20771         MOV.W   R0,#SOF( _Cmd )
005EB6 9168rr         20772         MOV.B   R3L,#SEG( __lc_bs )
005EB9 7177           20773         XOR.B   R3H,R3H
005EBB 8927           20774         MOV.W   R2,R7
005EBD 0F0C           20775         PUSH.W  R2, R3
005EBF 9938rrrr       20777         MOV.W   R3,#SEG( _10 )
005EC3 9928rrrr       20778         MOV.W   R2,#SOF( _10 )
005EC7 0F0C           20779         PUSH.W  R2, R3
                      20781         CALL    _sscanf
005EC9 C4rrrrrr       +20781 ;       FCALL   _sscanf
005ECD 99700008       20782         ADD.W   R7,#08H
                      20784 ; rs232cmd.c 5696       
                      20785 ; rs232cmd.c 5697                                       tmp[0] = test[0] & 0x0FF;
005ED1 8A07           20787         MOV.W   R0,[R7]
005ED3 9105FF         20788         AND.B   R0L,#0FFH
005ED6 840F04         20789         MOV.B   [R7+4],R0L
                      20790 ; rs232cmd.c 5698       
                      20791 ; rs232cmd.c 5699                                       TransmitIIC( 0x40, 1, tmp, IIC_PTV);
005ED9 9168rr         20793         MOV.B   R3L,#SEG( __lc_bs )
005EDC 7177           20794         XOR.B   R3H,R3H
005EDE 402704         20795         LEA     R2,R7+4
005EE1 912800         20796         MOV.B   R1L,#00H
005EE4 911801         20797         MOV.B   R0H,#01H
005EE7 910840         20798         MOV.B   R0L,#040H
                      20799         CALL    _TransmitIIC
005EEA C4rrrrrr       +20799 ;       FCALL   _TransmitIIC
                      20800 ; rs232cmd.c 5700                                       ReceiveIIC( 0x40, 1, &tmp[1], IIC_PTV);
005EEE 9168rr         20802         MOV.B   R3L,#SEG( __lc_bs )
005EF1 7177           20803         XOR.B   R3H,R3H
005EF3 402705         20804         LEA     R2,R7+5
005EF6 910840         20805         MOV.B   R0L,#040H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 342

ADDR   CODE            LINE SOURCELINE
005EF9 911801         20806         MOV.B   R0H,#01H
005EFC 912800         20807         MOV.B   R1L,#00H
                      20808         CALL    _ReceiveIIC
005EFF C4rrrrrr       +20808 ;       FCALL   _ReceiveIIC
                      20809 ; rs232cmd.c 5701       
                      20810 ; rs232cmd.c 5702                                       rs232printf( 12,"%03d,%03d\n", ( int) tmp
                            [0], ( int) tmp[1]);
005F03 9908000C       20812         MOV.W   R0,#0CH
005F07 842704         20813         MOV.B   R1L,[R7+4]
005F0A B130           20814         MOVS.B  R1H,#00H
005F0C 844705         20815         MOV.B   R2L,[R7+5]
005F0F B150           20816         MOVS.B  R2H,#00H
005F11 0F04           20817         PUSH.W  R2
005F13 0F02           20819         PUSH.W  R1
005F15 9938rrrr       20821         MOV.W   R3,#SEG( _1439 )
005F19 9928rrrr       20822         MOV.W   R2,#SOF( _1439 )
005F1D 0F0C           20823         PUSH.W  R2, R3
                      20825         CALL    _rs232printf
005F1F C4rrrrrr       +20825 ;       FCALL   _rs232printf
005F23 99700008       20826         ADD.W   R7,#08H
                      20828 ; rs232cmd.c 5703                               }
                      20829 ; rs232cmd.c 5704                       }
005F27 FE66           20831         BR      _1449
005F27 FE6600         20831         BR      _1449
005F2A                20832 _1442:
                      20833 ; rs232cmd.c 5705                       else
                      20834 ; rs232cmd.c 5706                       {
                      20835 ; rs232cmd.c 5707                               if ( !PasswordProtected)
005F2A 964842rr       20837         MOV.B   ES,#SEG( _PasswordProtected )
005F2E 9908rrrr       20838         MOV.W   R0,#SOF( _PasswordProtected )
005F32 8A00           20839         MOV.W   R0,[R0]
005F34 F25F           20840         BNE     _1449
                      20841 ; rs232cmd.c 5708                               {
                      20842 ; rs232cmd.c 5709                                       if ( ParCnt != 2)
005F36 964842rr       20844         MOV.B   ES,#SEG( _ParCnt )
005F3A 9908rrrr       20845         MOV.W   R0,#SOF( _ParCnt )
005F3E 8200           20846         MOV.B   R0L,[R0]
005F40 910402         20847         CMP.B   R0L,#02H
005F43 F307           20848         BEQ     _1443
                      20849 ; rs232cmd.c 5710                                               SCPIError = SyntaxErr;  
005F45 964842rr       20851         MOV.B   ES,#SEG( _SCPIError )
005F49 9908rrrr       20852         MOV.W   R0,#SOF( _SCPIError )
005F4D BA03           20853         MOV.W   [R0],#03H
005F4F FE52           20854         BR      _1449
005F4F FE5200         20854         BR      _1449
005F52                20855 _1443:
                      20856 ; rs232cmd.c 5711                                       else
                      20857 ; rs232cmd.c 5712                                       {
                      20858 ; rs232cmd.c 5713                                               sscanf( Cmd, "%d,%d", &test[0], &
                            test[1]);
005F52 9918rrrr       20860         MOV.W   R1,#SEG( _Cmd )
005F56 9908rrrr       20861         MOV.W   R0,#SOF( _Cmd )
005F5A 9168rr         20862         MOV.B   R3L,#SEG( __lc_bs )
005F5D 7177           20863         XOR.B   R3H,R3H
005F5F 8927           20864         MOV.W   R2,R7
005F61 91A8rr         20865         MOV.B   R5L,#SEG( __lc_bs )
005F64 71BB           20866         XOR.B   R5H,R5H
005F66 404702         20867         LEA     R4,R7+2
005F69 0F30           20868         PUSH.W  R4, R5
005F6B 0F0C           20870         PUSH.W  R2, R3
005F6D 9938rrrr       20872         MOV.W   R3,#SEG( _1440 )
005F71 9928rrrr       20873         MOV.W   R2,#SOF( _1440 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 343

ADDR   CODE            LINE SOURCELINE
005F75 0F0C           20874         PUSH.W  R2, R3
                      20876         CALL    _sscanf
005F77 C4rrrrrr       +20876 ;       FCALL   _sscanf
005F7B 9970000C       20877         ADD.W   R7,#0CH
                      20879 ; rs232cmd.c 5714       
                      20880 ; rs232cmd.c 5715                                               tmp[0] = test[0] & 0x0FF;
005F7F 8A07           20882         MOV.W   R0,[R7]
005F81 9105FF         20883         AND.B   R0L,#0FFH
005F84 840F04         20884         MOV.B   [R7+4],R0L
                      20885 ; rs232cmd.c 5716                                               tmp[1] = test[1] & 0x0FF;
005F87 8C0702         20887         MOV.W   R0,[R7+2]
005F8A 9105FF         20888         AND.B   R0L,#0FFH
005F8D 840F05         20889         MOV.B   [R7+5],R0L
                      20890 ; rs232cmd.c 5717       
                      20891 ; rs232cmd.c 5718                                               TransmitIIC( 0x40, 2, tmp, IIC_PT
                            V);
005F90 911802         20893         MOV.B   R0H,#02H
005F93 91A8rr         20894         MOV.B   R5L,#SEG( __lc_bs )
005F96 71BB           20895         XOR.B   R5H,R5H
005F98 404704         20896         LEA     R4,R7+4
005F9B 912800         20897         MOV.B   R1L,#00H
005F9E 8935           20898         MOV.W   R3,R5
005FA0 8924           20899         MOV.W   R2,R4
005FA2 910840         20900         MOV.B   R0L,#040H
                      20901         CALL    _TransmitIIC
005FA5 C4rrrrrr       +20901 ;       FCALL   _TransmitIIC
                      20902 ; rs232cmd.c 5719       
                      20903 ; rs232cmd.c 5720                                               TransmitIIC( 0x40, 1, tmp, IIC_PT
                            V);
005FA9 912800         20905         MOV.B   R1L,#00H
005FAC 911801         20906         MOV.B   R0H,#01H
005FAF 910840         20907         MOV.B   R0L,#040H
005FB2 8935           20908         MOV.W   R3,R5
005FB4 8924           20909         MOV.W   R2,R4
                      20910         CALL    _TransmitIIC
005FB6 C4rrrrrr       +20910 ;       FCALL   _TransmitIIC
                      20911 ; rs232cmd.c 5721                                               ReceiveIIC( 0x40, 1, &tmp[1], IIC
                            _PTV);
005FBA 9168rr         20913         MOV.B   R3L,#SEG( __lc_bs )
005FBD 7177           20914         XOR.B   R3H,R3H
005FBF 402705         20915         LEA     R2,R7+5
005FC2 910840         20916         MOV.B   R0L,#040H
005FC5 911801         20917         MOV.B   R0H,#01H
005FC8 912800         20918         MOV.B   R1L,#00H
                      20919         CALL    _ReceiveIIC
005FCB C4rrrrrr       +20919 ;       FCALL   _ReceiveIIC
                      20920 ; rs232cmd.c 5722       
                      20921 ; rs232cmd.c 5723                                               rs232printf( 12,"%03d,%03d\n", ( 
                            int) tmp[0], ( int) tmp[1]);
005FCF 9908000C       20923         MOV.W   R0,#0CH
005FD3 842704         20924         MOV.B   R1L,[R7+4]
005FD6 B130           20925         MOVS.B  R1H,#00H
005FD8 844705         20926         MOV.B   R2L,[R7+5]
005FDB B150           20927         MOVS.B  R2H,#00H
005FDD 0F04           20928         PUSH.W  R2
005FDF 0F02           20930         PUSH.W  R1
005FE1 9938rrrr       20932         MOV.W   R3,#SEG( _1439 )
005FE5 9928rrrr       20933         MOV.W   R2,#SOF( _1439 )
005FE9 0F0C           20934         PUSH.W  R2, R3
                      20936         CALL    _rs232printf
005FEB C4rrrrrr       +20936 ;       FCALL   _rs232printf
005FEF 99700008       20937         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 344

ADDR   CODE            LINE SOURCELINE
                      20939 ; rs232cmd.c 5724                                       }
                      20940 ; rs232cmd.c 5725                               }
                      20941 ; rs232cmd.c 5726                       }
                      20942 ; rs232cmd.c 5727               }
005FF4                20944 _1449:
                      20945 ; rs232cmd.c 5728       }
005FF4 A976           20947         ADDS.W  R7,#06H
005FF6 2F30           20949         POP.W   R4, R5
005FF8 D680           20951         RET
                      20953 ; rs232cmd.c 5729       
                      20954 ; rs232cmd.c 5730       /************************************************************************
                            **/
                      20955 ; rs232cmd.c 5731       /* FindParameter                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      20956 ; rs232cmd.c 5732       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20957 ; rs232cmd.c 5733       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                      20958 ; rs232cmd.c 5734       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      20959 ; rs232cmd.c 5735       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20960 ; rs232cmd.c 5736       /* Function:    Find the character defined parameter                     
                                                                                                    */
                      20961 ; rs232cmd.c 5737       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20962 ; rs232cmd.c 5738       /* Returns:             The array number containing the parameter or max.
                             array+1                */
                      20963 ; rs232cmd.c 5739       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20964 ; rs232cmd.c 5740       /************************************************************************
                            **/
                      20965 ; rs232cmd.c 5741       int FindParameter( char* par, struct PAR_STRUCT code* ParPtr)
                      20966 ; rs232cmd.c 5742       {
                      20967         ALIGN   1
                      20969         PUBLIC  _FindParameter
005FFA                20970 _FindParameter:
005FFA 0F70           20974         PUSH.W  R4, R5, R6
005FFC A97C           20976         ADDS.W  R7,#0CH
005FFE 8951           20980         MOV.W   R5,R1
006000 8940           20981         MOV.W   R4,R0
                      20988 ; rs232cmd.c 5743               int tmp = 0;
006002 B960           20990         MOV.W   R6,#00H
                      20992 ; rs232cmd.c 5744       
                      20993 ; rs232cmd.c 5745               while ( ParPtr)
006004 8913           20995         MOV.W   R1,R3
006006 8902           20996         MOV.W   R0,R2
006008 6932           20997         OR.W    R3,R2
00600A F33F           21000         BEQ     _1456
00600A F33F           21000         BEQ     _1456
00600C                21001 _1452:
                      21002 ; rs232cmd.c 5746               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 345

ADDR   CODE            LINE SOURCELINE
                      21003 ; rs232cmd.c 5747                       if (( !Cstrcmp( par, ParPtr->LongName)) || ( !Cstrcmp( pa
                            r, ParPtr->ShortName)))
00600C 8C1F02         21005         MOV.W   [R7+2],R1
00600F 8A0F           21006         MOV.W   [R7],R0
006011 862C43         21007         MOV.B   CS,R1L
006014 8820           21008         MOVC.W  R2,[R0+]
006016 99040000       21009         CMP.W   R0,#00H
00601A F202           21010         BNE     _1458
00601C A64143         21011         ADDS.B  CS,#01H
00601C A6414300       21011         ADDS.B  CS,#01H
006020                21012 _1458:
006020 8830           21013         MOVC.W  R3,[R0+]
006022 8915           21016         MOV.W   R1,R5
006024 8904           21017         MOV.W   R0,R4
                      21020         CALL    _Cstrcmp
006026 C4rrrrrr       +21020 ;       FCALL   _Cstrcmp
00602A 6900           21023         OR.W    R0,R0
00602C F315           21024         BEQ     _1453
00602E 8C1702         21025         MOV.W   R1,[R7+2]
006031 8A07           21026         MOV.W   R0,[R7]
006033 99000004       21027         ADD.W   R0,#04H
006037 99110000       21028         ADDC.W  R1,#00H
00603B 862C43         21029         MOV.B   CS,R1L
00603E 8820           21030         MOVC.W  R2,[R0+]
006040 99040000       21031         CMP.W   R0,#00H
006044 F202           21032         BNE     _1459
006046 A64143         21033         ADDS.B  CS,#01H
006046 A6414300       21033         ADDS.B  CS,#01H
00604A                21034 _1459:
00604A 8830           21035         MOVC.W  R3,[R0+]
00604C 8915           21036         MOV.W   R1,R5
00604E 8904           21037         MOV.W   R0,R4
                      21040         CALL    _Cstrcmp
006050 C4rrrrrr       +21040 ;       FCALL   _Cstrcmp
006054 6900           21043         OR.W    R0,R0
006056 F202           21044         BNE     _1454
006056 F202           21044         BNE     _1454
006058                21045 _1453:
                      21046 ; rs232cmd.c 5748                               return( tmp);
006058 8906           21048         MOV.W   R0,R6
00605A FE19           21051         BR      _1457
00605A FE19           21051         BR      _1457
00605C                21052 _1454:
                      21059 ; rs232cmd.c 5749       
                      21060 ; rs232cmd.c 5750                       ParPtr = ParPtr->SameLevel;
00605C 8C1702         21062         MOV.W   R1,[R7+2]
00605F 8A07           21063         MOV.W   R0,[R7]
006061 99000008       21064         ADD.W   R0,#08H
006065 99110000       21065         ADDC.W  R1,#00H
006069 862C43         21069         MOV.B   CS,R1L
00606C 8820           21070         MOVC.W  R2,[R0+]
00606E 99040000       21071         CMP.W   R0,#00H
006072 F202           21072         BNE     _1460
006074 A64143         21073         ADDS.B  CS,#01H
006074 A6414300       21073         ADDS.B  CS,#01H
006078                21074 _1460:
006078 8830           21075         MOVC.W  R3,[R0+]
                      21077 ; rs232cmd.c 5751       
                      21078 ; rs232cmd.c 5752                       if ( tmp < 255)
00607A 996400FF       21080         CMP.W   R6,#0FFH
00607E FA05           21081         BGE     _1456
                      21082 ; rs232cmd.c 5753                               tmp++;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 346

ADDR   CODE            LINE SOURCELINE
006080 A961           21084         ADDS.W  R6,#01H
006082 8913           21088         MOV.W   R1,R3
006084 8902           21089         MOV.W   R0,R2
006086 6932           21090         OR.W    R3,R2
006088 F2C1           21093         BNE     _1452
                      21094 ; rs232cmd.c 5754                       else
                      21095 ; rs232cmd.c 5755                               break;
                      21096 ; rs232cmd.c 5756               }
00608A                21098 _1456:
                      21099 ; rs232cmd.c 5757       
                      21100 ; rs232cmd.c 5758               return( -1);
00608A 9908FFFF       21102         MOV.W   R0,#0FFFFH
                      21104 ; rs232cmd.c 5759       }
00608E                21106 _1457:
00608E A974           21107         ADDS.W  R7,#04H
006090 2F70           21109         POP.W   R4, R5, R6
006092 D680           21111         RET
                      21115 ; rs232cmd.c 5760       
                      21116 ; rs232cmd.c 5761       
                      21117 ; rs232cmd.c 5762       /************************************************************************
                            **/
                      21118 ; rs232cmd.c 5763       /* FLTToSamples                                                          
                                                                                                                             
                                                     RS232CMD.C */
                      21119 ; rs232cmd.c 5764       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21120 ; rs232cmd.c 5765       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                    */
                      21121 ; rs232cmd.c 5766       /* Revised:             000530                                           
                                                                                                                             
                                                                                    */
                      21122 ; rs232cmd.c 5767       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */      
                      21123 ; rs232cmd.c 5768       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      21124 ; rs232cmd.c 5769       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                    */
                      21125 ; rs232cmd.c 5770       /* Returns:             FLT in samples, or -1 if illegal                 
                                                                                                                            *
                            /
                      21126 ; rs232cmd.c 5771       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      21127 ; rs232cmd.c 5772       /************************************************************************
                            ***/
                      21128 ; rs232cmd.c 5773       long FLTToSamples( UC system, int F, int L, float T) {
                      21129         ALIGN   1
                      21131         PUBLIC  _FLTToSamples
006094                21132 _FLTToSamples:
006094 0F70           21136         PUSH.W  R4, R5, R6
006096 99720018       21138         SUB.W   R7,#018H
00609A 840F12         21141         MOV.B   [R7+18],R0L
00609D 8C2F0E         21144         MOV.W   [R7+14],R2
                      21154 ; rs232cmd.c 5774       
                      21155 ; rs232cmd.c 5775               long samples;
                      21156 ; rs232cmd.c 5776               char minus;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 347

ADDR   CODE            LINE SOURCELINE
                      21157 ; rs232cmd.c 5777       
                      21158 ; rs232cmd.c 5778               if (( F == 0) && ( L == 0) && ( T == 0))
0060A0 8C1F10         21160         MOV.W   [R7+16],R1
0060A3 6911           21161         OR.W    R1,R1
0060A5 F210           21162         BNE     _1467
0060A7 8C070E         21163         MOV.W   R0,[R7+14]
0060AA F20D           21164         BNE     _1467
0060AC B930           21165         MOV.W   R3,#00H
0060AE B920           21166         MOV.W   R2,#00H
0060B0 8C1724         21167         MOV.W   R1,[R7+36]
0060B3 8C0722         21168         MOV.W   R0,[R7+34]
0060B6 C4rrrrrr       21169         FCALL   __CMP_SPF
0060BA 910400         21170         CMP.B   R0L,#00H
0060BD F204           21171         BNE     _1467
                      21172 ; rs232cmd.c 5779                       return( 0);
0060BF B910           21174         MOV.W   R1,#00H
0060C1 B900           21175         MOV.W   R0,#00H
                      21176         BR      _1534
0060C3 D5021E         +21176         JMP.L   _1534
0060C3 D5021E         +21176         JMP.L   _1534
0060C6                21177 _1467:
                      21180 ; rs232cmd.c 5780       
                      21181 ; rs232cmd.c 5781               if (( F <= 0) && ( L <= 0) && ( T <= 0))
0060C6 9C74100000     21183         CMP.W   [R7+16],#00H
0060CB FC10           21184         BGT     _1470
0060CD 9C740E0000     21185         CMP.W   [R7+14],#00H
0060D2 FC0C           21186         BGT     _1470
0060D4 B930           21187         MOV.W   R3,#00H
0060D6 B920           21188         MOV.W   R2,#00H
0060D8 8C1724         21189         MOV.W   R1,[R7+36]
0060DB 8C0722         21190         MOV.W   R0,[R7+34]
0060DE C4rrrrrr       21191         FCALL   __CMP_SPF
0060E2 910400         21192         CMP.B   R0L,#00H
0060E5 FC03           21193         BGT     _1470
                      21194 ; rs232cmd.c 5782               {
                      21195 ; rs232cmd.c 5783                       minus = 1;
0060E7 B4710C         21197         MOV.B   [R7+12],#01H
                      21199 ; rs232cmd.c 5784               }
0060EA FE19           21201         BR      _1474
0060EA FE19           21201         BR      _1474
0060EC                21202 _1470:
                      21203 ; rs232cmd.c 5785               else
                      21204 ; rs232cmd.c 5786               {
                      21205 ; rs232cmd.c 5787                       if (( F >= 0) && ( L >= 0) && ( T >= 0))
0060EC 9C74100000     21207         CMP.W   [R7+16],#00H
0060F1 FB0E           21208         BLT     _1472
0060F3 9C740E0000     21209         CMP.W   [R7+14],#00H
0060F8 FB0A           21210         BLT     _1472
0060FA B930           21211         MOV.W   R3,#00H
0060FC B920           21212         MOV.W   R2,#00H
0060FE 8C1724         21213         MOV.W   R1,[R7+36]
006101 8C0722         21214         MOV.W   R0,[R7+34]
006104 C4rrrrrr       21215         FCALL   __CMP_SPF
006108 910400         21216         CMP.B   R0L,#00H
00610B FA07           21217         BGE     _1473
                      21218 ; rs232cmd.c 5788                               minus = 0;
00610E                21220 _1472:
                      21221 ; rs232cmd.c 5789                       else
                      21222 ; rs232cmd.c 5790                               return( -1);
00610E 9918FFFF       21224         MOV.W   R1,#0FFFFH
006112 9908FFFF       21225         MOV.W   R0,#0FFFFH
                      21226         BR      _1534
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 348

ADDR   CODE            LINE SOURCELINE
006116 D501F5         +21226         JMP.L   _1534
00611A                21228 _1473:
00611A B4700C         21231         MOV.B   [R7+12],#00H
                      21234 ; rs232cmd.c 5791               }
00611E                21236 _1474:
                      21237 ; rs232cmd.c 5792       
                      21238 ; rs232cmd.c 5793                                                                                
                                                                                                            // 1 sample = (1/
                            27MHz)/256
                      21239 ; rs232cmd.c 5794               samples = ( long)(( T*6912L)/1000L + 0.5);      
00611E 991845D8       21241         MOV.W   R1,#045D8H
006122 B900           21242         MOV.W   R0,#00H
006124 8C3724         21243         MOV.W   R3,[R7+36]
006127 8C2722         21244         MOV.W   R2,[R7+34]
00612A C4rrrrrr       21245         FCALL   __MUL_SPF
00612E 9938447A       21246         MOV.W   R3,#0447AH
006132 B920           21247         MOV.W   R2,#00H
006134 C4rrrrrr       21248         FCALL   __DIV_SPF
006138 C4rrrrrr       21249         FCALL   __SPF2DPF
00613C 9C780A3FE0     21250         MOV.W   [R7+10],#03FE0H
006141 BC7008         21251         MOV.W   [R7+8],#00H
006144 BC7006         21252         MOV.W   [R7+6],#00H
006147 BC7004         21253         MOV.W   [R7+4],#00H
00614A 406704         21254         LEA     R6,R7+4
00614D C4rrrrrr       21255         FCALL   __ADD_DPF
006151 C4rrrrrr       21256         FCALL   __DPF2L
006155 8C1F16         21257         MOV.W   [R7+22],R1
006158 8C0F14         21258         MOV.W   [R7+20],R0
                      21259 ; rs232cmd.c 5795       
                      21260 ; rs232cmd.c 5796               if ( system < NTSC_US)                                           
                                                    // If selected system is PAL..
00615B 844712         21262         MOV.B   R2L,[R7+18]
00615E 914402         21263         CMP.B   R2L,#02H
                      21266         BCC     _1499
006161 F102           +21266 ;       BCS     _LG_1474
006163 D500EB         +21266 ;       JMP.L   _1499
006166 D500EB         +21266 ;       JMP.L   _1499
006166                +21266 _LG_1474:
006166 8C1F0A         21267         MOV.W   [R7+10],R1
006169 8C0F08         21268         MOV.W   [R7+8],R0
                      21269 ; rs232cmd.c 5797               {
                      21270 ; rs232cmd.c 5798       
                      21271 ; rs232cmd.c 5799                       if ( labs( samples) > 442367L)          // Test for illeg
                            al time var
                      21273         CALL    _labs
00616C C4rrrrrr       +21273 ;       FCALL   _labs
006170 99140006       21275         CMP.W   R1,#06H
006174 FB0A           21276         BLT     _1475
006176 FC03           21277         BGT     _1540
006178 9904BFFF       21278         CMP.W   R0,#0BFFFH
00617C F906           21279         BL      _1475
00617C F906           21279         BL      _1475
00617E                21280 _1540:
                      21281 ; rs232cmd.c 5800                               return( -1);
00617E 9918FFFF       21283         MOV.W   R1,#0FFFFH
006182 9908FFFF       21284         MOV.W   R0,#0FFFFH
                      21285         BR      _1534
006186 D501BD         +21285         JMP.L   _1534
006186 D501BD00       +21285         JMP.L   _1534
00618A                21286 _1475:
                      21289 ; rs232cmd.c 5801       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 349

ADDR   CODE            LINE SOURCELINE
                      21290 ; rs232cmd.c 5802                       switch ( F)                                              
                                                                            // Test for illegal field & line
00618A 9C74100000     21292         CMP.W   [R7+16],#00H
00618F F31A           21293         BEQ     _1476
006191 9C7410FFFF     21294         CMP.W   [R7+16],#0FFFFH
006196 F328           21295         BEQ     _1481
006198 9C7410FFFD     21296         CMP.W   [R7+16],#0FFFDH
00619D F325           21297         BEQ     _1481
00619F 9C74100002     21298         CMP.W   [R7+16],#02H
0061A4 F321           21299         BEQ     _1481
0061A6 9C7410FFFE     21300         CMP.W   [R7+16],#0FFFEH
0061AB F32A           21301         BEQ     _1484
0061AD 9C74100001     21302         CMP.W   [R7+16],#01H
0061B2 F326           21303         BEQ     _1484
0061B4 9C74100003     21304         CMP.W   [R7+16],#03H
0061B9 F323           21305         BEQ     _1484
0061BB 9C74100004     21306         CMP.W   [R7+16],#04H
0061C0 F32B           21307         BEQ     _1485
0061C2 FE44           21308         BR      _1487
                      21309 ; rs232cmd.c 5803                       {
                      21310 ; rs232cmd.c 5804                               case 0:
0061C4                21312 _1476:
                      21313 ; rs232cmd.c 5805                                       if (( minus && ( L < -311)) || ( !minus &
                            & ( L > 312)))
0061C4 84070C         21315         MOV.B   R0L,[R7+12]
0061C7 F304           21316         BEQ     _1477
0061C9 9C740EFEC9     21317         CMP.W   [R7+14],#0FEC9H
0061CE FB06           21318         BLT     _1478
0061CE FB06           21318         BLT     _1478
0061D0                21319 _1477:
0061D0 84070C         21320         MOV.B   R0L,[R7+12]
0061D3 F242           21321         BNE     _1492
0061D5 9C740E0138     21322         CMP.W   [R7+14],#0138H
0061DA FD3E           21323         BLE     _1492
0061DA FD3E           21323         BLE     _1492
0061DC                21324 _1478:
                      21325 ; rs232cmd.c 5806                                               return( -1);
0061DC 9918FFFF       21327         MOV.W   R1,#0FFFFH
0061E0 9908FFFF       21328         MOV.W   R0,#0FFFFH
                      21329         BR      _1534
0061E4 D5018E         +21329         JMP.L   _1534
                      21330 ; rs232cmd.c 5807                                       break;
                      21331 ; rs232cmd.c 5808       
                      21332 ; rs232cmd.c 5809                               case -1:
                      21333 ; rs232cmd.c 5810                               case -3:
                      21334 ; rs232cmd.c 5811                               case 2:
0061E8                21336 _1481:
                      21339 ; rs232cmd.c 5812                                       if ( abs( L) > 312)
0061E8 8C070E         21341         MOV.W   R0,[R7+14]
                      21342         CALL    _abs
0061EB C4rrrrrr       +21342 ;       FCALL   _abs
0061EF 99040138       21343         CMP.W   R0,#0138H
0061F3 FD32           21344         BLE     _1492
                      21345 ; rs232cmd.c 5813                                               return( -1);
0061F5 9918FFFF       21347         MOV.W   R1,#0FFFFH
0061F9 9908FFFF       21348         MOV.W   R0,#0FFFFH
                      21349         BR      _1534
0061FD D50181         +21349         JMP.L   _1534
                      21350 ; rs232cmd.c 5814                                       break;
                      21351 ; rs232cmd.c 5815       
                      21352 ; rs232cmd.c 5816                               case -2:
                      21353 ; rs232cmd.c 5817                               case 1:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 350

ADDR   CODE            LINE SOURCELINE
                      21354 ; rs232cmd.c 5818                               case 3:
006200                21356 _1484:
                      21359 ; rs232cmd.c 5819                                       if ( abs( L) > 311)
006200 8C070E         21361         MOV.W   R0,[R7+14]
                      21362         CALL    _abs
006203 C4rrrrrr       +21362 ;       FCALL   _abs
006207 99040137       21363         CMP.W   R0,#0137H
00620B FD26           21364         BLE     _1492
                      21365 ; rs232cmd.c 5820                                               return( -1);
00620D 9918FFFF       21367         MOV.W   R1,#0FFFFH
006211 9908FFFF       21368         MOV.W   R0,#0FFFFH
                      21369         BR      _1534
006215 D50175         +21369         JMP.L   _1534
                      21370 ; rs232cmd.c 5821                                       break;
                      21371 ; rs232cmd.c 5822       
                      21372 ; rs232cmd.c 5823                               case 4:
006218                21374 _1485:
                      21377 ; rs232cmd.c 5824                                       if (( L > 0) || ( T > 0.0))
006218 9C740E0000     21379         CMP.W   [R7+14],#00H
00621D FC11           21380         BGT     _1486
00621F 8C1724         21381         MOV.W   R1,[R7+36]
006222 8C0722         21382         MOV.W   R0,[R7+34]
006225 C4rrrrrr       21383         FCALL   __SPF2DPF
006229 BC7006         21384         MOV.W   [R7+6],#00H
00622C BC7004         21385         MOV.W   [R7+4],#00H
00622F BC7002         21386         MOV.W   [R7+2],#00H
006232 BA70           21387         MOV.W   [R7],#00H
006234 8967           21388         MOV.W   R6,R7
006236 C4rrrrrr       21389         FCALL   __CMP_DPF
00623A 910401         21390         CMP.B   R0L,#01H
00623D F20D           21391         BNE     _1492
00623D F20D00         21391         BNE     _1492
006240                21392 _1486:
                      21393 ; rs232cmd.c 5825                                               return( -1);
006240 9918FFFF       21395         MOV.W   R1,#0FFFFH
006244 9908FFFF       21396         MOV.W   R0,#0FFFFH
                      21397         BR      _1534
006248 D5015C         +21397         JMP.L   _1534
                      21398 ; rs232cmd.c 5826                                       break;
                      21399 ; rs232cmd.c 5827       
                      21400 ; rs232cmd.c 5828                               default:
00624C                21402 _1487:
                      21403 ; rs232cmd.c 5829                                       return( -1);
00624C 9918FFFF       21405         MOV.W   R1,#0FFFFH
006250 9908FFFF       21406         MOV.W   R0,#0FFFFH
                      21407         BR      _1534
006254 D50156         +21407         JMP.L   _1534
                      21408 ; rs232cmd.c 5830                       }
006258                21410 _1492:
                      21413 ; rs232cmd.c 5831       
                      21414 ; rs232cmd.c 5832                       if ( !minus)                                             
                                                                    // if posistive delay..
006258 84070C         21416         MOV.B   R0L,[R7+12]
00625B F212           21419         BNE     _1493
                      21420 ; rs232cmd.c 5833                       {
                      21421 ; rs232cmd.c 5834                               if ( F % 2)
00625D 8C0710         21423         MOV.W   R0,[R7+16]
006260 8910           21424         MOV.W   R1,R0
006262 9819           21425         SEXT.W  R1
006264 E9090002       21426         DIV.D   R0,#02H
006268 6911           21427         OR.W    R1,R1
00626A F341           21428         BEQ     _1498
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 351

ADDR   CODE            LINE SOURCELINE
                      21429 ; rs232cmd.c 5835                               {
                      21430 ; rs232cmd.c 5836                                       L += 313;
00626C 8C070E         21432         MOV.W   R0,[R7+14]
00626F 99000139       21433         ADD.W   R0,#0139H
006273 8C0F0E         21435         MOV.W   [R7+14],R0
                      21436 ; rs232cmd.c 5837                                       F--;
006276 8C0710         21438         MOV.W   R0,[R7+16]
006279 A90F           21439         ADDS.W  R0,#0FH
00627B 8C0F10         21440         MOV.W   [R7+16],R0
                      21441 ; rs232cmd.c 5838                               }
                      21442 ; rs232cmd.c 5839                       }
00627E FE37           21444         BR      _1498
00627E FE37           21444         BR      _1498
006280                21445 _1493:
                      21446 ; rs232cmd.c 5840                       else                                                     
                                                                                            // ..else delay is negative
                      21447 ; rs232cmd.c 5841                       {
                      21448 ; rs232cmd.c 5842                               F += 7;
006280 8C0710         21450         MOV.W   R0,[R7+16]
006283 A907           21451         ADDS.W  R0,#07H
                      21452 ; rs232cmd.c 5843       
                      21453 ; rs232cmd.c 5844                               samples += 442367L;
006285 8C370A         21455         MOV.W   R3,[R7+10]
006288 8C2708         21456         MOV.W   R2,[R7+8]
00628B 9920BFFF       21457         ADD.W   R2,#0BFFFH
00628F 99310006       21458         ADDC.W  R3,#06H
006293 8C3F16         21459         MOV.W   [R7+22],R3
006296 8C2F14         21460         MOV.W   [R7+20],R2
                      21461 ; rs232cmd.c 5845       
                      21462 ; rs232cmd.c 5846                               if ( F % 2) {
006299 8C0F10         21464         MOV.W   [R7+16],R0
00629C 8910           21465         MOV.W   R1,R0
00629E 9819           21466         SEXT.W  R1
0062A0 E9090002       21467         DIV.D   R0,#02H
0062A4 6911           21468         OR.W    R1,R1
0062A6 F30A           21469         BEQ     _1494
                      21470 ; rs232cmd.c 5847                                       L += 624;
0062A8 8C070E         21472         MOV.W   R0,[R7+14]
0062AB 99000270       21473         ADD.W   R0,#0270H
0062AF 8C0F0E         21474         MOV.W   [R7+14],R0
                      21475 ; rs232cmd.c 5848                                       F--;
0062B2 8C0710         21477         MOV.W   R0,[R7+16]
0062B5 A90F           21478         ADDS.W  R0,#0FH
0062B7 8C0F10         21479         MOV.W   [R7+16],R0
                      21480 ; rs232cmd.c 5849                               }
0062BA FE05           21482         BR      _1495
0062BA FE05           21482         BR      _1495
0062BC                21483 _1494:
                      21484 ; rs232cmd.c 5850                               else
                      21485 ; rs232cmd.c 5851                                       L += 312;
0062BC 8C070E         21487         MOV.W   R0,[R7+14]
0062BF 99000138       21488         ADD.W   R0,#0138H
0062C3 8C0F0E         21489         MOV.W   [R7+14],R0
0062C3 8C0F0E         21489         MOV.W   [R7+14],R0
0062C6                21490 _1495:
                      21491 ; rs232cmd.c 5852       
                      21492 ; rs232cmd.c 5853                               if ( T == 0)
0062C6 B930           21494         MOV.W   R3,#00H
0062C8 B920           21495         MOV.W   R2,#00H
0062CA 8C1724         21496         MOV.W   R1,[R7+36]
0062CD 8C0722         21497         MOV.W   R0,[R7+34]
0062D0 C4rrrrrr       21498         FCALL   __CMP_SPF
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 352

ADDR   CODE            LINE SOURCELINE
0062D4 910400         21499         CMP.B   R0L,#00H
0062D7 F20B           21500         BNE     _1498
                      21501 ; rs232cmd.c 5854                                       samples++;
0062D9 8C1716         21503         MOV.W   R1,[R7+22]
0062DC 8C0714         21504         MOV.W   R0,[R7+20]
0062DF 99000001       21505         ADD.W   R0,#01H
0062E3 99110000       21506         ADDC.W  R1,#00H
0062E7 8C1F16         21507         MOV.W   [R7+22],R1
0062EA 8C0F14         21508         MOV.W   [R7+20],R0
                      21509 ; rs232cmd.c 5855                       }
0062EE                21511 _1498:
                      21512 ; rs232cmd.c 5856       
                      21513 ; rs232cmd.c 5857                       samples += F*138240000L + L*442368L;
0062EE 8C0710         21515         MOV.W   R0,[R7+16]
0062F1 9819           21516         SEXT.W  R1
0062F3 8931           21517         MOV.W   R3,R1
0062F5 8920           21518         MOV.W   R2,R0
0062F7 DD25           21519         ASL.D   R2,#05H
0062F9 0920           21520         ADD.W   R2,R0
0062FB 1931           21521         ADDC.W  R3,R1
0062FD DD25           21522         ASL.D   R2,#05H
0062FF 2920           21523         SUB.W   R2,R0
006301 3931           21524         SUBB.W  R3,R1
006303 DD22           21525         ASL.D   R2,#02H
006305 2920           21526         SUB.W   R2,R0
006307 3931           21527         SUBB.W  R3,R1
006309 DD22           21528         ASL.D   R2,#02H
00630B 2920           21529         SUB.W   R2,R0
00630D 3931           21530         SUBB.W  R3,R1
00630F DD2D           21531         ASL.D   R2,#0DH
006311 8C070E         21532         MOV.W   R0,[R7+14]
006314 8940           21533         MOV.W   R4,R0
006316 9859           21534         SEXT.W  R5
006318 8915           21535         MOV.W   R1,R5
00631A 8904           21536         MOV.W   R0,R4
00631C DD03           21537         ASL.D   R0,#03H
00631E 2904           21538         SUB.W   R0,R4
006320 3915           21539         SUBB.W  R1,R5
006322 DD02           21540         ASL.D   R0,#02H
006324 2904           21541         SUB.W   R0,R4
006326 3915           21542         SUBB.W  R1,R5
006328 DD0E           21543         ASL.D   R0,#0EH
00632A 0920           21544         ADD.W   R2,R0
00632C 1931           21545         ADDC.W  R3,R1
00632E 8C1716         21546         MOV.W   R1,[R7+22]
006331 8C0714         21547         MOV.W   R0,[R7+20]
006334 0902           21548         ADD.W   R0,R2
006336 1913           21549         ADDC.W  R1,R3
                      21550 ; rs232cmd.c 5858               }
                      21552         BR      _1520
006338 D500E4         +21552         JMP.L   _1520
006338 D500E400       +21552         JMP.L   _1520
00633C                21553 _1499:
                      21555 ; rs232cmd.c 5859               else                                                             
                                                                                            // ..else system is NTSC
                      21556 ; rs232cmd.c 5860               {
                      21557 ; rs232cmd.c 5861       
                      21558 ; rs232cmd.c 5862                       if ( labs( samples) > 439295L)          // Test for illeg
                            al time var
00633C 8C1716         21560         MOV.W   R1,[R7+22]
00633F 8C0714         21561         MOV.W   R0,[R7+20]
                      21562         CALL    _labs
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 353

ADDR   CODE            LINE SOURCELINE
006342 C4rrrrrr       +21562 ;       FCALL   _labs
006346 99140006       21563         CMP.W   R1,#06H
00634A FB0A           21564         BLT     _1500
00634C FC03           21565         BGT     _1546
00634E 9904B3FF       21566         CMP.W   R0,#0B3FFH
006352 F906           21567         BL      _1500
006352 F906           21567         BL      _1500
006354                21568 _1546:
                      21569 ; rs232cmd.c 5863                               return( -1);
006354 9918FFFF       21571         MOV.W   R1,#0FFFFH
006358 9908FFFF       21572         MOV.W   R0,#0FFFFH
                      21573         BR      _1534
00635C D500D2         +21573         JMP.L   _1534
00635C D500D200       +21573         JMP.L   _1534
006360                21574 _1500:
                      21577 ; rs232cmd.c 5864       
                      21578 ; rs232cmd.c 5865                       switch ( F)                                              
                                                                            // Test for illegal field & line
006360 9C74100000     21580         CMP.W   [R7+16],#00H
006365 F30C           21581         BEQ     _1501
006367 9C7410FFFF     21582         CMP.W   [R7+16],#0FFFFH
00636C F31A           21583         BEQ     _1504
00636E 9C74100001     21584         CMP.W   [R7+16],#01H
006373 F323           21585         BEQ     _1505
006375 9C74100002     21586         CMP.W   [R7+16],#02H
00637A F32B           21587         BEQ     _1506
00637C FE44           21588         BR      _1508
                      21589 ; rs232cmd.c 5866                       {
                      21590 ; rs232cmd.c 5867                               case 0:
00637E                21592 _1501:
                      21593 ; rs232cmd.c 5868                                       if (( minus && ( L < -261)) || ( !minus &
                            & ( L > 262)))
00637E 84070C         21595         MOV.B   R0L,[R7+12]
006381 F304           21596         BEQ     _1502
006383 9C740EFEFB     21597         CMP.W   [R7+14],#0FEFBH
006388 FB06           21598         BLT     _1503
006388 FB06           21598         BLT     _1503
00638A                21599 _1502:
00638A 84070C         21600         MOV.B   R0L,[R7+12]
00638D F241           21601         BNE     _1513
00638F 9C740E0106     21602         CMP.W   [R7+14],#0106H
006394 FD3D           21603         BLE     _1513
006394 FD3D           21603         BLE     _1513
006396                21604 _1503:
                      21605 ; rs232cmd.c 5869                                               return( -1);
006396 9918FFFF       21607         MOV.W   R1,#0FFFFH
00639A 9908FFFF       21608         MOV.W   R0,#0FFFFH
                      21609         BR      _1534
00639E D500B1         +21609         JMP.L   _1534
                      21610 ; rs232cmd.c 5870                                       break;
                      21611 ; rs232cmd.c 5871       
                      21612 ; rs232cmd.c 5872                               case -1:
0063A2                21614 _1504:
                      21617 ; rs232cmd.c 5873                                       if ( abs( L) > 262)
0063A2 8C070E         21619         MOV.W   R0,[R7+14]
                      21620         CALL    _abs
0063A5 C4rrrrrr       +21620 ;       FCALL   _abs
0063A9 99040106       21621         CMP.W   R0,#0106H
0063AD FD31           21622         BLE     _1513
                      21623 ; rs232cmd.c 5874                                               return( -1);
0063AF 9918FFFF       21625         MOV.W   R1,#0FFFFH
0063B3 9908FFFF       21626         MOV.W   R0,#0FFFFH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 354

ADDR   CODE            LINE SOURCELINE
                      21627         BR      _1534
0063B7 D500A4         +21627         JMP.L   _1534
                      21628 ; rs232cmd.c 5875                                       break;
                      21629 ; rs232cmd.c 5876       
                      21630 ; rs232cmd.c 5877                               case 1:
0063BA                21632 _1505:
                      21635 ; rs232cmd.c 5878                                       if ( abs( L) > 261)
0063BA 8C070E         21637         MOV.W   R0,[R7+14]
                      21638         CALL    _abs
0063BD C4rrrrrr       +21638 ;       FCALL   _abs
0063C1 99040105       21639         CMP.W   R0,#0105H
0063C5 FD25           21640         BLE     _1513
                      21641 ; rs232cmd.c 5879                                               return( -1);
0063C7 9918FFFF       21643         MOV.W   R1,#0FFFFH
0063CB 9908FFFF       21644         MOV.W   R0,#0FFFFH
                      21645         BR      _1534
0063CF D50098         +21645         JMP.L   _1534
                      21646 ; rs232cmd.c 5880                                       break;
                      21647 ; rs232cmd.c 5881       
                      21648 ; rs232cmd.c 5882                               case 2:
0063D2                21650 _1506:
                      21653 ; rs232cmd.c 5883                                       if (( L > 0) || ( T > 0.0))
0063D2 9C740E0000     21655         CMP.W   [R7+14],#00H
0063D7 FC12           21656         BGT     _1507
0063D9 8C1724         21657         MOV.W   R1,[R7+36]
0063DC 8C0722         21658         MOV.W   R0,[R7+34]
0063DF C4rrrrrr       21659         FCALL   __SPF2DPF
0063E3 BC700A         21660         MOV.W   [R7+10],#00H
0063E6 BC7008         21661         MOV.W   [R7+8],#00H
0063E9 BC7006         21662         MOV.W   [R7+6],#00H
0063EC BC7004         21663         MOV.W   [R7+4],#00H
0063EF 406704         21664         LEA     R6,R7+4
0063F2 C4rrrrrr       21665         FCALL   __CMP_DPF
0063F6 910401         21666         CMP.B   R0L,#01H
0063F9 F20B           21667         BNE     _1513
0063F9 F20B00         21667         BNE     _1513
0063FC                21668 _1507:
                      21669 ; rs232cmd.c 5884                                               return( -1);
0063FC 9918FFFF       21671         MOV.W   R1,#0FFFFH
006400 9908FFFF       21672         MOV.W   R0,#0FFFFH
006404 FE7E           21673         BR      _1534
                      21674 ; rs232cmd.c 5885                                       break;
                      21675 ; rs232cmd.c 5886       
                      21676 ; rs232cmd.c 5887                               default:
006406                21678 _1508:
                      21679 ; rs232cmd.c 5888                                       return( -1);
006406 9918FFFF       21681         MOV.W   R1,#0FFFFH
00640A 9908FFFF       21682         MOV.W   R0,#0FFFFH
00640E FE79           21683         BR      _1534
                      21684 ; rs232cmd.c 5889                       }
006410                21686 _1513:
                      21689 ; rs232cmd.c 5890       
                      21690 ; rs232cmd.c 5891                       if ( !minus)                                             
                                                            // if posistive delay..
006410 84070C         21692         MOV.B   R0L,[R7+12]
006413 F212           21695         BNE     _1514
                      21696 ; rs232cmd.c 5892                       {                                               
                      21697 ; rs232cmd.c 5893       
                      21698 ; rs232cmd.c 5894                               if ( F % 2)
006415 8C0710         21700         MOV.W   R0,[R7+16]
006418 8910           21701         MOV.W   R1,R0
00641A 9819           21702         SEXT.W  R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 355

ADDR   CODE            LINE SOURCELINE
00641C E9090002       21703         DIV.D   R0,#02H
006420 6911           21704         OR.W    R1,R1
006422 F341           21705         BEQ     _1519
                      21706 ; rs232cmd.c 5895                               {
                      21707 ; rs232cmd.c 5896                                       L += 263;
006424 8C070E         21709         MOV.W   R0,[R7+14]
006427 99000107       21710         ADD.W   R0,#0107H
00642B 8C0F0E         21712         MOV.W   [R7+14],R0
                      21713 ; rs232cmd.c 5897                                       F--;
00642E 8C0710         21715         MOV.W   R0,[R7+16]
006431 A90F           21716         ADDS.W  R0,#0FH
006433 8C0F10         21717         MOV.W   [R7+16],R0
                      21718 ; rs232cmd.c 5898                               }
                      21719 ; rs232cmd.c 5899                       }
006436 FE37           21721         BR      _1519
006436 FE37           21721         BR      _1519
006438                21722 _1514:
                      21723 ; rs232cmd.c 5900                       else                                                     
                                                                                            // ..else delay is negative
                      21724 ; rs232cmd.c 5901                       {                                                        
                                                                                                            
                      21725 ; rs232cmd.c 5902                               F += 3;
006438 8C0710         21727         MOV.W   R0,[R7+16]
00643B A903           21728         ADDS.W  R0,#03H
                      21729 ; rs232cmd.c 5903       
                      21730 ; rs232cmd.c 5904                               samples += 439295;
00643D 8C3716         21732         MOV.W   R3,[R7+22]
006440 8C2714         21733         MOV.W   R2,[R7+20]
006443 9920B3FF       21734         ADD.W   R2,#0B3FFH
006447 99310006       21735         ADDC.W  R3,#06H
00644B 8C3F16         21736         MOV.W   [R7+22],R3
00644E 8C2F14         21737         MOV.W   [R7+20],R2
                      21738 ; rs232cmd.c 5905       
                      21739 ; rs232cmd.c 5906                               if ( F % 2)
006451 8C0F10         21741         MOV.W   [R7+16],R0
006454 8910           21742         MOV.W   R1,R0
006456 9819           21743         SEXT.W  R1
006458 E9090002       21744         DIV.D   R0,#02H
00645C 6911           21745         OR.W    R1,R1
00645E F30A           21746         BEQ     _1515
                      21747 ; rs232cmd.c 5907                               {
                      21748 ; rs232cmd.c 5908                                       L += 524;
006460 8C070E         21750         MOV.W   R0,[R7+14]
006463 9900020C       21751         ADD.W   R0,#020CH
006467 8C0F0E         21752         MOV.W   [R7+14],R0
                      21753 ; rs232cmd.c 5909                                       F--;
00646A 8C0710         21755         MOV.W   R0,[R7+16]
00646D A90F           21756         ADDS.W  R0,#0FH
00646F 8C0F10         21757         MOV.W   [R7+16],R0
                      21758 ; rs232cmd.c 5910                               }
006472 FE05           21760         BR      _1516
006472 FE05           21760         BR      _1516
006474                21761 _1515:
                      21762 ; rs232cmd.c 5911                               else
                      21763 ; rs232cmd.c 5912                                       L += 262;
006474 8C070E         21765         MOV.W   R0,[R7+14]
006477 99000106       21766         ADD.W   R0,#0106H
00647B 8C0F0E         21767         MOV.W   [R7+14],R0
00647B 8C0F0E         21767         MOV.W   [R7+14],R0
00647E                21768 _1516:
                      21769 ; rs232cmd.c 5913       
                      21770 ; rs232cmd.c 5914                               if ( T == 0)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 356

ADDR   CODE            LINE SOURCELINE
00647E B930           21772         MOV.W   R3,#00H
006480 B920           21773         MOV.W   R2,#00H
006482 8C1724         21774         MOV.W   R1,[R7+36]
006485 8C0722         21775         MOV.W   R0,[R7+34]
006488 C4rrrrrr       21776         FCALL   __CMP_SPF
00648C 910400         21777         CMP.B   R0L,#00H
00648F F20B           21778         BNE     _1519
                      21779 ; rs232cmd.c 5915                                       samples++;
006491 8C1716         21781         MOV.W   R1,[R7+22]
006494 8C0714         21782         MOV.W   R0,[R7+20]
006497 99000001       21783         ADD.W   R0,#01H
00649B 99110000       21784         ADDC.W  R1,#00H
00649F 8C1F16         21785         MOV.W   [R7+22],R1
0064A2 8C0F14         21786         MOV.W   [R7+20],R0
                      21787 ; rs232cmd.c 5916                       }
0064A6                21789 _1519:
                      21790 ; rs232cmd.c 5917       
                      21791 ; rs232cmd.c 5918                       samples += F*115315200L + L*439296L;
0064A6 8C0710         21793         MOV.W   R0,[R7+16]
0064A9 9819           21794         SEXT.W  R1
0064AB 8931           21795         MOV.W   R3,R1
0064AD 8920           21796         MOV.W   R2,R0
0064AF DD23           21797         ASL.D   R2,#03H
0064B1 2920           21798         SUB.W   R2,R0
0064B3 3931           21799         SUBB.W  R3,R1
0064B5 DD23           21800         ASL.D   R2,#03H
0064B7 2920           21801         SUB.W   R2,R0
0064B9 3931           21802         SUBB.W  R3,R1
0064BB DD26           21803         ASL.D   R2,#06H
0064BD 2920           21804         SUB.W   R2,R0
0064BF 3931           21805         SUBB.W  R3,R1
0064C1 DD23           21806         ASL.D   R2,#03H
0064C3 0920           21807         ADD.W   R2,R0
0064C5 1931           21808         ADDC.W  R3,R1
0064C7 DD23           21809         ASL.D   R2,#03H
0064C9 0920           21810         ADD.W   R2,R0
0064CB 1931           21811         ADDC.W  R3,R1
0064CD DD29           21812         ASL.D   R2,#09H
0064CF 8C070E         21813         MOV.W   R0,[R7+14]
0064D2 8940           21814         MOV.W   R4,R0
0064D4 9859           21815         SEXT.W  R5
0064D6 8915           21816         MOV.W   R1,R5
0064D8 8904           21817         MOV.W   R0,R4
0064DA DD03           21818         ASL.D   R0,#03H
0064DC 2904           21819         SUB.W   R0,R4
0064DE 3915           21820         SUBB.W  R1,R5
0064E0 DD02           21821         ASL.D   R0,#02H
0064E2 2904           21822         SUB.W   R0,R4
0064E4 3915           21823         SUBB.W  R1,R5
0064E6 DD02           21824         ASL.D   R0,#02H
0064E8 2904           21825         SUB.W   R0,R4
0064EA 3915           21826         SUBB.W  R1,R5
0064EC DD02           21827         ASL.D   R0,#02H
0064EE 0904           21828         ADD.W   R0,R4
0064F0 1915           21829         ADDC.W  R1,R5
0064F2 DD0A           21830         ASL.D   R0,#0AH
0064F4 0920           21831         ADD.W   R2,R0
0064F6 1931           21832         ADDC.W  R3,R1
0064F8 8C1716         21833         MOV.W   R1,[R7+22]
0064FB 8C0714         21834         MOV.W   R0,[R7+20]
0064FE 0902           21835         ADD.W   R0,R2
006500 1913           21836         ADDC.W  R1,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 357

ADDR   CODE            LINE SOURCELINE
                      21837 ; rs232cmd.c 5919               }
006502                21839 _1520:
                      21840 ; rs232cmd.c 5920       
                      21841 ; rs232cmd.c 5921               return( samples);
                      21842 ; rs232cmd.c 5922       }
006502                21844 _1534:
006502 99700018       21845         ADD.W   R7,#018H
006506 2F70           21847         POP.W   R4, R5, R6
006508 D680           21849         RET
                      21851 ; rs232cmd.c 5923       
                      21852 ; rs232cmd.c 5924       /************************************************************************
                            **/
                      21853 ; rs232cmd.c 5925       /* PrintSamplesToFLT                                                     
                                                                                                                             
                                     RS232CMD.C */
                      21854 ; rs232cmd.c 5926       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21855 ; rs232cmd.c 5927       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                    */
                      21856 ; rs232cmd.c 5928       /* Revised:             000530                                           
                                                                                                                             
                                                                                    */
                      21857 ; rs232cmd.c 5929       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21858 ; rs232cmd.c 5930       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      21859 ; rs232cmd.c 5931       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                    */
                      21860 ; rs232cmd.c 5932       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      21861 ; rs232cmd.c 5933       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      21862 ; rs232cmd.c 5934       /************************************************************************
                            **/
                      21863 ; rs232cmd.c 5935       void PrintSamplesToFLT( UC system, long samples) {
                      21864         ALIGN   1
                      21866         PUBLIC  _PrintSamplesToFLT
00650A                21867 _PrintSamplesToFLT:
00650A 0F70           21871         PUSH.W  R4, R5, R6
00650C A97A           21873         ADDS.W  R7,#0AH
                      21886 ; rs232cmd.c 5936       
                      21887 ; rs232cmd.c 5937               char sign;
                      21888 ; rs232cmd.c 5938               int frame, field, line;
                      21889 ; rs232cmd.c 5939       
                      21890 ; rs232cmd.c 5940               sign = '+';
00650E 9478022B       21892         MOV.B   [R7+2],#02BH
                      21894 ; rs232cmd.c 5941       
                      21895 ; rs232cmd.c 5942               if ( system < NTSC_US)                                           
                                    // If system selected is PAL..
006512 910402         21897         CMP.B   R0L,#02H
                      21898         BCC     _1557
006515 F102           +21898 ;       BCS     _LG_1560
006517 D50087         +21898 ;       JMP.L   _1557
00651A D50087         +21898 ;       JMP.L   _1557
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 358

ADDR   CODE            LINE SOURCELINE
00651A                +21898 _LG_1560:
                      21899 ; rs232cmd.c 5943               {
                      21900 ; rs232cmd.c 5944                       // 552960000 = 2*625*1728*256
                      21901 ; rs232cmd.c 5945                       // 276480000 = 625*1728*256
                      21902 ; rs232cmd.c 5946                       // 442368    = 1728*256
                      21903 ; rs232cmd.c 5947       
                      21904 ; rs232cmd.c 5948                       if ( samples >= 552960000L)
00651A 8953           21906         MOV.W   R5,R3
00651C 8942           21907         MOV.W   R4,R2
00651E 993420F5       21908         CMP.W   R3,#020F5H
006522 FB50           21909         BLT     _1556
006524 FC03           21910         BGT     _1569
006526 99248000       21911         CMP.W   R2,#08000H
00652A F14C           21912         BCS     _1556
00652A F14C           21912         BCS     _1556
00652C                21913 _1569:
                      21914 ; rs232cmd.c 5949                       {
                      21915 ; rs232cmd.c 5950                               samples--;
00652C 99420001       21917         SUB.W   R4,#01H
006530 99530000       21918         SUBB.W  R5,#00H
006534 8915           21919         MOV.W   R1,R5
006536 8904           21920         MOV.W   R0,R4
                      21923 ; rs232cmd.c 5951       
                      21924 ; rs232cmd.c 5952                               frame = samples / 276480000L;
006538 9938107A       21926         MOV.W   R3,#0107AH
00653C 9928C000       21927         MOV.W   R2,#0C000H
006540 8951           21928         MOV.W   R5,R1
006542 8940           21929         MOV.W   R4,R0
006544 C4rrrrrr       21930         FCALL   __SDIVL
006548 8A0F           21933         MOV.W   [R7],R0
                      21935 ; rs232cmd.c 5953                               line = ( samples % 276480000L) /  442368L;
00654A 9938107A       21937         MOV.W   R3,#0107AH
00654E 9928C000       21938         MOV.W   R2,#0C000H
006552 8915           21939         MOV.W   R1,R5
006554 8904           21940         MOV.W   R0,R4
006556 C4rrrrrr       21941         FCALL   __SMODL
00655A B936           21945         MOV.W   R3,#06H
00655C 9928C000       21946         MOV.W   R2,#0C000H
006560 8951           21947         MOV.W   R5,R1
006562 8940           21948         MOV.W   R4,R0
006564 C4rrrrrr       21949         FCALL   __SDIVL
006568 8960           21950         MOV.W   R6,R0
00656A 8C6F04         21951         MOV.W   [R7+4],R6
                      21952 ; rs232cmd.c 5954                               samples = ( samples % 276480000L) %  442368L;
00656D 8915           21954         MOV.W   R1,R5
00656F 8904           21955         MOV.W   R0,R4
006571 B936           21956         MOV.W   R3,#06H
006573 9928C000       21957         MOV.W   R2,#0C000H
006577 C4rrrrrr       21958         FCALL   __SMODL
                      21960 ; rs232cmd.c 5955                               field = 2*frame;
00657B 8A27           21962         MOV.W   R2,[R7]
00657D D921           21963         ASL.W   R2,#01H
00657F 8932           21967         MOV.W   R3,R2
                      21969 ; rs232cmd.c 5956       
                      21970 ; rs232cmd.c 5957                               if ( line > 312)
006581 99480138       21972         MOV.W   R4,#0138H
006585 99640138       21973         CMP.W   R6,#0138H
006589 FD08           21974         BLE     _1554
                      21975 ; rs232cmd.c 5958                               {
                      21976 ; rs232cmd.c 5959                                       field++;
00658B A921           21978         ADDS.W  R2,#01H
00658D 8932           21979         MOV.W   R3,R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 359

ADDR   CODE            LINE SOURCELINE
                      21982 ; rs232cmd.c 5960                                       line = 624-line;
00658F 99280270       21984         MOV.W   R2,#0270H
006593 2926           21985         SUB.W   R2,R6
006595 8C2F04         21986         MOV.W   [R7+4],R2
                      21987 ; rs232cmd.c 5961                               }
006598 FE04           21989         BR      _1555
006598 FE04           21989         BR      _1555
00659A                21990 _1554:
                      21991 ; rs232cmd.c 5962                               else
                      21992 ; rs232cmd.c 5963                                       line = 312-line;
00659A 8C2704         21994         MOV.W   R2,[R7+4]
00659D 2942           21995         SUB.W   R4,R2
00659F 8C4F04         21996         MOV.W   [R7+4],R4
00659F 8C4F04         21996         MOV.W   [R7+4],R4
0065A2                21997 _1555:
                      21998 ; rs232cmd.c 5964       
                      21999 ; rs232cmd.c 5965                               samples = 442368L - 1 - samples;
0065A2 B956           22001         MOV.W   R5,#06H
0065A4 9948BFFF       22002         MOV.W   R4,#0BFFFH
0065A8 2940           22003         SUB.W   R4,R0
0065AA 3951           22004         SUBB.W  R5,R1
                      22007 ; rs232cmd.c 5966                               field = 7-field;
0065AC B917           22009         MOV.W   R1,#07H
0065AE 2913           22010         SUB.W   R1,R3
0065B0 8901           22011         MOV.W   R0,R1
                      22014 ; rs232cmd.c 5967       
                      22015 ; rs232cmd.c 5968                               if ( field != 4)
0065B2 99140004       22017         CMP.W   R1,#04H
                      22018         BEQ     _1567
0065B6 F202           +22018 ;       BNE     _LG_1570
0065B8 D500B8         +22018 ;       JMP.L   _1567
0065BC D500B800       +22018 ;       JMP.L   _1567
0065BC                +22018 _LG_1570:
                      22019 ; rs232cmd.c 5969                                       sign = '-';
0065BC 9478022D       22021         MOV.B   [R7+2],#02DH
                      22024 ; rs232cmd.c 5970                       }
                      22026         BR      _1567
0065C0 D500B4         +22026         JMP.L   _1567
0065C0 D500B400       +22026         JMP.L   _1567
0065C4                22027 _1556:
                      22028 ; rs232cmd.c 5971                       else
                      22029 ; rs232cmd.c 5972                       {
                      22030 ; rs232cmd.c 5973                               frame = samples / 276480000L;
0065C4 9938107A       22032         MOV.W   R3,#0107AH
0065C8 9928C000       22033         MOV.W   R2,#0C000H
0065CC 8915           22034         MOV.W   R1,R5
0065CE 8904           22035         MOV.W   R0,R4
0065D0 C4rrrrrr       22036         FCALL   __SDIVL
0065D4 8A0F           22038         MOV.W   [R7],R0
                      22040 ; rs232cmd.c 5974                               line = ( samples % 276480000L) / 442368L;
0065D6 9938107A       22042         MOV.W   R3,#0107AH
0065DA 9928C000       22043         MOV.W   R2,#0C000H
0065DE 8915           22044         MOV.W   R1,R5
0065E0 8904           22045         MOV.W   R0,R4
0065E2 C4rrrrrr       22046         FCALL   __SMODL
0065E6 B936           22050         MOV.W   R3,#06H
0065E8 9928C000       22051         MOV.W   R2,#0C000H
0065EC 8951           22052         MOV.W   R5,R1
0065EE 8940           22053         MOV.W   R4,R0
0065F0 C4rrrrrr       22054         FCALL   __SDIVL
0065F4 8960           22055         MOV.W   R6,R0
0065F6 8C6F04         22056         MOV.W   [R7+4],R6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 360

ADDR   CODE            LINE SOURCELINE
                      22057 ; rs232cmd.c 5975                               samples = ( samples % 276480000L) % 442368L;
0065F9 8915           22059         MOV.W   R1,R5
0065FB 8904           22060         MOV.W   R0,R4
0065FD B936           22061         MOV.W   R3,#06H
0065FF 9928C000       22062         MOV.W   R2,#0C000H
006603 C4rrrrrr       22063         FCALL   __SMODL
006607 8951           22064         MOV.W   R5,R1
006609 8940           22065         MOV.W   R4,R0
                      22067 ; rs232cmd.c 5976                               field = 2*frame;
00660B 8A17           22069         MOV.W   R1,[R7]
00660D D911           22070         ASL.W   R1,#01H
00660F 8901           22074         MOV.W   R0,R1
                      22076 ; rs232cmd.c 5977       
                      22077 ; rs232cmd.c 5978                               if ( line > 312)
006611 99640138       22079         CMP.W   R6,#0138H
                      22080         BLE     _1567
006615 FC02           +22080 ;       BGT     _LG_1572
006617 D50088         +22080 ;       JMP.L   _1567
00661A D50088         +22080 ;       JMP.L   _1567
00661A                +22080 _LG_1572:
                      22081 ; rs232cmd.c 5979                               {
                      22082 ; rs232cmd.c 5980                                       field++;
00661A A911           22084         ADDS.W  R1,#01H
00661C 8901           22085         MOV.W   R0,R1
                      22088 ; rs232cmd.c 5981                                       line -= 313;
00661E 99620139       22090         SUB.W   R6,#0139H
006622 8C6F04         22091         MOV.W   [R7+4],R6
                      22092 ; rs232cmd.c 5982                               }
                      22093 ; rs232cmd.c 5983                       }
                      22094 ; rs232cmd.c 5984               }
                      22096         BR      _1567
006625 D50081         +22096         JMP.L   _1567
006625 D50081         +22096         JMP.L   _1567
006628                22097 _1557:
                      22100 ; rs232cmd.c 5985               else {                                                           
                                                            // ..system selected is NTSC
                      22101 ; rs232cmd.c 5986                       if ( samples >= 230630400L)
006628 8953           22103         MOV.W   R5,R3
00662A 8942           22104         MOV.W   R4,R2
00662C 99340DBF       22105         CMP.W   R3,#0DBFH
006630 FB4D           22106         BLT     _1560
006632 FC03           22107         BGT     _1573
006634 99242400       22108         CMP.W   R2,#02400H
006638 F149           22109         BCS     _1560
006638 F149           22109         BCS     _1560
00663A                22110 _1573:
                      22113 ; rs232cmd.c 5987                       {
                      22114 ; rs232cmd.c 5988                               // 230630400 = 525*1716*256
                      22115 ; rs232cmd.c 5989                               // 439296    = 1716*256
                      22116 ; rs232cmd.c 5990       
                      22117 ; rs232cmd.c 5991                               samples--;
00663A 99420001       22119         SUB.W   R4,#01H
00663E 99530000       22120         SUBB.W  R5,#00H
006642 8915           22122         MOV.W   R1,R5
006644 8904           22123         MOV.W   R0,R4
                      22126 ; rs232cmd.c 5992       
                      22127 ; rs232cmd.c 5993                               frame = samples / 230630400L;
006646 99380DBF       22129         MOV.W   R3,#0DBFH
00664A 99282400       22130         MOV.W   R2,#02400H
00664E 8951           22131         MOV.W   R5,R1
006650 8940           22132         MOV.W   R4,R0
006652 C4rrrrrr       22133         FCALL   __SDIVL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 361

ADDR   CODE            LINE SOURCELINE
006656 8A0F           22136         MOV.W   [R7],R0
                      22138 ; rs232cmd.c 5994                               line = ( samples % 230630400L) / 439296L;
006658 99380DBF       22140         MOV.W   R3,#0DBFH
00665C 99282400       22141         MOV.W   R2,#02400H
006660 8915           22142         MOV.W   R1,R5
006662 8904           22143         MOV.W   R0,R4
006664 C4rrrrrr       22144         FCALL   __SMODL
006668 B936           22148         MOV.W   R3,#06H
00666A 9928B400       22149         MOV.W   R2,#0B400H
00666E 8951           22150         MOV.W   R5,R1
006670 8940           22151         MOV.W   R4,R0
006672 C4rrrrrr       22152         FCALL   __SDIVL
006676 8960           22153         MOV.W   R6,R0
006678 8C6F04         22154         MOV.W   [R7+4],R6
                      22155 ; rs232cmd.c 5995                               samples = ( samples % 230630400L) % 439296L;
00667B 8915           22157         MOV.W   R1,R5
00667D 8904           22158         MOV.W   R0,R4
00667F B936           22159         MOV.W   R3,#06H
006681 9928B400       22160         MOV.W   R2,#0B400H
006685 C4rrrrrr       22161         FCALL   __SMODL
                      22163 ; rs232cmd.c 5996       
                      22164 ; rs232cmd.c 5997                               field = 2*frame;
006689 8A27           22166         MOV.W   R2,[R7]
00668B D921           22167         ASL.W   R2,#01H
00668D 8932           22171         MOV.W   R3,R2
                      22173 ; rs232cmd.c 5998       
                      22174 ; rs232cmd.c 5999                               if ( line > 262)
00668F 99480106       22176         MOV.W   R4,#0106H
006693 99640106       22177         CMP.W   R6,#0106H
006697 FD08           22178         BLE     _1558
                      22179 ; rs232cmd.c 6000                               {
                      22180 ; rs232cmd.c 6001                                       field++;
006699 A921           22182         ADDS.W  R2,#01H
00669B 8932           22183         MOV.W   R3,R2
                      22186 ; rs232cmd.c 6002                                       line = 524-line;
00669D 9928020C       22188         MOV.W   R2,#020CH
0066A1 2926           22189         SUB.W   R2,R6
0066A3 8C2F04         22190         MOV.W   [R7+4],R2
                      22191 ; rs232cmd.c 6003                               }
0066A6 FE04           22193         BR      _1559
0066A6 FE04           22193         BR      _1559
0066A8                22194 _1558:
                      22195 ; rs232cmd.c 6004                               else
                      22196 ; rs232cmd.c 6005                                       line = 262-line;
0066A8 8C2704         22198         MOV.W   R2,[R7+4]
0066AB 2942           22199         SUB.W   R4,R2
0066AD 8C4F04         22200         MOV.W   [R7+4],R4
0066AD 8C4F04         22200         MOV.W   [R7+4],R4
0066B0                22201 _1559:
                      22202 ; rs232cmd.c 6006       
                      22203 ; rs232cmd.c 6007                               samples = 439296L - 1 - samples;
0066B0 B956           22205         MOV.W   R5,#06H
0066B2 9948B3FF       22206         MOV.W   R4,#0B3FFH
0066B6 2940           22207         SUB.W   R4,R0
0066B8 3951           22208         SUBB.W  R5,R1
                      22211 ; rs232cmd.c 6008                               field = 3 - field;
0066BA B913           22213         MOV.W   R1,#03H
0066BC 2913           22214         SUB.W   R1,R3
0066BE 8901           22215         MOV.W   R0,R1
                      22218 ; rs232cmd.c 6009       
                      22219 ; rs232cmd.c 6010                               if ( field != 2)
0066C0 99140002       22221         CMP.W   R1,#02H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 362

ADDR   CODE            LINE SOURCELINE
0066C4 F332           22222         BEQ     _1567
                      22223 ; rs232cmd.c 6011                                       sign = '-';
0066C6 9478022D       22225         MOV.B   [R7+2],#02DH
                      22228 ; rs232cmd.c 6012                       }
0066CA FE2F           22230         BR      _1567
0066CA FE2F           22230         BR      _1567
0066CC                22231 _1560:
                      22232 ; rs232cmd.c 6013                       else
                      22233 ; rs232cmd.c 6014                       {
                      22234 ; rs232cmd.c 6015                               frame = samples / 230630400L;
0066CC 99380DBF       22236         MOV.W   R3,#0DBFH
0066D0 99282400       22237         MOV.W   R2,#02400H
0066D4 8915           22238         MOV.W   R1,R5
0066D6 8904           22239         MOV.W   R0,R4
0066D8 C4rrrrrr       22240         FCALL   __SDIVL
0066DC 8A0F           22242         MOV.W   [R7],R0
                      22244 ; rs232cmd.c 6016                               line = ( samples % 230630400L) / 439296L;
0066DE 99380DBF       22246         MOV.W   R3,#0DBFH
0066E2 99282400       22247         MOV.W   R2,#02400H
0066E6 8915           22248         MOV.W   R1,R5
0066E8 8904           22249         MOV.W   R0,R4
0066EA C4rrrrrr       22250         FCALL   __SMODL
0066EE B936           22254         MOV.W   R3,#06H
0066F0 9928B400       22255         MOV.W   R2,#0B400H
0066F4 8951           22256         MOV.W   R5,R1
0066F6 8940           22257         MOV.W   R4,R0
0066F8 C4rrrrrr       22258         FCALL   __SDIVL
0066FC 8960           22259         MOV.W   R6,R0
0066FE 8C6F04         22260         MOV.W   [R7+4],R6
                      22261 ; rs232cmd.c 6017                               samples = ( samples % 230630400L) % 439296L;
006701 B936           22263         MOV.W   R3,#06H
006703 9928B400       22264         MOV.W   R2,#0B400H
006707 8915           22265         MOV.W   R1,R5
006709 8904           22266         MOV.W   R0,R4
00670B C4rrrrrr       22267         FCALL   __SMODL
00670F 8951           22268         MOV.W   R5,R1
006711 8940           22269         MOV.W   R4,R0
                      22271 ; rs232cmd.c 6018                               field = 2*frame;
006713 8A17           22273         MOV.W   R1,[R7]
006715 D911           22274         ASL.W   R1,#01H
006717 8901           22278         MOV.W   R0,R1
                      22280 ; rs232cmd.c 6019       
                      22281 ; rs232cmd.c 6020                               if ( line > 262)
006719 99640106       22283         CMP.W   R6,#0106H
00671D FD06           22284         BLE     _1567
                      22285 ; rs232cmd.c 6021                               {
                      22286 ; rs232cmd.c 6022                                       field++;
00671F A911           22288         ADDS.W  R1,#01H
006721 8901           22289         MOV.W   R0,R1
                      22292 ; rs232cmd.c 6023                                       line -= 263;
006723 99620107       22294         SUB.W   R6,#0107H
006727 8C6F04         22295         MOV.W   [R7+4],R6
                      22296 ; rs232cmd.c 6024                               }
                      22297 ; rs232cmd.c 6025                       }
                      22298 ; rs232cmd.c 6026               }
00672A                22300 _1567:
                      22301 ; rs232cmd.c 6027       
                      22302 ; rs232cmd.c 6028               rs232printf( 12, "%c%d,", sign, abs( field));
                      22304         CALL    _abs
00672A C4rrrrrr       +22304 ;       FCALL   _abs
00672E 842702         22306         MOV.B   R1L,[R7+2]
006731 9039           22307         SEXT.B  R1H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 363

ADDR   CODE            LINE SOURCELINE
006733 0F01           22311         PUSH.W  R0
006735 8961           22313         MOV.W   R6,R1
006737 0F02           22314         PUSH.W  R1
006739 9918rrrr       22316         MOV.W   R1,#SEG( _1552 )
00673D 9908rrrr       22317         MOV.W   R0,#SOF( _1552 )
006741 0F03           22318         PUSH.W  R0, R1
006743 9908000C       22320         MOV.W   R0,#0CH
                      22321         CALL    _rs232printf
006747 C4rrrrrr       +22321 ;       FCALL   _rs232printf
00674B 99700008       22322         ADD.W   R7,#08H
                      22324 ; rs232cmd.c 6029               rs232printf( 12, "%c%d,", sign, abs( line));
00674F 8C0704         22326         MOV.W   R0,[R7+4]
                      22327         CALL    _abs
006752 C4rrrrrr       +22327 ;       FCALL   _abs
006756 0F01           22328         PUSH.W  R0
006758 8C6F02         22330         MOV.W   [R7+2],R6
00675B 0F40           22331         PUSH.W  R6
00675D 9918rrrr       22333         MOV.W   R1,#SEG( _1552 )
006761 9908rrrr       22334         MOV.W   R0,#SOF( _1552 )
006765 0F03           22335         PUSH.W  R0, R1
006767 9908000C       22337         MOV.W   R0,#0CH
                      22338         CALL    _rs232printf
00676B C4rrrrrr       +22338 ;       FCALL   _rs232printf
00676F 99700008       22339         ADD.W   R7,#08H
                      22341 ; rs232cmd.c 6030               rs232printf( 12, "%c%.1f", sign, fabs((float) ( samples*1000L)/69
                            12L));
006773 8915           22343         MOV.W   R1,R5
006775 8904           22344         MOV.W   R0,R4
006777 DD05           22345         ASL.D   R0,#05H
006779 2904           22346         SUB.W   R0,R4
00677B 3915           22347         SUBB.W  R1,R5
00677D DD02           22348         ASL.D   R0,#02H
00677F 0904           22349         ADD.W   R0,R4
006781 1915           22350         ADDC.W  R1,R5
006783 DD03           22351         ASL.D   R0,#03H
006785 C4rrrrrr       22352         FCALL   __L2SPF
006789 993845D8       22353         MOV.W   R3,#045D8H
00678D B920           22354         MOV.W   R2,#00H
00678F C4rrrrrr       22355         FCALL   __DIV_SPF
006793 C4rrrrrr       22356         FCALL   __SPF2DPF
                      22357         CALL    _fabs
006797 C4rrrrrr       +22357 ;       FCALL   _fabs
00679B 0F0F           22358         PUSH.W  R0, R1, R2, R3
00679D 8C0708         22360         MOV.W   R0,[R7+8]
0067A0 0F01           22361         PUSH.W  R0
0067A2 9918rrrr       22363         MOV.W   R1,#SEG( _1553 )
0067A6 9908rrrr       22364         MOV.W   R0,#SOF( _1553 )
0067AA 0F03           22365         PUSH.W  R0, R1
0067AC 9908000C       22367         MOV.W   R0,#0CH
                      22368         CALL    _rs232printf
0067B0 C4rrrrrr       +22368 ;       FCALL   _rs232printf
0067B4 9970000E       22369         ADD.W   R7,#0EH
                      22371 ; rs232cmd.c 6031       }
0067B8 A976           22373         ADDS.W  R7,#06H
0067BA 2F70           22375         POP.W   R4, R5, R6
0067BC D680           22377         RET
                      22380 ; rs232cmd.c 6032       
00000E                22383         RSEG    RS232CMD_INI_FA
00000E 2C25640A00     22384 _366:   DB      02CH,025H,064H,00AH,000H
                      22387         EXTRN   HDATA(_PresetPtr)
                      22389         EXTRN   HDATA(_CmdExecute)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 364

ADDR   CODE            LINE SOURCELINE
000013 256C752C256C75 22390 _1227:  DB      025H,06CH,075H,02CH,025H,06CH,075H,00AH,000H
       0A00                 
                      22393         EXTRN   HCODE(_ValidateDate)
                      22396         EXTRN   HCODE(_SetGenlockSystem)
                      22399         EXTRN   HCODE(_StorePreset)
                      22402         EXTRN   HCODE(_UpdateSTBRegister)
00001C 25733B00       22403 _987:   DB      025H,073H,03BH,000H
000020 25640A00       22404 _9:     DB      025H,064H,00AH,000H
                      22407         EXTRN   HCODE(_SetBBSystem)
000024 220A00         22408 _110:   DB      022H,00AH,000H
                      22411         EXTRN   HCODE(_SetBBDelay)
                      22414         EXTRN   HCODE(_strlen)
000027 25752C25752C25 22415 _1174:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,00AH,000H
       750A00               
                      22418         EXTRN   HCODE(_SetCBDelay)
000031 256325642C00   22419 _1552:  DB      025H,063H,025H,064H,02CH,000H
                      22422         EXTRN   HCODE(_SetBBScHPhase)
                      22425         EXTRN   HCODE(_BBUpdate)
                      22426         EXTRN   HCODE(__UMODL)
                      22429         EXTRN   HCODE(_ResetErrorEventQueue)
                      22432         EXTRN   HCODE(_GenlockVersion)
                      22435         EXTRN   HCODE(_Cstrcmp)
                      22438         EXTRN   HCODE(_SetAudioTiming)
000037 25752C25752C25 22439 _1175:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,000H
       7500                 
                      22442         EXTRN   HCODE(_strncpy)
                      22444         EXTRN   HDATA(_AudioOutput)
                      22447         EXTRN   HCODE(_SetAudioWordClock)
                      22448         EXTRN   HCODE(__DIV_DPF)
000040 252E31662C00   22449 _785:   DB      025H,02EH,031H,066H,02CH,000H
                      22452         EXTRN   HCODE(_abs)
000046 25750A00       22453 _1013:  DB      025H,075H,00AH,000H
                      22456         EXTRN   HCODE(_ReadErrorEventQueue)
                      22461         EXTRN   HCODE(_TransmitIIC)
                      22464         EXTRN   HCODE(_CBUpdate)
                      22467         EXTRN   HCODE(_SetAudioSystem)
                      22470         EXTRN   HCODE(_sio0SndCommand)
                      22473         EXTRN   HCODE(_strcmp)
                      22476         EXTRN   HCODE(_AudioStatus)
00004A 25752C25750A00 22477 _1301:  DB      025H,075H,02CH,025H,075H,00AH,000H
                      22480         EXTRN   HCODE(_sscanf)
000051 253033642C2530 22481 _1439:  DB      025H,030H,033H,064H,02CH,025H,030H,033H,064H,00AH,000H
       33640A00             
00005C 25752C257500   22482 _1302:  DB      025H,075H,02CH,025H,075H,000H
000062 256400         22483 _10:    DB      025H,064H,000H
000065 256600         22484 _902:   DB      025H,066H,000H
                      22485         EXTRN   HCODE(__MUL_SPF)
                      22488         EXTRN   HCODE(_SetCBSystem)
                      22490         EXTRN   HDATA(_CBSetup)
                      22492         EXTRN   HDATA(_BBSetup)
000068 256C00         22493 _221:   DB      025H,06CH,000H
                      22495         EXTRN   HDATA(_OperEnableReg)
00006B 475825643B00   22496 _316:   DB      047H,058H,025H,064H,03BH,000H
                      22497         EXTRN   HCODE(__SUBR_DPF)
000071 257300         22498 _986:   DB      025H,073H,000H
                      22501         EXTRN   HCODE(_GenlockInit)
                      22504         EXTRN   HDATA(_Cmd)
                      22507         EXTRN   HCODE(_GenlockUpdate)
000074 4F4E00         22508 _960:   DB      04FH,04EH,000H
000077 257500         22509 _1190:  DB      025H,075H,000H
                      22512         EXTRN   HCODE(_SetAudioSignal)
                      22513         EXTRN   HCODE(__SPF2DPF)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 365

ADDR   CODE            LINE SOURCELINE
                      22516         EXTRN   HCODE(_CBInit)
                      22519         EXTRN   HCODE(_strcpy)
00007A 252E31660A00   22520 _901:   DB      025H,02EH,031H,066H,00AH,000H
                      22523         EXTRN   HCODE(_WriteCBChromaGain)
                      22526         EXTRN   HCODE(_fabs)
                      22528         EXTRN   HDATA(_ParCnt)
                      22531         EXTRN   HCODE(_NV_Recall)
                      22534         EXTRN   HCODE(_labs)
000080 4F464600       22535 _262:   DB      04FH,046H,046H,000H
                      22537         EXTRN   HDATA(_GenlockStatus)
                      22540         EXTRN   HCODE(_ReceiveIIC)
                      22543         EXTRN   HCODE(_SetAudioOutput)
                      22545         EXTRN   HDATA(_NumSuffix)
                      22548         EXTRN   HCODE(_rs232puts)
                      22550         EXTRN   HDATA(_CalibrationPtr)
                      22552         EXTRN   HDATA(_CmdRequest)
                      22554         EXTRN   HDATA(_ESRReg)
                      22556         EXTRN   HDATA(_STBReg)
                      22558         EXTRN   HDATA(_AudioSetup)
000084 256C752C256C75 22559 _1038:  DB      025H,06CH,075H,02CH,025H,06CH,075H,000H
       00                   
                      22565         EXTRN   HCODE(_ErrorTxt_Array)
                      22568         EXTRN   HCODE(_SetGenlockDelay)
                      22571         EXTRN   HCODE(_WriteCBGain)
00008C 25642C256400   22572 _1440:  DB      025H,064H,02CH,025H,064H,000H
000092 2563252E316600 22573 _1553:  DB      025H,063H,025H,02EH,031H,066H,000H
                      22575         EXTRN   HDATA(_BBControlPort)
000099 4847256C643B00 22576 _315:   DB      048H,047H,025H,06CH,064H,03BH,000H
                      22579         EXTRN   HCODE(_BBDefaults)
                      22581         EXTRN   HDATA(_SettingsPtr)
0000A0 474D3000       22582 _314:   DB      047H,04DH,030H,000H
                      22583         EXTRN   HCODE(__L2SPF)
                      22585         EXTRN   HDATA(_ESEReg)
                      22588         EXTRN   HCODE(_BBVersion)
0000A4 4F46460A00     22589 _959:   DB      04FH,046H,046H,00AH,000H
                      22592         EXTRN   HCODE(_BBInit)
                      22595         EXTRN   HCODE(_CBDefaults)
0000A9 25642C257300   22596 _985:   DB      025H,064H,02CH,025H,073H,000H
0000AF 475825753B00   22597 _334:   DB      047H,058H,025H,075H,03BH,000H
                      22599         EXTRN   HDATA(_GenlockSetup)
                      22602         EXTRN   HCODE(_SetCBEmbAudioSignal)
                      22605         EXTRN   HCODE(_rs232printf)
                      22608         EXTRN   HCODE(_AudioUpdate)
                      22610         EXTRN   HDATA(_Settings)
                      22613         EXTRN   HCODE(_sprintf)
                      22615         EXTRN   HDATA(_OperEventReg)
                      22616         EXTRN   HCODE(__CMP_SPF)
                      22617         EXTRN   HCODE(__DIV_SPF)
                      22619         EXTRN   HDATA(_SREReg)
                      22622         EXTRN   HCODE(_NV_Store)
0000B5 25642C25642C25 22623 _184:   DB      025H,064H,02CH,025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       642C256400           
                      22626         EXTRN   HCODE(_pld_version)
                      22629         EXTRN   HCODE(_RecallPreset)
                      22632         EXTRN   HCODE(_AudioInit)
                      22634         EXTRN   HDATA(_Calibration)
                      22637         EXTRN   HCODE(_BBSPGCommunication)
0000C1 25642C25642C25 22638 _1122:  DB      025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       6400                 
0000CA 25642C25642C25 22639 _299:   DB      025H,064H,02CH,025H,064H,02CH,025H,066H,000H
       6600                 
                      22640         EXTRN   HCODE(__ADD_DPF)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 366

ADDR   CODE            LINE SOURCELINE
                      22641         EXTRN   HCODE(__SMODL)
                      22644         EXTRN   HCODE(_tcxo_status)
0000D3 25642C25377300 22645 _157:   DB      025H,064H,02CH,025H,037H,073H,000H
                      22647         EXTRN   HDATA(_QuestEnableReg)
                      22648         EXTRN   IDATA(__lc_bs)
                      22651         EXTRN   HCODE(_ResetInstrument)
                      22653         EXTRN   HDATA(_QuestConditionReg)
                      22656         EXTRN   HCODE(_SetAudioClick)
0000DA 25387300       22657 _1079:  DB      025H,038H,073H,000H
                      22660         EXTRN   HCODE(_SetCBPattern)
                      22661         EXTRN   HCODE(__SDIVL)
0000DE 2533327300     22662 _1054:  DB      025H,033H,032H,073H,000H
                      22665         EXTRN   HCODE(_GenlockDefaults)
0000E3 25642C00       22666 _533:   DB      025H,064H,02CH,000H
                      22669         EXTRN   HCODE(_rs232putchar)
                      22670         EXTRN   HCODE(__DPF2L)
                      22671         EXTRN   HCODE(__CMP_DPF)
                      22673         EXTRN   HDATA(_OperConditionReg)
                      22676         EXTRN   HCODE(_AudioDefaults)
0000E7 25642C25642C25 22677 _183:   DB      025H,064H,02CH,025H,064H,02CH,025H,064H,00AH,000H
       640A00               
0000F1 25642C25313773 22678 _131:   DB      025H,064H,02CH,025H,031H,037H,073H,000H
       00                   
                      22680         EXTRN   HDATA(_SCPIError)
                      22681         EXTRN   HCODE(__UDIVL)
                      22684         EXTRN   HCODE(_ROMChecksum)
                      22687         EXTRN   HCODE(_WriteAnlAudioDACLevel)
0000F9 25642C2200     22688 _109:   DB      025H,064H,02CH,022H,000H
0000FE 4F4E0A00       22689 _958:   DB      04FH,04EH,00AH,000H
                      22692         EXTRN   HCODE(_SetAudioLevel)
000102 2C25642C00     22693 _421:   DB      02CH,025H,064H,02CH,000H
                      22694         EXTRN   HCODE(__DPF2S)
                      22697         EXTRN   HCODE(_sio0SndRequest)
                      22700         EXTRN   HCODE(_UpdateESRRegister)
                      22702         EXTRN   HDATA(_QuestEventReg)
                      22705         EXTRN   HCODE(_SetCBScHPhase)
                      22706         EXTRN   DATA(__lc_ub_xvwbuffer)
                      22707         EXTRN   DATA(__lc_ue_xvwbuffer)
                      22708         CALLS   'CLSCommand', 'ResetErrorEventQueue'
                      22709         CALLS   'ESECommand', 'rs232printf'
                      22710         CALLS   'ESECommand', 'sscanf'
                      22711         CALLS   'ESRCommand', 'UpdateESRRegister'
                      22712         CALLS   'ESRCommand', 'rs232printf'
                      22713         CALLS   'SRECommand', 'rs232printf'
                      22714         CALLS   'SRECommand', 'sscanf'
                      22715         CALLS   'STBCommand', 'UpdateSTBRegister'
                      22716         CALLS   'STBCommand', 'rs232printf'
                      22717         CALLS   'RSTCommand', 'ResetInstrument'
                      22718         CALLS   'IDNCommand', 'rs232puts'
                      22719         CALLS   'IDNCommand', 'rs232putchar'
                      22720         CALLS   'IDNCommand', 'rs232puts'
                      22721         CALLS   'IDNCommand', 'rs232putchar'
                      22722         CALLS   'IDNCommand', 'rs232puts'
                      22723         CALLS   'IDNCommand', 'rs232putchar'
                      22724         CALLS   'IDNCommand', 'rs232puts'
                      22725         CALLS   'IDNCommand', 'rs232putchar'
                      22726         CALLS   'RCLCommand', 'sscanf'
                      22727         CALLS   'RCLCommand', 'RecallPreset'
                      22728         CALLS   'SAVCommand', 'sscanf'
                      22729         CALLS   'SAVCommand', 'StorePreset'
                      22730         CALLS   'SystemError', 'ReadErrorEventQueue'
                      22731         CALLS   'SystemError', 'sprintf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 367

ADDR   CODE            LINE SOURCELINE
                      22732         CALLS   'SystemError', 'rs232puts'
                      22733         CALLS   'SystemError', 'rs232putchar'
                      22734         CALLS   'SystemError', 'rs232puts'
                      22735         CALLS   'SystemVersion', 'rs232putchar'
                      22736         CALLS   'SystemPresetName', 'sscanf'
                      22737         CALLS   'SystemPresetName', 'NV_Recall'
                      22738         CALLS   'SystemPresetName', 'rs232puts'
                      22739         CALLS   'SystemPresetName', 'rs232putchar'
                      22740         CALLS   'SystemPresetName', 'sscanf'
                      22741         CALLS   'SystemPresetName', 'strlen'
                      22742         CALLS   'SystemPresetName', 'NV_Recall'
                      22743         CALLS   'SystemPresetName', 'strcpy'
                      22744         CALLS   'SystemPresetName', 'NV_Store'
                      22745         CALLS   'SystemPresetAuthor', 'sscanf'
                      22746         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22747         CALLS   'SystemPresetAuthor', 'rs232puts'
                      22748         CALLS   'SystemPresetAuthor', 'rs232putchar'
                      22749         CALLS   'SystemPresetAuthor', 'sscanf'
                      22750         CALLS   'SystemPresetAuthor', 'strlen'
                      22751         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22752         CALLS   'SystemPresetAuthor', 'strcpy'
                      22753         CALLS   'SystemPresetAuthor', 'NV_Store'
                      22754         CALLS   'SystemPresetDate', 'sscanf'
                      22755         CALLS   'SystemPresetDate', 'NV_Recall'
                      22756         CALLS   'SystemPresetDate', 'sprintf'
                      22757         CALLS   'SystemPresetDate', 'rs232puts'
                      22758         CALLS   'SystemPresetDate', 'sscanf'
                      22759         CALLS   'SystemPresetDate', 'ValidateDate'
                      22760         CALLS   'SystemPresetDate', 'NV_Recall'
                      22761         CALLS   'SystemPresetDate', 'NV_Store'
                      22762         CALLS   'StatusOperEvent', 'rs232printf'
                      22763         CALLS   'StatusOperCondition', 'rs232printf'
                      22764         CALLS   'StatusOperEnable', 'rs232printf'
                      22765         CALLS   'StatusOperEnable', 'sscanf'
                      22766         CALLS   'StatusQuestEvent', 'rs232printf'
                      22767         CALLS   'StatusQuestCondition', 'rs232printf'
                      22768         CALLS   'StatusQuestEnable', 'rs232printf'
                      22769         CALLS   'StatusQuestEnable', 'sscanf'
                      22770         CALLS   'StatusPreset', 'rs232putchar'
                      22771         CALLS   'StatusPreset', 'rs232puts'
                      22772         CALLS   'StatusPreset', 'rs232putchar'
                      22773         CALLS   'GenlockGen', 'rs232putchar'
                      22774         CALLS   'GenlockGen', 'PrintSamplesToFLT'
                      22775         CALLS   'GenlockGen', 'rs232putchar'
                      22776         CALLS   'GenlockGenSystem', 'rs232putchar'
                      22777         CALLS   'GenlockGenSystem', 'FindParameter'
                      22778         CALLS   'GenlockGenSystem', 'SetGenlockSystem'
                      22779         CALLS   'GenlockGenDelay', 'PrintSamplesToFLT'
                      22780         CALLS   'GenlockGenDelay', 'rs232putchar'
                      22781         CALLS   'GenlockGenDelay', 'sscanf'
                      22782         CALLS   'GenlockGenDelay', 'FLTToSamples'
                      22783         CALLS   'GenlockGenDelay', 'SetGenlockDelay'
                      22784         CALLS   'GenlockGenCalibrateEnable', 'rs232putchar'
                      22785         CALLS   'GenlockGenCalibrateEnable', 'FindParameter'
                      22786         CALLS   'GenlockGenCalibrateEnable', 'SetGenlockSystem'
                      22787         CALLS   'GenlockGenCalibrateEnable', 'SetBBSystem'
                      22788         CALLS   'GenlockGenCalibrateEnable', 'sio0SndCommand'
                      22789         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22790         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22791         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22792         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22793         CALLS   'GenlockGenCalibrateStore', 'NV_Store'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 368

ADDR   CODE            LINE SOURCELINE
                      22794         CALLS   'BBGen', 'rs232putchar'
                      22795         CALLS   'BBGen', 'PrintSamplesToFLT'
                      22796         CALLS   'BBGen', 'rs232printf'
                      22797         CALLS   'BBGenSystem', 'rs232putchar'
                      22798         CALLS   'BBGenSystem', 'FindParameter'
                      22799         CALLS   'BBGenSystem', 'SetBBSystem'
                      22800         CALLS   'BBGenDelay', 'PrintSamplesToFLT'
                      22801         CALLS   'BBGenDelay', 'rs232putchar'
                      22802         CALLS   'BBGenDelay', 'sscanf'
                      22803         CALLS   'BBGenDelay', 'FLTToSamples'
                      22804         CALLS   'BBGenDelay', 'SetBBDelay'
                      22805         CALLS   'BBGenScHPhase', 'rs232printf'
                      22806         CALLS   'BBGenScHPhase', 'sscanf'
                      22807         CALLS   'BBGenScHPhase', 'SetBBScHPhase'
                      22808         CALLS   'TSGen', 'rs232putchar'
                      22809         CALLS   'TSGen', 'PrintSamplesToFLT'
                      22810         CALLS   'TSGen', 'rs232printf'
                      22811         CALLS   'TSGen', 'rs232putchar'
                      22812         CALLS   'TSGenPattern', 'rs232putchar'
                      22813         CALLS   'TSGenPattern', 'FindParameter'
                      22814         CALLS   'TSGenPattern', 'SetCBPattern'
                      22815         CALLS   'TSGenSystem', 'rs232putchar'
                      22816         CALLS   'TSGenSystem', 'FindParameter'
                      22817         CALLS   'TSGenSystem', 'SetCBSystem'
                      22818         CALLS   'TSGenDelay', 'PrintSamplesToFLT'
                      22819         CALLS   'TSGenDelay', 'rs232putchar'
                      22820         CALLS   'TSGenDelay', 'sscanf'
                      22821         CALLS   'TSGenDelay', 'FLTToSamples'
                      22822         CALLS   'TSGenDelay', 'SetCBDelay'
                      22823         CALLS   'TSGenScHPhase', 'rs232printf'
                      22824         CALLS   'TSGenScHPhase', 'sscanf'
                      22825         CALLS   'TSGenScHPhase', 'SetCBScHPhase'
                      22826         CALLS   'TSGenEmbAudioSignal', 'rs232putchar'
                      22827         CALLS   'TSGenEmbAudioSignal', 'FindParameter'
                      22828         CALLS   'TSGenEmbAudioSignal', 'SetCBEmbAudioSignal'
                      22829         CALLS   'AudioGenOutput', 'rs232putchar'
                      22830         CALLS   'AudioGenOutput', 'FindParameter'
                      22831         CALLS   'AudioGenOutput', 'SetAudioOutput'
                      22832         CALLS   'AudioGenAnalog', 'rs232putchar'
                      22833         CALLS   'AudioGenAnalog', 'rs232printf'
                      22834         CALLS   'AudioGenAnalogSignal', 'rs232putchar'
                      22835         CALLS   'AudioGenAnalogSignal', 'FindParameter'
                      22836         CALLS   'AudioGenAnalogSignal', 'SetAudioSignal'
                      22837         CALLS   'AudioGenAnalogLevel', 'rs232putchar'
                      22838         CALLS   'AudioGenAnalogLevel', 'rs232printf'
                      22839         CALLS   'AudioGenAnalogLevel', 'FindParameter'
                      22840         CALLS   'AudioGenAnalogLevel', 'sscanf'
                      22841         CALLS   'AudioGenAnalogLevel', 'SetAudioLevel'
                      22842         CALLS   'AudioGenAnalogClick', 'rs232printf'
                      22843         CALLS   'AudioGenAnalogClick', 'sscanf'
                      22844         CALLS   'AudioGenAnalogClick', 'SetAudioClick'
                      22845         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22846         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22847         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22848         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22849         CALLS   'AudioGenAESEBUSystem', 'rs232putchar'
                      22850         CALLS   'AudioGenAESEBUSystem', 'FindParameter'
                      22851         CALLS   'AudioGenAESEBUSystem', 'SetAudioSystem'
                      22852         CALLS   'AudioGenAESEBUSignal', 'rs232putchar'
                      22853         CALLS   'AudioGenAESEBUSignal', 'FindParameter'
                      22854         CALLS   'AudioGenAESEBUSignal', 'SetAudioSignal'
                      22855         CALLS   'AudioGenAESEBULevel', 'rs232putchar'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 369

ADDR   CODE            LINE SOURCELINE
                      22856         CALLS   'AudioGenAESEBULevel', 'rs232printf'
                      22857         CALLS   'AudioGenAESEBULevel', 'FindParameter'
                      22858         CALLS   'AudioGenAESEBULevel', 'sscanf'
                      22859         CALLS   'AudioGenAESEBULevel', 'SetAudioLevel'
                      22860         CALLS   'AudioGenAESEBUTiming', 'rs232printf'
                      22861         CALLS   'AudioGenAESEBUTiming', 'sscanf'
                      22862         CALLS   'AudioGenAESEBUTiming', 'SetAudioTiming'
                      22863         CALLS   'AudioGenAESEBUWordClock', 'rs232putchar'
                      22864         CALLS   'AudioGenAESEBUWordClock', 'FindParameter'
                      22865         CALLS   'AudioGenAESEBUWordClock', 'SetAudioWordClock'
                      22866         CALLS   'AudioGenAESEBUClick', 'rs232printf'
                      22867         CALLS   'AudioGenAESEBUClick', 'sscanf'
                      22868         CALLS   'AudioGenAESEBUClick', 'SetAudioClick'
                      22869         CALLS   'FactPassword', 'rs232puts'
                      22870         CALLS   'FactPassword', 'strcmp'
                      22871         CALLS   'FactPassword', 'Cstrcmp'
                      22872         CALLS   'FactReset', 'GenlockDefaults'
                      22873         CALLS   'FactReset', 'BBDefaults'
                      22874         CALLS   'FactReset', 'CBDefaults'
                      22875         CALLS   'FactReset', 'AudioDefaults'
                      22876         CALLS   'FactReset', 'GenlockInit'
                      22877         CALLS   'FactReset', 'BBInit'
                      22878         CALLS   'FactReset', 'CBInit'
                      22879         CALLS   'FactReset', 'AudioInit'
                      22880         CALLS   'FactReset', 'GenlockUpdate'
                      22881         CALLS   'FactReset', 'CBUpdate'
                      22882         CALLS   'FactReset', 'BBUpdate'
                      22883         CALLS   'FactReset', 'AudioUpdate'
                      22884         CALLS   'FactReset', 'StorePreset'
                      22885         CALLS   'FactReset', 'NV_Store'
                      22886         CALLS   'FactV24Command', 'sscanf'
                      22887         CALLS   'FactV24Command', 'sio0SndRequest'
                      22888         CALLS   'FactV24Command', 'rs232puts'
                      22889         CALLS   'FactV24Command', 'sio0SndCommand'
                      22890         CALLS   'FactV24Transparent', 'FindParameter'
                      22891         CALLS   'FactV24Transparent', 'BBSPGCommunication'
                      22892         CALLS   'FactChecksumCode', 'ROMChecksum'
                      22893         CALLS   'FactChecksumCode', 'sprintf'
                      22894         CALLS   'FactChecksumCode', 'rs232puts'
                      22895         CALLS   'FactChecksumPLD', 'ROMChecksum'
                      22896         CALLS   'FactChecksumPLD', 'sprintf'
                      22897         CALLS   'FactChecksumPLD', 'rs232puts'
                      22898         CALLS   'FactChecksumEmbAudio', 'ROMChecksum'
                      22899         CALLS   'FactChecksumEmbAudio', 'sprintf'
                      22900         CALLS   'FactChecksumEmbAudio', 'rs232puts'
                      22901         CALLS   'FactChecksumPattern', 'ROMChecksum'
                      22902         CALLS   'FactChecksumPattern', 'sprintf'
                      22903         CALLS   'FactChecksumPattern', 'rs232puts'
                      22904         CALLS   'FactChecksumRange', 'sscanf'
                      22905         CALLS   'FactChecksumRange', 'ROMChecksum'
                      22906         CALLS   'FactChecksumRange', 'sprintf'
                      22907         CALLS   'FactChecksumRange', 'rs232puts'
                      22908         CALLS   'FactMainVersion', 'sprintf'
                      22909         CALLS   'FactMainVersion', 'rs232puts'
                      22910         CALLS   'FactMainIDNCompany', 'rs232puts'
                      22911         CALLS   'FactMainIDNCompany', 'rs232putchar'
                      22912         CALLS   'FactMainIDNCompany', 'sscanf'
                      22913         CALLS   'FactMainIDNCompany', 'strncpy'
                      22914         CALLS   'FactMainIDNCompany', 'NV_Store'
                      22915         CALLS   'FactMainIDNType', 'rs232puts'
                      22916         CALLS   'FactMainIDNType', 'rs232putchar'
                      22917         CALLS   'FactMainIDNType', 'sscanf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 370

ADDR   CODE            LINE SOURCELINE
                      22918         CALLS   'FactMainIDNType', 'strncpy'
                      22919         CALLS   'FactMainIDNType', 'NV_Store'
                      22920         CALLS   'FactMainIDNKUNumber', 'rs232puts'
                      22921         CALLS   'FactMainIDNKUNumber', 'rs232putchar'
                      22922         CALLS   'FactMainIDNKUNumber', 'sscanf'
                      22923         CALLS   'FactMainIDNKUNumber', 'strncpy'
                      22924         CALLS   'FactMainIDNKUNumber', 'NV_Store'
                      22925         CALLS   'FactMainIDNSWRevision', 'rs232puts'
                      22926         CALLS   'FactMainIDNSWRevision', 'rs232putchar'
                      22927         CALLS   'FactMainIDNSWRevision', 'sscanf'
                      22928         CALLS   'FactMainIDNSWRevision', 'strncpy'
                      22929         CALLS   'FactMainIDNSWRevision', 'NV_Store'
                      22930         CALLS   'FactMainSystem', 'rs232putchar'
                      22931         CALLS   'FactMainSystem', 'FindParameter'
                      22932         CALLS   'FactMainSystem', 'NV_Store'
                      22933         CALLS   'FactMainFMSDateProd', 'sprintf'
                      22934         CALLS   'FactMainFMSDateProd', 'rs232puts'
                      22935         CALLS   'FactMainFMSDateProd', 'sscanf'
                      22936         CALLS   'FactMainFMSDateProd', 'ValidateDate'
                      22937         CALLS   'FactMainFMSDateProd', 'NV_Store'
                      22938         CALLS   'FactMainFMSDateUpd', 'sprintf'
                      22939         CALLS   'FactMainFMSDateUpd', 'rs232puts'
                      22940         CALLS   'FactMainFMSDateUpd', 'sscanf'
                      22941         CALLS   'FactMainFMSDateUpd', 'ValidateDate'
                      22942         CALLS   'FactMainFMSDateUpd', 'NV_Store'
                      22943         CALLS   'FactGenlockGenDate', 'sprintf'
                      22944         CALLS   'FactGenlockGenDate', 'rs232puts'
                      22945         CALLS   'FactGenlockGenDate', 'sscanf'
                      22946         CALLS   'FactGenlockGenDate', 'ValidateDate'
                      22947         CALLS   'FactGenlockGenDate', 'NV_Store'
                      22948         CALLS   'FactGenlockGenVersion', 'GenlockVersion'
                      22949         CALLS   'FactGenlockGenVersion', 'rs232puts'
                      22950         CALLS   'FactGenlockGenVersion', 'rs232putchar'
                      22951         CALLS   'FactGenlockGenFRefDate', 'sprintf'
                      22952         CALLS   'FactGenlockGenFRefDate', 'rs232puts'
                      22953         CALLS   'FactGenlockGenFRefDate', 'sscanf'
                      22954         CALLS   'FactGenlockGenFRefDate', 'ValidateDate'
                      22955         CALLS   'FactGenlockGenFRefDate', 'NV_Store'
                      22956         CALLS   'FactGenlockGenFRefDAC', 'sprintf'
                      22957         CALLS   'FactGenlockGenFRefDAC', 'rs232puts'
                      22958         CALLS   'FactGenlockGenFRefDAC', 'sscanf'
                      22959         CALLS   'FactGenlockGenFRefDAC', 'NV_Store'
                      22960         CALLS   'FactGenlockGenURefDate', 'sprintf'
                      22961         CALLS   'FactGenlockGenURefDate', 'rs232puts'
                      22962         CALLS   'FactGenlockGenURefDate', 'sscanf'
                      22963         CALLS   'FactGenlockGenURefDate', 'ValidateDate'
                      22964         CALLS   'FactGenlockGenURefDate', 'NV_Store'
                      22965         CALLS   'FactGenlockGenURefDAC', 'sprintf'
                      22966         CALLS   'FactGenlockGenURefDAC', 'rs232puts'
                      22967         CALLS   'FactGenlockGenURefDAC', 'sscanf'
                      22968         CALLS   'FactGenlockGenURefDAC', 'NV_Store'
                      22969         CALLS   'FactGenlockGenHPHZero', 'sprintf'
                      22970         CALLS   'FactGenlockGenHPHZero', 'rs232puts'
                      22971         CALLS   'FactGenlockGenHPHZero', 'sscanf'
                      22972         CALLS   'FactGenlockGenHPHZero', 'NV_Store'
                      22973         CALLS   'FactGenlockGenPhase', 'sprintf'
                      22974         CALLS   'FactGenlockGenPhase', 'rs232puts'
                      22975         CALLS   'FactGenlockGenPhase', 'sscanf'
                      22976         CALLS   'FactGenlockGenPhase', 'NV_Store'
                      22977         CALLS   'FactBBGenDate', 'sprintf'
                      22978         CALLS   'FactBBGenDate', 'rs232puts'
                      22979         CALLS   'FactBBGenDate', 'sscanf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 371

ADDR   CODE            LINE SOURCELINE
                      22980         CALLS   'FactBBGenDate', 'ValidateDate'
                      22981         CALLS   'FactBBGenDate', 'NV_Store'
                      22982         CALLS   'FactBBGenVersion', 'BBVersion'
                      22983         CALLS   'FactBBGenVersion', 'rs232puts'
                      22984         CALLS   'FactBBGenVersion', 'rs232putchar'
                      22985         CALLS   'FactBBGenSignal', 'FindParameter'
                      22986         CALLS   'FactBBGenPhase', 'sprintf'
                      22987         CALLS   'FactBBGenPhase', 'rs232puts'
                      22988         CALLS   'FactBBGenPhase', 'sscanf'
                      22989         CALLS   'FactBBGenPhase', 'NV_Store'
                      22990         CALLS   'FactBBGenScHPhase', 'sprintf'
                      22991         CALLS   'FactBBGenScHPhase', 'rs232puts'
                      22992         CALLS   'FactBBGenScHPhase', 'sscanf'
                      22993         CALLS   'FactBBGenScHPhase', 'NV_Store'
                      22994         CALLS   'FactBBGenDAC', 'sprintf'
                      22995         CALLS   'FactBBGenDAC', 'rs232puts'
                      22996         CALLS   'FactBBGenDAC', 'sscanf'
                      22997         CALLS   'FactBBGenDAC', 'NV_Store'
                      22998         CALLS   'FactTSGenDate', 'sprintf'
                      22999         CALLS   'FactTSGenDate', 'rs232puts'
                      23000         CALLS   'FactTSGenDate', 'sscanf'
                      23001         CALLS   'FactTSGenDate', 'ValidateDate'
                      23002         CALLS   'FactTSGenDate', 'NV_Store'
                      23003         CALLS   'FactTSGenAGain', 'sprintf'
                      23004         CALLS   'FactTSGenAGain', 'rs232puts'
                      23005         CALLS   'FactTSGenAGain', 'sscanf'
                      23006         CALLS   'FactTSGenAGain', 'NV_Store'
                      23007         CALLS   'FactTSGenAGain', 'WriteCBGain'
                      23008         CALLS   'FactTSGenCGain', 'sprintf'
                      23009         CALLS   'FactTSGenCGain', 'rs232puts'
                      23010         CALLS   'FactTSGenCGain', 'sscanf'
                      23011         CALLS   'FactTSGenCGain', 'NV_Store'
                      23012         CALLS   'FactTSGenCGain', 'WriteCBChromaGain'
                      23013         CALLS   'FactTSGenPhase', 'sprintf'
                      23014         CALLS   'FactTSGenPhase', 'rs232puts'
                      23015         CALLS   'FactTSGenPhase', 'sscanf'
                      23016         CALLS   'FactTSGenPhase', 'NV_Store'
                      23017         CALLS   'FactTSGenPhase', 'SetCBDelay'
                      23018         CALLS   'FactTSGenScHPhase', 'sprintf'
                      23019         CALLS   'FactTSGenScHPhase', 'rs232puts'
                      23020         CALLS   'FactTSGenScHPhase', 'sscanf'
                      23021         CALLS   'FactTSGenScHPhase', 'NV_Store'
                      23022         CALLS   'FactTSGenScHPhase', 'SetCBScHPhase'
                      23023         CALLS   'FactAudioGenStatus', 'AudioStatus'
                      23024         CALLS   'FactAudioGenStatus', 'sprintf'
                      23025         CALLS   'FactAudioGenStatus', 'rs232puts'
                      23026         CALLS   'FactAudioGenDate', 'sprintf'
                      23027         CALLS   'FactAudioGenDate', 'rs232puts'
                      23028         CALLS   'FactAudioGenDate', 'sscanf'
                      23029         CALLS   'FactAudioGenDate', 'ValidateDate'
                      23030         CALLS   'FactAudioGenDate', 'NV_Store'
                      23031         CALLS   'FactAudioGenLevel', 'sprintf'
                      23032         CALLS   'FactAudioGenLevel', 'rs232puts'
                      23033         CALLS   'FactAudioGenLevel', 'sscanf'
                      23034         CALLS   'FactAudioGenLevel', 'NV_Store'
                      23035         CALLS   'FactAudioGenLevel', 'WriteAnlAudioDACLevel'
                      23036         CALLS   'FactPLDVersion', 'pld_version'
                      23037         CALLS   'FactPLDVersion', 'sprintf'
                      23038         CALLS   'FactPLDVersion', 'rs232puts'
                      23039         CALLS   'FactTCXOStatus', 'tcxo_status'
                      23040         CALLS   'FactTCXOStatus', 'sprintf'
                      23041         CALLS   'FactTCXOStatus', 'rs232puts'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 372

ADDR   CODE            LINE SOURCELINE
                      23042         CALLS   'FactMultiMediaChip', 'sscanf'
                      23043         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23044         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23045         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23046         CALLS   'FactMultiMediaChip', 'sscanf'
                      23047         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23048         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23049         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23050         CALLS   'FindParameter', 'Cstrcmp'
                      23051         CALLS   'FLTToSamples', 'labs'
                      23052         CALLS   'FLTToSamples', 'abs'
                      23053         CALLS   'FLTToSamples', 'labs'
                      23054         CALLS   'FLTToSamples', 'abs'
                      23055         CALLS   'PrintSamplesToFLT', 'abs'
                      23056         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23057         CALLS   'PrintSamplesToFLT', 'abs'
                      23058         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23059         CALLS   'PrintSamplesToFLT', 'fabs'
                      23060         CALLS   'PrintSamplesToFLT', 'rs232printf'
