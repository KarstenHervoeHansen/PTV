XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
F:\PTV\Pt5201\Design\DDD\SW\Master\work\peh_work\temp\xa\unitprg.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\cxa\rtxc\xa\include -I. -Ml
                          3 ;          -O2 -s
                          5 $NOZPAGE
                          6         NAME    UNITPRG
                         10 ; unitprg.c    1        /************************************************************************
                            ****/
                         11 ; unitprg.c    2        /* MODULE:                                                               
                               */
                         12 ; unitprg.c    3        /*  unitprg.c -                                                          
                                                                         */
                         13 ; unitprg.c    4        /************************************************************************
                            ****/
                         14 ; unitprg.c    5        /* FUNCTIONS:                                                            
                               */
                         15 ; unitprg.c    6        /*                                                                       
                               */
                         16 ; unitprg.c    7        /*                                                                       
                               */
                         17 ; unitprg.c    8        /* TASKS:                                                                
                               */
                         18 ; unitprg.c    9        /*                                                                       
                               */
                         19 ; unitprg.c   10        /* NOTES:                                                                
                               */
                         20 ; unitprg.c   11        /*                                                                       
                               */
                         21 ; unitprg.c   12        /************************************************************************
                            ****/
                         22 ; unitprg.c   13        /*
                         23 ; unitprg.c   14         *   PTV software for PT5201    
                         24 ; unitprg.c   15         *   Copyright (c) 
                         25 ; unitprg.c   16         *   ProTeleVision Technologies A/S.
                         26 ; unitprg.c   17         *   ALL RIGHTS RESERVED
                         27 ; unitprg.c   18        */
                         28 ; unitprg.c   19        /************************************************************************
                            ****/
                         29 ; unitprg.c   20        #include <stdlib.h>
                         44 ; unitprg.c   21        #include <string.h>
                         47 ; unitprg.c   22        
                         48 ; unitprg.c   23        #include "reg8051.h"
                         51 ; unitprg.c   24        #include "define.h"        // Standard PTV defines
                         54 ; unitprg.c   25        #include "nv_drv.h"
                         58 ; unitprg.c   26        #include "unitprg.h"
                         65 ; unitprg.c   27        #include "led_hw.h"
                         68 ; unitprg.c   28        #include "rs232.h"
                        401 ; unitprg.c   29        
                        402 ; unitprg.c   30        volatile UI BBSPGResetPort _at( 0x6a018);               // Port defined i
                            n PLD
                        403 ; unitprg.c   31        
                        404 ; unitprg.c   32        _bit UnitPgmMode;
                        405 ; unitprg.c   33        
                        406 ; unitprg.c   34        /************************************************************************
                            **/
                        407 ; unitprg.c   35        /* BBSPGReset                                                            
                                                                                                                             
                                                                      UNITPRG.C     */
                        408 ; unitprg.c   36        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        409 ; unitprg.c   37        /* Author:       Kim Engedahl, DEV, 000330                               
                                                                                                                             
                                            */
                        410 ; unitprg.c   38        /* Revised:      000330, KEn, DEV                                        
                                                                                                                             
                                                    */
                        411 ; unitprg.c   39        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        412 ; unitprg.c   40        /* Function:                                                             
                                                                                                                             
                                                                                                            */
                        413 ; unitprg.c   41        /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        414 ; unitprg.c   42        /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        415 ; unitprg.c   43        /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        416 ; unitprg.c   44        /************************************************************************
                            **/
                        417 ; unitprg.c   45        void BBSPGReset( bool SPGReset, bool BBReset, bool SPGPrg)
                        418 ; unitprg.c   46        {
000000                  419 UNITPRG_PR      SEGMENT HCODE
000000                  420         RSEG    UNITPRG_PR
                        421         ALIGN   1
                        423         PUBLIC  _BBSPGReset
000000                  424 _BBSPGReset:
                        436 ; unitprg.c   47                UI tmp = 3;
000000 B933             438         MOV.W   R3,#03H
                        440 ; unitprg.c   48        
                        441 ; unitprg.c   49                if ( SPGReset)
000002 6900             443         OR.W    R0,R0
000004 F301             444         BEQ     _3
                        445 ; unitprg.c   50                        tmp &= 0xFE;
000006 B932             447         MOV.W   R3,#02H
000008                  450 _3:
                        451 ; unitprg.c   51        
                        452 ; unitprg.c   52                if ( BBReset)
000008 6911             454         OR.W    R1,R1
00000A F302             455         BEQ     _4
                        456 ; unitprg.c   53                        tmp &= 0xFD;
00000C 993500FD         458         AND.W   R3,#0FDH
000010                  461 _4:
                        462 ; unitprg.c   54        
                        463 ; unitprg.c   55                if ( SPGPrg)
000010 6922             465         OR.W    R2,R2
000012 F302             466         BEQ     _5
                        467 ; unitprg.c   56                        tmp |= 0x04;
000014 99360004         469         OR.W    R3,#04H
000018                  472 _5:
                        473 ; unitprg.c   57        
                        474 ; unitprg.c   58                BBSPGResetPort = tmp;
000018 96484206         476         MOV.B   ES,#SEG( _BBSPGResetPort )
00001C 9908A018         477         MOV.W   R0,#SOF( _BBSPGResetPort )
000020 8A38             478         MOV.W   [R0],R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        479 ; unitprg.c   59        }
000022 D680             481         RET
                        487 ; unitprg.c   60        
                        488 ; unitprg.c   61        /************************************************************************
                            **/
                        489 ; unitprg.c   62        /* BBSPGCommunication                                                    
                                                                                                                             
                                              UNITPRG.C     */
                        490 ; unitprg.c   63        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        491 ; unitprg.c   64        /* Author:       Kim Engedahl, DEV, 000407                               
                                                                                                                             
                                            */
                        492 ; unitprg.c   65        /* Revised:      000607, KEn DEV                                         
                                                                                                                             
                                                            */
                        493 ; unitprg.c   66        /*                                                                       
                                                                                                                             
                                                                                                                            *
                            /
                        494 ; unitprg.c   67        /* Function:                                                             
                                                                                                                             
                                                                                                            */
                        495 ; unitprg.c   68        /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        496 ; unitprg.c   69        /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        497 ; unitprg.c   70        /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        498 ; unitprg.c   71        /************************************************************************
                            **/
                        499 ; unitprg.c   72        void BBSPGCommunication( int unit)
                        500 ; unitprg.c   73        {
                        501         ALIGN   1
                        503         PUBLIC  _BBSPGCommunication
000024                  504 _BBSPGCommunication:
000024 0F30             508         PUSH.W  R4, R5
000026 8950             511         MOV.W   R5,R0
                        519 ; unitprg.c   74                UI i;
                        520 ; unitprg.c   75                bool Test1LEDFlag = FALSE;
000028 B940             522         MOV.W   R4,#00H
                        524 ; unitprg.c   76        
                        525 ; unitprg.c   77                EA = 0;
00002A 080337           527         CLR     0337H
                        528 ; unitprg.c   78        
                        529 ; unitprg.c   79                BBSPGReset( true, true, true);                  // Set program bi
                            t and reset units
00002D 9908FFFF         531         MOV.W   R0,#0FFFFH
000031 9918FFFF         532         MOV.W   R1,#0FFFFH
000035 9928FFFF         533         MOV.W   R2,#0FFFFH
000039 C5FFE2           534         CALL    _BBSPGReset
                        535 ; unitprg.c   80        
                        536 ; unitprg.c   81                for ( i = 0; i < 60000; i++)                            //  Wait
00003C B900             538         MOV.W   R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00003E                  540 _6:
00003E A901             541         ADDS.W  R0,#01H
000040 9904EA60         544         CMP.W   R0,#0EA60H
000044 F1FC             545         BCS     _6
                        546 ; unitprg.c   82                        ;
                        547 ; unitprg.c   83        
                        548 ; unitprg.c   84                if ( unit == 0)
000046 6955             550         OR.W    R5,R5
000048 F208             551         BNE     _7
                        552 ; unitprg.c   85                        BBSPGReset( true, false, true);         // Release reset 
                            for unit to be programmed
00004A 9908FFFF         554         MOV.W   R0,#0FFFFH
00004E B910             556         MOV.W   R1,#00H
000050 9928FFFF         557         MOV.W   R2,#0FFFFH
000054 C5FFD5           558         CALL    _BBSPGReset
000057 FE08             559         BR      _8
000057 FE0800           559         BR      _8
00005A                  560 _7:
                        561 ; unitprg.c   86                else
                        562 ; unitprg.c   87                        BBSPGReset( false, true, true);         // Release reset 
                            for unit to be programmed
00005A 9918FFFF         564         MOV.W   R1,#0FFFFH
00005E B900             565         MOV.W   R0,#00H
000060 9928FFFF         566         MOV.W   R2,#0FFFFH
000064 C5FFCD           567         CALL    _BBSPGReset
000064 C5FFCD00         567         CALL    _BBSPGReset
000068                  568 _8:
                        569 ; unitprg.c   88        
                        570 ; unitprg.c   89                IEH = 0;                                                         
                                                    // Disable ALL interrupts
000068 B64027           572         MOV.B   0427H,#00H
                        573 ; unitprg.c   90                IEL = 0;
00006B B64026           575         MOV.B   0426H,#00H
                        576 ; unitprg.c   91        
                        577 ; unitprg.c   92                UnitPgmMode = 1;
00006E 081rrr           579         SETB    _UnitPgmMode
                        580 ; unitprg.c   93        
                        581 ; unitprg.c   94                TR2 = 0;                                                         
                                                    // Stop timer 2
000071 0802C2           583         CLR     02C2H
                        584 ; unitprg.c   95                T2CON &= 0xCF;                                                  /
                            / Use timer 1 as baud rate generator for both
000074 964518CF         586         AND.B   0418H,#0CFH
                        587 ; unitprg.c   96                T2MOD &= 0xCF;                                                  /
                            /  serial ports.
000078 964519CF         589         AND.B   0419H,#0CFH
                        590 ; unitprg.c   97        
                        591 ; unitprg.c   98                S0CON = 0xD8;                                                    
                                    // UART mode 1: 1 start, 9 data, 1 stop,
00007C 964820D8         593         MOV.B   0420H,#0D8H
                        594 ; unitprg.c   99                                                                                 
                                                                            //  (9th bit used as stop bit)
                        595 ; unitprg.c  100        
                        596 ; unitprg.c  101                S1CON = 0xD8;                                                    
                                    // UART mode 1: 1 start, 9 data, 1 stop,
000080 964824D8         598         MOV.B   0424H,#0D8H
                        599 ; unitprg.c  102                                                                                 
                                                                            //  (9th bit used as stop bit)
                        600 ; unitprg.c  103        
                        601 ; unitprg.c  104                TR1 = 0;                                                         
                                                    // Stop Timer 1, just in case you know
000084 080286           603         CLR     0286H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
                        604 ; unitprg.c  105        
                        605 ; unitprg.c  106                TMOD &= 0x0F;                                                    
                                    // Timer 1: 16-bit auto-reload timer
000087 96455C0F         607         AND.B   045CH,#0FH
                        608 ; unitprg.c  107        
                        609 ; unitprg.c  108                TH1 = RTH1 = 0xFF;                                      // 115200
                             baud
00008B 964857FF         611         MOV.B   0457H,#0FFH
00008F 97445357         612         MOV.B   0453H,0457H
                        613 ; unitprg.c  109                TL1 = RTL1 = 0xFC;
000093 964856FC         615         MOV.B   0456H,#0FCH
000097 97445256         616         MOV.B   0452H,0456H
                        617 ; unitprg.c  110        
                        618 ; unitprg.c  111                TR1 = 1;                                                         
                                                    // Start Timer 1
00009B 081286           620         SETB    0286H
                        621 ; unitprg.c  112        
                        622 ; unitprg.c  113                RI_0 = 0;                                                        
                                                    // Clear possible Interrupt flag RI_0
00009E 080300           624         CLR     0300H
                        625 ; unitprg.c  114                TI_0 = 0;                                                        
                                                    // Clear possible Interrupt flag TI_0
0000A1 080301           627         CLR     0301H
                        628 ; unitprg.c  115        
                        629 ; unitprg.c  116                RI_1 = 0;                                                        
                                                    // Clear possible Interrupt flag RI_1
0000A4 080320           631         CLR     0320H
                        632 ; unitprg.c  117                TI_1 = 0;                                                        
                                                    // Clear possible Interrupt flag TI_1
0000A7 080321           634         CLR     0321H
                        635 ; unitprg.c  118        
                        636 ; unitprg.c  119                ERI0 = 1;                                                        
                                                    // Enable SIO0 Rx-interrupt
0000AA 081338           638         SETB    0338H
                        639 ; unitprg.c  120                ETI0 = 1;                                                        
                                                    // Enable SIO0 Tx-interrupt
0000AD 081339           641         SETB    0339H
                        642 ; unitprg.c  121        
                        643 ; unitprg.c  122                ERI1 = 1;                                                        
                                                    // Enable SIO1 Rx-interrupt
0000B0 08133A           645         SETB    033AH
                        646 ; unitprg.c  123                ETI1 = 1;                                                        
                                                    // Enable SIO1 Tx-interrupt
0000B3 08133B           648         SETB    033BH
                        649 ; unitprg.c  124        
                        650 ; unitprg.c  125                EA = 1;
0000B6 081337           652         SETB    0337H
                        653 ; unitprg.c  126        
                        654 ; unitprg.c  127                while ( true)
0000BA                  656 _9:
                        657 ; unitprg.c  128                {
                        658 ; unitprg.c  129                        for ( i = 0; i < 60000; i++)
0000BA B900             660         MOV.W   R0,#00H
0000BC                  662 _10:
0000BC A901             663         ADDS.W  R0,#01H
0000BE 9904EA60         666         CMP.W   R0,#0EA60H
0000C2 F1FC             667         BCS     _10
                        668 ; unitprg.c  130                                ;
                        669 ; unitprg.c  131        
                        670 ; unitprg.c  132                        Test1LEDFlag ^= 1;
0000C4 99470001         672         XOR.W   R4,#01H
                        675 ; unitprg.c  133                        TestLEDSet( Test1LED, Test1LEDFlag);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
0000C8 B901             677         MOV.W   R0,#01H
0000CA 8914             679         MOV.W   R1,R4
                        682         CALL    _TestLEDSet
0000CC C4rrrrrr        +682 ;       FCALL   _TestLEDSet
0000D0 FEF4             686         BR      _9
                        687 ; unitprg.c  134                }
                        688 ; unitprg.c  135        }
0000D2 2F30             690         POP.W   R4, R5
0000D4 D680             692         RET
                        696 ; unitprg.c  136        
06A018                  701         HSEG AT 06A018H
                        702         PUBLIC  _BBSPGResetPort
                        703         ALIGN   1
06A018                  704 _BBSPGResetPort:        DS      2
   |  RESERVED             
06A019
                        707         EXTRN   HCODE(_TestLEDSet)
000000                  710 UNITPRG_CLR_BI@DS       SEGMENT BIT JOIN
000000                  711         RSEG    UNITPRG_CLR_BI@DS
                        712         PUBLIC  _UnitPgmMode
000000 RESERVED         713 _UnitPgmMode:   DBIT    1
000000
                        714         EXTRN   DATA(__lc_ub_xvwbuffer)
                        715         EXTRN   DATA(__lc_ue_xvwbuffer)
                        716         CALLS   'BBSPGCommunication', 'BBSPGReset'
                        717         CALLS   'BBSPGCommunication', 'TestLEDSet'
