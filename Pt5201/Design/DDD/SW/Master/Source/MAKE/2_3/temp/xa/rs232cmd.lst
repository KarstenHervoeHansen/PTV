XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
U:\Pt5201\Design\DDD\SW\Master\Source\MAKE\2_3\temp\xa\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -I..\..\rtxcdef\xa
                          3 ;          -I..\..\rtxc\xa\include -I..\..\code\include\1_1 -I..\..\app_spec\xa
                          4 ;          -Ml -O2 -s
                          6 $NOZPAGE
                          7         NAME    RS232CMD
                         11 ; rs232cmd.c    1       /* MODULE:                                                               
                               */
                         12 ; rs232cmd.c    2       /*   r232cmd.c - RS232 remote commands.                                  
                                             */
                         13 ; rs232cmd.c    3       /************************************************************************
                            ****/
                         14 ; rs232cmd.c    4       /* FUNCTIONS:                                                            
                               */
                         15 ; rs232cmd.c    5       /*                                                                       
                               */
                         16 ; rs232cmd.c    6       /* TASKS:                                                                
                               */
                         17 ; rs232cmd.c    7       /*                                                                       
                               */
                         18 ; rs232cmd.c    8       /* NOTES:                                                                
                               */
                         19 ; rs232cmd.c    9       /*                                                                       
                               */
                         20 ; rs232cmd.c   10       /************************************************************************
                            ****/
                         21 ; rs232cmd.c   11       /*
                         22 ; rs232cmd.c   12        *   PTV software for PT5201
                         23 ; rs232cmd.c   13        *   Copyright (c) 
                         24 ; rs232cmd.c   14        *   ProTeleVision Technologies A/S.
                         25 ; rs232cmd.c   15        *   ALL RIGHTS RESERVED
                         26 ; rs232cmd.c   16       */
                         27 ; rs232cmd.c   17       /************************************************************************
                            ****/
                         28 ; rs232cmd.c   18       
                         29 ; rs232cmd.c   19       /************************************************************************
                            ****/
                         30 ; rs232cmd.c   20       /* Include files:                                                        
                                                                                                                             
                                     */
                         31 ; rs232cmd.c   21       
                         32 ; rs232cmd.c   22       #include <string.h>
                         36 ; rs232cmd.c   23       #include <ctype.h>
                         39 ; rs232cmd.c   24       #include <stdio.h>
                         59 ; rs232cmd.c   25       #include <stdlib.h>
                         73 ; rs232cmd.c   26       #include <math.h>
                         76 ; rs232cmd.c   27       
                         77 ; rs232cmd.c   28       #include "config.h"
                         80 ; rs232cmd.c   29       #include "define.h"
                         83 ; rs232cmd.c   30       #include "rtxcobj.h"
                        408 ; rs232cmd.c   31       #include "rs232par.h"
                        411 ; rs232cmd.c   32       #include "rs232err.h"
                        414 ; rs232cmd.c   33       #include "rs232cmd.h"
                        419 ; rs232cmd.c   34       #include "util.h"
                        422 ; rs232cmd.c   35       #include "rs232.h"
                        429 ; rs232cmd.c   36       #include "i2c_drv.h"
                        432 ; rs232cmd.c   37       #include "sio0drv.h"
                        439 ; rs232cmd.c   38       #include "instru.h"
                        542 ; rs232cmd.c   39       #include "tables.h"
                        545 ; rs232cmd.c   40       #include "genlock.h"
                        548 ; rs232cmd.c   41       #include "bb.h"
                        551 ; rs232cmd.c   42       #include "cbar.h"
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        554 ; rs232cmd.c   43       #include "audio.h"
                        557 ; rs232cmd.c   44       #include "plddrv.h"
                        560 ; rs232cmd.c   45       #include "unitprg.h"
                        567 ; rs232cmd.c   46       
                        568 ; rs232cmd.c   47       
                        569 ; rs232cmd.c   48       UC code MasterSWVersion                                 = 23;
000000                  570 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                  571         RSEG    RS232CMD_RO
                        574         PUBLIC  _MasterSWVersion
000000                  575 _MasterSWVersion:
                        576 ; rs232cmd.c   49       
                        577 ; rs232cmd.c   50       char code SystemVersionTxt[]                    = "1995.0";
000000 17               578         DB      017H
                        582         PUBLIC  _SystemVersionTxt
000001                  583 _SystemVersionTxt:
                        584 ; rs232cmd.c   51       char code PasswordText[]                                = "PASS5201";
000001 313939352E3000   585         DB      031H,039H,039H,035H,02EH,030H,000H
                        588         PUBLIC  _PasswordText
000008                  589 _PasswordText:
                        590 ; rs232cmd.c   52       
                        591 ; rs232cmd.c   53       char code CLSCmdTxt[]                   = "CLS";
000008 50415353353230   592         DB      050H,041H,053H,053H,035H,032H,030H,031H,000H
       3100                 
                        595         PUBLIC  _CLSCmdTxt
000011                  596 _CLSCmdTxt:
                        597 ; rs232cmd.c   54       char code ESECmdTxt[]                   = "ESE";
000011 434C5300         598         DB      043H,04CH,053H,000H
                        601         PUBLIC  _ESECmdTxt
000015                  602 _ESECmdTxt:
                        603 ; rs232cmd.c   55       char code ESRCmdTxt[]                   = "ESR";
000015 45534500         604         DB      045H,053H,045H,000H
                        607         PUBLIC  _ESRCmdTxt
000019                  608 _ESRCmdTxt:
                        609 ; rs232cmd.c   56       char code OPCCmdTxt[]                   = "OPC";
000019 45535200         610         DB      045H,053H,052H,000H
                        613         PUBLIC  _OPCCmdTxt
00001D                  614 _OPCCmdTxt:
                        615 ; rs232cmd.c   57       char code SRECmdTxt[]                   = "SRE";
00001D 4F504300         616         DB      04FH,050H,043H,000H
                        619         PUBLIC  _SRECmdTxt
000021                  620 _SRECmdTxt:
                        621 ; rs232cmd.c   58       char code STBCmdTxt[]                   = "STB";
000021 53524500         622         DB      053H,052H,045H,000H
                        625         PUBLIC  _STBCmdTxt
000025                  626 _STBCmdTxt:
                        627 ; rs232cmd.c   59       char code TSTCmdTxt[]                   = "TST";
000025 53544200         628         DB      053H,054H,042H,000H
                        631         PUBLIC  _TSTCmdTxt
000029                  632 _TSTCmdTxt:
                        633 ; rs232cmd.c   60       char code WAICmdTxt[]                   = "WAI";
000029 54535400         634         DB      054H,053H,054H,000H
                        637         PUBLIC  _WAICmdTxt
00002D                  638 _WAICmdTxt:
                        639 ; rs232cmd.c   61       char code RSTCmdTxt[]                   = "RST";
00002D 57414900         640         DB      057H,041H,049H,000H
                        643         PUBLIC  _RSTCmdTxt
000031                  644 _RSTCmdTxt:
                        645 ; rs232cmd.c   62       char code IDNCmdTxt[]                   = "IDN";
000031 52535400         646         DB      052H,053H,054H,000H
                        649         PUBLIC  _IDNCmdTxt
000035                  650 _IDNCmdTxt:
                        651 ; rs232cmd.c   63       char code RCLCmdTxt[]                   = "RCL";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
000035 49444E00         652         DB      049H,044H,04EH,000H
                        655         PUBLIC  _RCLCmdTxt
000039                  656 _RCLCmdTxt:
                        657 ; rs232cmd.c   64       char code SAVCmdTxt[]                   = "SAV";
000039 52434C00         658         DB      052H,043H,04CH,000H
                        661         PUBLIC  _SAVCmdTxt
00003D                  662 _SAVCmdTxt:
                        663 ; rs232cmd.c   65       
                        664 ; rs232cmd.c   66       char code SYSTEMCmdTxt[]                        = "SYSTEM";
00003D 53415600         665         DB      053H,041H,056H,000H
                        668         PUBLIC  _SYSTEMCmdTxt
000041                  669 _SYSTEMCmdTxt:
                        670 ; rs232cmd.c   67       char code SYSTCmdTxt[]                          = "SYST";
000041 53595354454D00   671         DB      053H,059H,053H,054H,045H,04DH,000H
                        674         PUBLIC  _SYSTCmdTxt
000048                  675 _SYSTCmdTxt:
                        676 ; rs232cmd.c   68       char code STATUSCmdTxt[]                                = "STATUS";
000048 5359535400       677         DB      053H,059H,053H,054H,000H
                        680         PUBLIC  _STATUSCmdTxt
00004D                  681 _STATUSCmdTxt:
                        682 ; rs232cmd.c   69       char code STATCmdTxt[]                                  = "STAT";
00004D 53544154555300   683         DB      053H,054H,041H,054H,055H,053H,000H
                        686         PUBLIC  _STATCmdTxt
000054                  687 _STATCmdTxt:
                        688 ; rs232cmd.c   70       char code DIAGNOSTICCmdTxt[]                    = "DIAGNOSTIC";
000054 5354415400       689         DB      053H,054H,041H,054H,000H
                        692         PUBLIC  _DIAGNOSTICCmdTxt
000059                  693 _DIAGNOSTICCmdTxt:
                        694 ; rs232cmd.c   71       char code DIAGCmdTxt[]                          = "DIAG";
000059 444941474E4F53   695         DB      044H,049H,041H,047H,04EH,04FH,053H,054H,049H,043H,000H
       54494300             
                        698         PUBLIC  _DIAGCmdTxt
000064                  699 _DIAGCmdTxt:
                        700 ; rs232cmd.c   72       char code MONITORCmdTxt[]                               = "MONITOR";
000064 4449414700       701         DB      044H,049H,041H,047H,000H
                        704         PUBLIC  _MONITORCmdTxt
000069                  705 _MONITORCmdTxt:
                        706 ; rs232cmd.c   73       char code MONCmdTxt[]                           = "MON";
000069 4D4F4E49544F52   707         DB      04DH,04FH,04EH,049H,054H,04FH,052H,000H
       00                   
                        710         PUBLIC  _MONCmdTxt
000071                  711 _MONCmdTxt:
                        712 ; rs232cmd.c   74       char code INPUTCmdTxt[]                                 = "INPUT";
000071 4D4F4E00         713         DB      04DH,04FH,04EH,000H
                        716         PUBLIC  _INPUTCmdTxt
000075                  717 _INPUTCmdTxt:
                        718 ; rs232cmd.c   75       char code INPCmdTxt[]                                   = "INP";
000075 494E50555400     719         DB      049H,04EH,050H,055H,054H,000H
                        722         PUBLIC  _INPCmdTxt
00007B                  723 _INPCmdTxt:
                        724 ; rs232cmd.c   76       char code OUTPUTCmdTxt[]                                = "OUTPUT";
00007B 494E5000         725         DB      049H,04EH,050H,000H
                        728         PUBLIC  _OUTPUTCmdTxt
00007F                  729 _OUTPUTCmdTxt:
                        730 ; rs232cmd.c   77       char code OUTPCmdTxt[]                                  = "OUTP";
00007F 4F555450555400   731         DB      04FH,055H,054H,050H,055H,054H,000H
                        734         PUBLIC  _OUTPCmdTxt
000086                  735 _OUTPCmdTxt:
                        736 ; rs232cmd.c   78       char code USERCmdTxt[]                                  = "USER";
000086 4F55545000       737         DB      04FH,055H,054H,050H,000H
                        740         PUBLIC  _USERCmdTxt
00008B                  741 _USERCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
                        742 ; rs232cmd.c   79       char code MEASURECmdTxt[]                               = "MEASURE";
00008B 5553455200       743         DB      055H,053H,045H,052H,000H
                        746         PUBLIC  _MEASURECmdTxt
000090                  747 _MEASURECmdTxt:
                        748 ; rs232cmd.c   80       char code MEASCmdTxt[]                          = "MEAS";
000090 4D454153555245   749         DB      04DH,045H,041H,053H,055H,052H,045H,000H
       00                   
                        752         PUBLIC  _MEASCmdTxt
000098                  753 _MEASCmdTxt:
                        754 ; rs232cmd.c   81       char code FACTORYCmdTxt[]                               = "FACTORY";
000098 4D45415300       755         DB      04DH,045H,041H,053H,000H
                        758         PUBLIC  _FACTORYCmdTxt
00009D                  759 _FACTORYCmdTxt:
                        760 ; rs232cmd.c   82       char code FACTCmdTxt[]                          = "FACT";
00009D 464143544F5259   761         DB      046H,041H,043H,054H,04FH,052H,059H,000H
       00                   
                        764         PUBLIC  _FACTCmdTxt
0000A5                  765 _FACTCmdTxt:
                        766 ; rs232cmd.c   83       
                        767 ; rs232cmd.c   84       char code ERRORCmdTxt[]                         = "ERROR";
0000A5 4641435400       768         DB      046H,041H,043H,054H,000H
                        771         PUBLIC  _ERRORCmdTxt
0000AA                  772 _ERRORCmdTxt:
                        773 ; rs232cmd.c   85       char code ERRCmdTxt[]                           = "ERR";
0000AA 4552524F5200     774         DB      045H,052H,052H,04FH,052H,000H
                        777         PUBLIC  _ERRCmdTxt
0000B0                  778 _ERRCmdTxt:
                        779 ; rs232cmd.c   86       char code VERSIONCmdTxt[]                       = "VERSION";
0000B0 45525200         780         DB      045H,052H,052H,000H
                        783         PUBLIC  _VERSIONCmdTxt
0000B4                  784 _VERSIONCmdTxt:
                        785 ; rs232cmd.c   87       char code VERSCmdTxt[]                  = "VERS";
0000B4 56455253494F4E   786         DB      056H,045H,052H,053H,049H,04FH,04EH,000H
       00                   
                        789         PUBLIC  _VERSCmdTxt
0000BC                  790 _VERSCmdTxt:
                        791 ; rs232cmd.c   88       char code PRESETCmdTxt[]                                = "PRESET";
0000BC 5645525300       792         DB      056H,045H,052H,053H,000H
                        795         PUBLIC  _PRESETCmdTxt
0000C1                  796 _PRESETCmdTxt:
                        797 ; rs232cmd.c   89       char code PRESCmdTxt[]                                  = "PRES";
0000C1 50524553455400   798         DB      050H,052H,045H,053H,045H,054H,000H
                        801         PUBLIC  _PRESCmdTxt
0000C8                  802 _PRESCmdTxt:
                        803 ; rs232cmd.c   90       char code EVENTLOGCmdTxt[]                              = "EVENTLOG";
0000C8 5052455300       804         DB      050H,052H,045H,053H,000H
                        807         PUBLIC  _EVENTLOGCmdTxt
0000CD                  808 _EVENTLOGCmdTxt:
                        809 ; rs232cmd.c   91       char code DATECmdTxt[]                                  = "DATE";
0000CD 4556454E544C4F   810         DB      045H,056H,045H,04EH,054H,04CH,04FH,047H,000H
       4700                 
                        813         PUBLIC  _DATECmdTxt
0000D6                  814 _DATECmdTxt:
                        815 ; rs232cmd.c   92       char code TIMECmdTxt[]                                  = "TIME";
0000D6 4441544500       816         DB      044H,041H,054H,045H,000H
                        819         PUBLIC  _TIMECmdTxt
0000DB                  820 _TIMECmdTxt:
                        821 ; rs232cmd.c   93       
                        822 ; rs232cmd.c   94       char code RECALLCmdTxt[]                                = "RECALL";
0000DB 54494D4500       823         DB      054H,049H,04DH,045H,000H
                        826         PUBLIC  _RECALLCmdTxt
0000E0                  827 _RECALLCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
                        828 ; rs232cmd.c   95       char code RECCmdTxt[]                                   = "REC";
0000E0 524543414C4C00   829         DB      052H,045H,043H,041H,04CH,04CH,000H
                        832         PUBLIC  _RECCmdTxt
0000E7                  833 _RECCmdTxt:
                        834 ; rs232cmd.c   96       char code STORECmdTxt[]                                 = "STORE";
0000E7 52454300         835         DB      052H,045H,043H,000H
                        838         PUBLIC  _STORECmdTxt
0000EB                  839 _STORECmdTxt:
                        840 ; rs232cmd.c   97       char code STORCmdTxt[]                                  = "STOR";
0000EB 53544F524500     841         DB      053H,054H,04FH,052H,045H,000H
                        844         PUBLIC  _STORCmdTxt
0000F1                  845 _STORCmdTxt:
                        846 ; rs232cmd.c   98       char code NAMECmdTxt[]                                  = "NAME";
0000F1 53544F5200       847         DB      053H,054H,04FH,052H,000H
                        850         PUBLIC  _NAMECmdTxt
0000F6                  851 _NAMECmdTxt:
                        852 ; rs232cmd.c   99       char code AUTHORCmdTxt[]                                = "AUTHOR";
0000F6 4E414D4500       853         DB      04EH,041H,04DH,045H,000H
                        856         PUBLIC  _AUTHORCmdTxt
0000FB                  857 _AUTHORCmdTxt:
                        858 ; rs232cmd.c  100       char code AUTHCmdTxt[]                                  = "AUTH";
0000FB 415554484F5200   859         DB      041H,055H,054H,048H,04FH,052H,000H
                        862         PUBLIC  _AUTHCmdTxt
000102                  863 _AUTHCmdTxt:
                        864 ; rs232cmd.c  101       char code DOWNLOADCmdTxt[]                      = "DOWNLOAD";
000102 4155544800       865         DB      041H,055H,054H,048H,000H
                        868         PUBLIC  _DOWNLOADCmdTxt
000107                  869 _DOWNLOADCmdTxt:
                        870 ; rs232cmd.c  102       char code DOWNCmdTxt[]                                  = "DOWN";
000107 444F574E4C4F41   871         DB      044H,04FH,057H,04EH,04CH,04FH,041H,044H,000H
       4400                 
                        874         PUBLIC  _DOWNCmdTxt
000110                  875 _DOWNCmdTxt:
                        876 ; rs232cmd.c  103       char code UPLOADCmdTxt[]                                = "UPLOAd";
000110 444F574E00       877         DB      044H,04FH,057H,04EH,000H
                        880         PUBLIC  _UPLOADCmdTxt
000115                  881 _UPLOADCmdTxt:
                        882 ; rs232cmd.c  104       char code UPLCmdTxt[]                                   = "UPL";
000115 55504C4F416400   883         DB      055H,050H,04CH,04FH,041H,064H,000H
                        886         PUBLIC  _UPLCmdTxt
00011C                  887 _UPLCmdTxt:
                        888 ; rs232cmd.c  105       
                        889 ; rs232cmd.c  106       char code OPERATIONCmdTxt[]                     = "OPERATION";
00011C 55504C00         890         DB      055H,050H,04CH,000H
                        893         PUBLIC  _OPERATIONCmdTxt
000120                  894 _OPERATIONCmdTxt:
                        895 ; rs232cmd.c  107       char code OPERCmdTxt[]                          = "OPER";
000120 4F504552415449   896         DB      04FH,050H,045H,052H,041H,054H,049H,04FH,04EH,000H
       4F4E00               
                        899         PUBLIC  _OPERCmdTxt
00012A                  900 _OPERCmdTxt:
                        901 ; rs232cmd.c  108       char code QUESTIONABLECmdTxt[]          = "QUESTIONABLE";
00012A 4F50455200       902         DB      04FH,050H,045H,052H,000H
                        905         PUBLIC  _QUESTIONABLECmdTxt
00012F                  906 _QUESTIONABLECmdTxt:
00012F 5155455354494F   907         DB      051H,055H,045H,053H,054H,049H,04FH,04EH,041H,042H,04CH,045H
       4E41424C45           
                        908 ; rs232cmd.c  109       char code QUESCmdTxt[]                                  = "QUES";
00013B 00               909         DB      000H
                        912         PUBLIC  _QUESCmdTxt
00013C                  913 _QUESCmdTxt:
                        914 ; rs232cmd.c  110       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
                        915 ; rs232cmd.c  111       char code EVENTCmdTxt[]                                 = "EVENT";
00013C 5155455300       916         DB      051H,055H,045H,053H,000H
                        919         PUBLIC  _EVENTCmdTxt
000141                  920 _EVENTCmdTxt:
                        921 ; rs232cmd.c  112       char code EVENCmdTxt[]                                  = "EVEN";
000141 4556454E5400     922         DB      045H,056H,045H,04EH,054H,000H
                        925         PUBLIC  _EVENCmdTxt
000147                  926 _EVENCmdTxt:
                        927 ; rs232cmd.c  113       char code CONDITIONCmdTxt[]                     = "CONDITION";
000147 4556454E00       928         DB      045H,056H,045H,04EH,000H
                        931         PUBLIC  _CONDITIONCmdTxt
00014C                  932 _CONDITIONCmdTxt:
                        933 ; rs232cmd.c  114       char code CONDCmdTxt[]                                  = "COND";
00014C 434F4E44495449   934         DB      043H,04FH,04EH,044H,049H,054H,049H,04FH,04EH,000H
       4F4E00               
                        937         PUBLIC  _CONDCmdTxt
000156                  938 _CONDCmdTxt:
                        939 ; rs232cmd.c  115       char code ENABLECmdTxt[]                                = "ENABLE";
000156 434F4E4400       940         DB      043H,04FH,04EH,044H,000H
                        943         PUBLIC  _ENABLECmdTxt
00015B                  944 _ENABLECmdTxt:
                        945 ; rs232cmd.c  116       char code ENABCmdTxt[]                                  = "ENAB";
00015B 454E41424C4500   946         DB      045H,04EH,041H,042H,04CH,045H,000H
                        949         PUBLIC  _ENABCmdTxt
000162                  950 _ENABCmdTxt:
                        951 ; rs232cmd.c  117       
                        952 ; rs232cmd.c  118       char code DISPLAYCmdTxt[]                               = "DISPLAY";
000162 454E414200       953         DB      045H,04EH,041H,042H,000H
                        956         PUBLIC  _DISPLAYCmdTxt
000167                  957 _DISPLAYCmdTxt:
                        958 ; rs232cmd.c  119       char code DISPCmdTxt[]                                  = "DISP";
000167 444953504C4159   959         DB      044H,049H,053H,050H,04CH,041H,059H,000H
       00                   
                        962         PUBLIC  _DISPCmdTxt
00016F                  963 _DISPCmdTxt:
                        964 ; rs232cmd.c  120       char code ERRORQUEUECmdTxt[]            = "ERRORQUEUE";
00016F 4449535000       965         DB      044H,049H,053H,050H,000H
                        968         PUBLIC  _ERRORQUEUECmdTxt
000174                  969 _ERRORQUEUECmdTxt:
                        970 ; rs232cmd.c  121       char code RESETCmdTxt[]                                 = "RESET";
000174 4552524F525155   971         DB      045H,052H,052H,04FH,052H,051H,055H,045H,055H,045H,000H
       45554500             
                        974         PUBLIC  _RESETCmdTxt
00017F                  975 _RESETCmdTxt:
                        976 ; rs232cmd.c  122       char code RESCmdTxt[]                                   = "RES";
00017F 524553455400     977         DB      052H,045H,053H,045H,054H,000H
                        980         PUBLIC  _RESCmdTxt
000185                  981 _RESCmdTxt:
                        982 ; rs232cmd.c  123       
                        983 ; rs232cmd.c  124       char code DEFAULTCmdTxt[]                               = "DEFAULT";
000185 52455300         984         DB      052H,045H,053H,000H
                        987         PUBLIC  _DEFAULTCmdTxt
000189                  988 _DEFAULTCmdTxt:
                        989 ; rs232cmd.c  125       char code DEFCmdTxt[]                                   = "DEF";
000189 44454641554C54   990         DB      044H,045H,046H,041H,055H,04CH,054H,000H
       00                   
                        993         PUBLIC  _DEFCmdTxt
000191                  994 _DEFCmdTxt:
                        995 ; rs232cmd.c  126       
                        996 ; rs232cmd.c  127       char code GENLOCKCmdTxt[]                               = "GENLOCK";
000191 44454600         997         DB      044H,045H,046H,000H
                       1000         PUBLIC  _GENLOCKCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000195                 1001 _GENLOCKCmdTxt:
                       1002 ; rs232cmd.c  128       char code GENLCmdTxt[]                                  = "GENL";
000195 47454E4C4F434B  1003         DB      047H,045H,04EH,04CH,04FH,043H,04BH,000H
       00                   
                       1006         PUBLIC  _GENLCmdTxt
00019D                 1007 _GENLCmdTxt:
                       1008 ; rs232cmd.c  129       
                       1009 ; rs232cmd.c  130       char code DELAYCmdTxt[]                                 = "DELAY";
00019D 47454E4C00      1010         DB      047H,045H,04EH,04CH,000H
                       1013         PUBLIC  _DELAYCmdTxt
0001A2                 1014 _DELAYCmdTxt:
                       1015 ; rs232cmd.c  131       char code DELCmdTxt[]                                   = "DEL";
0001A2 44454C415900    1016         DB      044H,045H,04CH,041H,059H,000H
                       1019         PUBLIC  _DELCmdTxt
0001A8                 1020 _DELCmdTxt:
                       1021 ; rs232cmd.c  132       
                       1022 ; rs232cmd.c  133       char code CALIBRATECmdTxt[]                     = "CALIBRATE";
0001A8 44454C00        1023         DB      044H,045H,04CH,000H
                       1026         PUBLIC  _CALIBRATECmdTxt
0001AC                 1027 _CALIBRATECmdTxt:
                       1028 ; rs232cmd.c  134       char code CALCmdTxt[]                                   = "CAL";
0001AC 43414C49425241  1029         DB      043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       544500               
                       1032         PUBLIC  _CALCmdTxt
0001B6                 1033 _CALCmdTxt:
                       1034 ; rs232cmd.c  135       
                       1035 ; rs232cmd.c  136       char code ADJUSTCmdTxt[]                                = "ADJUST";
0001B6 43414C00        1036         DB      043H,041H,04CH,000H
                       1039         PUBLIC  _ADJUSTCmdTxt
0001BA                 1040 _ADJUSTCmdTxt:
                       1041 ; rs232cmd.c  137       char code ADJCmdTxt[]                                   = "ADJ";
0001BA 41444A55535400  1042         DB      041H,044H,04AH,055H,053H,054H,000H
                       1045         PUBLIC  _ADJCmdTxt
0001C1                 1046 _ADJCmdTxt:
                       1047 ; rs232cmd.c  138       
                       1048 ; rs232cmd.c  139       char code BBCmdTxt[]                                    = "BB";
0001C1 41444A00        1049         DB      041H,044H,04AH,000H
                       1052         PUBLIC  _BBCmdTxt
0001C5                 1053 _BBCmdTxt:
                       1054 ; rs232cmd.c  140       char code TSGENERATORCmdTxt[]           = "TSGENERATOR";
0001C5 424200          1055         DB      042H,042H,000H
                       1058         PUBLIC  _TSGENERATORCmdTxt
0001C8                 1059 _TSGENERATORCmdTxt:
                       1060 ; rs232cmd.c  141       char code TSGCmdTxt[]                                   = "TSG";
0001C8 545347454E4552  1061         DB      054H,053H,047H,045H,04EH,045H,052H,041H,054H,04FH,052H,000H
       41544F5200           
                       1064         PUBLIC  _TSGCmdTxt
0001D4                 1065 _TSGCmdTxt:
                       1066 ; rs232cmd.c  142       char code AUDIOCmdTxt[]                                 = "AUDIO";
0001D4 54534700        1067         DB      054H,053H,047H,000H
                       1070         PUBLIC  _AUDIOCmdTxt
0001D8                 1071 _AUDIOCmdTxt:
                       1072 ; rs232cmd.c  143       char code AUDCmdTxt[]                                   = "AUD";
0001D8 415544494F00    1073         DB      041H,055H,044H,049H,04FH,000H
                       1076         PUBLIC  _AUDCmdTxt
0001DE                 1077 _AUDCmdTxt:
                       1078 ; rs232cmd.c  144       
                       1079 ; rs232cmd.c  145       char code ANALOGCmdTxt[]                                = "ANALOG";
0001DE 41554400        1080         DB      041H,055H,044H,000H
                       1083         PUBLIC  _ANALOGCmdTxt
0001E2                 1084 _ANALOGCmdTxt:
                       1085 ; rs232cmd.c  146       char code ANALCmdTxt[]                                  = "ANAL";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
0001E2 414E414C4F4700  1086         DB      041H,04EH,041H,04CH,04FH,047H,000H
                       1089         PUBLIC  _ANALCmdTxt
0001E9                 1090 _ANALCmdTxt:
                       1091 ; rs232cmd.c  147       
                       1092 ; rs232cmd.c  148       char code PATTERNCmdTxt[]                               = "PATTERN";
0001E9 414E414C00      1093         DB      041H,04EH,041H,04CH,000H
                       1096         PUBLIC  _PATTERNCmdTxt
0001EE                 1097 _PATTERNCmdTxt:
                       1098 ; rs232cmd.c  149       char code PATTCmdTxt[]                                  = "PATT";
0001EE 5041545445524E  1099         DB      050H,041H,054H,054H,045H,052H,04EH,000H
       00                   
                       1102         PUBLIC  _PATTCmdTxt
0001F6                 1103 _PATTCmdTxt:
                       1104 ; rs232cmd.c  150       char code EMBAUDIOCmdTxt[]                      = "EMBAUDIO";
0001F6 5041545400      1105         DB      050H,041H,054H,054H,000H
                       1108         PUBLIC  _EMBAUDIOCmdTxt
0001FB                 1109 _EMBAUDIOCmdTxt:
                       1110 ; rs232cmd.c  151       char code EMBCmdTxt[]                                   = "EMB";
0001FB 454D4241554449  1111         DB      045H,04DH,042H,041H,055H,044H,049H,04FH,000H
       4F00                 
                       1114         PUBLIC  _EMBCmdTxt
000204                 1115 _EMBCmdTxt:
                       1116 ; rs232cmd.c  152       
                       1117 ; rs232cmd.c  153       char code AESEBUCmdTxt[]                                = "AESEBU";
000204 454D4200        1118         DB      045H,04DH,042H,000H
                       1121         PUBLIC  _AESEBUCmdTxt
000208                 1122 _AESEBUCmdTxt:
                       1123 ; rs232cmd.c  154       char code AESCmdTxt[]                                   = "AES";
000208 41455345425500  1124         DB      041H,045H,053H,045H,042H,055H,000H
                       1127         PUBLIC  _AESCmdTxt
00020F                 1128 _AESCmdTxt:
                       1129 ; rs232cmd.c  155       
                       1130 ; rs232cmd.c  156       char code SCHPHASECmdTxt[]                      = "SCHPHASE";
00020F 41455300        1131         DB      041H,045H,053H,000H
                       1134         PUBLIC  _SCHPHASECmdTxt
000213                 1135 _SCHPHASECmdTxt:
                       1136 ; rs232cmd.c  157       char code SCHPCmdTxt[]                                  = "SCHP";
000213 53434850484153  1137         DB      053H,043H,048H,050H,048H,041H,053H,045H,000H
       4500                 
                       1140         PUBLIC  _SCHPCmdTxt
00021C                 1141 _SCHPCmdTxt:
                       1142 ; rs232cmd.c  158       
                       1143 ; rs232cmd.c  159       char code SIGNALCmdTxt[]                                = "SIGNAL";
00021C 5343485000      1144         DB      053H,043H,048H,050H,000H
                       1147         PUBLIC  _SIGNALCmdTxt
000221                 1148 _SIGNALCmdTxt:
                       1149 ; rs232cmd.c  160       char code SIGNCmdTxt[]                                  = "SIGN";
000221 5349474E414C00  1150         DB      053H,049H,047H,04EH,041H,04CH,000H
                       1153         PUBLIC  _SIGNCmdTxt
000228                 1154 _SIGNCmdTxt:
                       1155 ; rs232cmd.c  161       char code LEVELCmdTxt[]                                 = "LEVEL";
000228 5349474E00      1156         DB      053H,049H,047H,04EH,000H
                       1159         PUBLIC  _LEVELCmdTxt
00022D                 1160 _LEVELCmdTxt:
                       1161 ; rs232cmd.c  162       char code LEVCmdTxt[]                                   = "LEV";
00022D 4C4556454C00    1162         DB      04CH,045H,056H,045H,04CH,000H
                       1165         PUBLIC  _LEVCmdTxt
000233                 1166 _LEVCmdTxt:
                       1167 ; rs232cmd.c  163       char code EDHINSERTCmdTxt[]                     = "EDHINSERT";
000233 4C455600        1168         DB      04CH,045H,056H,000H
                       1171         PUBLIC  _EDHINSERTCmdTxt
000237                 1172 _EDHINSERTCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
                       1173 ; rs232cmd.c  164       char code EDHCmdTxt[]                                   = "EDH";
000237 454448494E5345  1174         DB      045H,044H,048H,049H,04EH,053H,045H,052H,054H,000H
       525400               
                       1177         PUBLIC  _EDHCmdTxt
000241                 1178 _EDHCmdTxt:
                       1179 ; rs232cmd.c  165       
                       1180 ; rs232cmd.c  166       char code TIMINGCmdTxt[]                                = "TIMING";
000241 45444800        1181         DB      045H,044H,048H,000H
                       1184         PUBLIC  _TIMINGCmdTxt
000245                 1185 _TIMINGCmdTxt:
                       1186 ; rs232cmd.c  167       char code TIMCmdTxt[]                                   = "TIM";
000245 54494D494E4700  1187         DB      054H,049H,04DH,049H,04EH,047H,000H
                       1190         PUBLIC  _TIMCmdTxt
00024C                 1191 _TIMCmdTxt:
                       1192 ; rs232cmd.c  168       
                       1193 ; rs232cmd.c  169       char code WORDCLOCKCmdTxt[]                     = "WORDCLOCK";
00024C 54494D00        1194         DB      054H,049H,04DH,000H
                       1197         PUBLIC  _WORDCLOCKCmdTxt
000250                 1198 _WORDCLOCKCmdTxt:
                       1199 ; rs232cmd.c  170       char code WORDCmdTxt[]                                  = "WORD";
000250 574F5244434C4F  1200         DB      057H,04FH,052H,044H,043H,04CH,04FH,043H,04BH,000H
       434B00               
                       1203         PUBLIC  _WORDCmdTxt
00025A                 1204 _WORDCmdTxt:
                       1205 ; rs232cmd.c  171       
                       1206 ; rs232cmd.c  172       char code CLICKCmdTxt[]                                 = "CLICK";
00025A 574F524400      1207         DB      057H,04FH,052H,044H,000H
                       1210         PUBLIC  _CLICKCmdTxt
00025F                 1211 _CLICKCmdTxt:
                       1212 ; rs232cmd.c  173       char code CLICCmdTxt[]                                  = "CLIC";
00025F 434C49434B00    1213         DB      043H,04CH,049H,043H,04BH,000H
                       1216         PUBLIC  _CLICCmdTxt
000265                 1217 _CLICCmdTxt:
                       1218 ; rs232cmd.c  174       
                       1219 ; rs232cmd.c  175       char code PASSWORDCmdTxt[]                      = "PASSWORD";
000265 434C494300      1220         DB      043H,04CH,049H,043H,000H
                       1223         PUBLIC  _PASSWORDCmdTxt
00026A                 1224 _PASSWORDCmdTxt:
                       1225 ; rs232cmd.c  176       char code PASSCmdTxt[]                                  = "PASS";
00026A 50415353574F52  1226         DB      050H,041H,053H,053H,057H,04FH,052H,044H,000H
       4400                 
                       1229         PUBLIC  _PASSCmdTxt
000273                 1230 _PASSCmdTxt:
                       1231 ; rs232cmd.c  177       char code V24CIRCUITCmdTxt[]                    = "V24CIRCUIT";
000273 5041535300      1232         DB      050H,041H,053H,053H,000H
                       1235         PUBLIC  _V24CIRCUITCmdTxt
000278                 1236 _V24CIRCUITCmdTxt:
                       1237 ; rs232cmd.c  178       char code V24CCmdTxt[]                                  = "V24C";
000278 56323443495243  1238         DB      056H,032H,034H,043H,049H,052H,043H,055H,049H,054H,000H
       55495400             
                       1241         PUBLIC  _V24CCmdTxt
000283                 1242 _V24CCmdTxt:
                       1243 ; rs232cmd.c  179       char code CHECKSUMCmdTxt[]                      = "CHECKSUM";
000283 5632344300      1244         DB      056H,032H,034H,043H,000H
                       1247         PUBLIC  _CHECKSUMCmdTxt
000288                 1248 _CHECKSUMCmdTxt:
                       1249 ; rs232cmd.c  180       char code CHECCmdTxt[]                                  = "CHEC";
000288 434845434B5355  1250         DB      043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       4D00                 
                       1253         PUBLIC  _CHECCmdTxt
000291                 1254 _CHECCmdTxt:
                       1255 ; rs232cmd.c  181       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
                       1256 ; rs232cmd.c  182       char code CODECmdTxt[]                                  = "CODE";
000291 4348454300      1257         DB      043H,048H,045H,043H,000H
                       1260         PUBLIC  _CODECmdTxt
000296                 1261 _CODECmdTxt:
                       1262 ; rs232cmd.c  183       char code RANGECmdTxt[]                                 = "RANGE";
000296 434F444500      1263         DB      043H,04FH,044H,045H,000H
                       1266         PUBLIC  _RANGECmdTxt
00029B                 1267 _RANGECmdTxt:
                       1268 ; rs232cmd.c  184       char code RANGCmdTxt[]                                  = "RANG";
00029B 52414E474500    1269         DB      052H,041H,04EH,047H,045H,000H
                       1272         PUBLIC  _RANGCmdTxt
0002A1                 1273 _RANGCmdTxt:
                       1274 ; rs232cmd.c  185       char code COMMANDCmdTxt[]                               = "COMMAND";
0002A1 52414E4700      1275         DB      052H,041H,04EH,047H,000H
                       1278         PUBLIC  _COMMANDCmdTxt
0002A6                 1279 _COMMANDCmdTxt:
                       1280 ; rs232cmd.c  186       char code COMMCmdTxt[]                                  = "COMM";
0002A6 434F4D4D414E44  1281         DB      043H,04FH,04DH,04DH,041H,04EH,044H,000H
       00                   
                       1284         PUBLIC  _COMMCmdTxt
0002AE                 1285 _COMMCmdTxt:
                       1286 ; rs232cmd.c  187       char code TRANSPARENTCmdTxt[]           = "TRANSPARENT";
0002AE 434F4D4D00      1287         DB      043H,04FH,04DH,04DH,000H
                       1290         PUBLIC  _TRANSPARENTCmdTxt
0002B3                 1291 _TRANSPARENTCmdTxt:
                       1292 ; rs232cmd.c  188       char code TRANCmdTxt[]                                  = "TRAN";
0002B3 5452414E535041  1293         DB      054H,052H,041H,04EH,053H,050H,041H,052H,045H,04EH,054H,000H
       52454E5400           
                       1296         PUBLIC  _TRANCmdTxt
0002BF                 1297 _TRANCmdTxt:
                       1298 ; rs232cmd.c  189       
                       1299 ; rs232cmd.c  190       char code MAINBOARDCmdTxt[]                     = "MAINBOARD";
0002BF 5452414E00      1300         DB      054H,052H,041H,04EH,000H
                       1303         PUBLIC  _MAINBOARDCmdTxt
0002C4                 1304 _MAINBOARDCmdTxt:
                       1305 ; rs232cmd.c  191       char code MAINCmdTxt[]                                  = "MAIN";
0002C4 4D41494E424F41  1306         DB      04DH,041H,049H,04EH,042H,04FH,041H,052H,044H,000H
       524400               
                       1309         PUBLIC  _MAINCmdTxt
0002CE                 1310 _MAINCmdTxt:
                       1311 ; rs232cmd.c  192       char code COMPANYCmdTxt[]                               = "COMPANY";
0002CE 4D41494E00      1312         DB      04DH,041H,049H,04EH,000H
                       1315         PUBLIC  _COMPANYCmdTxt
0002D3                 1316 _COMPANYCmdTxt:
                       1317 ; rs232cmd.c  193       char code COMPCmdTxt[]                                  = "COMP";
0002D3 434F4D50414E59  1318         DB      043H,04FH,04DH,050H,041H,04EH,059H,000H
       00                   
                       1321         PUBLIC  _COMPCmdTxt
0002DB                 1322 _COMPCmdTxt:
                       1323 ; rs232cmd.c  194       char code TYPECmdTxt[]                                  = "TYPE";
0002DB 434F4D5000      1324         DB      043H,04FH,04DH,050H,000H
                       1327         PUBLIC  _TYPECmdTxt
0002E0                 1328 _TYPECmdTxt:
                       1329 ; rs232cmd.c  195       char code KUNUMBERCmdTxt[]                      = "KUNUMBER";
0002E0 5459504500      1330         DB      054H,059H,050H,045H,000H
                       1333         PUBLIC  _KUNUMBERCmdTxt
0002E5                 1334 _KUNUMBERCmdTxt:
                       1335 ; rs232cmd.c  196       char code KUNCmdTxt[]                                   = "KUN";
0002E5 4B554E554D4245  1336         DB      04BH,055H,04EH,055H,04DH,042H,045H,052H,000H
       5200                 
                       1339         PUBLIC  _KUNCmdTxt
0002EE                 1340 _KUNCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
                       1341 ; rs232cmd.c  197       char code SWREVISIONCmdTxt[]                    = "SWREVISION";
0002EE 4B554E00        1342         DB      04BH,055H,04EH,000H
                       1345         PUBLIC  _SWREVISIONCmdTxt
0002F2                 1346 _SWREVISIONCmdTxt:
                       1347 ; rs232cmd.c  198       char code SWRCmdTxt[]                                   = "SWR";
0002F2 53575245564953  1348         DB      053H,057H,052H,045H,056H,049H,053H,049H,04FH,04EH,000H
       494F4E00             
                       1351         PUBLIC  _SWRCmdTxt
0002FD                 1352 _SWRCmdTxt:
                       1353 ; rs232cmd.c  199       
                       1354 ; rs232cmd.c  200       char code NCCmdTxt[]                                    = "NC";
0002FD 53575200        1355         DB      053H,057H,052H,000H
                       1358         PUBLIC  _NCCmdTxt
000301                 1359 _NCCmdTxt:
                       1360 ; rs232cmd.c  201       char code FMSDATECmdTxt[]                               = "FMSDATE";
000301 4E4300          1361         DB      04EH,043H,000H
                       1364         PUBLIC  _FMSDATECmdTxt
000304                 1365 _FMSDATECmdTxt:
                       1366 ; rs232cmd.c  202       char code FMSDCmdTxt[]                                  = "FMSD";
000304 464D5344415445  1367         DB      046H,04DH,053H,044H,041H,054H,045H,000H
       00                   
                       1370         PUBLIC  _FMSDCmdTxt
00030C                 1371 _FMSDCmdTxt:
                       1372 ; rs232cmd.c  203       char code PRODUCTIONCmdTxt[]                    = "PRODUCTION";
00030C 464D534400      1373         DB      046H,04DH,053H,044H,000H
                       1376         PUBLIC  _PRODUCTIONCmdTxt
000311                 1377 _PRODUCTIONCmdTxt:
                       1378 ; rs232cmd.c  204       char code PRODCmdTxt[]                                  = "PROD";
000311 50524F44554354  1379         DB      050H,052H,04FH,044H,055H,043H,054H,049H,04FH,04EH,000H
       494F4E00             
                       1382         PUBLIC  _PRODCmdTxt
00031C                 1383 _PRODCmdTxt:
                       1384 ; rs232cmd.c  205       char code UPDATECmdTxt[]                                = "UPDATE";
00031C 50524F4400      1385         DB      050H,052H,04FH,044H,000H
                       1388         PUBLIC  _UPDATECmdTxt
000321                 1389 _UPDATECmdTxt:
                       1390 ; rs232cmd.c  206       char code UPDCmdTxt[]                                   = "UPD";
000321 55504441544500  1391         DB      055H,050H,044H,041H,054H,045H,000H
                       1394         PUBLIC  _UPDCmdTxt
000328                 1395 _UPDCmdTxt:
                       1396 ; rs232cmd.c  207       
                       1397 ; rs232cmd.c  208       char code FREFERENCECmdTxt[]                    = "FREFERENCE";
000328 55504400        1398         DB      055H,050H,044H,000H
                       1401         PUBLIC  _FREFERENCECmdTxt
00032C                 1402 _FREFERENCECmdTxt:
                       1403 ; rs232cmd.c  209       char code FREFCmdTxt[]                                  = "FREF";
00032C 46524546455245  1404         DB      046H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1407         PUBLIC  _FREFCmdTxt
000337                 1408 _FREFCmdTxt:
                       1409 ; rs232cmd.c  210       char code DACCmdTxt[]                                   = "DAC";
000337 4652454600      1410         DB      046H,052H,045H,046H,000H
                       1413         PUBLIC  _DACCmdTxt
00033C                 1414 _DACCmdTxt:
                       1415 ; rs232cmd.c  211       char code UREFERENCECmdTxt[]                    = "UREFERENCE";
00033C 44414300        1416         DB      044H,041H,043H,000H
                       1419         PUBLIC  _UREFERENCECmdTxt
000340                 1420 _UREFERENCECmdTxt:
                       1421 ; rs232cmd.c  212       char code UREFCmdTxt[]                                  = "UREF";
000340 55524546455245  1422         DB      055H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1425         PUBLIC  _UREFCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
00034B                 1426 _UREFCmdTxt:
                       1427 ; rs232cmd.c  213       char code HPHZEROCmdTxt[]                               = "HPHZERO";
00034B 5552454600      1428         DB      055H,052H,045H,046H,000H
                       1431         PUBLIC  _HPHZEROCmdTxt
000350                 1432 _HPHZEROCmdTxt:
                       1433 ; rs232cmd.c  214       char code HPHZCmdTxt[]                                  = "HPHZ";
000350 4850485A45524F  1434         DB      048H,050H,048H,05AH,045H,052H,04FH,000H
       00                   
                       1437         PUBLIC  _HPHZCmdTxt
000358                 1438 _HPHZCmdTxt:
                       1439 ; rs232cmd.c  215       char code PHASECmdTxt[]                                 = "PHASE";
000358 4850485A00      1440         DB      048H,050H,048H,05AH,000H
                       1443         PUBLIC  _PHASECmdTxt
00035D                 1444 _PHASECmdTxt:
                       1445 ; rs232cmd.c  216       char code PHASCmdTxt[]                                  = "PHAS";
00035D 504841534500    1446         DB      050H,048H,041H,053H,045H,000H
                       1449         PUBLIC  _PHASCmdTxt
000363                 1450 _PHASCmdTxt:
                       1451 ; rs232cmd.c  217       
                       1452 ; rs232cmd.c  218       char code AGAINCmdTxt[]                                 = "AGAIN";
000363 5048415300      1453         DB      050H,048H,041H,053H,000H
                       1456         PUBLIC  _AGAINCmdTxt
000368                 1457 _AGAINCmdTxt:
                       1458 ; rs232cmd.c  219       char code AGACmdTxt[]                                   = "AGA";
000368 414741494E00    1459         DB      041H,047H,041H,049H,04EH,000H
                       1462         PUBLIC  _AGACmdTxt
00036E                 1463 _AGACmdTxt:
                       1464 ; rs232cmd.c  220       char code CGAINCmdTxt[]                                 = "CGAIN";
00036E 41474100        1465         DB      041H,047H,041H,000H
                       1468         PUBLIC  _CGAINCmdTxt
000372                 1469 _CGAINCmdTxt:
                       1470 ; rs232cmd.c  221       char code CGACmdTxt[]                                   = "CGA";
000372 434741494E00    1471         DB      043H,047H,041H,049H,04EH,000H
                       1474         PUBLIC  _CGACmdTxt
000378                 1475 _CGACmdTxt:
                       1476 ; rs232cmd.c  222       char code ALEVELCmdTxt[]                                = "ALEVEL";
000378 43474100        1477         DB      043H,047H,041H,000H
                       1480         PUBLIC  _ALEVELCmdTxt
00037C                 1481 _ALEVELCmdTxt:
                       1482 ; rs232cmd.c  223       char code ALEVCmdTxt[]                                  = "ALEV";
00037C 414C4556454C00  1483         DB      041H,04CH,045H,056H,045H,04CH,000H
                       1486         PUBLIC  _ALEVCmdTxt
000383                 1487 _ALEVCmdTxt:
                       1488 ; rs232cmd.c  224       
                       1489 ; rs232cmd.c  225       char code PLDCmdTxt[]                                   = "PLD";
000383 414C455600      1490         DB      041H,04CH,045H,056H,000H
                       1493         PUBLIC  _PLDCmdTxt
000388                 1494 _PLDCmdTxt:
                       1495 ; rs232cmd.c  226       char code TCXOCmdTxt[]                                  = "TCXO";
000388 504C4400        1496         DB      050H,04CH,044H,000H
                       1499         PUBLIC  _TCXOCmdTxt
00038C                 1500 _TCXOCmdTxt:
                       1501 ; rs232cmd.c  227       char code MMCHIPCmdTxt[]                                = "MMCHIP";
00038C 5443584F00      1502         DB      054H,043H,058H,04FH,000H
                       1505         PUBLIC  _MMCHIPCmdTxt
000391                 1506 _MMCHIPCmdTxt:
                       1507 ; rs232cmd.c  228       char code MMCHCmdTxt[]                                  = "MMCH";
000391 4D4D4348495000  1508         DB      04DH,04DH,043H,048H,049H,050H,000H
                       1511         PUBLIC  _MMCHCmdTxt
000398                 1512 _MMCHCmdTxt:
                       1513 ; rs232cmd.c  229       
                       1514 ; rs232cmd.c  230       char code SAVEParTxt[]                                  = "SAVE";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
000398 4D4D434800      1515         DB      04DH,04DH,043H,048H,000H
                       1518         PUBLIC  _SAVEParTxt
00039D                 1519 _SAVEParTxt:
                       1520 ; rs232cmd.c  231       
                       1521 ; rs232cmd.c  232       char code INTERNALParTxt[]                      = "INTERNAL";
00039D 5341564500      1522         DB      053H,041H,056H,045H,000H
                       1525         PUBLIC  _INTERNALParTxt
0003A2                 1526 _INTERNALParTxt:
                       1527 ; rs232cmd.c  233       char code INTParTxt[]                                   = "INT";
0003A2 494E5445524E41  1528         DB      049H,04EH,054H,045H,052H,04EH,041H,04CH,000H
       4C00                 
                       1531         PUBLIC  _INTParTxt
0003AB                 1532 _INTParTxt:
                       1533 ; rs232cmd.c  234       char code PALBURSTParTxt[]                      = "PALBURST";
0003AB 494E5400        1534         DB      049H,04EH,054H,000H
                       1537         PUBLIC  _PALBURSTParTxt
0003AF                 1538 _PALBURSTParTxt:
                       1539 ; rs232cmd.c  235       char code PALBParTxt[]                                  = "PALB";
0003AF 50414C42555253  1540         DB      050H,041H,04CH,042H,055H,052H,053H,054H,000H
       5400                 
                       1543         PUBLIC  _PALBParTxt
0003B8                 1544 _PALBParTxt:
                       1545 ; rs232cmd.c  236       char code NTSCBURSTParTxt[]                     = "NTSCBURST";
0003B8 50414C4200      1546         DB      050H,041H,04CH,042H,000H
                       1549         PUBLIC  _NTSCBURSTParTxt
0003BD                 1550 _NTSCBURSTParTxt:
                       1551 ; rs232cmd.c  237       char code NTSCParTxt[]                                  = "NTSC";
0003BD 4E545343425552  1552         DB      04EH,054H,053H,043H,042H,055H,052H,053H,054H,000H
       535400               
                       1555         PUBLIC  _NTSCParTxt
0003C7                 1556 _NTSCParTxt:
                       1557 ; rs232cmd.c  238       
                       1558 ; rs232cmd.c  239       char code F10MHzParTxt[]                                = "F10MHZ";
0003C7 4E54534300      1559         DB      04EH,054H,053H,043H,000H
                       1562         PUBLIC  _F10MHzParTxt
0003CC                 1563 _F10MHzParTxt:
                       1564 ; rs232cmd.c  240       
                       1565 ; rs232cmd.c  241       char code PALParTxt[]                                   = "PAL";
0003CC 4631304D485A00  1566         DB      046H,031H,030H,04DH,048H,05AH,000H
                       1569         PUBLIC  _PALParTxt
0003D3                 1570 _PALParTxt:
                       1571 ; rs232cmd.c  242       char code PAL_IDParTxt[]                                = "PAL_ID";
0003D3 50414C00        1572         DB      050H,041H,04CH,000H
                       1575         PUBLIC  _PAL_IDParTxt
0003D7                 1576 _PAL_IDParTxt:
                       1577 ; rs232cmd.c  243       
                       1578 ; rs232cmd.c  244       char code CBSMPTEParTxt[]                               = "CBSMPTE";     
                                            // SMPTE Colorbar
0003D7 50414C5F494400  1579         DB      050H,041H,04CH,05FH,049H,044H,000H
                       1582         PUBLIC  _CBSMPTEParTxt
0003DE                 1583 _CBSMPTEParTxt:
                       1584 ; rs232cmd.c  245       char code CBSMParTxt[]                                  = "CBSM";        
                                                            
0003DE 4342534D505445  1585         DB      043H,042H,053H,04DH,050H,054H,045H,000H
       00                   
                       1588         PUBLIC  _CBSMParTxt
0003E6                 1589 _CBSMParTxt:
                       1590 ; rs232cmd.c  246       char code CBEBUParTxt[]                                 = "CBEBU";       
                                    // EBU Colorbar
0003E6 4342534D00      1591         DB      043H,042H,053H,04DH,000H
                       1594         PUBLIC  _CBEBUParTxt
0003EB                 1595 _CBEBUParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
                       1596 ; rs232cmd.c  247       char code CBEBParTxt[]                                  = "CBEB";
0003EB 434245425500    1597         DB      043H,042H,045H,042H,055H,000H
                       1600         PUBLIC  _CBEBParTxt
0003F1                 1601 _CBEBParTxt:
                       1602 ; rs232cmd.c  248       char code CBFCCParTxt[]                                 = "CBFCC";       
                                                    // FCC Colorbar
0003F1 4342454200      1603         DB      043H,042H,045H,042H,000H
                       1606         PUBLIC  _CBFCCParTxt
0003F6                 1607 _CBFCCParTxt:
                       1608 ; rs232cmd.c  249       char code CBFCParTxt[]                                  = "CBFC";
0003F6 434246434300    1609         DB      043H,042H,046H,043H,043H,000H
                       1612         PUBLIC  _CBFCParTxt
0003FC                 1613 _CBFCParTxt:
                       1614 ; rs232cmd.c  250       char code CBEBU8ParTxt[]                                = "CBEBU8";      
                                                    // Colorbar ITU801
0003FC 4342464300      1615         DB      043H,042H,046H,043H,000H
                       1618         PUBLIC  _CBEBU8ParTxt
000401                 1619 _CBEBU8ParTxt:
                       1620 ; rs232cmd.c  251       char code CBEB8ParTxt[]                                 = "CBEB8";
000401 43424542553800  1621         DB      043H,042H,045H,042H,055H,038H,000H
                       1624         PUBLIC  _CBEB8ParTxt
000408                 1625 _CBEB8ParTxt:
                       1626 ; rs232cmd.c  252       char code CB100ParTxt[]                                 = "CB100";       
                                                    // 100% Colorbar
000408 434245423800    1627         DB      043H,042H,045H,042H,038H,000H
                       1630         PUBLIC  _CB100ParTxt
00040E                 1631 _CB100ParTxt:
                       1632 ; rs232cmd.c  253       char code CBGREY75ParTxt[]                      = "CBGREY75";            
                                    // Colorbar + 75% Grey
00040E 434231303000    1633         DB      043H,042H,031H,030H,030H,000H
                       1636         PUBLIC  _CBGREY75ParTxt
000414                 1637 _CBGREY75ParTxt:
                       1638 ; rs232cmd.c  254       char code CBGR75ParTxt[]                                = "CBGR75";
000414 43424752455937  1639         DB      043H,042H,047H,052H,045H,059H,037H,035H,000H
       3500                 
                       1642         PUBLIC  _CBGR75ParTxt
00041D                 1643 _CBGR75ParTxt:
                       1644 ; rs232cmd.c  255       char code CBRED75ParTxt[]                       = "CBRED75";             
                                    // Colorbar + 75% Red
00041D 43424752373500  1645         DB      043H,042H,047H,052H,037H,035H,000H
                       1648         PUBLIC  _CBRED75ParTxt
000424                 1649 _CBRED75ParTxt:
                       1650 ; rs232cmd.c  256       char code CBR75ParTxt[]                                 = "CBR75";
000424 43425245443735  1651         DB      043H,042H,052H,045H,044H,037H,035H,000H
       00                   
                       1654         PUBLIC  _CBR75ParTxt
00042C                 1655 _CBR75ParTxt:
                       1656 ; rs232cmd.c  257       char code RED75ParTxt[]                                 = "RED75";       
                                                    // 75% Red
00042C 434252373500    1657         DB      043H,042H,052H,037H,035H,000H
                       1660         PUBLIC  _RED75ParTxt
000432                 1661 _RED75ParTxt:
                       1662 ; rs232cmd.c  258       
                       1663 ; rs232cmd.c  259       char code MULTIBURSTParTxt[]                    = "MULTIBURST";         /
                            / Multi burst
000432 524544373500    1664         DB      052H,045H,044H,037H,035H,000H
                       1667         PUBLIC  _MULTIBURSTParTxt
000438                 1668 _MULTIBURSTParTxt:
                       1669 ; rs232cmd.c  260       char code MULTParTxt[]                                  = "MULT";
000438 4D554C54494255  1670         DB      04DH,055H,04CH,054H,049H,042H,055H,052H,053H,054H,000H
       52535400             
                       1673         PUBLIC  _MULTParTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
000443                 1674 _MULTParTxt:
                       1675 ; rs232cmd.c  261       char code CCIR18ParTxt[]                                = "CCIR18";
000443 4D554C5400      1676         DB      04DH,055H,04CH,054H,000H
                       1679         PUBLIC  _CCIR18ParTxt
000448                 1680 _CCIR18ParTxt:
                       1681 ; rs232cmd.c  262       char code WIN10ParTxt[]                                 = "WIN10";       
                                                    // Window 10%
000448 43434952313800  1682         DB      043H,043H,049H,052H,031H,038H,000H
                       1685         PUBLIC  _WIN10ParTxt
00044F                 1686 _WIN10ParTxt:
                       1687 ; rs232cmd.c  263       char code WIN15ParTxt[]                                 = "WIN15";       
                                                    // Window 15%
00044F 57494E313000    1688         DB      057H,049H,04EH,031H,030H,000H
                       1691         PUBLIC  _WIN15ParTxt
000455                 1692 _WIN15ParTxt:
                       1693 ; rs232cmd.c  264       char code WIN20ParTxt[]                                 = "WIN20";       
                                                    // Window 20%
000455 57494E313500    1694         DB      057H,049H,04EH,031H,035H,000H
                       1697         PUBLIC  _WIN20ParTxt
00045B                 1698 _WIN20ParTxt:
                       1699 ; rs232cmd.c  265       char code WIN100ParTxt[]                                = "WIN100";      
                                                    // Window 100%
00045B 57494E323000    1700         DB      057H,049H,04EH,032H,030H,000H
                       1703         PUBLIC  _WIN100ParTxt
000461                 1704 _WIN100ParTxt:
                       1705 ; rs232cmd.c  266       char code BLWH15ParTxt[]                                = "BLWH15KHZ";   
                                            // 15kHz Bl/Wh
000461 57494E31303000  1706         DB      057H,049H,04EH,031H,030H,030H,000H
                       1709         PUBLIC  _BLWH15ParTxt
000468                 1710 _BLWH15ParTxt:
                       1711 ; rs232cmd.c  267       char code WHITE100ParTxt[]                      = "WHITE100";            
                                    // White 100%
000468 424C574831354B  1712         DB      042H,04CH,057H,048H,031H,035H,04BH,048H,05AH,000H
       485A00               
                       1715         PUBLIC  _WHITE100ParTxt
000472                 1716 _WHITE100ParTxt:
                       1717 ; rs232cmd.c  268       char code WHIT100ParTxt[]                               = "WHIT100";
000472 57484954453130  1718         DB      057H,048H,049H,054H,045H,031H,030H,030H,000H
       3000                 
                       1721         PUBLIC  _WHIT100ParTxt
00047B                 1722 _WHIT100ParTxt:
                       1723 ; rs232cmd.c  269       char code BLACKParTxt[]                                 = "BLACK";       
                                                    // Black
00047B 57484954313030  1724         DB      057H,048H,049H,054H,031H,030H,030H,000H
       00                   
                       1727         PUBLIC  _BLACKParTxt
000483                 1728 _BLACKParTxt:
                       1729 ; rs232cmd.c  270       char code BLACParTxt[]                                  = "BLAC";
000483 424C41434B00    1730         DB      042H,04CH,041H,043H,04BH,000H
                       1733         PUBLIC  _BLACParTxt
000489                 1734 _BLACParTxt:
                       1735 ; rs232cmd.c  271       
                       1736 ; rs232cmd.c  272       char code SDICHECKParTxt[]                      = "SDICHECK";            
                                    // Check field
000489 424C414300      1737         DB      042H,04CH,041H,043H,000H
                       1740         PUBLIC  _SDICHECKParTxt
00048E                 1741 _SDICHECKParTxt:
                       1742 ; rs232cmd.c  273       char code SDICParTxt[]                                  = "SDIC";
00048E 53444943484543  1743         DB      053H,044H,049H,043H,048H,045H,043H,04BH,000H
       4B00                 
                       1746         PUBLIC  _SDICParTxt
000497                 1747 _SDICParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
                       1748 ; rs232cmd.c  274       char code DGREYParTxt[]                                 = "DGREY";       
                                                    // Digital grey
000497 5344494300      1749         DB      053H,044H,049H,043H,000H
                       1752         PUBLIC  _DGREYParTxt
00049C                 1753 _DGREYParTxt:
                       1754 ; rs232cmd.c  275       char code DGRParTxt[]                                   = "DGR";
00049C 444752455900    1755         DB      044H,047H,052H,045H,059H,000H
                       1758         PUBLIC  _DGRParTxt
0004A2                 1759 _DGRParTxt:
                       1760 ; rs232cmd.c  276       char code STAIRCASE5ParTxt[]                    = "STAIRCASE5";         /
                            / 5-step staircase
0004A2 44475200        1761         DB      044H,047H,052H,000H
                       1764         PUBLIC  _STAIRCASE5ParTxt
0004A6                 1765 _STAIRCASE5ParTxt:
                       1766 ; rs232cmd.c  277       char code STA5ParTxt[]                                  = "STA5";
0004A6 53544149524341  1767         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,035H,000H
       53453500             
                       1770         PUBLIC  _STA5ParTxt
0004B1                 1771 _STA5ParTxt:
                       1772 ; rs232cmd.c  278       char code STAIRCASE10ParTxt[]           = "STAIRCASE10";                /
                            / 10-step staircase
0004B1 5354413500      1773         DB      053H,054H,041H,035H,000H
                       1776         PUBLIC  _STAIRCASE10ParTxt
0004B6                 1777 _STAIRCASE10ParTxt:
                       1778 ; rs232cmd.c  279       char code STA10ParTxt[]                                 = "STA10";
0004B6 53544149524341  1779         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,031H,030H,000H
       5345313000           
                       1782         PUBLIC  _STA10ParTxt
0004C2                 1783 _STA10ParTxt:
                       1784 ; rs232cmd.c  280       char code CROSSHATCHParTxt[]                    = "CROSSHATCH";         /
                            / Cross hatch
0004C2 535441313000    1785         DB      053H,054H,041H,031H,030H,000H
                       1788         PUBLIC  _CROSSHATCHParTxt
0004C8                 1789 _CROSSHATCHParTxt:
                       1790 ; rs232cmd.c  281       char code CROSParTxt[]                                  = "CROS";
0004C8 43524F53534841  1791         DB      043H,052H,04FH,053H,053H,048H,041H,054H,043H,048H,000H
       54434800             
                       1794         PUBLIC  _CROSParTxt
0004D3                 1795 _CROSParTxt:
                       1796 ; rs232cmd.c  282       char code PLUGEParTxt[]                                 = "PLUGE";       
                                                    // PLUGE
0004D3 43524F5300      1797         DB      043H,052H,04FH,053H,000H
                       1800         PUBLIC  _PLUGEParTxt
0004D8                 1801 _PLUGEParTxt:
                       1802 ; rs232cmd.c  283       char code PLUGParTxt[]                                  = "PLUG";
0004D8 504C55474500    1803         DB      050H,04CH,055H,047H,045H,000H
                       1806         PUBLIC  _PLUGParTxt
0004DE                 1807 _PLUGParTxt:
                       1808 ; rs232cmd.c  284       
                       1809 ; rs232cmd.c  285       char code ANALOGParTxt[]                                = "ANALOG";
0004DE 504C554700      1810         DB      050H,04CH,055H,047H,000H
                       1813         PUBLIC  _ANALOGParTxt
0004E3                 1814 _ANALOGParTxt:
                       1815 ; rs232cmd.c  286       char code ANALParTxt[]                                  = "ANAL";
0004E3 414E414C4F4700  1816         DB      041H,04EH,041H,04CH,04FH,047H,000H
                       1819         PUBLIC  _ANALParTxt
0004EA                 1820 _ANALParTxt:
                       1821 ; rs232cmd.c  287       char code AESEBUParTxt[]                                = "AESEBU";
0004EA 414E414C00      1822         DB      041H,04EH,041H,04CH,000H
                       1825         PUBLIC  _AESEBUParTxt
0004EF                 1826 _AESEBUParTxt:
                       1827 ; rs232cmd.c  288       char code AESParTxt[]                                   = "AES";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
0004EF 41455345425500  1828         DB      041H,045H,053H,045H,042H,055H,000H
                       1831         PUBLIC  _AESParTxt
0004F6                 1832 _AESParTxt:
                       1833 ; rs232cmd.c  289       
                       1834 ; rs232cmd.c  290       char code F441KHZParTxt[]                               = "F441KHZ";
0004F6 41455300        1835         DB      041H,045H,053H,000H
                       1838         PUBLIC  _F441KHZParTxt
0004FA                 1839 _F441KHZParTxt:
                       1840 ; rs232cmd.c  291       char code F48KHZParTxt[]                                = "F48KHZ";
0004FA 463434314B485A  1841         DB      046H,034H,034H,031H,04BH,048H,05AH,000H
       00                   
                       1844         PUBLIC  _F48KHZParTxt
000502                 1845 _F48KHZParTxt:
                       1846 ; rs232cmd.c  292       char code F45MHZParTxt[]                                = "F45MHZ";
000502 4634384B485A00  1847         DB      046H,034H,038H,04BH,048H,05AH,000H
                       1850         PUBLIC  _F45MHZParTxt
000509                 1851 _F45MHZParTxt:
                       1852 ; rs232cmd.c  293       
                       1853 ; rs232cmd.c  294       char code S500HZParTxt[]                                = "S500HZ";      
                                                    // Stereo 500 Hz
000509 4634354D485A00  1854         DB      046H,034H,035H,04DH,048H,05AH,000H
                       1857         PUBLIC  _S500HZParTxt
000510                 1858 _S500HZParTxt:
                       1859 ; rs232cmd.c  295       char code S1KHZParTxt[]                                 = "S1KHZ";       
                                            // Stereo 1 kHz
000510 53353030485A00  1860         DB      053H,035H,030H,030H,048H,05AH,000H
                       1863         PUBLIC  _S1KHZParTxt
000517                 1864 _S1KHZParTxt:
                       1865 ; rs232cmd.c  296       char code SEBU1KHZParTxt[]                              = "SEBU1KHZ";    
                                            // Stereo EBU 1 kHz
000517 53314B485A00    1866         DB      053H,031H,04BH,048H,05AH,000H
                       1869         PUBLIC  _SEBU1KHZParTxt
00051D                 1870 _SEBU1KHZParTxt:
                       1871 ; rs232cmd.c  297       char code S8KHZParTxt[]                                 = "S8KHZ";       
                                                    // Stereo 8 kHz
00051D 53454255314B48  1872         DB      053H,045H,042H,055H,031H,04BH,048H,05AH,000H
       5A00                 
                       1875         PUBLIC  _S8KHZParTxt
000526                 1876 _S8KHZParTxt:
                       1877 ; rs232cmd.c  298       
                       1878 ; rs232cmd.c  299       char code SILENCEParTxt[]                               = "SILENCE";
000526 53384B485A00    1879         DB      053H,038H,04BH,048H,05AH,000H
                       1882         PUBLIC  _SILENCEParTxt
00052C                 1883 _SILENCEParTxt:
                       1884 ; rs232cmd.c  300       char code SILParTxt[]                                   = "SIL";
00052C 53494C454E4345  1885         DB      053H,049H,04CH,045H,04EH,043H,045H,000H
       00                   
                       1888         PUBLIC  _SILParTxt
000534                 1889 _SILParTxt:
                       1890 ; rs232cmd.c  301       
                       1891 ; rs232cmd.c  302       char code DMYParTxt[]                                   = "DMY";
000534 53494C00        1892         DB      053H,049H,04CH,000H
                       1895         PUBLIC  _DMYParTxt
000538                 1896 _DMYParTxt:
                       1897 ; rs232cmd.c  303       char code MDYParTxt[]                                   = "MDY";
000538 444D5900        1898         DB      044H,04DH,059H,000H
                       1901         PUBLIC  _MDYParTxt
00053C                 1902 _MDYParTxt:
                       1903 ; rs232cmd.c  304       char code YMDParTxt[]                                   = "YMD";
00053C 4D445900        1904         DB      04DH,044H,059H,000H
                       1907         PUBLIC  _YMDParTxt
000540                 1908 _YMDParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
                       1909 ; rs232cmd.c  305       
                       1910 ; rs232cmd.c  306       char code BBParTxt[]                                    = "BB";
000540 594D4400        1911         DB      059H,04DH,044H,000H
                       1914         PUBLIC  _BBParTxt
000544                 1915 _BBParTxt:
                       1916 ; rs232cmd.c  307       char code SPGParTxt[]                                   = "SPG";
000544 424200          1917         DB      042H,042H,000H
                       1920         PUBLIC  _SPGParTxt
000547                 1921 _SPGParTxt:
                       1922 ; rs232cmd.c  308       
                       1923 ; rs232cmd.c  309       char code OFFParTxt[]                                   = "OFF";
000547 53504700        1924         DB      053H,050H,047H,000H
                       1927         PUBLIC  _OFFParTxt
00054B                 1928 _OFFParTxt:
                       1929 ; rs232cmd.c  310       char code ONParTxt[]                                    = "ON";
00054B 4F464600        1930         DB      04FH,046H,046H,000H
                       1933         PUBLIC  _ONParTxt
00054F                 1934 _ONParTxt:
                       1935 ; rs232cmd.c  311       
                       1936 ; rs232cmd.c  312       char code UPParTxt[]                                    = "UP";
00054F 4F4E00          1937         DB      04FH,04EH,000H
                       1940         PUBLIC  _UPParTxt
000552                 1941 _UPParTxt:
                       1942 ; rs232cmd.c  313       char code DOWNParTxt[]                                  = "DOWN";
000552 555000          1943         DB      055H,050H,000H
                       1946         PUBLIC  _DOWNParTxt
000555                 1947 _DOWNParTxt:
                       1948 ; rs232cmd.c  314       
                       1949 ; rs232cmd.c  315       char code NORMALParTxt[]                                = "NORMAL";
000555 444F574E00      1950         DB      044H,04FH,057H,04EH,000H
                       1953         PUBLIC  _NORMALParTxt
00055A                 1954 _NORMALParTxt:
                       1955 ; rs232cmd.c  316       char code NORMParTxt[]                                  = "NORM";
00055A 4E4F524D414C00  1956         DB      04EH,04FH,052H,04DH,041H,04CH,000H
                       1959         PUBLIC  _NORMParTxt
000561                 1960 _NORMParTxt:
                       1961 ; rs232cmd.c  317       
                       1962 ; rs232cmd.c  318       char code MINParTxt[]                                   = "MIN";
000561 4E4F524D00      1963         DB      04EH,04FH,052H,04DH,000H
                       1966         PUBLIC  _MINParTxt
000566                 1967 _MINParTxt:
                       1968 ; rs232cmd.c  319       char code MAXParTxt[]                                   = "MAX";
000566 4D494E00        1969         DB      04DH,049H,04EH,000H
                       1972         PUBLIC  _MAXParTxt
00056A                 1973 _MAXParTxt:
                       1974 ; rs232cmd.c  320       
                       1975 ; rs232cmd.c  321       char code UNLOCKEDParTxt[]                      = "UNLOCKED";
00056A 4D415800        1976         DB      04DH,041H,058H,000H
                       1979         PUBLIC  _UNLOCKEDParTxt
00056E                 1980 _UNLOCKEDParTxt:
                       1981 ; rs232cmd.c  322       char code GENLOCKEDParTxt[]                     = "GENLOCKED";
00056E 554E4C4F434B45  1982         DB      055H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       4400                 
                       1985         PUBLIC  _GENLOCKEDParTxt
000577                 1986 _GENLOCKEDParTxt:
                       1987 ; rs232cmd.c  323       
                       1988 ; rs232cmd.c  324       
                       1989 ; rs232cmd.c  325       void CLSCommand( void);
                       1990 ; rs232cmd.c  326       void ESECommand( void);
                       1991 ; rs232cmd.c  327       void ESRCommand( void);
                       1992 ; rs232cmd.c  328       void OPCCommand( void);
                       1993 ; rs232cmd.c  329       void SRECommand( void);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
                       1994 ; rs232cmd.c  330       void STBCommand( void);
                       1995 ; rs232cmd.c  331       void TSTCommand( void);
                       1996 ; rs232cmd.c  332       void WAICommand( void);
                       1997 ; rs232cmd.c  333       void RSTCommand( void);
                       1998 ; rs232cmd.c  334       void IDNCommand( void);
                       1999 ; rs232cmd.c  335       void RCLCommand( void);
                       2000 ; rs232cmd.c  336       void SAVCommand( void);
                       2001 ; rs232cmd.c  337       
                       2002 ; rs232cmd.c  338       void SystemError( void);
                       2003 ; rs232cmd.c  339       void SystemVersion( void);
                       2004 ; rs232cmd.c  340       void SystemTime( void);
                       2005 ; rs232cmd.c  341       void SystemDate( void);
                       2006 ; rs232cmd.c  342       
                       2007 ; rs232cmd.c  343       void SystemPresetName( void);
                       2008 ; rs232cmd.c  344       void SystemPresetAuthor( void);
                       2009 ; rs232cmd.c  345       void SystemPresetDate( void);
                       2010 ; rs232cmd.c  346       void SystemPresetDownload( void);
                       2011 ; rs232cmd.c  347       void SystemPresetUpload( void);
                       2012 ; rs232cmd.c  348       
                       2013 ; rs232cmd.c  349       void StatusOperEvent( void);
                       2014 ; rs232cmd.c  350       void StatusOperCondition( void);
                       2015 ; rs232cmd.c  351       void StatusOperEnable( void);
                       2016 ; rs232cmd.c  352       void StatusQuestEvent( void);
                       2017 ; rs232cmd.c  353       void StatusQuestCondition( void);
                       2018 ; rs232cmd.c  354       void StatusQuestEnable( void);
                       2019 ; rs232cmd.c  355       void StatusPreset( void);
                       2020 ; rs232cmd.c  356       
                       2021 ; rs232cmd.c  357       void GenlockGen( void);
                       2022 ; rs232cmd.c  358       void GenlockGenSystem( void);
                       2023 ; rs232cmd.c  359       void GenlockGenDelay( void);
                       2024 ; rs232cmd.c  360       void GenlockGenCalibrateEnable( void);
                       2025 ; rs232cmd.c  361       void GenlockGenCalibrateAdjust( void);
                       2026 ; rs232cmd.c  362       void GenlockGenCalibrateStore( void);
                       2027 ; rs232cmd.c  363       
                       2028 ; rs232cmd.c  364       void BBGenSuffix( void);
                       2029 ; rs232cmd.c  365       void BBGen( void);
                       2030 ; rs232cmd.c  366       void BBGenSystem( void);
                       2031 ; rs232cmd.c  367       void BBGenDelay( void);
                       2032 ; rs232cmd.c  368       void BBGenScHPhase( void);
                       2033 ; rs232cmd.c  369       
                       2034 ; rs232cmd.c  370       void TSGen( void);
                       2035 ; rs232cmd.c  371       void TSGenPattern( void);
                       2036 ; rs232cmd.c  372       void TSGenSystem( void);
                       2037 ; rs232cmd.c  373       void TSGenDelay( void);
                       2038 ; rs232cmd.c  374       void TSGenScHPhase( void);
                       2039 ; rs232cmd.c  375       void TSGenEmbAudioSignal( void);
                       2040 ; rs232cmd.c  376       
                       2041 ; rs232cmd.c  377       void AudioGenOutput( void);
                       2042 ; rs232cmd.c  378       
                       2043 ; rs232cmd.c  379       void AudioGenAnalog( void);
                       2044 ; rs232cmd.c  380       void AudioGenAnalogSignal( void);
                       2045 ; rs232cmd.c  381       void AudioGenAnalogLevel( void);
                       2046 ; rs232cmd.c  382       void AudioGenAnalogClick( void);
                       2047 ; rs232cmd.c  383       
                       2048 ; rs232cmd.c  384       void AudioGenAESEBU( void);
                       2049 ; rs232cmd.c  385       void AudioGenAESEBUSystem( void);
                       2050 ; rs232cmd.c  386       void AudioGenAESEBUSignal( void);
                       2051 ; rs232cmd.c  387       void AudioGenAESEBULevel( void);
                       2052 ; rs232cmd.c  388       void AudioGenAESEBUTiming( void);
                       2053 ; rs232cmd.c  389       void AudioGenAESEBUWordClock( void);
                       2054 ; rs232cmd.c  390       void AudioGenAESEBUClick( void);
                       2055 ; rs232cmd.c  391       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
                       2056 ; rs232cmd.c  392       void FactPassword( void);
                       2057 ; rs232cmd.c  393       void FactReset( void);
                       2058 ; rs232cmd.c  394       void FactV24Command( void);
                       2059 ; rs232cmd.c  395       void FactV24Transparent( void);
                       2060 ; rs232cmd.c  396       
                       2061 ; rs232cmd.c  397       void FactChecksumCode( void);
                       2062 ; rs232cmd.c  398       void FactChecksumPLD( void);
                       2063 ; rs232cmd.c  399       void FactChecksumEmbAudio( void);
                       2064 ; rs232cmd.c  400       void FactChecksumPattern( void);
                       2065 ; rs232cmd.c  401       void FactChecksumRange( void);
                       2066 ; rs232cmd.c  402       
                       2067 ; rs232cmd.c  403       void FactMainVersion( void);
                       2068 ; rs232cmd.c  404       void FactMainIDNCompany( void);
                       2069 ; rs232cmd.c  405       void FactMainIDNType( void);
                       2070 ; rs232cmd.c  406       void FactMainIDNKUNumber( void);
                       2071 ; rs232cmd.c  407       void FactMainIDNSWRevision( void);
                       2072 ; rs232cmd.c  408       
                       2073 ; rs232cmd.c  409       void FactMainSystem( void);
                       2074 ; rs232cmd.c  410       void FactMainFMSDateProd( void);
                       2075 ; rs232cmd.c  411       void FactMainFMSDateUpd( void);
                       2076 ; rs232cmd.c  412       
                       2077 ; rs232cmd.c  413       void FactGenlockGenDate( void);
                       2078 ; rs232cmd.c  414       void FactGenlockGenVersion( void);
                       2079 ; rs232cmd.c  415       void FactGenlockGenFRefDate( void);
                       2080 ; rs232cmd.c  416       void FactGenlockGenFRefDAC( void);
                       2081 ; rs232cmd.c  417       void FactGenlockGenURefDate( void);
                       2082 ; rs232cmd.c  418       void FactGenlockGenURefDAC( void);
                       2083 ; rs232cmd.c  419       void FactGenlockGenHPHZero( void);
                       2084 ; rs232cmd.c  420       void FactGenlockGenPhase( void);
                       2085 ; rs232cmd.c  421       
                       2086 ; rs232cmd.c  422       void FactBBGenDate( void);
                       2087 ; rs232cmd.c  423       void FactBBGenVersion( void);
                       2088 ; rs232cmd.c  424       void FactBBGenSignal( void);
                       2089 ; rs232cmd.c  425       void FactBBGenPhase( void);
                       2090 ; rs232cmd.c  426       void FactBBGenScHPhase( void);
                       2091 ; rs232cmd.c  427       void FactBBGenDAC( void);
                       2092 ; rs232cmd.c  428       
                       2093 ; rs232cmd.c  429       void FactTSGenDate( void);
                       2094 ; rs232cmd.c  430       void FactTSGenAGain( void);
                       2095 ; rs232cmd.c  431       void FactTSGenCGain( void);
                       2096 ; rs232cmd.c  432       void FactTSGenPhase( void);
                       2097 ; rs232cmd.c  433       void FactTSGenScHPhase( void);
                       2098 ; rs232cmd.c  434       
                       2099 ; rs232cmd.c  435       void FactAudioGenStatus( void);
                       2100 ; rs232cmd.c  436       void FactAudioGenDate( void);
                       2101 ; rs232cmd.c  437       void FactAudioGenLevel( void);
                       2102 ; rs232cmd.c  438       
                       2103 ; rs232cmd.c  439       void FactPLDVersion( void);
                       2104 ; rs232cmd.c  440       void FactTCXOStatus( void);
                       2105 ; rs232cmd.c  441       void FactMultiMediaChip( void);
                       2106 ; rs232cmd.c  442       
                       2107 ; rs232cmd.c  443       int FindParameter( char* par, struct PAR_STRUCT code* TmpPtr);
                       2108 ; rs232cmd.c  444       
                       2109 ; rs232cmd.c  445       long FLTToSamples( UC system, int F, int L, float T);
                       2110 ; rs232cmd.c  446       void PrintSamplesToFLT( UC system, long samples);
                       2111 ; rs232cmd.c  447       
                       2112 ; rs232cmd.c  448       // **********************************************************************
                            ****
                       2113 ; rs232cmd.c  449       struct CMD_STRUCT code Mandated[12] = {
000577 47454E4C4F434B  2114         DB      047H,045H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       454400               
                       2135         PUBLIC  _Mandated
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
000581 RESERVED        2136         ALIGN   1
000581
000582                 2137 _Mandated:
000582 rrrrrrrrrrrrrr  2138         DD      _CLSCmdTxt
       rr                   
000586 00000000        2139         DD      000000000H
00058A rrrrrrrrrrrrrr  2140         DD      _Mandated+24
       rr                   
00058E 00000000000000  2141         DD      000000000H,000000000H
       00                   
000596 rrrrrrrrrrrrrr  2142         DD      _CLSCommand,_ESECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00059E 00000000        2143         DD      000000000H
0005A2 rrrrrrrrrrrrrr  2144         DD      _Mandated+48
       rr                   
0005A6 00000000000000  2145         DD      000000000H,000000000H
       00                   
0005AE rrrrrrrrrrrrrr  2146         DD      _ESECommand,_ESRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005B6 00000000        2147         DD      000000000H
0005BA rrrrrrrrrrrrrr  2148         DD      _Mandated+72
       rr                   
0005BE 00000000000000  2149         DD      000000000H,000000000H
       00                   
0005C6 rrrrrrrrrrrrrr  2150         DD      _ESRCommand,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005CE 00000000        2151         DD      000000000H
0005D2 rrrrrrrrrrrrrr  2152         DD      _Mandated+96
       rr                   
0005D6 00000000000000  2153         DD      000000000H,000000000H
       00                   
0005DE rrrrrrrrrrrrrr  2154         DD      _IDNCommand,_OPCCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005E6 00000000        2155         DD      000000000H
0005EA rrrrrrrrrrrrrr  2156         DD      _Mandated+120
       rr                   
0005EE 00000000000000  2157         DD      000000000H,000000000H
       00                   
0005F6 rrrrrrrrrrrrrr  2158         DD      _OPCCommand,_RSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005FE 00000000        2159         DD      000000000H
000602 rrrrrrrrrrrrrr  2160         DD      _Mandated+144
       rr                   
000606 00000000000000  2161         DD      000000000H,000000000H
       00                   
00060E rrrrrrrrrrrrrr  2162         DD      _RSTCommand,_SRECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000616 00000000        2163         DD      000000000H
00061A rrrrrrrrrrrrrr  2164         DD      _Mandated+168
       rr                   
00061E 00000000000000  2165         DD      000000000H,000000000H
       00                   
000626 rrrrrrrrrrrrrr  2166         DD      _SRECommand,_STBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00062E 00000000        2167         DD      000000000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
000632 rrrrrrrrrrrrrr  2168         DD      _Mandated+192
       rr                   
000636 00000000000000  2169         DD      000000000H,000000000H
       00                   
00063E rrrrrrrrrrrrrr  2170         DD      _STBCommand,_TSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000646 00000000        2171         DD      000000000H
00064A rrrrrrrrrrrrrr  2172         DD      _Mandated+216
       rr                   
00064E 00000000000000  2173         DD      000000000H,000000000H
       00                   
000656 rrrrrrrrrrrrrr  2174         DD      _TSTCommand,_RCLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00065E 00000000        2175         DD      000000000H
000662 rrrrrrrrrrrrrr  2176         DD      _Mandated+240
       rr                   
000666 00000000000000  2177         DD      000000000H,000000000H
       00                   
00066E rrrrrrrrrrrrrr  2178         DD      _RCLCommand,_SAVCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000676 00000000        2179         DD      000000000H
00067A rrrrrrrrrrrrrr  2180         DD      _Mandated+264
       rr                   
00067E 00000000000000  2181         DD      000000000H,000000000H
       00                   
000686 rrrrrrrrrrrrrr  2182         DD      _SAVCommand,_WAICmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00068E 00000000000000  2183         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2184 ; rs232cmd.c  450               { CLSCmdTxt, NULL, &Mandated[1],  NULL, NONE, CLSCommand},
                       2185 ; rs232cmd.c  451               { ESECmdTxt, NULL, &Mandated[2],  NULL, NONE, ESECommand},
                       2186 ; rs232cmd.c  452               { ESRCmdTxt, NULL, &Mandated[3],  NULL, NONE, ESRCommand},
                       2187 ; rs232cmd.c  453               { IDNCmdTxt, NULL, &Mandated[4],  NULL, NONE, IDNCommand},
                       2188 ; rs232cmd.c  454               { OPCCmdTxt, NULL, &Mandated[5],  NULL, NONE, OPCCommand},
                       2189 ; rs232cmd.c  455               { RSTCmdTxt, NULL, &Mandated[6],  NULL, NONE, RSTCommand},
                       2190 ; rs232cmd.c  456               { SRECmdTxt, NULL, &Mandated[7],  NULL, NONE, SRECommand},
                       2191 ; rs232cmd.c  457               { STBCmdTxt, NULL, &Mandated[8],  NULL, NONE, STBCommand},
                       2192 ; rs232cmd.c  458               { TSTCmdTxt, NULL, &Mandated[9],  NULL, NONE, TSTCommand},
                       2193 ; rs232cmd.c  459               { RCLCmdTxt, NULL, &Mandated[10], NULL, NONE, RCLCommand},
                       2194 ; rs232cmd.c  460               { SAVCmdTxt, NULL, &Mandated[11], NULL, NONE, SAVCommand},
                       2195 ; rs232cmd.c  461               { WAICmdTxt, NULL, NULL         , NULL, NONE, WAICommand}
                       2196 ; rs232cmd.c  462       };
                       2197 ; rs232cmd.c  463       
                       2198 ; rs232cmd.c  464       struct CMD_STRUCT code Subsystem[9] = {
00069E rrrrrrrrrrrrrr  2199         DD      _WAICommand
       rr                   
                       2203         PUBLIC  _Subsystem
                       2204         ALIGN   1
0006A2                 2205 _Subsystem:
0006A2 rrrrrrrrrrrrrr  2206         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006AA rrrrrrrrrrrrrr  2207         DD      _Subsystem+24
       rr                   
0006AE rrrrrrrrrrrrrr  2208         DD      _System
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
0006B2 00000000000000  2209         DD      000000000H,000000000H
       00                   
0006BA rrrrrrrrrrrrrr  2210         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006C2 rrrrrrrrrrrrrr  2211         DD      _Subsystem+48
       rr                   
0006C6 rrrrrrrrrrrrrr  2212         DD      _Status
       rr                   
0006CA 00000000000000  2213         DD      000000000H,000000000H
       00                   
0006D2 rrrrrrrrrrrrrr  2214         DD      _DIAGNOSTICCmdTxt,_DIAGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006DA rrrrrrrrrrrrrr  2215         DD      _Subsystem+72
       rr                   
0006DE 00000000000000  2216         DD      000000000H,000000000H,000000000H
       0000000000           
0006EA rrrrrrrrrrrrrr  2217         DD      _MONITORCmdTxt,_MONCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006F2 rrrrrrrrrrrrrr  2218         DD      _Subsystem+96
       rr                   
0006F6 00000000000000  2219         DD      000000000H,000000000H,000000000H
       0000000000           
000702 rrrrrrrrrrrrrr  2220         DD      _INPUTCmdTxt,_INPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00070A rrrrrrrrrrrrrr  2221         DD      _Subsystem+120
       rr                   
00070E rrrrrrrrrrrrrr  2222         DD      _Input
       rr                   
000712 00000000000000  2223         DD      000000000H,000000000H
       00                   
00071A rrrrrrrrrrrrrr  2224         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000722 rrrrrrrrrrrrrr  2225         DD      _Subsystem+144
       rr                   
000726 rrrrrrrrrrrrrr  2226         DD      _Output
       rr                   
00072A 00000000000000  2227         DD      000000000H,000000000H
       00                   
000732 rrrrrrrrrrrrrr  2228         DD      _USERCmdTxt,_USERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00073A rrrrrrrrrrrrrr  2229         DD      _Subsystem+168
       rr                   
00073E 00000000000000  2230         DD      000000000H,000000000H,000000000H
       0000000000           
00074A rrrrrrrrrrrrrr  2231         DD      _MEASURECmdTxt,_MEASCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000752 rrrrrrrrrrrrrr  2232         DD      _Subsystem+192
       rr                   
000756 00000000000000  2233         DD      000000000H,000000000H,000000000H
       0000000000           
000762 rrrrrrrrrrrrrr  2234         DD      _FACTORYCmdTxt,_FACTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00076A 00000000        2235         DD      000000000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
00076E rrrrrrrrrrrrrr  2236         DD      _Factory
       rr                   
                       2237 ; rs232cmd.c  465               { SYSTEMCmdTxt,   SYSTCmdTxt, &Subsystem[1], &System[0],  NONE, N
                            ONE},
                       2238 ; rs232cmd.c  466               { STATUSCmdTxt,           STATCmdTxt, &Subsystem[2], &Status[0], 
                             NONE, NONE},
                       2239 ; rs232cmd.c  467               { DIAGNOSTICCmdTxt, DIAGCmdTxt, &Subsystem[3], NULL,             
                              NONE, NONE},
                       2240 ; rs232cmd.c  468               { MONITORCmdTxt,          MONCmdTxt,  &Subsystem[4], NULL,       
                                       NONE, NONE},
                       2241 ; rs232cmd.c  469               { INPUTCmdTxt,    INPCmdTxt,  &Subsystem[5], &Input[0],   NONE, N
                            ONE},
                       2242 ; rs232cmd.c  470               { OUTPUTCmdTxt,           OUTPCmdTxt, &Subsystem[6], &Output[0], 
                             NONE, NONE},
                       2243 ; rs232cmd.c  471               { USERCmdTxt,             USERCmdTxt, &Subsystem[7], NULL,       
                                       NONE, NONE},
                       2244 ; rs232cmd.c  472               { MEASURECmdTxt,          MEASCmdTxt, &Subsystem[8], NULL,       
                                       NONE, NONE},
                       2245 ; rs232cmd.c  473               { FACTORYCmdTxt,          FACTCmdTxt, NULL,                      
                             &Factory[0], NONE, NONE},
                       2246 ; rs232cmd.c  474       };
                       2247 ; rs232cmd.c  475       
                       2248 ; rs232cmd.c  476       // **********************************************************************
                            ****
                       2249 ; rs232cmd.c  477       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2250 ; rs232cmd.c  478                       SYSTem
                       2251 ; rs232cmd.c  479                               :ERRor?
                       2252 ; rs232cmd.c  480               :VERSion?
                       2253 ; rs232cmd.c  481                   :PRESet<?>
                       2254 ; rs232cmd.c  482                       [:ACTIVE?]
                       2255 ; rs232cmd.c  483                       :RECall<?>      1 .. 4
                       2256 ; rs232cmd.c  484                 :STORe                        1 .. 4
                       2257 ; rs232cmd.c  485               :NAMe<?>                1 .. 4 , <name>
                       2258 ; rs232cmd.c  486               :AUTHor<?>      1 .. 4 , <author name>
                       2259 ; rs232cmd.c  487                     :DATE<?>          1 .. 4[, <year>,<month>,<date>]
                       2260 ; rs232cmd.c  488                                       :DOWNload               1 .. 4
                       2261 ; rs232cmd.c  489                                       :UPLoad                 1 .. 4
                       2262 ; rs232cmd.c  490               :EVENtlog
                       2263 ; rs232cmd.c  491               :DATE
                       2264 ; rs232cmd.c  492               :TIME
                       2265 ; rs232cmd.c  493       */
                       2266 ; rs232cmd.c  494       struct CMD_STRUCT code System[6] = {
000772 00000000000000  2267         DD      000000000H,000000000H
       00                   
                       2271         PUBLIC  _System
                       2272         ALIGN   1
00077A                 2273 _System:
00077A rrrrrrrrrrrrrr  2274         DD      _ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000782 rrrrrrrrrrrrrr  2275         DD      _System+24
       rr                   
000786 00000000000000  2276         DD      000000000H,000000000H
       00                   
00078E rrrrrrrrrrrrrr  2277         DD      _SystemError,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00079A rrrrrrrrrrrrrr  2278         DD      _System+48
       rr                   
00079E 00000000000000  2279         DD      000000000H,000000000H
       00                   
0007A6 rrrrrrrrrrrrrr  2280         DD      _SystemVersion,_PRESETCmdTxt,_PRESCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007B2 rrrrrrrrrrrrrr  2281         DD      _System+72
       rr                   
0007B6 rrrrrrrrrrrrrr  2282         DD      _SystemLevel1
       rr                   
0007BA 00000000        2283         DD      000000000H
0007BE rrrrrrrrrrrrrr  2284         DD      _RCLCommand,_EVENTLOGCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007CA rrrrrrrrrrrrrr  2285         DD      _System+96
       rr                   
0007CE 00000000000000  2286         DD      000000000H,000000000H,000000000H
       0000000000           
0007DA rrrrrrrrrrrrrr  2287         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0007E2 rrrrrrrrrrrrrr  2288         DD      _System+120
       rr                   
0007E6 00000000000000  2289         DD      000000000H,000000000H,000000000H
       0000000000           
0007F2 rrrrrrrrrrrrrr  2290         DD      _TIMECmdTxt,_TIMECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       2291 ; rs232cmd.c  495               { ERRORCmdTxt,  ERRCmdTxt,      &System[1], NULL,                
                                            NONE, SystemError},
                       2292 ; rs232cmd.c  496               { VERSIONCmdTxt,        VERSCmdTxt, &System[2], NULL,            
                                            NONE, SystemVersion},
                       2293 ; rs232cmd.c  497               { PRESETCmdTxt,         PRESCmdTxt, &System[3], &SystemLevel1[0],
                             NONE, RCLCommand},
                       2294 ; rs232cmd.c  498               { EVENTLOGCmdTxt, EVENCmdTxt, &System[4], NULL,                  
                                            NONE, NONE},
                       2295 ; rs232cmd.c  499               { DATECmdTxt,           DATECmdTxt, &System[5], NULL,            
                                            NONE, NONE},
                       2296 ; rs232cmd.c  500               { TIMECmdTxt,           TIMECmdTxt, NULL,               NULL,    
                                                    NONE, NONE}
                       2297 ; rs232cmd.c  501       };
                       2298 ; rs232cmd.c  502       
                       2299 ; rs232cmd.c  503       struct CMD_STRUCT code SystemLevel1[7] = {
0007FA 00000000000000  2300         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2304         PUBLIC  _SystemLevel1
                       2305         ALIGN   1
00080A                 2306 _SystemLevel1:
00080A rrrrrrrrrrrrrr  2307         DD      _RECALLCmdTxt,_RECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000812 rrrrrrrrrrrrrr  2308         DD      _SystemLevel1+24
       rr                   
000816 00000000000000  2309         DD      000000000H,000000000H
       00                   
00081E rrrrrrrrrrrrrr  2310         DD      _RCLCommand,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00082A rrrrrrrrrrrrrr  2311         DD      _SystemLevel1+48
       rr                   
00082E 00000000000000  2312         DD      000000000H,000000000H
       00                   
000836 rrrrrrrrrrrrrr  2313         DD      _SAVCommand,_NAMECmdTxt,_NAMECmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000842 rrrrrrrrrrrrrr  2314         DD      _SystemLevel1+72
       rr                   
000846 00000000000000  2315         DD      000000000H,000000000H
       00                   
00084E rrrrrrrrrrrrrr  2316         DD      _SystemPresetName,_AUTHORCmdTxt,_AUTHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00085A rrrrrrrrrrrrrr  2317         DD      _SystemLevel1+96
       rr                   
00085E 00000000000000  2318         DD      000000000H,000000000H
       00                   
000866 rrrrrrrrrrrrrr  2319         DD      _SystemPresetAuthor,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000872 rrrrrrrrrrrrrr  2320         DD      _SystemLevel1+120
       rr                   
000876 00000000000000  2321         DD      000000000H,000000000H
       00                   
00087E rrrrrrrrrrrrrr  2322         DD      _SystemPresetDate,_DOWNLOADCmdTxt,_DOWNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00088A rrrrrrrrrrrrrr  2323         DD      _SystemLevel1+144
       rr                   
00088E 00000000000000  2324         DD      000000000H,000000000H
       00                   
000896 rrrrrrrrrrrrrr  2325         DD      _SystemPresetDownload,_UPLOADCmdTxt,_UPLCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008A2 00000000000000  2326         DD      000000000H,000000000H,000000000H
       0000000000           
                       2327 ; rs232cmd.c  504               { RECALLCmdTxt,   RECCmdTxt,    &SystemLevel1[1], NULL, NONE, RCL
                            Command},
                       2328 ; rs232cmd.c  505               { STORECmdTxt,    STORCmdTxt, &SystemLevel1[2], NULL, NONE, SAVCo
                            mmand},
                       2329 ; rs232cmd.c  506               { NAMECmdTxt,      NAMECmdTxt, &SystemLevel1[3],        NULL, NON
                            E, SystemPresetName},
                       2330 ; rs232cmd.c  507               { AUTHORCmdTxt,   AUTHCmdTxt, &SystemLevel1[4], NULL, NONE, Syste
                            mPresetAuthor},
                       2331 ; rs232cmd.c  508               { DATECmdTxt,      DATECmdTxt, &SystemLevel1[5],        NULL, NON
                            E, SystemPresetDate},
                       2332 ; rs232cmd.c  509               { DOWNLOADCmdTxt, DOWNCmdTxt,   &SystemLevel1[6],       NULL, NON
                            E, SystemPresetDownload},
                       2333 ; rs232cmd.c  510               { UPLOADCmdTxt,         UPLCmdTxt,      NULL,                    
                                    NULL, NONE, SystemPresetUpload},
                       2334 ; rs232cmd.c  511       };
                       2335 ; rs232cmd.c  512       
                       2336 ; rs232cmd.c  513       // **********************************************************************
                            ****
                       2337 ; rs232cmd.c  514       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2338 ; rs232cmd.c  515                       STATus
                       2339 ; rs232cmd.c  516                               :OPERation
                       2340 ; rs232cmd.c  517                               :EVENt?
                       2341 ; rs232cmd.c  518                     :CONDition?
                       2342 ; rs232cmd.c  519                   :ENABle<?>  0 .. 65535
                       2343 ; rs232cmd.c  520                       :QUEStionable
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
                       2344 ; rs232cmd.c  521                       :EVENt?
                       2345 ; rs232cmd.c  522                     :CONDition?
                       2346 ; rs232cmd.c  523                   :ENABle<?>  0 .. 65535
                       2347 ; rs232cmd.c  524                               :PRESet                         TBD
                       2348 ; rs232cmd.c  525                   :PT5201?
                       2349 ; rs232cmd.c  526       */
                       2350 ; rs232cmd.c  527       struct CMD_STRUCT code Status[3] = {
0008AE rrrrrrrrrrrrrr  2351         DD      _SystemPresetUpload
       rr                   
                       2355         PUBLIC  _Status
                       2356         ALIGN   1
0008B2                 2357 _Status:
0008B2 rrrrrrrrrrrrrr  2358         DD      _OPERATIONCmdTxt,_OPERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0008BA rrrrrrrrrrrrrr  2359         DD      _Status+24
       rr                   
0008BE rrrrrrrrrrrrrr  2360         DD      _StatusLevel1_1
       rr                   
0008C2 00000000        2361         DD      000000000H
0008C6 rrrrrrrrrrrrrr  2362         DD      _StatusOperEvent,_QUESTIONABLECmdTxt,_QUESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008D2 rrrrrrrrrrrrrr  2363         DD      _Status+48
       rr                   
0008D6 rrrrrrrrrrrrrr  2364         DD      _StatusLevel1_2
       rr                   
0008DA 00000000        2365         DD      000000000H
0008DE rrrrrrrrrrrrrr  2366         DD      _StatusQuestEvent,_PRESETCmdTxt,_PRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008EA 00000000000000  2367         DD      000000000H,000000000H,000000000H
       0000000000           
                       2368 ; rs232cmd.c  528               { OPERATIONCmdTxt,       OPERCmdTxt, &Status[1], &StatusLevel1_1[
                            0], NONE, StatusOperEvent},
                       2369 ; rs232cmd.c  529               { QUESTIONABLECmdTxt, QUESCmdTxt, &Status[2], &StatusLevel1_2[0],
                             NONE, StatusQuestEvent},
                       2370 ; rs232cmd.c  530               { PRESETCmdTxt,                  PRESCmdTxt, NULL,               
                            NULL,                                   NONE, StatusPreset},
                       2371 ; rs232cmd.c  531       };
                       2372 ; rs232cmd.c  532       
                       2373 ; rs232cmd.c  533       struct CMD_STRUCT code StatusLevel1_1[3] = {
0008F6 rrrrrrrrrrrrrr  2374         DD      _StatusPreset
       rr                   
                       2377         PUBLIC  _StatusLevel1_1
                       2378         ALIGN   1
0008FA                 2379 _StatusLevel1_1:
0008FA rrrrrrrrrrrrrr  2380         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000902 rrrrrrrrrrrrrr  2381         DD      _StatusLevel1_1+24
       rr                   
000906 00000000000000  2382         DD      000000000H,000000000H
       00                   
00090E rrrrrrrrrrrrrr  2383         DD      _StatusOperEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00091A rrrrrrrrrrrrrr  2384         DD      _StatusLevel1_1+48
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
00091E 00000000000000  2385         DD      000000000H,000000000H
       00                   
000926 rrrrrrrrrrrrrr  2386         DD      _StatusOperCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000932 00000000000000  2387         DD      000000000H,000000000H,000000000H
       0000000000           
                       2388 ; rs232cmd.c  534               { EVENTCmdTxt,   EVENCmdTxt, &StatusLevel1_1[1], NULL, NONE, Stat
                            usOperEvent},
                       2389 ; rs232cmd.c  535               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_1[2], NULL, NONE, St
                            atusOperCondition},
                       2390 ; rs232cmd.c  536               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                       NULL, NONE, StatusOperEnable},
                       2391 ; rs232cmd.c  537       };
                       2392 ; rs232cmd.c  538       
                       2393 ; rs232cmd.c  539       struct CMD_STRUCT code StatusLevel1_2[3] = {
00093E rrrrrrrrrrrrrr  2394         DD      _StatusOperEnable
       rr                   
                       2397         PUBLIC  _StatusLevel1_2
                       2398         ALIGN   1
000942                 2399 _StatusLevel1_2:
000942 rrrrrrrrrrrrrr  2400         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00094A rrrrrrrrrrrrrr  2401         DD      _StatusLevel1_2+24
       rr                   
00094E 00000000000000  2402         DD      000000000H,000000000H
       00                   
000956 rrrrrrrrrrrrrr  2403         DD      _StatusQuestEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000962 rrrrrrrrrrrrrr  2404         DD      _StatusLevel1_2+48
       rr                   
000966 00000000000000  2405         DD      000000000H,000000000H
       00                   
00096E rrrrrrrrrrrrrr  2406         DD      _StatusQuestCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00097A 00000000000000  2407         DD      000000000H,000000000H,000000000H
       0000000000           
                       2408 ; rs232cmd.c  540               { EVENTCmdTxt,           EVENCmdTxt, &StatusLevel1_2[1], NULL, NO
                            NE, StatusQuestEvent},
                       2409 ; rs232cmd.c  541               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_2[2], NULL, NONE, St
                            atusQuestCondition},
                       2410 ; rs232cmd.c  542               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                            NULL, NONE, StatusQuestEnable},
                       2411 ; rs232cmd.c  543       };
                       2412 ; rs232cmd.c  544       
                       2413 ; rs232cmd.c  545       
                       2414 ; rs232cmd.c  546       // **********************************************************************
                            ****
                       2415 ; rs232cmd.c  547       /*      CMD:    SUB1:   SUB2:           PARM:
                       2416 ; rs232cmd.c  548                       INPut
                       2417 ; rs232cmd.c  549                               :GENLOCK<?>
                       2418 ; rs232cmd.c  550                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2419 ; rs232cmd.c  551                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2420 ; rs232cmd.c  552                                       :CALibrate
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
                       2421 ; rs232cmd.c  553                                               :ENABle         OFF|ON
                       2422 ; rs232cmd.c  554                                               :ADJust         UP|DOWN|MIN|MAX
                       2423 ; rs232cmd.c  555                                               :STORe
                       2424 ; rs232cmd.c  556                                                                                
                                    
                       2425 ; rs232cmd.c  557       */
                       2426 ; rs232cmd.c  558       //***********************************************************************
                            ***
                       2427 ; rs232cmd.c  559       struct CMD_STRUCT code Input[1] = {
000986 rrrrrrrrrrrrrr  2428         DD      _StatusQuestEnable
       rr                   
                       2432         PUBLIC  _Input
                       2433         ALIGN   1
00098A rrrrrrrrrrrrrr  2434 _Input: DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000992 00000000        2435         DD      000000000H
000996 rrrrrrrrrrrrrr  2436         DD      _GenlockLevel1
       rr                   
00099A 00000000        2437         DD      000000000H
                       2438 ; rs232cmd.c  560               { GENLOCKCmdTxt, GENLCmdTxt, NULL, &GenlockLevel1[0], NONE, Genlo
                            ckGen},
                       2439 ; rs232cmd.c  561       };
                       2440 ; rs232cmd.c  562       
                       2441 ; rs232cmd.c  563       struct CMD_STRUCT code GenlockLevel1[3] = {
00099E rrrrrrrrrrrrrr  2442         DD      _GenlockGen
       rr                   
                       2445         PUBLIC  _GenlockLevel1
                       2446         ALIGN   1
0009A2                 2447 _GenlockLevel1:
0009A2 rrrrrrrrrrrrrr  2448         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009AA rrrrrrrrrrrrrr  2449         DD      _GenlockLevel1+24
       rr                   
0009AE 00000000000000  2450         DD      000000000H,000000000H
       00                   
0009B6 rrrrrrrrrrrrrr  2451         DD      _GenlockGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009C2 rrrrrrrrrrrrrr  2452         DD      _GenlockLevel1+48
       rr                   
0009C6 00000000000000  2453         DD      000000000H,000000000H
       00                   
0009CE rrrrrrrrrrrrrr  2454         DD      _GenlockGenDelay,_CALIBRATECmdTxt,_CALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009DA 00000000        2455         DD      000000000H
0009DE rrrrrrrrrrrrrr  2456         DD      _GenlockLevel1_1
       rr                   
                       2457 ; rs232cmd.c  564               { SYSTEMCmdTxt,          SYSTCmdTxt, &GenlockLevel1[1], NULL,    
                                                              NONE, GenlockGenSystem},
                       2458 ; rs232cmd.c  565               { DELAYCmdTxt,   DELCmdTxt,  &GenlockLevel1[2], NULL,            
                                                      NONE, GenlockGenDelay},
                       2459 ; rs232cmd.c  566               { CALIBRATECmdTxt, CALCmdTxt,  NULL,                             
                             &GenlockLevel1_1[0], NONE, NONE},
                       2460 ; rs232cmd.c  567       };
                       2461 ; rs232cmd.c  568       
                       2462 ; rs232cmd.c  569       struct CMD_STRUCT code GenlockLevel1_1[3] = {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
0009E2 00000000000000  2463         DD      000000000H,000000000H
       00                   
                       2466         PUBLIC  _GenlockLevel1_1
                       2467         ALIGN   1
0009EA                 2468 _GenlockLevel1_1:
0009EA rrrrrrrrrrrrrr  2469         DD      _ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009F2 rrrrrrrrrrrrrr  2470         DD      _GenlockLevel1_1+24
       rr                   
0009F6 00000000000000  2471         DD      000000000H,000000000H
       00                   
0009FE rrrrrrrrrrrrrr  2472         DD      _GenlockGenCalibrateEnable,_ADJUSTCmdTxt,_ADJCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A0A rrrrrrrrrrrrrr  2473         DD      _GenlockLevel1_1+48
       rr                   
000A0E 00000000000000  2474         DD      000000000H,000000000H
       00                   
000A16 rrrrrrrrrrrrrr  2475         DD      _GenlockGenCalibrateAdjust,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A22 00000000000000  2476         DD      000000000H,000000000H,000000000H
       0000000000           
                       2477 ; rs232cmd.c  570               { ENABLECmdTxt, ENABCmdTxt, &GenlockLevel1_1[1], NULL, NONE, Genl
                            ockGenCalibrateEnable},
                       2478 ; rs232cmd.c  571               { ADJUSTCmdTxt, ADJCmdTxt,  &GenlockLevel1_1[2], NULL, NONE, Genl
                            ockGenCalibrateAdjust},
                       2479 ; rs232cmd.c  572               { STORECmdTxt,  STORCmdTxt, NULL,                                
                                     NULL, NONE, GenlockGenCalibrateStore},
                       2480 ; rs232cmd.c  573       };
                       2481 ; rs232cmd.c  574       // **********************************************************************
                            ****
                       2482 ; rs232cmd.c  575       /*      CMD:    SUB1:   SUB2:           PARM:
                       2483 ; rs232cmd.c  576                       OUTPut
                       2484 ; rs232cmd.c  577                               :BB1-3<?>
                       2485 ; rs232cmd.c  578                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2486 ; rs232cmd.c  579                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2487 ; rs232cmd.c  580                                       :SCHPhase               <-179to 180>
                       2488 ; rs232cmd.c  581       
                       2489 ; rs232cmd.c  582                               :TSGenerator<?>
                       2490 ; rs232cmd.c  583                                       :PATTern          <pattern name>
                       2491 ; rs232cmd.c  584                                       :SYSTem                 PAL|NTSC
                       2492 ; rs232cmd.c  585                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2493 ; rs232cmd.c  586                                       :SCHPhase               <-179to 180>
                       2494 ; rs232cmd.c  587                                       :EMBaudio<?>
                       2495 ; rs232cmd.c  588                                               [:SIGNal]       OFF | SILence | F
                            1KHZ
                       2496 ; rs232cmd.c  589                                               :LEVel
                       2497 ; rs232cmd.c  590       
                       2498 ; rs232cmd.c  591                               :AUDio
                       2499 ; rs232cmd.c  592                                       :OUTPut
                       2500 ; rs232cmd.c  593                                       :ANALog<?>
                       2501 ; rs232cmd.c  594                                               :SIGNal
                       2502 ; rs232cmd.c  595                                               :LEVel
                       2503 ; rs232cmd.c  596                                               :CLICk
                       2504 ; rs232cmd.c  597                                       :AESebu<?>
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  31

ADDR   CODE            LINE SOURCELINE
                       2505 ; rs232cmd.c  598                                               :SYSTem
                       2506 ; rs232cmd.c  599                                               :SIGNal
                       2507 ; rs232cmd.c  600                                               :LEVel
                       2508 ; rs232cmd.c  601                                               :TIMing
                       2509 ; rs232cmd.c  602                                               :WORDclock
                       2510 ; rs232cmd.c  603                                               :CLICkperiod
                       2511 ; rs232cmd.c  604       */
                       2512 ; rs232cmd.c  605       struct CMD_STRUCT code Output[3] = {
000A2E rrrrrrrrrrrrrr  2513         DD      _GenlockGenCalibrateStore
       rr                   
                       2516         PUBLIC  _Output
                       2517         ALIGN   1
000A32                 2518 _Output:
000A32 rrrrrrrrrrrrrr  2519         DD      _BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A3A rrrrrrrrrrrrrr  2520         DD      _Output+24
       rr                   
000A3E rrrrrrrrrrrrrr  2521         DD      _BBGenLevel1,_BBGenSuffix,_BBGen,_TSGENERATORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrr             
000A4E rrrrrrrrrrrrrr  2522         DD      _TSGCmdTxt
       rr                   
000A52 rrrrrrrrrrrrrr  2523         DD      _Output+48
       rr                   
000A56 rrrrrrrrrrrrrr  2524         DD      _TSGenLevel1
       rr                   
000A5A 00000000        2525         DD      000000000H
000A5E rrrrrrrrrrrrrr  2526         DD      _TSGen,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A6A 00000000        2527         DD      000000000H
000A6E rrrrrrrrrrrrrr  2528         DD      _AudioGenLevel1
       rr                   
000A72 00000000        2529         DD      000000000H
                       2530 ; rs232cmd.c  606               { BBCmdTxt,                     BBCmdTxt,  &Output[1], &BBGenLeve
                            l1[0],   BBGenSuffix, BBGen},
                       2531 ; rs232cmd.c  607               { TSGENERATORCmdTxt, TSGCmdTxt, &Output[2], &TSGenLevel1[0],     
                            NONE,             TSGen},
                       2532 ; rs232cmd.c  608               { AUDIOCmdTxt,          AUDCmdTxt, NULL,                  &AudioG
                            enLevel1[0], NONE,                AudioGenOutput},
                       2533 ; rs232cmd.c  609       };
                       2534 ; rs232cmd.c  610       
                       2535 ; rs232cmd.c  611       struct CMD_STRUCT code BBGenLevel1[3] = {
000A76 rrrrrrrrrrrrrr  2536         DD      _AudioGenOutput
       rr                   
                       2539         PUBLIC  _BBGenLevel1
                       2540         ALIGN   1
000A7A                 2541 _BBGenLevel1:
000A7A rrrrrrrrrrrrrr  2542         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A82 rrrrrrrrrrrrrr  2543         DD      _BBGenLevel1+24
       rr                   
000A86 00000000000000  2544         DD      000000000H,000000000H
       00                   
000A8E rrrrrrrrrrrrrr  2545         DD      _BBGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  32

ADDR   CODE            LINE SOURCELINE
000A9A rrrrrrrrrrrrrr  2546         DD      _BBGenLevel1+48
       rr                   
000A9E 00000000000000  2547         DD      000000000H,000000000H
       00                   
000AA6 rrrrrrrrrrrrrr  2548         DD      _BBGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AB2 00000000000000  2549         DD      000000000H,000000000H,000000000H
       0000000000           
                       2550 ; rs232cmd.c  612               { SYSTEMCmdTxt,         SYSTCmdTxt, &BBGenLevel1[1], NULL, NONE, 
                            BBGenSystem},
                       2551 ; rs232cmd.c  613               { DELAYCmdTxt,     DELCmdTxt,  &BBGenLevel1[2], NULL, NONE, BBGen
                            Delay},
                       2552 ; rs232cmd.c  614               { SCHPHASECmdTxt, SCHPCmdTxt, NULL,                       NULL, N
                            ONE, BBGenScHPhase},
                       2553 ; rs232cmd.c  615       };
                       2554 ; rs232cmd.c  616       
                       2555 ; rs232cmd.c  617       struct CMD_STRUCT code TSGenLevel1[5] = {
000ABE rrrrrrrrrrrrrr  2556         DD      _BBGenScHPhase
       rr                   
                       2560         PUBLIC  _TSGenLevel1
                       2561         ALIGN   1
000AC2                 2562 _TSGenLevel1:
000AC2 rrrrrrrrrrrrrr  2563         DD      _PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000ACA rrrrrrrrrrrrrr  2564         DD      _TSGenLevel1+24
       rr                   
000ACE 00000000000000  2565         DD      000000000H,000000000H
       00                   
000AD6 rrrrrrrrrrrrrr  2566         DD      _TSGenPattern,_SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AE2 rrrrrrrrrrrrrr  2567         DD      _TSGenLevel1+48
       rr                   
000AE6 00000000000000  2568         DD      000000000H,000000000H
       00                   
000AEE rrrrrrrrrrrrrr  2569         DD      _TSGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AFA rrrrrrrrrrrrrr  2570         DD      _TSGenLevel1+72
       rr                   
000AFE 00000000000000  2571         DD      000000000H,000000000H
       00                   
000B06 rrrrrrrrrrrrrr  2572         DD      _TSGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B12 rrrrrrrrrrrrrr  2573         DD      _TSGenLevel1+96
       rr                   
000B16 00000000000000  2574         DD      000000000H,000000000H
       00                   
000B1E rrrrrrrrrrrrrr  2575         DD      _TSGenScHPhase,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B2A 00000000        2576         DD      000000000H
000B2E rrrrrrrrrrrrrr  2577         DD      _TSGenLevel1_1
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  33

ADDR   CODE            LINE SOURCELINE
000B32 00000000        2578         DD      000000000H
                       2579 ; rs232cmd.c  618               { PATTERNCmdTxt,        PATTCmdTxt, &TSGenLevel1[1], NULL,       
                                                            NONE, TSGenPattern},
                       2580 ; rs232cmd.c  619               { SYSTEMCmdTxt,         SYSTCmdTxt, &TSGenLevel1[2], NULL,       
                                                            NONE, TSGenSystem},
                       2581 ; rs232cmd.c  620               { DELAYCmdTxt,     DELCmdTxt,  &TSGenLevel1[3], NULL,            
                                                    NONE, TSGenDelay},
                       2582 ; rs232cmd.c  621               { SCHPHASECmdTxt, SCHPCmdTxt, &TSGenLevel1[4], NULL,             
                                                    NONE, TSGenScHPhase},
                       2583 ; rs232cmd.c  622               { EMBAUDIOCmdTxt, EMBCmdTxt,    NULL,                     &TSGenL
                            evel1_1[0], NONE, TSGenEmbAudioSignal},
                       2584 ; rs232cmd.c  623       };
                       2585 ; rs232cmd.c  624       
                       2586 ; rs232cmd.c  625       struct CMD_STRUCT code TSGenLevel1_1[2] = {
000B36 rrrrrrrrrrrrrr  2587         DD      _TSGenEmbAudioSignal
       rr                   
                       2591         PUBLIC  _TSGenLevel1_1
                       2592         ALIGN   1
000B3A                 2593 _TSGenLevel1_1:
000B3A rrrrrrrrrrrrrr  2594         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B42 rrrrrrrrrrrrrr  2595         DD      _TSGenLevel1_1+24
       rr                   
000B46 00000000000000  2596         DD      000000000H,000000000H
       00                   
000B4E rrrrrrrrrrrrrr  2597         DD      _TSGenEmbAudioSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
                       2598 ; rs232cmd.c  626               { SIGNALCmdTxt, SIGNCmdTxt, &TSGenLevel1_1[1], NULL, NONE, TSGenE
                            mbAudioSignal},
                       2599 ; rs232cmd.c  627               { LEVELCmdTxt,  LEVCmdTxt,  NULL,                                
                             NULL, NONE, NONE},
                       2600 ; rs232cmd.c  628       };
                       2601 ; rs232cmd.c  629       
                       2602 ; rs232cmd.c  630       struct CMD_STRUCT code AudioGenLevel1[3] = {
000B5A 00000000000000  2603         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2606         PUBLIC  _AudioGenLevel1
                       2607         ALIGN   1
000B6A                 2608 _AudioGenLevel1:
000B6A rrrrrrrrrrrrrr  2609         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B72 rrrrrrrrrrrrrr  2610         DD      _AudioGenLevel1+24
       rr                   
000B76 00000000000000  2611         DD      000000000H,000000000H
       00                   
000B7E rrrrrrrrrrrrrr  2612         DD      _AudioGenOutput,_ANALOGCmdTxt,_ANALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B8A rrrrrrrrrrrrrr  2613         DD      _AudioGenLevel1+48
       rr                   
000B8E rrrrrrrrrrrrrr  2614         DD      _AudioGenLevel1_1
       rr                   
000B92 00000000        2615         DD      000000000H
000B96 rrrrrrrrrrrrrr  2616         DD      _AudioGenAnalog,_AESEBUCmdTxt,_AESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  34

ADDR   CODE            LINE SOURCELINE
000BA2 00000000        2617         DD      000000000H
000BA6 rrrrrrrrrrrrrr  2618         DD      _AudioGenLevel1_2
       rr                   
000BAA 00000000        2619         DD      000000000H
                       2620 ; rs232cmd.c  631               { OUTPUTCmdTxt, OUTPCmdTxt, &AudioGenLevel1[1], NULL,            
                                                     NONE, AudioGenOutput},
                       2621 ; rs232cmd.c  632               { ANALOGCmdTxt, ANALCmdTxt, &AudioGenLevel1[2], &AudioGenLevel1_1
                            [0], NONE, AudioGenAnalog},
                       2622 ; rs232cmd.c  633               { AESEBUCmdTxt, AESCmdTxt,  NULL,                                
                              &AudioGenLevel1_2[0], NONE, AudioGenAESEBU},
                       2623 ; rs232cmd.c  634       };
                       2624 ; rs232cmd.c  635       
                       2625 ; rs232cmd.c  636       struct CMD_STRUCT code AudioGenLevel1_1[3] = {
000BAE rrrrrrrrrrrrrr  2626         DD      _AudioGenAESEBU
       rr                   
                       2629         PUBLIC  _AudioGenLevel1_1
                       2630         ALIGN   1
000BB2                 2631 _AudioGenLevel1_1:
000BB2 rrrrrrrrrrrrrr  2632         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000BBA rrrrrrrrrrrrrr  2633         DD      _AudioGenLevel1_1+24
       rr                   
000BBE 00000000000000  2634         DD      000000000H,000000000H
       00                   
000BC6 rrrrrrrrrrrrrr  2635         DD      _AudioGenAnalogSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BD2 rrrrrrrrrrrrrr  2636         DD      _AudioGenLevel1_1+48
       rr                   
000BD6 00000000000000  2637         DD      000000000H,000000000H
       00                   
000BDE rrrrrrrrrrrrrr  2638         DD      _AudioGenAnalogLevel,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BEA 00000000000000  2639         DD      000000000H,000000000H,000000000H
       0000000000           
                       2640 ; rs232cmd.c  637               { SIGNALCmdTxt, SIGNCmdTxt, &AudioGenLevel1_1[1], NULL, NONE, Aud
                            ioGenAnalogSignal},
                       2641 ; rs232cmd.c  638               { LEVELCmdTxt,  LEVCmdTxt,  &AudioGenLevel1_1[2], NULL, NONE, Aud
                            ioGenAnalogLevel},
                       2642 ; rs232cmd.c  639               { CLICKCmdTxt,  CLICCmdTxt, NULL,                                
                                      NULL, NONE, AudioGenAnalogClick},
                       2643 ; rs232cmd.c  640       };
                       2644 ; rs232cmd.c  641       
                       2645 ; rs232cmd.c  642       struct CMD_STRUCT code AudioGenLevel1_2[6] = {
000BF6 rrrrrrrrrrrrrr  2646         DD      _AudioGenAnalogClick
       rr                   
                       2649         PUBLIC  _AudioGenLevel1_2
                       2650         ALIGN   1
000BFA                 2651 _AudioGenLevel1_2:
000BFA rrrrrrrrrrrrrr  2652         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000C02 rrrrrrrrrrrrrr  2653         DD      _AudioGenLevel1_2+24
       rr                   
000C06 00000000000000  2654         DD      000000000H,000000000H
       00                   
000C0E rrrrrrrrrrrrrr  2655         DD      _AudioGenAESEBUSystem,_SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  35

ADDR   CODE            LINE SOURCELINE
       rrrrrr               
000C1A rrrrrrrrrrrrrr  2656         DD      _AudioGenLevel1_2+48
       rr                   
000C1E 00000000000000  2657         DD      000000000H,000000000H
       00                   
000C26 rrrrrrrrrrrrrr  2658         DD      _AudioGenAESEBUSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C32 rrrrrrrrrrrrrr  2659         DD      _AudioGenLevel1_2+72
       rr                   
000C36 00000000000000  2660         DD      000000000H,000000000H
       00                   
000C3E rrrrrrrrrrrrrr  2661         DD      _AudioGenAESEBULevel,_TIMINGCmdTxt,_TIMCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C4A rrrrrrrrrrrrrr  2662         DD      _AudioGenLevel1_2+96
       rr                   
000C4E 00000000000000  2663         DD      000000000H,000000000H
       00                   
000C56 rrrrrrrrrrrrrr  2664         DD      _AudioGenAESEBUTiming,_WORDCLOCKCmdTxt,_WORDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C62 rrrrrrrrrrrrrr  2665         DD      _AudioGenLevel1_2+120
       rr                   
000C66 00000000000000  2666         DD      000000000H,000000000H
       00                   
000C6E rrrrrrrrrrrrrr  2667         DD      _AudioGenAESEBUWordClock,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C7A 00000000000000  2668         DD      000000000H,000000000H,000000000H
       0000000000           
                       2669 ; rs232cmd.c  643               { SYSTEMCmdTxt,          SYSTCmdTxt, &AudioGenLevel1_2[1], NULL, 
                            NONE, AudioGenAESEBUSystem},
                       2670 ; rs232cmd.c  644               { SIGNALCmdTxt,          SIGNCmdTxt, &AudioGenLevel1_2[2], NULL, 
                            NONE, AudioGenAESEBUSignal},
                       2671 ; rs232cmd.c  645               { LEVELCmdTxt,   LEVCmdTxt,  &AudioGenLevel1_2[3], NULL, NONE, Au
                            dioGenAESEBULevel},
                       2672 ; rs232cmd.c  646               { TIMINGCmdTxt,  TIMCmdTxt,  &AudioGenLevel1_2[4], NULL, NONE, Au
                            dioGenAESEBUTiming},
                       2673 ; rs232cmd.c  647               { WORDCLOCKCmdTxt, WORDCmdTxt, &AudioGenLevel1_2[5], NULL, NONE, 
                            AudioGenAESEBUWordClock},
                       2674 ; rs232cmd.c  648               { CLICKCmdTxt,   CLICCmdTxt, NULL,                               
                                      NULL, NONE, AudioGenAESEBUClick},
                       2675 ; rs232cmd.c  649       };
                       2676 ; rs232cmd.c  650       
                       2677 ; rs232cmd.c  651       // **********************************************************************
                            ****
                       2678 ; rs232cmd.c  652       /*      CMD:    SUB1:   SUB2:           PARM:
                       2679 ; rs232cmd.c  653                       FACTORY
                       2680 ; rs232cmd.c  654                               :PASSword
                       2681 ; rs232cmd.c  655       
                       2682 ; rs232cmd.c  656                               :RESet
                       2683 ; rs232cmd.c  657       
                       2684 ; rs232cmd.c  658                               :V24Circuit
                       2685 ; rs232cmd.c  659                                       :COMMand
                       2686 ; rs232cmd.c  660                                       :TRANsparent
                       2687 ; rs232cmd.c  661       
                       2688 ; rs232cmd.c  662                               :CHECksum
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  36

ADDR   CODE            LINE SOURCELINE
                       2689 ; rs232cmd.c  663                                       :CODE
                       2690 ; rs232cmd.c  664                                       :PLD
                       2691 ; rs232cmd.c  665                                       :EMBaudio
                       2692 ; rs232cmd.c  666                                       :PATTern
                       2693 ; rs232cmd.c  667       
                       2694 ; rs232cmd.c  668                               :MAINboard
                       2695 ; rs232cmd.c  669                                       :VERSion
                       2696 ; rs232cmd.c  670                                       :IDN
                       2697 ; rs232cmd.c  671                                               :COMPany
                       2698 ; rs232cmd.c  672                                               :TYPE
                       2699 ; rs232cmd.c  673                                               :KUNumber
                       2700 ; rs232cmd.c  674                                               :SWRevision
                       2701 ; rs232cmd.c  675                                       :SYSTem                         PAL|NTSC
                       2702 ; rs232cmd.c  676                                       :FMSDate
                       2703 ; rs232cmd.c  677                                               :PRODuction     <year>,<month>,<d
                            ay>
                       2704 ; rs232cmd.c  678                                               :UPDate                 <year>,<m
                            onth>,<day>
                       2705 ; rs232cmd.c  679       
                       2706 ; rs232cmd.c  680                               :GENLock
                       2707 ; rs232cmd.c  681                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2708 ; rs232cmd.c  682                                       :VERSion
                       2709 ; rs232cmd.c  683                                       :FREFerence
                       2710 ; rs232cmd.c  684                                               [:DATE]                 <year>,<m
                            onth>,<day>
                       2711 ; rs232cmd.c  685                                               :DAC
                       2712 ; rs232cmd.c  686                                       :UREFerence
                       2713 ; rs232cmd.c  687                                               [:DATE]                 <year>,<m
                            onth>,<day>
                       2714 ; rs232cmd.c  688                                               :DAC
                       2715 ; rs232cmd.c  689                                       :HPHZero                        <pal>,<nt
                            sc>
                       2716 ; rs232cmd.c  690                                       :PHASe                          <pal>,<nt
                            sc>
                       2717 ; rs232cmd.c  691       
                       2718 ; rs232cmd.c  692                               :BB 1
                       2719 ; rs232cmd.c  693                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2720 ; rs232cmd.c  694                                       :VERSion
                       2721 ; rs232cmd.c  695                                       :SIGNAL                         NORMAL|F4
                            5MHZ
                       2722 ; rs232cmd.c  696                                       :PHASe                          <pal>,<nt
                            sc>
                       2723 ; rs232cmd.c  697                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2724 ; rs232cmd.c  698                                       :DAC                                    <
                            gain>,<offset>,<level>
                       2725 ; rs232cmd.c  699       
                       2726 ; rs232cmd.c  700                               :BB 2-3
                       2727 ; rs232cmd.c  701                                       [:DATE]                         <year>,<m
                            onth>,<day>
                       2728 ; rs232cmd.c  702                                       :PHASe                          <pal>,<nt
                            sc>
                       2729 ; rs232cmd.c  703                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2730 ; rs232cmd.c  704                                       :DAC                                    <
                            gain>,<offset>,<level>
                       2731 ; rs232cmd.c  705       
                       2732 ; rs232cmd.c  706                               :TSGenerator
                       2733 ; rs232cmd.c  707                                       [:DATE]                         <year>,<m
                            onth>,<day>
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  37

ADDR   CODE            LINE SOURCELINE
                       2734 ; rs232cmd.c  708                                       :AGAin                          <pal>,<nt
                            sc>
                       2735 ; rs232cmd.c  709                                       :CGAin                          <pal>,<nt
                            sc>
                       2736 ; rs232cmd.c  710                                       :PHASE                          <pal>,<nt
                            sc>
                       2737 ; rs232cmd.c  711                                       :SCHPhase                       <pal>,<nt
                            sc>
                       2738 ; rs232cmd.c  712       
                       2739 ; rs232cmd.c  713                               :AUDio
                       2740 ; rs232cmd.c  714                                       [:STATus]
                       2741 ; rs232cmd.c  715                                       :DATE                                   <
                            year>,<month>,<day>
                       2742 ; rs232cmd.c  716                                       :ALEVel                         <left>,<r
                            ight>
                       2743 ; rs232cmd.c  717       
                       2744 ; rs232cmd.c  718                               :PLD
                       2745 ; rs232cmd.c  719                                       :VERSion                        <video>,<
                            audio>
                       2746 ; rs232cmd.c  720       
                       2747 ; rs232cmd.c  721                               :TCXO
                       2748 ; rs232cmd.c  722                                       [:STATus]
                       2749 ; rs232cmd.c  723       
                       2750 ; rs232cmd.c  724                               :MMCH                                           <
                            subaddress>[,<data>]
                       2751 ; rs232cmd.c  725       
                       2752 ; rs232cmd.c  726       */                                                                      
                       2753 ; rs232cmd.c  727       
                       2754 ; rs232cmd.c  728       struct CMD_STRUCT code Factory[12] = {
000C86 rrrrrrrrrrrrrr  2755         DD      _AudioGenAESEBUClick
       rr                   
                       2758         PUBLIC  _Factory
                       2759         ALIGN   1
000C8A                 2760 _Factory:
000C8A rrrrrrrrrrrrrr  2761         DD      _PASSWORDCmdTxt,_PASSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000C92 rrrrrrrrrrrrrr  2762         DD      _Factory+24
       rr                   
000C96 00000000000000  2763         DD      000000000H,000000000H
       00                   
000C9E rrrrrrrrrrrrrr  2764         DD      _FactPassword,_RESETCmdTxt,_RESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000CAA rrrrrrrrrrrrrr  2765         DD      _Factory+48
       rr                   
000CAE 00000000000000  2766         DD      000000000H,000000000H
       00                   
000CB6 rrrrrrrrrrrrrr  2767         DD      _FactReset,_V24CIRCUITCmdTxt,_V24CCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000CC2 rrrrrrrrrrrrrr  2768         DD      _Factory+72
       rr                   
000CC6 rrrrrrrrrrrrrr  2769         DD      _FactoryLevel1
       rr                   
000CCA 00000000000000  2770         DD      000000000H,000000000H
       00                   
000CD2 rrrrrrrrrrrrrr  2771         DD      _CHECKSUMCmdTxt,_CHECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  38

ADDR   CODE            LINE SOURCELINE
000CDA rrrrrrrrrrrrrr  2772         DD      _Factory+96
       rr                   
000CDE rrrrrrrrrrrrrr  2773         DD      _FactoryLevel9
       rr                   
000CE2 00000000000000  2774         DD      000000000H,000000000H
       00                   
000CEA rrrrrrrrrrrrrr  2775         DD      _MAINBOARDCmdTxt,_MAINCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000CF2 rrrrrrrrrrrrrr  2776         DD      _Factory+120
       rr                   
000CF6 rrrrrrrrrrrrrr  2777         DD      _FactoryLevel2
       rr                   
000CFA 00000000000000  2778         DD      000000000H,000000000H
       00                   
000D02 rrrrrrrrrrrrrr  2779         DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D0A rrrrrrrrrrrrrr  2780         DD      _Factory+144
       rr                   
000D0E rrrrrrrrrrrrrr  2781         DD      _FactoryLevel3
       rr                   
000D12 00000000        2782         DD      000000000H
000D16 rrrrrrrrrrrrrr  2783         DD      _FactGenlockGenDate,_BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D22 rrrrrrrrrrrrrr  2784         DD      _Factory+168
       rr                   
000D26 rrrrrrrrrrrrrr  2785         DD      _FactoryLevel4,_BBGenSuffix,_FactBBGenDate
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D32 rrrrrrrrrrrrrr  2786         DD      _TSGENERATORCmdTxt,_TSGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D3A rrrrrrrrrrrrrr  2787         DD      _Factory+192
       rr                   
000D3E rrrrrrrrrrrrrr  2788         DD      _FactoryLevel5
       rr                   
000D42 00000000        2789         DD      000000000H
000D46 rrrrrrrrrrrrrr  2790         DD      _FactTSGenDate,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D52 rrrrrrrrrrrrrr  2791         DD      _Factory+216
       rr                   
000D56 rrrrrrrrrrrrrr  2792         DD      _FactoryLevel6
       rr                   
000D5A 00000000        2793         DD      000000000H
000D5E rrrrrrrrrrrrrr  2794         DD      _FactAudioGenStatus,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D6A rrrrrrrrrrrrrr  2795         DD      _Factory+240
       rr                   
000D6E rrrrrrrrrrrrrr  2796         DD      _FactoryLevel7
       rr                   
000D72 00000000        2797         DD      000000000H
000D76 rrrrrrrrrrrrrr  2798         DD      _FactPLDVersion,_TCXOCmdTxt,_TCXOCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  39

ADDR   CODE            LINE SOURCELINE
000D82 rrrrrrrrrrrrrr  2799         DD      _Factory+264
       rr                   
000D86 rrrrrrrrrrrrrr  2800         DD      _FactoryLevel8
       rr                   
000D8A 00000000        2801         DD      000000000H
000D8E rrrrrrrrrrrrrr  2802         DD      _FactTCXOStatus,_MMCHIPCmdTxt,_MMCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D9A 00000000000000  2803         DD      000000000H,000000000H,000000000H
       0000000000           
                       2804 ; rs232cmd.c  729               { PASSWORDCmdTxt,       PASSCmdTxt, &Factory[1],  NULL,          
                                                    NONE,            FactPassword},
                       2805 ; rs232cmd.c  730               { RESETCmdTxt,          RESCmdTxt,  &Factory[2],  NULL,          
                                                    NONE,            FactReset},
                       2806 ; rs232cmd.c  731               { V24CIRCUITCmdTxt,     V24CCmdTxt, &Factory[3],  &FactoryLevel1[
                            0], NONE,                NONE},
                       2807 ; rs232cmd.c  732               { CHECKSUMCmdTxt,       CHECCmdTxt, &Factory[4],  &FactoryLevel9[
                            0], NONE,                        NONE},
                       2808 ; rs232cmd.c  733               { MAINBOARDCmdTxt,      MAINCmdTxt, &Factory[5],  &FactoryLevel2[
                            0], NONE,                        NONE},
                       2809 ; rs232cmd.c  734               { GENLOCKCmdTxt,                GENLCmdTxt,     &Factory[6],  &Fa
                            ctoryLevel3[0], NONE,                    FactGenlockGenDate},
                       2810 ; rs232cmd.c  735               { BBCmdTxt,                     BBCmdTxt,       &Factory[7],  &Fa
                            ctoryLevel4[0], BBGenSuffix, FactBBGenDate},
                       2811 ; rs232cmd.c  736               { TSGENERATORCmdTxt, TSGCmdTxt,         &Factory[8],  &FactoryLev
                            el5[0], NONE,                    FactTSGenDate},
                       2812 ; rs232cmd.c  737               { AUDIOCmdTxt,          AUDCmdTxt,      &Factory[9],  &FactoryLev
                            el6[0], NONE,                    FactAudioGenStatus},
                       2813 ; rs232cmd.c  738               { PLDCmdTxt,                    PLDCmdTxt,      &Factory[10], &Fa
                            ctoryLevel7[0], NONE,                    FactPLDVersion},
                       2814 ; rs232cmd.c  739               { TCXOCmdTxt,                   TCXOCmdTxt,     &Factory[11], &Fa
                            ctoryLevel8[0], NONE,                    FactTCXOStatus},
                       2815 ; rs232cmd.c  740               { MMCHIPCmdTxt,                 MMCHCmdTxt, NULL,                
                                      NULL,                                 NONE,                    FactMultiMediaChip},
                       2816 ; rs232cmd.c  741       };
                       2817 ; rs232cmd.c  742       
                       2818 ; rs232cmd.c  743       struct CMD_STRUCT code FactoryLevel1[2] = {
000DA6 rrrrrrrrrrrrrr  2819         DD      _FactMultiMediaChip
       rr                   
                       2822         PUBLIC  _FactoryLevel1
                       2823         ALIGN   1
000DAA                 2824 _FactoryLevel1:
000DAA rrrrrrrrrrrrrr  2825         DD      _COMMANDCmdTxt,_COMMCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DB2 rrrrrrrrrrrrrr  2826         DD      _FactoryLevel1+24
       rr                   
000DB6 00000000000000  2827         DD      000000000H,000000000H
       00                   
000DBE rrrrrrrrrrrrrr  2828         DD      _FactV24Command,_TRANSPARENTCmdTxt,_TRANCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000DCA 00000000000000  2829         DD      000000000H,000000000H,000000000H
       0000000000           
                       2830 ; rs232cmd.c  744               { COMMANDCmdTxt,                 COMMCmdTxt, &FactoryLevel1[1], N
                            ULL, NONE, FactV24Command},
                       2831 ; rs232cmd.c  745               { TRANSPARENTCmdTxt, TRANCmdTxt, NULL,                           
                                              NULL, NONE, FactV24Transparent},
                       2832 ; rs232cmd.c  746       };
                       2833 ; rs232cmd.c  747       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  40

ADDR   CODE            LINE SOURCELINE
                       2834 ; rs232cmd.c  748       struct CMD_STRUCT code FactoryLevel9[5] = {
000DD6 rrrrrrrrrrrrrr  2835         DD      _FactV24Transparent
       rr                   
                       2838         PUBLIC  _FactoryLevel9
                       2839         ALIGN   1
000DDA                 2840 _FactoryLevel9:
000DDA rrrrrrrrrrrrrr  2841         DD      _CODECmdTxt,_CODECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DE2 rrrrrrrrrrrrrr  2842         DD      _FactoryLevel9+24
       rr                   
000DE6 00000000000000  2843         DD      000000000H,000000000H
       00                   
000DEE rrrrrrrrrrrrrr  2844         DD      _FactChecksumCode,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000DFA rrrrrrrrrrrrrr  2845         DD      _FactoryLevel9+48
       rr                   
000DFE 00000000000000  2846         DD      000000000H,000000000H
       00                   
000E06 rrrrrrrrrrrrrr  2847         DD      _FactChecksumPLD,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E12 rrrrrrrrrrrrrr  2848         DD      _FactoryLevel9+72
       rr                   
000E16 00000000000000  2849         DD      000000000H,000000000H
       00                   
000E1E rrrrrrrrrrrrrr  2850         DD      _FactChecksumEmbAudio,_PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E2A rrrrrrrrrrrrrr  2851         DD      _FactoryLevel9+96
       rr                   
000E2E 00000000000000  2852         DD      000000000H,000000000H
       00                   
000E36 rrrrrrrrrrrrrr  2853         DD      _FactChecksumPattern,_RANGECmdTxt,_RANGCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E42 00000000000000  2854         DD      000000000H,000000000H,000000000H
       0000000000           
                       2855 ; rs232cmd.c  749               { CODECmdTxt,           CODECmdTxt, &FactoryLevel9[1], NULL, NONE
                            , FactChecksumCode},
                       2856 ; rs232cmd.c  750               { PLDCmdTxt,            PLDCmdTxt,  &FactoryLevel9[2], NULL, NONE
                            , FactChecksumPLD},
                       2857 ; rs232cmd.c  751               { EMBAUDIOCmdTxt, EMBCmdTxt,  &FactoryLevel9[3], NULL, NONE, Fact
                            ChecksumEmbAudio},
                       2858 ; rs232cmd.c  752               { PATTERNCmdTxt,        PATTCmdTxt, &FactoryLevel9[4], NULL, NONE
                            , FactChecksumPattern},
                       2859 ; rs232cmd.c  753               { RANGECmdTxt,  RANGCmdTxt, NULL,                                
                            NULL, NONE, FactChecksumRange},
                       2860 ; rs232cmd.c  754       };
                       2861 ; rs232cmd.c  755       
                       2862 ; rs232cmd.c  756       struct CMD_STRUCT code FactoryLevel2[4] = {
000E4E rrrrrrrrrrrrrr  2863         DD      _FactChecksumRange
       rr                   
                       2867         PUBLIC  _FactoryLevel2
                       2868         ALIGN   1
000E52                 2869 _FactoryLevel2:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  41

ADDR   CODE            LINE SOURCELINE
000E52 rrrrrrrrrrrrrr  2870         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E5A rrrrrrrrrrrrrr  2871         DD      _FactoryLevel2+24
       rr                   
000E5E 00000000000000  2872         DD      000000000H,000000000H
       00                   
000E66 rrrrrrrrrrrrrr  2873         DD      _FactMainVersion,_IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E72 rrrrrrrrrrrrrr  2874         DD      _FactoryLevel2+48
       rr                   
000E76 rrrrrrrrrrrrrr  2875         DD      _FactoryLevel2_2
       rr                   
000E7A 00000000000000  2876         DD      000000000H,000000000H
       00                   
000E82 rrrrrrrrrrrrrr  2877         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E8A rrrrrrrrrrrrrr  2878         DD      _FactoryLevel2+72
       rr                   
000E8E 00000000000000  2879         DD      000000000H,000000000H
       00                   
000E96 rrrrrrrrrrrrrr  2880         DD      _FactMainSystem,_FMSDATECmdTxt,_FMSDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000EA2 00000000        2881         DD      000000000H
000EA6 rrrrrrrrrrrrrr  2882         DD      _FactoryLevel2_1
       rr                   
                       2883 ; rs232cmd.c  757               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel2[1], NULL,     
                                                             NONE, FactMainVersion},
                       2884 ; rs232cmd.c  758               { IDNCmdTxt,            IDNCmdTxt,  &FactoryLevel2[2], &FactoryLe
                            vel2_2[0], NONE, NONE},
                       2885 ; rs232cmd.c  759               { SYSTEMCmdTxt,         SYSTCmdTxt, &FactoryLevel2[3], NULL,     
                                                             NONE, FactMainSystem},
                       2886 ; rs232cmd.c  760               { FMSDATECmdTxt,        FMSDCmdTxt, NULL,                        
                                     &FactoryLevel2_1[0], NONE, NONE},
                       2887 ; rs232cmd.c  761       };
                       2888 ; rs232cmd.c  762       
                       2889 ; rs232cmd.c  763       struct CMD_STRUCT code FactoryLevel2_1[2] = {
000EAA 00000000000000  2890         DD      000000000H,000000000H
       00                   
                       2893         PUBLIC  _FactoryLevel2_1
                       2894         ALIGN   1
000EB2                 2895 _FactoryLevel2_1:
000EB2 rrrrrrrrrrrrrr  2896         DD      _PRODUCTIONCmdTxt,_PRODCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000EBA rrrrrrrrrrrrrr  2897         DD      _FactoryLevel2_1+24
       rr                   
000EBE 00000000000000  2898         DD      000000000H,000000000H
       00                   
000EC6 rrrrrrrrrrrrrr  2899         DD      _FactMainFMSDateProd,_UPDATECmdTxt,_UPDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000ED2 00000000000000  2900         DD      000000000H,000000000H,000000000H
       0000000000           
                       2901 ; rs232cmd.c  764               { PRODUCTIONCmdTxt, PRODCmdTxt, &FactoryLevel2_1[1], NULL, NONE, 
                            FactMainFMSDateProd},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  42

ADDR   CODE            LINE SOURCELINE
                       2902 ; rs232cmd.c  765               { UPDATECmdTxt,           UPDCmdTxt,  NULL,                      
                                              NULL, NONE, FactMainFMSDateUpd},
                       2903 ; rs232cmd.c  766       };
                       2904 ; rs232cmd.c  767       
                       2905 ; rs232cmd.c  768       struct CMD_STRUCT code FactoryLevel2_2[4] = {
000EDE rrrrrrrrrrrrrr  2906         DD      _FactMainFMSDateUpd
       rr                   
                       2909         PUBLIC  _FactoryLevel2_2
                       2910         ALIGN   1
000EE2                 2911 _FactoryLevel2_2:
000EE2 rrrrrrrrrrrrrr  2912         DD      _COMPANYCmdTxt,_COMPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000EEA rrrrrrrrrrrrrr  2913         DD      _FactoryLevel2_2+24
       rr                   
000EEE 00000000000000  2914         DD      000000000H,000000000H
       00                   
000EF6 rrrrrrrrrrrrrr  2915         DD      _FactMainIDNCompany,_TYPECmdTxt,_TYPECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F02 rrrrrrrrrrrrrr  2916         DD      _FactoryLevel2_2+48
       rr                   
000F06 00000000000000  2917         DD      000000000H,000000000H
       00                   
000F0E rrrrrrrrrrrrrr  2918         DD      _FactMainIDNType,_KUNUMBERCmdTxt,_KUNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F1A rrrrrrrrrrrrrr  2919         DD      _FactoryLevel2_2+72
       rr                   
000F1E 00000000000000  2920         DD      000000000H,000000000H
       00                   
000F26 rrrrrrrrrrrrrr  2921         DD      _FactMainIDNKUNumber,_SWREVISIONCmdTxt,_SWRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F32 00000000000000  2922         DD      000000000H,000000000H,000000000H
       0000000000           
                       2923 ; rs232cmd.c  769               { COMPANYCmdTxt,    COMPCmdTxt, &FactoryLevel2_2[1], NULL, NONE, 
                            FactMainIDNCompany},
                       2924 ; rs232cmd.c  770               { TYPECmdTxt,     TYPECmdTxt, &FactoryLevel2_2[2], NULL, NONE, Fa
                            ctMainIDNType},
                       2925 ; rs232cmd.c  771               { KUNUMBERCmdTxt,   KUNCmdTxt,  &FactoryLevel2_2[3], NULL, NONE, 
                            FactMainIDNKUNumber},
                       2926 ; rs232cmd.c  772               { SWREVISIONCmdTxt, SWRCmdTxt,  NULL,                            
                                      NULL, NONE, FactMainIDNSWRevision},
                       2927 ; rs232cmd.c  773       };
                       2928 ; rs232cmd.c  774       
                       2929 ; rs232cmd.c  775       struct CMD_STRUCT code FactoryLevel3[6] = {
000F3E rrrrrrrrrrrrrr  2930         DD      _FactMainIDNSWRevision
       rr                   
                       2933         PUBLIC  _FactoryLevel3
                       2934         ALIGN   1
000F42                 2935 _FactoryLevel3:
000F42 rrrrrrrrrrrrrr  2936         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000F4A rrrrrrrrrrrrrr  2937         DD      _FactoryLevel3+24
       rr                   
000F4E 00000000000000  2938         DD      000000000H,000000000H
       00                   
000F56 rrrrrrrrrrrrrr  2939         DD      _FactGenlockGenDate,_VERSIONCmdTxt,_VERSCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  43

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F62 rrrrrrrrrrrrrr  2940         DD      _FactoryLevel3+48
       rr                   
000F66 00000000000000  2941         DD      000000000H,000000000H
       00                   
000F6E rrrrrrrrrrrrrr  2942         DD      _FactGenlockGenVersion,_FREFERENCECmdTxt,_FREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F7A rrrrrrrrrrrrrr  2943         DD      _FactoryLevel3+72
       rr                   
000F7E rrrrrrrrrrrrrr  2944         DD      _FactoryLevel3_1
       rr                   
000F82 00000000        2945         DD      000000000H
000F86 rrrrrrrrrrrrrr  2946         DD      _FactGenlockGenFRefDate,_UREFERENCECmdTxt,_UREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F92 rrrrrrrrrrrrrr  2947         DD      _FactoryLevel3+96
       rr                   
000F96 rrrrrrrrrrrrrr  2948         DD      _FactoryLevel3_2
       rr                   
000F9A 00000000        2949         DD      000000000H
000F9E rrrrrrrrrrrrrr  2950         DD      _FactGenlockGenURefDate,_HPHZEROCmdTxt,_HPHZCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FAA rrrrrrrrrrrrrr  2951         DD      _FactoryLevel3+120
       rr                   
000FAE 00000000000000  2952         DD      000000000H,000000000H
       00                   
000FB6 rrrrrrrrrrrrrr  2953         DD      _FactGenlockGenHPHZero,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FC2 00000000000000  2954         DD      000000000H,000000000H,000000000H
       0000000000           
                       2955 ; rs232cmd.c  776               { DATECmdTxt,     DATECmdTxt, &FactoryLevel3[1], NULL,           
                                                    NONE, FactGenlockGenDate},
                       2956 ; rs232cmd.c  777               { VERSIONCmdTxt,    VERSCmdTxt, &FactoryLevel3[2], NULL,         
                                                            NONE, FactGenlockGenVersion},
                       2957 ; rs232cmd.c  778               { FREFERENCECmdTxt, FREFCmdTxt, &FactoryLevel3[3], &FactoryLevel3
                            _1[0], NONE, FactGenlockGenFRefDate},
                       2958 ; rs232cmd.c  779               { UREFERENCECmdTxt, UREFCmdTxt, &FactoryLevel3[4], &FactoryLevel3
                            _2[0], NONE, FactGenlockGenURefDate},
                       2959 ; rs232cmd.c  780               { HPHZEROCmdTxt,    HPHZCmdTxt, &FactoryLevel3[5], NULL,         
                                                                    NONE, FactGenlockGenHPHZero},
                       2960 ; rs232cmd.c  781               { PHASECmdTxt,            PHASCmdTxt, NULL,                      
                                            NULL,                                           NONE, FactGenlockGenPhase},
                       2961 ; rs232cmd.c  782       };
                       2962 ; rs232cmd.c  783       
                       2963 ; rs232cmd.c  784       struct CMD_STRUCT code FactoryLevel3_1[2] = {
000FCE rrrrrrrrrrrrrr  2964         DD      _FactGenlockGenPhase
       rr                   
                       2967         PUBLIC  _FactoryLevel3_1
                       2968         ALIGN   1
000FD2                 2969 _FactoryLevel3_1:
000FD2 rrrrrrrrrrrrrr  2970         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  44

ADDR   CODE            LINE SOURCELINE
000FDA rrrrrrrrrrrrrr  2971         DD      _FactoryLevel3_1+24
       rr                   
000FDE 00000000000000  2972         DD      000000000H,000000000H
       00                   
000FE6 rrrrrrrrrrrrrr  2973         DD      _FactGenlockGenFRefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FF2 00000000000000  2974         DD      000000000H,000000000H,000000000H
       0000000000           
                       2975 ; rs232cmd.c  785               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_1[1], NULL, NONE, FactGe
                            nlockGenFRefDate},
                       2976 ; rs232cmd.c  786               { DACCmdTxt,  DACCmdTxt,  NULL,                                  
                                      NULL, NONE, FactGenlockGenFRefDAC},
                       2977 ; rs232cmd.c  787       };
                       2978 ; rs232cmd.c  788       
                       2979 ; rs232cmd.c  789       struct CMD_STRUCT code FactoryLevel3_2[2] = {
000FFE rrrrrrrrrrrrrr  2980         DD      _FactGenlockGenFRefDAC
       rr                   
                       2983         PUBLIC  _FactoryLevel3_2
                       2984         ALIGN   1
001002                 2985 _FactoryLevel3_2:
001002 rrrrrrrrrrrrrr  2986         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00100A rrrrrrrrrrrrrr  2987         DD      _FactoryLevel3_2+24
       rr                   
00100E 00000000000000  2988         DD      000000000H,000000000H
       00                   
001016 rrrrrrrrrrrrrr  2989         DD      _FactGenlockGenURefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001022 00000000000000  2990         DD      000000000H,000000000H,000000000H
       0000000000           
                       2991 ; rs232cmd.c  790               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_2[1], NULL, NONE, FactGe
                            nlockGenURefDate},
                       2992 ; rs232cmd.c  791               { DACCmdTxt,  DACCmdTxt,  NULL,                                  
                                      NULL, NONE, FactGenlockGenURefDAC},
                       2993 ; rs232cmd.c  792       };
                       2994 ; rs232cmd.c  793       
                       2995 ; rs232cmd.c  794       struct CMD_STRUCT code FactoryLevel4[6] = {
00102E rrrrrrrrrrrrrr  2996         DD      _FactGenlockGenURefDAC
       rr                   
                       2999         PUBLIC  _FactoryLevel4
                       3000         ALIGN   1
001032                 3001 _FactoryLevel4:
001032 rrrrrrrrrrrrrr  3002         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00103A rrrrrrrrrrrrrr  3003         DD      _FactoryLevel4+24
       rr                   
00103E 00000000000000  3004         DD      000000000H,000000000H
       00                   
001046 rrrrrrrrrrrrrr  3005         DD      _FactBBGenDate,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001052 rrrrrrrrrrrrrr  3006         DD      _FactoryLevel4+48
       rr                   
001056 00000000000000  3007         DD      000000000H,000000000H
       00                   
00105E rrrrrrrrrrrrrr  3008         DD      _FactBBGenVersion,_SIGNALCmdTxt,_SIGNCmdTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  45

ADDR   CODE            LINE SOURCELINE
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00106A rrrrrrrrrrrrrr  3009         DD      _FactoryLevel4+72
       rr                   
00106E 00000000000000  3010         DD      000000000H,000000000H
       00                   
001076 rrrrrrrrrrrrrr  3011         DD      _FactBBGenSignal,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001082 rrrrrrrrrrrrrr  3012         DD      _FactoryLevel4+96
       rr                   
001086 00000000000000  3013         DD      000000000H,000000000H
       00                   
00108E rrrrrrrrrrrrrr  3014         DD      _FactBBGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00109A rrrrrrrrrrrrrr  3015         DD      _FactoryLevel4+120
       rr                   
00109E 00000000000000  3016         DD      000000000H,000000000H
       00                   
0010A6 rrrrrrrrrrrrrr  3017         DD      _FactBBGenScHPhase,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010B2 00000000000000  3018         DD      000000000H,000000000H,000000000H
       0000000000           
                       3019 ; rs232cmd.c  795               { DATECmdTxt,   DATECmdTxt, &FactoryLevel4[1], NULL, NONE, FactBB
                            GenDate},
                       3020 ; rs232cmd.c  796               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel4[2], NULL, NONE
                            , FactBBGenVersion},
                       3021 ; rs232cmd.c  797               { SIGNALCmdTxt,         SIGNCmdTxt, &FactoryLevel4[3], NULL, NONE
                            , FactBBGenSignal},
                       3022 ; rs232cmd.c  798               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel4[4], NULL, NONE, FactBB
                            GenPhase},
                       3023 ; rs232cmd.c  799               { SCHPHASECmdTxt,       SCHPCmdTxt, &FactoryLevel4[5], NULL, NONE
                            , FactBBGenScHPhase},
                       3024 ; rs232cmd.c  800               { DACCmdTxt,            DACCmdTxt,  NULL,                        
                                     NULL, NONE, FactBBGenDAC},
                       3025 ; rs232cmd.c  801       };
                       3026 ; rs232cmd.c  802       
                       3027 ; rs232cmd.c  803       struct CMD_STRUCT code FactoryLevel5[5] = {
0010BE rrrrrrrrrrrrrr  3028         DD      _FactBBGenDAC
       rr                   
                       3031         PUBLIC  _FactoryLevel5
                       3032         ALIGN   1
0010C2                 3033 _FactoryLevel5:
0010C2 rrrrrrrrrrrrrr  3034         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0010CA rrrrrrrrrrrrrr  3035         DD      _FactoryLevel5+24
       rr                   
0010CE 00000000000000  3036         DD      000000000H,000000000H
       00                   
0010D6 rrrrrrrrrrrrrr  3037         DD      _FactTSGenDate,_AGAINCmdTxt,_AGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010E2 rrrrrrrrrrrrrr  3038         DD      _FactoryLevel5+48
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  46

ADDR   CODE            LINE SOURCELINE
0010E6 00000000000000  3039         DD      000000000H,000000000H
       00                   
0010EE rrrrrrrrrrrrrr  3040         DD      _FactTSGenAGain,_CGAINCmdTxt,_CGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010FA rrrrrrrrrrrrrr  3041         DD      _FactoryLevel5+72
       rr                   
0010FE 00000000000000  3042         DD      000000000H,000000000H
       00                   
001106 rrrrrrrrrrrrrr  3043         DD      _FactTSGenCGain,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001112 rrrrrrrrrrrrrr  3044         DD      _FactoryLevel5+96
       rr                   
001116 00000000000000  3045         DD      000000000H,000000000H
       00                   
00111E rrrrrrrrrrrrrr  3046         DD      _FactTSGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00112A 00000000000000  3047         DD      000000000H,000000000H,000000000H
       0000000000           
                       3048 ; rs232cmd.c  804               { DATECmdTxt,   DATECmdTxt, &FactoryLevel5[1], NULL, NONE, FactTS
                            GenDate},
                       3049 ; rs232cmd.c  805               { AGAINCmdTxt,  AGACmdTxt,      &FactoryLevel5[2], NULL, NONE, Fa
                            ctTSGenAGain},
                       3050 ; rs232cmd.c  806               { CGAINCmdTxt,  CGACmdTxt,      &FactoryLevel5[3], NULL, NONE, Fa
                            ctTSGenCGain},
                       3051 ; rs232cmd.c  807               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel5[4], NULL, NONE, FactTS
                            GenPhase},
                       3052 ; rs232cmd.c  808               { SCHPHASECmdTxt,       SCHPCmdTxt, NULL,                        
                                     NULL, NONE, FactTSGenScHPhase},
                       3053 ; rs232cmd.c  809       };
                       3054 ; rs232cmd.c  810       
                       3055 ; rs232cmd.c  811       struct CMD_STRUCT code FactoryLevel6[3] = {
001136 rrrrrrrrrrrrrr  3056         DD      _FactTSGenScHPhase
       rr                   
                       3059         PUBLIC  _FactoryLevel6
                       3060         ALIGN   1
00113A                 3061 _FactoryLevel6:
00113A rrrrrrrrrrrrrr  3062         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001142 rrrrrrrrrrrrrr  3063         DD      _FactoryLevel6+24
       rr                   
001146 00000000000000  3064         DD      000000000H,000000000H
       00                   
00114E rrrrrrrrrrrrrr  3065         DD      _FactAudioGenStatus,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00115A rrrrrrrrrrrrrr  3066         DD      _FactoryLevel6+48
       rr                   
00115E 00000000000000  3067         DD      000000000H,000000000H
       00                   
001166 rrrrrrrrrrrrrr  3068         DD      _FactAudioGenDate,_ALEVELCmdTxt,_ALEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  47

ADDR   CODE            LINE SOURCELINE
001172 00000000000000  3069         DD      000000000H,000000000H,000000000H
       0000000000           
                       3070 ; rs232cmd.c  812               { STATUSCmdTxt, STATCmdTxt, &FactoryLevel6[1], NULL, NONE, FactAu
                            dioGenStatus},
                       3071 ; rs232cmd.c  813               { DATECmdTxt,   DATECmdTxt, &FactoryLevel6[2], NULL, NONE, FactAu
                            dioGenDate},
                       3072 ; rs232cmd.c  814               { ALEVELCmdTxt, ALEVCmdTxt, NULL,                                
                             NULL, NONE, FactAudioGenLevel},
                       3073 ; rs232cmd.c  815       };
                       3074 ; rs232cmd.c  816       
                       3075 ; rs232cmd.c  817       struct CMD_STRUCT code FactoryLevel7[1] = {
00117E rrrrrrrrrrrrrr  3076         DD      _FactAudioGenLevel
       rr                   
                       3079         PUBLIC  _FactoryLevel7
                       3080         ALIGN   1
001182                 3081 _FactoryLevel7:
001182 rrrrrrrrrrrrrr  3082         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00118A 00000000000000  3083         DD      000000000H,000000000H,000000000H
       0000000000           
                       3084 ; rs232cmd.c  818               { VERSIONCmdTxt,        VERSCmdTxt, NULL, NULL, NONE, FactPLDVers
                            ion},
                       3085 ; rs232cmd.c  819       };
                       3086 ; rs232cmd.c  820       
                       3087 ; rs232cmd.c  821       struct CMD_STRUCT code FactoryLevel8[1] = {
001196 rrrrrrrrrrrrrr  3088         DD      _FactPLDVersion
       rr                   
                       3091         PUBLIC  _FactoryLevel8
                       3092         ALIGN   1
00119A                 3093 _FactoryLevel8:
00119A rrrrrrrrrrrrrr  3094         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011A2 00000000000000  3095         DD      000000000H,000000000H,000000000H
       0000000000           
                       3096 ; rs232cmd.c  822               { STATUSCmdTxt, STATCmdTxt, NULL, NULL, NONE, FactTCXOStatus},
                       3097 ; rs232cmd.c  823       };
                       3098 ; rs232cmd.c  824       
                       3099 ; rs232cmd.c  825       //***********************************************************************
                            ***
                       3100 ; rs232cmd.c  826       // The following parameter structures are based on the enumerated types
                       3101 ; rs232cmd.c  827       //  defined in TABLES.H, ie. DO NOT change the order of these names. If
                       3102 ; rs232cmd.c  828       //  the order is changed in TABLES.H it must also be changed here.
                       3103 ; rs232cmd.c  829       
                       3104 ; rs232cmd.c  830       struct PAR_STRUCT code SAVEPar[1] = {
0011AE rrrrrrrrrrrrrr  3105         DD      _FactTCXOStatus
       rr                   
                       3115         PUBLIC  _SAVEPar
                       3116         ALIGN   1
0011B2                 3117 _SAVEPar:
0011B2 rrrrrrrrrrrrrr  3118         DD      _SAVEParTxt,_SAVEParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3119 ; rs232cmd.c  831               { SAVEParTxt, SAVEParTxt, NULL}
                       3120 ; rs232cmd.c  832       };
                       3121 ; rs232cmd.c  833       
                       3122 ; rs232cmd.c  834       struct PAR_STRUCT code GenlockSystemPar[4] = {
0011BA 00000000        3123         DD      000000000H
                       3127         PUBLIC  _GenlockSystemPar
                       3128         ALIGN   1
0011BE                 3129 _GenlockSystemPar:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  48

ADDR   CODE            LINE SOURCELINE
0011BE rrrrrrrrrrrrrr  3130         DD      _INTERNALParTxt,_INTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011C6 rrrrrrrrrrrrrr  3131         DD      _GenlockSystemPar+12
       rr                   
0011CA rrrrrrrrrrrrrr  3132         DD      _PALBURSTParTxt,_PALBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011D2 rrrrrrrrrrrrrr  3133         DD      _GenlockSystemPar+24
       rr                   
0011D6 rrrrrrrrrrrrrr  3134         DD      _NTSCBURSTParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011DE rrrrrrrrrrrrrr  3135         DD      _GenlockSystemPar+36
       rr                   
0011E2 rrrrrrrrrrrrrr  3136         DD      _F10MHzParTxt,_F10MHzParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3137 ; rs232cmd.c  835               { INTERNALParTxt,  INTParTxt,   &GenlockSystemPar[1]},
                       3138 ; rs232cmd.c  836               { PALBURSTParTxt,  PALBParTxt,  &GenlockSystemPar[2]},
                       3139 ; rs232cmd.c  837               { NTSCBURSTParTxt, NTSCParTxt,  &GenlockSystemPar[3]},
                       3140 ; rs232cmd.c  838               { F10MHzParTxt,          F10MHzParTxt, NULL},
                       3141 ; rs232cmd.c  839       };
                       3142 ; rs232cmd.c  840       
                       3143 ; rs232cmd.c  841       struct PAR_STRUCT code SystemPar[3] = {
0011EA 00000000        3144         DD      000000000H
                       3148         PUBLIC  _SystemPar
                       3149         ALIGN   1
0011EE                 3150 _SystemPar:
0011EE rrrrrrrrrrrrrr  3151         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011F6 rrrrrrrrrrrrrr  3152         DD      _SystemPar+12
       rr                   
0011FA rrrrrrrrrrrrrr  3153         DD      _PAL_IDParTxt,_PAL_IDParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001202 rrrrrrrrrrrrrr  3154         DD      _SystemPar+24
       rr                   
001206 rrrrrrrrrrrrrr  3155         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3156 ; rs232cmd.c  842               { PALParTxt,     PALParTxt, &SystemPar[1]},
                       3157 ; rs232cmd.c  843               { PAL_IDParTxt, PAL_IDParTxt, &SystemPar[2]},
                       3158 ; rs232cmd.c  844               { NTSCParTxt,    NTSCParTxt, NULL},
                       3159 ; rs232cmd.c  845       };
                       3160 ; rs232cmd.c  846       
                       3161 ; rs232cmd.c  847       struct PAR_STRUCT code CBPatternPar[23] = {
00120E 00000000        3162         DD      000000000H
                       3166         PUBLIC  _CBPatternPar
                       3167         ALIGN   1
001212                 3168 _CBPatternPar:
001212 rrrrrrrrrrrrrr  3169         DD      _CBSMPTEParTxt,_CBSMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00121A rrrrrrrrrrrrrr  3170         DD      _CBPatternPar+12
       rr                   
00121E rrrrrrrrrrrrrr  3171         DD      _CBEBUParTxt,_CBEBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001226 rrrrrrrrrrrrrr  3172         DD      _CBPatternPar+24
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  49

ADDR   CODE            LINE SOURCELINE
00122A rrrrrrrrrrrrrr  3173         DD      _CBFCCParTxt,_CBFCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001232 rrrrrrrrrrrrrr  3174         DD      _CBPatternPar+36
       rr                   
001236 rrrrrrrrrrrrrr  3175         DD      _CBEBU8ParTxt,_CBEB8ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00123E rrrrrrrrrrrrrr  3176         DD      _CBPatternPar+48
       rr                   
001242 rrrrrrrrrrrrrr  3177         DD      _CB100ParTxt,_CB100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00124A rrrrrrrrrrrrrr  3178         DD      _CBPatternPar+60
       rr                   
00124E rrrrrrrrrrrrrr  3179         DD      _CBGREY75ParTxt,_CBGR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001256 rrrrrrrrrrrrrr  3180         DD      _CBPatternPar+72
       rr                   
00125A rrrrrrrrrrrrrr  3181         DD      _CBRED75ParTxt,_CBR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001262 rrrrrrrrrrrrrr  3182         DD      _CBPatternPar+84
       rr                   
001266 rrrrrrrrrrrrrr  3183         DD      _RED75ParTxt,_RED75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00126E rrrrrrrrrrrrrr  3184         DD      _CBPatternPar+96
       rr                   
001272 rrrrrrrrrrrrrr  3185         DD      _MULTIBURSTParTxt,_MULTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00127A rrrrrrrrrrrrrr  3186         DD      _CBPatternPar+108
       rr                   
00127E rrrrrrrrrrrrrr  3187         DD      _CCIR18ParTxt,_CCIR18ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001286 rrrrrrrrrrrrrr  3188         DD      _CBPatternPar+120
       rr                   
00128A rrrrrrrrrrrrrr  3189         DD      _WIN10ParTxt,_WIN10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001292 rrrrrrrrrrrrrr  3190         DD      _CBPatternPar+132
       rr                   
001296 rrrrrrrrrrrrrr  3191         DD      _WIN15ParTxt,_WIN15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00129E rrrrrrrrrrrrrr  3192         DD      _CBPatternPar+144
       rr                   
0012A2 rrrrrrrrrrrrrr  3193         DD      _WIN20ParTxt,_WIN20ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012AA rrrrrrrrrrrrrr  3194         DD      _CBPatternPar+156
       rr                   
0012AE rrrrrrrrrrrrrr  3195         DD      _WIN100ParTxt,_WIN100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012B6 rrrrrrrrrrrrrr  3196         DD      _CBPatternPar+168
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  50

ADDR   CODE            LINE SOURCELINE
0012BA rrrrrrrrrrrrrr  3197         DD      _BLWH15ParTxt,_BLWH15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012C2 rrrrrrrrrrrrrr  3198         DD      _CBPatternPar+180
       rr                   
0012C6 rrrrrrrrrrrrrr  3199         DD      _WHITE100ParTxt,_WHIT100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012CE rrrrrrrrrrrrrr  3200         DD      _CBPatternPar+192
       rr                   
0012D2 rrrrrrrrrrrrrr  3201         DD      _BLACKParTxt,_BLACParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012DA rrrrrrrrrrrrrr  3202         DD      _CBPatternPar+204
       rr                   
0012DE rrrrrrrrrrrrrr  3203         DD      _SDICHECKParTxt,_SDICParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012E6 rrrrrrrrrrrrrr  3204         DD      _CBPatternPar+216
       rr                   
0012EA rrrrrrrrrrrrrr  3205         DD      _DGREYParTxt,_DGRParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012F2 rrrrrrrrrrrrrr  3206         DD      _CBPatternPar+228
       rr                   
0012F6 rrrrrrrrrrrrrr  3207         DD      _STAIRCASE5ParTxt,_STA5ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012FE rrrrrrrrrrrrrr  3208         DD      _CBPatternPar+240
       rr                   
001302 rrrrrrrrrrrrrr  3209         DD      _STAIRCASE10ParTxt,_STA10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00130A rrrrrrrrrrrrrr  3210         DD      _CBPatternPar+252
       rr                   
00130E rrrrrrrrrrrrrr  3211         DD      _CROSSHATCHParTxt,_CROSParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001316 rrrrrrrrrrrrrr  3212         DD      _CBPatternPar+264
       rr                   
00131A rrrrrrrrrrrrrr  3213         DD      _PLUGEParTxt,_PLUGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3214 ; rs232cmd.c  848               { CBSMPTEParTxt,                CBSMParTxt,     &CBPatternPar[1]}
                            ,
                       3215 ; rs232cmd.c  849               { CBEBUParTxt,          CBEBParTxt,     &CBPatternPar[2]},
                       3216 ; rs232cmd.c  850               { CBFCCParTxt,          CBFCParTxt,     &CBPatternPar[3]},
                       3217 ; rs232cmd.c  851               { CBEBU8ParTxt,                 CBEB8ParTxt,    &CBPatternPar[4]}
                            ,
                       3218 ; rs232cmd.c  852               { CB100ParTxt,          CB100ParTxt,    &CBPatternPar[5]},
                       3219 ; rs232cmd.c  853               { CBGREY75ParTxt,       CBGR75ParTxt,   &CBPatternPar[6]},
                       3220 ; rs232cmd.c  854               { CBRED75ParTxt,                CBR75ParTxt,    &CBPatternPar[7]}
                            ,
                       3221 ; rs232cmd.c  855               { RED75ParTxt,          RED75ParTxt,    &CBPatternPar[8]},
                       3222 ; rs232cmd.c  856       
                       3223 ; rs232cmd.c  857               { MULTIBURSTParTxt,     MULTParTxt,     &CBPatternPar[9]},
                       3224 ; rs232cmd.c  858               { CCIR18ParTxt,         CCIR18ParTxt,   &CBPatternPar[10]},
                       3225 ; rs232cmd.c  859                                                                                
                                                                                                            
                       3226 ; rs232cmd.c  860               { WIN10ParTxt,          WIN10ParTxt,    &CBPatternPar[11]},
                       3227 ; rs232cmd.c  861               { WIN15ParTxt,          WIN15ParTxt,    &CBPatternPar[12]},
                       3228 ; rs232cmd.c  862               { WIN20ParTxt,          WIN20ParTxt,    &CBPatternPar[13]},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  51

ADDR   CODE            LINE SOURCELINE
                       3229 ; rs232cmd.c  863               { WIN100ParTxt,                 WIN100ParTxt,   &CBPatternPar[14]
                            },
                       3230 ; rs232cmd.c  864               { BLWH15ParTxt,                 BLWH15ParTxt,   &CBPatternPar[15]
                            },
                       3231 ; rs232cmd.c  865               { WHITE100ParTxt,       WHIT100ParTxt, &CBPatternPar[16]},
                       3232 ; rs232cmd.c  866               { BLACKParTxt,          BLACParTxt,     &CBPatternPar[17]},
                       3233 ; rs232cmd.c  867       
                       3234 ; rs232cmd.c  868               { SDICHECKParTxt,       SDICParTxt,     &CBPatternPar[18]},
                       3235 ; rs232cmd.c  869               { DGREYParTxt,          DGRParTxt,              &CBPatternPar[19]
                            },
                       3236 ; rs232cmd.c  870       
                       3237 ; rs232cmd.c  871               { STAIRCASE5ParTxt,     STA5ParTxt,     &CBPatternPar[20]},
                       3238 ; rs232cmd.c  872               { STAIRCASE10ParTxt, STA10ParTxt,       &CBPatternPar[21]},
                       3239 ; rs232cmd.c  873       
                       3240 ; rs232cmd.c  874               { CROSSHATCHParTxt,     CROSParTxt,     &CBPatternPar[22]},
                       3241 ; rs232cmd.c  875               { PLUGEParTxt,          PLUGParTxt,     NULL},
                       3242 ; rs232cmd.c  876       };
                       3243 ; rs232cmd.c  877       
                       3244 ; rs232cmd.c  878       struct PAR_STRUCT code EmbAudioSignalPar[3] = {
001322 00000000        3245         DD      000000000H
                       3248         PUBLIC  _EmbAudioSignalPar
                       3249         ALIGN   1
001326                 3250 _EmbAudioSignalPar:
001326 rrrrrrrrrrrrrr  3251         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00132E rrrrrrrrrrrrrr  3252         DD      _EmbAudioSignalPar+12
       rr                   
001332 rrrrrrrrrrrrrr  3253         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00133A rrrrrrrrrrrrrr  3254         DD      _EmbAudioSignalPar+24
       rr                   
00133E rrrrrrrrrrrrrr  3255         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3256 ; rs232cmd.c  879               { OFFParTxt,            OFFParTxt,              &EmbAudioSignalPa
                            r[1]},
                       3257 ; rs232cmd.c  880               { SILENCEParTxt,        SILParTxt,              &EmbAudioSignalPa
                            r[2]},
                       3258 ; rs232cmd.c  881               { S1KHZParTxt,          S1KHZParTxt,    NULL},
                       3259 ; rs232cmd.c  882       };
                       3260 ; rs232cmd.c  883       
                       3261 ; rs232cmd.c  884       struct PAR_STRUCT code AudioOutputPar[2] = {
001346 00000000        3262         DD      000000000H
                       3266         PUBLIC  _AudioOutputPar
                       3267         ALIGN   1
00134A                 3268 _AudioOutputPar:
00134A rrrrrrrrrrrrrr  3269         DD      _ANALOGParTxt,_ANALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001352 rrrrrrrrrrrrrr  3270         DD      _AudioOutputPar+12
       rr                   
001356 rrrrrrrrrrrrrr  3271         DD      _AESEBUParTxt,_AESParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3272 ; rs232cmd.c  885               { ANALOGParTxt, ANALParTxt, &AudioOutputPar[1]},
                       3273 ; rs232cmd.c  886               { AESEBUParTxt, AESParTxt,  NULL},
                       3274 ; rs232cmd.c  887       };
                       3275 ; rs232cmd.c  888       
                       3276 ; rs232cmd.c  889       struct PAR_STRUCT code AESEBUSystemPar[2] = {
00135E 00000000        3277         DD      000000000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  52

ADDR   CODE            LINE SOURCELINE
                       3280         PUBLIC  _AESEBUSystemPar
                       3281         ALIGN   1
001362                 3282 _AESEBUSystemPar:
001362 rrrrrrrrrrrrrr  3283         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00136A rrrrrrrrrrrrrr  3284         DD      _AESEBUSystemPar+12
       rr                   
00136E rrrrrrrrrrrrrr  3285         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3286 ; rs232cmd.c  890               { PALParTxt,  PALParTxt,  &AESEBUSystemPar[1]},
                       3287 ; rs232cmd.c  891               { NTSCParTxt, NTSCParTxt, NULL},
                       3288 ; rs232cmd.c  892       };
                       3289 ; rs232cmd.c  893       
                       3290 ; rs232cmd.c  894       struct PAR_STRUCT code AudioSignalPar[4] = {
001376 00000000        3291         DD      000000000H
                       3294         PUBLIC  _AudioSignalPar
                       3295         ALIGN   1
00137A                 3296 _AudioSignalPar:
00137A rrrrrrrrrrrrrr  3297         DD      _S500HZParTxt,_S500HZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001382 rrrrrrrrrrrrrr  3298         DD      _AudioSignalPar+12
       rr                   
001386 rrrrrrrrrrrrrr  3299         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00138E rrrrrrrrrrrrrr  3300         DD      _AudioSignalPar+24
       rr                   
001392 rrrrrrrrrrrrrr  3301         DD      _SEBU1KHZParTxt,_SEBU1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00139A rrrrrrrrrrrrrr  3302         DD      _AudioSignalPar+36
       rr                   
00139E rrrrrrrrrrrrrr  3303         DD      _S8KHZParTxt,_S8KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3304 ; rs232cmd.c  895               { S500HZParTxt,         S500HZParTxt,    &AudioSignalPar[1]},
                       3305 ; rs232cmd.c  896               { S1KHZParTxt,  S1KHZParTxt,     &AudioSignalPar[2]},
                       3306 ; rs232cmd.c  897               { SEBU1KHZParTxt, SEBU1KHZParTxt, &AudioSignalPar[3]},
                       3307 ; rs232cmd.c  898               { S8KHZParTxt,  S8KHZParTxt,     NULL},
                       3308 ; rs232cmd.c  899       };
                       3309 ; rs232cmd.c  900       
                       3310 ; rs232cmd.c  901       struct PAR_STRUCT code AnalogLevelPar[1] = {
0013A6 00000000        3311         DD      000000000H
                       3314         PUBLIC  _AnalogLevelPar
                       3315         ALIGN   1
0013AA                 3316 _AnalogLevelPar:
0013AA rrrrrrrrrrrrrr  3317         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3318 ; rs232cmd.c  902               { SILENCEParTxt, SILParTxt, NULL},
                       3319 ; rs232cmd.c  903       };
                       3320 ; rs232cmd.c  904       
                       3321 ; rs232cmd.c  905       struct PAR_STRUCT code AESEBULevelPar[1] = {
0013B2 00000000        3322         DD      000000000H
                       3325         PUBLIC  _AESEBULevelPar
                       3326         ALIGN   1
0013B6                 3327 _AESEBULevelPar:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  53

ADDR   CODE            LINE SOURCELINE
0013B6 rrrrrrrrrrrrrr  3328         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3329 ; rs232cmd.c  906               { SILENCEParTxt, SILParTxt, NULL},
                       3330 ; rs232cmd.c  907       };
                       3331 ; rs232cmd.c  908       
                       3332 ; rs232cmd.c  909       struct PAR_STRUCT code AudioFrequencyPar[2] = {
0013BE 00000000        3333         DD      000000000H
                       3336         PUBLIC  _AudioFrequencyPar
                       3337         ALIGN   1
0013C2                 3338 _AudioFrequencyPar:
0013C2 rrrrrrrrrrrrrr  3339         DD      _F441KHZParTxt,_F441KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013CA rrrrrrrrrrrrrr  3340         DD      _AudioFrequencyPar+12
       rr                   
0013CE rrrrrrrrrrrrrr  3341         DD      _F48KHZParTxt,_F48KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3342 ; rs232cmd.c  910               { F441KHZParTxt, F441KHZParTxt, &AudioFrequencyPar[1]},
                       3343 ; rs232cmd.c  911               { F48KHZParTxt,  F48KHZParTxt,  NULL},
                       3344 ; rs232cmd.c  912       };
                       3345 ; rs232cmd.c  913       
                       3346 ; rs232cmd.c  914       struct PAR_STRUCT code UnitPar[2] = {
0013D6 00000000        3347         DD      000000000H
                       3350         PUBLIC  _UnitPar
                       3351         ALIGN   1
0013DA                 3352 _UnitPar:
0013DA rrrrrrrrrrrrrr  3353         DD      _BBParTxt,_BBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013E2 rrrrrrrrrrrrrr  3354         DD      _UnitPar+12
       rr                   
0013E6 rrrrrrrrrrrrrr  3355         DD      _SPGParTxt,_SPGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3356 ; rs232cmd.c  915               { BBParTxt,  BBParTxt,  &UnitPar[1]},
                       3357 ; rs232cmd.c  916               { SPGParTxt, SPGParTxt, NULL},
                       3358 ; rs232cmd.c  917       };
                       3359 ; rs232cmd.c  918       
                       3360 ; rs232cmd.c  919       struct PAR_STRUCT code OffOnPar[2] = {
0013EE 00000000        3361         DD      000000000H
                       3364         PUBLIC  _OffOnPar
                       3365         ALIGN   1
0013F2                 3366 _OffOnPar:
0013F2 rrrrrrrrrrrrrr  3367         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013FA rrrrrrrrrrrrrr  3368         DD      _OffOnPar+12
       rr                   
0013FE rrrrrrrrrrrrrr  3369         DD      _ONParTxt,_ONParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3370 ; rs232cmd.c  920               { OFFParTxt, OFFParTxt, &OffOnPar[1]},
                       3371 ; rs232cmd.c  921               { ONParTxt,  ONParTxt,  NULL},
                       3372 ; rs232cmd.c  922       };
                       3373 ; rs232cmd.c  923       
                       3374 ; rs232cmd.c  924       struct PAR_STRUCT code FactBBGenSignalPar[2] = {
001406 00000000        3375         DD      000000000H
                       3378         PUBLIC  _FactBBGenSignalPar
                       3379         ALIGN   1
00140A                 3380 _FactBBGenSignalPar:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  54

ADDR   CODE            LINE SOURCELINE
00140A rrrrrrrrrrrrrr  3381         DD      _NORMALParTxt,_NORMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001412 rrrrrrrrrrrrrr  3382         DD      _FactBBGenSignalPar+12
       rr                   
001416 rrrrrrrrrrrrrr  3383         DD      _F45MHZParTxt,_F45MHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3384 ; rs232cmd.c  925               { NORMALParTxt, NORMParTxt,     &FactBBGenSignalPar[1]},
                       3385 ; rs232cmd.c  926               { F45MHZParTxt, F45MHZParTxt, NULL},
                       3386 ; rs232cmd.c  927       };
                       3387 ; rs232cmd.c  928       
                       3388 ; rs232cmd.c  929       struct PAR_STRUCT code MinMaxPar[2] = {
00141E 00000000        3389         DD      000000000H
                       3392         PUBLIC  _MinMaxPar
                       3393         ALIGN   1
001422                 3394 _MinMaxPar:
001422 rrrrrrrrrrrrrr  3395         DD      _MINParTxt,_MINParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00142A rrrrrrrrrrrrrr  3396         DD      _MinMaxPar+12
       rr                   
00142E rrrrrrrrrrrrrr  3397         DD      _MAXParTxt,_MAXParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3398 ; rs232cmd.c  930               { MINParTxt, MINParTxt, &MinMaxPar[1]},
                       3399 ; rs232cmd.c  931               { MAXParTxt, MAXParTxt, NULL},
                       3400 ; rs232cmd.c  932       };
                       3401 ; rs232cmd.c  933       
                       3402 ; rs232cmd.c  934       struct PAR_STRUCT code UpDownPar[2] = {
001436 00000000        3403         DD      000000000H
                       3406         PUBLIC  _UpDownPar
                       3407         ALIGN   1
00143A                 3408 _UpDownPar:
00143A rrrrrrrrrrrrrr  3409         DD      _UPParTxt,_UPParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001442 rrrrrrrrrrrrrr  3410         DD      _UpDownPar+12
       rr                   
001446 rrrrrrrrrrrrrr  3411         DD      _DOWNParTxt,_DOWNParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3412 ; rs232cmd.c  935               { UPParTxt,   UPParTxt,   &UpDownPar[1]},
                       3413 ; rs232cmd.c  936               { DOWNParTxt, DOWNParTxt, NULL},
                       3414 ; rs232cmd.c  937       };
                       3415 ; rs232cmd.c  938       
                       3416 ; rs232cmd.c  939       /************************************************************************
                            ***/
                       3417 ; rs232cmd.c  940       // Temporary variables PRIVATE NOT overlayable
                       3418 ; rs232cmd.c  941       
                       3419 ; rs232cmd.c  942       static unsigned int Suffix[4]=
00144E 00000000        3420         DD      000000000H
000000                 3421 RS232CMD_INI_FA SEGMENT HDATA INSEGMENT INIT
000000                 3422         RSEG    RS232CMD_INI_FA
                       3425         ALIGN   1
000000                 3426 _Suffix:
                       3427 ; rs232cmd.c  943       {
                       3428 ; rs232cmd.c  944               1,1,1,1
                       3429 ; rs232cmd.c  945       };
                       3430 ; rs232cmd.c  946       
                       3431 ; rs232cmd.c  947       static bool PasswordProtected = true;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  55

ADDR   CODE            LINE SOURCELINE
000000 01000100010001  3432         DW      00001H,00001H,00001H,00001H
       00                   
                       3434         ALIGN   1
000008                 3435 _PasswordProtected:
                       3436 ; rs232cmd.c  948       static UC GenlockCalEnable = 0;
000008 FFFF            3437         DW      0FFFFH
00000A                 3439 _GenlockCalEnable:
                       3440 ; rs232cmd.c  949       static int GenlockCalValue = 0;
00000A 00              3441         DB      000H
00000B RESERVED        3443         ALIGN   1
00000B
00000C                 3444 _GenlockCalValue:
                       3445 ; rs232cmd.c  950       
                       3446 ; rs232cmd.c  951       /************************************************************************
                            **/
                       3447 ; rs232cmd.c  952       /* CLSCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3448 ; rs232cmd.c  953       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3449 ; rs232cmd.c  954       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       3450 ; rs232cmd.c  955       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3451 ; rs232cmd.c  956       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3452 ; rs232cmd.c  957       /* Function:  Clear status command                                       
                                                                                                                             
                                                    */
                       3453 ; rs232cmd.c  958       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3454 ; rs232cmd.c  959       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3455 ; rs232cmd.c  960       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3456 ; rs232cmd.c  961       /************************************************************************
                            **/
                       3457 ; rs232cmd.c  962       void CLSCommand( void)
                       3458 ; rs232cmd.c  963       {
00000C 0000            3459         DW      00000H
000000                 3460 RS232CMD_PR     SEGMENT HCODE
000000                 3461         RSEG    RS232CMD_PR
                       3462         ALIGN   1
                       3464         PUBLIC  _CLSCommand
000000                 3465 _CLSCommand:
                       3469 ; rs232cmd.c  964               if ( CmdExecute && !SCPIError)
000000 964842rr        3471         MOV.B   ES,#SEG( _CmdExecute )
000004 9908rrrr        3472         MOV.W   R0,#SOF( _CmdExecute )
000008 8200            3473         MOV.B   R0L,[R0]
00000A F320            3474         BEQ     _8
00000C 964842rr        3475         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  56

ADDR   CODE            LINE SOURCELINE
000010 9908rrrr        3476         MOV.W   R0,#SOF( _SCPIError )
000014 8A00            3477         MOV.W   R0,[R0]
000016 F21A            3478         BNE     _8
                       3479 ; rs232cmd.c  965               {
                       3480 ; rs232cmd.c  966                       if ( CmdRequest)
000018 964842rr        3482         MOV.B   ES,#SEG( _CmdRequest )
00001C 9908rrrr        3483         MOV.W   R0,#SOF( _CmdRequest )
000020 8200            3484         MOV.B   R0L,[R0]
000022 F306            3485         BEQ     _3
                       3486 ; rs232cmd.c  967                               SCPIError = SyntaxErr;
000024 964842rr        3488         MOV.B   ES,#SEG( _SCPIError )
000028 9908rrrr        3489         MOV.W   R0,#SOF( _SCPIError )
00002C BA03            3490         MOV.W   [R0],#03H
00002E D680            3491         RET
00002E D680            3491         RET
000030                 3492 _3:
                       3493 ; rs232cmd.c  968                       else
                       3494 ; rs232cmd.c  969                       {
                       3495 ; rs232cmd.c  970                               if ( ParCnt)
000030 964842rr        3497         MOV.B   ES,#SEG( _ParCnt )
000034 9908rrrr        3498         MOV.W   R0,#SOF( _ParCnt )
000038 8200            3499         MOV.B   R0L,[R0]
00003A F306            3500         BEQ     _4
                       3501 ; rs232cmd.c  971                                       SCPIError = ParNotAllowed;
00003C 964842rr        3503         MOV.B   ES,#SEG( _SCPIError )
000040 9908rrrr        3504         MOV.W   R0,#SOF( _SCPIError )
000044 BA06            3505         MOV.W   [R0],#06H
000046 D680            3506         RET
000046 D680            3506         RET
000048                 3507 _4:
                       3508 ; rs232cmd.c  972                               else
                       3509 ; rs232cmd.c  973                                       ResetErrorEventQueue();
                       3511         CALL    _ResetErrorEventQueue
000048 C4rrrrrr       +3511 ;       FCALL   _ResetErrorEventQueue
                       3512 ; rs232cmd.c  974                       }
                       3513 ; rs232cmd.c  975               }
00004C                 3515 _8:
                       3516 ; rs232cmd.c  976       }
00004C D680            3518         RET
                       3520 ; rs232cmd.c  977       
                       3521 ; rs232cmd.c  978       /************************************************************************
                            **/
                       3522 ; rs232cmd.c  979       /* ESECommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3523 ; rs232cmd.c  980       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3524 ; rs232cmd.c  981       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3525 ; rs232cmd.c  982       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3526 ; rs232cmd.c  983       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3527 ; rs232cmd.c  984       /* Function:    Set/read the Standard Event Status Enable Register       
                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  57

ADDR   CODE            LINE SOURCELINE
                       3528 ; rs232cmd.c  985       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       3529 ; rs232cmd.c  986       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3530 ; rs232cmd.c  987       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3531 ; rs232cmd.c  988       /************************************************************************
                            **/
                       3532 ; rs232cmd.c  989       void ESECommand( void)
                       3533 ; rs232cmd.c  990       {
                       3534         ALIGN   1
                       3536         PUBLIC  _ESECommand
00004E                 3537 _ESECommand:
00004E A97E            3541         ADDS.W  R7,#0EH
                       3544 ; rs232cmd.c  991               int Reg;
                       3545 ; rs232cmd.c  992       
                       3546 ; rs232cmd.c  993               if ( CmdExecute && !SCPIError)
000050 964842rr        3548         MOV.B   ES,#SEG( _CmdExecute )
000054 9908rrrr        3549         MOV.W   R0,#SOF( _CmdExecute )
000058 8200            3550         MOV.B   R0L,[R0]
00005A F35E            3551         BEQ     _21
00005C 964842rr        3552         MOV.B   ES,#SEG( _SCPIError )
000060 9908rrrr        3553         MOV.W   R0,#SOF( _SCPIError )
000064 8A00            3554         MOV.W   R0,[R0]
000066 F258            3555         BNE     _21
                       3556 ; rs232cmd.c  994               {
                       3557 ; rs232cmd.c  995                       if ( CmdRequest)
000068 964842rr        3559         MOV.B   ES,#SEG( _CmdRequest )
00006C 9908rrrr        3560         MOV.W   R0,#SOF( _CmdRequest )
000070 8200            3561         MOV.B   R0L,[R0]
000072 F31E            3562         BEQ     _12
                       3563 ; rs232cmd.c  996                       {
                       3564 ; rs232cmd.c  997                               if ( ParCnt)
000074 964842rr        3566         MOV.B   ES,#SEG( _ParCnt )
000078 9908rrrr        3567         MOV.W   R0,#SOF( _ParCnt )
00007C 8200            3568         MOV.B   R0L,[R0]
00007E F306            3569         BEQ     _11
                       3570 ; rs232cmd.c  998                                       SCPIError = ParNotAllowed;
000080 964842rr        3572         MOV.B   ES,#SEG( _SCPIError )
000084 9908rrrr        3573         MOV.W   R0,#SOF( _SCPIError )
000088 BA06            3574         MOV.W   [R0],#06H
00008A FE46            3575         BR      _21
00008A FE46            3575         BR      _21
00008C                 3576 _11:
                       3577 ; rs232cmd.c  999                               else
                       3578 ; rs232cmd.c 1000                                       rs232printf( 12, "%d\n", ESEReg);
00008C 9908000C        3580         MOV.W   R0,#0CH
000090 964842rr        3581         MOV.B   ES,#SEG( _ESEReg )
000094 9918rrrr        3582         MOV.W   R1,#SOF( _ESEReg )
000098 8221            3583         MOV.B   R1L,[R1]
00009A B130            3584         MOVS.B  R1H,#00H
00009C 0F02            3585         PUSH.W  R1
00009E 9938rrrr        3587         MOV.W   R3,#SEG( _9 )
0000A2 9928rrrr        3588         MOV.W   R2,#SOF( _9 )
0000A6 0F0C            3589         PUSH.W  R2, R3
                       3591         CALL    _rs232printf
0000A8 C4rrrrrr       +3591 ;       FCALL   _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  58

ADDR   CODE            LINE SOURCELINE
0000AC A976            3592         ADDS.W  R7,#06H
                       3594 ; rs232cmd.c 1001                       }
0000AE FE34            3596         BR      _21
0000AE FE34            3596         BR      _21
0000B0                 3597 _12:
                       3598 ; rs232cmd.c 1002                       else
                       3599 ; rs232cmd.c 1003                       {
                       3600 ; rs232cmd.c 1004                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0000B0 964842rr        3602         MOV.B   ES,#SEG( _ParCnt )
0000B4 9908rrrr        3603         MOV.W   R0,#SOF( _ParCnt )
0000B8 8200            3604         MOV.B   R0L,[R0]
0000BA 910401          3605         CMP.B   R0L,#01H
0000BD F215            3606         BNE     _13
0000BF 9918rrrr        3607         MOV.W   R1,#SEG( _Cmd )
0000C3 9908rrrr        3608         MOV.W   R0,#SOF( _Cmd )
0000C7 9168rr          3609         MOV.B   R3L,#SEG( __lc_bs )
0000CA 7177            3610         XOR.B   R3H,R3H
0000CC 8927            3611         MOV.W   R2,R7
0000CE 0F0C            3612         PUSH.W  R2, R3
0000D0 9938rrrr        3614         MOV.W   R3,#SEG( _10 )
0000D4 9928rrrr        3615         MOV.W   R2,#SOF( _10 )
0000D8 0F0C            3616         PUSH.W  R2, R3
                       3618         CALL    _sscanf
0000DA C4rrrrrr       +3618 ;       FCALL   _sscanf
0000DE 99700008        3619         ADD.W   R7,#08H
0000E2 99040001        3621         CMP.W   R0,#01H
0000E6 F306            3622         BEQ     _14
0000E6 F306            3622         BEQ     _14
0000E8                 3623 _13:
                       3624 ; rs232cmd.c 1005                               {
                       3625 ; rs232cmd.c 1006                                       SCPIError = SyntaxErr;  
0000E8 964842rr        3627         MOV.B   ES,#SEG( _SCPIError )
0000EC 9908rrrr        3628         MOV.W   R0,#SOF( _SCPIError )
0000F0 BA03            3629         MOV.W   [R0],#03H
                       3630 ; rs232cmd.c 1007                                       return;
0000F2 FE12            3632         BR      _21
                       3633 ; rs232cmd.c 1008                               }
0000F4                 3635 _14:
                       3636 ; rs232cmd.c 1009       
                       3637 ; rs232cmd.c 1010                               if ( Reg > 255)
0000F4 9A7400FF        3639         CMP.W   [R7],#0FFH
0000F8 FD07            3640         BLE     _15
                       3641 ; rs232cmd.c 1011                               {
                       3642 ; rs232cmd.c 1012                                       SCPIError = DataOutOfRange;
0000FA 964842rr        3644         MOV.B   ES,#SEG( _SCPIError )
0000FE 9908rrrr        3645         MOV.W   R0,#SOF( _SCPIError )
000102 9A080021        3646         MOV.W   [R0],#021H
                       3647 ; rs232cmd.c 1013                                       return;
000106 FE08            3649         BR      _21
                       3650 ; rs232cmd.c 1014                               }
000108                 3652 _15:
                       3653 ; rs232cmd.c 1015       
                       3654 ; rs232cmd.c 1016                               ESEReg = Reg & 0xFF;
000108 8A07            3656         MOV.W   R0,[R7]
00010A 9105FF          3657         AND.B   R0L,#0FFH
00010D 964842rr        3658         MOV.B   ES,#SEG( _ESEReg )
000111 9918rrrr        3659         MOV.W   R1,#SOF( _ESEReg )
000115 8209            3660         MOV.B   [R1],R0L
                       3661 ; rs232cmd.c 1017                       }
                       3662 ; rs232cmd.c 1018               }
                       3663 ; rs232cmd.c 1019       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  59

ADDR   CODE            LINE SOURCELINE
000118                 3665 _21:
000118 A972            3666         ADDS.W  R7,#02H
00011A D680            3668         RET
                       3670 ; rs232cmd.c 1020       
                       3671 ; rs232cmd.c 1021       /************************************************************************
                            **/
                       3672 ; rs232cmd.c 1022       /* ESRCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3673 ; rs232cmd.c 1023       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3674 ; rs232cmd.c 1024       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3675 ; rs232cmd.c 1025       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3676 ; rs232cmd.c 1026       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3677 ; rs232cmd.c 1027       /* Function:    Read and clear the Standard Event Status Register        
                                                                    */
                       3678 ; rs232cmd.c 1028       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3679 ; rs232cmd.c 1029       /*                                              The register will reset t
                            o zero.                                                                                          
                                            */
                       3680 ; rs232cmd.c 1030       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3681 ; rs232cmd.c 1031       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3682 ; rs232cmd.c 1032       /************************************************************************
                            **/
                       3683 ; rs232cmd.c 1033       void ESRCommand( void)
                       3684 ; rs232cmd.c 1034       {
                       3685         ALIGN   1
                       3687         PUBLIC  _ESRCommand
00011C                 3688 _ESRCommand:
                       3694 ; rs232cmd.c 1035               int Reg;
                       3695 ; rs232cmd.c 1036       
                       3696 ; rs232cmd.c 1037               if ( CmdExecute && !SCPIError)
00011C 964842rr        3698         MOV.B   ES,#SEG( _CmdExecute )
000120 9908rrrr        3699         MOV.W   R0,#SOF( _CmdExecute )
000124 8200            3700         MOV.B   R0L,[R0]
000126 F332            3701         BEQ     _30
000128 964842rr        3702         MOV.B   ES,#SEG( _SCPIError )
00012C 9908rrrr        3703         MOV.W   R0,#SOF( _SCPIError )
000130 8A00            3704         MOV.W   R0,[R0]
000132 F22C            3705         BNE     _30
                       3706 ; rs232cmd.c 1038               {
                       3707 ; rs232cmd.c 1039                       if ( CmdRequest)
000134 964842rr        3709         MOV.B   ES,#SEG( _CmdRequest )
000138 9908rrrr        3710         MOV.W   R0,#SOF( _CmdRequest )
00013C 8200            3711         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  60

ADDR   CODE            LINE SOURCELINE
00013E F321            3712         BEQ     _26
                       3713 ; rs232cmd.c 1040                       {
                       3714 ; rs232cmd.c 1041                               if ( ParCnt)
000140 964842rr        3716         MOV.B   ES,#SEG( _ParCnt )
000144 9908rrrr        3717         MOV.W   R0,#SOF( _ParCnt )
000148 8200            3718         MOV.B   R0L,[R0]
00014A F306            3719         BEQ     _25
                       3720 ; rs232cmd.c 1042                                       SCPIError = ParNotAllowed;
00014C 964842rr        3722         MOV.B   ES,#SEG( _SCPIError )
000150 9908rrrr        3723         MOV.W   R0,#SOF( _SCPIError )
000154 BA06            3724         MOV.W   [R0],#06H
000156 D680            3725         RET
000156 D680            3725         RET
000158                 3726 _25:
                       3727 ; rs232cmd.c 1043                               else
                       3728 ; rs232cmd.c 1044                               {
                       3729 ; rs232cmd.c 1045                                       rs232printf( 12, "%d\n", UpdateESRRegiste
                            r());
                       3731         CALL    _UpdateESRRegister
000158 C4rrrrrr       +3731 ;       FCALL   _UpdateESRRegister
00015C 8120            3732         MOV.B   R1L,R0L
00015E B130            3733         MOVS.B  R1H,#00H
000160 9908000C        3734         MOV.W   R0,#0CH
000164 0F02            3735         PUSH.W  R1
000166 9938rrrr        3737         MOV.W   R3,#SEG( _9 )
00016A 9928rrrr        3738         MOV.W   R2,#SOF( _9 )
00016E 0F0C            3739         PUSH.W  R2, R3
                       3741         CALL    _rs232printf
000170 C4rrrrrr       +3741 ;       FCALL   _rs232printf
000174 A976            3742         ADDS.W  R7,#06H
                       3744 ; rs232cmd.c 1046       
                       3745 ; rs232cmd.c 1047                                       ESRReg = 0;
000176 964842rr        3747         MOV.B   ES,#SEG( _ESRReg )
00017A 9908rrrr        3748         MOV.W   R0,#SOF( _ESRReg )
00017E B200            3749         MOV.B   [R0],#00H
                       3750 ; rs232cmd.c 1048                               }
                       3751 ; rs232cmd.c 1049                       }
000180 D680            3753         RET
000180 D680            3753         RET
000182                 3754 _26:
                       3755 ; rs232cmd.c 1050                       else
                       3756 ; rs232cmd.c 1051                               SCPIError = SyntaxErr;
000182 964842rr        3758         MOV.B   ES,#SEG( _SCPIError )
000186 9908rrrr        3759         MOV.W   R0,#SOF( _SCPIError )
00018A BA03            3760         MOV.W   [R0],#03H
                       3761 ; rs232cmd.c 1052               }
00018C                 3763 _30:
                       3764 ; rs232cmd.c 1053       }
00018C D680            3766         RET
                       3768 ; rs232cmd.c 1054       
                       3769 ; rs232cmd.c 1055       /************************************************************************
                            **/
                       3770 ; rs232cmd.c 1056       /* OPCCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3771 ; rs232cmd.c 1057       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3772 ; rs232cmd.c 1058       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  61

ADDR   CODE            LINE SOURCELINE
                       3773 ; rs232cmd.c 1059       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3774 ; rs232cmd.c 1060       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3775 ; rs232cmd.c 1061       /* Function:    Operation Complete Command/Query                         
                                                                                                                    */
                       3776 ; rs232cmd.c 1062       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       3777 ; rs232cmd.c 1063       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3778 ; rs232cmd.c 1064       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3779 ; rs232cmd.c 1065       /************************************************************************
                            **/
                       3780 ; rs232cmd.c 1066       void OPCCommand( void)
                       3781 ; rs232cmd.c 1067       {
                       3782         ALIGN   1
                       3784         PUBLIC  _OPCCommand
00018E                 3785 _OPCCommand:
                       3789 ; rs232cmd.c 1068               if ( CmdExecute && !SCPIError)
00018E 964842rr        3791         MOV.B   ES,#SEG( _CmdExecute )
000192 9908rrrr        3792         MOV.W   R0,#SOF( _CmdExecute )
000196 8200            3793         MOV.B   R0L,[R0]
000198 F323            3794         BEQ     _36
00019A 964842rr        3795         MOV.B   ES,#SEG( _SCPIError )
00019E 9908rrrr        3796         MOV.W   R0,#SOF( _SCPIError )
0001A2 8A00            3797         MOV.W   R0,[R0]
0001A4 F21D            3798         BNE     _36
                       3799 ; rs232cmd.c 1069               {
                       3800 ; rs232cmd.c 1070                       if ( CmdRequest)
0001A6 964842rr        3802         MOV.B   ES,#SEG( _CmdRequest )
0001AA 9908rrrr        3803         MOV.W   R0,#SOF( _CmdRequest )
0001AE 8200            3804         MOV.B   R0L,[R0]
0001B0 F30C            3805         BEQ     _31
                       3806 ; rs232cmd.c 1071                       {
                       3807 ; rs232cmd.c 1072                               if ( ParCnt)
0001B2 964842rr        3809         MOV.B   ES,#SEG( _ParCnt )
0001B6 9908rrrr        3810         MOV.W   R0,#SOF( _ParCnt )
0001BA 8200            3811         MOV.B   R0L,[R0]
0001BC F311            3812         BEQ     _36
                       3813 ; rs232cmd.c 1073                                       SCPIError = ParNotAllowed;
0001BE 964842rr        3815         MOV.B   ES,#SEG( _SCPIError )
0001C2 9908rrrr        3816         MOV.W   R0,#SOF( _SCPIError )
0001C6 BA06            3817         MOV.W   [R0],#06H
                       3818 ; rs232cmd.c 1074                       }
0001C8 D680            3820         RET
0001C8 D680            3820         RET
0001CA                 3821 _31:
                       3822 ; rs232cmd.c 1075                       else
                       3823 ; rs232cmd.c 1076                       {
                       3824 ; rs232cmd.c 1077                               if ( ParCnt)
0001CA 964842rr        3826         MOV.B   ES,#SEG( _ParCnt )
0001CE 9908rrrr        3827         MOV.W   R0,#SOF( _ParCnt )
0001D2 8200            3828         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  62

ADDR   CODE            LINE SOURCELINE
0001D4 F305            3829         BEQ     _36
                       3830 ; rs232cmd.c 1078                                       SCPIError = ParNotAllowed;
0001D6 964842rr        3832         MOV.B   ES,#SEG( _SCPIError )
0001DA 9908rrrr        3833         MOV.W   R0,#SOF( _SCPIError )
0001DE BA06            3834         MOV.W   [R0],#06H
                       3835 ; rs232cmd.c 1079                       }
                       3836 ; rs232cmd.c 1080               }
0001E0                 3838 _36:
                       3839 ; rs232cmd.c 1081       }
0001E0 D680            3841         RET
                       3843 ; rs232cmd.c 1082       
                       3844 ; rs232cmd.c 1083       /************************************************************************
                            **/
                       3845 ; rs232cmd.c 1084       /* SRECommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3846 ; rs232cmd.c 1085       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3847 ; rs232cmd.c 1086       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3848 ; rs232cmd.c 1087       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       3849 ; rs232cmd.c 1088       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3850 ; rs232cmd.c 1089       /* Function:    Set/read the Service Request Enable Register             
                                                                            */
                       3851 ; rs232cmd.c 1090       /* Remarks:             Bit 6 in *SRE? register is always ZERO           
                                                                                                    */
                       3852 ; rs232cmd.c 1091       /*                                              Bit 6 in *SRE register is
                             ignored                                                                                         
                                                    */
                       3853 ; rs232cmd.c 1092       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       3854 ; rs232cmd.c 1093       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       3855 ; rs232cmd.c 1094       /************************************************************************
                            **/
                       3856 ; rs232cmd.c 1095       void SRECommand( void)
                       3857 ; rs232cmd.c 1096       {
                       3858         ALIGN   1
                       3860         PUBLIC  _SRECommand
0001E2                 3861 _SRECommand:
0001E2 A97E            3865         ADDS.W  R7,#0EH
                       3868 ; rs232cmd.c 1097               int Reg;
                       3869 ; rs232cmd.c 1098       
                       3870 ; rs232cmd.c 1099               if ( CmdExecute && !SCPIError)
0001E4 964842rr        3872         MOV.B   ES,#SEG( _CmdExecute )
0001E8 9908rrrr        3873         MOV.W   R0,#SOF( _CmdExecute )
0001EC 8200            3874         MOV.B   R0L,[R0]
0001EE F35E            3875         BEQ     _47
0001F0 964842rr        3876         MOV.B   ES,#SEG( _SCPIError )
0001F4 9908rrrr        3877         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  63

ADDR   CODE            LINE SOURCELINE
0001F8 8A00            3878         MOV.W   R0,[R0]
0001FA F258            3879         BNE     _47
                       3880 ; rs232cmd.c 1100               {
                       3881 ; rs232cmd.c 1101                       if ( CmdRequest)
0001FC 964842rr        3883         MOV.B   ES,#SEG( _CmdRequest )
000200 9908rrrr        3884         MOV.W   R0,#SOF( _CmdRequest )
000204 8200            3885         MOV.B   R0L,[R0]
000206 F31E            3886         BEQ     _38
                       3887 ; rs232cmd.c 1102                       {
                       3888 ; rs232cmd.c 1103                               if ( ParCnt)
000208 964842rr        3890         MOV.B   ES,#SEG( _ParCnt )
00020C 9908rrrr        3891         MOV.W   R0,#SOF( _ParCnt )
000210 8200            3892         MOV.B   R0L,[R0]
000212 F306            3893         BEQ     _37
                       3894 ; rs232cmd.c 1104                                       SCPIError = ParNotAllowed;
000214 964842rr        3896         MOV.B   ES,#SEG( _SCPIError )
000218 9908rrrr        3897         MOV.W   R0,#SOF( _SCPIError )
00021C BA06            3898         MOV.W   [R0],#06H
00021E FE46            3899         BR      _47
00021E FE46            3899         BR      _47
000220                 3900 _37:
                       3901 ; rs232cmd.c 1105                               else
                       3902 ; rs232cmd.c 1106                                       rs232printf( 12, "%d\n", SREReg);
000220 9908000C        3904         MOV.W   R0,#0CH
000224 964842rr        3905         MOV.B   ES,#SEG( _SREReg )
000228 9918rrrr        3906         MOV.W   R1,#SOF( _SREReg )
00022C 8221            3907         MOV.B   R1L,[R1]
00022E B130            3908         MOVS.B  R1H,#00H
000230 0F02            3909         PUSH.W  R1
000232 9938rrrr        3911         MOV.W   R3,#SEG( _9 )
000236 9928rrrr        3912         MOV.W   R2,#SOF( _9 )
00023A 0F0C            3913         PUSH.W  R2, R3
                       3915         CALL    _rs232printf
00023C C4rrrrrr       +3915 ;       FCALL   _rs232printf
000240 A976            3916         ADDS.W  R7,#06H
                       3918 ; rs232cmd.c 1107                       }
000242 FE34            3920         BR      _47
000242 FE34            3920         BR      _47
000244                 3921 _38:
                       3922 ; rs232cmd.c 1108                       else
                       3923 ; rs232cmd.c 1109                       {
                       3924 ; rs232cmd.c 1110                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000244 964842rr        3926         MOV.B   ES,#SEG( _ParCnt )
000248 9908rrrr        3927         MOV.W   R0,#SOF( _ParCnt )
00024C 8200            3928         MOV.B   R0L,[R0]
00024E 910401          3929         CMP.B   R0L,#01H
000251 F215            3930         BNE     _39
000253 9918rrrr        3931         MOV.W   R1,#SEG( _Cmd )
000257 9908rrrr        3932         MOV.W   R0,#SOF( _Cmd )
00025B 9168rr          3933         MOV.B   R3L,#SEG( __lc_bs )
00025E 7177            3934         XOR.B   R3H,R3H
000260 8927            3935         MOV.W   R2,R7
000262 0F0C            3936         PUSH.W  R2, R3
000264 9938rrrr        3938         MOV.W   R3,#SEG( _10 )
000268 9928rrrr        3939         MOV.W   R2,#SOF( _10 )
00026C 0F0C            3940         PUSH.W  R2, R3
                       3942         CALL    _sscanf
00026E C4rrrrrr       +3942 ;       FCALL   _sscanf
000272 99700008        3943         ADD.W   R7,#08H
000276 99040001        3945         CMP.W   R0,#01H
00027A F306            3946         BEQ     _40
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  64

ADDR   CODE            LINE SOURCELINE
00027A F306            3946         BEQ     _40
00027C                 3947 _39:
                       3948 ; rs232cmd.c 1111                               {
                       3949 ; rs232cmd.c 1112                                       SCPIError = SyntaxErr;  
00027C 964842rr        3951         MOV.B   ES,#SEG( _SCPIError )
000280 9908rrrr        3952         MOV.W   R0,#SOF( _SCPIError )
000284 BA03            3953         MOV.W   [R0],#03H
                       3954 ; rs232cmd.c 1113                                       return;
000286 FE12            3956         BR      _47
                       3957 ; rs232cmd.c 1114                               }
000288                 3959 _40:
                       3960 ; rs232cmd.c 1115       
                       3961 ; rs232cmd.c 1116                               if ( Reg > 255)
000288 9A7400FF        3963         CMP.W   [R7],#0FFH
00028C FD07            3964         BLE     _41
                       3965 ; rs232cmd.c 1117                               {
                       3966 ; rs232cmd.c 1118                                       SCPIError = DataOutOfRange;
00028E 964842rr        3968         MOV.B   ES,#SEG( _SCPIError )
000292 9908rrrr        3969         MOV.W   R0,#SOF( _SCPIError )
000296 9A080021        3970         MOV.W   [R0],#021H
                       3971 ; rs232cmd.c 1119                                       return;
00029A FE08            3973         BR      _47
                       3974 ; rs232cmd.c 1120                               }
00029C                 3976 _41:
                       3977 ; rs232cmd.c 1121       
                       3978 ; rs232cmd.c 1122                               SREReg = Reg & 0xBF;
00029C 8A07            3980         MOV.W   R0,[R7]
00029E 9105BF          3981         AND.B   R0L,#0BFH
0002A1 964842rr        3982         MOV.B   ES,#SEG( _SREReg )
0002A5 9918rrrr        3983         MOV.W   R1,#SOF( _SREReg )
0002A9 8209            3984         MOV.B   [R1],R0L
                       3985 ; rs232cmd.c 1123                       }
                       3986 ; rs232cmd.c 1124               }
                       3987 ; rs232cmd.c 1125       }
0002AC                 3989 _47:
0002AC A972            3990         ADDS.W  R7,#02H
0002AE D680            3992         RET
                       3994 ; rs232cmd.c 1126       
                       3995 ; rs232cmd.c 1127       /************************************************************************
                            **/
                       3996 ; rs232cmd.c 1128       /* STBCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       3997 ; rs232cmd.c 1129       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       3998 ; rs232cmd.c 1130       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                    */
                       3999 ; rs232cmd.c 1131       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       4000 ; rs232cmd.c 1132       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4001 ; rs232cmd.c 1133       /* Function:    Read the Status Byte Register                            
                                                                                                                            *
                            /
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  65

ADDR   CODE            LINE SOURCELINE
                       4002 ; rs232cmd.c 1134       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4003 ; rs232cmd.c 1135       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4004 ; rs232cmd.c 1136       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4005 ; rs232cmd.c 1137       /************************************************************************
                            **/
                       4006 ; rs232cmd.c 1138       void STBCommand( void)
                       4007 ; rs232cmd.c 1139       {
                       4008         ALIGN   1
                       4010         PUBLIC  _STBCommand
0002B0                 4011 _STBCommand:
                       4015 ; rs232cmd.c 1140               if ( CmdExecute && !SCPIError)
0002B0 964842rr        4017         MOV.B   ES,#SEG( _CmdExecute )
0002B4 9908rrrr        4018         MOV.W   R0,#SOF( _CmdExecute )
0002B8 8200            4019         MOV.B   R0L,[R0]
0002BA F331            4020         BEQ     _56
0002BC 964842rr        4021         MOV.B   ES,#SEG( _SCPIError )
0002C0 9908rrrr        4022         MOV.W   R0,#SOF( _SCPIError )
0002C4 8A00            4023         MOV.W   R0,[R0]
0002C6 F22B            4024         BNE     _56
                       4025 ; rs232cmd.c 1141               {
                       4026 ; rs232cmd.c 1142                       if ( CmdRequest)
0002C8 964842rr        4028         MOV.B   ES,#SEG( _CmdRequest )
0002CC 9908rrrr        4029         MOV.W   R0,#SOF( _CmdRequest )
0002D0 8200            4030         MOV.B   R0L,[R0]
0002D2 F320            4031         BEQ     _52
                       4032 ; rs232cmd.c 1143                       {
                       4033 ; rs232cmd.c 1144                               if ( ParCnt)
0002D4 964842rr        4035         MOV.B   ES,#SEG( _ParCnt )
0002D8 9908rrrr        4036         MOV.W   R0,#SOF( _ParCnt )
0002DC 8200            4037         MOV.B   R0L,[R0]
0002DE F306            4038         BEQ     _51
                       4039 ; rs232cmd.c 1145                                       SCPIError = ParNotAllowed;
0002E0 964842rr        4041         MOV.B   ES,#SEG( _SCPIError )
0002E4 9908rrrr        4042         MOV.W   R0,#SOF( _SCPIError )
0002E8 BA06            4043         MOV.W   [R0],#06H
0002EA D680            4044         RET
0002EA D680            4044         RET
0002EC                 4045 _51:
                       4046 ; rs232cmd.c 1146                               else
                       4047 ; rs232cmd.c 1147                               {
                       4048 ; rs232cmd.c 1148                                       UpdateSTBRegister();
                       4050         CALL    _UpdateSTBRegister
0002EC C4rrrrrr       +4050 ;       FCALL   _UpdateSTBRegister
                       4051 ; rs232cmd.c 1149       
                       4052 ; rs232cmd.c 1150                                       rs232printf( 12, "%d\n", STBReg);
0002F0 9908000C        4054         MOV.W   R0,#0CH
0002F4 964842rr        4055         MOV.B   ES,#SEG( _STBReg )
0002F8 9918rrrr        4056         MOV.W   R1,#SOF( _STBReg )
0002FC 8221            4057         MOV.B   R1L,[R1]
0002FE B130            4058         MOVS.B  R1H,#00H
000300 0F02            4059         PUSH.W  R1
000302 9938rrrr        4061         MOV.W   R3,#SEG( _9 )
000306 9928rrrr        4062         MOV.W   R2,#SOF( _9 )
00030A 0F0C            4063         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  66

ADDR   CODE            LINE SOURCELINE
                       4065         CALL    _rs232printf
00030C C4rrrrrr       +4065 ;       FCALL   _rs232printf
000310 A976            4066         ADDS.W  R7,#06H
                       4068 ; rs232cmd.c 1151                               }
                       4069 ; rs232cmd.c 1152                       }
000312 D680            4071         RET
000312 D680            4071         RET
000314                 4072 _52:
                       4073 ; rs232cmd.c 1153                       else
                       4074 ; rs232cmd.c 1154                               SCPIError = SyntaxErr;
000314 964842rr        4076         MOV.B   ES,#SEG( _SCPIError )
000318 9908rrrr        4077         MOV.W   R0,#SOF( _SCPIError )
00031C BA03            4078         MOV.W   [R0],#03H
                       4079 ; rs232cmd.c 1155               }
00031E                 4081 _56:
                       4082 ; rs232cmd.c 1156       }
00031E D680            4084         RET
                       4086 ; rs232cmd.c 1157       
                       4087 ; rs232cmd.c 1158       /************************************************************************
                            **/
                       4088 ; rs232cmd.c 1159       /* TSTCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4089 ; rs232cmd.c 1160       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4090 ; rs232cmd.c 1161       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       4091 ; rs232cmd.c 1162       /* Revised:             000505                                           
                                                                                                                             
                                                                                    */
                       4092 ; rs232cmd.c 1163       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4093 ; rs232cmd.c 1164       /* Function:    Selftest query                                           
                                                                                                                             
                                                                    */
                       4094 ; rs232cmd.c 1165       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4095 ; rs232cmd.c 1166       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4096 ; rs232cmd.c 1167       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4097 ; rs232cmd.c 1168       /************************************************************************
                            **/
                       4098 ; rs232cmd.c 1169       void TSTCommand( void)
                       4099 ; rs232cmd.c 1170       {
                       4100         ALIGN   1
                       4102         PUBLIC  _TSTCommand
000320                 4103 _TSTCommand:
                       4107 ; rs232cmd.c 1171               if ( CmdExecute && !SCPIError)
000320 964842rr        4109         MOV.B   ES,#SEG( _CmdExecute )
000324 9908rrrr        4110         MOV.W   R0,#SOF( _CmdExecute )
000328 8200            4111         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  67

ADDR   CODE            LINE SOURCELINE
00032A F31D            4112         BEQ     _61
00032C 964842rr        4113         MOV.B   ES,#SEG( _SCPIError )
000330 9908rrrr        4114         MOV.W   R0,#SOF( _SCPIError )
000334 8A00            4115         MOV.W   R0,[R0]
000336 F217            4116         BNE     _61
                       4117 ; rs232cmd.c 1172               {
                       4118 ; rs232cmd.c 1173                       if ( CmdRequest)
000338 964842rr        4120         MOV.B   ES,#SEG( _CmdRequest )
00033C 9908rrrr        4121         MOV.W   R0,#SOF( _CmdRequest )
000340 8200            4122         MOV.B   R0L,[R0]
000342 F30C            4123         BEQ     _57
                       4124 ; rs232cmd.c 1174                       {
                       4125 ; rs232cmd.c 1175                               if ( ParCnt)
000344 964842rr        4127         MOV.B   ES,#SEG( _ParCnt )
000348 9908rrrr        4128         MOV.W   R0,#SOF( _ParCnt )
00034C 8200            4129         MOV.B   R0L,[R0]
00034E F30B            4130         BEQ     _61
                       4131 ; rs232cmd.c 1176                                       SCPIError = ParNotAllowed;
000350 964842rr        4133         MOV.B   ES,#SEG( _SCPIError )
000354 9908rrrr        4134         MOV.W   R0,#SOF( _SCPIError )
000358 BA06            4135         MOV.W   [R0],#06H
                       4136 ; rs232cmd.c 1177                               else
                       4137 ; rs232cmd.c 1178                               {
                       4138 ; rs232cmd.c 1179                                       ;
                       4139 ; rs232cmd.c 1180                               }
                       4140 ; rs232cmd.c 1181                       }
00035A D680            4142         RET
00035A D680            4142         RET
00035C                 4143 _57:
                       4144 ; rs232cmd.c 1182                       else
                       4145 ; rs232cmd.c 1183                               SCPIError = SyntaxErr;
00035C 964842rr        4147         MOV.B   ES,#SEG( _SCPIError )
000360 9908rrrr        4148         MOV.W   R0,#SOF( _SCPIError )
000364 BA03            4149         MOV.W   [R0],#03H
                       4150 ; rs232cmd.c 1184               }
000366                 4152 _61:
                       4153 ; rs232cmd.c 1185       }
000366 D680            4155         RET
                       4157 ; rs232cmd.c 1186       
                       4158 ; rs232cmd.c 1187       /************************************************************************
                            **/
                       4159 ; rs232cmd.c 1188       /* WAICommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4160 ; rs232cmd.c 1189       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4161 ; rs232cmd.c 1190       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       4162 ; rs232cmd.c 1191       /* Revised:             000505                                           
                                                                                                                             
                                                                                    */
                       4163 ; rs232cmd.c 1192       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4164 ; rs232cmd.c 1193       /* Function:    Wait-to-continue command                                 
                                                                                                                             
                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  68

ADDR   CODE            LINE SOURCELINE
                       4165 ; rs232cmd.c 1194       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4166 ; rs232cmd.c 1195       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4167 ; rs232cmd.c 1196       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4168 ; rs232cmd.c 1197       /************************************************************************
                            **/
                       4169 ; rs232cmd.c 1198       void WAICommand( void)
                       4170 ; rs232cmd.c 1199       {
                       4171         ALIGN   1
                       4173         PUBLIC  _WAICommand
000368                 4174 _WAICommand:
                       4178 ; rs232cmd.c 1200               if ( CmdExecute && !SCPIError)
000368 964842rr        4180         MOV.B   ES,#SEG( _CmdExecute )
00036C 9908rrrr        4181         MOV.W   R0,#SOF( _CmdExecute )
000370 8200            4182         MOV.B   R0L,[R0]
000372 F31D            4183         BEQ     _66
000374 964842rr        4184         MOV.B   ES,#SEG( _SCPIError )
000378 9908rrrr        4185         MOV.W   R0,#SOF( _SCPIError )
00037C 8A00            4186         MOV.W   R0,[R0]
00037E F217            4187         BNE     _66
                       4188 ; rs232cmd.c 1201               {
                       4189 ; rs232cmd.c 1202                       if ( CmdRequest)
000380 964842rr        4191         MOV.B   ES,#SEG( _CmdRequest )
000384 9908rrrr        4192         MOV.W   R0,#SOF( _CmdRequest )
000388 8200            4193         MOV.B   R0L,[R0]
00038A F306            4194         BEQ     _62
                       4195 ; rs232cmd.c 1203                               SCPIError = SyntaxErr;
00038C 964842rr        4197         MOV.B   ES,#SEG( _SCPIError )
000390 9908rrrr        4198         MOV.W   R0,#SOF( _SCPIError )
000394 BA03            4199         MOV.W   [R0],#03H
000396 D680            4200         RET
000396 D680            4200         RET
000398                 4201 _62:
                       4202 ; rs232cmd.c 1204                       else
                       4203 ; rs232cmd.c 1205                       {
                       4204 ; rs232cmd.c 1206                               if ( ParCnt)
000398 964842rr        4206         MOV.B   ES,#SEG( _ParCnt )
00039C 9908rrrr        4207         MOV.W   R0,#SOF( _ParCnt )
0003A0 8200            4208         MOV.B   R0L,[R0]
0003A2 F305            4209         BEQ     _66
                       4210 ; rs232cmd.c 1207                                       SCPIError = ParNotAllowed;
0003A4 964842rr        4212         MOV.B   ES,#SEG( _SCPIError )
0003A8 9908rrrr        4213         MOV.W   R0,#SOF( _SCPIError )
0003AC BA06            4214         MOV.W   [R0],#06H
                       4215 ; rs232cmd.c 1208                               else
                       4216 ; rs232cmd.c 1209                               {
                       4217 ; rs232cmd.c 1210                                       ;
                       4218 ; rs232cmd.c 1211                               }
                       4219 ; rs232cmd.c 1212                       }
                       4220 ; rs232cmd.c 1213               }
0003AE                 4222 _66:
                       4223 ; rs232cmd.c 1214       }
0003AE D680            4225         RET
                       4227 ; rs232cmd.c 1215       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  69

ADDR   CODE            LINE SOURCELINE
                       4228 ; rs232cmd.c 1216       /************************************************************************
                            **/
                       4229 ; rs232cmd.c 1217       /* RSTCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4230 ; rs232cmd.c 1218       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4231 ; rs232cmd.c 1219       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       4232 ; rs232cmd.c 1220       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                       4233 ; rs232cmd.c 1221       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4234 ; rs232cmd.c 1222       /* Function:    Reset comamnd                                            
                                                                                                                             
                                                                            */
                       4235 ; rs232cmd.c 1223       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       4236 ; rs232cmd.c 1224       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4237 ; rs232cmd.c 1225       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4238 ; rs232cmd.c 1226       /************************************************************************
                            **/
                       4239 ; rs232cmd.c 1227       void RSTCommand( void)
                       4240 ; rs232cmd.c 1228       {
                       4241         ALIGN   1
                       4243         PUBLIC  _RSTCommand
0003B0                 4244 _RSTCommand:
                       4248 ; rs232cmd.c 1229               if ( CmdExecute && !SCPIError)
0003B0 964842rr        4250         MOV.B   ES,#SEG( _CmdExecute )
0003B4 9908rrrr        4251         MOV.W   R0,#SOF( _CmdExecute )
0003B8 8200            4252         MOV.B   R0L,[R0]
0003BA F320            4253         BEQ     _72
0003BC 964842rr        4254         MOV.B   ES,#SEG( _SCPIError )
0003C0 9908rrrr        4255         MOV.W   R0,#SOF( _SCPIError )
0003C4 8A00            4256         MOV.W   R0,[R0]
0003C6 F21A            4257         BNE     _72
                       4258 ; rs232cmd.c 1230               {
                       4259 ; rs232cmd.c 1231                       if ( CmdRequest)
0003C8 964842rr        4261         MOV.B   ES,#SEG( _CmdRequest )
0003CC 9908rrrr        4262         MOV.W   R0,#SOF( _CmdRequest )
0003D0 8200            4263         MOV.B   R0L,[R0]
0003D2 F306            4264         BEQ     _67
                       4265 ; rs232cmd.c 1232                               SCPIError = SyntaxErr;
0003D4 964842rr        4267         MOV.B   ES,#SEG( _SCPIError )
0003D8 9908rrrr        4268         MOV.W   R0,#SOF( _SCPIError )
0003DC BA03            4269         MOV.W   [R0],#03H
0003DE D680            4270         RET
0003DE D680            4270         RET
0003E0                 4271 _67:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  70

ADDR   CODE            LINE SOURCELINE
                       4272 ; rs232cmd.c 1233                       else
                       4273 ; rs232cmd.c 1234                       {
                       4274 ; rs232cmd.c 1235                               if ( ParCnt)
0003E0 964842rr        4276         MOV.B   ES,#SEG( _ParCnt )
0003E4 9908rrrr        4277         MOV.W   R0,#SOF( _ParCnt )
0003E8 8200            4278         MOV.B   R0L,[R0]
0003EA F306            4279         BEQ     _68
                       4280 ; rs232cmd.c 1236                                       SCPIError = ParNotAllowed;
0003EC 964842rr        4282         MOV.B   ES,#SEG( _SCPIError )
0003F0 9908rrrr        4283         MOV.W   R0,#SOF( _SCPIError )
0003F4 BA06            4284         MOV.W   [R0],#06H
0003F6 D680            4285         RET
0003F6 D680            4285         RET
0003F8                 4286 _68:
                       4287 ; rs232cmd.c 1237                               else
                       4288 ; rs232cmd.c 1238                                       ResetInstrument();
                       4290         CALL    _ResetInstrument
0003F8 C4rrrrrr       +4290 ;       FCALL   _ResetInstrument
                       4291 ; rs232cmd.c 1239                       }
                       4292 ; rs232cmd.c 1240               }
0003FC                 4294 _72:
                       4295 ; rs232cmd.c 1241       }
0003FC D680            4297         RET
                       4299 ; rs232cmd.c 1242       
                       4300 ; rs232cmd.c 1243       /************************************************************************
                            **/
                       4301 ; rs232cmd.c 1244       /* IDNCommand                                                            
                                                                                                                             
                                                               RS232CMD.C */
                       4302 ; rs232cmd.c 1245       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4303 ; rs232cmd.c 1246       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       4304 ; rs232cmd.c 1247       /* Revised:             000614                                           
                                                                                                                             
                                                                                    */
                       4305 ; rs232cmd.c 1248       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4306 ; rs232cmd.c 1249       /* Function:    Identification query                                     
                                                                                                                             
                                                    */
                       4307 ; rs232cmd.c 1250       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                    */
                       4308 ; rs232cmd.c 1251       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4309 ; rs232cmd.c 1252       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4310 ; rs232cmd.c 1253       /************************************************************************
                            **/
                       4311 ; rs232cmd.c 1254       void IDNCommand( void)
                       4312 ; rs232cmd.c 1255       {
                       4313         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  71

ADDR   CODE            LINE SOURCELINE
                       4315         PUBLIC  _IDNCommand
0003FE                 4316 _IDNCommand:
                       4320 ; rs232cmd.c 1256               if ( CmdExecute && !SCPIError)
0003FE 964842rr        4322         MOV.B   ES,#SEG( _CmdExecute )
000402 9908rrrr        4323         MOV.W   R0,#SOF( _CmdExecute )
000406 8200            4324         MOV.B   R0L,[R0]
000408 F344            4325         BEQ     _78
00040A 964842rr        4326         MOV.B   ES,#SEG( _SCPIError )
00040E 9908rrrr        4327         MOV.W   R0,#SOF( _SCPIError )
000412 8A00            4328         MOV.W   R0,[R0]
000414 F23E            4329         BNE     _78
                       4330 ; rs232cmd.c 1257               {
                       4331 ; rs232cmd.c 1258                       if ( CmdRequest)
000416 964842rr        4333         MOV.B   ES,#SEG( _CmdRequest )
00041A 9908rrrr        4334         MOV.W   R0,#SOF( _CmdRequest )
00041E 8200            4335         MOV.B   R0L,[R0]
000420 F333            4336         BEQ     _74
                       4337 ; rs232cmd.c 1259                       {
                       4338 ; rs232cmd.c 1260                               if ( ParCnt)
000422 964842rr        4340         MOV.B   ES,#SEG( _ParCnt )
000426 9908rrrr        4341         MOV.W   R0,#SOF( _ParCnt )
00042A 8200            4342         MOV.B   R0L,[R0]
00042C F306            4343         BEQ     _73
                       4344 ; rs232cmd.c 1261                                       SCPIError = ParNotAllowed;
00042E 964842rr        4346         MOV.B   ES,#SEG( _SCPIError )
000432 9908rrrr        4347         MOV.W   R0,#SOF( _SCPIError )
000436 BA06            4348         MOV.W   [R0],#06H
000438 D680            4349         RET
000438 D680            4349         RET
00043A                 4350 _73:
                       4351 ; rs232cmd.c 1262                               else
                       4352 ; rs232cmd.c 1263                               {
                       4353 ; rs232cmd.c 1264                                       rs232puts( Calibration.Company);
00043A 9918rrrr        4355         MOV.W   R1,#SEG( _Calibration )
00043E 9908rrrr        4356         MOV.W   R0,#SOF( _Calibration )
                       4357         CALL    _rs232puts
000442 C4rrrrrr       +4357 ;       FCALL   _rs232puts
                       4358 ; rs232cmd.c 1265       
                       4359 ; rs232cmd.c 1266                                       rs232putchar( ',');
000446 91082C          4361         MOV.B   R0L,#02CH
                       4362         CALL    _rs232putchar
000449 C4rrrrrr       +4362 ;       FCALL   _rs232putchar
                       4363 ; rs232cmd.c 1267       
                       4364 ; rs232cmd.c 1268                                       rs232puts( Calibration.Type);
00044D 9918rrrr        4366         MOV.W   R1,#SEG( _Calibration+33 )
000451 9908rrrr        4367         MOV.W   R0,#SOF( _Calibration+33 )
                       4368         CALL    _rs232puts
000455 C4rrrrrr       +4368 ;       FCALL   _rs232puts
000459 91082C          4369         MOV.B   R0L,#02CH
                       4370 ; rs232cmd.c 1269       
                       4371 ; rs232cmd.c 1270                                       rs232putchar( ',');
                       4373         CALL    _rs232putchar
00045C C4rrrrrr       +4373 ;       FCALL   _rs232putchar
                       4374 ; rs232cmd.c 1271       
                       4375 ; rs232cmd.c 1272                                       rs232puts( Calibration.KUNumber);
000460 9918rrrr        4377         MOV.W   R1,#SEG( _Calibration+66 )
000464 9908rrrr        4378         MOV.W   R0,#SOF( _Calibration+66 )
                       4379         CALL    _rs232puts
000468 C4rrrrrr       +4379 ;       FCALL   _rs232puts
                       4380 ; rs232cmd.c 1273       
                       4381 ; rs232cmd.c 1274                                       rs232putchar( ',');
00046C 91082C          4383         MOV.B   R0L,#02CH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  72

ADDR   CODE            LINE SOURCELINE
                       4384         CALL    _rs232putchar
00046F C4rrrrrr       +4384 ;       FCALL   _rs232putchar
                       4385 ; rs232cmd.c 1275       
                       4386 ; rs232cmd.c 1276                                       rs232puts( Calibration.SWRevision);
000473 9918rrrr        4388         MOV.W   R1,#SEG( _Calibration+75 )
000477 9908rrrr        4389         MOV.W   R0,#SOF( _Calibration+75 )
                       4390         CALL    _rs232puts
00047B C4rrrrrr       +4390 ;       FCALL   _rs232puts
                       4391 ; rs232cmd.c 1277       
                       4392 ; rs232cmd.c 1278                                       rs232putchar( '\n');
00047F 91080A          4394         MOV.B   R0L,#0AH
                       4395         CALL    _rs232putchar
000482 C4rrrrrr       +4395 ;       FCALL   _rs232putchar
                       4396 ; rs232cmd.c 1279                               }
                       4397 ; rs232cmd.c 1280                       }
000486 D680            4399         RET
000486 D680            4399         RET
000488                 4400 _74:
                       4401 ; rs232cmd.c 1281                       else
                       4402 ; rs232cmd.c 1282                               SCPIError = SyntaxErr;
000488 964842rr        4404         MOV.B   ES,#SEG( _SCPIError )
00048C 9908rrrr        4405         MOV.W   R0,#SOF( _SCPIError )
000490 BA03            4406         MOV.W   [R0],#03H
                       4407 ; rs232cmd.c 1283               }
000492                 4409 _78:
                       4410 ; rs232cmd.c 1284       }
000492 D680            4412         RET
                       4414 ; rs232cmd.c 1285       
                       4415 ; rs232cmd.c 1286       /************************************************************************
                            **/
                       4416 ; rs232cmd.c 1287       /* RCLCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4417 ; rs232cmd.c 1288       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4418 ; rs232cmd.c 1289       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                            */
                       4419 ; rs232cmd.c 1290       /* Revised:             Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                                    */
                       4420 ; rs232cmd.c 1291       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4421 ; rs232cmd.c 1292       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       4422 ; rs232cmd.c 1293       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4423 ; rs232cmd.c 1294       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4424 ; rs232cmd.c 1295       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  73

ADDR   CODE            LINE SOURCELINE
                       4425 ; rs232cmd.c 1296       /************************************************************************
                            **/
                       4426 ; rs232cmd.c 1297       void RCLCommand(void) 
                       4427 ; rs232cmd.c 1298       {
                       4428         ALIGN   1
                       4430         PUBLIC  _RCLCommand
000494                 4431 _RCLCommand:
000494 A97E            4435         ADDS.W  R7,#0EH
                       4438 ; rs232cmd.c 1299               int     Reg = 0;
000496 BA70            4440         MOV.W   [R7],#00H
                       4441 ; rs232cmd.c 1300       
                       4442 ; rs232cmd.c 1301               if ( CmdExecute && !SCPIError)
000498 964842rr        4444         MOV.B   ES,#SEG( _CmdExecute )
00049C 9908rrrr        4445         MOV.W   R0,#SOF( _CmdExecute )
0004A0 8200            4446         MOV.B   R0L,[R0]
0004A2 F34C            4447         BEQ     _89
0004A4 964842rr        4448         MOV.B   ES,#SEG( _SCPIError )
0004A8 9908rrrr        4449         MOV.W   R0,#SOF( _SCPIError )
0004AC 8A00            4450         MOV.W   R0,[R0]
0004AE F246            4451         BNE     _89
                       4452 ; rs232cmd.c 1302               {
                       4453 ; rs232cmd.c 1303                       if ( CmdRequest)
0004B0 964842rr        4455         MOV.B   ES,#SEG( _CmdRequest )
0004B4 9908rrrr        4456         MOV.W   R0,#SOF( _CmdRequest )
0004B8 8200            4457         MOV.B   R0L,[R0]
0004BA F306            4458         BEQ     _79
                       4459 ; rs232cmd.c 1304                       {
                       4460 ; rs232cmd.c 1305                               SCPIError = SyntaxErr;
0004BC 964842rr        4462         MOV.B   ES,#SEG( _SCPIError )
0004C0 9908rrrr        4463         MOV.W   R0,#SOF( _SCPIError )
0004C4 BA03            4464         MOV.W   [R0],#03H
                       4465 ; rs232cmd.c 1306                       }
0004C6 FE3A            4467         BR      _89
0004C6 FE3A            4467         BR      _89
0004C8                 4468 _79:
                       4469 ; rs232cmd.c 1307                       else
                       4470 ; rs232cmd.c 1308                       {
                       4471 ; rs232cmd.c 1309                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0004C8 964842rr        4473         MOV.B   ES,#SEG( _ParCnt )
0004CC 9908rrrr        4474         MOV.W   R0,#SOF( _ParCnt )
0004D0 8200            4475         MOV.B   R0L,[R0]
0004D2 910401          4476         CMP.B   R0L,#01H
0004D5 F215            4477         BNE     _80
0004D7 9918rrrr        4478         MOV.W   R1,#SEG( _Cmd )
0004DB 9908rrrr        4479         MOV.W   R0,#SOF( _Cmd )
0004DF 9168rr          4480         MOV.B   R3L,#SEG( __lc_bs )
0004E2 7177            4481         XOR.B   R3H,R3H
0004E4 8927            4482         MOV.W   R2,R7
0004E6 0F0C            4483         PUSH.W  R2, R3
0004E8 9938rrrr        4485         MOV.W   R3,#SEG( _10 )
0004EC 9928rrrr        4486         MOV.W   R2,#SOF( _10 )
0004F0 0F0C            4487         PUSH.W  R2, R3
                       4489         CALL    _sscanf
0004F2 C4rrrrrr       +4489 ;       FCALL   _sscanf
0004F6 99700008        4490         ADD.W   R7,#08H
0004FA 99040001        4492         CMP.W   R0,#01H
0004FE F306            4493         BEQ     _81
0004FE F306            4493         BEQ     _81
000500                 4494 _80:
                       4495 ; rs232cmd.c 1310                               {
                       4496 ; rs232cmd.c 1311                                       SCPIError = SyntaxErr;  
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  74

ADDR   CODE            LINE SOURCELINE
000500 964842rr        4498         MOV.B   ES,#SEG( _SCPIError )
000504 9908rrrr        4499         MOV.W   R0,#SOF( _SCPIError )
000508 BA03            4500         MOV.W   [R0],#03H
                       4501 ; rs232cmd.c 1312                                       return;
00050A FE18            4503         BR      _89
                       4504 ; rs232cmd.c 1313                               }
00050C                 4506 _81:
                       4507 ; rs232cmd.c 1314       
                       4508 ; rs232cmd.c 1315                               if (( Reg == 0) || ( Reg > NoOfPresets))
00050C 8A07            4510         MOV.W   R0,[R7]
00050E F303            4511         BEQ     _82
000510 9A740004        4512         CMP.W   [R7],#04H
000514 FD07            4513         BLE     _83
000514 FD07            4513         BLE     _83
000516                 4514 _82:
                       4515 ; rs232cmd.c 1316                                       SCPIError = DataOutOfRange;
000516 964842rr        4517         MOV.B   ES,#SEG( _SCPIError )
00051A 9908rrrr        4518         MOV.W   R0,#SOF( _SCPIError )
00051E 9A080021        4519         MOV.W   [R0],#021H
000522 FE0C            4520         BR      _89
000522 FE0C            4520         BR      _89
000524                 4521 _83:
                       4522 ; rs232cmd.c 1317                               else
                       4523 ; rs232cmd.c 1318                               {
                       4524 ; rs232cmd.c 1319                                       if ( RecallPreset( Reg) != OK)
000524 8A07            4526         MOV.W   R0,[R7]
                       4527         CALL    _RecallPreset
000526 C4rrrrrr       +4527 ;       FCALL   _RecallPreset
00052A 9904FFFF        4528         CMP.W   R0,#0FFFFH
00052E F306            4529         BEQ     _89
                       4530 ; rs232cmd.c 1320                                               SCPIError = ExecErr;
000530 964842rr        4532         MOV.B   ES,#SEG( _SCPIError )
000534 9908rrrr        4533         MOV.W   R0,#SOF( _SCPIError )
000538 9A08001D        4534         MOV.W   [R0],#01DH
                       4535 ; rs232cmd.c 1321                               }
                       4536 ; rs232cmd.c 1322                       }
                       4537 ; rs232cmd.c 1323               }
                       4538 ; rs232cmd.c 1324       }
00053C                 4540 _89:
00053C A972            4541         ADDS.W  R7,#02H
00053E D680            4543         RET
                       4545 ; rs232cmd.c 1325       
                       4546 ; rs232cmd.c 1326       /************************************************************************
                            **/
                       4547 ; rs232cmd.c 1327       /* SAVCommand                                                            
                                                                                                                             
                                                                     RS232CMD.C */
                       4548 ; rs232cmd.c 1328       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4549 ; rs232cmd.c 1329       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                            */
                       4550 ; rs232cmd.c 1330       /* Revised:             Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                                    */
                       4551 ; rs232cmd.c 1331       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  75

ADDR   CODE            LINE SOURCELINE
                       4552 ; rs232cmd.c 1332       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       4553 ; rs232cmd.c 1333       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       4554 ; rs232cmd.c 1334       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4555 ; rs232cmd.c 1335       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4556 ; rs232cmd.c 1336       /************************************************************************
                            **/
                       4557 ; rs232cmd.c 1337       void SAVCommand(void) 
                       4558 ; rs232cmd.c 1338       {
                       4559         ALIGN   1
                       4561         PUBLIC  _SAVCommand
000540                 4562 _SAVCommand:
000540 A97E            4566         ADDS.W  R7,#0EH
                       4569 ; rs232cmd.c 1339               int     Reg = 0;
000542 BA70            4571         MOV.W   [R7],#00H
                       4572 ; rs232cmd.c 1340       
                       4573 ; rs232cmd.c 1341               if ( CmdExecute && !SCPIError)
000544 964842rr        4575         MOV.B   ES,#SEG( _CmdExecute )
000548 9908rrrr        4576         MOV.W   R0,#SOF( _CmdExecute )
00054C 8200            4577         MOV.B   R0L,[R0]
00054E F34C            4578         BEQ     _104
000550 964842rr        4579         MOV.B   ES,#SEG( _SCPIError )
000554 9908rrrr        4580         MOV.W   R0,#SOF( _SCPIError )
000558 8A00            4581         MOV.W   R0,[R0]
00055A F246            4582         BNE     _104
                       4583 ; rs232cmd.c 1342               {
                       4584 ; rs232cmd.c 1343                       if ( CmdRequest)
00055C 964842rr        4586         MOV.B   ES,#SEG( _CmdRequest )
000560 9908rrrr        4587         MOV.W   R0,#SOF( _CmdRequest )
000564 8200            4588         MOV.B   R0L,[R0]
000566 F306            4589         BEQ     _94
                       4590 ; rs232cmd.c 1344                               SCPIError = SyntaxErr;
000568 964842rr        4592         MOV.B   ES,#SEG( _SCPIError )
00056C 9908rrrr        4593         MOV.W   R0,#SOF( _SCPIError )
000570 BA03            4594         MOV.W   [R0],#03H
000572 FE3A            4595         BR      _104
000572 FE3A            4595         BR      _104
000574                 4596 _94:
                       4597 ; rs232cmd.c 1345                       else
                       4598 ; rs232cmd.c 1346                       {
                       4599 ; rs232cmd.c 1347                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000574 964842rr        4601         MOV.B   ES,#SEG( _ParCnt )
000578 9908rrrr        4602         MOV.W   R0,#SOF( _ParCnt )
00057C 8200            4603         MOV.B   R0L,[R0]
00057E 910401          4604         CMP.B   R0L,#01H
000581 F215            4605         BNE     _95
000583 9918rrrr        4606         MOV.W   R1,#SEG( _Cmd )
000587 9908rrrr        4607         MOV.W   R0,#SOF( _Cmd )
00058B 9168rr          4608         MOV.B   R3L,#SEG( __lc_bs )
00058E 7177            4609         XOR.B   R3H,R3H
000590 8927            4610         MOV.W   R2,R7
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  76

ADDR   CODE            LINE SOURCELINE
000592 0F0C            4611         PUSH.W  R2, R3
000594 9938rrrr        4613         MOV.W   R3,#SEG( _10 )
000598 9928rrrr        4614         MOV.W   R2,#SOF( _10 )
00059C 0F0C            4615         PUSH.W  R2, R3
                       4617         CALL    _sscanf
00059E C4rrrrrr       +4617 ;       FCALL   _sscanf
0005A2 99700008        4618         ADD.W   R7,#08H
0005A6 99040001        4620         CMP.W   R0,#01H
0005AA F306            4621         BEQ     _96
0005AA F306            4621         BEQ     _96
0005AC                 4622 _95:
                       4623 ; rs232cmd.c 1348                               {
                       4624 ; rs232cmd.c 1349                                       SCPIError = SyntaxErr;  
0005AC 964842rr        4626         MOV.B   ES,#SEG( _SCPIError )
0005B0 9908rrrr        4627         MOV.W   R0,#SOF( _SCPIError )
0005B4 BA03            4628         MOV.W   [R0],#03H
                       4629 ; rs232cmd.c 1350                                       return;
0005B6 FE18            4631         BR      _104
                       4632 ; rs232cmd.c 1351                               }
0005B8                 4634 _96:
                       4635 ; rs232cmd.c 1352       
                       4636 ; rs232cmd.c 1353                               if (( Reg == 0) || ( Reg > NoOfPresets))
0005B8 8A07            4638         MOV.W   R0,[R7]
0005BA F303            4639         BEQ     _97
0005BC 9A740004        4640         CMP.W   [R7],#04H
0005C0 FD07            4641         BLE     _98
0005C0 FD07            4641         BLE     _98
0005C2                 4642 _97:
                       4643 ; rs232cmd.c 1354                                       SCPIError = DataOutOfRange;
0005C2 964842rr        4645         MOV.B   ES,#SEG( _SCPIError )
0005C6 9908rrrr        4646         MOV.W   R0,#SOF( _SCPIError )
0005CA 9A080021        4647         MOV.W   [R0],#021H
0005CE FE0C            4648         BR      _104
0005CE FE0C            4648         BR      _104
0005D0                 4649 _98:
                       4650 ; rs232cmd.c 1355                               else
                       4651 ; rs232cmd.c 1356                               {
                       4652 ; rs232cmd.c 1357                                       if ( StorePreset( Reg) != OK)
0005D0 8A07            4654         MOV.W   R0,[R7]
                       4655         CALL    _StorePreset
0005D2 C4rrrrrr       +4655 ;       FCALL   _StorePreset
0005D6 9904FFFF        4656         CMP.W   R0,#0FFFFH
0005DA F306            4657         BEQ     _104
                       4658 ; rs232cmd.c 1358                                               SCPIError = ExecErr;
0005DC 964842rr        4660         MOV.B   ES,#SEG( _SCPIError )
0005E0 9908rrrr        4661         MOV.W   R0,#SOF( _SCPIError )
0005E4 9A08001D        4662         MOV.W   [R0],#01DH
                       4663 ; rs232cmd.c 1359                               }
                       4664 ; rs232cmd.c 1360                       }
                       4665 ; rs232cmd.c 1361               }
                       4666 ; rs232cmd.c 1362       }
0005E8                 4668 _104:
0005E8 A972            4669         ADDS.W  R7,#02H
0005EA D680            4671         RET
                       4673 ; rs232cmd.c 1363       
                       4674 ; rs232cmd.c 1364       /************************************************************************
                            **/
                       4675 ; rs232cmd.c 1365       /* SystemError                                                           
                                                                                                                             
                                                             RS232CMD.C */
                       4676 ; rs232cmd.c 1366       /*                                                                       
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  77

ADDR   CODE            LINE SOURCELINE
                                                    */
                       4677 ; rs232cmd.c 1367       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       4678 ; rs232cmd.c 1368       /* Revised:             000401                                           
                                                                                                                             
                                                                                    */
                       4679 ; rs232cmd.c 1369       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4680 ; rs232cmd.c 1370       /* Function:    Write the next entry in the error queue (FIFO) to RS232  
                                            */
                       4681 ; rs232cmd.c 1371       /* Remarks:             No parameters, Query only                        
                                                                                                                             
                                                    */
                       4682 ; rs232cmd.c 1372       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4683 ; rs232cmd.c 1373       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4684 ; rs232cmd.c 1374       /************************************************************************
                            **/
                       4685 ; rs232cmd.c 1375       void SystemError( void)
                       4686 ; rs232cmd.c 1376       {
                       4687         ALIGN   1
                       4689         PUBLIC  _SystemError
0005EC                 4690 _SystemError:
0005EC 0F30            4694         PUSH.W  R4, R5
0005EE 9972000C        4696         SUB.W   R7,#0CH
                       4704 ; rs232cmd.c 1377               int i;
                       4705 ; rs232cmd.c 1378               code char *ptr;
                       4706 ; rs232cmd.c 1379               char buf[12];
                       4707 ; rs232cmd.c 1380       
                       4708 ; rs232cmd.c 1381               if ( CmdExecute && !SCPIError)
0005F2 964842rr        4710         MOV.B   ES,#SEG( _CmdExecute )
0005F6 9908rrrr        4711         MOV.W   R0,#SOF( _CmdExecute )
0005FA 8200            4712         MOV.B   R0L,[R0]
0005FC F377            4713         BEQ     _119
0005FE 964842rr        4714         MOV.B   ES,#SEG( _SCPIError )
000602 9908rrrr        4715         MOV.W   R0,#SOF( _SCPIError )
000606 8A00            4716         MOV.W   R0,[R0]
000608 F271            4717         BNE     _119
                       4718 ; rs232cmd.c 1382               {
                       4719 ; rs232cmd.c 1383                       if ( CmdRequest)
00060A 964842rr        4721         MOV.B   ES,#SEG( _CmdRequest )
00060E 9908rrrr        4722         MOV.W   R0,#SOF( _CmdRequest )
000612 8200            4723         MOV.B   R0L,[R0]
000614 F366            4724         BEQ     _114
                       4725 ; rs232cmd.c 1384                       {
                       4726 ; rs232cmd.c 1385                               if ( ParCnt > 0)
000616 964842rr        4728         MOV.B   ES,#SEG( _ParCnt )
00061A 9908rrrr        4729         MOV.W   R0,#SOF( _ParCnt )
00061E 8200            4730         MOV.B   R0L,[R0]
000620 910400          4731         CMP.B   R0L,#00H
000623 F907            4732         BL      _111
                       4733 ; rs232cmd.c 1386                                       SCPIError = ParNotAllowed;
000625 964842rr        4735         MOV.B   ES,#SEG( _SCPIError )
000629 9908rrrr        4736         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  78

ADDR   CODE            LINE SOURCELINE
00062D BA06            4737         MOV.W   [R0],#06H
00062F FE5E            4738         BR      _119
00062F FE5E00          4738         BR      _119
000632                 4739 _111:
                       4740 ; rs232cmd.c 1387                               else
                       4741 ; rs232cmd.c 1388                               {
                       4742 ; rs232cmd.c 1389                                       if (( i = ReadErrorEventQueue()) >= 0)
                       4744         CALL    _ReadErrorEventQueue
000632 C4rrrrrr       +4744 ;       FCALL   _ReadErrorEventQueue
000636 8940            4745         MOV.W   R4,R0
000638 8910            4746         MOV.W   R1,R0
00063A 99140000        4747         CMP.W   R1,#00H
00063E FB56            4748         BLT     _119
                       4749 ; rs232cmd.c 1390                                       {
                       4750 ; rs232cmd.c 1391                                               sprintf( buf, "%d,\"", ErrorTxt_A
                            rray[i].ErrorNo);
000640 9128rr          4752         MOV.B   R1L,#SEG( __lc_bs )
000643 7133            4753         XOR.B   R1H,R1H
000645 8907            4754         MOV.W   R0,R7
000647 E9400006        4755         MULU.W  R4,#06H
00064B 8924            4756         MOV.W   R2,R4
00064D B930            4757         MOVS.W  R3,#00H
00064F 9918rrrr        4758         MOV.W   R1,#SEG( _ErrorTxt_Array )
000653 9908rrrr        4759         MOV.W   R0,#SOF( _ErrorTxt_Array )
000657 0902            4760         ADD.W   R0,R2
000659 1913            4761         ADDC.W  R1,R3
00065B 862C43          4762         MOV.B   CS,R1L
00065E 8810            4763         MOVC.W  R1,[R0+]
000660 0F02            4764         PUSH.W  R1
000662 9918rrrr        4766         MOV.W   R1,#SEG( _109 )
000666 9908rrrr        4767         MOV.W   R0,#SOF( _109 )
00066A 0F03            4768         PUSH.W  R0, R1
00066C 9128rr          4770         MOV.B   R1L,#SEG( __lc_bs )
00066F 7133            4771         XOR.B   R1H,R1H
000671 400706          4772         LEA     R0,R7+6
                       4773         CALL    _sprintf
000674 C4rrrrrr       +4773 ;       FCALL   _sprintf
000678 A976            4774         ADDS.W  R7,#06H
                       4776 ; rs232cmd.c 1392                                               rs232puts( buf);
00067A 9128rr          4778         MOV.B   R1L,#SEG( __lc_bs )
00067D 7133            4779         XOR.B   R1H,R1H
00067F 8907            4780         MOV.W   R0,R7
                       4781         CALL    _rs232puts
000681 C4rrrrrr       +4781 ;       FCALL   _rs232puts
                       4782 ; rs232cmd.c 1393       
                       4783 ; rs232cmd.c 1394                                               ptr = ErrorTxt_Array[i].ErrorTxt;
                            
000685 8924            4785         MOV.W   R2,R4
000687 B930            4786         MOVS.W  R3,#00H
000689 9918rrrr        4787         MOV.W   R1,#SEG( _ErrorTxt_Array+2 )
00068D 9908rrrr        4788         MOV.W   R0,#SOF( _ErrorTxt_Array+2 )
000691 0902            4789         ADD.W   R0,R2
000693 1913            4790         ADDC.W  R1,R3
000695 862C43          4791         MOV.B   CS,R1L
000698 8820            4792         MOVC.W  R2,[R0+]
00069A 99040000        4793         CMP.W   R0,#00H
00069E F202            4794         BNE     _122
0006A0 A64143          4795         ADDS.B  CS,#01H
0006A0 A6414300        4795         ADDS.B  CS,#01H
0006A4                 4796 _122:
0006A4 8830            4797         MOVC.W  R3,[R0+]
0006A6 8953            4798         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  79

ADDR   CODE            LINE SOURCELINE
0006A8 8942            4799         MOV.W   R4,R2
                       4801 ; rs232cmd.c 1395       
                       4802 ; rs232cmd.c 1396                                               while ( *ptr)
0006AA 866C43          4804         MOV.B   CS,R3L
0006AD 8062            4805         MOVC.B  R3L,[R2+]
0006AF F312            4806         BEQ     _113
0006AF F31200          4806         BEQ     _113
0006B2                 4807 _112:
                       4808 ; rs232cmd.c 1397                                                       rs232putchar( *ptr++);
0006B2 8915            4810         MOV.W   R1,R5
0006B4 8904            4811         MOV.W   R0,R4
0006B6 862C43          4812         MOV.B   CS,R1L
0006B9 8020            4813         MOVC.B  R1L,[R0+]
0006BB 8102            4814         MOV.B   R0L,R1L
                       4815         CALL    _rs232putchar
0006BD C4rrrrrr       +4815 ;       FCALL   _rs232putchar
0006C1 99400001        4816         ADD.W   R4,#01H
0006C5 99510000        4817         ADDC.W  R5,#00H
0006C9 8915            4821         MOV.W   R1,R5
0006CB 8904            4822         MOV.W   R0,R4
0006CD 862C43          4823         MOV.B   CS,R1L
0006D0 8020            4824         MOVC.B  R1L,[R0+]
0006D2 F2EF            4825         BNE     _112
0006D4                 4827 _113:
                       4828 ; rs232cmd.c 1398       
                       4829 ; rs232cmd.c 1399                                                rs232puts( "\"\n");
0006D4 9918rrrr        4831         MOV.W   R1,#SEG( _110 )
0006D8 9908rrrr        4832         MOV.W   R0,#SOF( _110 )
                       4833         CALL    _rs232puts
0006DC C4rrrrrr       +4833 ;       FCALL   _rs232puts
                       4834 ; rs232cmd.c 1400                                       }
                       4835 ; rs232cmd.c 1401                               }
                       4836 ; rs232cmd.c 1402                       }
0006E0 FE05            4838         BR      _119
0006E0 FE05            4838         BR      _119
0006E2                 4839 _114:
                       4840 ; rs232cmd.c 1403                       else
                       4841 ; rs232cmd.c 1404                               SCPIError = SyntaxErr;
0006E2 964842rr        4843         MOV.B   ES,#SEG( _SCPIError )
0006E6 9908rrrr        4844         MOV.W   R0,#SOF( _SCPIError )
0006EA BA03            4845         MOV.W   [R0],#03H
                       4846 ; rs232cmd.c 1405               }
0006EC                 4848 _119:
                       4849 ; rs232cmd.c 1406       }
0006EC 9970000C        4851         ADD.W   R7,#0CH
0006F0 2F30            4853         POP.W   R4, R5
0006F2 D680            4855         RET
                       4858 ; rs232cmd.c 1407       
                       4859 ; rs232cmd.c 1408       /************************************************************************
                            **/
                       4860 ; rs232cmd.c 1409       /* SystemVersion                                                         
                                                                                                                             
                                                             RS232CMD.C */
                       4861 ; rs232cmd.c 1410       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4862 ; rs232cmd.c 1411       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  80

ADDR   CODE            LINE SOURCELINE
                       4863 ; rs232cmd.c 1412       /* Revised:             000401                                           
                                                                                                                             
                                                                                    */
                       4864 ; rs232cmd.c 1413       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4865 ; rs232cmd.c 1414       /* Function:    Write the SCPI version to RS232                          
                                                                                                                    */
                       4866 ; rs232cmd.c 1415       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                    */
                       4867 ; rs232cmd.c 1416       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4868 ; rs232cmd.c 1417       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4869 ; rs232cmd.c 1418       /************************************************************************
                            **/
                       4870 ; rs232cmd.c 1419       void SystemVersion( void)
                       4871 ; rs232cmd.c 1420       {
                       4872         ALIGN   1
                       4874         PUBLIC  _SystemVersion
0006F4                 4875 _SystemVersion:
0006F4 0F30            4879         PUSH.W  R4, R5
                       4883 ; rs232cmd.c 1421               char code *str;
                       4884 ; rs232cmd.c 1422       
                       4885 ; rs232cmd.c 1423               if ( CmdExecute && !SCPIError)
0006F6 964842rr        4887         MOV.B   ES,#SEG( _CmdExecute )
0006FA 9908rrrr        4888         MOV.W   R0,#SOF( _CmdExecute )
0006FE 8200            4889         MOV.B   R0L,[R0]
000700 F33D            4890         BEQ     _130
000702 964842rr        4891         MOV.B   ES,#SEG( _SCPIError )
000706 9908rrrr        4892         MOV.W   R0,#SOF( _SCPIError )
00070A 8A00            4893         MOV.W   R0,[R0]
00070C F237            4894         BNE     _130
                       4895 ; rs232cmd.c 1424               {
                       4896 ; rs232cmd.c 1425                       if ( CmdRequest)
00070E 964842rr        4898         MOV.B   ES,#SEG( _CmdRequest )
000712 9908rrrr        4899         MOV.W   R0,#SOF( _CmdRequest )
000716 8200            4900         MOV.B   R0L,[R0]
000718 F32C            4901         BEQ     _126
                       4902 ; rs232cmd.c 1426                       {
                       4903 ; rs232cmd.c 1427                               if ( ParCnt)
00071A 964842rr        4905         MOV.B   ES,#SEG( _ParCnt )
00071E 9908rrrr        4906         MOV.W   R0,#SOF( _ParCnt )
000722 8200            4907         MOV.B   R0L,[R0]
000724 F306            4908         BEQ     _123
                       4909 ; rs232cmd.c 1428                                       SCPIError = ParNotAllowed;
000726 964842rr        4911         MOV.B   ES,#SEG( _SCPIError )
00072A 9908rrrr        4912         MOV.W   R0,#SOF( _SCPIError )
00072E BA06            4913         MOV.W   [R0],#06H
000730 FE25            4914         BR      _130
000730 FE25            4914         BR      _130
000732                 4915 _123:
                       4916 ; rs232cmd.c 1429                               else
                       4917 ; rs232cmd.c 1430                               {
                       4918 ; rs232cmd.c 1431                                       str = SystemVersionTxt;
000732 9958rrrr        4920         MOV.W   R5,#SEG( _SystemVersionTxt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  81

ADDR   CODE            LINE SOURCELINE
000736 9948rrrr        4921         MOV.W   R4,#SOF( _SystemVersionTxt )
                       4923 ; rs232cmd.c 1432       
                       4924 ; rs232cmd.c 1433                                       while ( *str)
00073A 964843rr        4926         MOV.B   CS,#SEG( _SystemVersionTxt )
00073E 9908rrrr        4927         MOV.W   R0,#SOF( _SystemVersionTxt )
000742 8020            4928         MOVC.B  R1L,[R0+]
000744 F311            4929         BEQ     _125
000744 F311            4929         BEQ     _125
000746                 4930 _124:
                       4931 ; rs232cmd.c 1434                                               rs232putchar( *str++);
000746 8915            4933         MOV.W   R1,R5
000748 8904            4934         MOV.W   R0,R4
00074A 862C43          4935         MOV.B   CS,R1L
00074D 8020            4936         MOVC.B  R1L,[R0+]
00074F 8102            4937         MOV.B   R0L,R1L
                       4938         CALL    _rs232putchar
000751 C4rrrrrr       +4938 ;       FCALL   _rs232putchar
000755 99400001        4939         ADD.W   R4,#01H
000759 99510000        4940         ADDC.W  R5,#00H
00075D 8915            4944         MOV.W   R1,R5
00075F 8904            4945         MOV.W   R0,R4
000761 862C43          4946         MOV.B   CS,R1L
000764 8020            4947         MOVC.B  R1L,[R0+]
000766 F2EF            4948         BNE     _124
000768                 4950 _125:
                       4951 ; rs232cmd.c 1435       
                       4952 ; rs232cmd.c 1436                                       rs232putchar( '\n');
000768 91080A          4954         MOV.B   R0L,#0AH
                       4955         CALL    _rs232putchar
00076B C4rrrrrr       +4955 ;       FCALL   _rs232putchar
                       4956 ; rs232cmd.c 1437                               }
                       4957 ; rs232cmd.c 1438                       }
00076F FE06            4959         BR      _130
00076F FE0600          4959         BR      _130
000772                 4960 _126:
                       4961 ; rs232cmd.c 1439                       else
                       4962 ; rs232cmd.c 1440                               SCPIError = SyntaxErr;
000772 964842rr        4964         MOV.B   ES,#SEG( _SCPIError )
000776 9908rrrr        4965         MOV.W   R0,#SOF( _SCPIError )
00077A BA03            4966         MOV.W   [R0],#03H
                       4967 ; rs232cmd.c 1441               }
00077C                 4969 _130:
                       4970 ; rs232cmd.c 1442       }
00077C 2F30            4972         POP.W   R4, R5
00077E D680            4974         RET
                       4977 ; rs232cmd.c 1443       
                       4978 ; rs232cmd.c 1444       /************************************************************************
                            **/
                       4979 ; rs232cmd.c 1445       /* SystemPresetName                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       4980 ; rs232cmd.c 1446       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       4981 ; rs232cmd.c 1447       /* Author:              Kim Engedahl, DEV, 970206                        
                                                                                                                             
                                    */
                       4982 ; rs232cmd.c 1448       /* Revised:             000503                                           
                                                                                                                             
                                                                                    */
                       4983 ; rs232cmd.c 1449       /*                                                                       
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  82

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                    */                                                              
                       4984 ; rs232cmd.c 1450       /* Function:    Name a specific preset number.                           
                                                                                                                    */
                       4985 ; rs232cmd.c 1451       /* Remarks:             the scanf function can not used MaxPresetNameLeng
                            th, i.e.                */
                       4986 ; rs232cmd.c 1452       /*                                              this define should be ins
                            erted as a value. The value is                  */
                       4987 ; rs232cmd.c 1453       /*                                              defined in INSTRU.H      
                                                                                                                             
                                                                                            */
                       4988 ; rs232cmd.c 1454       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4989 ; rs232cmd.c 1455       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       4990 ; rs232cmd.c 1456       /************************************************************************
                            **/
                       4991 ; rs232cmd.c 1457       void SystemPresetName( void)
                       4992 ; rs232cmd.c 1458       {
                       4993         ALIGN   1
                       5009         PUBLIC  _SystemPresetName
000780                 5010 _SystemPresetName:
000780 0F30            5014         PUSH.W  R4, R5
000782 99720078        5016         SUB.W   R7,#078H
                       5021 ; rs232cmd.c 1459               int Reg;
                       5022 ; rs232cmd.c 1460               char Name[MaxPresetNameLength];
                       5023 ; rs232cmd.c 1461               PresetObject Preset;
                       5024 ; rs232cmd.c 1462       
                       5025 ; rs232cmd.c 1463               if ( CmdExecute && !SCPIError)
000786 964842rr        5027         MOV.B   ES,#SEG( _CmdExecute )
00078A 9908rrrr        5028         MOV.W   R0,#SOF( _CmdExecute )
00078E 8200            5029         MOV.B   R0L,[R0]
                       5030         BEQ     _149
000790 F202           +5030 ;       BNE     _LG_154
000792 D500C8         +5030 ;       JMP.L   _149
000792 D500C800       +5030 ;       JMP.L   _149
000796                +5030 _LG_154:
000796 964842rr        5031         MOV.B   ES,#SEG( _SCPIError )
00079A 9908rrrr        5032         MOV.W   R0,#SOF( _SCPIError )
00079E 8A00            5033         MOV.W   R0,[R0]
                       5034         BNE     _149
0007A0 F302           +5034 ;       BEQ     _LG_156
0007A2 D500C0         +5034 ;       JMP.L   _149
0007A2 D500C000       +5034 ;       JMP.L   _149
0007A6                +5034 _LG_156:
                       5035 ; rs232cmd.c 1464               {
                       5036 ; rs232cmd.c 1465                       if ( CmdRequest)
0007A6 964842rr        5038         MOV.B   ES,#SEG( _CmdRequest )
0007AA 9908rrrr        5039         MOV.W   R0,#SOF( _CmdRequest )
0007AE 8200            5040         MOV.B   R0L,[R0]
0007B0 F34B            5041         BEQ     _136
                       5042 ; rs232cmd.c 1466                       {
                       5043 ; rs232cmd.c 1467                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0007B2 964842rr        5045         MOV.B   ES,#SEG( _ParCnt )
0007B6 9908rrrr        5046         MOV.W   R0,#SOF( _ParCnt )
0007BA 8200            5047         MOV.B   R0L,[R0]
0007BC 910401          5048         CMP.B   R0L,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  83

ADDR   CODE            LINE SOURCELINE
0007BF F215            5049         BNE     _132
0007C1 9918rrrr        5050         MOV.W   R1,#SEG( _Cmd )
0007C5 9908rrrr        5051         MOV.W   R0,#SOF( _Cmd )
0007C9 9168rr          5052         MOV.B   R3L,#SEG( __lc_bs )
0007CC 7177            5053         XOR.B   R3H,R3H
0007CE 8927            5054         MOV.W   R2,R7
0007D0 0F0C            5055         PUSH.W  R2, R3
0007D2 9938rrrr        5057         MOV.W   R3,#SEG( _10 )
0007D6 9928rrrr        5058         MOV.W   R2,#SOF( _10 )
0007DA 0F0C            5059         PUSH.W  R2, R3
                       5061         CALL    _sscanf
0007DC C4rrrrrr       +5061 ;       FCALL   _sscanf
0007E0 99700008        5062         ADD.W   R7,#08H
0007E4 99040001        5064         CMP.W   R0,#01H
0007E8 F307            5065         BEQ     _133
0007E8 F307            5065         BEQ     _133
0007EA                 5066 _132:
                       5067 ; rs232cmd.c 1468                                       SCPIError = SyntaxErr;
0007EA 964842rr        5069         MOV.B   ES,#SEG( _SCPIError )
0007EE 9908rrrr        5070         MOV.W   R0,#SOF( _SCPIError )
0007F2 BA03            5071         MOV.W   [R0],#03H
                       5072         BR      _149
0007F4 D50097         +5072         JMP.L   _149
0007F4 D5009700       +5072         JMP.L   _149
0007F8                 5073 _133:
                       5074 ; rs232cmd.c 1469                               else
                       5075 ; rs232cmd.c 1470                               {
                       5076 ; rs232cmd.c 1471                                       if (( Reg == 0) || ( Reg > NoOfPresets))
0007F8 8A07            5078         MOV.W   R0,[R7]
0007FA F303            5079         BEQ     _134
0007FC 9A740004        5080         CMP.W   [R7],#04H
000800 FD08            5081         BLE     _135
000800 FD08            5081         BLE     _135
000802                 5082 _134:
                       5083 ; rs232cmd.c 1472                                               SCPIError = DataOutOfRange;
000802 964842rr        5085         MOV.B   ES,#SEG( _SCPIError )
000806 9908rrrr        5086         MOV.W   R0,#SOF( _SCPIError )
00080A 9A080021        5087         MOV.W   [R0],#021H
                       5088         BR      _149
00080E D5008A         +5088         JMP.L   _149
00080E D5008A00       +5088         JMP.L   _149
000812                 5089 _135:
                       5090 ; rs232cmd.c 1473                                       else
                       5091 ; rs232cmd.c 1474                                       {
                       5092 ; rs232cmd.c 1475                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
000812 91A8rr          5094         MOV.B   R5L,#SEG( __lc_bs )
000815 71BB            5095         XOR.B   R5H,R5H
000817 404714          5096         LEA     R4,R7+20
00081A 8A07            5097         MOV.W   R0,[R7]
00081C D901            5098         ASL.W   R0,#01H
00081E 8920            5099         MOV.W   R2,R0
000820 B930            5100         MOVS.W  R3,#00H
000822 964842rr        5101         MOV.B   ES,#SEG( _PresetPtr+-2 )
000826 8D22rrrr        5102         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
00082A 99380064        5103         MOV.W   R3,#064H
00082E 8915            5104         MOV.W   R1,R5
000830 8904            5105         MOV.W   R0,R4
                       5106         CALL    _NV_Recall
000832 C4rrrrrr       +5106 ;       FCALL   _NV_Recall
                       5107 ; rs232cmd.c 1476       
                       5108 ; rs232cmd.c 1477                                               rs232puts( Preset.Name);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  84

ADDR   CODE            LINE SOURCELINE
000836 8915            5110         MOV.W   R1,R5
000838 8904            5111         MOV.W   R0,R4
                       5112         CALL    _rs232puts
00083A C4rrrrrr       +5112 ;       FCALL   _rs232puts
                       5113 ; rs232cmd.c 1478                                               rs232putchar( '\n');
00083E 91080A          5115         MOV.B   R0L,#0AH
                       5116         CALL    _rs232putchar
000841 C4rrrrrr       +5116 ;       FCALL   _rs232putchar
                       5117 ; rs232cmd.c 1479                                       }
                       5118 ; rs232cmd.c 1480                               }
                       5119 ; rs232cmd.c 1481                       }
000845 FE6F            5121         BR      _149
000845 FE6F00          5121         BR      _149
000848                 5122 _136:
                       5123 ; rs232cmd.c 1482                       else
                       5124 ; rs232cmd.c 1483                       {
                       5125 ; rs232cmd.c 1484                                                                                
                                                                                    // The second parameter, the string, in s
                            canf
                       5126 ; rs232cmd.c 1485                                                                                
                                                                                    // should be limited to the definition of
                            
                       5127 ; rs232cmd.c 1486                                                                                
                                                                                    // MaxPresetNameLength
                       5128 ; rs232cmd.c 1487                               if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%17s", 
                            &Reg, Name)) != 2))
000848 964842rr        5130         MOV.B   ES,#SEG( _ParCnt )
00084C 9908rrrr        5131         MOV.W   R0,#SOF( _ParCnt )
000850 8200            5132         MOV.B   R0L,[R0]
000852 910402          5133         CMP.B   R0L,#02H
000855 F220            5134         BNE     _137
000857 9918rrrr        5135         MOV.W   R1,#SEG( _Cmd )
00085B 9908rrrr        5136         MOV.W   R0,#SOF( _Cmd )
00085F 9168rr          5137         MOV.B   R3L,#SEG( __lc_bs )
000862 7177            5138         XOR.B   R3H,R3H
000864 8927            5139         MOV.W   R2,R7
000866 91A8rr          5140         MOV.B   R5L,#SEG( __lc_bs )
000869 71BB            5141         XOR.B   R5H,R5H
00086B 404702          5142         LEA     R4,R7+2
00086E 8935            5143         MOV.W   R3,R5
000870 8924            5144         MOV.W   R2,R4
000872 0F0C            5145         PUSH.W  R2, R3
000874 9168rr          5147         MOV.B   R3L,#SEG( __lc_bs )
000877 7177            5148         XOR.B   R3H,R3H
000879 402704          5149         LEA     R2,R7+4
00087C 0F0C            5150         PUSH.W  R2, R3
00087E 9938rrrr        5152         MOV.W   R3,#SEG( _131 )
000882 9928rrrr        5153         MOV.W   R2,#SOF( _131 )
000886 0F0C            5154         PUSH.W  R2, R3
                       5156         CALL    _sscanf
000888 C4rrrrrr       +5156 ;       FCALL   _sscanf
00088C 9970000C        5157         ADD.W   R7,#0CH
000890 99040002        5159         CMP.W   R0,#02H
000894 F306            5160         BEQ     _138
000894 F306            5160         BEQ     _138
000896                 5161 _137:
                       5162 ; rs232cmd.c 1488                                       SCPIError = SyntaxErr;
000896 964842rr        5164         MOV.B   ES,#SEG( _SCPIError )
00089A 9908rrrr        5165         MOV.W   R0,#SOF( _SCPIError )
00089E BA03            5166         MOV.W   [R0],#03H
0008A0 FE41            5167         BR      _149
0008A0 FE41            5167         BR      _149
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  85

ADDR   CODE            LINE SOURCELINE
0008A2                 5168 _138:
0008A2 8915            5169         MOV.W   R1,R5
0008A4 8904            5170         MOV.W   R0,R4
                       5171 ; rs232cmd.c 1489                               else
                       5172 ; rs232cmd.c 1490                               {
                       5173 ; rs232cmd.c 1491                                       if ( strlen( Name) == MaxPresetNameLength
                            )
                       5175         CALL    _strlen
0008A6 C4rrrrrr       +5175 ;       FCALL   _strlen
0008AA 99040011        5176         CMP.W   R0,#011H
0008AE F206            5177         BNE     _139
                       5178 ; rs232cmd.c 1492                                               SCPIError = SyntaxErr;
0008B0 964842rr        5180         MOV.B   ES,#SEG( _SCPIError )
0008B4 9908rrrr        5181         MOV.W   R0,#SOF( _SCPIError )
0008B8 BA03            5182         MOV.W   [R0],#03H
0008BA FE34            5183         BR      _149
0008BA FE34            5183         BR      _149
0008BC                 5184 _139:
                       5185 ; rs232cmd.c 1493                                       else
                       5186 ; rs232cmd.c 1494                                       {
                       5187 ; rs232cmd.c 1495                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
0008BC 8A07            5189         MOV.W   R0,[R7]
0008BE F303            5190         BEQ     _140
0008C0 9A740004        5191         CMP.W   [R7],#04H
0008C4 FD07            5192         BLE     _141
0008C4 FD07            5192         BLE     _141
0008C6                 5193 _140:
                       5194 ; rs232cmd.c 1496                                                       SCPIError = DataOutOfRang
                            e;
0008C6 964842rr        5196         MOV.B   ES,#SEG( _SCPIError )
0008CA 9908rrrr        5197         MOV.W   R0,#SOF( _SCPIError )
0008CE 9A080021        5198         MOV.W   [R0],#021H
0008D2 FE28            5199         BR      _149
0008D2 FE28            5199         BR      _149
0008D4                 5200 _141:
                       5201 ; rs232cmd.c 1497                                               else
                       5202 ; rs232cmd.c 1498                                               {
                       5203 ; rs232cmd.c 1499                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
0008D4 91A8rr          5205         MOV.B   R5L,#SEG( __lc_bs )
0008D7 71BB            5206         XOR.B   R5H,R5H
0008D9 404714          5207         LEA     R4,R7+20
0008DC 8A07            5208         MOV.W   R0,[R7]
0008DE D901            5209         ASL.W   R0,#01H
0008E0 8920            5210         MOV.W   R2,R0
0008E2 B930            5211         MOVS.W  R3,#00H
0008E4 964842rr        5212         MOV.B   ES,#SEG( _PresetPtr+-2 )
0008E8 8D22rrrr        5213         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0008EC 99380064        5214         MOV.W   R3,#064H
0008F0 8915            5215         MOV.W   R1,R5
0008F2 8904            5216         MOV.W   R0,R4
                       5217         CALL    _NV_Recall
0008F4 C4rrrrrr       +5217 ;       FCALL   _NV_Recall
0008F8 8915            5218         MOV.W   R1,R5
0008FA 8904            5219         MOV.W   R0,R4
                       5220 ; rs232cmd.c 1500                                                       strcpy( Preset.Name, Name
                            );
0008FC 9168rr          5222         MOV.B   R3L,#SEG( __lc_bs )
0008FF 7177            5223         XOR.B   R3H,R3H
000901 402702          5224         LEA     R2,R7+2
                       5225         CALL    _strcpy
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  86

ADDR   CODE            LINE SOURCELINE
000904 C4rrrrrr       +5225 ;       FCALL   _strcpy
                       5226 ; rs232cmd.c 1501                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000908 8A07            5228         MOV.W   R0,[R7]
00090A D901            5229         ASL.W   R0,#01H
00090C 8920            5230         MOV.W   R2,R0
00090E B930            5231         MOVS.W  R3,#00H
000910 964842rr        5232         MOV.B   ES,#SEG( _PresetPtr+-2 )
000914 8D22rrrr        5233         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000918 8915            5234         MOV.W   R1,R5
00091A 8904            5235         MOV.W   R0,R4
00091C 99380064        5236         MOV.W   R3,#064H
                       5237         CALL    _NV_Store
000920 C4rrrrrr       +5237 ;       FCALL   _NV_Store
                       5238 ; rs232cmd.c 1502                                               }
                       5239 ; rs232cmd.c 1503                                       }
                       5240 ; rs232cmd.c 1504                               }
                       5241 ; rs232cmd.c 1505                       }
                       5242 ; rs232cmd.c 1506               }
000924                 5244 _149:
                       5245 ; rs232cmd.c 1507       }
000924 99700078        5247         ADD.W   R7,#078H
000928 2F30            5249         POP.W   R4, R5
00092A D680            5251         RET
                       5253 ; rs232cmd.c 1508       
                       5254 ; rs232cmd.c 1509       /************************************************************************
                            **/
                       5255 ; rs232cmd.c 1510       /* SystemPresetAuthor                                                    
                                                                                                                             
                                             RS232CMD.C */
                       5256 ; rs232cmd.c 1511       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5257 ; rs232cmd.c 1512       /* Author:              Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                    */
                       5258 ; rs232cmd.c 1513       /* Revised:             000503                                           
                                                                                                                             
                                                                                    */
                       5259 ; rs232cmd.c 1514       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5260 ; rs232cmd.c 1515       /* Function:    Name the author of a specific preset number.             
                                                                            */
                       5261 ; rs232cmd.c 1516       /* Remarks:             the scanf function can not used MaxPresetAuthorLe
                            ngth, i.e.      */
                       5262 ; rs232cmd.c 1517       /*                                              this define should be ins
                            erted as a value. The value is                  */
                       5263 ; rs232cmd.c 1518       /*                                              defined in INSTRU.H      
                                                                                                                             
                                                                                            */
                       5264 ; rs232cmd.c 1519       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5265 ; rs232cmd.c 1520       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  87

ADDR   CODE            LINE SOURCELINE
                       5266 ; rs232cmd.c 1521       /************************************************************************
                            **/
                       5267 ; rs232cmd.c 1522       void SystemPresetAuthor( void)
                       5268 ; rs232cmd.c 1523       {
                       5269         ALIGN   1
                       5271         PUBLIC  _SystemPresetAuthor
00092C                 5272 _SystemPresetAuthor:
00092C 0F30            5276         PUSH.W  R4, R5
00092E 9972006E        5278         SUB.W   R7,#06EH
                       5283 ; rs232cmd.c 1524               int Reg;
                       5284 ; rs232cmd.c 1525               char Author[MaxPresetAuthorLength];
                       5285 ; rs232cmd.c 1526               PresetObject Preset;
                       5286 ; rs232cmd.c 1527       
                       5287 ; rs232cmd.c 1528               if ( CmdExecute && !SCPIError)
000932 964842rr        5289         MOV.B   ES,#SEG( _CmdExecute )
000936 9908rrrr        5290         MOV.W   R0,#SOF( _CmdExecute )
00093A 8200            5291         MOV.B   R0L,[R0]
                       5292         BEQ     _175
00093C F202           +5292 ;       BNE     _LG_178
00093E D500C9         +5292 ;       JMP.L   _175
00093E D500C900       +5292 ;       JMP.L   _175
000942                +5292 _LG_178:
000942 964842rr        5293         MOV.B   ES,#SEG( _SCPIError )
000946 9908rrrr        5294         MOV.W   R0,#SOF( _SCPIError )
00094A 8A00            5295         MOV.W   R0,[R0]
                       5296         BNE     _175
00094C F302           +5296 ;       BEQ     _LG_180
00094E D500C1         +5296 ;       JMP.L   _175
00094E D500C100       +5296 ;       JMP.L   _175
000952                +5296 _LG_180:
                       5297 ; rs232cmd.c 1529               {
                       5298 ; rs232cmd.c 1530                       if ( CmdRequest)
000952 964842rr        5300         MOV.B   ES,#SEG( _CmdRequest )
000956 9908rrrr        5301         MOV.W   R0,#SOF( _CmdRequest )
00095A 8200            5302         MOV.B   R0L,[R0]
00095C F34A            5303         BEQ     _162
                       5304 ; rs232cmd.c 1531                       {
                       5305 ; rs232cmd.c 1532                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
00095E 964842rr        5307         MOV.B   ES,#SEG( _ParCnt )
000962 9908rrrr        5308         MOV.W   R0,#SOF( _ParCnt )
000966 8200            5309         MOV.B   R0L,[R0]
000968 910401          5310         CMP.B   R0L,#01H
00096B F215            5311         BNE     _158
00096D 9918rrrr        5312         MOV.W   R1,#SEG( _Cmd )
000971 9908rrrr        5313         MOV.W   R0,#SOF( _Cmd )
000975 9168rr          5314         MOV.B   R3L,#SEG( __lc_bs )
000978 7177            5315         XOR.B   R3H,R3H
00097A 8927            5316         MOV.W   R2,R7
00097C 0F0C            5317         PUSH.W  R2, R3
00097E 9938rrrr        5319         MOV.W   R3,#SEG( _10 )
000982 9928rrrr        5320         MOV.W   R2,#SOF( _10 )
000986 0F0C            5321         PUSH.W  R2, R3
                       5323         CALL    _sscanf
000988 C4rrrrrr       +5323 ;       FCALL   _sscanf
00098C 99700008        5324         ADD.W   R7,#08H
000990 99040001        5326         CMP.W   R0,#01H
000994 F307            5327         BEQ     _159
000994 F307            5327         BEQ     _159
000996                 5328 _158:
                       5329 ; rs232cmd.c 1533                                       SCPIError = SyntaxErr;
000996 964842rr        5331         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  88

ADDR   CODE            LINE SOURCELINE
00099A 9908rrrr        5332         MOV.W   R0,#SOF( _SCPIError )
00099E BA03            5333         MOV.W   [R0],#03H
                       5334         BR      _175
0009A0 D50098         +5334         JMP.L   _175
0009A0 D5009800       +5334         JMP.L   _175
0009A4                 5335 _159:
                       5336 ; rs232cmd.c 1534                               else
                       5337 ; rs232cmd.c 1535                               {
                       5338 ; rs232cmd.c 1536                                       if (( Reg == 0) || ( Reg > NoOfPresets))
0009A4 8A07            5340         MOV.W   R0,[R7]
0009A6 F303            5341         BEQ     _160
0009A8 9A740004        5342         CMP.W   [R7],#04H
0009AC FD08            5343         BLE     _161
0009AC FD08            5343         BLE     _161
0009AE                 5344 _160:
                       5345 ; rs232cmd.c 1537                                               SCPIError = DataOutOfRange;
0009AE 964842rr        5347         MOV.B   ES,#SEG( _SCPIError )
0009B2 9908rrrr        5348         MOV.W   R0,#SOF( _SCPIError )
0009B6 9A080021        5349         MOV.W   [R0],#021H
                       5350         BR      _175
0009BA D5008B         +5350         JMP.L   _175
0009BA D5008B00       +5350         JMP.L   _175
0009BE                 5351 _161:
                       5352 ; rs232cmd.c 1538                                       else
                       5353 ; rs232cmd.c 1539                                       {
                       5354 ; rs232cmd.c 1540                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
0009BE 9128rr          5356         MOV.B   R1L,#SEG( __lc_bs )
0009C1 7133            5357         XOR.B   R1H,R1H
0009C3 40070A          5358         LEA     R0,R7+10
0009C6 8A27            5359         MOV.W   R2,[R7]
0009C8 D921            5360         ASL.W   R2,#01H
0009CA B930            5361         MOVS.W  R3,#00H
0009CC 964842rr        5362         MOV.B   ES,#SEG( _PresetPtr+-2 )
0009D0 8D22rrrr        5363         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0009D4 99380064        5364         MOV.W   R3,#064H
                       5365         CALL    _NV_Recall
0009D8 C4rrrrrr       +5365 ;       FCALL   _NV_Recall
                       5366 ; rs232cmd.c 1541       
                       5367 ; rs232cmd.c 1542                                               rs232puts( Preset.Author);
0009DC 9128rr          5369         MOV.B   R1L,#SEG( __lc_bs )
0009DF 7133            5370         XOR.B   R1H,R1H
0009E1 40071B          5371         LEA     R0,R7+27
                       5372         CALL    _rs232puts
0009E4 C4rrrrrr       +5372 ;       FCALL   _rs232puts
                       5373 ; rs232cmd.c 1543                                               rs232putchar( '\n');
0009E8 91080A          5375         MOV.B   R0L,#0AH
                       5376         CALL    _rs232putchar
0009EB C4rrrrrr       +5376 ;       FCALL   _rs232putchar
                       5377 ; rs232cmd.c 1544                                       }
                       5378 ; rs232cmd.c 1545                               }
                       5379 ; rs232cmd.c 1546                       }
0009EF FE71            5381         BR      _175
0009EF FE7100          5381         BR      _175
0009F2                 5382 _162:
                       5383 ; rs232cmd.c 1547                       else
                       5384 ; rs232cmd.c 1548                       {
                       5385 ; rs232cmd.c 1549                                                                                
                                                                                    // The second parameter, the string, in s
                            canf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  89

ADDR   CODE            LINE SOURCELINE
                       5386 ; rs232cmd.c 1550                                                                                
                                                                                    // should be limited to the definition of
                            
                       5387 ; rs232cmd.c 1551                                                                                
                                                                                    // MaxPresetAuthorLength
                       5388 ; rs232cmd.c 1552                               if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%7s", &
                            Reg, Author)) != 2))
0009F2 964842rr        5390         MOV.B   ES,#SEG( _ParCnt )
0009F6 9908rrrr        5391         MOV.W   R0,#SOF( _ParCnt )
0009FA 8200            5392         MOV.B   R0L,[R0]
0009FC 910402          5393         CMP.B   R0L,#02H
0009FF F220            5394         BNE     _163
000A01 9918rrrr        5395         MOV.W   R1,#SEG( _Cmd )
000A05 9908rrrr        5396         MOV.W   R0,#SOF( _Cmd )
000A09 9168rr          5397         MOV.B   R3L,#SEG( __lc_bs )
000A0C 7177            5398         XOR.B   R3H,R3H
000A0E 8927            5399         MOV.W   R2,R7
000A10 91A8rr          5400         MOV.B   R5L,#SEG( __lc_bs )
000A13 71BB            5401         XOR.B   R5H,R5H
000A15 404702          5402         LEA     R4,R7+2
000A18 8935            5403         MOV.W   R3,R5
000A1A 8924            5404         MOV.W   R2,R4
000A1C 0F0C            5405         PUSH.W  R2, R3
000A1E 9168rr          5407         MOV.B   R3L,#SEG( __lc_bs )
000A21 7177            5408         XOR.B   R3H,R3H
000A23 402704          5409         LEA     R2,R7+4
000A26 0F0C            5410         PUSH.W  R2, R3
000A28 9938rrrr        5412         MOV.W   R3,#SEG( _157 )
000A2C 9928rrrr        5413         MOV.W   R2,#SOF( _157 )
000A30 0F0C            5414         PUSH.W  R2, R3
                       5416         CALL    _sscanf
000A32 C4rrrrrr       +5416 ;       FCALL   _sscanf
000A36 9970000C        5417         ADD.W   R7,#0CH
000A3A 99040002        5419         CMP.W   R0,#02H
000A3E F306            5420         BEQ     _164
000A3E F306            5420         BEQ     _164
000A40                 5421 _163:
                       5422 ; rs232cmd.c 1553                                       SCPIError = SyntaxErr;
000A40 964842rr        5424         MOV.B   ES,#SEG( _SCPIError )
000A44 9908rrrr        5425         MOV.W   R0,#SOF( _SCPIError )
000A48 BA03            5426         MOV.W   [R0],#03H
000A4A FE43            5427         BR      _175
000A4A FE43            5427         BR      _175
000A4C                 5428 _164:
000A4C 8915            5429         MOV.W   R1,R5
000A4E 8904            5430         MOV.W   R0,R4
                       5431 ; rs232cmd.c 1554                               else
                       5432 ; rs232cmd.c 1555                               {
                       5433 ; rs232cmd.c 1556                                       if ( strlen( Author) == MaxPresetAuthorLe
                            ngth)
                       5435         CALL    _strlen
000A50 C4rrrrrr       +5435 ;       FCALL   _strlen
000A54 99040007        5436         CMP.W   R0,#07H
000A58 F206            5437         BNE     _165
                       5438 ; rs232cmd.c 1557                                               SCPIError = SyntaxErr;
000A5A 964842rr        5440         MOV.B   ES,#SEG( _SCPIError )
000A5E 9908rrrr        5441         MOV.W   R0,#SOF( _SCPIError )
000A62 BA03            5442         MOV.W   [R0],#03H
000A64 FE36            5443         BR      _175
000A64 FE36            5443         BR      _175
000A66                 5444 _165:
                       5445 ; rs232cmd.c 1558                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  90

ADDR   CODE            LINE SOURCELINE
                       5446 ; rs232cmd.c 1559                                       {
                       5447 ; rs232cmd.c 1560                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
000A66 8A07            5449         MOV.W   R0,[R7]
000A68 F303            5450         BEQ     _166
000A6A 9A740004        5451         CMP.W   [R7],#04H
000A6E FD07            5452         BLE     _167
000A6E FD07            5452         BLE     _167
000A70                 5453 _166:
                       5454 ; rs232cmd.c 1561                                                       SCPIError = DataOutOfRang
                            e;
000A70 964842rr        5456         MOV.B   ES,#SEG( _SCPIError )
000A74 9908rrrr        5457         MOV.W   R0,#SOF( _SCPIError )
000A78 9A080021        5458         MOV.W   [R0],#021H
000A7C FE2A            5459         BR      _175
000A7C FE2A            5459         BR      _175
000A7E                 5460 _167:
                       5461 ; rs232cmd.c 1562                                               else
                       5462 ; rs232cmd.c 1563                                               {
                       5463 ; rs232cmd.c 1564                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
000A7E 91A8rr          5465         MOV.B   R5L,#SEG( __lc_bs )
000A81 71BB            5466         XOR.B   R5H,R5H
000A83 40470A          5467         LEA     R4,R7+10
000A86 8A07            5468         MOV.W   R0,[R7]
000A88 D901            5469         ASL.W   R0,#01H
000A8A 8920            5470         MOV.W   R2,R0
000A8C B930            5471         MOVS.W  R3,#00H
000A8E 964842rr        5472         MOV.B   ES,#SEG( _PresetPtr+-2 )
000A92 8D22rrrr        5473         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000A96 99380064        5474         MOV.W   R3,#064H
000A9A 8915            5475         MOV.W   R1,R5
000A9C 8904            5476         MOV.W   R0,R4
                       5477         CALL    _NV_Recall
000A9E C4rrrrrr       +5477 ;       FCALL   _NV_Recall
                       5478 ; rs232cmd.c 1565                                                       strcpy( Preset.Author, Au
                            thor);
000AA2 9128rr          5480         MOV.B   R1L,#SEG( __lc_bs )
000AA5 7133            5481         XOR.B   R1H,R1H
000AA7 40071B          5482         LEA     R0,R7+27
000AAA 9168rr          5483         MOV.B   R3L,#SEG( __lc_bs )
000AAD 7177            5484         XOR.B   R3H,R3H
000AAF 402702          5485         LEA     R2,R7+2
                       5486         CALL    _strcpy
000AB2 C4rrrrrr       +5486 ;       FCALL   _strcpy
                       5487 ; rs232cmd.c 1566                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000AB6 8A07            5489         MOV.W   R0,[R7]
000AB8 D901            5490         ASL.W   R0,#01H
000ABA 8920            5491         MOV.W   R2,R0
000ABC B930            5492         MOVS.W  R3,#00H
000ABE 964842rr        5493         MOV.B   ES,#SEG( _PresetPtr+-2 )
000AC2 8D22rrrr        5494         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000AC6 8915            5495         MOV.W   R1,R5
000AC8 8904            5496         MOV.W   R0,R4
000ACA 99380064        5497         MOV.W   R3,#064H
                       5498         CALL    _NV_Store
000ACE C4rrrrrr       +5498 ;       FCALL   _NV_Store
                       5499 ; rs232cmd.c 1567                                               }
                       5500 ; rs232cmd.c 1568                                       }
                       5501 ; rs232cmd.c 1569                               }
                       5502 ; rs232cmd.c 1570                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  91

ADDR   CODE            LINE SOURCELINE
                       5503 ; rs232cmd.c 1571               }
000AD2                 5505 _175:
                       5506 ; rs232cmd.c 1572       }
000AD2 9970006E        5508         ADD.W   R7,#06EH
000AD6 2F30            5510         POP.W   R4, R5
000AD8 D680            5512         RET
                       5514 ; rs232cmd.c 1573       
                       5515 ; rs232cmd.c 1574       /************************************************************************
                            **/
                       5516 ; rs232cmd.c 1575       /* SystemPresetDate                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       5517 ; rs232cmd.c 1576       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5518 ; rs232cmd.c 1577       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       5519 ; rs232cmd.c 1578       /* Revised:             001016                                           
                                                                                                                             
                                                                                    */
                       5520 ; rs232cmd.c 1579       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5521 ; rs232cmd.c 1580       /* Function:    -                                                        
                                                                                                                             
                                                                                                                    */
                       5522 ; rs232cmd.c 1581       /* Remarks:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5523 ; rs232cmd.c 1582       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5524 ; rs232cmd.c 1583       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5525 ; rs232cmd.c 1584       /************************************************************************
                            **/
                       5526 ; rs232cmd.c 1585       void SystemPresetDate( void)
                       5527 ; rs232cmd.c 1586       {
                       5528         ALIGN   1
                       5530         PUBLIC  _SystemPresetDate
000ADA                 5531 _SystemPresetDate:
000ADA 0F30            5535         PUSH.W  R4, R5
000ADC 99720080        5537         SUB.W   R7,#080H
                       5546 ; rs232cmd.c 1587               int Reg;
                       5547 ; rs232cmd.c 1588               PresetObject Preset;
                       5548 ; rs232cmd.c 1589               UI year, month, day;
                       5549 ; rs232cmd.c 1590               char buffer[20];
                       5550 ; rs232cmd.c 1591       
                       5551 ; rs232cmd.c 1592               if ( CmdExecute && !SCPIError)
000AE0 964842rr        5553         MOV.B   ES,#SEG( _CmdExecute )
000AE4 9908rrrr        5554         MOV.W   R0,#SOF( _CmdExecute )
000AE8 8200            5555         MOV.B   R0L,[R0]
                       5556         BEQ     _202
000AEA F202           +5556 ;       BNE     _LG_202
000AEC D50110         +5556 ;       JMP.L   _202
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  92

ADDR   CODE            LINE SOURCELINE
000AEC D5011000       +5556 ;       JMP.L   _202
000AF0                +5556 _LG_202:
000AF0 964842rr        5557         MOV.B   ES,#SEG( _SCPIError )
000AF4 9908rrrr        5558         MOV.W   R0,#SOF( _SCPIError )
000AF8 8A00            5559         MOV.W   R0,[R0]
                       5560         BNE     _202
000AFA F302           +5560 ;       BEQ     _LG_204
000AFC D50108         +5560 ;       JMP.L   _202
000AFC D5010800       +5560 ;       JMP.L   _202
000B00                +5560 _LG_204:
                       5561 ; rs232cmd.c 1593               {
                       5562 ; rs232cmd.c 1594                       if ( CmdRequest)
000B00 964842rr        5564         MOV.B   ES,#SEG( _CmdRequest )
000B04 9908rrrr        5565         MOV.W   R0,#SOF( _CmdRequest )
000B08 8200            5566         MOV.B   R0L,[R0]
                       5567         BEQ     _189
000B0A F202           +5567 ;       BNE     _LG_206
000B0C D50081         +5567 ;       JMP.L   _189
000B0C D5008100       +5567 ;       JMP.L   _189
000B10                +5567 _LG_206:
                       5568 ; rs232cmd.c 1595                       {
                       5569 ; rs232cmd.c 1596                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000B10 964842rr        5571         MOV.B   ES,#SEG( _ParCnt )
000B14 9908rrrr        5572         MOV.W   R0,#SOF( _ParCnt )
000B18 8200            5573         MOV.B   R0L,[R0]
000B1A 910401          5574         CMP.B   R0L,#01H
000B1D F215            5575         BNE     _185
000B1F 9918rrrr        5576         MOV.W   R1,#SEG( _Cmd )
000B23 9908rrrr        5577         MOV.W   R0,#SOF( _Cmd )
000B27 9168rr          5578         MOV.B   R3L,#SEG( __lc_bs )
000B2A 7177            5579         XOR.B   R3H,R3H
000B2C 8927            5580         MOV.W   R2,R7
000B2E 0F0C            5581         PUSH.W  R2, R3
000B30 9938rrrr        5583         MOV.W   R3,#SEG( _10 )
000B34 9928rrrr        5584         MOV.W   R2,#SOF( _10 )
000B38 0F0C            5585         PUSH.W  R2, R3
                       5587         CALL    _sscanf
000B3A C4rrrrrr       +5587 ;       FCALL   _sscanf
000B3E 99700008        5588         ADD.W   R7,#08H
000B42 99040001        5590         CMP.W   R0,#01H
000B46 F307            5591         BEQ     _186
000B46 F307            5591         BEQ     _186
000B48                 5592 _185:
                       5593 ; rs232cmd.c 1597                                       SCPIError = SyntaxErr;
000B48 964842rr        5595         MOV.B   ES,#SEG( _SCPIError )
000B4C 9908rrrr        5596         MOV.W   R0,#SOF( _SCPIError )
000B50 BA03            5597         MOV.W   [R0],#03H
                       5598         BR      _202
000B52 D500DD         +5598         JMP.L   _202
000B52 D500DD00       +5598         JMP.L   _202
000B56                 5599 _186:
                       5600 ; rs232cmd.c 1598                               else
                       5601 ; rs232cmd.c 1599                               {
                       5602 ; rs232cmd.c 1600                                       if (( Reg == 0) || ( Reg > NoOfPresets))
000B56 8A07            5604         MOV.W   R0,[R7]
000B58 F303            5605         BEQ     _187
000B5A 9A740004        5606         CMP.W   [R7],#04H
000B5E FD08            5607         BLE     _188
000B5E FD08            5607         BLE     _188
000B60                 5608 _187:
                       5609 ; rs232cmd.c 1601                                               SCPIError = DataOutOfRange;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  93

ADDR   CODE            LINE SOURCELINE
000B60 964842rr        5611         MOV.B   ES,#SEG( _SCPIError )
000B64 9908rrrr        5612         MOV.W   R0,#SOF( _SCPIError )
000B68 9A080021        5613         MOV.W   [R0],#021H
                       5614         BR      _202
000B6C D500D0         +5614         JMP.L   _202
000B6C D500D000       +5614         JMP.L   _202
000B70                 5615 _188:
                       5616 ; rs232cmd.c 1602                                       else
                       5617 ; rs232cmd.c 1603                                       {
                       5618 ; rs232cmd.c 1604                                               NV_Recall( &Preset, PresetPtr[Reg
                            -1], sizeof( Preset));
000B70 9128rr          5620         MOV.B   R1L,#SEG( __lc_bs )
000B73 7133            5621         XOR.B   R1H,R1H
000B75 400702          5622         LEA     R0,R7+2
000B78 8A27            5623         MOV.W   R2,[R7]
000B7A D921            5624         ASL.W   R2,#01H
000B7C B930            5625         MOVS.W  R3,#00H
000B7E 964842rr        5626         MOV.B   ES,#SEG( _PresetPtr+-2 )
000B82 8D22rrrr        5627         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000B86 99380064        5628         MOV.W   R3,#064H
                       5629         CALL    _NV_Recall
000B8A C4rrrrrr       +5629 ;       FCALL   _NV_Recall
                       5630 ; rs232cmd.c 1605       
                       5631 ; rs232cmd.c 1606                                               day = Preset.Date % 100;
000B8E 8C171C          5633         MOV.W   R1,[R7+28]
000B91 8C071A          5634         MOV.W   R0,[R7+26]
000B94 B930            5635         MOV.W   R3,#00H
000B96 99280064        5636         MOV.W   R2,#064H
000B9A 8C1F1C          5637         MOV.W   [R7+28],R1
000B9D 8C0F1A          5638         MOV.W   [R7+26],R0
000BA0 C4rrrrrr        5639         FCALL   __UMODL
000BA4 8C0F6A          5640         MOV.W   [R7+106],R0
                       5641 ; rs232cmd.c 1607                                               month = ( Preset.Date / 100) % 10
                            0;
000BA7 8C171C          5643         MOV.W   R1,[R7+28]
000BAA 8C071A          5644         MOV.W   R0,[R7+26]
000BAD B930            5645         MOV.W   R3,#00H
000BAF 99280064        5646         MOV.W   R2,#064H
000BB3 8953            5647         MOV.W   R5,R3
000BB5 8942            5648         MOV.W   R4,R2
000BB7 C4rrrrrr        5649         FCALL   __UDIVL
000BBB 8935            5650         MOV.W   R3,R5
000BBD 8924            5651         MOV.W   R2,R4
000BBF C4rrrrrr        5652         FCALL   __UMODL
000BC3 8C0F68          5653         MOV.W   [R7+104],R0
                       5654 ; rs232cmd.c 1608                                               year = ( Preset.Date / 10000);
000BC6 B930            5656         MOV.W   R3,#00H
000BC8 99282710        5657         MOV.W   R2,#02710H
000BCC 8C171C          5658         MOV.W   R1,[R7+28]
000BCF 8C071A          5659         MOV.W   R0,[R7+26]
000BD2 C4rrrrrr        5660         FCALL   __UDIVL
000BD6 8C0F66          5661         MOV.W   [R7+102],R0
                       5662 ; rs232cmd.c 1609       
                       5663 ; rs232cmd.c 1610                                               sprintf( buffer, "%d,%d,%d\n", ye
                            ar, month, day);
000BD9 91A8rr          5665         MOV.B   R5L,#SEG( __lc_bs )
000BDC 71BB            5666         XOR.B   R5H,R5H
000BDE 40476C          5667         LEA     R4,R7+108
000BE1 8C076A          5668         MOV.W   R0,[R7+106]
000BE4 0F01            5669         PUSH.W  R0
000BE6 8C076A          5671         MOV.W   R0,[R7+106]
000BE9 0F01            5672         PUSH.W  R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  94

ADDR   CODE            LINE SOURCELINE
000BEB 8C076A          5674         MOV.W   R0,[R7+106]
000BEE 0F01            5675         PUSH.W  R0
000BF0 9918rrrr        5677         MOV.W   R1,#SEG( _183 )
000BF4 9908rrrr        5678         MOV.W   R0,#SOF( _183 )
000BF8 0F03            5679         PUSH.W  R0, R1
000BFA 8915            5681         MOV.W   R1,R5
000BFC 8904            5682         MOV.W   R0,R4
                       5683         CALL    _sprintf
000BFE C4rrrrrr       +5683 ;       FCALL   _sprintf
000C02 9970000A        5684         ADD.W   R7,#0AH
                       5686 ; rs232cmd.c 1611       
                       5687 ; rs232cmd.c 1612                                               rs232puts( buffer);
000C06 8915            5689         MOV.W   R1,R5
000C08 8904            5690         MOV.W   R0,R4
                       5691         CALL    _rs232puts
000C0A C4rrrrrr       +5691 ;       FCALL   _rs232puts
                       5692 ; rs232cmd.c 1613                                       }
                       5693 ; rs232cmd.c 1614                               }
                       5694 ; rs232cmd.c 1615                       }
000C0E FE7F            5696         BR      _202
000C0E FE7F            5696         BR      _202
000C10                 5697 _189:
                       5698 ; rs232cmd.c 1616                       else
                       5699 ; rs232cmd.c 1617                       {
                       5700 ; rs232cmd.c 1618                               if (( ParCnt != 4) || (( sscanf( Cmd, "%d,%d,%d,%
                            d", &Reg, &year, &month, &day)) != 4))
000C10 964842rr        5702         MOV.B   ES,#SEG( _ParCnt )
000C14 9908rrrr        5703         MOV.W   R0,#SOF( _ParCnt )
000C18 8200            5704         MOV.B   R0L,[R0]
000C1A 910404          5705         CMP.B   R0L,#04H
000C1D F228            5706         BNE     _190
000C1F 9168rr          5707         MOV.B   R3L,#SEG( __lc_bs )
000C22 7177            5708         XOR.B   R3H,R3H
000C24 8927            5709         MOV.W   R2,R7
000C26 91A8rr          5710         MOV.B   R5L,#SEG( __lc_bs )
000C29 71BB            5711         XOR.B   R5H,R5H
000C2B 404766          5712         LEA     R4,R7+102
000C2E 9128rr          5713         MOV.B   R1L,#SEG( __lc_bs )
000C31 7133            5714         XOR.B   R1H,R1H
000C33 400768          5715         LEA     R0,R7+104
000C36 9128rr          5716         MOV.B   R1L,#SEG( __lc_bs )
000C39 7133            5717         XOR.B   R1H,R1H
000C3B 40076A          5718         LEA     R0,R7+106
000C3E 0F03            5719         PUSH.W  R0, R1
000C40 9128rr          5721         MOV.B   R1L,#SEG( __lc_bs )
000C43 7133            5722         XOR.B   R1H,R1H
000C45 40076C          5723         LEA     R0,R7+108
000C48 0F03            5724         PUSH.W  R0, R1
000C4A 0F30            5726         PUSH.W  R4, R5
000C4C 0F0C            5728         PUSH.W  R2, R3
000C4E 9938rrrr        5730         MOV.W   R3,#SEG( _184 )
000C52 9928rrrr        5731         MOV.W   R2,#SOF( _184 )
000C56 0F0C            5732         PUSH.W  R2, R3
000C58 9918rrrr        5734         MOV.W   R1,#SEG( _Cmd )
000C5C 9908rrrr        5735         MOV.W   R0,#SOF( _Cmd )
                       5736         CALL    _sscanf
000C60 C4rrrrrr       +5736 ;       FCALL   _sscanf
000C64 99700014        5737         ADD.W   R7,#014H
000C68 99040004        5739         CMP.W   R0,#04H
000C6C F306            5740         BEQ     _191
000C6C F306            5740         BEQ     _191
000C6E                 5741 _190:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  95

ADDR   CODE            LINE SOURCELINE
                       5742 ; rs232cmd.c 1619                                       SCPIError = SyntaxErr;
000C6E 964842rr        5744         MOV.B   ES,#SEG( _SCPIError )
000C72 9908rrrr        5745         MOV.W   R0,#SOF( _SCPIError )
000C76 BA03            5746         MOV.W   [R0],#03H
000C78 FE4A            5747         BR      _202
000C78 FE4A            5747         BR      _202
000C7A                 5748 _191:
                       5749 ; rs232cmd.c 1620                               else
                       5750 ; rs232cmd.c 1621                               {
                       5751 ; rs232cmd.c 1622                                       if ( ValidateDate( year, month, day) == F
                            AIL)
000C7A 8C0766          5753         MOV.W   R0,[R7+102]
000C7D 8C1768          5754         MOV.W   R1,[R7+104]
000C80 8C276A          5755         MOV.W   R2,[R7+106]
                       5756         CALL    _ValidateDate
000C83 C4rrrrrr       +5756 ;       FCALL   _ValidateDate
000C87 6900            5757         OR.W    R0,R0
000C89 F208            5758         BNE     _192
                       5759 ; rs232cmd.c 1623                                               SCPIError = ExecErr;
000C8B 964842rr        5761         MOV.B   ES,#SEG( _SCPIError )
000C8F 9908rrrr        5762         MOV.W   R0,#SOF( _SCPIError )
000C93 9A08001D        5763         MOV.W   [R0],#01DH
000C97 FE3B            5764         BR      _202
000C97 FE3B00          5764         BR      _202
000C9A                 5765 _192:
                       5766 ; rs232cmd.c 1624                                       else
                       5767 ; rs232cmd.c 1625                                       {
                       5768 ; rs232cmd.c 1626                                               if (( Reg == 0) || ( Reg > NoOfPr
                            esets))
000C9A 8A07            5770         MOV.W   R0,[R7]
000C9C F303            5771         BEQ     _193
000C9E 9A740004        5772         CMP.W   [R7],#04H
000CA2 FD07            5773         BLE     _194
000CA2 FD07            5773         BLE     _194
000CA4                 5774 _193:
                       5775 ; rs232cmd.c 1627                                                       SCPIError = DataOutOfRang
                            e;
000CA4 964842rr        5777         MOV.B   ES,#SEG( _SCPIError )
000CA8 9908rrrr        5778         MOV.W   R0,#SOF( _SCPIError )
000CAC 9A080021        5779         MOV.W   [R0],#021H
000CB0 FE2E            5780         BR      _202
000CB0 FE2E            5780         BR      _202
000CB2                 5781 _194:
                       5782 ; rs232cmd.c 1628                                               else
                       5783 ; rs232cmd.c 1629                                               {
                       5784 ; rs232cmd.c 1630                                                       NV_Recall( &Preset, Prese
                            tPtr[Reg-1], sizeof( Preset));
000CB2 91A8rr          5786         MOV.B   R5L,#SEG( __lc_bs )
000CB5 71BB            5787         XOR.B   R5H,R5H
000CB7 404702          5788         LEA     R4,R7+2
000CBA 8A07            5789         MOV.W   R0,[R7]
000CBC D901            5790         ASL.W   R0,#01H
000CBE 8920            5791         MOV.W   R2,R0
000CC0 B930            5792         MOVS.W  R3,#00H
000CC2 964842rr        5793         MOV.B   ES,#SEG( _PresetPtr+-2 )
000CC6 8D22rrrr        5794         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000CCA 99380064        5795         MOV.W   R3,#064H
000CCE 8915            5796         MOV.W   R1,R5
000CD0 8904            5797         MOV.W   R0,R4
                       5798         CALL    _NV_Recall
000CD2 C4rrrrrr       +5798 ;       FCALL   _NV_Recall
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  96

ADDR   CODE            LINE SOURCELINE
                       5799 ; rs232cmd.c 1631                                                       Preset.Date = day + 100*m
                            onth + 10000*year;
000CD6 8C0768          5801         MOV.W   R0,[R7+104]
000CD9 E9000064        5802         MULU.W  R0,#064H
000CDD 0C076A          5803         ADD.W   R0,[R7+106]
000CE0 8C2766          5804         MOV.W   R2,[R7+102]
000CE3 E9202710        5805         MULU.W  R2,#02710H
000CE7 0902            5806         ADD.W   R0,R2
000CE9 B910            5807         MOVS.W  R1,#00H
000CEB 8C1F1C          5808         MOV.W   [R7+28],R1
000CEE 8C0F1A          5809         MOV.W   [R7+26],R0
                       5810 ; rs232cmd.c 1632                                                       NV_Store( &Preset, Preset
                            Ptr[Reg-1], sizeof( Preset));
000CF1 8A07            5812         MOV.W   R0,[R7]
000CF3 D901            5813         ASL.W   R0,#01H
000CF5 8920            5814         MOV.W   R2,R0
000CF7 B930            5815         MOVS.W  R3,#00H
000CF9 964842rr        5816         MOV.B   ES,#SEG( _PresetPtr+-2 )
000CFD 8D22rrrr        5817         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000D01 8915            5818         MOV.W   R1,R5
000D03 8904            5819         MOV.W   R0,R4
000D05 99380064        5820         MOV.W   R3,#064H
                       5821         CALL    _NV_Store
000D09 C4rrrrrr       +5821 ;       FCALL   _NV_Store
                       5822 ; rs232cmd.c 1633                                               }
                       5823 ; rs232cmd.c 1634                                       }                               
                       5824 ; rs232cmd.c 1635                               }
                       5825 ; rs232cmd.c 1636                       }
                       5826 ; rs232cmd.c 1637               }
000D0E                 5828 _202:
                       5829 ; rs232cmd.c 1638       }
000D0E 99700080        5831         ADD.W   R7,#080H
000D12 2F30            5833         POP.W   R4, R5
000D14 D680            5835         RET
                       5837 ; rs232cmd.c 1639       
                       5838 ; rs232cmd.c 1640       /************************************************************************
                            **/
                       5839 ; rs232cmd.c 1641       /* SystemPresetDownload                                                  
                                                                                                                             
                                     RS232CMD.C */
                       5840 ; rs232cmd.c 1642       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5841 ; rs232cmd.c 1643       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                    */
                       5842 ; rs232cmd.c 1644       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5843 ; rs232cmd.c 1645       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5844 ; rs232cmd.c 1646       /* Function:    Download a setup to a specific preset withouth disturbing
                                            */
                       5845 ; rs232cmd.c 1647       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                            */
                       5846 ; rs232cmd.c 1648       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       5847 ; rs232cmd.c 1649       /* Returns:             -                                                
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  97

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                            *
                            /
                       5848 ; rs232cmd.c 1650       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5849 ; rs232cmd.c 1651       /************************************************************************
                            **/
                       5850 ; rs232cmd.c 1652       void SystemPresetDownload( void)
                       5851 ; rs232cmd.c 1653       {
                       5852         ALIGN   1
                       5854         PUBLIC  _SystemPresetDownload
000D16                 5855 _SystemPresetDownload:
                       5859 ; rs232cmd.c 1654               ;
                       5860 ; rs232cmd.c 1655       }
000D16 D680            5862         RET
                       5864 ; rs232cmd.c 1656       
                       5865 ; rs232cmd.c 1657       /************************************************************************
                            **/
                       5866 ; rs232cmd.c 1658       /* SystemPresetUpload                                                    
                                                                                                                             
                                             RS232CMD.C */
                       5867 ; rs232cmd.c 1659       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5868 ; rs232cmd.c 1660       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                    */
                       5869 ; rs232cmd.c 1661       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5870 ; rs232cmd.c 1662       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */                                                              
                       5871 ; rs232cmd.c 1663       /* Function:    Upload a setup from a specific preset withouth disturbing
                                            */
                       5872 ; rs232cmd.c 1664       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                            */
                       5873 ; rs232cmd.c 1665       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       5874 ; rs232cmd.c 1666       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5875 ; rs232cmd.c 1667       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5876 ; rs232cmd.c 1668       /************************************************************************
                            **/
                       5877 ; rs232cmd.c 1669       void SystemPresetUpload( void)
                       5878 ; rs232cmd.c 1670       {
                       5879         ALIGN   1
                       5881         PUBLIC  _SystemPresetUpload
000D18                 5882 _SystemPresetUpload:
                       5886 ; rs232cmd.c 1671               ;
                       5887 ; rs232cmd.c 1672       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  98

ADDR   CODE            LINE SOURCELINE
000D18 D680            5889         RET
                       5891 ; rs232cmd.c 1673       
                       5892 ; rs232cmd.c 1674       /************************************************************************
                            **/
                       5893 ; rs232cmd.c 1675       /* StatusOperEvent                                                       
                                                                                                                             
                                                     RS232CMD.C */
                       5894 ; rs232cmd.c 1676       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5895 ; rs232cmd.c 1677       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       5896 ; rs232cmd.c 1678       /* Revised:             000402                                           
                                                                                                                             
                                                                                    */
                       5897 ; rs232cmd.c 1679       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5898 ; rs232cmd.c 1680       /* Function:    Set/read the status operation event register             
                                                                            */
                       5899 ; rs232cmd.c 1681       /* Remarks:             Reading the event register clears it             
                                                                                                            */
                       5900 ; rs232cmd.c 1682       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       5901 ; rs232cmd.c 1683       /* Updates:             OperEventReg                                     
                                                                                                                             
                                                                                    */
                       5902 ; rs232cmd.c 1684       /************************************************************************
                            **/
                       5903 ; rs232cmd.c 1685       void StatusOperEvent( void)
                       5904 ; rs232cmd.c 1686       {
                       5905         ALIGN   1
                       5907         PUBLIC  _StatusOperEvent
000D1A                 5908 _StatusOperEvent:
                       5912 ; rs232cmd.c 1687               if ( CmdExecute && !SCPIError)
000D1A 964842rr        5914         MOV.B   ES,#SEG( _CmdExecute )
000D1E 9908rrrr        5915         MOV.W   R0,#SOF( _CmdExecute )
000D22 8200            5916         MOV.B   R0L,[R0]
000D24 F333            5917         BEQ     _214
000D26 964842rr        5918         MOV.B   ES,#SEG( _SCPIError )
000D2A 9908rrrr        5919         MOV.W   R0,#SOF( _SCPIError )
000D2E 8A00            5920         MOV.W   R0,[R0]
000D30 F22D            5921         BNE     _214
                       5922 ; rs232cmd.c 1688               {
                       5923 ; rs232cmd.c 1689                       if ( ParCnt)
000D32 964842rr        5925         MOV.B   ES,#SEG( _ParCnt )
000D36 9908rrrr        5926         MOV.W   R0,#SOF( _ParCnt )
000D3A 8200            5927         MOV.B   R0L,[R0]
000D3C F306            5928         BEQ     _209
                       5929 ; rs232cmd.c 1690                               SCPIError = ParNotAllowed;
000D3E 964842rr        5931         MOV.B   ES,#SEG( _SCPIError )
000D42 9908rrrr        5932         MOV.W   R0,#SOF( _SCPIError )
000D46 BA06            5933         MOV.W   [R0],#06H
000D48 D680            5934         RET
000D48 D680            5934         RET
000D4A                 5935 _209:
                       5936 ; rs232cmd.c 1691                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  99

ADDR   CODE            LINE SOURCELINE
                       5937 ; rs232cmd.c 1692                       {
                       5938 ; rs232cmd.c 1693                               if ( CmdRequest) {
000D4A 964842rr        5940         MOV.B   ES,#SEG( _CmdRequest )
000D4E 9908rrrr        5941         MOV.W   R0,#SOF( _CmdRequest )
000D52 8200            5942         MOV.B   R0L,[R0]
000D54 F316            5943         BEQ     _210
                       5944 ; rs232cmd.c 1694                                       rs232printf( 12, "%d\n", OperEventReg);
000D56 9908000C        5946         MOV.W   R0,#0CH
000D5A 964842rr        5947         MOV.B   ES,#SEG( _OperEventReg )
000D5E 9918rrrr        5948         MOV.W   R1,#SOF( _OperEventReg )
000D62 8A11            5949         MOV.W   R1,[R1]
000D64 0F02            5950         PUSH.W  R1
000D66 9938rrrr        5952         MOV.W   R3,#SEG( _9 )
000D6A 9928rrrr        5953         MOV.W   R2,#SOF( _9 )
000D6E 0F0C            5954         PUSH.W  R2, R3
                       5956         CALL    _rs232printf
000D70 C4rrrrrr       +5956 ;       FCALL   _rs232printf
000D74 A976            5957         ADDS.W  R7,#06H
                       5959 ; rs232cmd.c 1695       
                       5960 ; rs232cmd.c 1696                                       OperEventReg = 0;
000D76 964842rr        5962         MOV.B   ES,#SEG( _OperEventReg )
000D7A 9908rrrr        5963         MOV.W   R0,#SOF( _OperEventReg )
000D7E BA00            5964         MOV.W   [R0],#00H
                       5965 ; rs232cmd.c 1697                               }
000D80 D680            5967         RET
000D80 D680            5967         RET
000D82                 5968 _210:
                       5969 ; rs232cmd.c 1698                               else
                       5970 ; rs232cmd.c 1699                                       SCPIError = SyntaxErr;
000D82 964842rr        5972         MOV.B   ES,#SEG( _SCPIError )
000D86 9908rrrr        5973         MOV.W   R0,#SOF( _SCPIError )
000D8A BA03            5974         MOV.W   [R0],#03H
                       5975 ; rs232cmd.c 1700                       }
                       5976 ; rs232cmd.c 1701               }
000D8C                 5978 _214:
                       5979 ; rs232cmd.c 1702       }
000D8C D680            5981         RET
                       5983 ; rs232cmd.c 1703       
                       5984 ; rs232cmd.c 1704       /************************************************************************
                            **/
                       5985 ; rs232cmd.c 1705       /* StatusOperCondition                                                   
                                                                                                                             
                                     RS232CMD.C */
                       5986 ; rs232cmd.c 1706       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5987 ; rs232cmd.c 1707       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       5988 ; rs232cmd.c 1708       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       5989 ; rs232cmd.c 1709       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5990 ; rs232cmd.c 1710       /* Function:    Read the status questionable condition register          
                                                                    */
                       5991 ; rs232cmd.c 1711       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       5992 ; rs232cmd.c 1712       /* Returns:                                                              
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 100

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                            *
                            /
                       5993 ; rs232cmd.c 1713       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       5994 ; rs232cmd.c 1714       /************************************************************************
                            **/
                       5995 ; rs232cmd.c 1715       void StatusOperCondition( void)
                       5996 ; rs232cmd.c 1716       {
                       5997         ALIGN   1
                       5999         PUBLIC  _StatusOperCondition
000D8E                 6000 _StatusOperCondition:
                       6004 ; rs232cmd.c 1717               if ( CmdExecute && !SCPIError)
000D8E 964842rr        6006         MOV.B   ES,#SEG( _CmdExecute )
000D92 9908rrrr        6007         MOV.W   R0,#SOF( _CmdExecute )
000D96 8200            6008         MOV.B   R0L,[R0]
000D98 F32E            6009         BEQ     _220
000D9A 964842rr        6010         MOV.B   ES,#SEG( _SCPIError )
000D9E 9908rrrr        6011         MOV.W   R0,#SOF( _SCPIError )
000DA2 8A00            6012         MOV.W   R0,[R0]
000DA4 F228            6013         BNE     _220
                       6014 ; rs232cmd.c 1718               {
                       6015 ; rs232cmd.c 1719                       if ( ParCnt)
000DA6 964842rr        6017         MOV.B   ES,#SEG( _ParCnt )
000DAA 9908rrrr        6018         MOV.W   R0,#SOF( _ParCnt )
000DAE 8200            6019         MOV.B   R0L,[R0]
000DB0 F306            6020         BEQ     _215
                       6021 ; rs232cmd.c 1720                               SCPIError = ParNotAllowed;
000DB2 964842rr        6023         MOV.B   ES,#SEG( _SCPIError )
000DB6 9908rrrr        6024         MOV.W   R0,#SOF( _SCPIError )
000DBA BA06            6025         MOV.W   [R0],#06H
000DBC D680            6026         RET
000DBC D680            6026         RET
000DBE                 6027 _215:
                       6028 ; rs232cmd.c 1721                       else
                       6029 ; rs232cmd.c 1722                       {
                       6030 ; rs232cmd.c 1723                               if ( CmdRequest)
000DBE 964842rr        6032         MOV.B   ES,#SEG( _CmdRequest )
000DC2 9908rrrr        6033         MOV.W   R0,#SOF( _CmdRequest )
000DC6 8200            6034         MOV.B   R0L,[R0]
000DC8 F311            6035         BEQ     _216
                       6036 ; rs232cmd.c 1724                                       rs232printf( 12, "%d\n", OperConditionReg
                            );
000DCA 9908000C        6038         MOV.W   R0,#0CH
000DCE 964842rr        6039         MOV.B   ES,#SEG( _OperConditionReg )
000DD2 9918rrrr        6040         MOV.W   R1,#SOF( _OperConditionReg )
000DD6 8A11            6041         MOV.W   R1,[R1]
000DD8 0F02            6042         PUSH.W  R1
000DDA 9938rrrr        6044         MOV.W   R3,#SEG( _9 )
000DDE 9928rrrr        6045         MOV.W   R2,#SOF( _9 )
000DE2 0F0C            6046         PUSH.W  R2, R3
                       6048         CALL    _rs232printf
000DE4 C4rrrrrr       +6048 ;       FCALL   _rs232printf
000DE8 A976            6049         ADDS.W  R7,#06H
000DEA D680            6051         RET
000DEA D680            6051         RET
000DEC                 6052 _216:
                       6053 ; rs232cmd.c 1725                               else
                       6054 ; rs232cmd.c 1726                                       SCPIError = SyntaxErr;
000DEC 964842rr        6056         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 101

ADDR   CODE            LINE SOURCELINE
000DF0 9908rrrr        6057         MOV.W   R0,#SOF( _SCPIError )
000DF4 BA03            6058         MOV.W   [R0],#03H
                       6059 ; rs232cmd.c 1727                       }
                       6060 ; rs232cmd.c 1728               }
000DF6                 6062 _220:
                       6063 ; rs232cmd.c 1729       }
000DF6 D680            6065         RET
                       6067 ; rs232cmd.c 1730       
                       6068 ; rs232cmd.c 1731       /************************************************************************
                            **/
                       6069 ; rs232cmd.c 1732       /* StatusOperEnable                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       6070 ; rs232cmd.c 1733       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6071 ; rs232cmd.c 1734       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6072 ; rs232cmd.c 1735       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6073 ; rs232cmd.c 1736       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6074 ; rs232cmd.c 1737       /* Function:    Set/read the status operaion enable register             
                                                                            */
                       6075 ; rs232cmd.c 1738       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6076 ; rs232cmd.c 1739       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6077 ; rs232cmd.c 1740       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6078 ; rs232cmd.c 1741       /************************************************************************
                            **/
                       6079 ; rs232cmd.c 1742       void StatusOperEnable( void)
                       6080 ; rs232cmd.c 1743       {
                       6081         ALIGN   1
                       6083         PUBLIC  _StatusOperEnable
000DF8                 6084 _StatusOperEnable:
000DF8 A97C            6088         ADDS.W  R7,#0CH
                       6091 ; rs232cmd.c 1744               long    Reg;
                       6092 ; rs232cmd.c 1745       
                       6093 ; rs232cmd.c 1746               if ( CmdExecute && !SCPIError)
000DFA 964842rr        6095         MOV.B   ES,#SEG( _CmdExecute )
000DFE 9908rrrr        6096         MOV.W   R0,#SOF( _CmdExecute )
000E02 8200            6097         MOV.B   R0L,[R0]
000E04 F364            6098         BEQ     _232
000E06 964842rr        6099         MOV.B   ES,#SEG( _SCPIError )
000E0A 9908rrrr        6100         MOV.W   R0,#SOF( _SCPIError )
000E0E 8A00            6101         MOV.W   R0,[R0]
000E10 F25E            6102         BNE     _232
                       6103 ; rs232cmd.c 1747               {
                       6104 ; rs232cmd.c 1748                       if ( CmdRequest)
000E12 964842rr        6106         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 102

ADDR   CODE            LINE SOURCELINE
000E16 9908rrrr        6107         MOV.W   R0,#SOF( _CmdRequest )
000E1A 8200            6108         MOV.B   R0L,[R0]
000E1C F31D            6109         BEQ     _223
                       6110 ; rs232cmd.c 1749                       {
                       6111 ; rs232cmd.c 1750                               if ( ParCnt)
000E1E 964842rr        6113         MOV.B   ES,#SEG( _ParCnt )
000E22 9908rrrr        6114         MOV.W   R0,#SOF( _ParCnt )
000E26 8200            6115         MOV.B   R0L,[R0]
000E28 F306            6116         BEQ     _222
                       6117 ; rs232cmd.c 1751                                       SCPIError = ParNotAllowed;
000E2A 964842rr        6119         MOV.B   ES,#SEG( _SCPIError )
000E2E 9908rrrr        6120         MOV.W   R0,#SOF( _SCPIError )
000E32 BA06            6121         MOV.W   [R0],#06H
000E34 FE4C            6122         BR      _232
000E34 FE4C            6122         BR      _232
000E36                 6123 _222:
                       6124 ; rs232cmd.c 1752                               else
                       6125 ; rs232cmd.c 1753                                       rs232printf( 12, "%d\n", OperEnableReg);
000E36 9908000C        6127         MOV.W   R0,#0CH
000E3A 964842rr        6128         MOV.B   ES,#SEG( _OperEnableReg )
000E3E 9918rrrr        6129         MOV.W   R1,#SOF( _OperEnableReg )
000E42 8A11            6130         MOV.W   R1,[R1]
000E44 0F02            6131         PUSH.W  R1
000E46 9938rrrr        6133         MOV.W   R3,#SEG( _9 )
000E4A 9928rrrr        6134         MOV.W   R2,#SOF( _9 )
000E4E 0F0C            6135         PUSH.W  R2, R3
                       6137         CALL    _rs232printf
000E50 C4rrrrrr       +6137 ;       FCALL   _rs232printf
000E54 A976            6138         ADDS.W  R7,#06H
                       6140 ; rs232cmd.c 1754                       }
000E56 FE3B            6142         BR      _232
000E56 FE3B            6142         BR      _232
000E58                 6143 _223:
                       6144 ; rs232cmd.c 1755                       else
                       6145 ; rs232cmd.c 1756                       {
                       6146 ; rs232cmd.c 1757                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
000E58 964842rr        6148         MOV.B   ES,#SEG( _ParCnt )
000E5C 9908rrrr        6149         MOV.W   R0,#SOF( _ParCnt )
000E60 8200            6150         MOV.B   R0L,[R0]
000E62 910401          6151         CMP.B   R0L,#01H
000E65 F215            6152         BNE     _224
000E67 9918rrrr        6153         MOV.W   R1,#SEG( _Cmd )
000E6B 9908rrrr        6154         MOV.W   R0,#SOF( _Cmd )
000E6F 9168rr          6155         MOV.B   R3L,#SEG( __lc_bs )
000E72 7177            6156         XOR.B   R3H,R3H
000E74 8927            6157         MOV.W   R2,R7
000E76 0F0C            6158         PUSH.W  R2, R3
000E78 9938rrrr        6160         MOV.W   R3,#SEG( _221 )
000E7C 9928rrrr        6161         MOV.W   R2,#SOF( _221 )
000E80 0F0C            6162         PUSH.W  R2, R3
                       6164         CALL    _sscanf
000E82 C4rrrrrr       +6164 ;       FCALL   _sscanf
000E86 99700008        6165         ADD.W   R7,#08H
000E8A 99040001        6167         CMP.W   R0,#01H
000E8E F306            6168         BEQ     _225
000E8E F306            6168         BEQ     _225
000E90                 6169 _224:
                       6170 ; rs232cmd.c 1758                               {
                       6171 ; rs232cmd.c 1759                                       SCPIError = SyntaxErr;  
000E90 964842rr        6173         MOV.B   ES,#SEG( _SCPIError )
000E94 9908rrrr        6174         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 103

ADDR   CODE            LINE SOURCELINE
000E98 BA03            6175         MOV.W   [R0],#03H
                       6176 ; rs232cmd.c 1760                                       return;
000E9A FE19            6178         BR      _232
                       6179 ; rs232cmd.c 1761                               }
000E9C                 6181 _225:
                       6182 ; rs232cmd.c 1762       
                       6183 ; rs232cmd.c 1763                               if ( Reg > 65535)
000E9C 9C74020000      6185         CMP.W   [R7+2],#00H
000EA1 FB0C            6186         BLT     _226
000EA3 FC04            6187         BGT     _235
000EA5 9A74FFFF        6188         CMP.W   [R7],#0FFFFH
000EA9 F908            6189         BL      _226
000EA9 F90800          6189         BL      _226
000EAC                 6190 _235:
                       6191 ; rs232cmd.c 1764                               {
                       6192 ; rs232cmd.c 1765                                       SCPIError = DataOutOfRange;
000EAC 964842rr        6194         MOV.B   ES,#SEG( _SCPIError )
000EB0 9908rrrr        6195         MOV.W   R0,#SOF( _SCPIError )
000EB4 9A080021        6196         MOV.W   [R0],#021H
                       6197 ; rs232cmd.c 1766                                       return;
000EB8 FE0A            6199         BR      _232
                       6200 ; rs232cmd.c 1767                               }
000EBA                 6202 _226:
                       6203 ; rs232cmd.c 1768       
                       6204 ; rs232cmd.c 1769                               OperEnableReg = Reg & 0xEFFF;
000EBA 8C1702          6206         MOV.W   R1,[R7+2]
000EBD 8A07            6207         MOV.W   R0,[R7]
000EBF 9905EFFF        6208         AND.W   R0,#0EFFFH
000EC3 964842rr        6209         MOV.B   ES,#SEG( _OperEnableReg )
000EC7 9918rrrr        6210         MOV.W   R1,#SOF( _OperEnableReg )
000ECB 8A09            6211         MOV.W   [R1],R0
                       6212 ; rs232cmd.c 1770                       }
                       6213 ; rs232cmd.c 1771               }
                       6214 ; rs232cmd.c 1772       }
000ECE                 6216 _232:
000ECE A974            6217         ADDS.W  R7,#04H
000ED0 D680            6219         RET
                       6221 ; rs232cmd.c 1773       
                       6222 ; rs232cmd.c 1774       /************************************************************************
                            ***/
                       6223 ; rs232cmd.c 1775       /* StatusQuestEvent                                                      
                                                                                                                             
                                                     RS232CMD.C */
                       6224 ; rs232cmd.c 1776       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6225 ; rs232cmd.c 1777       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6226 ; rs232cmd.c 1778       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6227 ; rs232cmd.c 1779       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6228 ; rs232cmd.c 1780       /* Function:    Set/read the status questionablen event register         
                                                                    */
                       6229 ; rs232cmd.c 1781       /* Remarks:             Reading the event register clears it             
                                                                                                            */
                       6230 ; rs232cmd.c 1782       /* Returns:             -                                                
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 104

ADDR   CODE            LINE SOURCELINE
                                                                                                                            *
                            /
                       6231 ; rs232cmd.c 1783       /* Updates:             QuestEventReg                                    
                                                                                                                             
                                                                                    */
                       6232 ; rs232cmd.c 1784       /************************************************************************
                            ***/
                       6233 ; rs232cmd.c 1785       void StatusQuestEvent( void)
                       6234 ; rs232cmd.c 1786       {
                       6235         ALIGN   1
                       6237         PUBLIC  _StatusQuestEvent
000ED2                 6238 _StatusQuestEvent:
                       6242 ; rs232cmd.c 1787               if ( CmdExecute && !SCPIError)
000ED2 964842rr        6244         MOV.B   ES,#SEG( _CmdExecute )
000ED6 9908rrrr        6245         MOV.W   R0,#SOF( _CmdExecute )
000EDA 8200            6246         MOV.B   R0L,[R0]
000EDC F333            6247         BEQ     _241
000EDE 964842rr        6248         MOV.B   ES,#SEG( _SCPIError )
000EE2 9908rrrr        6249         MOV.W   R0,#SOF( _SCPIError )
000EE6 8A00            6250         MOV.W   R0,[R0]
000EE8 F22D            6251         BNE     _241
                       6252 ; rs232cmd.c 1788               {
                       6253 ; rs232cmd.c 1789                       if ( ParCnt)
000EEA 964842rr        6255         MOV.B   ES,#SEG( _ParCnt )
000EEE 9908rrrr        6256         MOV.W   R0,#SOF( _ParCnt )
000EF2 8200            6257         MOV.B   R0L,[R0]
000EF4 F306            6258         BEQ     _236
                       6259 ; rs232cmd.c 1790                               SCPIError = ParNotAllowed;
000EF6 964842rr        6261         MOV.B   ES,#SEG( _SCPIError )
000EFA 9908rrrr        6262         MOV.W   R0,#SOF( _SCPIError )
000EFE BA06            6263         MOV.W   [R0],#06H
000F00 D680            6264         RET
000F00 D680            6264         RET
000F02                 6265 _236:
                       6266 ; rs232cmd.c 1791                       else
                       6267 ; rs232cmd.c 1792                       {
                       6268 ; rs232cmd.c 1793                               if ( CmdRequest)
000F02 964842rr        6270         MOV.B   ES,#SEG( _CmdRequest )
000F06 9908rrrr        6271         MOV.W   R0,#SOF( _CmdRequest )
000F0A 8200            6272         MOV.B   R0L,[R0]
000F0C F316            6273         BEQ     _237
                       6274 ; rs232cmd.c 1794                               {
                       6275 ; rs232cmd.c 1795                                       rs232printf( 12, "%d\n", QuestEventReg);
000F0E 9908000C        6277         MOV.W   R0,#0CH
000F12 964842rr        6278         MOV.B   ES,#SEG( _QuestEventReg )
000F16 9918rrrr        6279         MOV.W   R1,#SOF( _QuestEventReg )
000F1A 8A11            6280         MOV.W   R1,[R1]
000F1C 0F02            6281         PUSH.W  R1
000F1E 9938rrrr        6283         MOV.W   R3,#SEG( _9 )
000F22 9928rrrr        6284         MOV.W   R2,#SOF( _9 )
000F26 0F0C            6285         PUSH.W  R2, R3
                       6287         CALL    _rs232printf
000F28 C4rrrrrr       +6287 ;       FCALL   _rs232printf
000F2C A976            6288         ADDS.W  R7,#06H
                       6290 ; rs232cmd.c 1796       
                       6291 ; rs232cmd.c 1797                                       QuestEventReg = 0;
000F2E 964842rr        6293         MOV.B   ES,#SEG( _QuestEventReg )
000F32 9908rrrr        6294         MOV.W   R0,#SOF( _QuestEventReg )
000F36 BA00            6295         MOV.W   [R0],#00H
                       6296 ; rs232cmd.c 1798                               }
000F38 D680            6298         RET
000F38 D680            6298         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 105

ADDR   CODE            LINE SOURCELINE
000F3A                 6299 _237:
                       6300 ; rs232cmd.c 1799                               else
                       6301 ; rs232cmd.c 1800                                       SCPIError = SyntaxErr;
000F3A 964842rr        6303         MOV.B   ES,#SEG( _SCPIError )
000F3E 9908rrrr        6304         MOV.W   R0,#SOF( _SCPIError )
000F42 BA03            6305         MOV.W   [R0],#03H
                       6306 ; rs232cmd.c 1801                       }
                       6307 ; rs232cmd.c 1802               }
000F44                 6309 _241:
                       6310 ; rs232cmd.c 1803       }
000F44 D680            6312         RET
                       6314 ; rs232cmd.c 1804       
                       6315 ; rs232cmd.c 1805       /************************************************************************
                            **/
                       6316 ; rs232cmd.c 1806       /* StatusQuestCondition                                                  
                                                                                                                             
                                     RS232CMD.C */
                       6317 ; rs232cmd.c 1807       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6318 ; rs232cmd.c 1808       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6319 ; rs232cmd.c 1809       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6320 ; rs232cmd.c 1810       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6321 ; rs232cmd.c 1811       /* Function:    Read the status operation condition register             
                                                                            */
                       6322 ; rs232cmd.c 1812       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                    */
                       6323 ; rs232cmd.c 1813       /* Returns:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6324 ; rs232cmd.c 1814       /* Updates:             -                                                
                                                                                                                             
                                                                                                                            *
                            /
                       6325 ; rs232cmd.c 1815       /************************************************************************
                            **/
                       6326 ; rs232cmd.c 1816       void StatusQuestCondition( void)
                       6327 ; rs232cmd.c 1817       {
                       6328         ALIGN   1
                       6330         PUBLIC  _StatusQuestCondition
000F46                 6331 _StatusQuestCondition:
                       6335 ; rs232cmd.c 1818               if ( CmdExecute && !SCPIError)
000F46 964842rr        6337         MOV.B   ES,#SEG( _CmdExecute )
000F4A 9908rrrr        6338         MOV.W   R0,#SOF( _CmdExecute )
000F4E 8200            6339         MOV.B   R0L,[R0]
000F50 F32E            6340         BEQ     _247
000F52 964842rr        6341         MOV.B   ES,#SEG( _SCPIError )
000F56 9908rrrr        6342         MOV.W   R0,#SOF( _SCPIError )
000F5A 8A00            6343         MOV.W   R0,[R0]
000F5C F228            6344         BNE     _247
                       6345 ; rs232cmd.c 1819               {
                       6346 ; rs232cmd.c 1820                       if ( ParCnt)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 106

ADDR   CODE            LINE SOURCELINE
000F5E 964842rr        6348         MOV.B   ES,#SEG( _ParCnt )
000F62 9908rrrr        6349         MOV.W   R0,#SOF( _ParCnt )
000F66 8200            6350         MOV.B   R0L,[R0]
000F68 F306            6351         BEQ     _242
                       6352 ; rs232cmd.c 1821                               SCPIError = ParNotAllowed;
000F6A 964842rr        6354         MOV.B   ES,#SEG( _SCPIError )
000F6E 9908rrrr        6355         MOV.W   R0,#SOF( _SCPIError )
000F72 BA06            6356         MOV.W   [R0],#06H
000F74 D680            6357         RET
000F74 D680            6357         RET
000F76                 6358 _242:
                       6359 ; rs232cmd.c 1822                       else
                       6360 ; rs232cmd.c 1823                       {
                       6361 ; rs232cmd.c 1824                               if ( CmdRequest)
000F76 964842rr        6363         MOV.B   ES,#SEG( _CmdRequest )
000F7A 9908rrrr        6364         MOV.W   R0,#SOF( _CmdRequest )
000F7E 8200            6365         MOV.B   R0L,[R0]
000F80 F311            6366         BEQ     _243
                       6367 ; rs232cmd.c 1825                               rs232printf( 12, "%d\n", QuestConditionReg);
000F82 9908000C        6369         MOV.W   R0,#0CH
000F86 964842rr        6370         MOV.B   ES,#SEG( _QuestConditionReg )
000F8A 9918rrrr        6371         MOV.W   R1,#SOF( _QuestConditionReg )
000F8E 8A11            6372         MOV.W   R1,[R1]
000F90 0F02            6373         PUSH.W  R1
000F92 9938rrrr        6375         MOV.W   R3,#SEG( _9 )
000F96 9928rrrr        6376         MOV.W   R2,#SOF( _9 )
000F9A 0F0C            6377         PUSH.W  R2, R3
                       6379         CALL    _rs232printf
000F9C C4rrrrrr       +6379 ;       FCALL   _rs232printf
000FA0 A976            6380         ADDS.W  R7,#06H
000FA2 D680            6382         RET
000FA2 D680            6382         RET
000FA4                 6383 _243:
                       6384 ; rs232cmd.c 1826                               else
                       6385 ; rs232cmd.c 1827                                       SCPIError = SyntaxErr;
000FA4 964842rr        6387         MOV.B   ES,#SEG( _SCPIError )
000FA8 9908rrrr        6388         MOV.W   R0,#SOF( _SCPIError )
000FAC BA03            6389         MOV.W   [R0],#03H
                       6390 ; rs232cmd.c 1828                       }
                       6391 ; rs232cmd.c 1829               }
000FAE                 6393 _247:
                       6394 ; rs232cmd.c 1830       }
000FAE D680            6396         RET
                       6398 ; rs232cmd.c 1831       
                       6399 ; rs232cmd.c 1832       /************************************************************************
                            **/
                       6400 ; rs232cmd.c 1833       /* StatusQuestEnable                                                     
                                                                                                                             
                                             RS232CMD.C */
                       6401 ; rs232cmd.c 1834       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6402 ; rs232cmd.c 1835       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                    */
                       6403 ; rs232cmd.c 1836       /* Revised:             000413                                           
                                                                                                                             
                                                                                    */
                       6404 ; rs232cmd.c 1837       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 107

ADDR   CODE            LINE SOURCELINE
                       6405 ; rs232cmd.c 1838       /* Function:    Set/read the status questionable enable register         
                                                                    */
                       6406 ; rs232cmd.c 1839       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6407 ; rs232cmd.c 1840       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6408 ; rs232cmd.c 1841       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6409 ; rs232cmd.c 1842       /************************************************************************
                            **/
                       6410 ; rs232cmd.c 1843       void StatusQuestEnable( void)
                       6411 ; rs232cmd.c 1844       {
                       6412         ALIGN   1
                       6414         PUBLIC  _StatusQuestEnable
000FB0                 6415 _StatusQuestEnable:
000FB0 A97C            6419         ADDS.W  R7,#0CH
                       6422 ; rs232cmd.c 1845               long    Reg;
                       6423 ; rs232cmd.c 1846       
                       6424 ; rs232cmd.c 1847               if ( CmdExecute && !SCPIError)
000FB2 964842rr        6426         MOV.B   ES,#SEG( _CmdExecute )
000FB6 9908rrrr        6427         MOV.W   R0,#SOF( _CmdExecute )
000FBA 8200            6428         MOV.B   R0L,[R0]
000FBC F364            6429         BEQ     _258
000FBE 964842rr        6430         MOV.B   ES,#SEG( _SCPIError )
000FC2 9908rrrr        6431         MOV.W   R0,#SOF( _SCPIError )
000FC6 8A00            6432         MOV.W   R0,[R0]
000FC8 F25E            6433         BNE     _258
                       6434 ; rs232cmd.c 1848               {
                       6435 ; rs232cmd.c 1849                       if ( CmdRequest)
000FCA 964842rr        6437         MOV.B   ES,#SEG( _CmdRequest )
000FCE 9908rrrr        6438         MOV.W   R0,#SOF( _CmdRequest )
000FD2 8200            6439         MOV.B   R0L,[R0]
000FD4 F31D            6440         BEQ     _249
                       6441 ; rs232cmd.c 1850                       {
                       6442 ; rs232cmd.c 1851                               if ( ParCnt)
000FD6 964842rr        6444         MOV.B   ES,#SEG( _ParCnt )
000FDA 9908rrrr        6445         MOV.W   R0,#SOF( _ParCnt )
000FDE 8200            6446         MOV.B   R0L,[R0]
000FE0 F306            6447         BEQ     _248
                       6448 ; rs232cmd.c 1852                                       SCPIError = ParNotAllowed;
000FE2 964842rr        6450         MOV.B   ES,#SEG( _SCPIError )
000FE6 9908rrrr        6451         MOV.W   R0,#SOF( _SCPIError )
000FEA BA06            6452         MOV.W   [R0],#06H
000FEC FE4C            6453         BR      _258
000FEC FE4C            6453         BR      _258
000FEE                 6454 _248:
                       6455 ; rs232cmd.c 1853                               else
                       6456 ; rs232cmd.c 1854                                       rs232printf( 12, "%d\n", QuestEnableReg);
                            
000FEE 9908000C        6458         MOV.W   R0,#0CH
000FF2 964842rr        6459         MOV.B   ES,#SEG( _QuestEnableReg )
000FF6 9918rrrr        6460         MOV.W   R1,#SOF( _QuestEnableReg )
000FFA 8A11            6461         MOV.W   R1,[R1]
000FFC 0F02            6462         PUSH.W  R1
000FFE 9938rrrr        6464         MOV.W   R3,#SEG( _9 )
001002 9928rrrr        6465         MOV.W   R2,#SOF( _9 )
001006 0F0C            6466         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 108

ADDR   CODE            LINE SOURCELINE
                       6468         CALL    _rs232printf
001008 C4rrrrrr       +6468 ;       FCALL   _rs232printf
00100C A976            6469         ADDS.W  R7,#06H
                       6471 ; rs232cmd.c 1855                       }
00100E FE3B            6473         BR      _258
00100E FE3B            6473         BR      _258
001010                 6474 _249:
                       6475 ; rs232cmd.c 1856                       else
                       6476 ; rs232cmd.c 1857                       {
                       6477 ; rs232cmd.c 1858                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
001010 964842rr        6479         MOV.B   ES,#SEG( _ParCnt )
001014 9908rrrr        6480         MOV.W   R0,#SOF( _ParCnt )
001018 8200            6481         MOV.B   R0L,[R0]
00101A 910401          6482         CMP.B   R0L,#01H
00101D F215            6483         BNE     _250
00101F 9918rrrr        6484         MOV.W   R1,#SEG( _Cmd )
001023 9908rrrr        6485         MOV.W   R0,#SOF( _Cmd )
001027 9168rr          6486         MOV.B   R3L,#SEG( __lc_bs )
00102A 7177            6487         XOR.B   R3H,R3H
00102C 8927            6488         MOV.W   R2,R7
00102E 0F0C            6489         PUSH.W  R2, R3
001030 9938rrrr        6491         MOV.W   R3,#SEG( _221 )
001034 9928rrrr        6492         MOV.W   R2,#SOF( _221 )
001038 0F0C            6493         PUSH.W  R2, R3
                       6495         CALL    _sscanf
00103A C4rrrrrr       +6495 ;       FCALL   _sscanf
00103E 99700008        6496         ADD.W   R7,#08H
001042 99040001        6498         CMP.W   R0,#01H
001046 F306            6499         BEQ     _251
001046 F306            6499         BEQ     _251
001048                 6500 _250:
                       6501 ; rs232cmd.c 1859                               {
                       6502 ; rs232cmd.c 1860                                       SCPIError = SyntaxErr;  
001048 964842rr        6504         MOV.B   ES,#SEG( _SCPIError )
00104C 9908rrrr        6505         MOV.W   R0,#SOF( _SCPIError )
001050 BA03            6506         MOV.W   [R0],#03H
                       6507 ; rs232cmd.c 1861                                       return;
001052 FE19            6509         BR      _258
                       6510 ; rs232cmd.c 1862                               }
001054                 6512 _251:
                       6513 ; rs232cmd.c 1863       
                       6514 ; rs232cmd.c 1864                               if ( Reg > 65535)
001054 9C74020000      6516         CMP.W   [R7+2],#00H
001059 FB0C            6517         BLT     _252
00105B FC04            6518         BGT     _261
00105D 9A74FFFF        6519         CMP.W   [R7],#0FFFFH
001061 F908            6520         BL      _252
001061 F90800          6520         BL      _252
001064                 6521 _261:
                       6522 ; rs232cmd.c 1865                               {
                       6523 ; rs232cmd.c 1866                                       SCPIError = DataOutOfRange;
001064 964842rr        6525         MOV.B   ES,#SEG( _SCPIError )
001068 9908rrrr        6526         MOV.W   R0,#SOF( _SCPIError )
00106C 9A080021        6527         MOV.W   [R0],#021H
                       6528 ; rs232cmd.c 1867                                       return;
001070 FE0A            6530         BR      _258
                       6531 ; rs232cmd.c 1868                               }
001072                 6533 _252:
                       6534 ; rs232cmd.c 1869       
                       6535 ; rs232cmd.c 1870                               QuestEnableReg = Reg & 0xEFFF;
001072 8C1702          6537         MOV.W   R1,[R7+2]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 109

ADDR   CODE            LINE SOURCELINE
001075 8A07            6538         MOV.W   R0,[R7]
001077 9905EFFF        6539         AND.W   R0,#0EFFFH
00107B 964842rr        6540         MOV.B   ES,#SEG( _QuestEnableReg )
00107F 9918rrrr        6541         MOV.W   R1,#SOF( _QuestEnableReg )
001083 8A09            6542         MOV.W   [R1],R0
                       6543 ; rs232cmd.c 1871                       }
                       6544 ; rs232cmd.c 1872               }
                       6545 ; rs232cmd.c 1873       }
001086                 6547 _258:
001086 A974            6548         ADDS.W  R7,#04H
001088 D680            6550         RET
                       6552 ; rs232cmd.c 1874       
                       6553 ; rs232cmd.c 1875       /************************************************************************
                            **/
                       6554 ; rs232cmd.c 1876       /* StatusPreset                                                          
                                                                                                                             
                                                             RS232CMD.C */
                       6555 ; rs232cmd.c 1877       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6556 ; rs232cmd.c 1878       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                       6557 ; rs232cmd.c 1879       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                       6558 ; rs232cmd.c 1880       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6559 ; rs232cmd.c 1881       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       6560 ; rs232cmd.c 1882       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6561 ; rs232cmd.c 1883       /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6562 ; rs232cmd.c 1884       /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       6563 ; rs232cmd.c 1885       /************************************************************************
                            **/
                       6564 ; rs232cmd.c 1886       void StatusPreset( void)
                       6565 ; rs232cmd.c 1887       {
                       6566         ALIGN   1
                       6568         PUBLIC  _StatusPreset
00108A                 6569 _StatusPreset:
                       6573 ; rs232cmd.c 1888               if ( CmdExecute && !SCPIError)
00108A 964842rr        6575         MOV.B   ES,#SEG( _CmdExecute )
00108E 9908rrrr        6576         MOV.W   R0,#SOF( _CmdExecute )
001092 8200            6577         MOV.B   R0L,[R0]
001094 F333            6578         BEQ     _270
001096 964842rr        6579         MOV.B   ES,#SEG( _SCPIError )
00109A 9908rrrr        6580         MOV.W   R0,#SOF( _SCPIError )
00109E 8A00            6581         MOV.W   R0,[R0]
0010A0 F22D            6582         BNE     _270
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 110

ADDR   CODE            LINE SOURCELINE
                       6583 ; rs232cmd.c 1889               {
                       6584 ; rs232cmd.c 1890                       if ( CmdRequest)
0010A2 964842rr        6586         MOV.B   ES,#SEG( _CmdRequest )
0010A6 9908rrrr        6587         MOV.W   R0,#SOF( _CmdRequest )
0010AA 8200            6588         MOV.B   R0L,[R0]
0010AC F322            6589         BEQ     _266
                       6590 ; rs232cmd.c 1891                       {
                       6591 ; rs232cmd.c 1892                               if ( ParCnt)
0010AE 964842rr        6593         MOV.B   ES,#SEG( _ParCnt )
0010B2 9908rrrr        6594         MOV.W   R0,#SOF( _ParCnt )
0010B6 8200            6595         MOV.B   R0L,[R0]
0010B8 F306            6596         BEQ     _263
                       6597 ; rs232cmd.c 1893                                       SCPIError = SyntaxErr;
0010BA 964842rr        6599         MOV.B   ES,#SEG( _SCPIError )
0010BE 9908rrrr        6600         MOV.W   R0,#SOF( _SCPIError )
0010C2 BA03            6601         MOV.W   [R0],#03H
0010C4 D680            6602         RET
0010C4 D680            6602         RET
0010C6                 6603 _263:
                       6604 ; rs232cmd.c 1894                               else
                       6605 ; rs232cmd.c 1895                               {
                       6606 ; rs232cmd.c 1896                                       if ( Settings.ActivePreset)
0010C6 964842rr        6608         MOV.B   ES,#SEG( _Settings )
0010CA 9908rrrr        6609         MOV.W   R0,#SOF( _Settings )
0010CE 8A00            6610         MOV.W   R0,[R0]
0010D0 F305            6611         BEQ     _264
                       6612 ; rs232cmd.c 1897                                               rs232putchar( '0' + Settings.Acti
                            vePreset);
0010D2 910030          6614         ADD.B   R0L,#030H
                       6615         CALL    _rs232putchar
0010D5 C4rrrrrr       +6615 ;       FCALL   _rs232putchar
0010D9 FE07            6616         BR      _265
0010D9 FE0700          6616         BR      _265
0010DC                 6617 _264:
                       6618 ; rs232cmd.c 1898                                       else
                       6619 ; rs232cmd.c 1899                                               rs232puts( "OFF");
0010DC 9918rrrr        6621         MOV.W   R1,#SEG( _262 )
0010E0 9908rrrr        6622         MOV.W   R0,#SOF( _262 )
                       6623         CALL    _rs232puts
0010E4 C4rrrrrr       +6623 ;       FCALL   _rs232puts
0010E4 C4rrrrrr       +6623 ;       FCALL   _rs232puts
0010E8                 6624 _265:
                       6625 ; rs232cmd.c 1900       
                       6626 ; rs232cmd.c 1901                                       rs232putchar( '\n');
0010E8 91080A          6628         MOV.B   R0L,#0AH
                       6629         CALL    _rs232putchar
0010EB C4rrrrrr       +6629 ;       FCALL   _rs232putchar
                       6630 ; rs232cmd.c 1902                               }
                       6631 ; rs232cmd.c 1903                       }
0010EF D680            6633         RET
0010EF D68000          6633         RET
0010F2                 6634 _266:
                       6635 ; rs232cmd.c 1904                       else
                       6636 ; rs232cmd.c 1905                               SCPIError = SyntaxErr;
0010F2 964842rr        6638         MOV.B   ES,#SEG( _SCPIError )
0010F6 9908rrrr        6639         MOV.W   R0,#SOF( _SCPIError )
0010FA BA03            6640         MOV.W   [R0],#03H
                       6641 ; rs232cmd.c 1906               }
0010FC                 6643 _270:
                       6644 ; rs232cmd.c 1907       }
0010FC D680            6646         RET
                       6648 ; rs232cmd.c 1908       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 111

ADDR   CODE            LINE SOURCELINE
                       6649 ; rs232cmd.c 1909       /************************************************************************
                            **/
                       6650 ; rs232cmd.c 1910       /* GenlockGen                                                            
                                                                                                                             
                                                             RS232CMD.C     */
                       6651 ; rs232cmd.c 1911       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6652 ; rs232cmd.c 1912       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       6653 ; rs232cmd.c 1913       /* Revised:             001219                                           
                                                                                                                             
                                                                                    */
                       6654 ; rs232cmd.c 1914       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6655 ; rs232cmd.c 1915       /* Function:    Return the Genlock Configuration.                        
                                                                                                                    */
                       6656 ; rs232cmd.c 1916       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                    */
                       6657 ; rs232cmd.c 1917       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       6658 ; rs232cmd.c 1918       /* Updates:       --                                                     
                                                                                                                             
                                                                                                            */
                       6659 ; rs232cmd.c 1919       /************************************************************************
                            **/
                       6660 ; rs232cmd.c 1920       void GenlockGen( void)
                       6661 ; rs232cmd.c 1921       {
                       6662         ALIGN   1
                       6664         PUBLIC  _GenlockGen
0010FE                 6665 _GenlockGen:
0010FE 0F30            6669         PUSH.W  R4, R5
                       6673 ; rs232cmd.c 1922               char code *str;
                       6674 ; rs232cmd.c 1923       
                       6675 ; rs232cmd.c 1924               if ( CmdExecute && !SCPIError)
001100 964842rr        6677         MOV.B   ES,#SEG( _CmdExecute )
001104 9908rrrr        6678         MOV.W   R0,#SOF( _CmdExecute )
001108 8200            6679         MOV.B   R0L,[R0]
                       6680         BEQ     _282
00110A F202           +6680 ;       BNE     _LG_304
00110C D5008C         +6680 ;       JMP.L   _282
00110C D5008C00       +6680 ;       JMP.L   _282
001110                +6680 _LG_304:
001110 964842rr        6681         MOV.B   ES,#SEG( _SCPIError )
001114 9908rrrr        6682         MOV.W   R0,#SOF( _SCPIError )
001118 8A00            6683         MOV.W   R0,[R0]
                       6684         BNE     _282
00111A F302           +6684 ;       BEQ     _LG_306
00111C D50084         +6684 ;       JMP.L   _282
00111C D5008400       +6684 ;       JMP.L   _282
001120                +6684 _LG_306:
                       6685 ; rs232cmd.c 1925               {
                       6686 ; rs232cmd.c 1926                       if ( !CmdRequest)
001120 964842rr        6688         MOV.B   ES,#SEG( _CmdRequest )
001124 9908rrrr        6689         MOV.W   R0,#SOF( _CmdRequest )
001128 8200            6690         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 112

ADDR   CODE            LINE SOURCELINE
00112A F206            6691         BNE     _271
                       6692 ; rs232cmd.c 1927                                       SCPIError = SyntaxErr;
00112C 964842rr        6694         MOV.B   ES,#SEG( _SCPIError )
001130 9908rrrr        6695         MOV.W   R0,#SOF( _SCPIError )
001134 BA03            6696         MOV.W   [R0],#03H
001136 FE77            6697         BR      _282
001136 FE77            6697         BR      _282
001138                 6698 _271:
                       6699 ; rs232cmd.c 1928                       else
                       6700 ; rs232cmd.c 1929                       {
                       6701 ; rs232cmd.c 1930                               if ( ParCnt)
001138 964842rr        6703         MOV.B   ES,#SEG( _ParCnt )
00113C 9908rrrr        6704         MOV.W   R0,#SOF( _ParCnt )
001140 8200            6705         MOV.B   R0L,[R0]
001142 F306            6706         BEQ     _272
                       6707 ; rs232cmd.c 1931                                       SCPIError = ParNotAllowed;
001144 964842rr        6709         MOV.B   ES,#SEG( _SCPIError )
001148 9908rrrr        6710         MOV.W   R0,#SOF( _SCPIError )
00114C BA06            6711         MOV.W   [R0],#06H
00114E FE6B            6712         BR      _282
00114E FE6B            6712         BR      _282
001150                 6713 _272:
                       6714 ; rs232cmd.c 1932                               else
                       6715 ; rs232cmd.c 1933                               {
                       6716 ; rs232cmd.c 1934                   if ( GenlockStatus)
001150 964842rr        6718         MOV.B   ES,#SEG( _GenlockStatus )
001154 9908rrrr        6719         MOV.W   R0,#SOF( _GenlockStatus )
001158 8200            6720         MOV.B   R0L,[R0]
00115A F305            6721         BEQ     _273
                       6722 ; rs232cmd.c 1935                                       str = GENLOCKEDParTxt;
00115C 9958rrrr        6724         MOV.W   R5,#SEG( _GENLOCKEDParTxt )
001160 9948rrrr        6725         MOV.W   R4,#SOF( _GENLOCKEDParTxt )
001164 FE04            6727         BR      _274
001164 FE04            6727         BR      _274
001166                 6728 _273:
                       6729 ; rs232cmd.c 1936                   else
                       6730 ; rs232cmd.c 1937                                       str = UNLOCKEDParTxt;
001166 9958rrrr        6732         MOV.W   R5,#SEG( _UNLOCKEDParTxt )
00116A 9948rrrr        6733         MOV.W   R4,#SOF( _UNLOCKEDParTxt )
00116E                 6736 _274:
                       6737 ; rs232cmd.c 1938       
                       6738 ; rs232cmd.c 1939                               while ( *str)
00116E 8915            6740         MOV.W   R1,R5
001170 8904            6741         MOV.W   R0,R4
001172 862C43          6742         MOV.B   CS,R1L
001175 8020            6743         MOVC.B  R1L,[R0+]
001177 F312            6744         BEQ     _276
001177 F31200          6744         BEQ     _276
00117A                 6745 _275:
                       6746 ; rs232cmd.c 1940                               rs232putchar( *str++);
00117A 8915            6748         MOV.W   R1,R5
00117C 8904            6749         MOV.W   R0,R4
00117E 862C43          6750         MOV.B   CS,R1L
001181 8020            6751         MOVC.B  R1L,[R0+]
001183 8102            6752         MOV.B   R0L,R1L
                       6753         CALL    _rs232putchar
001185 C4rrrrrr       +6753 ;       FCALL   _rs232putchar
001189 99400001        6754         ADD.W   R4,#01H
00118D 99510000        6755         ADDC.W  R5,#00H
001191 8915            6759         MOV.W   R1,R5
001193 8904            6760         MOV.W   R0,R4
001195 862C43          6761         MOV.B   CS,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 113

ADDR   CODE            LINE SOURCELINE
001198 8020            6762         MOVC.B  R1L,[R0+]
00119A F2EF            6763         BNE     _275
00119C                 6765 _276:
                       6766 ; rs232cmd.c 1941       
                       6767 ; rs232cmd.c 1942                               rs232putchar(',');
00119C 91082C          6769         MOV.B   R0L,#02CH
                       6770         CALL    _rs232putchar
00119F C4rrrrrr       +6770 ;       FCALL   _rs232putchar
                       6771 ; rs232cmd.c 1943       
                       6772 ; rs232cmd.c 1944                                       str = GenlockSystemPar[GenlockSetup.Syste
                            m].LongName;
0011A3 964842rr        6774         MOV.B   ES,#SEG( _GenlockSetup )
0011A7 9908rrrr        6775         MOV.W   R0,#SOF( _GenlockSetup )
0011AB 8200            6776         MOV.B   R0L,[R0]
0011AD E8000C          6777         MULU.B  R0L,#0CH
0011B0 8920            6778         MOV.W   R2,R0
0011B2 B930            6779         MOVS.W  R3,#00H
0011B4 9918rrrr        6780         MOV.W   R1,#SEG( _GenlockSystemPar )
0011B8 9908rrrr        6781         MOV.W   R0,#SOF( _GenlockSystemPar )
0011BC 0902            6782         ADD.W   R0,R2
0011BE 1913            6783         ADDC.W  R1,R3
0011C0 862C43          6784         MOV.B   CS,R1L
0011C3 8820            6785         MOVC.W  R2,[R0+]
0011C5 99040000        6786         CMP.W   R0,#00H
0011C9 F202            6787         BNE     _283
0011CB A64143          6788         ADDS.B  CS,#01H
0011CB A64143          6788         ADDS.B  CS,#01H
0011CE                 6789 _283:
0011CE 8830            6790         MOVC.W  R3,[R0+]
0011D0 8953            6791         MOV.W   R5,R3
0011D2 8942            6792         MOV.W   R4,R2
                       6795 ; rs232cmd.c 1945       
                       6796 ; rs232cmd.c 1946                                       while ( *str)
0011D4 866C43          6798         MOV.B   CS,R3L
0011D7 8062            6799         MOVC.B  R3L,[R2+]
0011D9 F312            6800         BEQ     _278
0011D9 F31200          6800         BEQ     _278
0011DC                 6801 _277:
                       6802 ; rs232cmd.c 1947                                               rs232putchar( *str++);
0011DC 8915            6804         MOV.W   R1,R5
0011DE 8904            6805         MOV.W   R0,R4
0011E0 862C43          6806         MOV.B   CS,R1L
0011E3 8020            6807         MOVC.B  R1L,[R0+]
0011E5 8102            6808         MOV.B   R0L,R1L
                       6809         CALL    _rs232putchar
0011E7 C4rrrrrr       +6809 ;       FCALL   _rs232putchar
0011EB 99400001        6810         ADD.W   R4,#01H
0011EF 99510000        6811         ADDC.W  R5,#00H
0011F3 8915            6815         MOV.W   R1,R5
0011F5 8904            6816         MOV.W   R0,R4
0011F7 862C43          6817         MOV.B   CS,R1L
0011FA 8020            6818         MOVC.B  R1L,[R0+]
0011FC F2EF            6819         BNE     _277
0011FE                 6821 _278:
                       6822 ; rs232cmd.c 1948       
                       6823 ; rs232cmd.c 1949                                       rs232putchar(',');
0011FE 91082C          6825         MOV.B   R0L,#02CH
                       6826         CALL    _rs232putchar
001201 C4rrrrrr       +6826 ;       FCALL   _rs232putchar
                       6827 ; rs232cmd.c 1950       
                       6828 ; rs232cmd.c 1951                                       PrintSamplesToFLT( GenlockSetup.System, G
                            enlockSetup.Delay);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 114

ADDR   CODE            LINE SOURCELINE
001205 964842rr        6830         MOV.B   ES,#SEG( _GenlockSetup )
001209 9908rrrr        6831         MOV.W   R0,#SOF( _GenlockSetup )
00120D 8200            6832         MOV.B   R0L,[R0]
00120F 964842rr        6833         MOV.B   ES,#SEG( _GenlockSetup+2 )
001213 9938rrrr        6834         MOV.W   R3,#SOF( _GenlockSetup+2 )
001217 8B23            6835         MOV.W   R2,[R3+]
001219 8A33            6836         MOV.W   R3,[R3]
00121B C52976          6837         CALL    _PrintSamplesToFLT
                       6838 ; rs232cmd.c 1952       
                       6839 ; rs232cmd.c 1953                                       rs232putchar ( '\n');
00121E 91080A          6841         MOV.B   R0L,#0AH
                       6842         CALL    _rs232putchar
001221 C4rrrrrr       +6842 ;       FCALL   _rs232putchar
                       6843 ; rs232cmd.c 1954                               }
                       6844 ; rs232cmd.c 1955                       }
                       6845 ; rs232cmd.c 1956               }
001226                 6847 _282:
                       6848 ; rs232cmd.c 1957       }
001226 2F30            6850         POP.W   R4, R5
001228 D680            6852         RET
                       6855 ; rs232cmd.c 1958       
                       6856 ; rs232cmd.c 1959       /************************************************************************
                            **/
                       6857 ; rs232cmd.c 1960       /* GenlockGenSystem                                                      
                                                                                                                             
                                             RS232CMD.C     */
                       6858 ; rs232cmd.c 1961       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6859 ; rs232cmd.c 1962       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       6860 ; rs232cmd.c 1963       /* Revised:             000525                                           
                                                                                                                             
                                                                                    */
                       6861 ; rs232cmd.c 1964       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       6862 ; rs232cmd.c 1965       /* Function:    Handle the genlock system command                        
                                                                                                                    */
                       6863 ; rs232cmd.c 1966       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       6864 ; rs232cmd.c 1967       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       6865 ; rs232cmd.c 1968       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       6866 ; rs232cmd.c 1969       /************************************************************************
                            **/
                       6867 ; rs232cmd.c 1970       void GenlockGenSystem( void)
                       6868 ; rs232cmd.c 1971       {
                       6869         ALIGN   1
                       6871         PUBLIC  _GenlockGenSystem
00122A                 6872 _GenlockGenSystem:
00122A 0F30            6876         PUSH.W  R4, R5
                       6882 ; rs232cmd.c 1972               int system;
                       6883 ; rs232cmd.c 1973               char code *str;
                       6884 ; rs232cmd.c 1974       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 115

ADDR   CODE            LINE SOURCELINE
                       6885 ; rs232cmd.c 1975               if ( CmdExecute && !SCPIError)
00122C 964842rr        6887         MOV.B   ES,#SEG( _CmdExecute )
001230 9908rrrr        6888         MOV.W   R0,#SOF( _CmdExecute )
001234 8200            6889         MOV.B   R0L,[R0]
001236 F36F            6890         BEQ     _295
001238 964842rr        6891         MOV.B   ES,#SEG( _SCPIError )
00123C 9908rrrr        6892         MOV.W   R0,#SOF( _SCPIError )
001240 8A00            6893         MOV.W   R0,[R0]
001242 F269            6894         BNE     _295
                       6895 ; rs232cmd.c 1976               {
                       6896 ; rs232cmd.c 1977                       if ( CmdRequest)
001244 964842rr        6898         MOV.B   ES,#SEG( _CmdRequest )
001248 9908rrrr        6899         MOV.W   R0,#SOF( _CmdRequest )
00124C 8200            6900         MOV.B   R0L,[R0]
00124E F33F            6901         BEQ     _287
                       6902 ; rs232cmd.c 1978                       {
                       6903 ; rs232cmd.c 1979                               if ( ParCnt)
001250 964842rr        6905         MOV.B   ES,#SEG( _ParCnt )
001254 9908rrrr        6906         MOV.W   R0,#SOF( _ParCnt )
001258 8200            6907         MOV.B   R0L,[R0]
00125A F306            6908         BEQ     _284
                       6909 ; rs232cmd.c 1980                                       SCPIError = ParNotAllowed;
00125C 964842rr        6911         MOV.B   ES,#SEG( _SCPIError )
001260 9908rrrr        6912         MOV.W   R0,#SOF( _SCPIError )
001264 BA06            6913         MOV.W   [R0],#06H
001266 FE57            6914         BR      _295
001266 FE57            6914         BR      _295
001268                 6915 _284:
                       6916 ; rs232cmd.c 1981                               else
                       6917 ; rs232cmd.c 1982                               {
                       6918 ; rs232cmd.c 1983                                       str = GenlockSystemPar[GenlockSetup.Syste
                            m].LongName;
001268 964842rr        6920         MOV.B   ES,#SEG( _GenlockSetup )
00126C 9908rrrr        6921         MOV.W   R0,#SOF( _GenlockSetup )
001270 8200            6922         MOV.B   R0L,[R0]
001272 E8000C          6923         MULU.B  R0L,#0CH
001275 8920            6924         MOV.W   R2,R0
001277 B930            6925         MOVS.W  R3,#00H
001279 9918rrrr        6926         MOV.W   R1,#SEG( _GenlockSystemPar )
00127D 9908rrrr        6927         MOV.W   R0,#SOF( _GenlockSystemPar )
001281 0902            6928         ADD.W   R0,R2
001283 1913            6929         ADDC.W  R1,R3
001285 862C43          6930         MOV.B   CS,R1L
001288 8820            6931         MOVC.W  R2,[R0+]
00128A 99040000        6932         CMP.W   R0,#00H
00128E F202            6933         BNE     _296
001290 A64143          6934         ADDS.B  CS,#01H
001290 A6414300        6934         ADDS.B  CS,#01H
001294                 6935 _296:
001294 8830            6936         MOVC.W  R3,[R0+]
001296 8953            6937         MOV.W   R5,R3
001298 8942            6938         MOV.W   R4,R2
                       6940 ; rs232cmd.c 1984       
                       6941 ; rs232cmd.c 1985                                       while ( *str)
00129A 866C43          6943         MOV.B   CS,R3L
00129D 8062            6944         MOVC.B  R3L,[R2+]
00129F F312            6945         BEQ     _286
00129F F31200          6945         BEQ     _286
0012A2                 6946 _285:
                       6947 ; rs232cmd.c 1986                                               rs232putchar( *str++);
0012A2 8915            6949         MOV.W   R1,R5
0012A4 8904            6950         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 116

ADDR   CODE            LINE SOURCELINE
0012A6 862C43          6951         MOV.B   CS,R1L
0012A9 8020            6952         MOVC.B  R1L,[R0+]
0012AB 8102            6953         MOV.B   R0L,R1L
                       6954         CALL    _rs232putchar
0012AD C4rrrrrr       +6954 ;       FCALL   _rs232putchar
0012B1 99400001        6955         ADD.W   R4,#01H
0012B5 99510000        6956         ADDC.W  R5,#00H
0012B9 8915            6960         MOV.W   R1,R5
0012BB 8904            6961         MOV.W   R0,R4
0012BD 862C43          6962         MOV.B   CS,R1L
0012C0 8020            6963         MOVC.B  R1L,[R0+]
0012C2 F2EF            6964         BNE     _285
0012C4                 6966 _286:
                       6967 ; rs232cmd.c 1987       
                       6968 ; rs232cmd.c 1988                                       rs232putchar('\n');
0012C4 91080A          6970         MOV.B   R0L,#0AH
                       6971         CALL    _rs232putchar
0012C7 C4rrrrrr       +6971 ;       FCALL   _rs232putchar
                       6972 ; rs232cmd.c 1989                               }
                       6973 ; rs232cmd.c 1990                       }
0012CB FE25            6975         BR      _295
0012CB FE2500          6975         BR      _295
0012CE                 6976 _287:
                       6977 ; rs232cmd.c 1991                       else
                       6978 ; rs232cmd.c 1992                       {
                       6979 ; rs232cmd.c 1993                               if ( ParCnt != 1)
0012CE 964842rr        6981         MOV.B   ES,#SEG( _ParCnt )
0012D2 9908rrrr        6982         MOV.W   R0,#SOF( _ParCnt )
0012D6 8200            6983         MOV.B   R0L,[R0]
0012D8 910401          6984         CMP.B   R0L,#01H
0012DB F307            6985         BEQ     _288
                       6986 ; rs232cmd.c 1994                                       SCPIError = SyntaxErr;
0012DD 964842rr        6988         MOV.B   ES,#SEG( _SCPIError )
0012E1 9908rrrr        6989         MOV.W   R0,#SOF( _SCPIError )
0012E5 BA03            6990         MOV.W   [R0],#03H
0012E7 FE17            6991         BR      _295
0012E7 FE1700          6991         BR      _295
0012EA                 6992 _288:
                       6993 ; rs232cmd.c 1995                               else
                       6994 ; rs232cmd.c 1996                               {
                       6995 ; rs232cmd.c 1997                                       system = FindParameter( Cmd, GenlockSyste
                            mPar);
0012EA 9918rrrr        6997         MOV.W   R1,#SEG( _Cmd )
0012EE 9908rrrr        6998         MOV.W   R0,#SOF( _Cmd )
0012F2 9938rrrr        6999         MOV.W   R3,#SEG( _GenlockSystemPar )
0012F6 9928rrrr        7000         MOV.W   R2,#SOF( _GenlockSystemPar )
0012FA C5267F          7001         CALL    _FindParameter
                       7003 ; rs232cmd.c 1998               
                       7004 ; rs232cmd.c 1999                                       if ( system > -1)
0012FD 9904FFFF        7006         CMP.W   R0,#0FFFFH
001301 FD04            7007         BLE     _289
                       7008 ; rs232cmd.c 2000                                               SetGenlockSystem( system);
                       7010         CALL    _SetGenlockSystem
001303 C4rrrrrr       +7010 ;       FCALL   _SetGenlockSystem
001307 FE07            7012         BR      _295
001307 FE0700          7012         BR      _295
00130A                 7013 _289:
                       7014 ; rs232cmd.c 2001                                       else
                       7015 ; rs232cmd.c 2002                                               SCPIError = DataOutOfRange;
00130A 964842rr        7017         MOV.B   ES,#SEG( _SCPIError )
00130E 9908rrrr        7018         MOV.W   R0,#SOF( _SCPIError )
001312 9A080021        7019         MOV.W   [R0],#021H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 117

ADDR   CODE            LINE SOURCELINE
                       7020 ; rs232cmd.c 2003                               }
                       7021 ; rs232cmd.c 2004                       }
                       7022 ; rs232cmd.c 2005               }
001316                 7024 _295:
                       7025 ; rs232cmd.c 2006       }
001316 2F30            7027         POP.W   R4, R5
001318 D680            7029         RET
                       7032 ; rs232cmd.c 2007       
                       7033 ; rs232cmd.c 2008       /************************************************************************
                            **/
                       7034 ; rs232cmd.c 2009       /* GenlockGenDelay                                                       
                                                                                                                             
                                       RS232CMD.C */
                       7035 ; rs232cmd.c 2010       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7036 ; rs232cmd.c 2011       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7037 ; rs232cmd.c 2012       /* Revised:             000525                                           
                                                                                                                             
                                                                                    */
                       7038 ; rs232cmd.c 2013       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7039 ; rs232cmd.c 2014       /* Function:    Handle the genlock timing command                        
                                                                                                                    */
                       7040 ; rs232cmd.c 2015       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7041 ; rs232cmd.c 2016       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7042 ; rs232cmd.c 2017       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7043 ; rs232cmd.c 2018       /************************************************************************
                            **/
                       7044 ; rs232cmd.c 2019       void GenlockGenDelay( void)
                       7045 ; rs232cmd.c 2020       {
                       7046         ALIGN   1
                       7048         PUBLIC  _GenlockGenDelay
00131A                 7049 _GenlockGenDelay:
00131A 0F30            7053         PUSH.W  R4, R5
00131C A978            7055         ADDS.W  R7,#08H
                       7062 ; rs232cmd.c 2021               int field, line;
                       7063 ; rs232cmd.c 2022               float offset;
                       7064 ; rs232cmd.c 2023               long samples;
                       7065 ; rs232cmd.c 2024       
                       7066 ; rs232cmd.c 2025               if ( CmdExecute && !SCPIError)
00131E 964842rr        7068         MOV.B   ES,#SEG( _CmdExecute )
001322 9908rrrr        7069         MOV.W   R0,#SOF( _CmdExecute )
001326 8200            7070         MOV.B   R0L,[R0]
001328 F374            7071         BEQ     _310
00132A 964842rr        7072         MOV.B   ES,#SEG( _SCPIError )
00132E 9908rrrr        7073         MOV.W   R0,#SOF( _SCPIError )
001332 8A00            7074         MOV.W   R0,[R0]
001334 F26E            7075         BNE     _310
                       7076 ; rs232cmd.c 2026               {
                       7077 ; rs232cmd.c 2027                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 118

ADDR   CODE            LINE SOURCELINE
001336 964842rr        7079         MOV.B   ES,#SEG( _CmdRequest )
00133A 9908rrrr        7080         MOV.W   R0,#SOF( _CmdRequest )
00133E 8200            7081         MOV.B   R0L,[R0]
001340 F31D            7082         BEQ     _301
                       7083 ; rs232cmd.c 2028                       {
                       7084 ; rs232cmd.c 2029                               if ( ParCnt)
001342 964842rr        7086         MOV.B   ES,#SEG( _ParCnt )
001346 9908rrrr        7087         MOV.W   R0,#SOF( _ParCnt )
00134A 8200            7088         MOV.B   R0L,[R0]
00134C F306            7089         BEQ     _300
                       7090 ; rs232cmd.c 2030                                       SCPIError = ParNotAllowed;
00134E 964842rr        7092         MOV.B   ES,#SEG( _SCPIError )
001352 9908rrrr        7093         MOV.W   R0,#SOF( _SCPIError )
001356 BA06            7094         MOV.W   [R0],#06H
001358 FE5C            7095         BR      _310
001358 FE5C            7095         BR      _310
00135A                 7096 _300:
                       7097 ; rs232cmd.c 2031                               else
                       7098 ; rs232cmd.c 2032                               {
                       7099 ; rs232cmd.c 2033                                       PrintSamplesToFLT( GenlockSetup.System, G
                            enlockSetup.Delay);
00135A 964842rr        7101         MOV.B   ES,#SEG( _GenlockSetup )
00135E 9908rrrr        7102         MOV.W   R0,#SOF( _GenlockSetup )
001362 8200            7103         MOV.B   R0L,[R0]
001364 964842rr        7104         MOV.B   ES,#SEG( _GenlockSetup+2 )
001368 9938rrrr        7105         MOV.W   R3,#SOF( _GenlockSetup+2 )
00136C 8B23            7106         MOV.W   R2,[R3+]
00136E 8A33            7107         MOV.W   R3,[R3]
001370 C528CC          7108         CALL    _PrintSamplesToFLT
                       7109 ; rs232cmd.c 2034       
                       7110 ; rs232cmd.c 2035                                       rs232putchar ( '\n');
001373 91080A          7112         MOV.B   R0L,#0AH
                       7113         CALL    _rs232putchar
001376 C4rrrrrr       +7113 ;       FCALL   _rs232putchar
                       7114 ; rs232cmd.c 2036                               }
                       7115 ; rs232cmd.c 2037                       }
00137A FE4B            7117         BR      _310
00137A FE4B            7117         BR      _310
00137C                 7118 _301:
                       7119 ; rs232cmd.c 2038                       else
                       7120 ; rs232cmd.c 2039                       {
                       7121 ; rs232cmd.c 2040                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
00137C 964842rr        7123         MOV.B   ES,#SEG( _ParCnt )
001380 9908rrrr        7124         MOV.W   R0,#SOF( _ParCnt )
001384 8200            7125         MOV.B   R0L,[R0]
001386 910403          7126         CMP.B   R0L,#03H
001389 F21F            7127         BNE     _302
00138B 9168rr          7128         MOV.B   R3L,#SEG( __lc_bs )
00138E 7177            7129         XOR.B   R3H,R3H
001390 8927            7130         MOV.W   R2,R7
001392 91A8rr          7131         MOV.B   R5L,#SEG( __lc_bs )
001395 71BB            7132         XOR.B   R5H,R5H
001397 404702          7133         LEA     R4,R7+2
00139A 9128rr          7134         MOV.B   R1L,#SEG( __lc_bs )
00139D 7133            7135         XOR.B   R1H,R1H
00139F 400704          7136         LEA     R0,R7+4
0013A2 0F03            7137         PUSH.W  R0, R1
0013A4 0F30            7139         PUSH.W  R4, R5
0013A6 0F0C            7141         PUSH.W  R2, R3
0013A8 9938rrrr        7143         MOV.W   R3,#SEG( _299 )
0013AC 9928rrrr        7144         MOV.W   R2,#SOF( _299 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 119

ADDR   CODE            LINE SOURCELINE
0013B0 0F0C            7145         PUSH.W  R2, R3
0013B2 9918rrrr        7147         MOV.W   R1,#SEG( _Cmd )
0013B6 9908rrrr        7148         MOV.W   R0,#SOF( _Cmd )
                       7149         CALL    _sscanf
0013BA C4rrrrrr       +7149 ;       FCALL   _sscanf
0013BE 99700010        7150         ADD.W   R7,#010H
0013C2 99040003        7152         CMP.W   R0,#03H
0013C6 F306            7153         BEQ     _303
0013C6 F306            7153         BEQ     _303
0013C8                 7154 _302:
                       7155 ; rs232cmd.c 2041                                       SCPIError = SyntaxErr;
0013C8 964842rr        7157         MOV.B   ES,#SEG( _SCPIError )
0013CC 9908rrrr        7158         MOV.W   R0,#SOF( _SCPIError )
0013D0 BA03            7159         MOV.W   [R0],#03H
0013D2 FE1F            7160         BR      _310
0013D2 FE1F            7160         BR      _310
0013D4                 7161 _303:
                       7162 ; rs232cmd.c 2042                               else
                       7163 ; rs232cmd.c 2043                               {
                       7164 ; rs232cmd.c 2044                                       if (( samples = FLTToSamples( GenlockSetu
                            p.System, field, line, offset)) == -1)
0013D4 964842rr        7166         MOV.B   ES,#SEG( _GenlockSetup )
0013D8 9908rrrr        7167         MOV.W   R0,#SOF( _GenlockSetup )
0013DC 8200            7168         MOV.B   R0L,[R0]
0013DE 8A17            7169         MOV.W   R1,[R7]
0013E0 8C2702          7170         MOV.W   R2,[R7+2]
0013E3 8C5706          7171         MOV.W   R5,[R7+6]
0013E6 8C4704          7172         MOV.W   R4,[R7+4]
0013E9 0F30            7173         PUSH.W  R4, R5
0013EB C52653          7175         CALL    _FLTToSamples
0013EE A974            7176         ADDS.W  R7,#04H
0013F0 8931            7178         MOV.W   R3,R1
0013F2 8920            7179         MOV.W   R2,R0
0013F4 9934FFFF        7180         CMP.W   R3,#0FFFFH
0013F8 F202            7181         BNE     _313
0013FA 9924FFFF        7182         CMP.W   R2,#0FFFFH
0013FA 9924FFFF        7182         CMP.W   R2,#0FFFFH
0013FE                 7183 _313:
0013FE F207            7184         BNE     _304
                       7185 ; rs232cmd.c 2045                                               SCPIError = ExecErr;
001400 964842rr        7187         MOV.B   ES,#SEG( _SCPIError )
001404 9908rrrr        7188         MOV.W   R0,#SOF( _SCPIError )
001408 9A08001D        7189         MOV.W   [R0],#01DH
00140C FE02            7190         BR      _310
00140C FE02            7190         BR      _310
00140E                 7191 _304:
                       7192 ; rs232cmd.c 2046                                       else
                       7193 ; rs232cmd.c 2047                                               SetGenlockDelay( samples);
                       7195         CALL    _SetGenlockDelay
00140E C4rrrrrr       +7195 ;       FCALL   _SetGenlockDelay
                       7196 ; rs232cmd.c 2048                               }
                       7197 ; rs232cmd.c 2049                       }
                       7198 ; rs232cmd.c 2050               }
001412                 7200 _310:
                       7201 ; rs232cmd.c 2051       }
001412 99700008        7203         ADD.W   R7,#08H
001416 2F30            7205         POP.W   R4, R5
001418 D680            7207         RET
                       7209 ; rs232cmd.c 2052       
                       7210 ; rs232cmd.c 2053       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 120

ADDR   CODE            LINE SOURCELINE
                       7211 ; rs232cmd.c 2054       /* GenlockGenCalibrateEnable                                             
                                                                                                       RS232CMD.C */
                       7212 ; rs232cmd.c 2055       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7213 ; rs232cmd.c 2056       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7214 ; rs232cmd.c 2057       /* Revised:             000622                                           
                                                                                                                             
                                                                                    */
                       7215 ; rs232cmd.c 2058       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7216 ; rs232cmd.c 2059       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7217 ; rs232cmd.c 2060       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7218 ; rs232cmd.c 2061       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7219 ; rs232cmd.c 2062       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7220 ; rs232cmd.c 2063       /************************************************************************
                            **/
                       7221 ; rs232cmd.c 2064       void GenlockGenCalibrateEnable( void)
                       7222 ; rs232cmd.c 2065       {
                       7223         ALIGN   1
                       7225         PUBLIC  _GenlockGenCalibrateEnable
00141A                 7226 _GenlockGenCalibrateEnable:
00141A 0F30            7230         PUSH.W  R4, R5
                       7236 ; rs232cmd.c 2066               char code *str;
                       7237 ; rs232cmd.c 2067               int tmp;
                       7238 ; rs232cmd.c 2068       
                       7239 ; rs232cmd.c 2069               if ( CmdExecute && !SCPIError)
00141C 964842rr        7241         MOV.B   ES,#SEG( _CmdExecute )
001420 9908rrrr        7242         MOV.W   R0,#SOF( _CmdExecute )
001424 8200            7243         MOV.B   R0L,[R0]
                       7244         BEQ     _330
001426 F202           +7244 ;       BNE     _LG_358
001428 D500D2         +7244 ;       JMP.L   _330
001428 D500D200       +7244 ;       JMP.L   _330
00142C                +7244 _LG_358:
00142C 964842rr        7245         MOV.B   ES,#SEG( _SCPIError )
001430 9908rrrr        7246         MOV.W   R0,#SOF( _SCPIError )
001434 8A00            7247         MOV.W   R0,[R0]
                       7248         BNE     _330
001436 F302           +7248 ;       BEQ     _LG_360
001438 D500CA         +7248 ;       JMP.L   _330
001438 D500CA00       +7248 ;       JMP.L   _330
00143C                +7248 _LG_360:
                       7249 ; rs232cmd.c 2070               {
                       7250 ; rs232cmd.c 2071                       if ( CmdRequest)
00143C 964842rr        7252         MOV.B   ES,#SEG( _CmdRequest )
001440 9908rrrr        7253         MOV.W   R0,#SOF( _CmdRequest )
001444 8200            7254         MOV.B   R0L,[R0]
001446 F340            7255         BEQ     _320
                       7256 ; rs232cmd.c 2072                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 121

ADDR   CODE            LINE SOURCELINE
                       7257 ; rs232cmd.c 2073                               if ( ParCnt)
001448 964842rr        7259         MOV.B   ES,#SEG( _ParCnt )
00144C 9908rrrr        7260         MOV.W   R0,#SOF( _ParCnt )
001450 8200            7261         MOV.B   R0L,[R0]
001452 F307            7262         BEQ     _317
                       7263 ; rs232cmd.c 2074                                       SCPIError = SyntaxErr;
001454 964842rr        7265         MOV.B   ES,#SEG( _SCPIError )
001458 9908rrrr        7266         MOV.W   R0,#SOF( _SCPIError )
00145C BA03            7267         MOV.W   [R0],#03H
                       7268         BR      _330
00145E D500B7         +7268         JMP.L   _330
00145E D500B700       +7268         JMP.L   _330
001462                 7269 _317:
                       7270 ; rs232cmd.c 2075                               else
                       7271 ; rs232cmd.c 2076                               {
                       7272 ; rs232cmd.c 2077                                       str = OffOnPar[GenlockCalEnable].LongName
                            ;
001462 964842rr        7274         MOV.B   ES,#SEG( _GenlockCalEnable )
001466 9908rrrr        7275         MOV.W   R0,#SOF( _GenlockCalEnable )
00146A 8200            7276         MOV.B   R0L,[R0]
00146C E8000C          7277         MULU.B  R0L,#0CH
00146F 8920            7278         MOV.W   R2,R0
001471 B930            7279         MOVS.W  R3,#00H
001473 9918rrrr        7280         MOV.W   R1,#SEG( _OffOnPar )
001477 9908rrrr        7281         MOV.W   R0,#SOF( _OffOnPar )
00147B 0902            7282         ADD.W   R0,R2
00147D 1913            7283         ADDC.W  R1,R3
00147F 862C43          7284         MOV.B   CS,R1L
001482 8820            7285         MOVC.W  R2,[R0+]
001484 99040000        7286         CMP.W   R0,#00H
001488 F202            7287         BNE     _331
00148A A64143          7288         ADDS.B  CS,#01H
00148A A6414300        7288         ADDS.B  CS,#01H
00148E                 7289 _331:
00148E 8830            7290         MOVC.W  R3,[R0+]
001490 8953            7291         MOV.W   R5,R3
001492 8942            7292         MOV.W   R4,R2
                       7294 ; rs232cmd.c 2078       
                       7295 ; rs232cmd.c 2079                                       while ( *str)
001494 866C43          7297         MOV.B   CS,R3L
001497 8062            7298         MOVC.B  R3L,[R2+]
001499 F312            7299         BEQ     _319
001499 F31200          7299         BEQ     _319
00149C                 7300 _318:
                       7301 ; rs232cmd.c 2080                                               rs232putchar( *str++);
00149C 8915            7303         MOV.W   R1,R5
00149E 8904            7304         MOV.W   R0,R4
0014A0 862C43          7305         MOV.B   CS,R1L
0014A3 8020            7306         MOVC.B  R1L,[R0+]
0014A5 8102            7307         MOV.B   R0L,R1L
                       7308         CALL    _rs232putchar
0014A7 C4rrrrrr       +7308 ;       FCALL   _rs232putchar
0014AB 99400001        7309         ADD.W   R4,#01H
0014AF 99510000        7310         ADDC.W  R5,#00H
0014B3 8915            7314         MOV.W   R1,R5
0014B5 8904            7315         MOV.W   R0,R4
0014B7 862C43          7316         MOV.B   CS,R1L
0014BA 8020            7317         MOVC.B  R1L,[R0+]
0014BC F2EF            7318         BNE     _318
0014BE                 7320 _319:
                       7321 ; rs232cmd.c 2081       
                       7322 ; rs232cmd.c 2082                                       rs232putchar('\n');
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 122

ADDR   CODE            LINE SOURCELINE
0014BE 91080A          7324         MOV.B   R0L,#0AH
                       7325         CALL    _rs232putchar
0014C1 C4rrrrrr       +7325 ;       FCALL   _rs232putchar
                       7326 ; rs232cmd.c 2083                               }
                       7327 ; rs232cmd.c 2084                       }
                       7329         BR      _330
0014C5 D50083         +7329         JMP.L   _330
0014C5 D50083         +7329         JMP.L   _330
0014C8                 7330 _320:
                       7331 ; rs232cmd.c 2085                       else
                       7332 ; rs232cmd.c 2086                       {
                       7333 ; rs232cmd.c 2087                               if ( ParCnt != 1)
0014C8 964842rr        7335         MOV.B   ES,#SEG( _ParCnt )
0014CC 9908rrrr        7336         MOV.W   R0,#SOF( _ParCnt )
0014D0 8200            7337         MOV.B   R0L,[R0]
0014D2 910401          7338         CMP.B   R0L,#01H
0014D5 F307            7339         BEQ     _321
                       7340 ; rs232cmd.c 2088                                       SCPIError = SyntaxErr;
0014D7 964842rr        7342         MOV.B   ES,#SEG( _SCPIError )
0014DB 9908rrrr        7343         MOV.W   R0,#SOF( _SCPIError )
0014DF BA03            7344         MOV.W   [R0],#03H
0014E1 FE76            7345         BR      _330
0014E1 FE7600          7345         BR      _330
0014E4                 7346 _321:
                       7347 ; rs232cmd.c 2089                               else
                       7348 ; rs232cmd.c 2090                               {
                       7349 ; rs232cmd.c 2091                                       tmp = FindParameter( Cmd, OffOnPar);
0014E4 9918rrrr        7351         MOV.W   R1,#SEG( _Cmd )
0014E8 9908rrrr        7352         MOV.W   R0,#SOF( _Cmd )
0014EC 9938rrrr        7353         MOV.W   R3,#SEG( _OffOnPar )
0014F0 9928rrrr        7354         MOV.W   R2,#SOF( _OffOnPar )
0014F4 C52582          7355         CALL    _FindParameter
                       7357 ; rs232cmd.c 2092               
                       7358 ; rs232cmd.c 2093                                       if ( tmp > -1)
0014F7 9904FFFF        7360         CMP.W   R0,#0FFFFH
0014FB FD63            7361         BLE     _323
                       7362 ; rs232cmd.c 2094                                       {
                       7363 ; rs232cmd.c 2095                                               GenlockCalEnable = tmp;
0014FD 8910            7365         MOV.W   R1,R0
0014FF 964842rr        7366         MOV.B   ES,#SEG( _GenlockCalEnable )
001503 9928rrrr        7367         MOV.W   R2,#SOF( _GenlockCalEnable )
001507 822A            7368         MOV.B   [R2],R1L
                       7369 ; rs232cmd.c 2096       
                       7370 ; rs232cmd.c 2097                                               if ( tmp == 0)
001509 6900            7372         OR.W    R0,R0
00150B F219            7373         BNE     _322
                       7374 ; rs232cmd.c 2098                                               {
                       7375 ; rs232cmd.c 2099                                                       SetGenlockSystem( Genlock
                            Setup.System);
00150D 964842rr        7377         MOV.B   ES,#SEG( _GenlockSetup )
001511 9908rrrr        7378         MOV.W   R0,#SOF( _GenlockSetup )
001515 8200            7379         MOV.B   R0L,[R0]
001517 B110            7381         MOVS.B  R0H,#00H
                       7382         CALL    _SetGenlockSystem
001519 C4rrrrrr       +7382 ;       FCALL   _SetGenlockSystem
                       7383 ; rs232cmd.c 2100       
                       7384 ; rs232cmd.c 2101                                                       SetBBSystem( BBOutput1, B
                            BSetup[BBOutput1].System);
00151D 964842rr        7386         MOV.B   ES,#SEG( _BBSetup )
001521 9908rrrr        7387         MOV.W   R0,#SOF( _BBSetup )
001525 8200            7388         MOV.B   R0L,[R0]
001527 8120            7389         MOV.B   R1L,R0L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 123

ADDR   CODE            LINE SOURCELINE
001529 B130            7390         MOVS.B  R1H,#00H
00152B B900            7391         MOV.W   R0,#00H
                       7392         CALL    _SetBBSystem
00152D C4rrrrrr       +7392 ;       FCALL   _SetBBSystem
                       7393 ; rs232cmd.c 2102       
                       7394 ; rs232cmd.c 2103                                                       BBControlPort = 0;
001531 964842rr        7396         MOV.B   ES,#SEG( _BBControlPort )
001535 9908rrrr        7397         MOV.W   R0,#SOF( _BBControlPort )
001539 BA00            7398         MOV.W   [R0],#00H
                       7399 ; rs232cmd.c 2104                                               }
00153B FE49            7401         BR      _330
00153B FE4900          7401         BR      _330
00153E                 7402 _322:
                       7403 ; rs232cmd.c 2105                                               else
                       7404 ; rs232cmd.c 2106                                               {
                       7405 ; rs232cmd.c 2107                                                                                
                                                                                                                             
                                            // Force genlock internal mode
                       7406 ; rs232cmd.c 2108                                                       sio0SndCommand( 12, SPG_V
                            24_address, "GM0");
00153E 9908000C        7408         MOV.W   R0,#0CH
001542 9938rrrr        7409         MOV.W   R3,#SEG( _314 )
001546 9928rrrr        7410         MOV.W   R2,#SOF( _314 )
00154A 0F0C            7411         PUSH.W  R2, R3
00154C 99180015        7413         MOV.W   R1,#015H
                       7414         CALL    _sio0SndCommand
001550 C4rrrrrr       +7414 ;       FCALL   _sio0SndCommand
001554 A974            7415         ADDS.W  R7,#04H
                       7417 ; rs232cmd.c 2109       
                       7418 ; rs232cmd.c 2110                                                                                
                                                                                                                             
                                            // Force BB1 PAL mode
                       7419 ; rs232cmd.c 2111                                                       sio0SndCommand( 20, BB_V2
                            4_address, "HG%ld;", BBSetup[BBOutput1].Delay);
001556 99180034        7421         MOV.W   R1,#034H
00155A 964842rr        7422         MOV.B   ES,#SEG( _BBSetup+2 )
00155E 9938rrrr        7423         MOV.W   R3,#SOF( _BBSetup+2 )
001562 8B23            7424         MOV.W   R2,[R3+]
001564 8A33            7425         MOV.W   R3,[R3]
001566 0F0C            7426         PUSH.W  R2, R3
001568 9938rrrr        7428         MOV.W   R3,#SEG( _315 )
00156C 9928rrrr        7429         MOV.W   R2,#SOF( _315 )
001570 0F0C            7430         PUSH.W  R2, R3
001572 99080014        7432         MOV.W   R0,#014H
                       7433         CALL    _sio0SndCommand
001576 C4rrrrrr       +7433 ;       FCALL   _sio0SndCommand
00157A 99700008        7434         ADD.W   R7,#08H
                       7436 ; rs232cmd.c 2112       
                       7437 ; rs232cmd.c 2113                                                       BBControlPort = 1;       
                                                                                    // Set BB1 to F45MHz
00157E 964842rr        7439         MOV.B   ES,#SEG( _BBControlPort )
001582 9908rrrr        7440         MOV.W   R0,#SOF( _BBControlPort )
001586 BA01            7441         MOV.W   [R0],#01H
                       7442 ; rs232cmd.c 2114       
                       7443 ; rs232cmd.c 2115                                                       GenlockCalValue = Calibra
                            tion.GenlockCalibration.DACUserValue;
001588 964842rr        7445         MOV.B   ES,#SEG( _Calibration+120 )
00158C 9908rrrr        7446         MOV.W   R0,#SOF( _Calibration+120 )
001590 8A00            7447         MOV.W   R0,[R0]
001592 964842rr        7448         MOV.B   ES,#SEG( _GenlockCalValue )
001596 9918rrrr        7449         MOV.W   R1,#SOF( _GenlockCalValue )
00159A 8A09            7450         MOV.W   [R1],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 124

ADDR   CODE            LINE SOURCELINE
                       7451 ; rs232cmd.c 2116       
                       7452 ; rs232cmd.c 2117                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%d;", GenlockCalValue);
00159C 964842rr        7454         MOV.B   ES,#SEG( _GenlockCalValue )
0015A0 9908rrrr        7455         MOV.W   R0,#SOF( _GenlockCalValue )
0015A4 8A00            7456         MOV.W   R0,[R0]
0015A6 0F01            7457         PUSH.W  R0
0015A8 9918rrrr        7459         MOV.W   R1,#SEG( _316 )
0015AC 9908rrrr        7460         MOV.W   R0,#SOF( _316 )
0015B0 0F03            7461         PUSH.W  R0, R1
0015B2 99080014        7463         MOV.W   R0,#014H
0015B6 99180015        7464         MOV.W   R1,#015H
                       7465         CALL    _sio0SndCommand
0015BA C4rrrrrr       +7465 ;       FCALL   _sio0SndCommand
0015BE A976            7466         ADDS.W  R7,#06H
                       7468 ; rs232cmd.c 2118                                               }
                       7469 ; rs232cmd.c 2119                                       }
0015C0 FE06            7471         BR      _330
0015C0 FE06            7471         BR      _330
0015C2                 7472 _323:
                       7473 ; rs232cmd.c 2120                                       else
                       7474 ; rs232cmd.c 2121                                               SCPIError = DataOutOfRange;
0015C2 964842rr        7476         MOV.B   ES,#SEG( _SCPIError )
0015C6 9908rrrr        7477         MOV.W   R0,#SOF( _SCPIError )
0015CA 9A080021        7478         MOV.W   [R0],#021H
                       7479 ; rs232cmd.c 2122                               }
                       7480 ; rs232cmd.c 2123                       }
                       7481 ; rs232cmd.c 2124               }
0015CE                 7483 _330:
                       7484 ; rs232cmd.c 2125       }
0015CE 2F30            7486         POP.W   R4, R5
0015D0 D680            7488         RET
                       7491 ; rs232cmd.c 2126       
                       7492 ; rs232cmd.c 2127       /************************************************************************
                            **/
                       7493 ; rs232cmd.c 2128       /* GenlockGenCalibrateAdjust                                             
                                                                                                       RS232CMD.C */
                       7494 ; rs232cmd.c 2129       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7495 ; rs232cmd.c 2130       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7496 ; rs232cmd.c 2131       /* Revised:             001016                                           
                                                                                                                             
                                                                                    */
                       7497 ; rs232cmd.c 2132       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7498 ; rs232cmd.c 2133       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7499 ; rs232cmd.c 2134       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7500 ; rs232cmd.c 2135       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7501 ; rs232cmd.c 2136       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 125

ADDR   CODE            LINE SOURCELINE
                       7502 ; rs232cmd.c 2137       /************************************************************************
                            **/
                       7503 ; rs232cmd.c 2138       void GenlockGenCalibrateAdjust( void)
                       7504 ; rs232cmd.c 2139       {
                       7505         ALIGN   1
                       7507         PUBLIC  _GenlockGenCalibrateAdjust
0015D2                 7508 _GenlockGenCalibrateAdjust:
0015D2 0F30            7512         PUSH.W  R4, R5
                       7520 ; rs232cmd.c 2140               int tmp;
                       7521 ; rs232cmd.c 2141               UI MinVal, MaxVal;
                       7522 ; rs232cmd.c 2142       
                       7523 ; rs232cmd.c 2143               if ( CmdExecute && !SCPIError)
0015D4 964842rr        7525         MOV.B   ES,#SEG( _CmdExecute )
0015D8 9908rrrr        7526         MOV.W   R0,#SOF( _CmdExecute )
0015DC 8200            7527         MOV.B   R0L,[R0]
                       7528         BEQ     _350
0015DE F202           +7528 ;       BNE     _LG_378
0015E0 D5009D         +7528 ;       JMP.L   _350
0015E0 D5009D00       +7528 ;       JMP.L   _350
0015E4                +7528 _LG_378:
0015E4 964842rr        7529         MOV.B   ES,#SEG( _SCPIError )
0015E8 9908rrrr        7530         MOV.W   R0,#SOF( _SCPIError )
0015EC 8A00            7531         MOV.W   R0,[R0]
                       7532         BNE     _350
0015EE F302           +7532 ;       BEQ     _LG_380
0015F0 D50095         +7532 ;       JMP.L   _350
0015F0 D5009500       +7532 ;       JMP.L   _350
0015F4                +7532 _LG_380:
                       7533 ; rs232cmd.c 2144               {
                       7534 ; rs232cmd.c 2145                       if ( CmdRequest)
0015F4 964842rr        7536         MOV.B   ES,#SEG( _CmdRequest )
0015F8 9908rrrr        7537         MOV.W   R0,#SOF( _CmdRequest )
0015FC 8200            7538         MOV.B   R0L,[R0]
0015FE F307            7539         BEQ     _335
                       7540 ; rs232cmd.c 2146                               SCPIError = SyntaxErr;
001600 964842rr        7542         MOV.B   ES,#SEG( _SCPIError )
001604 9908rrrr        7543         MOV.W   R0,#SOF( _SCPIError )
001608 BA03            7544         MOV.W   [R0],#03H
                       7545         BR      _350
00160A D50088         +7545         JMP.L   _350
00160A D5008800       +7545         JMP.L   _350
00160E                 7546 _335:
                       7547 ; rs232cmd.c 2147                       else
                       7548 ; rs232cmd.c 2148                       {
                       7549 ; rs232cmd.c 2149                               if ( ParCnt == 0)
00160E 964842rr        7551         MOV.B   ES,#SEG( _ParCnt )
001612 9908rrrr        7552         MOV.W   R0,#SOF( _ParCnt )
001616 8200            7553         MOV.B   R0L,[R0]
001618 F206            7554         BNE     _336
                       7555 ; rs232cmd.c 2150                                       SCPIError = SyntaxErr;
00161A 964842rr        7557         MOV.B   ES,#SEG( _SCPIError )
00161E 9908rrrr        7558         MOV.W   R0,#SOF( _SCPIError )
001622 BA03            7559         MOV.W   [R0],#03H
001624 FE7B            7560         BR      _350
001624 FE7B            7560         BR      _350
001626                 7561 _336:
                       7562 ; rs232cmd.c 2151                               else
                       7563 ; rs232cmd.c 2152                               {
                       7564 ; rs232cmd.c 2153                                       MinVal = Calibration.GenlockCalibration.D
                            ACFactValue - 150;
001626 964842rr        7566         MOV.B   ES,#SEG( _Calibration+118 )
00162A 9908rrrr        7567         MOV.W   R0,#SOF( _Calibration+118 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 126

ADDR   CODE            LINE SOURCELINE
00162E 8A00            7568         MOV.W   R0,[R0]
001630 8950            7569         MOV.W   R5,R0
001632 8945            7570         MOV.W   R4,R5
001634 99520096        7571         SUB.W   R5,#096H
                       7573 ; rs232cmd.c 2154                                       MaxVal = Calibration.GenlockCalibration.D
                            ACFactValue + 150;
001638 99400096        7575         ADD.W   R4,#096H
                       7577 ; rs232cmd.c 2155       
                       7578 ; rs232cmd.c 2156                                       tmp = FindParameter( Cmd, MinMaxPar);
00163C 9938rrrr        7580         MOV.W   R3,#SEG( _MinMaxPar )
001640 9928rrrr        7581         MOV.W   R2,#SOF( _MinMaxPar )
001644 9918rrrr        7582         MOV.W   R1,#SEG( _Cmd )
001648 9908rrrr        7583         MOV.W   R0,#SOF( _Cmd )
00164C C524D6          7584         CALL    _FindParameter
                       7586 ; rs232cmd.c 2157               
                       7587 ; rs232cmd.c 2158                                       if ( tmp > -1)
00164F 9904FFFF        7589         CMP.W   R0,#0FFFFH
001653 FD21            7590         BLE     _339
                       7591 ; rs232cmd.c 2159                                       {
                       7592 ; rs232cmd.c 2160                                               if ( tmp == 0)
001655 6900            7594         OR.W    R0,R0
001657 F207            7595         BNE     _337
                       7596 ; rs232cmd.c 2161                                                       GenlockCalValue = MaxVal;
                            
001659 964842rr        7598         MOV.B   ES,#SEG( _GenlockCalValue )
00165D 9908rrrr        7599         MOV.W   R0,#SOF( _GenlockCalValue )
001661 8A48            7600         MOV.W   [R0],R4
001663 FE06            7601         BR      _338
001663 FE0600          7601         BR      _338
001666                 7602 _337:
                       7604 ; rs232cmd.c 2162                                               else
                       7605 ; rs232cmd.c 2163                                                       GenlockCalValue = MinVal;
                            
001666 964842rr        7607         MOV.B   ES,#SEG( _GenlockCalValue )
00166A 9908rrrr        7608         MOV.W   R0,#SOF( _GenlockCalValue )
00166E 8A58            7609         MOV.W   [R0],R5
00166E 8A58            7609         MOV.W   [R0],R5
001670                 7610 _338:
                       7611 ; rs232cmd.c 2164       
                       7612 ; rs232cmd.c 2165                                               sio0SndCommand( 20, SPG_V24_addre
                            ss, "GX%u;", GenlockCalValue);  
001670 99080014        7614         MOV.W   R0,#014H
001674 99180015        7616         MOV.W   R1,#015H
001678 964842rr        7617         MOV.B   ES,#SEG( _GenlockCalValue )
00167C 9928rrrr        7618         MOV.W   R2,#SOF( _GenlockCalValue )
001680 8A22            7619         MOV.W   R2,[R2]
001682 0F04            7620         PUSH.W  R2
001684 9938rrrr        7622         MOV.W   R3,#SEG( _334 )
001688 9928rrrr        7623         MOV.W   R2,#SOF( _334 )
00168C 0F0C            7624         PUSH.W  R2, R3
                       7626         CALL    _sio0SndCommand
00168E C4rrrrrr       +7626 ;       FCALL   _sio0SndCommand
001692 A976            7627         ADDS.W  R7,#06H
                       7629 ; rs232cmd.c 2166                                       }
001694 FE43            7631         BR      _350
001694 FE43            7631         BR      _350
001696                 7632 _339:
                       7634 ; rs232cmd.c 2167                                       else
                       7635 ; rs232cmd.c 2168                                       {
                       7636 ; rs232cmd.c 2169                                               tmp = FindParameter( Cmd, UpDownP
                            ar);
001696 9938rrrr        7638         MOV.W   R3,#SEG( _UpDownPar )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 127

ADDR   CODE            LINE SOURCELINE
00169A 9928rrrr        7639         MOV.W   R2,#SOF( _UpDownPar )
00169E 9918rrrr        7640         MOV.W   R1,#SEG( _Cmd )
0016A2 9908rrrr        7641         MOV.W   R0,#SOF( _Cmd )
0016A6 C524A9          7642         CALL    _FindParameter
                       7644 ; rs232cmd.c 2170       
                       7645 ; rs232cmd.c 2171                                               if ( tmp > -1)
0016A9 9904FFFF        7647         CMP.W   R0,#0FFFFH
0016AD FD31            7648         BLE     _344
                       7649 ; rs232cmd.c 2172                                               {
                       7650 ; rs232cmd.c 2173                                                       if ( tmp == 0)
0016AF 6900            7652         OR.W    R0,R0
0016B1 F20F            7653         BNE     _340
                       7654 ; rs232cmd.c 2174                                                       {
                       7655 ; rs232cmd.c 2175                                                               if ( GenlockCalVa
                            lue > MinVal)
0016B3 964842rr        7657         MOV.B   ES,#SEG( _GenlockCalValue )
0016B7 9908rrrr        7658         MOV.W   R0,#SOF( _GenlockCalValue )
0016BB 8A00            7659         MOV.W   R0,[R0]
0016BD 4905            7661         CMP.W   R0,R5
0016BF F915            7662         BL      _343
                       7663 ; rs232cmd.c 2176                                                                       GenlockCa
                            lValue--;
0016C1 A90F            7665         ADDS.W  R0,#0FH
0016C3 964842rr        7666         MOV.B   ES,#SEG( _GenlockCalValue )
0016C7 9918rrrr        7667         MOV.W   R1,#SOF( _GenlockCalValue )
0016CB 8A09            7668         MOV.W   [R1],R0
                       7669 ; rs232cmd.c 2177                                                       }
0016CD FE0E            7671         BR      _343
0016CD FE0E00          7671         BR      _343
0016D0                 7672 _340:
                       7673 ; rs232cmd.c 2178                                                       else
                       7674 ; rs232cmd.c 2179                                                       {
                       7675 ; rs232cmd.c 2180                                                               if ( GenlockCalVa
                            lue < MaxVal)
0016D0 964842rr        7677         MOV.B   ES,#SEG( _GenlockCalValue )
0016D4 9908rrrr        7678         MOV.W   R0,#SOF( _GenlockCalValue )
0016D8 8A00            7679         MOV.W   R0,[R0]
0016DA 4904            7680         CMP.W   R0,R4
0016DC F006            7681         BCC     _343
                       7682 ; rs232cmd.c 2181                                                                       GenlockCa
                            lValue++;
0016DE A901            7684         ADDS.W  R0,#01H
0016E0 964842rr        7685         MOV.B   ES,#SEG( _GenlockCalValue )
0016E4 9918rrrr        7686         MOV.W   R1,#SOF( _GenlockCalValue )
0016E8 8A09            7687         MOV.W   [R1],R0
                       7688 ; rs232cmd.c 2182                                                       }
0016EA                 7690 _343:
                       7691 ; rs232cmd.c 2183       
                       7692 ; rs232cmd.c 2184                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%u;", GenlockCalValue);
0016EA 99080014        7694         MOV.W   R0,#014H
0016EE 99180015        7695         MOV.W   R1,#015H
0016F2 964842rr        7696         MOV.B   ES,#SEG( _GenlockCalValue )
0016F6 9928rrrr        7697         MOV.W   R2,#SOF( _GenlockCalValue )
0016FA 8A22            7698         MOV.W   R2,[R2]
0016FC 0F04            7699         PUSH.W  R2
0016FE 9938rrrr        7701         MOV.W   R3,#SEG( _334 )
001702 9928rrrr        7702         MOV.W   R2,#SOF( _334 )
001706 0F0C            7703         PUSH.W  R2, R3
                       7705         CALL    _sio0SndCommand
001708 C4rrrrrr       +7705 ;       FCALL   _sio0SndCommand
00170C A976            7706         ADDS.W  R7,#06H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 128

ADDR   CODE            LINE SOURCELINE
                       7708 ; rs232cmd.c 2185                                               }
00170E FE06            7710         BR      _350
00170E FE06            7710         BR      _350
001710                 7711 _344:
                       7712 ; rs232cmd.c 2186                                               else
                       7713 ; rs232cmd.c 2187                                                       SCPIError = DataOutOfRang
                            e;
001710 964842rr        7715         MOV.B   ES,#SEG( _SCPIError )
001714 9908rrrr        7716         MOV.W   R0,#SOF( _SCPIError )
001718 9A080021        7717         MOV.W   [R0],#021H
                       7718 ; rs232cmd.c 2188                                       }       
                       7719 ; rs232cmd.c 2189                               }
                       7720 ; rs232cmd.c 2190                       }
                       7721 ; rs232cmd.c 2191               }
00171C                 7723 _350:
                       7724 ; rs232cmd.c 2192       }
00171C 2F30            7726         POP.W   R4, R5
00171E D680            7728         RET
                       7730 ; rs232cmd.c 2193       
                       7731 ; rs232cmd.c 2194       /************************************************************************
                            **/
                       7732 ; rs232cmd.c 2195       /* GenlockGenCalibrateStore                                              
                                                                                                       RS232CMD.C */
                       7733 ; rs232cmd.c 2196       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7734 ; rs232cmd.c 2197       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                    */
                       7735 ; rs232cmd.c 2198       /* Revised:             000622                                           
                                                                                                                             
                                                                                    */
                       7736 ; rs232cmd.c 2199       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7737 ; rs232cmd.c 2200       /* Function:    Handle the genlock calibration                           
                                                                                                                    */
                       7738 ; rs232cmd.c 2201       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7739 ; rs232cmd.c 2202       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7740 ; rs232cmd.c 2203       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7741 ; rs232cmd.c 2204       /************************************************************************
                            **/
                       7742 ; rs232cmd.c 2205       void GenlockGenCalibrateStore( void)
                       7743 ; rs232cmd.c 2206       {
                       7744         ALIGN   1
                       7746         PUBLIC  _GenlockGenCalibrateStore
001720                 7747 _GenlockGenCalibrateStore:
                       7751 ; rs232cmd.c 2207               if ( CmdExecute && !SCPIError)
001720 964842rr        7753         MOV.B   ES,#SEG( _CmdExecute )
001724 9908rrrr        7754         MOV.W   R0,#SOF( _CmdExecute )
001728 8200            7755         MOV.B   R0L,[R0]
00172A F342            7756         BEQ     _362
00172C 964842rr        7757         MOV.B   ES,#SEG( _SCPIError )
001730 9908rrrr        7758         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 129

ADDR   CODE            LINE SOURCELINE
001734 8A00            7759         MOV.W   R0,[R0]
001736 F23C            7760         BNE     _362
                       7761 ; rs232cmd.c 2208               {
                       7762 ; rs232cmd.c 2209                       if ( CmdRequest)
001738 964842rr        7764         MOV.B   ES,#SEG( _CmdRequest )
00173C 9908rrrr        7765         MOV.W   R0,#SOF( _CmdRequest )
001740 8200            7766         MOV.B   R0L,[R0]
001742 F306            7767         BEQ     _355
                       7768 ; rs232cmd.c 2210                                       SCPIError = SyntaxErr;
001744 964842rr        7770         MOV.B   ES,#SEG( _SCPIError )
001748 9908rrrr        7771         MOV.W   R0,#SOF( _SCPIError )
00174C BA03            7772         MOV.W   [R0],#03H
00174E D680            7773         RET
00174E D680            7773         RET
001750                 7774 _355:
                       7775 ; rs232cmd.c 2211                       else
                       7776 ; rs232cmd.c 2212                       {
                       7777 ; rs232cmd.c 2213                               if ( ParCnt)
001750 964842rr        7779         MOV.B   ES,#SEG( _ParCnt )
001754 9908rrrr        7780         MOV.W   R0,#SOF( _ParCnt )
001758 8200            7781         MOV.B   R0L,[R0]
00175A F306            7782         BEQ     _356
                       7783 ; rs232cmd.c 2214                                       SCPIError = ParNotAllowed;
00175C 964842rr        7785         MOV.B   ES,#SEG( _SCPIError )
001760 9908rrrr        7786         MOV.W   R0,#SOF( _SCPIError )
001764 BA06            7787         MOV.W   [R0],#06H
001766 D680            7788         RET
001766 D680            7788         RET
001768                 7789 _356:
                       7790 ; rs232cmd.c 2215                               else
                       7791 ; rs232cmd.c 2216                               {
                       7792 ; rs232cmd.c 2217                                       if ( GenlockCalEnable)
001768 964842rr        7794         MOV.B   ES,#SEG( _GenlockCalEnable )
00176C 9908rrrr        7795         MOV.W   R0,#SOF( _GenlockCalEnable )
001770 8200            7796         MOV.B   R0L,[R0]
001772 F318            7797         BEQ     _357
                       7798 ; rs232cmd.c 2218                                       {
                       7799 ; rs232cmd.c 2219                                               Calibration.GenlockCalibration.DA
                            CUserValue = GenlockCalValue;
001774 964842rr        7801         MOV.B   ES,#SEG( _GenlockCalValue )
001778 9908rrrr        7802         MOV.W   R0,#SOF( _GenlockCalValue )
00177C 8A00            7803         MOV.W   R0,[R0]
00177E 964842rr        7804         MOV.B   ES,#SEG( _Calibration+120 )
001782 9918rrrr        7805         MOV.W   R1,#SOF( _Calibration+120 )
001786 8A09            7806         MOV.W   [R1],R0
                       7807 ; rs232cmd.c 2220                                                               
                       7808 ; rs232cmd.c 2221                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
001788 9918rrrr        7810         MOV.W   R1,#SEG( _Calibration )
00178C 9908rrrr        7811         MOV.W   R0,#SOF( _Calibration )
001790 964842rr        7812         MOV.B   ES,#SEG( _CalibrationPtr )
001794 9928rrrr        7813         MOV.W   R2,#SOF( _CalibrationPtr )
001798 8A22            7814         MOV.W   R2,[R2]
00179A 993800E0        7815         MOV.W   R3,#0E0H
                       7816         CALL    _NV_Store
00179E C4rrrrrr       +7816 ;       FCALL   _NV_Store
                       7817 ; rs232cmd.c 2222                                       }
0017A2 D680            7819         RET
0017A2 D680            7819         RET
0017A4                 7820 _357:
                       7821 ; rs232cmd.c 2223                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 130

ADDR   CODE            LINE SOURCELINE
                       7822 ; rs232cmd.c 2224                                               SCPIError = ExecErr;             
                                                    
0017A4 964842rr        7824         MOV.B   ES,#SEG( _SCPIError )
0017A8 9908rrrr        7825         MOV.W   R0,#SOF( _SCPIError )
0017AC 9A08001D        7826         MOV.W   [R0],#01DH
                       7827 ; rs232cmd.c 2225                               }
                       7828 ; rs232cmd.c 2226                       }
                       7829 ; rs232cmd.c 2227               }
0017B0                 7831 _362:
                       7832 ; rs232cmd.c 2228       }
0017B0 D680            7834         RET
                       7836 ; rs232cmd.c 2229       
                       7837 ; rs232cmd.c 2230       /************************************************************************
                            **/
                       7838 ; rs232cmd.c 2231       /* BBSuffix                                                              
                                                                                                                             
                                                               RS232CMD.C   */
                       7839 ; rs232cmd.c 2232       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7840 ; rs232cmd.c 2233       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       7841 ; rs232cmd.c 2234       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       7842 ; rs232cmd.c 2235       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7843 ; rs232cmd.c 2236       /* Function:    Get suffix of the Black Burst generator                  
                                                                                            */
                       7844 ; rs232cmd.c 2237       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       7845 ; rs232cmd.c 2238       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7846 ; rs232cmd.c 2239       /* Updates:             Suffix                                           
                                                                                                                             
                                                                                                    */
                       7847 ; rs232cmd.c 2240       /************************************************************************
                            **/
                       7848 ; rs232cmd.c 2241       void BBGenSuffix( void)
                       7849 ; rs232cmd.c 2242       {
                       7850         ALIGN   1
                       7852         PUBLIC  _BBGenSuffix
0017B2                 7853 _BBGenSuffix:
                       7857 ; rs232cmd.c 2243               if ( NumSuffix > 3)
0017B2 964842rr        7859         MOV.B   ES,#SEG( _NumSuffix )
0017B6 9908rrrr        7860         MOV.W   R0,#SOF( _NumSuffix )
0017BA 8A00            7861         MOV.W   R0,[R0]
0017BC 99040003        7862         CMP.W   R0,#03H
0017C0 F907            7863         BL      _363
                       7864 ; rs232cmd.c 2244                       SCPIError = HdrSuffixOutOfRange;
0017C2 964842rr        7866         MOV.B   ES,#SEG( _SCPIError )
0017C6 9908rrrr        7867         MOV.W   R0,#SOF( _SCPIError )
0017CA 9A08000C        7868         MOV.W   [R0],#0CH
0017CE D680            7869         RET
0017CE D680            7869         RET
0017D0                 7870 _363:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 131

ADDR   CODE            LINE SOURCELINE
                       7871 ; rs232cmd.c 2245               else
                       7872 ; rs232cmd.c 2246                       Suffix[0] = NumSuffix-1;
0017D0 A90F            7874         ADDS.W  R0,#0FH
0017D2 964842rr        7875         MOV.B   ES,#SEG( _Suffix )
0017D6 9918rrrr        7876         MOV.W   R1,#SOF( _Suffix )
0017DA 8A09            7877         MOV.W   [R1],R0
0017DA 8A09            7877         MOV.W   [R1],R0
0017DC                 7878 _364:
                       7879 ; rs232cmd.c 2247       
                       7880 ; rs232cmd.c 2248       }
0017DC D680            7882         RET
                       7884 ; rs232cmd.c 2249       
                       7885 ; rs232cmd.c 2250       /************************************************************************
                            **/
                       7886 ; rs232cmd.c 2251       /* BBGen                                                                 
                                                                                                                             
                                                                         RS232CMD.C */
                       7887 ; rs232cmd.c 2252       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7888 ; rs232cmd.c 2253       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       7889 ; rs232cmd.c 2254       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       7890 ; rs232cmd.c 2255       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       7891 ; rs232cmd.c 2256       /* Function:    Handle the Black Burst command.                          
                                                                                                                    */
                       7892 ; rs232cmd.c 2257       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                    */
                       7893 ; rs232cmd.c 2258       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       7894 ; rs232cmd.c 2259       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       7895 ; rs232cmd.c 2260       /************************************************************************
                            **/
                       7896 ; rs232cmd.c 2261       void BBGen( void)
                       7897 ; rs232cmd.c 2262       {
                       7898         ALIGN   1
                       7900         PUBLIC  _BBGen
0017DE                 7901 _BBGen:
0017DE 0F30            7905         PUSH.W  R4, R5
                       7909 ; rs232cmd.c 2263               char code *str;
                       7910 ; rs232cmd.c 2264       
                       7911 ; rs232cmd.c 2265               if ( CmdExecute && !SCPIError)
0017E0 964842rr        7913         MOV.B   ES,#SEG( _CmdExecute )
0017E4 9908rrrr        7914         MOV.W   R0,#SOF( _CmdExecute )
0017E8 8200            7915         MOV.B   R0L,[R0]
                       7916         BEQ     _374
0017EA F202           +7916 ;       BNE     _LG_410
0017EC D50081         +7916 ;       JMP.L   _374
0017EC D5008100       +7916 ;       JMP.L   _374
0017F0                +7916 _LG_410:
0017F0 964842rr        7917         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 132

ADDR   CODE            LINE SOURCELINE
0017F4 9908rrrr        7918         MOV.W   R0,#SOF( _SCPIError )
0017F8 8A00            7919         MOV.W   R0,[R0]
0017FA F27A            7920         BNE     _374
                       7921 ; rs232cmd.c 2266               {
                       7922 ; rs232cmd.c 2267                       if ( !CmdRequest)
0017FC 964842rr        7924         MOV.B   ES,#SEG( _CmdRequest )
001800 9908rrrr        7925         MOV.W   R0,#SOF( _CmdRequest )
001804 8200            7926         MOV.B   R0L,[R0]
001806 F206            7927         BNE     _367
                       7928 ; rs232cmd.c 2268                                       SCPIError = SyntaxErr;
001808 964842rr        7930         MOV.B   ES,#SEG( _SCPIError )
00180C 9908rrrr        7931         MOV.W   R0,#SOF( _SCPIError )
001810 BA03            7932         MOV.W   [R0],#03H
001812 FE6E            7933         BR      _374
001812 FE6E            7933         BR      _374
001814                 7934 _367:
                       7935 ; rs232cmd.c 2269                       else
                       7936 ; rs232cmd.c 2270                       {
                       7937 ; rs232cmd.c 2271                               if ( ParCnt)
001814 964842rr        7939         MOV.B   ES,#SEG( _ParCnt )
001818 9908rrrr        7940         MOV.W   R0,#SOF( _ParCnt )
00181C 8200            7941         MOV.B   R0L,[R0]
00181E F306            7942         BEQ     _368
                       7943 ; rs232cmd.c 2272                                       SCPIError = ParNotAllowed;
001820 964842rr        7945         MOV.B   ES,#SEG( _SCPIError )
001824 9908rrrr        7946         MOV.W   R0,#SOF( _SCPIError )
001828 BA06            7947         MOV.W   [R0],#06H
00182A FE62            7948         BR      _374
00182A FE62            7948         BR      _374
00182C                 7949 _368:
                       7950 ; rs232cmd.c 2273                               else
                       7951 ; rs232cmd.c 2274                               {
                       7952 ; rs232cmd.c 2275                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
00182C 964842rr        7954         MOV.B   ES,#SEG( _Suffix )
001830 9908rrrr        7955         MOV.W   R0,#SOF( _Suffix )
001834 8A00            7956         MOV.W   R0,[R0]
001836 D903            7957         ASL.W   R0,#03H
001838 B910            7958         MOVS.W  R1,#00H
00183A 964842rr        7959         MOV.B   ES,#SEG( _BBSetup )
00183E 8500rrrr        7960         MOV.B   R0L,[R0+SOF( _BBSetup )]
001842 E8000C          7961         MULU.B  R0L,#0CH
001845 8920            7962         MOV.W   R2,R0
001847 B930            7963         MOVS.W  R3,#00H
001849 9918rrrr        7964         MOV.W   R1,#SEG( _SystemPar )
00184D 9908rrrr        7965         MOV.W   R0,#SOF( _SystemPar )
001851 0902            7966         ADD.W   R0,R2
001853 1913            7967         ADDC.W  R1,R3
001855 862C43          7968         MOV.B   CS,R1L
001858 8820            7969         MOVC.W  R2,[R0+]
00185A 99040000        7970         CMP.W   R0,#00H
00185E F202            7971         BNE     _375
001860 A64143          7972         ADDS.B  CS,#01H
001860 A6414300        7972         ADDS.B  CS,#01H
001864                 7973 _375:
001864 8830            7974         MOVC.W  R3,[R0+]
001866 8953            7975         MOV.W   R5,R3
001868 8942            7976         MOV.W   R4,R2
                       7978 ; rs232cmd.c 2276       
                       7979 ; rs232cmd.c 2277                                       while ( *str)
00186A 866C43          7981         MOV.B   CS,R3L
00186D 8062            7982         MOVC.B  R3L,[R2+]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 133

ADDR   CODE            LINE SOURCELINE
00186F F312            7983         BEQ     _370
00186F F31200          7983         BEQ     _370
001872                 7984 _369:
                       7985 ; rs232cmd.c 2278                                               rs232putchar( *str++);
001872 8915            7987         MOV.W   R1,R5
001874 8904            7988         MOV.W   R0,R4
001876 862C43          7989         MOV.B   CS,R1L
001879 8020            7990         MOVC.B  R1L,[R0+]
00187B 8102            7991         MOV.B   R0L,R1L
                       7992         CALL    _rs232putchar
00187D C4rrrrrr       +7992 ;       FCALL   _rs232putchar
001881 99400001        7993         ADD.W   R4,#01H
001885 99510000        7994         ADDC.W  R5,#00H
001889 8915            7998         MOV.W   R1,R5
00188B 8904            7999         MOV.W   R0,R4
00188D 862C43          8000         MOV.B   CS,R1L
001890 8020            8001         MOVC.B  R1L,[R0+]
001892 F2EF            8002         BNE     _369
001894                 8004 _370:
                       8005 ; rs232cmd.c 2279       
                       8006 ; rs232cmd.c 2280                                       rs232putchar( ',');
001894 91082C          8008         MOV.B   R0L,#02CH
                       8009         CALL    _rs232putchar
001897 C4rrrrrr       +8009 ;       FCALL   _rs232putchar
                       8010 ; rs232cmd.c 2281       
                       8011 ; rs232cmd.c 2282                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
00189B 964842rr        8013         MOV.B   ES,#SEG( _Suffix )
00189F 9928rrrr        8014         MOV.W   R2,#SOF( _Suffix )
0018A3 8A22            8015         MOV.W   R2,[R2]
0018A5 D923            8016         ASL.W   R2,#03H
0018A7 8902            8017         MOV.W   R0,R2
0018A9 B910            8018         MOVS.W  R1,#00H
0018AB 964842rr        8019         MOV.B   ES,#SEG( _BBSetup )
0018AF 8500rrrr        8020         MOV.B   R0L,[R0+SOF( _BBSetup )]
0018B3 B930            8021         MOVS.W  R3,#00H
0018B5 964842rr        8022         MOV.B   ES,#SEG( _BBSetup+2 )
0018B9 8D32rrrr        8023         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
0018BD 8D22rrrr        8024         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
0018C1 C52623          8025         CALL    _PrintSamplesToFLT
                       8026 ; rs232cmd.c 2283       
                       8027 ; rs232cmd.c 2284                                       rs232printf( 6, ",%d\n", BBSetup[Suffix[0
                            ]].ScHPhase);
0018C4 B906            8029         MOV.W   R0,#06H
0018C6 964842rr        8030         MOV.B   ES,#SEG( _Suffix )
0018CA 9918rrrr        8031         MOV.W   R1,#SOF( _Suffix )
0018CE 8A11            8032         MOV.W   R1,[R1]
0018D0 D913            8033         ASL.W   R1,#03H
0018D2 8921            8034         MOV.W   R2,R1
0018D4 B930            8035         MOVS.W  R3,#00H
0018D6 964842rr        8036         MOV.B   ES,#SEG( _BBSetup+6 )
0018DA 8D12rrrr        8037         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
0018DE 0F02            8038         PUSH.W  R1
0018E0 9938rrrr        8040         MOV.W   R3,#SEG( _366 )
0018E4 9928rrrr        8041         MOV.W   R2,#SOF( _366 )
0018E8 0F0C            8042         PUSH.W  R2, R3
                       8044         CALL    _rs232printf
0018EA C4rrrrrr       +8044 ;       FCALL   _rs232printf
0018EE A976            8045         ADDS.W  R7,#06H
                       8047 ; rs232cmd.c 2285                               }
                       8048 ; rs232cmd.c 2286                       }
                       8049 ; rs232cmd.c 2287               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 134

ADDR   CODE            LINE SOURCELINE
0018F0                 8051 _374:
                       8052 ; rs232cmd.c 2288       }
0018F0 2F30            8054         POP.W   R4, R5
0018F2 D680            8056         RET
                       8059 ; rs232cmd.c 2289       
                       8060 ; rs232cmd.c 2290       /************************************************************************
                            **/
                       8061 ; rs232cmd.c 2291       /* BBGenSystem                                                           
                                                                                                                             
                                             RS232CMD.C     */
                       8062 ; rs232cmd.c 2292       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8063 ; rs232cmd.c 2293       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8064 ; rs232cmd.c 2294       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       8065 ; rs232cmd.c 2295       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8066 ; rs232cmd.c 2296       /* Function:    Handle the Black Burst system-command.                   
                                                                                            */
                       8067 ; rs232cmd.c 2297       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8068 ; rs232cmd.c 2298       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8069 ; rs232cmd.c 2299       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8070 ; rs232cmd.c 2300       /************************************************************************
                            **/
                       8071 ; rs232cmd.c 2301       void BBGenSystem( void)
                       8072 ; rs232cmd.c 2302       {
                       8073         ALIGN   1
                       8075         PUBLIC  _BBGenSystem
0018F4                 8076 _BBGenSystem:
0018F4 0F30            8080         PUSH.W  R4, R5
                       8086 ; rs232cmd.c 2303               int system;
                       8087 ; rs232cmd.c 2304               char code *str;
                       8088 ; rs232cmd.c 2305       
                       8089 ; rs232cmd.c 2306               if ( CmdExecute && !SCPIError)
0018F6 964842rr        8091         MOV.B   ES,#SEG( _CmdExecute )
0018FA 9908rrrr        8092         MOV.W   R0,#SOF( _CmdExecute )
0018FE 8200            8093         MOV.B   R0L,[R0]
001900 F37B            8094         BEQ     _387
001902 964842rr        8095         MOV.B   ES,#SEG( _SCPIError )
001906 9908rrrr        8096         MOV.W   R0,#SOF( _SCPIError )
00190A 8A00            8097         MOV.W   R0,[R0]
00190C F275            8098         BNE     _387
                       8099 ; rs232cmd.c 2307               {
                       8100 ; rs232cmd.c 2308                       if ( CmdRequest)
00190E 964842rr        8102         MOV.B   ES,#SEG( _CmdRequest )
001912 9908rrrr        8103         MOV.W   R0,#SOF( _CmdRequest )
001916 8200            8104         MOV.B   R0L,[R0]
001918 F345            8105         BEQ     _379
                       8106 ; rs232cmd.c 2309                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 135

ADDR   CODE            LINE SOURCELINE
                       8107 ; rs232cmd.c 2310                               if ( ParCnt)
00191A 964842rr        8109         MOV.B   ES,#SEG( _ParCnt )
00191E 9908rrrr        8110         MOV.W   R0,#SOF( _ParCnt )
001922 8200            8111         MOV.B   R0L,[R0]
001924 F306            8112         BEQ     _376
                       8113 ; rs232cmd.c 2311                                       SCPIError = ParNotAllowed;
001926 964842rr        8115         MOV.B   ES,#SEG( _SCPIError )
00192A 9908rrrr        8116         MOV.W   R0,#SOF( _SCPIError )
00192E BA06            8117         MOV.W   [R0],#06H
001930 FE63            8118         BR      _387
001930 FE63            8118         BR      _387
001932                 8119 _376:
                       8120 ; rs232cmd.c 2312                               else
                       8121 ; rs232cmd.c 2313                               {
                       8122 ; rs232cmd.c 2314                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
001932 964842rr        8124         MOV.B   ES,#SEG( _Suffix )
001936 9908rrrr        8125         MOV.W   R0,#SOF( _Suffix )
00193A 8A00            8126         MOV.W   R0,[R0]
00193C D903            8127         ASL.W   R0,#03H
00193E B910            8128         MOVS.W  R1,#00H
001940 964842rr        8129         MOV.B   ES,#SEG( _BBSetup )
001944 8500rrrr        8130         MOV.B   R0L,[R0+SOF( _BBSetup )]
001948 E8000C          8131         MULU.B  R0L,#0CH
00194B 8920            8132         MOV.W   R2,R0
00194D B930            8133         MOVS.W  R3,#00H
00194F 9918rrrr        8134         MOV.W   R1,#SEG( _SystemPar )
001953 9908rrrr        8135         MOV.W   R0,#SOF( _SystemPar )
001957 0902            8136         ADD.W   R0,R2
001959 1913            8137         ADDC.W  R1,R3
00195B 862C43          8138         MOV.B   CS,R1L
00195E 8820            8139         MOVC.W  R2,[R0+]
001960 99040000        8140         CMP.W   R0,#00H
001964 F202            8141         BNE     _388
001966 A64143          8142         ADDS.B  CS,#01H
001966 A6414300        8142         ADDS.B  CS,#01H
00196A                 8143 _388:
00196A 8830            8144         MOVC.W  R3,[R0+]
00196C 8953            8145         MOV.W   R5,R3
00196E 8942            8146         MOV.W   R4,R2
                       8148 ; rs232cmd.c 2315       
                       8149 ; rs232cmd.c 2316                                       while ( *str)
001970 866C43          8151         MOV.B   CS,R3L
001973 8062            8152         MOVC.B  R3L,[R2+]
001975 F312            8153         BEQ     _378
001975 F31200          8153         BEQ     _378
001978                 8154 _377:
                       8155 ; rs232cmd.c 2317                                               rs232putchar( *str++);
001978 8915            8157         MOV.W   R1,R5
00197A 8904            8158         MOV.W   R0,R4
00197C 862C43          8159         MOV.B   CS,R1L
00197F 8020            8160         MOVC.B  R1L,[R0+]
001981 8102            8161         MOV.B   R0L,R1L
                       8162         CALL    _rs232putchar
001983 C4rrrrrr       +8162 ;       FCALL   _rs232putchar
001987 99400001        8163         ADD.W   R4,#01H
00198B 99510000        8164         ADDC.W  R5,#00H
00198F 8915            8168         MOV.W   R1,R5
001991 8904            8169         MOV.W   R0,R4
001993 862C43          8170         MOV.B   CS,R1L
001996 8020            8171         MOVC.B  R1L,[R0+]
001998 F2EF            8172         BNE     _377
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 136

ADDR   CODE            LINE SOURCELINE
00199A                 8174 _378:
                       8175 ; rs232cmd.c 2318       
                       8176 ; rs232cmd.c 2319                                       rs232putchar('\n');
00199A 91080A          8178         MOV.B   R0L,#0AH
                       8179         CALL    _rs232putchar
00199D C4rrrrrr       +8179 ;       FCALL   _rs232putchar
                       8180 ; rs232cmd.c 2320                               }
                       8181 ; rs232cmd.c 2321                       }
0019A1 FE2B            8183         BR      _387
0019A1 FE2B00          8183         BR      _387
0019A4                 8184 _379:
                       8185 ; rs232cmd.c 2322                       else
                       8186 ; rs232cmd.c 2323                       {
                       8187 ; rs232cmd.c 2324                               if ( ParCnt != 1)
0019A4 964842rr        8189         MOV.B   ES,#SEG( _ParCnt )
0019A8 9908rrrr        8190         MOV.W   R0,#SOF( _ParCnt )
0019AC 8200            8191         MOV.B   R0L,[R0]
0019AE 910401          8192         CMP.B   R0L,#01H
0019B1 F307            8193         BEQ     _380
                       8194 ; rs232cmd.c 2325                                       SCPIError = SyntaxErr;
0019B3 964842rr        8196         MOV.B   ES,#SEG( _SCPIError )
0019B7 9908rrrr        8197         MOV.W   R0,#SOF( _SCPIError )
0019BB BA03            8198         MOV.W   [R0],#03H
0019BD FE1D            8199         BR      _387
0019BD FE1D00          8199         BR      _387
0019C0                 8200 _380:
                       8201 ; rs232cmd.c 2326                               else
                       8202 ; rs232cmd.c 2327                               {
                       8203 ; rs232cmd.c 2328                                       system = FindParameter( Cmd, SystemPar);
0019C0 9918rrrr        8205         MOV.W   R1,#SEG( _Cmd )
0019C4 9908rrrr        8206         MOV.W   R0,#SOF( _Cmd )
0019C8 9938rrrr        8207         MOV.W   R3,#SEG( _SystemPar )
0019CC 9928rrrr        8208         MOV.W   R2,#SOF( _SystemPar )
0019D0 C52314          8209         CALL    _FindParameter
                       8211 ; rs232cmd.c 2329       
                       8212 ; rs232cmd.c 2330                                       if ( system > -1)
0019D3 8910            8214         MOV.W   R1,R0
0019D5 9914FFFF        8215         CMP.W   R1,#0FFFFH
0019D9 FD09            8218         BLE     _381
                       8219 ; rs232cmd.c 2331                                               SetBBSystem( Suffix[0], system);
0019DB 964842rr        8221         MOV.B   ES,#SEG( _Suffix )
0019DF 9908rrrr        8222         MOV.W   R0,#SOF( _Suffix )
0019E3 8A00            8223         MOV.W   R0,[R0]
                       8224         CALL    _SetBBSystem
0019E5 C4rrrrrr       +8224 ;       FCALL   _SetBBSystem
0019E9 FE07            8226         BR      _387
0019E9 FE0700          8226         BR      _387
0019EC                 8227 _381:
                       8228 ; rs232cmd.c 2332                                       else
                       8229 ; rs232cmd.c 2333                                               SCPIError = DataOutOfRange;
0019EC 964842rr        8231         MOV.B   ES,#SEG( _SCPIError )
0019F0 9908rrrr        8232         MOV.W   R0,#SOF( _SCPIError )
0019F4 9A080021        8233         MOV.W   [R0],#021H
                       8234 ; rs232cmd.c 2334                               }
                       8235 ; rs232cmd.c 2335                       }
                       8236 ; rs232cmd.c 2336               }
0019F8                 8238 _387:
                       8239 ; rs232cmd.c 2337       }
0019F8 2F30            8241         POP.W   R4, R5
0019FA D680            8243         RET
                       8246 ; rs232cmd.c 2338       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 137

ADDR   CODE            LINE SOURCELINE
                       8247 ; rs232cmd.c 2339       /************************************************************************
                            **/
                       8248 ; rs232cmd.c 2340       /* BBGenDelay                                                            
                                                                                                                             
                                                     RS232CMD.C     */
                       8249 ; rs232cmd.c 2341       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8250 ; rs232cmd.c 2342       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8251 ; rs232cmd.c 2343       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */                              
                       8252 ; rs232cmd.c 2344       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8253 ; rs232cmd.c 2345       /* Function:    Handle the Black Burst timing command.                   
                                                                                            */
                       8254 ; rs232cmd.c 2346       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8255 ; rs232cmd.c 2347       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8256 ; rs232cmd.c 2348       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8257 ; rs232cmd.c 2349       /************************************************************************
                            **/
                       8258 ; rs232cmd.c 2350       void BBGenDelay( void)
                       8259 ; rs232cmd.c 2351       {
                       8260         ALIGN   1
                       8262         PUBLIC  _BBGenDelay
0019FC                 8263 _BBGenDelay:
0019FC 0F30            8267         PUSH.W  R4, R5
0019FE A978            8269         ADDS.W  R7,#08H
                       8276 ; rs232cmd.c 2352               int field, line;
                       8277 ; rs232cmd.c 2353               float offset;
                       8278 ; rs232cmd.c 2354               long samples;
                       8279 ; rs232cmd.c 2355       
                       8280 ; rs232cmd.c 2356               if ( CmdExecute && !SCPIError)
001A00 964842rr        8282         MOV.B   ES,#SEG( _CmdExecute )
001A04 9908rrrr        8283         MOV.W   R0,#SOF( _CmdExecute )
001A08 8200            8284         MOV.B   R0L,[R0]
                       8285         BEQ     _401
001A0A F202           +8285 ;       BNE     _LG_442
001A0C D5008E         +8285 ;       JMP.L   _401
001A0C D5008E00       +8285 ;       JMP.L   _401
001A10                +8285 _LG_442:
001A10 964842rr        8286         MOV.B   ES,#SEG( _SCPIError )
001A14 9908rrrr        8287         MOV.W   R0,#SOF( _SCPIError )
001A18 8A00            8288         MOV.W   R0,[R0]
                       8289         BNE     _401
001A1A F302           +8289 ;       BEQ     _LG_444
001A1C D50086         +8289 ;       JMP.L   _401
001A1C D5008600       +8289 ;       JMP.L   _401
001A20                +8289 _LG_444:
                       8290 ; rs232cmd.c 2357               {
                       8291 ; rs232cmd.c 2358                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 138

ADDR   CODE            LINE SOURCELINE
001A20 964842rr        8293         MOV.B   ES,#SEG( _CmdRequest )
001A24 9908rrrr        8294         MOV.W   R0,#SOF( _CmdRequest )
001A28 8200            8295         MOV.B   R0L,[R0]
001A2A F327            8296         BEQ     _392
                       8297 ; rs232cmd.c 2359                       {
                       8298 ; rs232cmd.c 2360                               if ( ParCnt)
001A2C 964842rr        8300         MOV.B   ES,#SEG( _ParCnt )
001A30 9908rrrr        8301         MOV.W   R0,#SOF( _ParCnt )
001A34 8200            8302         MOV.B   R0L,[R0]
001A36 F306            8303         BEQ     _391
                       8304 ; rs232cmd.c 2361                                       SCPIError = ParNotAllowed;
001A38 964842rr        8306         MOV.B   ES,#SEG( _SCPIError )
001A3C 9908rrrr        8307         MOV.W   R0,#SOF( _SCPIError )
001A40 BA06            8308         MOV.W   [R0],#06H
001A42 FE73            8309         BR      _401
001A42 FE73            8309         BR      _401
001A44                 8310 _391:
                       8311 ; rs232cmd.c 2362                               else
                       8312 ; rs232cmd.c 2363                               {
                       8313 ; rs232cmd.c 2364                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
001A44 964842rr        8315         MOV.B   ES,#SEG( _Suffix )
001A48 9908rrrr        8316         MOV.W   R0,#SOF( _Suffix )
001A4C 8A00            8317         MOV.W   R0,[R0]
001A4E 8910            8318         MOV.W   R1,R0
001A50 D913            8319         ASL.W   R1,#03H
001A52 8921            8320         MOV.W   R2,R1
001A54 B930            8321         MOVS.W  R3,#00H
001A56 964842rr        8322         MOV.B   ES,#SEG( _BBSetup )
001A5A 8502rrrr        8323         MOV.B   R0L,[R2+SOF( _BBSetup )]
001A5E 8921            8324         MOV.W   R2,R1
001A60 B930            8325         MOVS.W  R3,#00H
001A62 964842rr        8326         MOV.B   ES,#SEG( _BBSetup+2 )
001A66 8D32rrrr        8327         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
001A6A 8D22rrrr        8328         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
001A6E C5254D          8329         CALL    _PrintSamplesToFLT
                       8330 ; rs232cmd.c 2365       
                       8331 ; rs232cmd.c 2366                                       rs232putchar ( '\n');
001A71 91080A          8333         MOV.B   R0L,#0AH
                       8334         CALL    _rs232putchar
001A74 C4rrrrrr       +8334 ;       FCALL   _rs232putchar
                       8335 ; rs232cmd.c 2367                               }
                       8336 ; rs232cmd.c 2368                       }
001A78 FE58            8338         BR      _401
001A78 FE58            8338         BR      _401
001A7A                 8339 _392:
                       8340 ; rs232cmd.c 2369                       else
                       8341 ; rs232cmd.c 2370                       {
                       8342 ; rs232cmd.c 2371                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
001A7A 964842rr        8344         MOV.B   ES,#SEG( _ParCnt )
001A7E 9908rrrr        8345         MOV.W   R0,#SOF( _ParCnt )
001A82 8200            8346         MOV.B   R0L,[R0]
001A84 910403          8347         CMP.B   R0L,#03H
001A87 F21F            8348         BNE     _393
001A89 9168rr          8349         MOV.B   R3L,#SEG( __lc_bs )
001A8C 7177            8350         XOR.B   R3H,R3H
001A8E 8927            8351         MOV.W   R2,R7
001A90 91A8rr          8352         MOV.B   R5L,#SEG( __lc_bs )
001A93 71BB            8353         XOR.B   R5H,R5H
001A95 404702          8354         LEA     R4,R7+2
001A98 9128rr          8355         MOV.B   R1L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 139

ADDR   CODE            LINE SOURCELINE
001A9B 7133            8356         XOR.B   R1H,R1H
001A9D 400704          8357         LEA     R0,R7+4
001AA0 0F03            8358         PUSH.W  R0, R1
001AA2 0F30            8360         PUSH.W  R4, R5
001AA4 0F0C            8362         PUSH.W  R2, R3
001AA6 9938rrrr        8364         MOV.W   R3,#SEG( _299 )
001AAA 9928rrrr        8365         MOV.W   R2,#SOF( _299 )
001AAE 0F0C            8366         PUSH.W  R2, R3
001AB0 9918rrrr        8368         MOV.W   R1,#SEG( _Cmd )
001AB4 9908rrrr        8369         MOV.W   R0,#SOF( _Cmd )
                       8370         CALL    _sscanf
001AB8 C4rrrrrr       +8370 ;       FCALL   _sscanf
001ABC 99700010        8371         ADD.W   R7,#010H
001AC0 99040003        8373         CMP.W   R0,#03H
001AC4 F306            8374         BEQ     _394
001AC4 F306            8374         BEQ     _394
001AC6                 8375 _393:
                       8376 ; rs232cmd.c 2372                                       SCPIError = SyntaxErr;
001AC6 964842rr        8378         MOV.B   ES,#SEG( _SCPIError )
001ACA 9908rrrr        8379         MOV.W   R0,#SOF( _SCPIError )
001ACE BA03            8380         MOV.W   [R0],#03H
001AD0 FE2C            8381         BR      _401
001AD0 FE2C            8381         BR      _401
001AD2                 8382 _394:
                       8383 ; rs232cmd.c 2373                               else
                       8384 ; rs232cmd.c 2374                               {
                       8385 ; rs232cmd.c 2375                                       if (( samples = FLTToSamples( BBSetup[Suf
                            fix[0]].System, field, line, offset)) == -1)
001AD2 964842rr        8387         MOV.B   ES,#SEG( _Suffix )
001AD6 9908rrrr        8388         MOV.W   R0,#SOF( _Suffix )
001ADA 8A00            8389         MOV.W   R0,[R0]
001ADC D903            8390         ASL.W   R0,#03H
001ADE B910            8391         MOVS.W  R1,#00H
001AE0 964842rr        8392         MOV.B   ES,#SEG( _BBSetup )
001AE4 8500rrrr        8393         MOV.B   R0L,[R0+SOF( _BBSetup )]
001AE8 8A17            8394         MOV.W   R1,[R7]
001AEA 8C2702          8395         MOV.W   R2,[R7+2]
001AED 8C5706          8396         MOV.W   R5,[R7+6]
001AF0 8C4704          8397         MOV.W   R4,[R7+4]
001AF3 0F30            8398         PUSH.W  R4, R5
001AF5 C522CE          8400         CALL    _FLTToSamples
001AF8 A974            8401         ADDS.W  R7,#04H
001AFA 8931            8403         MOV.W   R3,R1
001AFC 8920            8404         MOV.W   R2,R0
001AFE 8913            8405         MOV.W   R1,R3
001B00 8902            8406         MOV.W   R0,R2
001B02 9914FFFF        8407         CMP.W   R1,#0FFFFH
001B06 F202            8408         BNE     _404
001B08 9904FFFF        8409         CMP.W   R0,#0FFFFH
001B08 9904FFFF        8409         CMP.W   R0,#0FFFFH
001B0C                 8410 _404:
001B0C F207            8411         BNE     _395
                       8412 ; rs232cmd.c 2376                                               SCPIError = ExecErr;
001B0E 964842rr        8414         MOV.B   ES,#SEG( _SCPIError )
001B12 9908rrrr        8415         MOV.W   R0,#SOF( _SCPIError )
001B16 9A08001D        8416         MOV.W   [R0],#01DH
001B1A FE07            8417         BR      _401
001B1A FE07            8417         BR      _401
001B1C                 8418 _395:
                       8419 ; rs232cmd.c 2377                                       else
                       8420 ; rs232cmd.c 2378                                               SetBBDelay( Suffix[0], (UL) sampl
                            es);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 140

ADDR   CODE            LINE SOURCELINE
001B1C 964842rr        8422         MOV.B   ES,#SEG( _Suffix )
001B20 9908rrrr        8423         MOV.W   R0,#SOF( _Suffix )
001B24 8A00            8424         MOV.W   R0,[R0]
                       8425         CALL    _SetBBDelay
001B26 C4rrrrrr       +8425 ;       FCALL   _SetBBDelay
                       8426 ; rs232cmd.c 2379                               }
                       8427 ; rs232cmd.c 2380                       }
                       8428 ; rs232cmd.c 2381               }
001B2A                 8430 _401:
                       8431 ; rs232cmd.c 2382       }
001B2A 99700008        8433         ADD.W   R7,#08H
001B2E 2F30            8435         POP.W   R4, R5
001B30 D680            8437         RET
                       8439 ; rs232cmd.c 2383       
                       8440 ; rs232cmd.c 2384       /************************************************************************
                            **/
                       8441 ; rs232cmd.c 2385       /* BBGenScHPhase                                                         
                                                                                                                             
                                                     RS232CMD.C     */
                       8442 ; rs232cmd.c 2386       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8443 ; rs232cmd.c 2387       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */                      
                       8444 ; rs232cmd.c 2388       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       8445 ; rs232cmd.c 2389       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8446 ; rs232cmd.c 2390       /* Function:    Handle the Black Burst ScH-Phase command.                
                                                                                            */
                       8447 ; rs232cmd.c 2391       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8448 ; rs232cmd.c 2392       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8449 ; rs232cmd.c 2393       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8450 ; rs232cmd.c 2394       /************************************************************************
                            **/
                       8451 ; rs232cmd.c 2395       void BBGenScHPhase( void)
                       8452 ; rs232cmd.c 2396       {
                       8453         ALIGN   1
                       8455         PUBLIC  _BBGenScHPhase
001B32                 8456 _BBGenScHPhase:
001B32 A97E            8460         ADDS.W  R7,#0EH
                       8463 ; rs232cmd.c 2397               int schphase;
                       8464 ; rs232cmd.c 2398       
                       8465 ; rs232cmd.c 2399               if ( CmdExecute && !SCPIError)
001B34 964842rr        8467         MOV.B   ES,#SEG( _CmdExecute )
001B38 9908rrrr        8468         MOV.W   R0,#SOF( _CmdExecute )
001B3C 8200            8469         MOV.B   R0L,[R0]
001B3E F366            8470         BEQ     _416
001B40 964842rr        8471         MOV.B   ES,#SEG( _SCPIError )
001B44 9908rrrr        8472         MOV.W   R0,#SOF( _SCPIError )
001B48 8A00            8473         MOV.W   R0,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 141

ADDR   CODE            LINE SOURCELINE
001B4A F260            8474         BNE     _416
                       8475 ; rs232cmd.c 2400               {
                       8476 ; rs232cmd.c 2401                       if ( CmdRequest)
001B4C 964842rr        8478         MOV.B   ES,#SEG( _CmdRequest )
001B50 9908rrrr        8479         MOV.W   R0,#SOF( _CmdRequest )
001B54 8200            8480         MOV.B   R0L,[R0]
001B56 F323            8481         BEQ     _406
                       8482 ; rs232cmd.c 2402                       {
                       8483 ; rs232cmd.c 2403                               if ( ParCnt)
001B58 964842rr        8485         MOV.B   ES,#SEG( _ParCnt )
001B5C 9908rrrr        8486         MOV.W   R0,#SOF( _ParCnt )
001B60 8200            8487         MOV.B   R0L,[R0]
001B62 F306            8488         BEQ     _405
                       8489 ; rs232cmd.c 2404                                       SCPIError = ParNotAllowed;
001B64 964842rr        8491         MOV.B   ES,#SEG( _SCPIError )
001B68 9908rrrr        8492         MOV.W   R0,#SOF( _SCPIError )
001B6C BA06            8493         MOV.W   [R0],#06H
001B6E FE4E            8494         BR      _416
001B6E FE4E            8494         BR      _416
001B70                 8495 _405:
                       8496 ; rs232cmd.c 2405                               else
                       8497 ; rs232cmd.c 2406                                       rs232printf( 6, "%d\n", BBSetup[Suffix[0]
                            ].ScHPhase);
001B70 B906            8499         MOV.W   R0,#06H
001B72 964842rr        8500         MOV.B   ES,#SEG( _Suffix )
001B76 9918rrrr        8501         MOV.W   R1,#SOF( _Suffix )
001B7A 8A11            8502         MOV.W   R1,[R1]
001B7C D913            8503         ASL.W   R1,#03H
001B7E 8921            8504         MOV.W   R2,R1
001B80 B930            8505         MOVS.W  R3,#00H
001B82 964842rr        8506         MOV.B   ES,#SEG( _BBSetup+6 )
001B86 8D12rrrr        8507         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
001B8A 0F02            8508         PUSH.W  R1
001B8C 9938rrrr        8510         MOV.W   R3,#SEG( _9 )
001B90 9928rrrr        8511         MOV.W   R2,#SOF( _9 )
001B94 0F0C            8512         PUSH.W  R2, R3
                       8514         CALL    _rs232printf
001B96 C4rrrrrr       +8514 ;       FCALL   _rs232printf
001B9A A976            8515         ADDS.W  R7,#06H
                       8517 ; rs232cmd.c 2407                       }
001B9C FE37            8519         BR      _416
001B9C FE37            8519         BR      _416
001B9E                 8520 _406:
                       8521 ; rs232cmd.c 2408                       else
                       8522 ; rs232cmd.c 2409                       {
                       8523 ; rs232cmd.c 2410                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
001B9E 964842rr        8525         MOV.B   ES,#SEG( _ParCnt )
001BA2 9908rrrr        8526         MOV.W   R0,#SOF( _ParCnt )
001BA6 8200            8527         MOV.B   R0L,[R0]
001BA8 910401          8528         CMP.B   R0L,#01H
001BAB F215            8529         BNE     _407
001BAD 9918rrrr        8530         MOV.W   R1,#SEG( _Cmd )
001BB1 9908rrrr        8531         MOV.W   R0,#SOF( _Cmd )
001BB5 9168rr          8532         MOV.B   R3L,#SEG( __lc_bs )
001BB8 7177            8533         XOR.B   R3H,R3H
001BBA 8927            8534         MOV.W   R2,R7
001BBC 0F0C            8535         PUSH.W  R2, R3
001BBE 9938rrrr        8537         MOV.W   R3,#SEG( _10 )
001BC2 9928rrrr        8538         MOV.W   R2,#SOF( _10 )
001BC6 0F0C            8539         PUSH.W  R2, R3
                       8541         CALL    _sscanf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 142

ADDR   CODE            LINE SOURCELINE
001BC8 C4rrrrrr       +8541 ;       FCALL   _sscanf
001BCC 99700008        8542         ADD.W   R7,#08H
001BD0 99040001        8544         CMP.W   R0,#01H
001BD4 F306            8545         BEQ     _408
001BD4 F306            8545         BEQ     _408
001BD6                 8546 _407:
                       8547 ; rs232cmd.c 2411                                       SCPIError = SyntaxErr;
001BD6 964842rr        8549         MOV.B   ES,#SEG( _SCPIError )
001BDA 9908rrrr        8550         MOV.W   R0,#SOF( _SCPIError )
001BDE BA03            8551         MOV.W   [R0],#03H
001BE0 FE15            8552         BR      _416
001BE0 FE15            8552         BR      _416
001BE2                 8553 _408:
                       8554 ; rs232cmd.c 2412                               else
                       8555 ; rs232cmd.c 2413                               {
                       8556 ; rs232cmd.c 2414                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
001BE2 9A74FF4D        8558         CMP.W   [R7],#0FF4DH
001BE6 FB03            8559         BLT     _409
001BE8 9A7400B4        8560         CMP.W   [R7],#0B4H
001BEC FD07            8561         BLE     _410
001BEC FD07            8561         BLE     _410
001BEE                 8562 _409:
                       8563 ; rs232cmd.c 2415                                               SCPIError = DataOutOfRange;
001BEE 964842rr        8565         MOV.B   ES,#SEG( _SCPIError )
001BF2 9908rrrr        8566         MOV.W   R0,#SOF( _SCPIError )
001BF6 9A080021        8567         MOV.W   [R0],#021H
001BFA FE08            8568         BR      _416
001BFA FE08            8568         BR      _416
001BFC                 8569 _410:
                       8570 ; rs232cmd.c 2416                                       else
                       8571 ; rs232cmd.c 2417                                               SetBBScHPhase( Suffix[0], schphas
                            e);
001BFC 964842rr        8573         MOV.B   ES,#SEG( _Suffix )
001C00 9908rrrr        8574         MOV.W   R0,#SOF( _Suffix )
001C04 8A00            8575         MOV.W   R0,[R0]
001C06 8A17            8576         MOV.W   R1,[R7]
                       8577         CALL    _SetBBScHPhase
001C08 C4rrrrrr       +8577 ;       FCALL   _SetBBScHPhase
                       8578 ; rs232cmd.c 2418                               }
                       8579 ; rs232cmd.c 2419                       }
                       8580 ; rs232cmd.c 2420               }
001C0C                 8582 _416:
                       8583 ; rs232cmd.c 2421       }
001C0C A972            8585         ADDS.W  R7,#02H
001C0E D680            8587         RET
                       8589 ; rs232cmd.c 2422       
                       8590 ; rs232cmd.c 2423       /************************************************************************
                            **/
                       8591 ; rs232cmd.c 2424       /* TSGen                                                                 
                                                                                                                             
                                                                               RS232CMD.C */
                       8592 ; rs232cmd.c 2425       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8593 ; rs232cmd.c 2426       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                    */
                       8594 ; rs232cmd.c 2427       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       8595 ; rs232cmd.c 2428       /*                                                                       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 143

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                                                                                             
                                                    */
                       8596 ; rs232cmd.c 2429       /* Function:    Return the setting of a Analog-TPG.                      
                                                                                                            */
                       8597 ; rs232cmd.c 2430       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                       8598 ; rs232cmd.c 2431       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8599 ; rs232cmd.c 2432       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8600 ; rs232cmd.c 2433       /************************************************************************
                            ***/
                       8601 ; rs232cmd.c 2434       void TSGen( void)
                       8602 ; rs232cmd.c 2435       {
                       8603         ALIGN   1
                       8605         PUBLIC  _TSGen
001C10                 8606 _TSGen:
001C10 0F30            8610         PUSH.W  R4, R5
                       8614 ; rs232cmd.c 2436               char code *str;
                       8615 ; rs232cmd.c 2437       
                       8616 ; rs232cmd.c 2438               if ( CmdExecute && !SCPIError)
001C12 964842rr        8618         MOV.B   ES,#SEG( _CmdExecute )
001C16 9908rrrr        8619         MOV.W   R0,#SOF( _CmdExecute )
001C1A 8200            8620         MOV.B   R0L,[R0]
                       8621         BEQ     _433
001C1C F202           +8621 ;       BNE     _LG_474
001C1E D500D4         +8621 ;       JMP.L   _433
001C22 D500D400       +8621 ;       JMP.L   _433
001C22                +8621 _LG_474:
001C22 964842rr        8622         MOV.B   ES,#SEG( _SCPIError )
001C26 9908rrrr        8623         MOV.W   R0,#SOF( _SCPIError )
001C2A 8A00            8624         MOV.W   R0,[R0]
                       8625         BNE     _433
001C2C F302           +8625 ;       BEQ     _LG_476
001C2E D500CC         +8625 ;       JMP.L   _433
001C32 D500CC00       +8625 ;       JMP.L   _433
001C32                +8625 _LG_476:
                       8626 ; rs232cmd.c 2439               {
                       8627 ; rs232cmd.c 2440                       if ( !CmdRequest)
001C32 964842rr        8629         MOV.B   ES,#SEG( _CmdRequest )
001C36 9908rrrr        8630         MOV.W   R0,#SOF( _CmdRequest )
001C3A 8200            8631         MOV.B   R0L,[R0]
001C3C F207            8632         BNE     _422
                       8633 ; rs232cmd.c 2441                                       SCPIError = SyntaxErr;
001C3E 964842rr        8635         MOV.B   ES,#SEG( _SCPIError )
001C42 9908rrrr        8636         MOV.W   R0,#SOF( _SCPIError )
001C46 BA03            8637         MOV.W   [R0],#03H
                       8638         BR      _433
001C48 D500BF         +8638         JMP.L   _433
001C48 D500BF00       +8638         JMP.L   _433
001C4C                 8639 _422:
                       8640 ; rs232cmd.c 2442                       else
                       8641 ; rs232cmd.c 2443                       {
                       8642 ; rs232cmd.c 2444                               if ( ParCnt)
001C4C 964842rr        8644         MOV.B   ES,#SEG( _ParCnt )
001C50 9908rrrr        8645         MOV.W   R0,#SOF( _ParCnt )
001C54 8200            8646         MOV.B   R0L,[R0]
001C56 F307            8647         BEQ     _423
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 144

ADDR   CODE            LINE SOURCELINE
                       8648 ; rs232cmd.c 2445                                       SCPIError = ParNotAllowed;
001C58 964842rr        8650         MOV.B   ES,#SEG( _SCPIError )
001C5C 9908rrrr        8651         MOV.W   R0,#SOF( _SCPIError )
001C60 BA06            8652         MOV.W   [R0],#06H
                       8653         BR      _433
001C62 D500B2         +8653         JMP.L   _433
001C62 D500B200       +8653         JMP.L   _433
001C66                 8654 _423:
                       8655 ; rs232cmd.c 2446                               else
                       8656 ; rs232cmd.c 2447                               {
                       8657 ; rs232cmd.c 2448                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001C66 964842rr        8659         MOV.B   ES,#SEG( _CBSetup+2 )
001C6A 9908rrrr        8660         MOV.W   R0,#SOF( _CBSetup+2 )
001C6E 8A00            8661         MOV.W   R0,[R0]
001C70 E900000C        8662         MULU.W  R0,#0CH
001C74 8920            8663         MOV.W   R2,R0
001C76 B930            8664         MOVS.W  R3,#00H
001C78 9918rrrr        8665         MOV.W   R1,#SEG( _CBPatternPar )
001C7C 9908rrrr        8666         MOV.W   R0,#SOF( _CBPatternPar )
001C80 0902            8667         ADD.W   R0,R2
001C82 1913            8668         ADDC.W  R1,R3
001C84 862C43          8669         MOV.B   CS,R1L
001C87 8820            8670         MOVC.W  R2,[R0+]
001C89 99040000        8671         CMP.W   R0,#00H
001C8D F202            8672         BNE     _434
001C8F A64143          8673         ADDS.B  CS,#01H
001C8F A64143          8673         ADDS.B  CS,#01H
001C92                 8674 _434:
001C92 8830            8675         MOVC.W  R3,[R0+]
001C94 8953            8676         MOV.W   R5,R3
001C96 8942            8677         MOV.W   R4,R2
                       8679 ; rs232cmd.c 2449       
                       8680 ; rs232cmd.c 2450                                       while ( *str)
001C98 866C43          8682         MOV.B   CS,R3L
001C9B 8062            8683         MOVC.B  R3L,[R2+]
001C9D F312            8684         BEQ     _425
001C9D F31200          8684         BEQ     _425
001CA0                 8685 _424:
                       8686 ; rs232cmd.c 2451                                               rs232putchar( *str++);
001CA0 8915            8688         MOV.W   R1,R5
001CA2 8904            8689         MOV.W   R0,R4
001CA4 862C43          8690         MOV.B   CS,R1L
001CA7 8020            8691         MOVC.B  R1L,[R0+]
001CA9 8102            8692         MOV.B   R0L,R1L
                       8693         CALL    _rs232putchar
001CAB C4rrrrrr       +8693 ;       FCALL   _rs232putchar
001CAF 99400001        8694         ADD.W   R4,#01H
001CB3 99510000        8695         ADDC.W  R5,#00H
001CB7 8915            8699         MOV.W   R1,R5
001CB9 8904            8700         MOV.W   R0,R4
001CBB 862C43          8701         MOV.B   CS,R1L
001CBE 8020            8702         MOVC.B  R1L,[R0+]
001CC0 F2EF            8703         BNE     _424
001CC2                 8705 _425:
                       8706 ; rs232cmd.c 2452       
                       8707 ; rs232cmd.c 2453                                       rs232putchar( ',');
001CC2 91082C          8709         MOV.B   R0L,#02CH
                       8710         CALL    _rs232putchar
001CC5 C4rrrrrr       +8710 ;       FCALL   _rs232putchar
                       8711 ; rs232cmd.c 2454       
                       8712 ; rs232cmd.c 2455       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 145

ADDR   CODE            LINE SOURCELINE
                       8713 ; rs232cmd.c 2456                                       str = SystemPar[CBSetup.System].LongName;
                            
001CC9 964842rr        8715         MOV.B   ES,#SEG( _CBSetup )
001CCD 9908rrrr        8716         MOV.W   R0,#SOF( _CBSetup )
001CD1 8200            8717         MOV.B   R0L,[R0]
001CD3 E8000C          8718         MULU.B  R0L,#0CH
001CD6 8920            8719         MOV.W   R2,R0
001CD8 B930            8720         MOVS.W  R3,#00H
001CDA 9918rrrr        8721         MOV.W   R1,#SEG( _SystemPar )
001CDE 9908rrrr        8722         MOV.W   R0,#SOF( _SystemPar )
001CE2 0902            8723         ADD.W   R0,R2
001CE4 1913            8724         ADDC.W  R1,R3
001CE6 862C43          8725         MOV.B   CS,R1L
001CE9 8820            8726         MOVC.W  R2,[R0+]
001CEB 99040000        8727         CMP.W   R0,#00H
001CEF F202            8728         BNE     _435
001CF1 A64143          8729         ADDS.B  CS,#01H
001CF1 A64143          8729         ADDS.B  CS,#01H
001CF4                 8730 _435:
001CF4 8830            8731         MOVC.W  R3,[R0+]
001CF6 8953            8732         MOV.W   R5,R3
001CF8 8942            8733         MOV.W   R4,R2
                       8736 ; rs232cmd.c 2457       
                       8737 ; rs232cmd.c 2458                                       while ( *str)
001CFA 866C43          8739         MOV.B   CS,R3L
001CFD 8062            8740         MOVC.B  R3L,[R2+]
001CFF F312            8741         BEQ     _427
001CFF F31200          8741         BEQ     _427
001D02                 8742 _426:
                       8743 ; rs232cmd.c 2459                                               rs232putchar( *str++);
001D02 8915            8745         MOV.W   R1,R5
001D04 8904            8746         MOV.W   R0,R4
001D06 862C43          8747         MOV.B   CS,R1L
001D09 8020            8748         MOVC.B  R1L,[R0+]
001D0B 8102            8749         MOV.B   R0L,R1L
                       8750         CALL    _rs232putchar
001D0D C4rrrrrr       +8750 ;       FCALL   _rs232putchar
001D11 99400001        8751         ADD.W   R4,#01H
001D15 99510000        8752         ADDC.W  R5,#00H
001D19 8915            8756         MOV.W   R1,R5
001D1B 8904            8757         MOV.W   R0,R4
001D1D 862C43          8758         MOV.B   CS,R1L
001D20 8020            8759         MOVC.B  R1L,[R0+]
001D22 F2EF            8760         BNE     _426
001D24                 8762 _427:
                       8763 ; rs232cmd.c 2460       
                       8764 ; rs232cmd.c 2461                                       rs232putchar( ',');
001D24 91082C          8766         MOV.B   R0L,#02CH
                       8767         CALL    _rs232putchar
001D27 C4rrrrrr       +8767 ;       FCALL   _rs232putchar
                       8768 ; rs232cmd.c 2462       
                       8769 ; rs232cmd.c 2463       
                       8770 ; rs232cmd.c 2464                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
001D2B 964842rr        8772         MOV.B   ES,#SEG( _CBSetup )
001D2F 9908rrrr        8773         MOV.W   R0,#SOF( _CBSetup )
001D33 8200            8774         MOV.B   R0L,[R0]
001D35 964842rr        8775         MOV.B   ES,#SEG( _CBSetup+4 )
001D39 9938rrrr        8776         MOV.W   R3,#SOF( _CBSetup+4 )
001D3D 8B23            8777         MOV.W   R2,[R3+]
001D3F 8A33            8778         MOV.W   R3,[R3]
001D41 DD28            8779         ASL.D   R2,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 146

ADDR   CODE            LINE SOURCELINE
001D43 C523E2          8780         CALL    _PrintSamplesToFLT
                       8781 ; rs232cmd.c 2465       
                       8782 ; rs232cmd.c 2466       
                       8783 ; rs232cmd.c 2467                                       rs232printf( 6, ",%d,", CBSetup.ScHPhase)
                            ;
001D46 B906            8785         MOV.W   R0,#06H
001D48 964842rr        8786         MOV.B   ES,#SEG( _CBSetup+8 )
001D4C 9918rrrr        8787         MOV.W   R1,#SOF( _CBSetup+8 )
001D50 8A11            8788         MOV.W   R1,[R1]
001D52 0F02            8789         PUSH.W  R1
001D54 9938rrrr        8791         MOV.W   R3,#SEG( _421 )
001D58 9928rrrr        8792         MOV.W   R2,#SOF( _421 )
001D5C 0F0C            8793         PUSH.W  R2, R3
                       8795         CALL    _rs232printf
001D5E C4rrrrrr       +8795 ;       FCALL   _rs232printf
001D62 A976            8796         ADDS.W  R7,#06H
                       8798 ; rs232cmd.c 2468       
                       8799 ; rs232cmd.c 2469       
                       8800 ; rs232cmd.c 2470                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
001D64 964842rr        8802         MOV.B   ES,#SEG( _CBSetup+10 )
001D68 9908rrrr        8803         MOV.W   R0,#SOF( _CBSetup+10 )
001D6C 8200            8804         MOV.B   R0L,[R0]
001D6E E8000C          8805         MULU.B  R0L,#0CH
001D71 8920            8806         MOV.W   R2,R0
001D73 B930            8807         MOVS.W  R3,#00H
001D75 9918rrrr        8808         MOV.W   R1,#SEG( _EmbAudioSignalPar )
001D79 9908rrrr        8809         MOV.W   R0,#SOF( _EmbAudioSignalPar )
001D7D 0902            8810         ADD.W   R0,R2
001D7F 1913            8811         ADDC.W  R1,R3
001D81 862C43          8812         MOV.B   CS,R1L
001D84 8820            8813         MOVC.W  R2,[R0+]
001D86 99040000        8814         CMP.W   R0,#00H
001D8A F202            8815         BNE     _436
001D8C A64143          8816         ADDS.B  CS,#01H
001D8C A6414300        8816         ADDS.B  CS,#01H
001D90                 8817 _436:
001D90 8830            8818         MOVC.W  R3,[R0+]
001D92 8953            8819         MOV.W   R5,R3
001D94 8942            8820         MOV.W   R4,R2
                       8823 ; rs232cmd.c 2471       
                       8824 ; rs232cmd.c 2472                                       while ( *str)
001D96 866C43          8826         MOV.B   CS,R3L
001D99 8062            8827         MOVC.B  R3L,[R2+]
001D9B F312            8828         BEQ     _429
001D9B F31200          8828         BEQ     _429
001D9E                 8829 _428:
                       8830 ; rs232cmd.c 2473                                               rs232putchar( *str++);
001D9E 8915            8832         MOV.W   R1,R5
001DA0 8904            8833         MOV.W   R0,R4
001DA2 862C43          8834         MOV.B   CS,R1L
001DA5 8020            8835         MOVC.B  R1L,[R0+]
001DA7 8102            8836         MOV.B   R0L,R1L
                       8837         CALL    _rs232putchar
001DA9 C4rrrrrr       +8837 ;       FCALL   _rs232putchar
001DAD 99400001        8838         ADD.W   R4,#01H
001DB1 99510000        8839         ADDC.W  R5,#00H
001DB5 8915            8843         MOV.W   R1,R5
001DB7 8904            8844         MOV.W   R0,R4
001DB9 862C43          8845         MOV.B   CS,R1L
001DBC 8020            8846         MOVC.B  R1L,[R0+]
001DBE F2EF            8847         BNE     _428
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 147

ADDR   CODE            LINE SOURCELINE
001DC0                 8849 _429:
                       8850 ; rs232cmd.c 2474       
                       8851 ; rs232cmd.c 2475                                       rs232putchar( '\n');
001DC0 91080A          8853         MOV.B   R0L,#0AH
                       8854         CALL    _rs232putchar
001DC3 C4rrrrrr       +8854 ;       FCALL   _rs232putchar
                       8855 ; rs232cmd.c 2476                               }
                       8856 ; rs232cmd.c 2477                       }
                       8857 ; rs232cmd.c 2478               }
001DC8                 8859 _433:
                       8860 ; rs232cmd.c 2479       }
001DC8 2F30            8862         POP.W   R4, R5
001DCA D680            8864         RET
                       8867 ; rs232cmd.c 2480       
                       8868 ; rs232cmd.c 2481       /************************************************************************
                            **/
                       8869 ; rs232cmd.c 2482       /* TSGenPattern                                                          
                                                                                                                             
                                                 RS232CMD.C */
                       8870 ; rs232cmd.c 2483       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8871 ; rs232cmd.c 2484       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       8872 ; rs232cmd.c 2485       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       8873 ; rs232cmd.c 2486       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       8874 ; rs232cmd.c 2487       /* Function:    Handle the Colorbar pattern command.                     
                                                                                                    */
                       8875 ; rs232cmd.c 2488       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       8876 ; rs232cmd.c 2489       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       8877 ; rs232cmd.c 2490       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       8878 ; rs232cmd.c 2491       /************************************************************************
                            **/
                       8879 ; rs232cmd.c 2492       void TSGenPattern( void)
                       8880 ; rs232cmd.c 2493       {
                       8881         ALIGN   1
                       8883         PUBLIC  _TSGenPattern
001DCC                 8884 _TSGenPattern:
001DCC 0F30            8888         PUSH.W  R4, R5
                       8894 ; rs232cmd.c 2494               int pattern;
                       8895 ; rs232cmd.c 2495               char code *str;
                       8896 ; rs232cmd.c 2496       
                       8897 ; rs232cmd.c 2497               if ( CmdExecute && !SCPIError)
001DCE 964842rr        8899         MOV.B   ES,#SEG( _CmdExecute )
001DD2 9908rrrr        8900         MOV.W   R0,#SOF( _CmdExecute )
001DD6 8200            8901         MOV.B   R0L,[R0]
001DD8 F377            8902         BEQ     _449
001DDA 964842rr        8903         MOV.B   ES,#SEG( _SCPIError )
001DDE 9908rrrr        8904         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 148

ADDR   CODE            LINE SOURCELINE
001DE2 8A00            8905         MOV.W   R0,[R0]
001DE4 F271            8906         BNE     _449
                       8907 ; rs232cmd.c 2498               {
                       8908 ; rs232cmd.c 2499                       if ( CmdRequest)
001DE6 964842rr        8910         MOV.B   ES,#SEG( _CmdRequest )
001DEA 9908rrrr        8911         MOV.W   R0,#SOF( _CmdRequest )
001DEE 8200            8912         MOV.B   R0L,[R0]
001DF0 F33F            8913         BEQ     _440
                       8914 ; rs232cmd.c 2500                       {
                       8915 ; rs232cmd.c 2501                               if ( ParCnt)
001DF2 964842rr        8917         MOV.B   ES,#SEG( _ParCnt )
001DF6 9908rrrr        8918         MOV.W   R0,#SOF( _ParCnt )
001DFA 8200            8919         MOV.B   R0L,[R0]
001DFC F306            8920         BEQ     _437
                       8921 ; rs232cmd.c 2502                                       SCPIError = ParNotAllowed;
001DFE 964842rr        8923         MOV.B   ES,#SEG( _SCPIError )
001E02 9908rrrr        8924         MOV.W   R0,#SOF( _SCPIError )
001E06 BA06            8925         MOV.W   [R0],#06H
001E08 FE5F            8926         BR      _449
001E08 FE5F            8926         BR      _449
001E0A                 8927 _437:
                       8928 ; rs232cmd.c 2503                               else
                       8929 ; rs232cmd.c 2504                               {
                       8930 ; rs232cmd.c 2505                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001E0A 964842rr        8932         MOV.B   ES,#SEG( _CBSetup+2 )
001E0E 9908rrrr        8933         MOV.W   R0,#SOF( _CBSetup+2 )
001E12 8A00            8934         MOV.W   R0,[R0]
001E14 E900000C        8935         MULU.W  R0,#0CH
001E18 8920            8936         MOV.W   R2,R0
001E1A B930            8937         MOVS.W  R3,#00H
001E1C 9918rrrr        8938         MOV.W   R1,#SEG( _CBPatternPar )
001E20 9908rrrr        8939         MOV.W   R0,#SOF( _CBPatternPar )
001E24 0902            8940         ADD.W   R0,R2
001E26 1913            8941         ADDC.W  R1,R3
001E28 862C43          8942         MOV.B   CS,R1L
001E2B 8820            8943         MOVC.W  R2,[R0+]
001E2D 99040000        8944         CMP.W   R0,#00H
001E31 F202            8945         BNE     _450
001E33 A64143          8946         ADDS.B  CS,#01H
001E33 A64143          8946         ADDS.B  CS,#01H
001E36                 8947 _450:
001E36 8830            8948         MOVC.W  R3,[R0+]
001E38 8953            8949         MOV.W   R5,R3
001E3A 8942            8950         MOV.W   R4,R2
                       8952 ; rs232cmd.c 2506       
                       8953 ; rs232cmd.c 2507                                       while ( *str)
001E3C 866C43          8955         MOV.B   CS,R3L
001E3F 8062            8956         MOVC.B  R3L,[R2+]
001E41 F312            8957         BEQ     _439
001E41 F31200          8957         BEQ     _439
001E44                 8958 _438:
                       8959 ; rs232cmd.c 2508                                               rs232putchar( *str++);
001E44 8915            8961         MOV.W   R1,R5
001E46 8904            8962         MOV.W   R0,R4
001E48 862C43          8963         MOV.B   CS,R1L
001E4B 8020            8964         MOVC.B  R1L,[R0+]
001E4D 8102            8965         MOV.B   R0L,R1L
                       8966         CALL    _rs232putchar
001E4F C4rrrrrr       +8966 ;       FCALL   _rs232putchar
001E53 99400001        8967         ADD.W   R4,#01H
001E57 99510000        8968         ADDC.W  R5,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 149

ADDR   CODE            LINE SOURCELINE
001E5B 8915            8972         MOV.W   R1,R5
001E5D 8904            8973         MOV.W   R0,R4
001E5F 862C43          8974         MOV.B   CS,R1L
001E62 8020            8975         MOVC.B  R1L,[R0+]
001E64 F2EF            8976         BNE     _438
001E66                 8978 _439:
                       8979 ; rs232cmd.c 2509       
                       8980 ; rs232cmd.c 2510                                       rs232putchar('\n');
001E66 91080A          8982         MOV.B   R0L,#0AH
                       8983         CALL    _rs232putchar
001E69 C4rrrrrr       +8983 ;       FCALL   _rs232putchar
                       8984 ; rs232cmd.c 2511                               }
                       8985 ; rs232cmd.c 2512                       }
001E6D FE2D            8987         BR      _449
001E6D FE2D00          8987         BR      _449
001E70                 8988 _440:
                       8989 ; rs232cmd.c 2513                       else
                       8990 ; rs232cmd.c 2514                       {
                       8991 ; rs232cmd.c 2515                               pattern = FindParameter( Cmd, CBPatternPar);
001E70 9918rrrr        8993         MOV.W   R1,#SEG( _Cmd )
001E74 9908rrrr        8994         MOV.W   R0,#SOF( _Cmd )
001E78 9938rrrr        8995         MOV.W   R3,#SEG( _CBPatternPar )
001E7C 9928rrrr        8996         MOV.W   R2,#SOF( _CBPatternPar )
001E80 C520BC          8997         CALL    _FindParameter
                       8999 ; rs232cmd.c 2516       
                       9000 ; rs232cmd.c 2517                               if ( ParCnt != 1)
001E83 964842rr        9002         MOV.B   ES,#SEG( _ParCnt )
001E87 9918rrrr        9003         MOV.W   R1,#SOF( _ParCnt )
001E8B 8221            9004         MOV.B   R1L,[R1]
001E8D 912401          9005         CMP.B   R1L,#01H
001E90 F306            9006         BEQ     _441
                       9007 ; rs232cmd.c 2518                                       SCPIError = SyntaxErr;
001E92 964842rr        9009         MOV.B   ES,#SEG( _SCPIError )
001E96 9908rrrr        9010         MOV.W   R0,#SOF( _SCPIError )
001E9A BA03            9011         MOV.W   [R0],#03H
001E9C FE15            9012         BR      _449
001E9C FE15            9012         BR      _449
001E9E                 9013 _441:
                       9015 ; rs232cmd.c 2519                               else
                       9016 ; rs232cmd.c 2520                               {
                       9017 ; rs232cmd.c 2521                                       if ( pattern > -1)
001E9E 9904FFFF        9019         CMP.W   R0,#0FFFFH
001EA2 FD0C            9020         BLE     _442
                       9021 ; rs232cmd.c 2522                                       {
                       9022 ; rs232cmd.c 2523                                               if ( SetCBPattern( pattern) != OK
                            )
                       9024         CALL    _SetCBPattern
001EA4 C4rrrrrr       +9024 ;       FCALL   _SetCBPattern
001EA8 9904FFFF        9025         CMP.W   R0,#0FFFFH
001EAC F30D            9026         BEQ     _449
                       9027 ; rs232cmd.c 2524                                                       SCPIError = ExecErr;
001EAE 964842rr        9029         MOV.B   ES,#SEG( _SCPIError )
001EB2 9908rrrr        9030         MOV.W   R0,#SOF( _SCPIError )
001EB6 9A08001D        9031         MOV.W   [R0],#01DH
                       9032 ; rs232cmd.c 2525                                       }
001EBA FE06            9034         BR      _449
001EBA FE06            9034         BR      _449
001EBC                 9035 _442:
                       9036 ; rs232cmd.c 2526                                       else
                       9037 ; rs232cmd.c 2527                                               SCPIError = DataOutOfRange;
001EBC 964842rr        9039         MOV.B   ES,#SEG( _SCPIError )
001EC0 9908rrrr        9040         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 150

ADDR   CODE            LINE SOURCELINE
001EC4 9A080021        9041         MOV.W   [R0],#021H
                       9042 ; rs232cmd.c 2528                               }
                       9043 ; rs232cmd.c 2529                       }
                       9044 ; rs232cmd.c 2530               }
001EC8                 9046 _449:
                       9047 ; rs232cmd.c 2531       }
001EC8 2F30            9049         POP.W   R4, R5
001ECA D680            9051         RET
                       9054 ; rs232cmd.c 2532       
                       9055 ; rs232cmd.c 2533       /************************************************************************
                            **/
                       9056 ; rs232cmd.c 2534       /* TSGenSystem                                                           
                                                                                                                             
                                             RS232CMD.C     */
                       9057 ; rs232cmd.c 2535       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9058 ; rs232cmd.c 2536       /* Author:              Kim Engedahl, DEV, 98021                         
                                                                                                                             
                                    */
                       9059 ; rs232cmd.c 2537       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9060 ; rs232cmd.c 2538       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9061 ; rs232cmd.c 2539       /* Function:    Handle the Colobar system-command.                       
                                                                                                            */
                       9062 ; rs232cmd.c 2540       /* Remarks:             This command will possibly change pattern and/or 
                            delay if                */
                       9063 ; rs232cmd.c 2541       /*            these are not valid in the selected system                 
                                                                                    */
                       9064 ; rs232cmd.c 2542       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9065 ; rs232cmd.c 2543       /* Updates:        --                                                    
                                                                                                                             
                                                                                                            */
                       9066 ; rs232cmd.c 2544       /************************************************************************
                            **/
                       9067 ; rs232cmd.c 2545       void TSGenSystem( void)
                       9068 ; rs232cmd.c 2546       {
                       9069         ALIGN   1
                       9071         PUBLIC  _TSGenSystem
001ECC                 9072 _TSGenSystem:
001ECC 0F30            9076         PUSH.W  R4, R5
                       9082 ; rs232cmd.c 2547               int system;
                       9083 ; rs232cmd.c 2548               char code *str;
                       9084 ; rs232cmd.c 2549       
                       9085 ; rs232cmd.c 2550               if ( CmdExecute && !SCPIError)
001ECE 964842rr        9087         MOV.B   ES,#SEG( _CmdExecute )
001ED2 9908rrrr        9088         MOV.W   R0,#SOF( _CmdExecute )
001ED6 8200            9089         MOV.B   R0L,[R0]
001ED8 F379            9090         BEQ     _467
001EDA 964842rr        9091         MOV.B   ES,#SEG( _SCPIError )
001EDE 9908rrrr        9092         MOV.W   R0,#SOF( _SCPIError )
001EE2 8A00            9093         MOV.W   R0,[R0]
001EE4 F273            9094         BNE     _467
                       9095 ; rs232cmd.c 2551               {
                       9096 ; rs232cmd.c 2552                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 151

ADDR   CODE            LINE SOURCELINE
001EE6 964842rr        9098         MOV.B   ES,#SEG( _CmdRequest )
001EEA 9908rrrr        9099         MOV.W   R0,#SOF( _CmdRequest )
001EEE 8200            9100         MOV.B   R0L,[R0]
001EF0 F33F            9101         BEQ     _457
                       9102 ; rs232cmd.c 2553                       {
                       9103 ; rs232cmd.c 2554                               if ( ParCnt)
001EF2 964842rr        9105         MOV.B   ES,#SEG( _ParCnt )
001EF6 9908rrrr        9106         MOV.W   R0,#SOF( _ParCnt )
001EFA 8200            9107         MOV.B   R0L,[R0]
001EFC F306            9108         BEQ     _454
                       9109 ; rs232cmd.c 2555                                       SCPIError = ParNotAllowed;
001EFE 964842rr        9111         MOV.B   ES,#SEG( _SCPIError )
001F02 9908rrrr        9112         MOV.W   R0,#SOF( _SCPIError )
001F06 BA06            9113         MOV.W   [R0],#06H
001F08 FE61            9114         BR      _467
001F08 FE61            9114         BR      _467
001F0A                 9115 _454:
                       9116 ; rs232cmd.c 2556                               else
                       9117 ; rs232cmd.c 2557                               {
                       9118 ; rs232cmd.c 2558                                       str = SystemPar[CBSetup.System].LongName;
                            
001F0A 964842rr        9120         MOV.B   ES,#SEG( _CBSetup )
001F0E 9908rrrr        9121         MOV.W   R0,#SOF( _CBSetup )
001F12 8200            9122         MOV.B   R0L,[R0]
001F14 E8000C          9123         MULU.B  R0L,#0CH
001F17 8920            9124         MOV.W   R2,R0
001F19 B930            9125         MOVS.W  R3,#00H
001F1B 9918rrrr        9126         MOV.W   R1,#SEG( _SystemPar )
001F1F 9908rrrr        9127         MOV.W   R0,#SOF( _SystemPar )
001F23 0902            9128         ADD.W   R0,R2
001F25 1913            9129         ADDC.W  R1,R3
001F27 862C43          9130         MOV.B   CS,R1L
001F2A 8820            9131         MOVC.W  R2,[R0+]
001F2C 99040000        9132         CMP.W   R0,#00H
001F30 F202            9133         BNE     _468
001F32 A64143          9134         ADDS.B  CS,#01H
001F32 A6414300        9134         ADDS.B  CS,#01H
001F36                 9135 _468:
001F36 8830            9136         MOVC.W  R3,[R0+]
001F38 8953            9137         MOV.W   R5,R3
001F3A 8942            9138         MOV.W   R4,R2
                       9140 ; rs232cmd.c 2559       
                       9141 ; rs232cmd.c 2560                                       while ( *str)                            
                                                                             
001F3C 866C43          9143         MOV.B   CS,R3L
001F3F 8062            9144         MOVC.B  R3L,[R2+]
001F41 F312            9145         BEQ     _456
001F41 F31200          9145         BEQ     _456
001F44                 9146 _455:
                       9147 ; rs232cmd.c 2561                                               rs232putchar( *str++);
001F44 8915            9149         MOV.W   R1,R5
001F46 8904            9150         MOV.W   R0,R4
001F48 862C43          9151         MOV.B   CS,R1L
001F4B 8020            9152         MOVC.B  R1L,[R0+]
001F4D 8102            9153         MOV.B   R0L,R1L
                       9154         CALL    _rs232putchar
001F4F C4rrrrrr       +9154 ;       FCALL   _rs232putchar
001F53 99400001        9155         ADD.W   R4,#01H
001F57 99510000        9156         ADDC.W  R5,#00H
001F5B 8915            9160         MOV.W   R1,R5
001F5D 8904            9161         MOV.W   R0,R4
001F5F 862C43          9162         MOV.B   CS,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 152

ADDR   CODE            LINE SOURCELINE
001F62 8020            9163         MOVC.B  R1L,[R0+]
001F64 F2EF            9164         BNE     _455
001F66                 9166 _456:
                       9167 ; rs232cmd.c 2562       
                       9168 ; rs232cmd.c 2563                                       rs232putchar('\n');
001F66 91080A          9170         MOV.B   R0L,#0AH
                       9171         CALL    _rs232putchar
001F69 C4rrrrrr       +9171 ;       FCALL   _rs232putchar
                       9172 ; rs232cmd.c 2564                               }
                       9173 ; rs232cmd.c 2565                       }
001F6D FE2F            9175         BR      _467
001F6D FE2F00          9175         BR      _467
001F70                 9176 _457:
                       9177 ; rs232cmd.c 2566                       else
                       9178 ; rs232cmd.c 2567                       {
                       9179 ; rs232cmd.c 2568                               if ( ParCnt != 1)
001F70 964842rr        9181         MOV.B   ES,#SEG( _ParCnt )
001F74 9908rrrr        9182         MOV.W   R0,#SOF( _ParCnt )
001F78 8200            9183         MOV.B   R0L,[R0]
001F7A 910401          9184         CMP.B   R0L,#01H
001F7D F307            9185         BEQ     _458
                       9186 ; rs232cmd.c 2569                                       SCPIError = SyntaxErr;
001F7F 964842rr        9188         MOV.B   ES,#SEG( _SCPIError )
001F83 9908rrrr        9189         MOV.W   R0,#SOF( _SCPIError )
001F87 BA03            9190         MOV.W   [R0],#03H
001F89 FE21            9191         BR      _467
001F89 FE2100          9191         BR      _467
001F8C                 9192 _458:
                       9193 ; rs232cmd.c 2570                               else
                       9194 ; rs232cmd.c 2571                               {
                       9195 ; rs232cmd.c 2572                                       system = FindParameter( Cmd, SystemPar);
001F8C 9918rrrr        9197         MOV.W   R1,#SEG( _Cmd )
001F90 9908rrrr        9198         MOV.W   R0,#SOF( _Cmd )
001F94 9938rrrr        9199         MOV.W   R3,#SEG( _SystemPar )
001F98 9928rrrr        9200         MOV.W   R2,#SOF( _SystemPar )
001F9C C5202E          9201         CALL    _FindParameter
                       9203 ; rs232cmd.c 2573       
                       9204 ; rs232cmd.c 2574                                       if ( system == PAL_PALID)                
                                                            // If line7, (PAL w/ID) ever should
001F9F 99040001        9206         CMP.W   R0,#01H
001FA3 F208            9207         BNE     _459
                       9208 ; rs232cmd.c 2575                                               SCPIError = DataOutOfRange;      
                                                    //  be supported remove this exception
001FA5 964842rr        9210         MOV.B   ES,#SEG( _SCPIError )
001FA9 9908rrrr        9211         MOV.W   R0,#SOF( _SCPIError )
001FAD 9A080021        9212         MOV.W   [R0],#021H
001FB1 FE0D            9213         BR      _467
001FB1 FE0D00          9213         BR      _467
001FB4                 9214 _459:
                       9216 ; rs232cmd.c 2576                                       else                                     
                                    
                       9217 ; rs232cmd.c 2577                                       {
                       9218 ; rs232cmd.c 2578                                               if ( system > -1)
001FB4 9904FFFF        9220         CMP.W   R0,#0FFFFH
001FB8 FD03            9221         BLE     _460
                       9222 ; rs232cmd.c 2579                                                       SetCBSystem( system);
                       9224         CALL    _SetCBSystem
001FBA C4rrrrrr       +9224 ;       FCALL   _SetCBSystem
001FBE FE06            9225         BR      _467
001FBE FE06            9225         BR      _467
001FC0                 9226 _460:
                       9227 ; rs232cmd.c 2580                                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 153

ADDR   CODE            LINE SOURCELINE
                       9228 ; rs232cmd.c 2581                                                       SCPIError = DataOutOfRang
                            e;
001FC0 964842rr        9230         MOV.B   ES,#SEG( _SCPIError )
001FC4 9908rrrr        9231         MOV.W   R0,#SOF( _SCPIError )
001FC8 9A080021        9232         MOV.W   [R0],#021H
                       9233 ; rs232cmd.c 2582                                       }
                       9234 ; rs232cmd.c 2583                               }
                       9235 ; rs232cmd.c 2584                       }
                       9236 ; rs232cmd.c 2585               }
001FCC                 9238 _467:
                       9239 ; rs232cmd.c 2586       }
001FCC 2F30            9241         POP.W   R4, R5
001FCE D680            9243         RET
                       9246 ; rs232cmd.c 2587       
                       9247 ; rs232cmd.c 2588       /************************************************************************
                            **/
                       9248 ; rs232cmd.c 2589       /* TSGenDelay                                                            
                                                                                                                             
                                                     RS232CMD.C */
                       9249 ; rs232cmd.c 2590       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9250 ; rs232cmd.c 2591       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       9251 ; rs232cmd.c 2592       /* Revised:             000604                                           
                                                                                                                             
                                                                                    */
                       9252 ; rs232cmd.c 2593       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9253 ; rs232cmd.c 2594       /* Function:    Handle the Colorbar delay command.                       
                                                                                                            */
                       9254 ; rs232cmd.c 2595       /* Remarks:             Delay should be multiplied/divided with/by 256 to
                             conform                */
                       9255 ; rs232cmd.c 2596       /*                                              with the black burst timi
                            ng as the functions                                                             */
                       9256 ; rs232cmd.c 2597       /*                                              PrintSamplesToFLT/FLTToSa
                            mples are common to both the CBar       */
                       9257 ; rs232cmd.c 2598       /*                                              and BB timing. The CBar t
                            iming equals 1728/1716 samples                  */
                       9258 ; rs232cmd.c 2599       /*                                              (app. 37ns/sample), while
                             the BB timing equals 1728*256/         */
                       9259 ; rs232cmd.c 2600       /*                                              1716*256 samples (app. 0.
                            14 ns/sample).                                                                                  *
                            /
                       9260 ; rs232cmd.c 2601       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9261 ; rs232cmd.c 2602       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9262 ; rs232cmd.c 2603       /************************************************************************
                            **/
                       9263 ; rs232cmd.c 2604       void TSGenDelay( void)
                       9264 ; rs232cmd.c 2605       {
                       9265         ALIGN   1
                       9267         PUBLIC  _TSGenDelay
001FD0                 9268 _TSGenDelay:
001FD0 0F30            9272         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 154

ADDR   CODE            LINE SOURCELINE
001FD2 A978            9274         ADDS.W  R7,#08H
                       9281 ; rs232cmd.c 2606               int field, line;
                       9282 ; rs232cmd.c 2607               float offset;
                       9283 ; rs232cmd.c 2608               long samples;
                       9284 ; rs232cmd.c 2609       
                       9285 ; rs232cmd.c 2610               if ( CmdExecute && !SCPIError)
001FD4 964842rr        9287         MOV.B   ES,#SEG( _CmdExecute )
001FD8 9908rrrr        9288         MOV.W   R0,#SOF( _CmdExecute )
001FDC 8200            9289         MOV.B   R0L,[R0]
001FDE F37A            9290         BEQ     _482
001FE0 964842rr        9291         MOV.B   ES,#SEG( _SCPIError )
001FE4 9908rrrr        9292         MOV.W   R0,#SOF( _SCPIError )
001FE8 8A00            9293         MOV.W   R0,[R0]
001FEA F274            9294         BNE     _482
                       9295 ; rs232cmd.c 2611               {
                       9296 ; rs232cmd.c 2612                       if ( CmdRequest)
001FEC 964842rr        9298         MOV.B   ES,#SEG( _CmdRequest )
001FF0 9908rrrr        9299         MOV.W   R0,#SOF( _CmdRequest )
001FF4 8200            9300         MOV.B   R0L,[R0]
001FF6 F31E            9301         BEQ     _473
                       9302 ; rs232cmd.c 2613                       {
                       9303 ; rs232cmd.c 2614                               if ( ParCnt)
001FF8 964842rr        9305         MOV.B   ES,#SEG( _ParCnt )
001FFC 9908rrrr        9306         MOV.W   R0,#SOF( _ParCnt )
002000 8200            9307         MOV.B   R0L,[R0]
002002 F306            9308         BEQ     _472
                       9309 ; rs232cmd.c 2615                                       SCPIError = ParNotAllowed;
002004 964842rr        9311         MOV.B   ES,#SEG( _SCPIError )
002008 9908rrrr        9312         MOV.W   R0,#SOF( _SCPIError )
00200C BA06            9313         MOV.W   [R0],#06H
00200E FE62            9314         BR      _482
00200E FE62            9314         BR      _482
002010                 9315 _472:
                       9316 ; rs232cmd.c 2616                               else
                       9317 ; rs232cmd.c 2617                               {
                       9318 ; rs232cmd.c 2618                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
002010 964842rr        9320         MOV.B   ES,#SEG( _CBSetup )
002014 9908rrrr        9321         MOV.W   R0,#SOF( _CBSetup )
002018 8200            9322         MOV.B   R0L,[R0]
00201A 964842rr        9323         MOV.B   ES,#SEG( _CBSetup+4 )
00201E 9938rrrr        9324         MOV.W   R3,#SOF( _CBSetup+4 )
002022 8B23            9325         MOV.W   R2,[R3+]
002024 8A33            9326         MOV.W   R3,[R3]
002026 DD28            9327         ASL.D   R2,#08H
002028 C52270          9328         CALL    _PrintSamplesToFLT
                       9329 ; rs232cmd.c 2619       
                       9330 ; rs232cmd.c 2620                                       rs232putchar ( '\n');
00202B 91080A          9332         MOV.B   R0L,#0AH
                       9333         CALL    _rs232putchar
00202E C4rrrrrr       +9333 ;       FCALL   _rs232putchar
                       9334 ; rs232cmd.c 2621                               }
                       9335 ; rs232cmd.c 2622                       }
002032 FE50            9337         BR      _482
002032 FE50            9337         BR      _482
002034                 9338 _473:
                       9339 ; rs232cmd.c 2623                       else
                       9340 ; rs232cmd.c 2624                       {
                       9341 ; rs232cmd.c 2625                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
002034 964842rr        9343         MOV.B   ES,#SEG( _ParCnt )
002038 9908rrrr        9344         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 155

ADDR   CODE            LINE SOURCELINE
00203C 8200            9345         MOV.B   R0L,[R0]
00203E 910403          9346         CMP.B   R0L,#03H
002041 F21F            9347         BNE     _474
002043 9168rr          9348         MOV.B   R3L,#SEG( __lc_bs )
002046 7177            9349         XOR.B   R3H,R3H
002048 8927            9350         MOV.W   R2,R7
00204A 91A8rr          9351         MOV.B   R5L,#SEG( __lc_bs )
00204D 71BB            9352         XOR.B   R5H,R5H
00204F 404702          9353         LEA     R4,R7+2
002052 9128rr          9354         MOV.B   R1L,#SEG( __lc_bs )
002055 7133            9355         XOR.B   R1H,R1H
002057 400704          9356         LEA     R0,R7+4
00205A 0F03            9357         PUSH.W  R0, R1
00205C 0F30            9359         PUSH.W  R4, R5
00205E 0F0C            9361         PUSH.W  R2, R3
002060 9938rrrr        9363         MOV.W   R3,#SEG( _299 )
002064 9928rrrr        9364         MOV.W   R2,#SOF( _299 )
002068 0F0C            9365         PUSH.W  R2, R3
00206A 9918rrrr        9367         MOV.W   R1,#SEG( _Cmd )
00206E 9908rrrr        9368         MOV.W   R0,#SOF( _Cmd )
                       9369         CALL    _sscanf
002072 C4rrrrrr       +9369 ;       FCALL   _sscanf
002076 99700010        9370         ADD.W   R7,#010H
00207A 99040003        9372         CMP.W   R0,#03H
00207E F306            9373         BEQ     _475
00207E F306            9373         BEQ     _475
002080                 9374 _474:
                       9375 ; rs232cmd.c 2626                                       SCPIError = SyntaxErr;
002080 964842rr        9377         MOV.B   ES,#SEG( _SCPIError )
002084 9908rrrr        9378         MOV.W   R0,#SOF( _SCPIError )
002088 BA03            9379         MOV.W   [R0],#03H
00208A FE24            9380         BR      _482
00208A FE24            9380         BR      _482
00208C                 9381 _475:
                       9382 ; rs232cmd.c 2627                               else
                       9383 ; rs232cmd.c 2628                               {
                       9384 ; rs232cmd.c 2629                                       if (( samples = FLTToSamples( CBSetup.Sys
                            tem, field, line, offset)) == -1)
00208C 964842rr        9386         MOV.B   ES,#SEG( _CBSetup )
002090 9908rrrr        9387         MOV.W   R0,#SOF( _CBSetup )
002094 8200            9388         MOV.B   R0L,[R0]
002096 8A17            9389         MOV.W   R1,[R7]
002098 8C2702          9390         MOV.W   R2,[R7+2]
00209B 8C5706          9391         MOV.W   R5,[R7+6]
00209E 8C4704          9392         MOV.W   R4,[R7+4]
0020A1 0F30            9393         PUSH.W  R4, R5
0020A3 C51FF7          9395         CALL    _FLTToSamples
0020A6 A974            9396         ADDS.W  R7,#04H
0020A8 8931            9398         MOV.W   R3,R1
0020AA 8920            9399         MOV.W   R2,R0
0020AC 9934FFFF        9400         CMP.W   R3,#0FFFFH
0020B0 F202            9401         BNE     _485
0020B2 9924FFFF        9402         CMP.W   R2,#0FFFFH
0020B2 9924FFFF        9402         CMP.W   R2,#0FFFFH
0020B6                 9403 _485:
0020B6 F207            9404         BNE     _476
                       9405 ; rs232cmd.c 2630                                               SCPIError = ExecErr;
0020B8 964842rr        9407         MOV.B   ES,#SEG( _SCPIError )
0020BC 9908rrrr        9408         MOV.W   R0,#SOF( _SCPIError )
0020C0 9A08001D        9409         MOV.W   [R0],#01DH
0020C4 FE07            9410         BR      _482
0020C4 FE07            9410         BR      _482
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 156

ADDR   CODE            LINE SOURCELINE
0020C6                 9411 _476:
                       9412 ; rs232cmd.c 2631                                       else            
                       9413 ; rs232cmd.c 2632                                               SetCBDelay( samples/256);
0020C6 B930            9415         MOV.W   R3,#00H
0020C8 99280100        9416         MOV.W   R2,#0100H
0020CC C4rrrrrr        9417         FCALL   __SDIVL
                       9418         CALL    _SetCBDelay
0020D0 C4rrrrrr       +9418 ;       FCALL   _SetCBDelay
                       9419 ; rs232cmd.c 2633                               }
                       9420 ; rs232cmd.c 2634                       }
                       9421 ; rs232cmd.c 2635               }
0020D4                 9423 _482:
                       9424 ; rs232cmd.c 2636       }
0020D4 99700008        9426         ADD.W   R7,#08H
0020D8 2F30            9428         POP.W   R4, R5
0020DA D680            9430         RET
                       9432 ; rs232cmd.c 2637       
                       9433 ; rs232cmd.c 2638       /************************************************************************
                            **/
                       9434 ; rs232cmd.c 2639       /* TSGenScHPhase                                                         
                                                                                                                             
                                                     RS232CMD.C     */
                       9435 ; rs232cmd.c 2640       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9436 ; rs232cmd.c 2641       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       9437 ; rs232cmd.c 2642       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9438 ; rs232cmd.c 2643       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9439 ; rs232cmd.c 2644       /* Function:    Handle the Colorbar ScH-Phase-command.                   
                                                                                            */
                       9440 ; rs232cmd.c 2645       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       9441 ; rs232cmd.c 2646       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9442 ; rs232cmd.c 2647       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9443 ; rs232cmd.c 2648       /************************************************************************
                            **/
                       9444 ; rs232cmd.c 2649       void TSGenScHPhase( void)
                       9445 ; rs232cmd.c 2650       {
                       9446         ALIGN   1
                       9448         PUBLIC  _TSGenScHPhase
0020DC                 9449 _TSGenScHPhase:
0020DC A97E            9453         ADDS.W  R7,#0EH
                       9456 ; rs232cmd.c 2651               int schphase;
                       9457 ; rs232cmd.c 2652       
                       9458 ; rs232cmd.c 2653               if ( CmdExecute && !SCPIError)
0020DE 964842rr        9460         MOV.B   ES,#SEG( _CmdExecute )
0020E2 9908rrrr        9461         MOV.W   R0,#SOF( _CmdExecute )
0020E6 8200            9462         MOV.B   R0L,[R0]
0020E8 F35A            9463         BEQ     _497
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 157

ADDR   CODE            LINE SOURCELINE
0020EA 964842rr        9464         MOV.B   ES,#SEG( _SCPIError )
0020EE 9908rrrr        9465         MOV.W   R0,#SOF( _SCPIError )
0020F2 8A00            9466         MOV.W   R0,[R0]
0020F4 F254            9467         BNE     _497
                       9468 ; rs232cmd.c 2654               {
                       9469 ; rs232cmd.c 2655                       if ( CmdRequest)
0020F6 964842rr        9471         MOV.B   ES,#SEG( _CmdRequest )
0020FA 9908rrrr        9472         MOV.W   R0,#SOF( _CmdRequest )
0020FE 8200            9473         MOV.B   R0L,[R0]
002100 F31C            9474         BEQ     _487
                       9475 ; rs232cmd.c 2656                       {
                       9476 ; rs232cmd.c 2657                               if ( ParCnt)
002102 964842rr        9478         MOV.B   ES,#SEG( _ParCnt )
002106 9908rrrr        9479         MOV.W   R0,#SOF( _ParCnt )
00210A 8200            9480         MOV.B   R0L,[R0]
00210C F306            9481         BEQ     _486
                       9482 ; rs232cmd.c 2658                                       SCPIError = ParNotAllowed;
00210E 964842rr        9484         MOV.B   ES,#SEG( _SCPIError )
002112 9908rrrr        9485         MOV.W   R0,#SOF( _SCPIError )
002116 BA06            9486         MOV.W   [R0],#06H
002118 FE42            9487         BR      _497
002118 FE42            9487         BR      _497
00211A                 9488 _486:
                       9489 ; rs232cmd.c 2659                               else
                       9490 ; rs232cmd.c 2660                                       rs232printf( 6, "%d\n", CBSetup.ScHPhase)
                            ;
00211A B906            9492         MOV.W   R0,#06H
00211C 964842rr        9493         MOV.B   ES,#SEG( _CBSetup+8 )
002120 9918rrrr        9494         MOV.W   R1,#SOF( _CBSetup+8 )
002124 8A11            9495         MOV.W   R1,[R1]
002126 0F02            9496         PUSH.W  R1
002128 9938rrrr        9498         MOV.W   R3,#SEG( _9 )
00212C 9928rrrr        9499         MOV.W   R2,#SOF( _9 )
002130 0F0C            9500         PUSH.W  R2, R3
                       9502         CALL    _rs232printf
002132 C4rrrrrr       +9502 ;       FCALL   _rs232printf
002136 A976            9503         ADDS.W  R7,#06H
                       9505 ; rs232cmd.c 2661                       }
002138 FE32            9507         BR      _497
002138 FE32            9507         BR      _497
00213A                 9508 _487:
                       9509 ; rs232cmd.c 2662                       else
                       9510 ; rs232cmd.c 2663                       {
                       9511 ; rs232cmd.c 2664                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
00213A 964842rr        9513         MOV.B   ES,#SEG( _ParCnt )
00213E 9908rrrr        9514         MOV.W   R0,#SOF( _ParCnt )
002142 8200            9515         MOV.B   R0L,[R0]
002144 910401          9516         CMP.B   R0L,#01H
002147 F215            9517         BNE     _488
002149 9918rrrr        9518         MOV.W   R1,#SEG( _Cmd )
00214D 9908rrrr        9519         MOV.W   R0,#SOF( _Cmd )
002151 9168rr          9520         MOV.B   R3L,#SEG( __lc_bs )
002154 7177            9521         XOR.B   R3H,R3H
002156 8927            9522         MOV.W   R2,R7
002158 0F0C            9523         PUSH.W  R2, R3
00215A 9938rrrr        9525         MOV.W   R3,#SEG( _10 )
00215E 9928rrrr        9526         MOV.W   R2,#SOF( _10 )
002162 0F0C            9527         PUSH.W  R2, R3
                       9529         CALL    _sscanf
002164 C4rrrrrr       +9529 ;       FCALL   _sscanf
002168 99700008        9530         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 158

ADDR   CODE            LINE SOURCELINE
00216C 99040001        9532         CMP.W   R0,#01H
002170 F306            9533         BEQ     _489
002170 F306            9533         BEQ     _489
002172                 9534 _488:
                       9535 ; rs232cmd.c 2665                                       SCPIError = SyntaxErr;
002172 964842rr        9537         MOV.B   ES,#SEG( _SCPIError )
002176 9908rrrr        9538         MOV.W   R0,#SOF( _SCPIError )
00217A BA03            9539         MOV.W   [R0],#03H
00217C FE10            9540         BR      _497
00217C FE10            9540         BR      _497
00217E                 9541 _489:
                       9542 ; rs232cmd.c 2666                               else
                       9543 ; rs232cmd.c 2667                               {
                       9544 ; rs232cmd.c 2668                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
00217E 9A74FF4D        9546         CMP.W   [R7],#0FF4DH
002182 FB03            9547         BLT     _490
002184 9A7400B4        9548         CMP.W   [R7],#0B4H
002188 FD07            9549         BLE     _491
002188 FD07            9549         BLE     _491
00218A                 9550 _490:
                       9551 ; rs232cmd.c 2669                                               SCPIError = DataOutOfRange;
00218A 964842rr        9553         MOV.B   ES,#SEG( _SCPIError )
00218E 9908rrrr        9554         MOV.W   R0,#SOF( _SCPIError )
002192 9A080021        9555         MOV.W   [R0],#021H
002196 FE03            9556         BR      _497
002196 FE03            9556         BR      _497
002198                 9557 _491:
                       9558 ; rs232cmd.c 2670                                       else
                       9559 ; rs232cmd.c 2671                                               SetCBScHPhase( schphase);
002198 8A07            9561         MOV.W   R0,[R7]
                       9562         CALL    _SetCBScHPhase
00219A C4rrrrrr       +9562 ;       FCALL   _SetCBScHPhase
                       9563 ; rs232cmd.c 2672                               }
                       9564 ; rs232cmd.c 2673                       }
                       9565 ; rs232cmd.c 2674               }
00219E                 9567 _497:
                       9568 ; rs232cmd.c 2675       }
00219E A972            9570         ADDS.W  R7,#02H
0021A0 D680            9572         RET
                       9574 ; rs232cmd.c 2676       
                       9575 ; rs232cmd.c 2677       /************************************************************************
                            **/
                       9576 ; rs232cmd.c 2678       /* TSGenEmbAudioSignal                                                   
                                                                                                                             
                            RS232CMD.C      */
                       9577 ; rs232cmd.c 2679       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9578 ; rs232cmd.c 2680       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                    */
                       9579 ; rs232cmd.c 2681       /* Revised:             000727                                           
                                                                                                                             
                                                                                    */
                       9580 ; rs232cmd.c 2682       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9581 ; rs232cmd.c 2683       /* Function:    Handle the Colorbar embedded audio signal                
                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 159

ADDR   CODE            LINE SOURCELINE
                       9582 ; rs232cmd.c 2684       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       9583 ; rs232cmd.c 2685       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9584 ; rs232cmd.c 2686       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9585 ; rs232cmd.c 2687       /************************************************************************
                            **/
                       9586 ; rs232cmd.c 2688       void TSGenEmbAudioSignal( void)
                       9587 ; rs232cmd.c 2689       {
                       9588         ALIGN   1
                       9590         PUBLIC  _TSGenEmbAudioSignal
0021A2                 9591 _TSGenEmbAudioSignal:
0021A2 0F30            9595         PUSH.W  R4, R5
                       9601 ; rs232cmd.c 2690               int signal;
                       9602 ; rs232cmd.c 2691               char code *str;
                       9603 ; rs232cmd.c 2692       
                       9604 ; rs232cmd.c 2693               if ( CmdExecute && !SCPIError)
0021A4 964842rr        9606         MOV.B   ES,#SEG( _CmdExecute )
0021A8 9908rrrr        9607         MOV.W   R0,#SOF( _CmdExecute )
0021AC 8200            9608         MOV.B   R0L,[R0]
0021AE F36F            9609         BEQ     _513
0021B0 964842rr        9610         MOV.B   ES,#SEG( _SCPIError )
0021B4 9908rrrr        9611         MOV.W   R0,#SOF( _SCPIError )
0021B8 8A00            9612         MOV.W   R0,[R0]
0021BA F269            9613         BNE     _513
                       9614 ; rs232cmd.c 2694               {
                       9615 ; rs232cmd.c 2695                       if ( CmdRequest)
0021BC 964842rr        9617         MOV.B   ES,#SEG( _CmdRequest )
0021C0 9908rrrr        9618         MOV.W   R0,#SOF( _CmdRequest )
0021C4 8200            9619         MOV.B   R0L,[R0]
0021C6 F33F            9620         BEQ     _505
                       9621 ; rs232cmd.c 2696                       {
                       9622 ; rs232cmd.c 2697                               if ( ParCnt)
0021C8 964842rr        9624         MOV.B   ES,#SEG( _ParCnt )
0021CC 9908rrrr        9625         MOV.W   R0,#SOF( _ParCnt )
0021D0 8200            9626         MOV.B   R0L,[R0]
0021D2 F306            9627         BEQ     _502
                       9628 ; rs232cmd.c 2698                                       SCPIError = ParNotAllowed;
0021D4 964842rr        9630         MOV.B   ES,#SEG( _SCPIError )
0021D8 9908rrrr        9631         MOV.W   R0,#SOF( _SCPIError )
0021DC BA06            9632         MOV.W   [R0],#06H
0021DE FE57            9633         BR      _513
0021DE FE57            9633         BR      _513
0021E0                 9634 _502:
                       9635 ; rs232cmd.c 2699                               else
                       9636 ; rs232cmd.c 2700                               {
                       9637 ; rs232cmd.c 2701                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
0021E0 964842rr        9639         MOV.B   ES,#SEG( _CBSetup+10 )
0021E4 9908rrrr        9640         MOV.W   R0,#SOF( _CBSetup+10 )
0021E8 8200            9641         MOV.B   R0L,[R0]
0021EA E8000C          9642         MULU.B  R0L,#0CH
0021ED 8920            9643         MOV.W   R2,R0
0021EF B930            9644         MOVS.W  R3,#00H
0021F1 9918rrrr        9645         MOV.W   R1,#SEG( _EmbAudioSignalPar )
0021F5 9908rrrr        9646         MOV.W   R0,#SOF( _EmbAudioSignalPar )
0021F9 0902            9647         ADD.W   R0,R2
0021FB 1913            9648         ADDC.W  R1,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 160

ADDR   CODE            LINE SOURCELINE
0021FD 862C43          9649         MOV.B   CS,R1L
002200 8820            9650         MOVC.W  R2,[R0+]
002202 99040000        9651         CMP.W   R0,#00H
002206 F202            9652         BNE     _514
002208 A64143          9653         ADDS.B  CS,#01H
002208 A6414300        9653         ADDS.B  CS,#01H
00220C                 9654 _514:
00220C 8830            9655         MOVC.W  R3,[R0+]
00220E 8953            9656         MOV.W   R5,R3
002210 8942            9657         MOV.W   R4,R2
                       9659 ; rs232cmd.c 2702       
                       9660 ; rs232cmd.c 2703                                       while ( *str)
002212 866C43          9662         MOV.B   CS,R3L
002215 8062            9663         MOVC.B  R3L,[R2+]
002217 F312            9664         BEQ     _504
002217 F31200          9664         BEQ     _504
00221A                 9665 _503:
                       9666 ; rs232cmd.c 2704                                               rs232putchar( *str++);
00221A 8915            9668         MOV.W   R1,R5
00221C 8904            9669         MOV.W   R0,R4
00221E 862C43          9670         MOV.B   CS,R1L
002221 8020            9671         MOVC.B  R1L,[R0+]
002223 8102            9672         MOV.B   R0L,R1L
                       9673         CALL    _rs232putchar
002225 C4rrrrrr       +9673 ;       FCALL   _rs232putchar
002229 99400001        9674         ADD.W   R4,#01H
00222D 99510000        9675         ADDC.W  R5,#00H
002231 8915            9679         MOV.W   R1,R5
002233 8904            9680         MOV.W   R0,R4
002235 862C43          9681         MOV.B   CS,R1L
002238 8020            9682         MOVC.B  R1L,[R0+]
00223A F2EF            9683         BNE     _503
00223C                 9685 _504:
                       9686 ; rs232cmd.c 2705       
                       9687 ; rs232cmd.c 2706                                       rs232putchar('\n');
00223C 91080A          9689         MOV.B   R0L,#0AH
                       9690         CALL    _rs232putchar
00223F C4rrrrrr       +9690 ;       FCALL   _rs232putchar
                       9691 ; rs232cmd.c 2707                               }
                       9692 ; rs232cmd.c 2708                       }
002243 FE25            9694         BR      _513
002243 FE2500          9694         BR      _513
002246                 9695 _505:
                       9696 ; rs232cmd.c 2709                       else
                       9697 ; rs232cmd.c 2710                       {
                       9698 ; rs232cmd.c 2711                               if ( ParCnt != 1)
002246 964842rr        9700         MOV.B   ES,#SEG( _ParCnt )
00224A 9908rrrr        9701         MOV.W   R0,#SOF( _ParCnt )
00224E 8200            9702         MOV.B   R0L,[R0]
002250 910401          9703         CMP.B   R0L,#01H
002253 F307            9704         BEQ     _506
                       9705 ; rs232cmd.c 2712                                       SCPIError = SyntaxErr;
002255 964842rr        9707         MOV.B   ES,#SEG( _SCPIError )
002259 9908rrrr        9708         MOV.W   R0,#SOF( _SCPIError )
00225D BA03            9709         MOV.W   [R0],#03H
00225F FE17            9710         BR      _513
00225F FE1700          9710         BR      _513
002262                 9711 _506:
                       9712 ; rs232cmd.c 2713                               else
                       9713 ; rs232cmd.c 2714                               {
                       9714 ; rs232cmd.c 2715                                       signal = FindParameter( Cmd, EmbAudioSign
                            alPar);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 161

ADDR   CODE            LINE SOURCELINE
002262 9918rrrr        9716         MOV.W   R1,#SEG( _Cmd )
002266 9908rrrr        9717         MOV.W   R0,#SOF( _Cmd )
00226A 9938rrrr        9718         MOV.W   R3,#SEG( _EmbAudioSignalPar )
00226E 9928rrrr        9719         MOV.W   R2,#SOF( _EmbAudioSignalPar )
002272 C51EC3          9720         CALL    _FindParameter
                       9722 ; rs232cmd.c 2716               
                       9723 ; rs232cmd.c 2717                                       if ( signal > -1)
002275 9904FFFF        9725         CMP.W   R0,#0FFFFH
002279 FD04            9726         BLE     _507
                       9728 ; rs232cmd.c 2718                                               SetCBEmbAudioSignal( signal);
                       9730         CALL    _SetCBEmbAudioSignal
00227B C4rrrrrr       +9730 ;       FCALL   _SetCBEmbAudioSignal
00227F FE07            9731         BR      _513
00227F FE0700          9731         BR      _513
002282                 9732 _507:
                       9733 ; rs232cmd.c 2719                                       else
                       9734 ; rs232cmd.c 2720                                               SCPIError = DataOutOfRange;
002282 964842rr        9736         MOV.B   ES,#SEG( _SCPIError )
002286 9908rrrr        9737         MOV.W   R0,#SOF( _SCPIError )
00228A 9A080021        9738         MOV.W   [R0],#021H
                       9739 ; rs232cmd.c 2721                               }
                       9740 ; rs232cmd.c 2722                       }
                       9741 ; rs232cmd.c 2723               }
00228E                 9743 _513:
                       9744 ; rs232cmd.c 2724       }
00228E 2F30            9746         POP.W   R4, R5
002290 D680            9748         RET
                       9751 ; rs232cmd.c 2725       
                       9752 ; rs232cmd.c 2726       /************************************************************************
                            **/
                       9753 ; rs232cmd.c 2727       /* AudioGenOutput                                                        
                                                                                                                             
                                                 RS232CMD.C */
                       9754 ; rs232cmd.c 2728       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9755 ; rs232cmd.c 2729       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                       9756 ; rs232cmd.c 2730       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                       9757 ; rs232cmd.c 2731       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9758 ; rs232cmd.c 2732       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                       9759 ; rs232cmd.c 2733       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                       9760 ; rs232cmd.c 2734       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       9761 ; rs232cmd.c 2735       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9762 ; rs232cmd.c 2736       /************************************************************************
                            **/
                       9763 ; rs232cmd.c 2737       void AudioGenOutput( void)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 162

ADDR   CODE            LINE SOURCELINE
                       9764 ; rs232cmd.c 2738       {
                       9765         ALIGN   1
                       9767         PUBLIC  _AudioGenOutput
002292                 9768 _AudioGenOutput:
002292 0F30            9772         PUSH.W  R4, R5
                       9778 ; rs232cmd.c 2739               int output;
                       9779 ; rs232cmd.c 2740               char code *str;
                       9780 ; rs232cmd.c 2741       
                       9781 ; rs232cmd.c 2742               if ( CmdExecute && !SCPIError)
002294 964842rr        9783         MOV.B   ES,#SEG( _CmdExecute )
002298 9908rrrr        9784         MOV.W   R0,#SOF( _CmdExecute )
00229C 8200            9785         MOV.B   R0L,[R0]
00229E F377            9786         BEQ     _529
0022A0 964842rr        9787         MOV.B   ES,#SEG( _SCPIError )
0022A4 9908rrrr        9788         MOV.W   R0,#SOF( _SCPIError )
0022A8 8A00            9789         MOV.W   R0,[R0]
0022AA F271            9790         BNE     _529
                       9791 ; rs232cmd.c 2743               {
                       9792 ; rs232cmd.c 2744                       if ( CmdRequest)
0022AC 964842rr        9794         MOV.B   ES,#SEG( _CmdRequest )
0022B0 9908rrrr        9795         MOV.W   R0,#SOF( _CmdRequest )
0022B4 8200            9796         MOV.B   R0L,[R0]
0022B6 F33F            9797         BEQ     _520
                       9798 ; rs232cmd.c 2745                       {
                       9799 ; rs232cmd.c 2746                               if ( ParCnt)
0022B8 964842rr        9801         MOV.B   ES,#SEG( _ParCnt )
0022BC 9908rrrr        9802         MOV.W   R0,#SOF( _ParCnt )
0022C0 8200            9803         MOV.B   R0L,[R0]
0022C2 F306            9804         BEQ     _517
                       9805 ; rs232cmd.c 2747                                       SCPIError = ParNotAllowed;
0022C4 964842rr        9807         MOV.B   ES,#SEG( _SCPIError )
0022C8 9908rrrr        9808         MOV.W   R0,#SOF( _SCPIError )
0022CC BA06            9809         MOV.W   [R0],#06H
0022CE FE5F            9810         BR      _529
0022CE FE5F            9810         BR      _529
0022D0                 9811 _517:
                       9812 ; rs232cmd.c 2748                               else
                       9813 ; rs232cmd.c 2749                               {
                       9814 ; rs232cmd.c 2750                                       str = AudioOutputPar[AudioOutput].LongNam
                            e;
0022D0 964842rr        9816         MOV.B   ES,#SEG( _AudioOutput )
0022D4 9908rrrr        9817         MOV.W   R0,#SOF( _AudioOutput )
0022D8 8A00            9818         MOV.W   R0,[R0]
0022DA E900000C        9819         MULU.W  R0,#0CH
0022DE 8920            9820         MOV.W   R2,R0
0022E0 B930            9821         MOVS.W  R3,#00H
0022E2 9918rrrr        9822         MOV.W   R1,#SEG( _AudioOutputPar )
0022E6 9908rrrr        9823         MOV.W   R0,#SOF( _AudioOutputPar )
0022EA 0902            9824         ADD.W   R0,R2
0022EC 1913            9825         ADDC.W  R1,R3
0022EE 862C43          9826         MOV.B   CS,R1L
0022F1 8820            9827         MOVC.W  R2,[R0+]
0022F3 99040000        9828         CMP.W   R0,#00H
0022F7 F202            9829         BNE     _530
0022F9 A64143          9830         ADDS.B  CS,#01H
0022F9 A64143          9830         ADDS.B  CS,#01H
0022FC                 9831 _530:
0022FC 8830            9832         MOVC.W  R3,[R0+]
0022FE 8953            9833         MOV.W   R5,R3
002300 8942            9834         MOV.W   R4,R2
                       9836 ; rs232cmd.c 2751       
                       9837 ; rs232cmd.c 2752                                       while ( *str)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 163

ADDR   CODE            LINE SOURCELINE
002302 866C43          9839         MOV.B   CS,R3L
002305 8062            9840         MOVC.B  R3L,[R2+]
002307 F312            9841         BEQ     _519
002307 F31200          9841         BEQ     _519
00230A                 9842 _518:
                       9843 ; rs232cmd.c 2753                                               rs232putchar( *str++);
00230A 8915            9845         MOV.W   R1,R5
00230C 8904            9846         MOV.W   R0,R4
00230E 862C43          9847         MOV.B   CS,R1L
002311 8020            9848         MOVC.B  R1L,[R0+]
002313 8102            9849         MOV.B   R0L,R1L
                       9850         CALL    _rs232putchar
002315 C4rrrrrr       +9850 ;       FCALL   _rs232putchar
002319 99400001        9851         ADD.W   R4,#01H
00231D 99510000        9852         ADDC.W  R5,#00H
002321 8915            9856         MOV.W   R1,R5
002323 8904            9857         MOV.W   R0,R4
002325 862C43          9858         MOV.B   CS,R1L
002328 8020            9859         MOVC.B  R1L,[R0+]
00232A F2EF            9860         BNE     _518
00232C                 9862 _519:
                       9863 ; rs232cmd.c 2754       
                       9864 ; rs232cmd.c 2755                                       rs232putchar('\n');
00232C 91080A          9866         MOV.B   R0L,#0AH
                       9867         CALL    _rs232putchar
00232F C4rrrrrr       +9867 ;       FCALL   _rs232putchar
                       9868 ; rs232cmd.c 2756                               }
                       9869 ; rs232cmd.c 2757                       }
002333 FE2D            9871         BR      _529
002333 FE2D00          9871         BR      _529
002336                 9872 _520:
                       9873 ; rs232cmd.c 2758                       else
                       9874 ; rs232cmd.c 2759                       {
                       9875 ; rs232cmd.c 2760                               if ( ParCnt != 1)
002336 964842rr        9877         MOV.B   ES,#SEG( _ParCnt )
00233A 9908rrrr        9878         MOV.W   R0,#SOF( _ParCnt )
00233E 8200            9879         MOV.B   R0L,[R0]
002340 910401          9880         CMP.B   R0L,#01H
002343 F307            9881         BEQ     _521
                       9882 ; rs232cmd.c 2761                                       SCPIError = SyntaxErr;
002345 964842rr        9884         MOV.B   ES,#SEG( _SCPIError )
002349 9908rrrr        9885         MOV.W   R0,#SOF( _SCPIError )
00234D BA03            9886         MOV.W   [R0],#03H
00234F FE1F            9887         BR      _529
00234F FE1F00          9887         BR      _529
002352                 9888 _521:
                       9889 ; rs232cmd.c 2762                               else
                       9890 ; rs232cmd.c 2763                               {
                       9891 ; rs232cmd.c 2764                                       output = FindParameter( Cmd, AudioOutputP
                            ar);
002352 9918rrrr        9893         MOV.W   R1,#SEG( _Cmd )
002356 9908rrrr        9894         MOV.W   R0,#SOF( _Cmd )
00235A 9938rrrr        9895         MOV.W   R3,#SEG( _AudioOutputPar )
00235E 9928rrrr        9896         MOV.W   R2,#SOF( _AudioOutputPar )
002362 C51E4B          9897         CALL    _FindParameter
                       9899 ; rs232cmd.c 2765               
                       9900 ; rs232cmd.c 2766                                       if ( output > -1)
002365 9904FFFF        9902         CMP.W   R0,#0FFFFH
002369 FD0C            9903         BLE     _522
                       9904 ; rs232cmd.c 2767                                       {
                       9905 ; rs232cmd.c 2768                                               if ( SetAudioOutput( output) == F
                            AIL)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 164

ADDR   CODE            LINE SOURCELINE
                       9907         CALL    _SetAudioOutput
00236B C4rrrrrr       +9907 ;       FCALL   _SetAudioOutput
00236F 6900            9909         OR.W    R0,R0
002371 F20E            9910         BNE     _529
                       9911 ; rs232cmd.c 2769                                                       SCPIError = ExecErr;
002373 964842rr        9913         MOV.B   ES,#SEG( _SCPIError )
002377 9908rrrr        9914         MOV.W   R0,#SOF( _SCPIError )
00237B 9A08001D        9915         MOV.W   [R0],#01DH
                       9916 ; rs232cmd.c 2770                                       }
00237F FE07            9918         BR      _529
00237F FE0700          9918         BR      _529
002382                 9919 _522:
                       9920 ; rs232cmd.c 2771                                       else
                       9921 ; rs232cmd.c 2772                                               SCPIError = DataOutOfRange;
002382 964842rr        9923         MOV.B   ES,#SEG( _SCPIError )
002386 9908rrrr        9924         MOV.W   R0,#SOF( _SCPIError )
00238A 9A080021        9925         MOV.W   [R0],#021H
                       9926 ; rs232cmd.c 2773                               }
                       9927 ; rs232cmd.c 2774                       }
                       9928 ; rs232cmd.c 2775               }
00238E                 9930 _529:
                       9931 ; rs232cmd.c 2776       }
00238E 2F30            9933         POP.W   R4, R5
002390 D680            9935         RET
                       9938 ; rs232cmd.c 2777       
                       9939 ; rs232cmd.c 2778       /************************************************************************
                            **/
                       9940 ; rs232cmd.c 2779       /* AudioGenAnalog                                                        
                                                                                                                             
                                                 RS232CMD.C */
                       9941 ; rs232cmd.c 2780       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9942 ; rs232cmd.c 2781       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                    */
                       9943 ; rs232cmd.c 2782       /* Revised:             000705                                           
                                                                                                                             
                                                                                    */
                       9944 ; rs232cmd.c 2783       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       9945 ; rs232cmd.c 2784       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                       9946 ; rs232cmd.c 2785       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                       9947 ; rs232cmd.c 2786       /* Returns:       --                                                     
                                                                                                                             
                                                                                                            */
                       9948 ; rs232cmd.c 2787       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                       9949 ; rs232cmd.c 2788       /************************************************************************
                            **/
                       9950 ; rs232cmd.c 2789       void AudioGenAnalog( void)
                       9951 ; rs232cmd.c 2790       {
                       9952         ALIGN   1
                       9954         PUBLIC  _AudioGenAnalog
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 165

ADDR   CODE            LINE SOURCELINE
002392                 9955 _AudioGenAnalog:
002392 0F70            9959         PUSH.W  R4, R5, R6
                       9965 ; rs232cmd.c 2791               char code *str;
                       9966 ; rs232cmd.c 2792               int level;
                       9967 ; rs232cmd.c 2793       
                       9968 ; rs232cmd.c 2794               if ( CmdExecute && !SCPIError)
002394 964842rr        9970         MOV.B   ES,#SEG( _CmdExecute )
002398 9908rrrr        9971         MOV.W   R0,#SOF( _CmdExecute )
00239C 8200            9972         MOV.B   R0L,[R0]
                       9973         BEQ     _605
00239E F202           +9973 ;       BNE     _LG_610
0023A0 D500F6         +9973 ;       JMP.L   _605
0023A4 D500F600       +9973 ;       JMP.L   _605
0023A4                +9973 _LG_610:
0023A4 964842rr        9974         MOV.B   ES,#SEG( _SCPIError )
0023A8 9908rrrr        9975         MOV.W   R0,#SOF( _SCPIError )
0023AC 8A00            9976         MOV.W   R0,[R0]
                       9977         BNE     _605
0023AE F302           +9977 ;       BEQ     _LG_612
0023B0 D500EE         +9977 ;       JMP.L   _605
0023B4 D500EE00       +9977 ;       JMP.L   _605
0023B4                +9977 _LG_612:
                       9978 ; rs232cmd.c 2795               {
                       9979 ; rs232cmd.c 2796                       if ( !CmdRequest)
0023B4 964842rr        9981         MOV.B   ES,#SEG( _CmdRequest )
0023B8 9908rrrr        9982         MOV.W   R0,#SOF( _CmdRequest )
0023BC 8200            9983         MOV.B   R0L,[R0]
0023BE F207            9984         BNE     _534
                       9985 ; rs232cmd.c 2797                                       SCPIError = SyntaxErr;
0023C0 964842rr        9987         MOV.B   ES,#SEG( _SCPIError )
0023C4 9908rrrr        9988         MOV.W   R0,#SOF( _SCPIError )
0023C8 BA03            9989         MOV.W   [R0],#03H
                       9990         BR      _605
0023CA D500E1         +9990         JMP.L   _605
0023CA D500E100       +9990         JMP.L   _605
0023CE                 9991 _534:
                       9993 ; rs232cmd.c 2798                       else
                       9994 ; rs232cmd.c 2799                       {
                       9995 ; rs232cmd.c 2800                               if ( ParCnt)
0023CE 964842rr        9997         MOV.B   ES,#SEG( _ParCnt )
0023D2 9908rrrr        9998         MOV.W   R0,#SOF( _ParCnt )
0023D6 8200            9999         MOV.B   R0L,[R0]
0023D8 F307           10000         BEQ     _535
                      10001 ; rs232cmd.c 2801                                       SCPIError = ParNotAllowed;
0023DA 964842rr       10003         MOV.B   ES,#SEG( _SCPIError )
0023DE 9908rrrr       10004         MOV.W   R0,#SOF( _SCPIError )
0023E2 BA06           10005         MOV.W   [R0],#06H
                      10006         BR      _605
0023E4 D500D4         +10006         JMP.L   _605
0023E4 D500D400       +10006         JMP.L   _605
0023E8                10007 _535:
000000                10009 RS232CMD_IR     SEGMENT HCODE INSEGMENT ROMDATA
000000                10010         RSEG    RS232CMD_IR
                      10011         ALIGN   1
000000                10012 __swtable607:
000000 rrrrrrrrrrrrrr 10013         DW      SOF _538,SEG _538
       rrrrrrrrrrrrrr       
       rrrr                 
000004 rrrrrrrrrrrrrr 10014         DW      SOF _539,SEG _539
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 166

ADDR   CODE            LINE SOURCELINE
000008 rrrrrrrrrrrrrr 10015         DW      SOF _540,SEG _540
       rrrrrrrrrrrrrr       
       rrrr                 
00000C rrrrrrrrrrrrrr 10016         DW      SOF _541,SEG _541
       rrrrrrrrrrrrrr       
       rrrr                 
000010 rrrrrrrrrrrrrr 10017         DW      SOF _542,SEG _542
       rrrrrrrrrrrrrr       
       rrrr                 
000014 rrrrrrrrrrrrrr 10018         DW      SOF _543,SEG _543
       rrrrrrrrrrrrrr       
       rrrr                 
000018 rrrrrrrrrrrrrr 10019         DW      SOF _544,SEG _544
       rrrrrrrrrrrrrr       
       rrrr                 
00001C rrrrrrrrrrrrrr 10020         DW      SOF _545,SEG _545
       rrrrrrrrrrrrrr       
       rrrr                 
000020 rrrrrrrrrrrrrr 10021         DW      SOF _546,SEG _546
       rrrrrrrrrrrrrr       
       rrrr                 
000024 rrrrrrrrrrrrrr 10022         DW      SOF _547,SEG _547
       rrrrrrrrrrrrrr       
       rrrr                 
000028 rrrrrrrrrrrrrr 10023         DW      SOF _548,SEG _548
       rrrrrrrrrrrrrr       
       rrrr                 
00002C rrrrrrrrrrrrrr 10024         DW      SOF _549,SEG _549
       rrrrrrrrrrrrrr       
       rrrr                 
000030 rrrrrrrrrrrrrr 10025         DW      SOF _550,SEG _550
       rrrrrrrrrrrrrr       
       rrrr                 
000034 rrrrrrrrrrrrrr 10026         DW      SOF _551,SEG _551
       rrrrrrrrrrrrrr       
       rrrr                 
000038 rrrrrrrrrrrrrr 10027         DW      SOF _552,SEG _552
       rrrrrrrrrrrrrr       
       rrrr                 
00003C rrrrrrrrrrrrrr 10028         DW      SOF _553,SEG _553
       rrrrrrrrrrrrrr       
       rrrr                 
000040 rrrrrrrrrrrrrr 10029         DW      SOF _554,SEG _554
       rrrrrrrrrrrrrr       
       rrrr                 
000044 rrrrrrrrrrrrrr 10030         DW      SOF _555,SEG _555
       rrrrrrrrrrrrrr       
       rrrr                 
000048 rrrrrrrrrrrrrr 10031         DW      SOF _556,SEG _556
       rrrrrrrrrrrrrr       
       rrrr                 
00004C rrrrrrrrrrrrrr 10032         DW      SOF _557,SEG _557
       rrrrrrrrrrrrrr       
       rrrr                 
000050 rrrrrrrrrrrrrr 10033         DW      SOF _558,SEG _558
       rrrrrrrrrrrrrr       
       rrrr                 
000054 rrrrrrrrrrrrrr 10034         DW      SOF _559,SEG _559
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 167

ADDR   CODE            LINE SOURCELINE
000058 rrrrrrrrrrrrrr 10035         DW      SOF _560,SEG _560
       rrrrrrrrrrrrrr       
       rrrr                 
00005C rrrrrrrrrrrrrr 10036         DW      SOF _561,SEG _561
       rrrrrrrrrrrrrr       
       rrrr                 
000060 rrrrrrrrrrrrrr 10037         DW      SOF _562,SEG _562
       rrrrrrrrrrrrrr       
       rrrr                 
000064 rrrrrrrrrrrrrr 10038         DW      SOF _563,SEG _563
       rrrrrrrrrrrrrr       
       rrrr                 
000068 rrrrrrrrrrrrrr 10039         DW      SOF _564,SEG _564
       rrrrrrrrrrrrrr       
       rrrr                 
00006C rrrrrrrrrrrrrr 10040         DW      SOF _565,SEG _565
       rrrrrrrrrrrrrr       
       rrrr                 
000070 rrrrrrrrrrrrrr 10041         DW      SOF _566,SEG _566
       rrrrrrrrrrrrrr       
       rrrr                 
000074 rrrrrrrrrrrrrr 10042         DW      SOF _567,SEG _567
       rrrrrrrrrrrrrr       
       rrrr                 
0023E8                10043         RSEG    RS232CMD_PR
                      10045 ; rs232cmd.c 2802                               else
                      10046 ; rs232cmd.c 2803                               {
                      10047 ; rs232cmd.c 2804                                       str = AudioSignalPar[AudioSetup[AnalogAud
                            io].Signal].LongName;
0023E8 964842rr       10049         MOV.B   ES,#SEG( _AudioSetup+2 )
0023EC 9908rrrr       10050         MOV.W   R0,#SOF( _AudioSetup+2 )
0023F0 8A00           10051         MOV.W   R0,[R0]
0023F2 E900000C       10052         MULU.W  R0,#0CH
0023F6 8920           10053         MOV.W   R2,R0
0023F8 B930           10054         MOVS.W  R3,#00H
0023FA 9918rrrr       10055         MOV.W   R1,#SEG( _AudioSignalPar )
0023FE 9908rrrr       10056         MOV.W   R0,#SOF( _AudioSignalPar )
002402 0902           10057         ADD.W   R0,R2
002404 1913           10058         ADDC.W  R1,R3
002406 862C43         10059         MOV.B   CS,R1L
002409 8820           10060         MOVC.W  R2,[R0+]
00240B 99040000       10061         CMP.W   R0,#00H
00240F F202           10062         BNE     _606
002411 A64143         10063         ADDS.B  CS,#01H
002411 A64143         10063         ADDS.B  CS,#01H
002414                10064 _606:
002414 8830           10065         MOVC.W  R3,[R0+]
002416 8953           10066         MOV.W   R5,R3
002418 8942           10067         MOV.W   R4,R2
                      10069 ; rs232cmd.c 2805       
                      10070 ; rs232cmd.c 2806                                       while ( *str)
00241A 866C43         10072         MOV.B   CS,R3L
00241D 8062           10073         MOVC.B  R3L,[R2+]
00241F F312           10074         BEQ     _537
00241F F31200         10074         BEQ     _537
002422                10075 _536:
                      10076 ; rs232cmd.c 2807                                               rs232putchar( *str++);
002422 8915           10078         MOV.W   R1,R5
002424 8904           10079         MOV.W   R0,R4
002426 862C43         10080         MOV.B   CS,R1L
002429 8020           10081         MOVC.B  R1L,[R0+]
00242B 8102           10082         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 168

ADDR   CODE            LINE SOURCELINE
                      10083         CALL    _rs232putchar
00242D C4rrrrrr       +10083 ;       FCALL   _rs232putchar
002431 99400001       10084         ADD.W   R4,#01H
002435 99510000       10085         ADDC.W  R5,#00H
002439 8915           10089         MOV.W   R1,R5
00243B 8904           10090         MOV.W   R0,R4
00243D 862C43         10091         MOV.B   CS,R1L
002440 8020           10092         MOVC.B  R1L,[R0+]
002442 F2EF           10093         BNE     _536
002444                10095 _537:
                      10096 ; rs232cmd.c 2808       
                      10097 ; rs232cmd.c 2809                                       rs232putchar(',');
002444 91082C         10099         MOV.B   R0L,#02CH
                      10100         CALL    _rs232putchar
002447 C4rrrrrr       +10100 ;       FCALL   _rs232putchar
                      10101 ; rs232cmd.c 2810       
                      10102 ; rs232cmd.c 2811                                       str = NULL;
00244B B950           10104         MOV.W   R5,#00H
00244D B940           10105         MOV.W   R4,#00H
                      10108 ; rs232cmd.c 2812       
                      10109 ; rs232cmd.c 2813                                       switch ( AudioSetup[AnalogAudio].Level)
00244F 964842rr       10111         MOV.B   ES,#SEG( _AudioSetup+4 )
002453 9908rrrr       10112         MOV.W   R0,#SOF( _AudioSetup+4 )
002457 8A00           10113         MOV.W   R0,[R0]
002459 A90F           10114         ADDS.W  R0,#0FH
00245B 9904001D       10115         CMP.W   R0,#01DH
00245F F85D           10116         BG      _568
002461 D902           10117         ASL.W   R0,#02H
002463 964843rr       10118         MOV.B   CS,#SEG( __swtable607 )
002467 9900rrrr       10119         ADD.W   R0,#SOF( __swtable607 )
00246B 8810           10120         MOVC.W  R1,[R0+]
00246D 0F02           10121         PUSH.W  R1
00246F 8810           10122         MOVC.W  R1,[R0+]
002471 0F02           10123         PUSH.W  R1
002473 D680           10124         RET
                      10125 ; rs232cmd.c 2814                                       {
                      10126 ; rs232cmd.c 2815                                               case P10dBm:
002476                10128 _538:
                      10129 ; rs232cmd.c 2816                                                       level = 10;
002476 9968000A       10131         MOV.W   R6,#0AH
                      10134 ; rs232cmd.c 2817                                                       break;
00247A FE6E           10136         BR      _600
                      10137 ; rs232cmd.c 2818       
                      10138 ; rs232cmd.c 2819                                               case P8dBm:
00247C                10140 _539:
                      10141 ; rs232cmd.c 2820                                                       level = 8;
00247C 99680008       10143         MOV.W   R6,#08H
                      10146 ; rs232cmd.c 2821                                                       break;
002480 FE6B           10148         BR      _600
                      10149 ; rs232cmd.c 2822       
                      10150 ; rs232cmd.c 2823                                               case P7dBm:
002482                10152 _540:
                      10153 ; rs232cmd.c 2824                                                       level = 7;
002482 B967           10155         MOV.W   R6,#07H
                      10158 ; rs232cmd.c 2825                                                       break;
002484 FE69           10160         BR      _600
                      10161 ; rs232cmd.c 2826       
                      10162 ; rs232cmd.c 2827                                               case P6dBm:
002486                10164 _541:
                      10165 ; rs232cmd.c 2828                                                       level = 6;
002486 B966           10167         MOV.W   R6,#06H
                      10170 ; rs232cmd.c 2829                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 169

ADDR   CODE            LINE SOURCELINE
002488 FE67           10172         BR      _600
                      10173 ; rs232cmd.c 2830       
                      10174 ; rs232cmd.c 2831                                               case P5dBm:
00248A                10176 _542:
                      10177 ; rs232cmd.c 2832                                                       level = 5;
00248A B965           10179         MOV.W   R6,#05H
                      10182 ; rs232cmd.c 2833                                                       break;
00248C FE65           10184         BR      _600
                      10185 ; rs232cmd.c 2834       
                      10186 ; rs232cmd.c 2835                                               case P4dBm:
00248E                10188 _543:
                      10189 ; rs232cmd.c 2836                                                       level = 4;
00248E B964           10191         MOV.W   R6,#04H
                      10194 ; rs232cmd.c 2837                                                       break;
002490 FE63           10196         BR      _600
                      10197 ; rs232cmd.c 2838       
                      10198 ; rs232cmd.c 2839                                               case P3dBm:
002492                10200 _544:
                      10201 ; rs232cmd.c 2840                                                       level = 3;
002492 B963           10203         MOV.W   R6,#03H
                      10206 ; rs232cmd.c 2841                                                       break;
002494 FE61           10208         BR      _600
                      10209 ; rs232cmd.c 2842       
                      10210 ; rs232cmd.c 2843                                               case P2dBm:
002496                10212 _545:
                      10213 ; rs232cmd.c 2844                                                       level = 2;
002496 B962           10215         MOV.W   R6,#02H
                      10218 ; rs232cmd.c 2845                                                       break;
002498 FE5F           10220         BR      _600
                      10221 ; rs232cmd.c 2846       
                      10222 ; rs232cmd.c 2847                                               case P1dBm:
00249A                10224 _546:
                      10225 ; rs232cmd.c 2848                                                       level = 1;
00249A B961           10227         MOV.W   R6,#01H
                      10230 ; rs232cmd.c 2849                                                       break;
00249C FE5D           10232         BR      _600
                      10233 ; rs232cmd.c 2850       
                      10234 ; rs232cmd.c 2851                                               case M0dBm:
00249E                10236 _547:
                      10237 ; rs232cmd.c 2852                                                       level = 0;
00249E B960           10239         MOV.W   R6,#00H
                      10242 ; rs232cmd.c 2853                                                       break;
0024A0 FE5B           10244         BR      _600
                      10245 ; rs232cmd.c 2854       
                      10246 ; rs232cmd.c 2855                                               case M1dBm:
0024A2                10248 _548:
                      10249 ; rs232cmd.c 2856                                                       level = -1;
0024A2 9968FFFF       10251         MOV.W   R6,#0FFFFH
                      10254 ; rs232cmd.c 2857                                                       break;
0024A6 FE58           10256         BR      _600
                      10257 ; rs232cmd.c 2858       
                      10258 ; rs232cmd.c 2859                                               case M2dBm:
0024A8                10260 _549:
                      10261 ; rs232cmd.c 2860                                                       level = -2;
0024A8 9968FFFE       10263         MOV.W   R6,#0FFFEH
                      10266 ; rs232cmd.c 2861                                                       break;
0024AC FE55           10268         BR      _600
                      10269 ; rs232cmd.c 2862       
                      10270 ; rs232cmd.c 2863                                               case M3dBm:
0024AE                10272 _550:
                      10273 ; rs232cmd.c 2864                                                       level = -3;
0024AE 9968FFFD       10275         MOV.W   R6,#0FFFDH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 170

ADDR   CODE            LINE SOURCELINE
                      10278 ; rs232cmd.c 2865                                                       break;
0024B2 FE52           10280         BR      _600
                      10281 ; rs232cmd.c 2866       
                      10282 ; rs232cmd.c 2867                                               case M4dBm:
0024B4                10284 _551:
                      10285 ; rs232cmd.c 2868                                                       level = -4;
0024B4 9968FFFC       10287         MOV.W   R6,#0FFFCH
                      10290 ; rs232cmd.c 2869                                                       break;
0024B8 FE4F           10292         BR      _600
                      10293 ; rs232cmd.c 2870       
                      10294 ; rs232cmd.c 2871                                               case M5dBm:
0024BA                10296 _552:
                      10297 ; rs232cmd.c 2872                                                       level = -5;
0024BA 9968FFFB       10299         MOV.W   R6,#0FFFBH
                      10302 ; rs232cmd.c 2873                                                       break;
0024BE FE4C           10304         BR      _600
                      10305 ; rs232cmd.c 2874       
                      10306 ; rs232cmd.c 2875                                               case M6dBm:
0024C0                10308 _553:
                      10309 ; rs232cmd.c 2876                                                       level = -6;
0024C0 9968FFFA       10311         MOV.W   R6,#0FFFAH
                      10314 ; rs232cmd.c 2877                                                       break;
0024C4 FE49           10316         BR      _600
                      10317 ; rs232cmd.c 2878       
                      10318 ; rs232cmd.c 2879                                               case M7dBm:
0024C6                10320 _554:
                      10321 ; rs232cmd.c 2880                                                       level = -7;
0024C6 9968FFF9       10323         MOV.W   R6,#0FFF9H
                      10326 ; rs232cmd.c 2881                                                       break;
0024CA FE46           10328         BR      _600
                      10329 ; rs232cmd.c 2882       
                      10330 ; rs232cmd.c 2883                                               case M8dBm:
0024CC                10332 _555:
                      10333 ; rs232cmd.c 2884                                                       level = -8;
0024CC 9968FFF8       10335         MOV.W   R6,#0FFF8H
                      10338 ; rs232cmd.c 2885                                                       break;
0024D0 FE43           10340         BR      _600
                      10341 ; rs232cmd.c 2886       
                      10342 ; rs232cmd.c 2887                                               case M9dBm:
0024D2                10344 _556:
                      10345 ; rs232cmd.c 2888                                                       level = -9;
0024D2 9968FFF7       10347         MOV.W   R6,#0FFF7H
                      10350 ; rs232cmd.c 2889                                                       break;
0024D6 FE40           10352         BR      _600
                      10353 ; rs232cmd.c 2890       
                      10354 ; rs232cmd.c 2891                                               case M10dBm:
0024D8                10356 _557:
                      10357 ; rs232cmd.c 2892                                                       level = -10;
0024D8 9968FFF6       10359         MOV.W   R6,#0FFF6H
                      10362 ; rs232cmd.c 2893                                                       break;
0024DC FE3D           10364         BR      _600
                      10365 ; rs232cmd.c 2894       
                      10366 ; rs232cmd.c 2895                                               case M11dBm:
0024DE                10368 _558:
                      10369 ; rs232cmd.c 2896                                                       level = -11;
0024DE 9968FFF5       10371         MOV.W   R6,#0FFF5H
                      10374 ; rs232cmd.c 2897                                                       break;
0024E2 FE3A           10376         BR      _600
                      10377 ; rs232cmd.c 2898       
                      10378 ; rs232cmd.c 2899                                               case M12dBm:
0024E4                10380 _559:
                      10381 ; rs232cmd.c 2900                                                       level = -12;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 171

ADDR   CODE            LINE SOURCELINE
0024E4 9968FFF4       10383         MOV.W   R6,#0FFF4H
                      10386 ; rs232cmd.c 2901                                                       break;
0024E8 FE37           10388         BR      _600
                      10389 ; rs232cmd.c 2902       
                      10390 ; rs232cmd.c 2903                                               case M15dBm:
0024EA                10392 _560:
                      10393 ; rs232cmd.c 2904                                                       level = -15;
0024EA 9968FFF1       10395         MOV.W   R6,#0FFF1H
                      10398 ; rs232cmd.c 2905                                                       break;
0024EE FE34           10400         BR      _600
                      10401 ; rs232cmd.c 2906       
                      10402 ; rs232cmd.c 2907                                               case M18dBm:
0024F0                10404 _561:
                      10405 ; rs232cmd.c 2908                                                       level = -18;
0024F0 9968FFEE       10407         MOV.W   R6,#0FFEEH
                      10410 ; rs232cmd.c 2909                                                       break;
0024F4 FE31           10412         BR      _600
                      10413 ; rs232cmd.c 2910       
                      10414 ; rs232cmd.c 2911                                               case M21dBm:
0024F6                10416 _562:
                      10417 ; rs232cmd.c 2912                                                       level = -21;
0024F6 9968FFEB       10419         MOV.W   R6,#0FFEBH
                      10422 ; rs232cmd.c 2913                                                       break;
0024FA FE2E           10424         BR      _600
                      10425 ; rs232cmd.c 2914       
                      10426 ; rs232cmd.c 2915                                               case M24dBm:
0024FC                10428 _563:
                      10429 ; rs232cmd.c 2916                                                       level = -24;
0024FC 9968FFE8       10431         MOV.W   R6,#0FFE8H
                      10434 ; rs232cmd.c 2917                                                       break;
002500 FE2B           10436         BR      _600
                      10437 ; rs232cmd.c 2918       
                      10438 ; rs232cmd.c 2919                                               case M27dBm:
002502                10440 _564:
                      10441 ; rs232cmd.c 2920                                                       level = -27;
002502 9968FFE5       10443         MOV.W   R6,#0FFE5H
                      10446 ; rs232cmd.c 2921                                                       break;
002506 FE28           10448         BR      _600
                      10449 ; rs232cmd.c 2922       
                      10450 ; rs232cmd.c 2923                                               case M30dBm:
002508                10452 _565:
                      10453 ; rs232cmd.c 2924                                                       level = -30;
002508 9968FFE2       10455         MOV.W   R6,#0FFE2H
                      10458 ; rs232cmd.c 2925                                                       break;
00250C FE25           10460         BR      _600
                      10461 ; rs232cmd.c 2926       
                      10462 ; rs232cmd.c 2927                                               case M33dBm:
00250E                10464 _566:
                      10465 ; rs232cmd.c 2928                                                       level = -33;
00250E 9968FFDF       10467         MOV.W   R6,#0FFDFH
                      10470 ; rs232cmd.c 2929                                                       break;
002512 FE22           10472         BR      _600
                      10473 ; rs232cmd.c 2930       
                      10474 ; rs232cmd.c 2931                                               case M36dBm:
002514                10476 _567:
                      10477 ; rs232cmd.c 2932                                                       level = -36;
002514 9968FFDC       10479         MOV.W   R6,#0FFDCH
                      10482 ; rs232cmd.c 2933                                                       break;
002518 FE1F           10484         BR      _600
                      10485 ; rs232cmd.c 2934       
                      10486 ; rs232cmd.c 2935                                               default:
00251A                10488 _568:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 172

ADDR   CODE            LINE SOURCELINE
                      10489 ; rs232cmd.c 2936                                                       str = SILENCEParTxt;
00251A 9958rrrr       10491         MOV.W   R5,#SEG( _SILENCEParTxt )
00251E 9948rrrr       10492         MOV.W   R4,#SOF( _SILENCEParTxt )
                      10495 ; rs232cmd.c 2937       
                      10496 ; rs232cmd.c 2938                                                       while ( *str)
002522 8915           10498         MOV.W   R1,R5
002524 8904           10499         MOV.W   R0,R4
002526 862C43         10500         MOV.B   CS,R1L
002529 8020           10501         MOVC.B  R1L,[R0+]
00252B F312           10502         BEQ     _570
00252B F31200         10502         BEQ     _570
00252E                10503 _569:
                      10504 ; rs232cmd.c 2939                                                               rs232putchar( *st
                            r++);
00252E 8915           10506         MOV.W   R1,R5
002530 8904           10507         MOV.W   R0,R4
002532 862C43         10508         MOV.B   CS,R1L
002535 8020           10509         MOVC.B  R1L,[R0+]
002537 8102           10510         MOV.B   R0L,R1L
                      10511         CALL    _rs232putchar
002539 C4rrrrrr       +10511 ;       FCALL   _rs232putchar
00253D 99400001       10512         ADD.W   R4,#01H
002541 99510000       10513         ADDC.W  R5,#00H
002545 8915           10517         MOV.W   R1,R5
002547 8904           10518         MOV.W   R0,R4
002549 862C43         10519         MOV.B   CS,R1L
00254C 8020           10520         MOVC.B  R1L,[R0+]
00254E F2EF           10521         BNE     _569
002550                10523 _570:
                      10524 ; rs232cmd.c 2940       
                      10525 ; rs232cmd.c 2941                                                       rs232putchar(',');
002550 91082C         10527         MOV.B   R0L,#02CH
                      10528         CALL    _rs232putchar
002553 C4rrrrrr       +10528 ;       FCALL   _rs232putchar
                      10529 ; rs232cmd.c 2942                                                       break;
                      10530 ; rs232cmd.c 2943                                               }
002558                10532 _600:
                      10533 ; rs232cmd.c 2944       
                      10534 ; rs232cmd.c 2945                                       if ( str == NULL)
002558 6954           10536         OR.W    R5,R4
00255A F20A           10537         BNE     _601
                      10538 ; rs232cmd.c 2946                                               rs232printf( 6, "%d,", level);
00255C B906           10540         MOV.W   R0,#06H
00255E 0F40           10541         PUSH.W  R6
002560 9938rrrr       10544         MOV.W   R3,#SEG( _533 )
002564 9928rrrr       10545         MOV.W   R2,#SOF( _533 )
002568 0F0C           10546         PUSH.W  R2, R3
                      10548         CALL    _rs232printf
00256A C4rrrrrr       +10548 ;       FCALL   _rs232printf
00256E A976           10549         ADDS.W  R7,#06H
002570                10551 _601:
                      10552 ; rs232cmd.c 2947       
                      10553 ; rs232cmd.c 2948                                       rs232printf( 6, "%d\n", AudioSetup[Analog
                            Audio].Click);                  
002570 B906           10555         MOV.W   R0,#06H
002572 964842rr       10556         MOV.B   ES,#SEG( _AudioSetup+12 )
002576 9918rrrr       10557         MOV.W   R1,#SOF( _AudioSetup+12 )
00257A 8A11           10558         MOV.W   R1,[R1]
00257C 0F02           10559         PUSH.W  R1
00257E 9938rrrr       10561         MOV.W   R3,#SEG( _9 )
002582 9928rrrr       10562         MOV.W   R2,#SOF( _9 )
002586 0F0C           10563         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 173

ADDR   CODE            LINE SOURCELINE
                      10565         CALL    _rs232printf
002588 C4rrrrrr       +10565 ;       FCALL   _rs232printf
00258C A976           10566         ADDS.W  R7,#06H
                      10568 ; rs232cmd.c 2949                               }
                      10569 ; rs232cmd.c 2950                       }
                      10570 ; rs232cmd.c 2951               }
00258E                10572 _605:
                      10573 ; rs232cmd.c 2952       }
00258E 2F70           10575         POP.W   R4, R5, R6
002590 D680           10577         RET
                      10580 ; rs232cmd.c 2953       
                      10581 ; rs232cmd.c 2954       /************************************************************************
                            **/
                      10582 ; rs232cmd.c 2955       /* AudioGenAnalogSignal                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      10583 ; rs232cmd.c 2956       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10584 ; rs232cmd.c 2957       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      10585 ; rs232cmd.c 2958       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      10586 ; rs232cmd.c 2959       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10587 ; rs232cmd.c 2960       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      10588 ; rs232cmd.c 2961       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      10589 ; rs232cmd.c 2962       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      10590 ; rs232cmd.c 2963       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      10591 ; rs232cmd.c 2964       /************************************************************************
                            **/
                      10592 ; rs232cmd.c 2965       void AudioGenAnalogSignal( void)
                      10593 ; rs232cmd.c 2966       {
                      10594         ALIGN   1
                      10596         PUBLIC  _AudioGenAnalogSignal
002592                10597 _AudioGenAnalogSignal:
002592 0F30           10601         PUSH.W  R4, R5
                      10607 ; rs232cmd.c 2967               int signal;
                      10608 ; rs232cmd.c 2968               char code *str;
                      10609 ; rs232cmd.c 2969       
                      10610 ; rs232cmd.c 2970               if ( CmdExecute && !SCPIError)
002594 964842rr       10612         MOV.B   ES,#SEG( _CmdExecute )
002598 9908rrrr       10613         MOV.W   R0,#SOF( _CmdExecute )
00259C 8200           10614         MOV.B   R0L,[R0]
00259E F379           10615         BEQ     _620
0025A0 964842rr       10616         MOV.B   ES,#SEG( _SCPIError )
0025A4 9908rrrr       10617         MOV.W   R0,#SOF( _SCPIError )
0025A8 8A00           10618         MOV.W   R0,[R0]
0025AA F273           10619         BNE     _620
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 174

ADDR   CODE            LINE SOURCELINE
                      10620 ; rs232cmd.c 2971               {
                      10621 ; rs232cmd.c 2972                       if ( CmdRequest)
0025AC 964842rr       10623         MOV.B   ES,#SEG( _CmdRequest )
0025B0 9908rrrr       10624         MOV.W   R0,#SOF( _CmdRequest )
0025B4 8200           10625         MOV.B   R0L,[R0]
0025B6 F33F           10626         BEQ     _611
                      10627 ; rs232cmd.c 2973                       {
                      10628 ; rs232cmd.c 2974                               if ( ParCnt)
0025B8 964842rr       10630         MOV.B   ES,#SEG( _ParCnt )
0025BC 9908rrrr       10631         MOV.W   R0,#SOF( _ParCnt )
0025C0 8200           10632         MOV.B   R0L,[R0]
0025C2 F306           10633         BEQ     _608
                      10634 ; rs232cmd.c 2975                                       SCPIError = ParNotAllowed;
0025C4 964842rr       10636         MOV.B   ES,#SEG( _SCPIError )
0025C8 9908rrrr       10637         MOV.W   R0,#SOF( _SCPIError )
0025CC BA06           10638         MOV.W   [R0],#06H
0025CE FE61           10639         BR      _620
0025CE FE61           10639         BR      _620
0025D0                10640 _608:
                      10641 ; rs232cmd.c 2976                               else
                      10642 ; rs232cmd.c 2977                               {
                      10643 ; rs232cmd.c 2978                                       str = AudioSignalPar[AudioSetup[AnalogAud
                            io].Signal].LongName;
0025D0 964842rr       10645         MOV.B   ES,#SEG( _AudioSetup+2 )
0025D4 9908rrrr       10646         MOV.W   R0,#SOF( _AudioSetup+2 )
0025D8 8A00           10647         MOV.W   R0,[R0]
0025DA E900000C       10648         MULU.W  R0,#0CH
0025DE 8920           10649         MOV.W   R2,R0
0025E0 B930           10650         MOVS.W  R3,#00H
0025E2 9918rrrr       10651         MOV.W   R1,#SEG( _AudioSignalPar )
0025E6 9908rrrr       10652         MOV.W   R0,#SOF( _AudioSignalPar )
0025EA 0902           10653         ADD.W   R0,R2
0025EC 1913           10654         ADDC.W  R1,R3
0025EE 862C43         10655         MOV.B   CS,R1L
0025F1 8820           10656         MOVC.W  R2,[R0+]
0025F3 99040000       10657         CMP.W   R0,#00H
0025F7 F202           10658         BNE     _621
0025F9 A64143         10659         ADDS.B  CS,#01H
0025F9 A64143         10659         ADDS.B  CS,#01H
0025FC                10660 _621:
0025FC 8830           10661         MOVC.W  R3,[R0+]
0025FE 8953           10662         MOV.W   R5,R3
002600 8942           10663         MOV.W   R4,R2
                      10665 ; rs232cmd.c 2979       
                      10666 ; rs232cmd.c 2980                                       while ( *str)
002602 866C43         10668         MOV.B   CS,R3L
002605 8062           10669         MOVC.B  R3L,[R2+]
002607 F312           10670         BEQ     _610
002607 F31200         10670         BEQ     _610
00260A                10671 _609:
                      10672 ; rs232cmd.c 2981                                               rs232putchar( *str++);
00260A 8915           10674         MOV.W   R1,R5
00260C 8904           10675         MOV.W   R0,R4
00260E 862C43         10676         MOV.B   CS,R1L
002611 8020           10677         MOVC.B  R1L,[R0+]
002613 8102           10678         MOV.B   R0L,R1L
                      10679         CALL    _rs232putchar
002615 C4rrrrrr       +10679 ;       FCALL   _rs232putchar
002619 99400001       10680         ADD.W   R4,#01H
00261D 99510000       10681         ADDC.W  R5,#00H
002621 8915           10685         MOV.W   R1,R5
002623 8904           10686         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 175

ADDR   CODE            LINE SOURCELINE
002625 862C43         10687         MOV.B   CS,R1L
002628 8020           10688         MOVC.B  R1L,[R0+]
00262A F2EF           10689         BNE     _609
00262C                10691 _610:
                      10692 ; rs232cmd.c 2982       
                      10693 ; rs232cmd.c 2983                                       rs232putchar('\n');
00262C 91080A         10695         MOV.B   R0L,#0AH
                      10696         CALL    _rs232putchar
00262F C4rrrrrr       +10696 ;       FCALL   _rs232putchar
                      10697 ; rs232cmd.c 2984                               }
                      10698 ; rs232cmd.c 2985                       }
002633 FE2F           10700         BR      _620
002633 FE2F00         10700         BR      _620
002636                10701 _611:
                      10702 ; rs232cmd.c 2986                       else
                      10703 ; rs232cmd.c 2987                       {
                      10704 ; rs232cmd.c 2988                               if ( ParCnt != 1)
002636 964842rr       10706         MOV.B   ES,#SEG( _ParCnt )
00263A 9908rrrr       10707         MOV.W   R0,#SOF( _ParCnt )
00263E 8200           10708         MOV.B   R0L,[R0]
002640 910401         10709         CMP.B   R0L,#01H
002643 F307           10710         BEQ     _612
                      10711 ; rs232cmd.c 2989                                       SCPIError = SyntaxErr;
002645 964842rr       10713         MOV.B   ES,#SEG( _SCPIError )
002649 9908rrrr       10714         MOV.W   R0,#SOF( _SCPIError )
00264D BA03           10715         MOV.W   [R0],#03H
00264F FE21           10716         BR      _620
00264F FE2100         10716         BR      _620
002652                10717 _612:
                      10718 ; rs232cmd.c 2990                               else
                      10719 ; rs232cmd.c 2991                               {
                      10720 ; rs232cmd.c 2992                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002652 9918rrrr       10722         MOV.W   R1,#SEG( _Cmd )
002656 9908rrrr       10723         MOV.W   R0,#SOF( _Cmd )
00265A 9938rrrr       10724         MOV.W   R3,#SEG( _AudioSignalPar )
00265E 9928rrrr       10725         MOV.W   R2,#SOF( _AudioSignalPar )
002662 C51CCB         10726         CALL    _FindParameter
                      10728 ; rs232cmd.c 2993               
                      10729 ; rs232cmd.c 2994                                       if ( signal > -1)
002665 8910           10731         MOV.W   R1,R0
002667 9914FFFF       10732         CMP.W   R1,#0FFFFH
00266B FD0D           10735         BLE     _613
                      10736 ; rs232cmd.c 2995                                       {
                      10737 ; rs232cmd.c 2996                                               if ( SetAudioSignal( AnalogAudio,
                             signal) == FAIL)
00266D B900           10739         MOV.W   R0,#00H
                      10740         CALL    _SetAudioSignal
00266F C4rrrrrr       +10740 ;       FCALL   _SetAudioSignal
002673 6900           10742         OR.W    R0,R0
002675 F20E           10743         BNE     _620
                      10744 ; rs232cmd.c 2997                                                               SCPIError = ExecE
                            rr;
002677 964842rr       10746         MOV.B   ES,#SEG( _SCPIError )
00267B 9908rrrr       10747         MOV.W   R0,#SOF( _SCPIError )
00267F 9A08001D       10748         MOV.W   [R0],#01DH
                      10749 ; rs232cmd.c 2998                                       }
002683 FE07           10751         BR      _620
002683 FE0700         10751         BR      _620
002686                10752 _613:
                      10753 ; rs232cmd.c 2999                                       else
                      10754 ; rs232cmd.c 3000                                               SCPIError = DataOutOfRange;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 176

ADDR   CODE            LINE SOURCELINE
002686 964842rr       10756         MOV.B   ES,#SEG( _SCPIError )
00268A 9908rrrr       10757         MOV.W   R0,#SOF( _SCPIError )
00268E 9A080021       10758         MOV.W   [R0],#021H
                      10759 ; rs232cmd.c 3001                               }
                      10760 ; rs232cmd.c 3002                       }
                      10761 ; rs232cmd.c 3003               }
002692                10763 _620:
                      10764 ; rs232cmd.c 3004       }
002692 2F30           10766         POP.W   R4, R5
002694 D680           10768         RET
                      10771 ; rs232cmd.c 3005       
                      10772 ; rs232cmd.c 3006       /************************************************************************
                            **/
                      10773 ; rs232cmd.c 3007       /* AudioGenAnalogLevel                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      10774 ; rs232cmd.c 3008       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10775 ; rs232cmd.c 3009       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      10776 ; rs232cmd.c 3010       /* Revised:             000705                                           
                                                                                                                             
                                                                                    */
                      10777 ; rs232cmd.c 3011       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      10778 ; rs232cmd.c 3012       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      10779 ; rs232cmd.c 3013       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      10780 ; rs232cmd.c 3014       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      10781 ; rs232cmd.c 3015       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      10782 ; rs232cmd.c 3016       /************************************************************************
                            **/
                      10783 ; rs232cmd.c 3017       void AudioGenAnalogLevel( void)
                      10784 ; rs232cmd.c 3018       {
                      10785         ALIGN   1
                      10787         PUBLIC  _AudioGenAnalogLevel
002696                10788 _AudioGenAnalogLevel:
000078                10792         RSEG    RS232CMD_IR
                      10793         ALIGN   1
000078                10794 __swtable762:
000078 rrrrrrrrrrrrrr 10795         DW      SOF _657,SEG _657
       rrrrrrrrrrrrrr       
       rrrr                 
00007C rrrrrrrrrrrrrr 10796         DW      SOF _625,SEG _625
       rrrrrrrrrrrrrr       
       rrrr                 
000080 rrrrrrrrrrrrrr 10797         DW      SOF _626,SEG _626
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 177

ADDR   CODE            LINE SOURCELINE
000084 rrrrrrrrrrrrrr 10798         DW      SOF _627,SEG _627
       rrrrrrrrrrrrrr       
       rrrr                 
000088 rrrrrrrrrrrrrr 10799         DW      SOF _628,SEG _628
       rrrrrrrrrrrrrr       
       rrrr                 
00008C rrrrrrrrrrrrrr 10800         DW      SOF _629,SEG _629
       rrrrrrrrrrrrrr       
       rrrr                 
000090 rrrrrrrrrrrrrr 10801         DW      SOF _630,SEG _630
       rrrrrrrrrrrrrr       
       rrrr                 
000094 rrrrrrrrrrrrrr 10802         DW      SOF _631,SEG _631
       rrrrrrrrrrrrrr       
       rrrr                 
000098 rrrrrrrrrrrrrr 10803         DW      SOF _632,SEG _632
       rrrrrrrrrrrrrr       
       rrrr                 
00009C rrrrrrrrrrrrrr 10804         DW      SOF _633,SEG _633
       rrrrrrrrrrrrrr       
       rrrr                 
0000A0 rrrrrrrrrrrrrr 10805         DW      SOF _634,SEG _634
       rrrrrrrrrrrrrr       
       rrrr                 
0000A4 rrrrrrrrrrrrrr 10806         DW      SOF _635,SEG _635
       rrrrrrrrrrrrrr       
       rrrr                 
0000A8 rrrrrrrrrrrrrr 10807         DW      SOF _636,SEG _636
       rrrrrrrrrrrrrr       
       rrrr                 
0000AC rrrrrrrrrrrrrr 10808         DW      SOF _637,SEG _637
       rrrrrrrrrrrrrr       
       rrrr                 
0000B0 rrrrrrrrrrrrrr 10809         DW      SOF _638,SEG _638
       rrrrrrrrrrrrrr       
       rrrr                 
0000B4 rrrrrrrrrrrrrr 10810         DW      SOF _639,SEG _639
       rrrrrrrrrrrrrr       
       rrrr                 
0000B8 rrrrrrrrrrrrrr 10811         DW      SOF _640,SEG _640
       rrrrrrrrrrrrrr       
       rrrr                 
0000BC rrrrrrrrrrrrrr 10812         DW      SOF _641,SEG _641
       rrrrrrrrrrrrrr       
       rrrr                 
0000C0 rrrrrrrrrrrrrr 10813         DW      SOF _642,SEG _642
       rrrrrrrrrrrrrr       
       rrrr                 
0000C4 rrrrrrrrrrrrrr 10814         DW      SOF _643,SEG _643
       rrrrrrrrrrrrrr       
       rrrr                 
0000C8 rrrrrrrrrrrrrr 10815         DW      SOF _644,SEG _644
       rrrrrrrrrrrrrr       
       rrrr                 
0000CC rrrrrrrrrrrrrr 10816         DW      SOF _645,SEG _645
       rrrrrrrrrrrrrr       
       rrrr                 
0000D0 rrrrrrrrrrrrrr 10817         DW      SOF _646,SEG _646
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 178

ADDR   CODE            LINE SOURCELINE
0000D4 rrrrrrrrrrrrrr 10818         DW      SOF _647,SEG _647
       rrrrrrrrrrrrrr       
       rrrr                 
0000D8 rrrrrrrrrrrrrr 10819         DW      SOF _648,SEG _648
       rrrrrrrrrrrrrr       
       rrrr                 
0000DC rrrrrrrrrrrrrr 10820         DW      SOF _649,SEG _649
       rrrrrrrrrrrrrr       
       rrrr                 
0000E0 rrrrrrrrrrrrrr 10821         DW      SOF _650,SEG _650
       rrrrrrrrrrrrrr       
       rrrr                 
0000E4 rrrrrrrrrrrrrr 10822         DW      SOF _651,SEG _651
       rrrrrrrrrrrrrr       
       rrrr                 
0000E8 rrrrrrrrrrrrrr 10823         DW      SOF _652,SEG _652
       rrrrrrrrrrrrrr       
       rrrr                 
0000EC rrrrrrrrrrrrrr 10824         DW      SOF _653,SEG _653
       rrrrrrrrrrrrrr       
       rrrr                 
002696                10825         RSEG    RS232CMD_PR
002696 0F30           10826         PUSH.W  R4, R5
002698 A97E           10828         ADDS.W  R7,#0EH
                      10833 ; rs232cmd.c 3019               code char *str;
                      10834 ; rs232cmd.c 3020               int level;
                      10835 ; rs232cmd.c 3021       
                      10836 ; rs232cmd.c 3022               if ( CmdExecute && !SCPIError)
00269A 964842rr       10838         MOV.B   ES,#SEG( _CmdExecute )
00269E 9908rrrr       10839         MOV.W   R0,#SOF( _CmdExecute )
0026A2 8200           10840         MOV.B   R0L,[R0]
                      10841         BEQ     _761
0026A4 F202           +10841 ;       BNE     _LG_652
0026A6 D50165         +10841 ;       JMP.L   _761
0026AA D5016500       +10841 ;       JMP.L   _761
0026AA                +10841 _LG_652:
0026AA 964842rr       10842         MOV.B   ES,#SEG( _SCPIError )
0026AE 9908rrrr       10843         MOV.W   R0,#SOF( _SCPIError )
0026B2 8A00           10844         MOV.W   R0,[R0]
                      10845         BNE     _761
0026B4 F302           +10845 ;       BEQ     _LG_654
0026B6 D5015D         +10845 ;       JMP.L   _761
0026BA D5015D00       +10845 ;       JMP.L   _761
0026BA                +10845 _LG_654:
                      10846 ; rs232cmd.c 3023               {
                      10847 ; rs232cmd.c 3024                       if ( CmdRequest)
0026BA 964842rr       10849         MOV.B   ES,#SEG( _CmdRequest )
0026BE 9908rrrr       10850         MOV.W   R0,#SOF( _CmdRequest )
0026C2 8200           10851         MOV.B   R0L,[R0]
                      10852         BEQ     _687
0026C4 F202           +10852 ;       BNE     _LG_656
0026C6 D5009F         +10852 ;       JMP.L   _687
0026CA D5009F00       +10852 ;       JMP.L   _687
0026CA                +10852 _LG_656:
                      10853 ; rs232cmd.c 3025                       {
                      10854 ; rs232cmd.c 3026                               if ( ParCnt)
0026CA 964842rr       10856         MOV.B   ES,#SEG( _ParCnt )
0026CE 9908rrrr       10857         MOV.W   R0,#SOF( _ParCnt )
0026D2 8200           10858         MOV.B   R0L,[R0]
0026D4 F307           10859         BEQ     _624
                      10860 ; rs232cmd.c 3027                                       SCPIError = ParNotAllowed;
0026D6 964842rr       10862         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 179

ADDR   CODE            LINE SOURCELINE
0026DA 9908rrrr       10863         MOV.W   R0,#SOF( _SCPIError )
0026DE BA06           10864         MOV.W   [R0],#06H
                      10865         BR      _761
0026E0 D50148         +10865         JMP.L   _761
0026E0 D5014800       +10865         JMP.L   _761
0026E4                10866 _624:
                      10867 ; rs232cmd.c 3028                               else
                      10868 ; rs232cmd.c 3029                               {
                      10869 ; rs232cmd.c 3030                                       switch ( AudioSetup[AnalogAudio].Level)
0026E4 964842rr       10871         MOV.B   ES,#SEG( _AudioSetup+4 )
0026E8 9908rrrr       10872         MOV.W   R0,#SOF( _AudioSetup+4 )
0026EC 8A00           10873         MOV.W   R0,[R0]
0026EE A90F           10874         ADDS.W  R0,#0FH
0026F0 9904001D       10875         CMP.W   R0,#01DH
0026F4 F859           10876         BG      _654
0026F6 D902           10877         ASL.W   R0,#02H
0026F8 964843rr       10878         MOV.B   CS,#SEG( __swtable762 )
0026FC 9900rrrr       10879         ADD.W   R0,#SOF( __swtable762 )
002700 8810           10880         MOVC.W  R1,[R0+]
002702 0F02           10881         PUSH.W  R1
002704 8810           10882         MOVC.W  R1,[R0+]
002706 0F02           10883         PUSH.W  R1
002708 D680           10884         RET
                      10885 ; rs232cmd.c 3031                                       {
                      10886 ; rs232cmd.c 3032                                               case P10dBm:
                      10887 ; rs232cmd.c 3033                                                       level = 10;
                      10888 ; rs232cmd.c 3034                                                       break;
                      10889 ; rs232cmd.c 3035       
                      10890 ; rs232cmd.c 3036                                               case P8dBm:
00270A                10892 _625:
                      10893 ; rs232cmd.c 3037                                                       level = 8;
00270A 9A780008       10895         MOV.W   [R7],#08H
                      10896 ; rs232cmd.c 3038                                                       break;
00270E FE6E           10898         BR      _686
                      10899 ; rs232cmd.c 3039       
                      10900 ; rs232cmd.c 3040                                               case P7dBm:
002710                10902 _626:
                      10903 ; rs232cmd.c 3041                                                       level = 7;
002710 BA77           10905         MOV.W   [R7],#07H
                      10906 ; rs232cmd.c 3042                                                       break;
002712 FE6C           10908         BR      _686
                      10909 ; rs232cmd.c 3043       
                      10910 ; rs232cmd.c 3044                                               case P6dBm:
002714                10912 _627:
                      10913 ; rs232cmd.c 3045                                                       level = 6;
002714 BA76           10915         MOV.W   [R7],#06H
                      10916 ; rs232cmd.c 3046                                                       break;
002716 FE6A           10918         BR      _686
                      10919 ; rs232cmd.c 3047       
                      10920 ; rs232cmd.c 3048                                               case P5dBm:
002718                10922 _628:
                      10923 ; rs232cmd.c 3049                                                       level = 5;
002718 BA75           10925         MOV.W   [R7],#05H
                      10926 ; rs232cmd.c 3050                                                       break;
00271A FE68           10928         BR      _686
                      10929 ; rs232cmd.c 3051       
                      10930 ; rs232cmd.c 3052                                               case P4dBm:
00271C                10932 _629:
                      10933 ; rs232cmd.c 3053                                                       level = 4;
00271C BA74           10935         MOV.W   [R7],#04H
                      10936 ; rs232cmd.c 3054                                                       break;
00271E FE66           10938         BR      _686
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 180

ADDR   CODE            LINE SOURCELINE
                      10939 ; rs232cmd.c 3055       
                      10940 ; rs232cmd.c 3056                                               case P3dBm:
002720                10942 _630:
                      10943 ; rs232cmd.c 3057                                                       level = 3;
002720 BA73           10945         MOV.W   [R7],#03H
                      10946 ; rs232cmd.c 3058                                                       break;
002722 FE64           10948         BR      _686
                      10949 ; rs232cmd.c 3059       
                      10950 ; rs232cmd.c 3060                                               case P2dBm:
002724                10952 _631:
                      10953 ; rs232cmd.c 3061                                                       level = 2;
002724 BA72           10955         MOV.W   [R7],#02H
                      10956 ; rs232cmd.c 3062                                                       break;
002726 FE62           10958         BR      _686
                      10959 ; rs232cmd.c 3063       
                      10960 ; rs232cmd.c 3064                                               case P1dBm:
002728                10962 _632:
                      10963 ; rs232cmd.c 3065                                                       level = 1;
002728 BA71           10965         MOV.W   [R7],#01H
                      10966 ; rs232cmd.c 3066                                                       break;
00272A FE60           10968         BR      _686
                      10969 ; rs232cmd.c 3067       
                      10970 ; rs232cmd.c 3068                                               case M0dBm:
00272C                10972 _633:
                      10973 ; rs232cmd.c 3069                                                       level = 0;
00272C BA70           10975         MOV.W   [R7],#00H
                      10976 ; rs232cmd.c 3070                                                       break;
00272E FE5E           10978         BR      _686
                      10979 ; rs232cmd.c 3071       
                      10980 ; rs232cmd.c 3072                                               case M1dBm:
002730                10982 _634:
                      10983 ; rs232cmd.c 3073                                                       level = -1;
002730 9A78FFFF       10985         MOV.W   [R7],#0FFFFH
                      10986 ; rs232cmd.c 3074                                                       break;
002734 FE5B           10988         BR      _686
                      10989 ; rs232cmd.c 3075       
                      10990 ; rs232cmd.c 3076                                               case M2dBm:
002736                10992 _635:
                      10993 ; rs232cmd.c 3077                                                       level = -2;
002736 9A78FFFE       10995         MOV.W   [R7],#0FFFEH
                      10996 ; rs232cmd.c 3078                                                       break;
00273A FE58           10998         BR      _686
                      10999 ; rs232cmd.c 3079       
                      11000 ; rs232cmd.c 3080                                               case M3dBm:
00273C                11002 _636:
                      11003 ; rs232cmd.c 3081                                                       level = -3;
00273C 9A78FFFD       11005         MOV.W   [R7],#0FFFDH
                      11006 ; rs232cmd.c 3082                                                       break;
002740 FE55           11008         BR      _686
                      11009 ; rs232cmd.c 3083       
                      11010 ; rs232cmd.c 3084                                               case M4dBm:
002742                11012 _637:
                      11013 ; rs232cmd.c 3085                                                       level = -4;
002742 9A78FFFC       11015         MOV.W   [R7],#0FFFCH
                      11016 ; rs232cmd.c 3086                                                       break;
002746 FE52           11018         BR      _686
                      11019 ; rs232cmd.c 3087       
                      11020 ; rs232cmd.c 3088                                               case M5dBm:
002748                11022 _638:
                      11023 ; rs232cmd.c 3089                                                       level = -5;
002748 9A78FFFB       11025         MOV.W   [R7],#0FFFBH
                      11026 ; rs232cmd.c 3090                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 181

ADDR   CODE            LINE SOURCELINE
00274C FE4F           11028         BR      _686
                      11029 ; rs232cmd.c 3091       
                      11030 ; rs232cmd.c 3092                                               case M6dBm:
00274E                11032 _639:
                      11033 ; rs232cmd.c 3093                                                       level = -6;
00274E 9A78FFFA       11035         MOV.W   [R7],#0FFFAH
                      11036 ; rs232cmd.c 3094                                                       break;
002752 FE4C           11038         BR      _686
                      11039 ; rs232cmd.c 3095       
                      11040 ; rs232cmd.c 3096                                               case M7dBm:
002754                11042 _640:
                      11043 ; rs232cmd.c 3097                                                       level = -7;
002754 9A78FFF9       11045         MOV.W   [R7],#0FFF9H
                      11046 ; rs232cmd.c 3098                                                       break;
002758 FE49           11048         BR      _686
                      11049 ; rs232cmd.c 3099       
                      11050 ; rs232cmd.c 3100                                               case M8dBm:
00275A                11052 _641:
                      11053 ; rs232cmd.c 3101                                                       level = -8;
00275A 9A78FFF8       11055         MOV.W   [R7],#0FFF8H
                      11056 ; rs232cmd.c 3102                                                       break;
00275E FE46           11058         BR      _686
                      11059 ; rs232cmd.c 3103       
                      11060 ; rs232cmd.c 3104                                               case M9dBm:
002760                11062 _642:
                      11063 ; rs232cmd.c 3105                                                       level = -9;
002760 9A78FFF7       11065         MOV.W   [R7],#0FFF7H
                      11066 ; rs232cmd.c 3106                                                       break;
002764 FE43           11068         BR      _686
                      11069 ; rs232cmd.c 3107       
                      11070 ; rs232cmd.c 3108                                               case M10dBm:
002766                11072 _643:
                      11073 ; rs232cmd.c 3109                                                       level = -10;
002766 9A78FFF6       11075         MOV.W   [R7],#0FFF6H
                      11076 ; rs232cmd.c 3110                                                       break;
00276A FE40           11078         BR      _686
                      11079 ; rs232cmd.c 3111       
                      11080 ; rs232cmd.c 3112                                               case M11dBm:
00276C                11082 _644:
                      11083 ; rs232cmd.c 3113                                                       level = -11;
00276C 9A78FFF5       11085         MOV.W   [R7],#0FFF5H
                      11086 ; rs232cmd.c 3114                                                       break;
002770 FE3D           11088         BR      _686
                      11089 ; rs232cmd.c 3115       
                      11090 ; rs232cmd.c 3116                                               case M12dBm:
002772                11092 _645:
                      11093 ; rs232cmd.c 3117                                                       level = -12;
002772 9A78FFF4       11095         MOV.W   [R7],#0FFF4H
                      11096 ; rs232cmd.c 3118                                                       break;
002776 FE3A           11098         BR      _686
                      11099 ; rs232cmd.c 3119       
                      11100 ; rs232cmd.c 3120                                               case M15dBm:
002778                11102 _646:
                      11103 ; rs232cmd.c 3121                                                       level = -15;
002778 9A78FFF1       11105         MOV.W   [R7],#0FFF1H
                      11106 ; rs232cmd.c 3122                                                       break;
00277C FE37           11108         BR      _686
                      11109 ; rs232cmd.c 3123       
                      11110 ; rs232cmd.c 3124                                               case M18dBm:
00277E                11112 _647:
                      11113 ; rs232cmd.c 3125                                                       level = -18;
00277E 9A78FFEE       11115         MOV.W   [R7],#0FFEEH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 182

ADDR   CODE            LINE SOURCELINE
                      11116 ; rs232cmd.c 3126                                                       break;
002782 FE34           11118         BR      _686
                      11119 ; rs232cmd.c 3127       
                      11120 ; rs232cmd.c 3128                                               case M21dBm:
002784                11122 _648:
                      11123 ; rs232cmd.c 3129                                                       level = -21;
002784 9A78FFEB       11125         MOV.W   [R7],#0FFEBH
                      11126 ; rs232cmd.c 3130                                                       break;
002788 FE31           11128         BR      _686
                      11129 ; rs232cmd.c 3131       
                      11130 ; rs232cmd.c 3132                                               case M24dBm:
00278A                11132 _649:
                      11133 ; rs232cmd.c 3133                                                       level = -24;
00278A 9A78FFE8       11135         MOV.W   [R7],#0FFE8H
                      11136 ; rs232cmd.c 3134                                                       break;
00278E FE2E           11138         BR      _686
                      11139 ; rs232cmd.c 3135       
                      11140 ; rs232cmd.c 3136                                               case M27dBm:
002790                11142 _650:
                      11143 ; rs232cmd.c 3137                                                       level = -27;
002790 9A78FFE5       11145         MOV.W   [R7],#0FFE5H
                      11146 ; rs232cmd.c 3138                                                       break;
002794 FE2B           11148         BR      _686
                      11149 ; rs232cmd.c 3139       
                      11150 ; rs232cmd.c 3140                                               case M30dBm:
002796                11152 _651:
                      11153 ; rs232cmd.c 3141                                                       level = -30;
002796 9A78FFE2       11155         MOV.W   [R7],#0FFE2H
                      11156 ; rs232cmd.c 3142                                                       break;
00279A FE28           11158         BR      _686
                      11159 ; rs232cmd.c 3143       
                      11160 ; rs232cmd.c 3144                                               case M33dBm:
00279C                11162 _652:
                      11163 ; rs232cmd.c 3145                                                       level = -33;
00279C 9A78FFDF       11165         MOV.W   [R7],#0FFDFH
                      11166 ; rs232cmd.c 3146                                                       break;
0027A0 FE25           11168         BR      _686
                      11169 ; rs232cmd.c 3147       
                      11170 ; rs232cmd.c 3148                                               case M36dBm:
0027A2                11172 _653:
                      11173 ; rs232cmd.c 3149                                                       level = -36;
0027A2 9A78FFDC       11175         MOV.W   [R7],#0FFDCH
                      11176 ; rs232cmd.c 3150                                                       break;
0027A6 FE22           11178         BR      _686
                      11179 ; rs232cmd.c 3151       
                      11180 ; rs232cmd.c 3152                                               default:
0027A8                11182 _654:
                      11183 ; rs232cmd.c 3153                                                       str = SILENCEParTxt;
0027A8 9958rrrr       11185         MOV.W   R5,#SEG( _SILENCEParTxt )
0027AC 9948rrrr       11186         MOV.W   R4,#SOF( _SILENCEParTxt )
                      11188 ; rs232cmd.c 3154       
                      11189 ; rs232cmd.c 3155                                                       while ( *str)
0027B0 964843rr       11191         MOV.B   CS,#SEG( _SILENCEParTxt )
0027B4 9908rrrr       11192         MOV.W   R0,#SOF( _SILENCEParTxt )
0027B8 8020           11193         MOVC.B  R1L,[R0+]
0027BA F311           11194         BEQ     _656
0027BA F311           11194         BEQ     _656
0027BC                11195 _655:
                      11196 ; rs232cmd.c 3156                                                               rs232putchar( *st
                            r++);
0027BC 8915           11198         MOV.W   R1,R5
0027BE 8904           11199         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 183

ADDR   CODE            LINE SOURCELINE
0027C0 862C43         11200         MOV.B   CS,R1L
0027C3 8020           11201         MOVC.B  R1L,[R0+]
0027C5 8102           11202         MOV.B   R0L,R1L
                      11203         CALL    _rs232putchar
0027C7 C4rrrrrr       +11203 ;       FCALL   _rs232putchar
0027CB 99400001       11204         ADD.W   R4,#01H
0027CF 99510000       11205         ADDC.W  R5,#00H
0027D3 8915           11209         MOV.W   R1,R5
0027D5 8904           11210         MOV.W   R0,R4
0027D7 862C43         11211         MOV.B   CS,R1L
0027DA 8020           11212         MOVC.B  R1L,[R0+]
0027DC F2EF           11213         BNE     _655
0027DE                11215 _656:
                      11216 ; rs232cmd.c 3157       
                      11217 ; rs232cmd.c 3158                                                       rs232putchar('\n');
0027DE 91080A         11219         MOV.B   R0L,#0AH
                      11220         CALL    _rs232putchar
0027E1 C4rrrrrr       +11220 ;       FCALL   _rs232putchar
                      11221 ; rs232cmd.c 3159                                                       return;
                      11223         BR      _761
0027E5 D500C5         +11223         JMP.L   _761
0027E8                11225 _657:
0027E8 9A78000A       11227         MOV.W   [R7],#0AH
                      11228 ; rs232cmd.c 3160                                               }
0027EC                11230 _686:
                      11231 ; rs232cmd.c 3161       
                      11232 ; rs232cmd.c 3162                                       rs232printf( 6, "%d\n", level);
0027EC B906           11234         MOV.W   R0,#06H
0027EE 8A17           11235         MOV.W   R1,[R7]
0027F0 0F02           11236         PUSH.W  R1
0027F2 9938rrrr       11238         MOV.W   R3,#SEG( _9 )
0027F6 9928rrrr       11239         MOV.W   R2,#SOF( _9 )
0027FA 0F0C           11240         PUSH.W  R2, R3
                      11242         CALL    _rs232printf
0027FC C4rrrrrr       +11242 ;       FCALL   _rs232printf
002800 A976           11243         ADDS.W  R7,#06H
0000F0                11244         RSEG    RS232CMD_IR
                      11245         ALIGN   1
0000F0                11246 __swtable767:
0000F0 rrrrrrrrrrrrrr 11247         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
0000F4 rrrrrrrrrrrrrr 11248         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0000F8 rrrrrrrrrrrrrr 11249         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0000FC rrrrrrrrrrrrrr 11250         DW      SOF _719,SEG _719
       rrrrrrrrrrrrrr       
       rrrr                 
000100 rrrrrrrrrrrrrr 11251         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000104 rrrrrrrrrrrrrr 11252         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000108 rrrrrrrrrrrrrr 11253         DW      SOF _718,SEG _718
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 184

ADDR   CODE            LINE SOURCELINE
00010C rrrrrrrrrrrrrr 11254         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000110 rrrrrrrrrrrrrr 11255         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000114 rrrrrrrrrrrrrr 11256         DW      SOF _717,SEG _717
       rrrrrrrrrrrrrr       
       rrrr                 
000118 rrrrrrrrrrrrrr 11257         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00011C rrrrrrrrrrrrrr 11258         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000120 rrrrrrrrrrrrrr 11259         DW      SOF _716,SEG _716
       rrrrrrrrrrrrrr       
       rrrr                 
000124 rrrrrrrrrrrrrr 11260         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000128 rrrrrrrrrrrrrr 11261         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00012C rrrrrrrrrrrrrr 11262         DW      SOF _715,SEG _715
       rrrrrrrrrrrrrr       
       rrrr                 
000130 rrrrrrrrrrrrrr 11263         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000134 rrrrrrrrrrrrrr 11264         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000138 rrrrrrrrrrrrrr 11265         DW      SOF _714,SEG _714
       rrrrrrrrrrrrrr       
       rrrr                 
00013C rrrrrrrrrrrrrr 11266         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000140 rrrrrrrrrrrrrr 11267         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000144 rrrrrrrrrrrrrr 11268         DW      SOF _713,SEG _713
       rrrrrrrrrrrrrr       
       rrrr                 
000148 rrrrrrrrrrrrrr 11269         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
00014C rrrrrrrrrrrrrr 11270         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
000150 rrrrrrrrrrrrrr 11271         DW      SOF _712,SEG _712
       rrrrrrrrrrrrrr       
       rrrr                 
000154 rrrrrrrrrrrrrr 11272         DW      SOF _711,SEG _711
       rrrrrrrrrrrrrr       
       rrrr                 
000158 rrrrrrrrrrrrrr 11273         DW      SOF _710,SEG _710
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 185

ADDR   CODE            LINE SOURCELINE
00015C rrrrrrrrrrrrrr 11274         DW      SOF _709,SEG _709
       rrrrrrrrrrrrrr       
       rrrr                 
000160 rrrrrrrrrrrrrr 11275         DW      SOF _708,SEG _708
       rrrrrrrrrrrrrr       
       rrrr                 
000164 rrrrrrrrrrrrrr 11276         DW      SOF _707,SEG _707
       rrrrrrrrrrrrrr       
       rrrr                 
000168 rrrrrrrrrrrrrr 11277         DW      SOF _706,SEG _706
       rrrrrrrrrrrrrr       
       rrrr                 
00016C rrrrrrrrrrrrrr 11278         DW      SOF _705,SEG _705
       rrrrrrrrrrrrrr       
       rrrr                 
000170 rrrrrrrrrrrrrr 11279         DW      SOF _704,SEG _704
       rrrrrrrrrrrrrr       
       rrrr                 
000174 rrrrrrrrrrrrrr 11280         DW      SOF _703,SEG _703
       rrrrrrrrrrrrrr       
       rrrr                 
000178 rrrrrrrrrrrrrr 11281         DW      SOF _702,SEG _702
       rrrrrrrrrrrrrr       
       rrrr                 
00017C rrrrrrrrrrrrrr 11282         DW      SOF _701,SEG _701
       rrrrrrrrrrrrrr       
       rrrr                 
000180 rrrrrrrrrrrrrr 11283         DW      SOF _700,SEG _700
       rrrrrrrrrrrrrr       
       rrrr                 
000184 rrrrrrrrrrrrrr 11284         DW      SOF _699,SEG _699
       rrrrrrrrrrrrrr       
       rrrr                 
000188 rrrrrrrrrrrrrr 11285         DW      SOF _698,SEG _698
       rrrrrrrrrrrrrr       
       rrrr                 
00018C rrrrrrrrrrrrrr 11286         DW      SOF _697,SEG _697
       rrrrrrrrrrrrrr       
       rrrr                 
000190 rrrrrrrrrrrrrr 11287         DW      SOF _696,SEG _696
       rrrrrrrrrrrrrr       
       rrrr                 
000194 rrrrrrrrrrrrrr 11288         DW      SOF _695,SEG _695
       rrrrrrrrrrrrrr       
       rrrr                 
000198 rrrrrrrrrrrrrr 11289         DW      SOF _694,SEG _694
       rrrrrrrrrrrrrr       
       rrrr                 
00019C rrrrrrrrrrrrrr 11290         DW      SOF _693,SEG _693
       rrrrrrrrrrrrrr       
       rrrr                 
0001A0 rrrrrrrrrrrrrr 11291         DW      SOF _692,SEG _692
       rrrrrrrrrrrrrr       
       rrrr                 
0001A4 rrrrrrrrrrrrrr 11292         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
0001A8 rrrrrrrrrrrrrr 11293         DW      SOF _722,SEG _722
       rrrrrrrrrrrrrr       
       rrrr                 
002802                11294         RSEG    RS232CMD_PR
                      11296 ; rs232cmd.c 3163                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 186

ADDR   CODE            LINE SOURCELINE
                      11297 ; rs232cmd.c 3164                       }
                      11299         BR      _761
002802 D500B7         +11299         JMP.L   _761
002802 D500B700       +11299         JMP.L   _761
002806                11300 _687:
                      11301 ; rs232cmd.c 3165                       else
                      11302 ; rs232cmd.c 3166                       {
                      11303 ; rs232cmd.c 3167                               if ( ParCnt != 1)
002806 964842rr       11305         MOV.B   ES,#SEG( _ParCnt )
00280A 9908rrrr       11306         MOV.W   R0,#SOF( _ParCnt )
00280E 8200           11307         MOV.B   R0L,[R0]
002810 910401         11308         CMP.B   R0L,#01H
002813 F307           11309         BEQ     _688
                      11310 ; rs232cmd.c 3168                                       SCPIError = SyntaxErr;
002815 964842rr       11312         MOV.B   ES,#SEG( _SCPIError )
002819 9908rrrr       11313         MOV.W   R0,#SOF( _SCPIError )
00281D BA03           11314         MOV.W   [R0],#03H
                      11315         BR      _761
00281F D500A8         +11315         JMP.L   _761
00281F D500A8         +11315         JMP.L   _761
002822                11316 _688:
                      11317 ; rs232cmd.c 3169                               else
                      11318 ; rs232cmd.c 3170                               {
                      11319 ; rs232cmd.c 3171                                       level = FindParameter( Cmd, AnalogLevelPa
                            r);
002822 9938rrrr       11321         MOV.W   R3,#SEG( _AnalogLevelPar )
002826 9928rrrr       11322         MOV.W   R2,#SOF( _AnalogLevelPar )
00282A 9918rrrr       11323         MOV.W   R1,#SEG( _Cmd )
00282E 9908rrrr       11324         MOV.W   R0,#SOF( _Cmd )
002832 C51BE3         11325         CALL    _FindParameter
002835 8A0F           11326         MOV.W   [R7],R0
                      11327 ; rs232cmd.c 3172               
                      11328 ; rs232cmd.c 3173                                       if ( level > -1)
002837 9A74FFFF       11330         CMP.W   [R7],#0FFFFH
00283B FD04           11331         BLE     _689
                      11332 ; rs232cmd.c 3174                                               level = AnalogSilence;
00283D 9A78001F       11334         MOV.W   [R7],#01FH
                      11335         BR      _753
002841 D5008B         +11335         JMP.L   _753
002841 D5008B         +11335         JMP.L   _753
002844                11336 _689:
                      11337 ; rs232cmd.c 3175                                       else
                      11338 ; rs232cmd.c 3176                                       {
                      11339 ; rs232cmd.c 3177                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
002844 964842rr       11341         MOV.B   ES,#SEG( _ParCnt )
002848 9908rrrr       11342         MOV.W   R0,#SOF( _ParCnt )
00284C 8200           11343         MOV.B   R0L,[R0]
00284E 910401         11344         CMP.B   R0L,#01H
002851 F215           11345         BNE     _690
002853 9128rr         11346         MOV.B   R1L,#SEG( __lc_bs )
002856 7133           11347         XOR.B   R1H,R1H
002858 8907           11348         MOV.W   R0,R7
00285A 0F03           11349         PUSH.W  R0, R1
00285C 9918rrrr       11351         MOV.W   R1,#SEG( _10 )
002860 9908rrrr       11352         MOV.W   R0,#SOF( _10 )
002864 0F03           11353         PUSH.W  R0, R1
002866 9918rrrr       11355         MOV.W   R1,#SEG( _Cmd )
00286A 9908rrrr       11356         MOV.W   R0,#SOF( _Cmd )
                      11357         CALL    _sscanf
00286E C4rrrrrr       +11357 ;       FCALL   _sscanf
002872 99700008       11358         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 187

ADDR   CODE            LINE SOURCELINE
002876 99040001       11360         CMP.W   R0,#01H
00287A F306           11361         BEQ     _691
00287A F306           11361         BEQ     _691
00287C                11362 _690:
                      11363 ; rs232cmd.c 3178                                                       SCPIError = SyntaxErr;
00287C 964842rr       11365         MOV.B   ES,#SEG( _SCPIError )
002880 9908rrrr       11366         MOV.W   R0,#SOF( _SCPIError )
002884 BA03           11367         MOV.W   [R0],#03H
002886 FE69           11368         BR      _753
002886 FE69           11368         BR      _753
002888                11369 _691:
                      11370 ; rs232cmd.c 3179                                               else
                      11371 ; rs232cmd.c 3180                                               {
                      11372 ; rs232cmd.c 3181                                                       switch ( level)
002888 8A17           11374         MOV.W   R1,[R7]
00288A 99100024       11375         ADD.W   R1,#024H
00288E 9914002E       11376         CMP.W   R1,#02EH
002892 F85B           11377         BG      _721
002894 D912           11378         ASL.W   R1,#02H
002896 964843rr       11379         MOV.B   CS,#SEG( __swtable767 )
00289A 9910rrrr       11380         ADD.W   R1,#SOF( __swtable767 )
00289E 8801           11381         MOVC.W  R0,[R1+]
0028A0 0F01           11382         PUSH.W  R0
0028A2 8801           11383         MOVC.W  R0,[R1+]
0028A4 0F01           11384         PUSH.W  R0
0028A6 D680           11385         RET
                      11386 ; rs232cmd.c 3182                                                       {
                      11387 ; rs232cmd.c 3183                                                               case 10:
                      11388 ; rs232cmd.c 3184                                                                       level = P
                            10dBm;
                      11389 ; rs232cmd.c 3185                                                                       break;
                      11390 ; rs232cmd.c 3186       
                      11391 ; rs232cmd.c 3187                                                               case 8:
0028A8                11393 _692:
                      11394 ; rs232cmd.c 3188                                                                       level = P
                            8dBm;
0028A8 BA72           11396         MOV.W   [R7],#02H
                      11397 ; rs232cmd.c 3189                                                                       break;
0028AA FE57           11399         BR      _753
                      11400 ; rs232cmd.c 3190       
                      11401 ; rs232cmd.c 3191                                                               case 7:
0028AC                11403 _693:
                      11404 ; rs232cmd.c 3192                                                                       level = P
                            7dBm;
0028AC BA73           11406         MOV.W   [R7],#03H
                      11407 ; rs232cmd.c 3193                                                                       break;
0028AE FE55           11409         BR      _753
                      11410 ; rs232cmd.c 3194       
                      11411 ; rs232cmd.c 3195                                                               case 6:
0028B0                11413 _694:
                      11414 ; rs232cmd.c 3196                                                                       level = P
                            6dBm;
0028B0 BA74           11416         MOV.W   [R7],#04H
                      11417 ; rs232cmd.c 3197                                                                       break;
0028B2 FE53           11419         BR      _753
                      11420 ; rs232cmd.c 3198       
                      11421 ; rs232cmd.c 3199                                                               case 5:
0028B4                11423 _695:
                      11424 ; rs232cmd.c 3200                                                                       level = P
                            5dBm;
0028B4 BA75           11426         MOV.W   [R7],#05H
                      11427 ; rs232cmd.c 3201                                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 188

ADDR   CODE            LINE SOURCELINE
0028B6 FE51           11429         BR      _753
                      11430 ; rs232cmd.c 3202       
                      11431 ; rs232cmd.c 3203                                                               case 4:
0028B8                11433 _696:
                      11434 ; rs232cmd.c 3204                                                                       level = P
                            4dBm;
0028B8 BA76           11436         MOV.W   [R7],#06H
                      11437 ; rs232cmd.c 3205                                                                       break;
0028BA FE4F           11439         BR      _753
                      11440 ; rs232cmd.c 3206       
                      11441 ; rs232cmd.c 3207                                                               case 3:
0028BC                11443 _697:
                      11444 ; rs232cmd.c 3208                                                                       level = P
                            3dBm;
0028BC BA77           11446         MOV.W   [R7],#07H
                      11447 ; rs232cmd.c 3209                                                                       break;
0028BE FE4D           11449         BR      _753
                      11450 ; rs232cmd.c 3210       
                      11451 ; rs232cmd.c 3211                                                               case 2:
0028C0                11453 _698:
                      11454 ; rs232cmd.c 3212                                                                       level = P
                            2dBm;
0028C0 9A780008       11456         MOV.W   [R7],#08H
                      11457 ; rs232cmd.c 3213                                                                       break;
0028C4 FE4A           11459         BR      _753
                      11460 ; rs232cmd.c 3214       
                      11461 ; rs232cmd.c 3215                                                               case 1:
0028C6                11463 _699:
                      11464 ; rs232cmd.c 3216                                                                       level = P
                            1dBm;
0028C6 9A780009       11466         MOV.W   [R7],#09H
                      11467 ; rs232cmd.c 3217                                                                       break;
0028CA FE47           11469         BR      _753
                      11470 ; rs232cmd.c 3218       
                      11471 ; rs232cmd.c 3219                                                               case 0:
0028CC                11473 _700:
                      11474 ; rs232cmd.c 3220                                                                       level = M
                            0dBm;
0028CC 9A78000A       11476         MOV.W   [R7],#0AH
                      11477 ; rs232cmd.c 3221                                                                       break;
0028D0 FE44           11479         BR      _753
                      11480 ; rs232cmd.c 3222       
                      11481 ; rs232cmd.c 3223                                                               case -1:
0028D2                11483 _701:
                      11484 ; rs232cmd.c 3224                                                                       level = M
                            1dBm;
0028D2 9A78000B       11486         MOV.W   [R7],#0BH
                      11487 ; rs232cmd.c 3225                                                                       break;
0028D6 FE41           11489         BR      _753
                      11490 ; rs232cmd.c 3226       
                      11491 ; rs232cmd.c 3227                                                               case -2:
0028D8                11493 _702:
                      11494 ; rs232cmd.c 3228                                                                       level = M
                            2dBm;
0028D8 9A78000C       11496         MOV.W   [R7],#0CH
                      11497 ; rs232cmd.c 3229                                                                       break;
0028DC FE3E           11499         BR      _753
                      11500 ; rs232cmd.c 3230       
                      11501 ; rs232cmd.c 3231                                                               case -3:
0028DE                11503 _703:
                      11504 ; rs232cmd.c 3232                                                                       level = M
                            3dBm;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 189

ADDR   CODE            LINE SOURCELINE
0028DE 9A78000D       11506         MOV.W   [R7],#0DH
                      11507 ; rs232cmd.c 3233                                                                       break;
0028E2 FE3B           11509         BR      _753
                      11510 ; rs232cmd.c 3234       
                      11511 ; rs232cmd.c 3235                                                               case -4:
0028E4                11513 _704:
                      11514 ; rs232cmd.c 3236                                                                       level = M
                            4dBm;
0028E4 9A78000E       11516         MOV.W   [R7],#0EH
                      11517 ; rs232cmd.c 3237                                                                       break;
0028E8 FE38           11519         BR      _753
                      11520 ; rs232cmd.c 3238       
                      11521 ; rs232cmd.c 3239                                                               case -5:
0028EA                11523 _705:
                      11524 ; rs232cmd.c 3240                                                                       level = M
                            5dBm;
0028EA 9A78000F       11526         MOV.W   [R7],#0FH
                      11527 ; rs232cmd.c 3241                                                                       break;
0028EE FE35           11529         BR      _753
                      11530 ; rs232cmd.c 3242       
                      11531 ; rs232cmd.c 3243                                                               case -6:
0028F0                11533 _706:
                      11534 ; rs232cmd.c 3244                                                                       level = M
                            6dBm;
0028F0 9A780010       11536         MOV.W   [R7],#010H
                      11537 ; rs232cmd.c 3245                                                                       break;
0028F4 FE32           11539         BR      _753
                      11540 ; rs232cmd.c 3246       
                      11541 ; rs232cmd.c 3247                                                               case -7:
0028F6                11543 _707:
                      11544 ; rs232cmd.c 3248                                                                       level = M
                            7dBm;
0028F6 9A780011       11546         MOV.W   [R7],#011H
                      11547 ; rs232cmd.c 3249                                                                       break;
0028FA FE2F           11549         BR      _753
                      11550 ; rs232cmd.c 3250       
                      11551 ; rs232cmd.c 3251                                                               case -8:
0028FC                11553 _708:
                      11554 ; rs232cmd.c 3252                                                                       level = M
                            8dBm;
0028FC 9A780012       11556         MOV.W   [R7],#012H
                      11557 ; rs232cmd.c 3253                                                                       break;
002900 FE2C           11559         BR      _753
                      11560 ; rs232cmd.c 3254       
                      11561 ; rs232cmd.c 3255                                                               case -9:
002902                11563 _709:
                      11564 ; rs232cmd.c 3256                                                                       level = M
                            9dBm;
002902 9A780013       11566         MOV.W   [R7],#013H
                      11567 ; rs232cmd.c 3257                                                                       break;
002906 FE29           11569         BR      _753
                      11570 ; rs232cmd.c 3258       
                      11571 ; rs232cmd.c 3259                                                               case -10:
002908                11573 _710:
                      11574 ; rs232cmd.c 3260                                                                       level = M
                            10dBm;
002908 9A780014       11576         MOV.W   [R7],#014H
                      11577 ; rs232cmd.c 3261                                                                       break;
00290C FE26           11579         BR      _753
                      11580 ; rs232cmd.c 3262       
                      11581 ; rs232cmd.c 3263                                                               case -11:
00290E                11583 _711:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 190

ADDR   CODE            LINE SOURCELINE
                      11584 ; rs232cmd.c 3264                                                                       level = M
                            11dBm;
00290E 9A780015       11586         MOV.W   [R7],#015H
                      11587 ; rs232cmd.c 3265                                                                       break;
002912 FE23           11589         BR      _753
                      11590 ; rs232cmd.c 3266       
                      11591 ; rs232cmd.c 3267                                                               case -12:
002914                11593 _712:
                      11594 ; rs232cmd.c 3268                                                                       level = M
                            12dBm;
002914 9A780016       11596         MOV.W   [R7],#016H
                      11597 ; rs232cmd.c 3269                                                                       break;
002918 FE20           11599         BR      _753
                      11600 ; rs232cmd.c 3270       
                      11601 ; rs232cmd.c 3271                                                               case -15:
00291A                11603 _713:
                      11604 ; rs232cmd.c 3272                                                                       level = M
                            15dBm;
00291A 9A780017       11606         MOV.W   [R7],#017H
                      11607 ; rs232cmd.c 3273                                                                       break;
00291E FE1D           11609         BR      _753
                      11610 ; rs232cmd.c 3274       
                      11611 ; rs232cmd.c 3275                                                               case -18:
002920                11613 _714:
                      11614 ; rs232cmd.c 3276                                                                       level = M
                            18dBm;
002920 9A780018       11616         MOV.W   [R7],#018H
                      11617 ; rs232cmd.c 3277                                                                       break;
002924 FE1A           11619         BR      _753
                      11620 ; rs232cmd.c 3278       
                      11621 ; rs232cmd.c 3279                                                               case -21:
002926                11623 _715:
                      11624 ; rs232cmd.c 3280                                                                       level = M
                            21dBm;
002926 9A780019       11626         MOV.W   [R7],#019H
                      11627 ; rs232cmd.c 3281                                                                       break;
00292A FE17           11629         BR      _753
                      11630 ; rs232cmd.c 3282       
                      11631 ; rs232cmd.c 3283                                                               case -24:
00292C                11633 _716:
                      11634 ; rs232cmd.c 3284                                                                       level = M
                            24dBm;
00292C 9A78001A       11636         MOV.W   [R7],#01AH
                      11637 ; rs232cmd.c 3285                                                                       break;
002930 FE14           11639         BR      _753
                      11640 ; rs232cmd.c 3286       
                      11641 ; rs232cmd.c 3287                                                               case -27:
002932                11643 _717:
                      11644 ; rs232cmd.c 3288                                                                       level = M
                            27dBm;
002932 9A78001B       11646         MOV.W   [R7],#01BH
                      11647 ; rs232cmd.c 3289                                                                       break;
002936 FE11           11649         BR      _753
                      11650 ; rs232cmd.c 3290       
                      11651 ; rs232cmd.c 3291                                                               case -30:
002938                11653 _718:
                      11654 ; rs232cmd.c 3292                                                                       level = M
                            30dBm;
002938 9A78001C       11656         MOV.W   [R7],#01CH
                      11657 ; rs232cmd.c 3293                                                                       break;
00293C FE0E           11659         BR      _753
                      11660 ; rs232cmd.c 3294       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 191

ADDR   CODE            LINE SOURCELINE
                      11661 ; rs232cmd.c 3295                                                               case -33:
00293E                11663 _719:
                      11664 ; rs232cmd.c 3296                                                                       level = M
                            33dBm;
00293E 9A78001D       11666         MOV.W   [R7],#01DH
                      11667 ; rs232cmd.c 3297                                                                       break;
002942 FE0B           11669         BR      _753
                      11670 ; rs232cmd.c 3298       
                      11671 ; rs232cmd.c 3299                                                               case -36:
002944                11673 _720:
                      11674 ; rs232cmd.c 3300                                                                       level = M
                            36dBm;
002944 9A78001E       11676         MOV.W   [R7],#01EH
                      11677 ; rs232cmd.c 3301                                                                       break;
002948 FE08           11679         BR      _753
                      11680 ; rs232cmd.c 3302       
                      11681 ; rs232cmd.c 3303                                                               default:
00294A                11683 _721:
                      11684 ; rs232cmd.c 3304                                                                       SCPIError
                             = DataOutOfRange;
00294A 964842rr       11686         MOV.B   ES,#SEG( _SCPIError )
00294E 9908rrrr       11687         MOV.W   R0,#SOF( _SCPIError )
002952 9A080021       11688         MOV.W   [R0],#021H
                      11689 ; rs232cmd.c 3305                                                                       return;
002956 FE0D           11691         BR      _761
002958                11693 _722:
002958 BA71           11695         MOV.W   [R7],#01H
                      11696 ; rs232cmd.c 3306                                                       }
                      11697 ; rs232cmd.c 3307                                               }
                      11698 ; rs232cmd.c 3308                                       }
00295A                11700 _753:
                      11701 ; rs232cmd.c 3309       
                      11702 ; rs232cmd.c 3310                                       if ( SetAudioLevel( AnalogAudio, level) =
                            = FAIL)
00295A B900           11704         MOV.W   R0,#00H
00295C 8A17           11705         MOV.W   R1,[R7]
                      11706         CALL    _SetAudioLevel
00295E C4rrrrrr       +11706 ;       FCALL   _SetAudioLevel
002962 6900           11707         OR.W    R0,R0
002964 F206           11708         BNE     _761
                      11709 ; rs232cmd.c 3311                                               SCPIError = ExecErr;
002966 964842rr       11711         MOV.B   ES,#SEG( _SCPIError )
00296A 9908rrrr       11712         MOV.W   R0,#SOF( _SCPIError )
00296E 9A08001D       11713         MOV.W   [R0],#01DH
                      11714 ; rs232cmd.c 3312                               }
                      11715 ; rs232cmd.c 3313                       }
                      11716 ; rs232cmd.c 3314               }
                      11717 ; rs232cmd.c 3315       }
002972                11719 _761:
002972 A972           11720         ADDS.W  R7,#02H
002974 2F30           11722         POP.W   R4, R5
002976 D680           11724         RET
                      11727 ; rs232cmd.c 3316       
                      11728 ; rs232cmd.c 3317       /************************************************************************
                            **/
                      11729 ; rs232cmd.c 3318       /* AudioGenAnalogClick                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      11730 ; rs232cmd.c 3319       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 192

ADDR   CODE            LINE SOURCELINE
                      11731 ; rs232cmd.c 3320       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      11732 ; rs232cmd.c 3321       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      11733 ; rs232cmd.c 3322       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11734 ; rs232cmd.c 3323       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      11735 ; rs232cmd.c 3324       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      11736 ; rs232cmd.c 3325       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      11737 ; rs232cmd.c 3326       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      11738 ; rs232cmd.c 3327       /************************************************************************
                            **/
                      11739 ; rs232cmd.c 3328       void AudioGenAnalogClick( void)
                      11740 ; rs232cmd.c 3329       {
                      11741         ALIGN   1
                      11743         PUBLIC  _AudioGenAnalogClick
002978                11744 _AudioGenAnalogClick:
002978 A97E           11748         ADDS.W  R7,#0EH
                      11751 ; rs232cmd.c 3330               int click;
                      11752 ; rs232cmd.c 3331       
                      11753 ; rs232cmd.c 3332               if ( CmdExecute && !SCPIError)
00297A 964842rr       11755         MOV.B   ES,#SEG( _CmdExecute )
00297E 9908rrrr       11756         MOV.W   R0,#SOF( _CmdExecute )
002982 8200           11757         MOV.B   R0L,[R0]
002984 F363           11758         BEQ     _780
002986 964842rr       11759         MOV.B   ES,#SEG( _SCPIError )
00298A 9908rrrr       11760         MOV.W   R0,#SOF( _SCPIError )
00298E 8A00           11761         MOV.W   R0,[R0]
002990 F25D           11762         BNE     _780
                      11763 ; rs232cmd.c 3333               {
                      11764 ; rs232cmd.c 3334                       if ( CmdRequest)
002992 964842rr       11766         MOV.B   ES,#SEG( _CmdRequest )
002996 9908rrrr       11767         MOV.W   R0,#SOF( _CmdRequest )
00299A 8200           11768         MOV.B   R0L,[R0]
00299C F31C           11769         BEQ     _769
                      11770 ; rs232cmd.c 3335                       {
                      11771 ; rs232cmd.c 3336                               if ( ParCnt)
00299E 964842rr       11773         MOV.B   ES,#SEG( _ParCnt )
0029A2 9908rrrr       11774         MOV.W   R0,#SOF( _ParCnt )
0029A6 8200           11775         MOV.B   R0L,[R0]
0029A8 F306           11776         BEQ     _768
                      11777 ; rs232cmd.c 3337                                       SCPIError = ParNotAllowed;
0029AA 964842rr       11779         MOV.B   ES,#SEG( _SCPIError )
0029AE 9908rrrr       11780         MOV.W   R0,#SOF( _SCPIError )
0029B2 BA06           11781         MOV.W   [R0],#06H
0029B4 FE4B           11782         BR      _780
0029B4 FE4B           11782         BR      _780
0029B6                11783 _768:
                      11784 ; rs232cmd.c 3338                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 193

ADDR   CODE            LINE SOURCELINE
                      11785 ; rs232cmd.c 3339                                       rs232printf( 6, "%d\n", AudioSetup[Analog
                            Audio].Click);
0029B6 B906           11787         MOV.W   R0,#06H
0029B8 964842rr       11788         MOV.B   ES,#SEG( _AudioSetup+12 )
0029BC 9918rrrr       11789         MOV.W   R1,#SOF( _AudioSetup+12 )
0029C0 8A11           11790         MOV.W   R1,[R1]
0029C2 0F02           11791         PUSH.W  R1
0029C4 9938rrrr       11793         MOV.W   R3,#SEG( _9 )
0029C8 9928rrrr       11794         MOV.W   R2,#SOF( _9 )
0029CC 0F0C           11795         PUSH.W  R2, R3
                      11797         CALL    _rs232printf
0029CE C4rrrrrr       +11797 ;       FCALL   _rs232printf
0029D2 A976           11798         ADDS.W  R7,#06H
                      11800 ; rs232cmd.c 3340                       }
0029D4 FE3B           11802         BR      _780
0029D4 FE3B           11802         BR      _780
0029D6                11803 _769:
                      11804 ; rs232cmd.c 3341                       else
                      11805 ; rs232cmd.c 3342                       {
                      11806 ; rs232cmd.c 3343                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
0029D6 964842rr       11808         MOV.B   ES,#SEG( _ParCnt )
0029DA 9908rrrr       11809         MOV.W   R0,#SOF( _ParCnt )
0029DE 8200           11810         MOV.B   R0L,[R0]
0029E0 910401         11811         CMP.B   R0L,#01H
0029E3 F215           11812         BNE     _770
0029E5 9918rrrr       11813         MOV.W   R1,#SEG( _Cmd )
0029E9 9908rrrr       11814         MOV.W   R0,#SOF( _Cmd )
0029ED 9168rr         11815         MOV.B   R3L,#SEG( __lc_bs )
0029F0 7177           11816         XOR.B   R3H,R3H
0029F2 8927           11817         MOV.W   R2,R7
0029F4 0F0C           11818         PUSH.W  R2, R3
0029F6 9938rrrr       11820         MOV.W   R3,#SEG( _10 )
0029FA 9928rrrr       11821         MOV.W   R2,#SOF( _10 )
0029FE 0F0C           11822         PUSH.W  R2, R3
                      11824         CALL    _sscanf
002A00 C4rrrrrr       +11824 ;       FCALL   _sscanf
002A04 99700008       11825         ADD.W   R7,#08H
002A08 99040001       11827         CMP.W   R0,#01H
002A0C F306           11828         BEQ     _771
002A0C F306           11828         BEQ     _771
002A0E                11829 _770:
                      11830 ; rs232cmd.c 3344                                       SCPIError = SyntaxErr;
002A0E 964842rr       11832         MOV.B   ES,#SEG( _SCPIError )
002A12 9908rrrr       11833         MOV.W   R0,#SOF( _SCPIError )
002A16 BA03           11834         MOV.W   [R0],#03H
002A18 FE19           11835         BR      _780
002A18 FE19           11835         BR      _780
002A1A                11836 _771:
                      11837 ; rs232cmd.c 3345                               else {
                      11838 ; rs232cmd.c 3346                                       if (( click != click1s) && ( click != cli
                            ck3s))
002A1A 9A740001       11840         CMP.W   [R7],#01H
002A1E F30A           11841         BEQ     _773
002A20 9A740003       11842         CMP.W   [R7],#03H
002A24 F307           11843         BEQ     _773
                      11844 ; rs232cmd.c 3347                                               SCPIError = DataOutOfRange;
002A26 964842rr       11846         MOV.B   ES,#SEG( _SCPIError )
002A2A 9908rrrr       11847         MOV.W   R0,#SOF( _SCPIError )
002A2E 9A080021       11848         MOV.W   [R0],#021H
002A32 FE0C           11849         BR      _780
002A32 FE0C           11849         BR      _780
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 194

ADDR   CODE            LINE SOURCELINE
002A34                11850 _773:
                      11851 ; rs232cmd.c 3348                                       else
                      11852 ; rs232cmd.c 3349                                       {
                      11853 ; rs232cmd.c 3350                                               if ( SetAudioClick( AnalogAudio, 
                            click) == FAIL)
002A34 B900           11855         MOV.W   R0,#00H
002A36 8A17           11856         MOV.W   R1,[R7]
                      11857         CALL    _SetAudioClick
002A38 C4rrrrrr       +11857 ;       FCALL   _SetAudioClick
002A3C 6900           11858         OR.W    R0,R0
002A3E F206           11859         BNE     _780
                      11860 ; rs232cmd.c 3351                                                       SCPIError = ExecErr;
002A40 964842rr       11862         MOV.B   ES,#SEG( _SCPIError )
002A44 9908rrrr       11863         MOV.W   R0,#SOF( _SCPIError )
002A48 9A08001D       11864         MOV.W   [R0],#01DH
                      11865 ; rs232cmd.c 3352                                       }
                      11866 ; rs232cmd.c 3353                               }
                      11867 ; rs232cmd.c 3354                       }
                      11868 ; rs232cmd.c 3355               }
002A4C                11870 _780:
                      11871 ; rs232cmd.c 3356       }
002A4C A972           11873         ADDS.W  R7,#02H
002A4E D680           11875         RET
                      11877 ; rs232cmd.c 3357       
                      11878 ; rs232cmd.c 3358       
                      11879 ; rs232cmd.c 3359       /************************************************************************
                            **/
                      11880 ; rs232cmd.c 3360       /* AudioGenAESEBU                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      11881 ; rs232cmd.c 3361       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11882 ; rs232cmd.c 3362       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                    */
                      11883 ; rs232cmd.c 3363       /* Revised:             000617                                           
                                                                                                                             
                                                                                    */
                      11884 ; rs232cmd.c 3364       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      11885 ; rs232cmd.c 3365       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      11886 ; rs232cmd.c 3366       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                    */
                      11887 ; rs232cmd.c 3367       /* Returns:       --                                                     
                                                                                                                             
                                                                                                            */
                      11888 ; rs232cmd.c 3368       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      11889 ; rs232cmd.c 3369       /************************************************************************
                            **/
                      11890 ; rs232cmd.c 3370       void AudioGenAESEBU( void)
                      11891 ; rs232cmd.c 3371       {
                      11892         ALIGN   1
                      11894         PUBLIC  _AudioGenAESEBU
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 195

ADDR   CODE            LINE SOURCELINE
002A50                11895 _AudioGenAESEBU:
002A50 0F70           11899         PUSH.W  R4, R5, R6
                      11905 ; rs232cmd.c 3372               char code *str;
                      11906 ; rs232cmd.c 3373               int level;
                      11907 ; rs232cmd.c 3374       
                      11908 ; rs232cmd.c 3375               if ( CmdExecute && !SCPIError)
002A52 964842rr       11910         MOV.B   ES,#SEG( _CmdExecute )
002A56 9908rrrr       11911         MOV.W   R0,#SOF( _CmdExecute )
002A5A 8200           11912         MOV.B   R0L,[R0]
                      11913         BEQ     _815
002A5C F202           +11913 ;       BNE     _LG_696
002A5E D50136         +11913 ;       JMP.L   _815
002A62 D5013600       +11913 ;       JMP.L   _815
002A62                +11913 _LG_696:
002A62 964842rr       11914         MOV.B   ES,#SEG( _SCPIError )
002A66 9908rrrr       11915         MOV.W   R0,#SOF( _SCPIError )
002A6A 8A00           11916         MOV.W   R0,[R0]
                      11917         BNE     _815
002A6C F302           +11917 ;       BEQ     _LG_698
002A6E D5012E         +11917 ;       JMP.L   _815
002A72 D5012E00       +11917 ;       JMP.L   _815
002A72                +11917 _LG_698:
                      11918 ; rs232cmd.c 3376               {
                      11919 ; rs232cmd.c 3377                       if ( !CmdRequest)
002A72 964842rr       11921         MOV.B   ES,#SEG( _CmdRequest )
002A76 9908rrrr       11922         MOV.W   R0,#SOF( _CmdRequest )
002A7A 8200           11923         MOV.B   R0L,[R0]
002A7C F207           11924         BNE     _786
                      11925 ; rs232cmd.c 3378                                       SCPIError = SyntaxErr;
002A7E 964842rr       11927         MOV.B   ES,#SEG( _SCPIError )
002A82 9908rrrr       11928         MOV.W   R0,#SOF( _SCPIError )
002A86 BA03           11929         MOV.W   [R0],#03H
                      11930         BR      _815
002A88 D50121         +11930         JMP.L   _815
002A88 D5012100       +11930         JMP.L   _815
002A8C                11931 _786:
                      11933 ; rs232cmd.c 3379                       else
                      11934 ; rs232cmd.c 3380                       {
                      11935 ; rs232cmd.c 3381                               if ( ParCnt)
002A8C 964842rr       11937         MOV.B   ES,#SEG( _ParCnt )
002A90 9908rrrr       11938         MOV.W   R0,#SOF( _ParCnt )
002A94 8200           11939         MOV.B   R0L,[R0]
002A96 F307           11940         BEQ     _787
                      11941 ; rs232cmd.c 3382                                       SCPIError = ParNotAllowed;
002A98 964842rr       11943         MOV.B   ES,#SEG( _SCPIError )
002A9C 9908rrrr       11944         MOV.W   R0,#SOF( _SCPIError )
002AA0 BA06           11945         MOV.W   [R0],#06H
                      11946         BR      _815
002AA2 D50114         +11946         JMP.L   _815
002AA2 D5011400       +11946         JMP.L   _815
002AA6                11947 _787:
                      11950 ; rs232cmd.c 3383                               else
                      11951 ; rs232cmd.c 3384                               {
                      11952 ; rs232cmd.c 3385                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002AA6 964842rr       11954         MOV.B   ES,#SEG( _AudioSetup+14 )
002AAA 9908rrrr       11955         MOV.W   R0,#SOF( _AudioSetup+14 )
002AAE 8A00           11956         MOV.W   R0,[R0]
002AB0 E900000C       11957         MULU.W  R0,#0CH
002AB4 8920           11958         MOV.W   R2,R0
002AB6 B930           11959         MOVS.W  R3,#00H
002AB8 9918rrrr       11960         MOV.W   R1,#SEG( _AESEBUSystemPar )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 196

ADDR   CODE            LINE SOURCELINE
002ABC 9908rrrr       11961         MOV.W   R0,#SOF( _AESEBUSystemPar )
002AC0 0902           11962         ADD.W   R0,R2
002AC2 1913           11963         ADDC.W  R1,R3
002AC4 862C43         11964         MOV.B   CS,R1L
002AC7 8820           11965         MOVC.W  R2,[R0+]
002AC9 99040000       11966         CMP.W   R0,#00H
002ACD F202           11967         BNE     _816
002ACF A64143         11968         ADDS.B  CS,#01H
002ACF A64143         11968         ADDS.B  CS,#01H
002AD2                11969 _816:
002AD2 8830           11970         MOVC.W  R3,[R0+]
002AD4 8953           11971         MOV.W   R5,R3
002AD6 8942           11972         MOV.W   R4,R2
                      11974 ; rs232cmd.c 3386       
                      11975 ; rs232cmd.c 3387                                       while ( *str)
002AD8 866C43         11977         MOV.B   CS,R3L
002ADB 8062           11978         MOVC.B  R3L,[R2+]
002ADD F312           11979         BEQ     _789
002ADD F31200         11979         BEQ     _789
002AE0                11980 _788:
                      11981 ; rs232cmd.c 3388                                               rs232putchar( *str++);
002AE0 8915           11983         MOV.W   R1,R5
002AE2 8904           11984         MOV.W   R0,R4
002AE4 862C43         11985         MOV.B   CS,R1L
002AE7 8020           11986         MOVC.B  R1L,[R0+]
002AE9 8102           11987         MOV.B   R0L,R1L
                      11988         CALL    _rs232putchar
002AEB C4rrrrrr       +11988 ;       FCALL   _rs232putchar
002AEF 99400001       11989         ADD.W   R4,#01H
002AF3 99510000       11990         ADDC.W  R5,#00H
002AF7 8915           11994         MOV.W   R1,R5
002AF9 8904           11995         MOV.W   R0,R4
002AFB 862C43         11996         MOV.B   CS,R1L
002AFE 8020           11997         MOVC.B  R1L,[R0+]
002B00 F2EF           11998         BNE     _788
002B02                12000 _789:
                      12001 ; rs232cmd.c 3389       
                      12002 ; rs232cmd.c 3390                                       rs232putchar( ',');
002B02 91082C         12004         MOV.B   R0L,#02CH
                      12005         CALL    _rs232putchar
002B05 C4rrrrrr       +12005 ;       FCALL   _rs232putchar
                      12006 ; rs232cmd.c 3391       
                      12007 ; rs232cmd.c 3392                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002B09 964842rr       12009         MOV.B   ES,#SEG( _AudioSetup+16 )
002B0D 9908rrrr       12010         MOV.W   R0,#SOF( _AudioSetup+16 )
002B11 8A00           12011         MOV.W   R0,[R0]
002B13 E900000C       12012         MULU.W  R0,#0CH
002B17 B910           12013         MOVS.W  R1,#00H
002B19 9958rrrr       12014         MOV.W   R5,#SEG( _AudioSignalPar )
002B1D 9948rrrr       12015         MOV.W   R4,#SOF( _AudioSignalPar )
002B21 0940           12017         ADD.W   R4,R0
002B23 1951           12018         ADDC.W  R5,R1
002B25 86AC43         12019         MOV.B   CS,R5L
002B28 8804           12020         MOVC.W  R0,[R4+]
002B2A 99440000       12021         CMP.W   R4,#00H
002B2E F202           12022         BNE     _817
002B30 A64143         12023         ADDS.B  CS,#01H
002B30 A6414300       12023         ADDS.B  CS,#01H
002B34                12024 _817:
002B34 8814           12025         MOVC.W  R1,[R4+]
002B36 8951           12026         MOV.W   R5,R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 197

ADDR   CODE            LINE SOURCELINE
002B38 8940           12027         MOV.W   R4,R0
                      12029 ; rs232cmd.c 3393       
                      12030 ; rs232cmd.c 3394                                       while ( *str)
002B3A 862C43         12032         MOV.B   CS,R1L
002B3D 8020           12033         MOVC.B  R1L,[R0+]
002B3F F312           12034         BEQ     _791
002B3F F31200         12034         BEQ     _791
002B42                12035 _790:
                      12036 ; rs232cmd.c 3395                                               rs232putchar( *str++);
002B42 8915           12038         MOV.W   R1,R5
002B44 8904           12039         MOV.W   R0,R4
002B46 862C43         12040         MOV.B   CS,R1L
002B49 8020           12041         MOVC.B  R1L,[R0+]
002B4B 8102           12042         MOV.B   R0L,R1L
                      12043         CALL    _rs232putchar
002B4D C4rrrrrr       +12043 ;       FCALL   _rs232putchar
002B51 99400001       12044         ADD.W   R4,#01H
002B55 99510000       12045         ADDC.W  R5,#00H
002B59 8915           12049         MOV.W   R1,R5
002B5B 8904           12050         MOV.W   R0,R4
002B5D 862C43         12051         MOV.B   CS,R1L
002B60 8020           12052         MOVC.B  R1L,[R0+]
002B62 F2EF           12053         BNE     _790
002B64                12055 _791:
002B64 91082C         12056         MOV.B   R0L,#02CH
                      12057 ; rs232cmd.c 3396       
                      12058 ; rs232cmd.c 3397                                       rs232putchar( ',');
                      12060         CALL    _rs232putchar
002B67 C4rrrrrr       +12060 ;       FCALL   _rs232putchar
                      12061 ; rs232cmd.c 3398       
                      12062 ; rs232cmd.c 3399                                       str = NULL;
002B6B B950           12064         MOV.W   R5,#00H
002B6D B940           12065         MOV.W   R4,#00H
                      12068 ; rs232cmd.c 3400       
                      12069 ; rs232cmd.c 3401                                       switch ( AudioSetup[AESEBUAudio].Level)
002B6F 964842rr       12071         MOV.B   ES,#SEG( _AudioSetup+18 )
002B73 9908rrrr       12072         MOV.W   R0,#SOF( _AudioSetup+18 )
002B77 8A00           12073         MOV.W   R0,[R0]
002B79 99040000       12074         CMP.W   R0,#00H
002B7D F314           12075         BEQ     _792
002B7F 99040001       12076         CMP.W   R0,#01H
002B83 F313           12077         BEQ     _793
002B85 99040002       12078         CMP.W   R0,#02H
002B89 F313           12079         BEQ     _794
002B8B 99040003       12080         CMP.W   R0,#03H
002B8F F313           12081         BEQ     _795
002B91 99040004       12082         CMP.W   R0,#04H
002B95 F313           12083         BEQ     _796
002B97 99040005       12084         CMP.W   R0,#05H
002B9B F313           12085         BEQ     _797
002B9D 99040006       12086         CMP.W   R0,#06H
002BA1 F313           12087         BEQ     _798
002BA3 FE15           12088         BR      _799
                      12089 ; rs232cmd.c 3402                                       {
                      12090 ; rs232cmd.c 3403                                               case M0dBFS:
002BA6                12092 _792:
                      12093 ; rs232cmd.c 3404                                                       level = 0;
002BA6 B960           12095         MOV.W   R6,#00H
                      12098 ; rs232cmd.c 3405                                                       break;
002BA8 FE31           12100         BR      _808
                      12101 ; rs232cmd.c 3406       
                      12102 ; rs232cmd.c 3407                                               case M9dBFS:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 198

ADDR   CODE            LINE SOURCELINE
002BAA                12104 _793:
                      12105 ; rs232cmd.c 3408                                                       level = -9;
002BAA 9968FFF7       12107         MOV.W   R6,#0FFF7H
                      12110 ; rs232cmd.c 3409                                                       break;
002BAE FE2E           12112         BR      _808
                      12113 ; rs232cmd.c 3410       
                      12114 ; rs232cmd.c 3411                                               case M12dBFS:
002BB0                12116 _794:
                      12117 ; rs232cmd.c 3412                                                       level = -12;
002BB0 9968FFF4       12119         MOV.W   R6,#0FFF4H
                      12122 ; rs232cmd.c 3413                                                       break;
002BB4 FE2B           12124         BR      _808
                      12125 ; rs232cmd.c 3414       
                      12126 ; rs232cmd.c 3415                                               case M15dBFS:
002BB6                12128 _795:
                      12129 ; rs232cmd.c 3416                                                       level = -15;
002BB6 9968FFF1       12131         MOV.W   R6,#0FFF1H
                      12134 ; rs232cmd.c 3417                                                       break;
002BBA FE28           12136         BR      _808
                      12137 ; rs232cmd.c 3418       
                      12138 ; rs232cmd.c 3419                                               case M16dBFS:
002BBC                12140 _796:
                      12141 ; rs232cmd.c 3420                                                       level = -16;
002BBC 9968FFF0       12143         MOV.W   R6,#0FFF0H
                      12146 ; rs232cmd.c 3421                                                       break;
002BC0 FE25           12148         BR      _808
                      12149 ; rs232cmd.c 3422       
                      12150 ; rs232cmd.c 3423                                               case M18dBFS:
002BC2                12152 _797:
                      12153 ; rs232cmd.c 3424                                                       level = -18;
002BC2 9968FFEE       12155         MOV.W   R6,#0FFEEH
                      12158 ; rs232cmd.c 3425                                                       break;
002BC6 FE22           12160         BR      _808
                      12161 ; rs232cmd.c 3426       
                      12162 ; rs232cmd.c 3427                                               case M21dBFS:
002BC8                12164 _798:
                      12165 ; rs232cmd.c 3428                                                       level = -21;
002BC8 9968FFEB       12167         MOV.W   R6,#0FFEBH
                      12170 ; rs232cmd.c 3429                                                       break;
002BCC FE1F           12172         BR      _808
                      12173 ; rs232cmd.c 3430       
                      12174 ; rs232cmd.c 3431                                               default:
002BCE                12176 _799:
                      12177 ; rs232cmd.c 3432                                                       str = SILENCEParTxt;
002BCE 9958rrrr       12179         MOV.W   R5,#SEG( _SILENCEParTxt )
002BD2 9948rrrr       12180         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12183 ; rs232cmd.c 3433       
                      12184 ; rs232cmd.c 3434                                                       while ( *str)
002BD6 8915           12186         MOV.W   R1,R5
002BD8 8904           12187         MOV.W   R0,R4
002BDA 862C43         12188         MOV.B   CS,R1L
002BDD 8020           12189         MOVC.B  R1L,[R0+]
002BDF F312           12190         BEQ     _801
002BDF F31200         12190         BEQ     _801
002BE2                12191 _800:
                      12192 ; rs232cmd.c 3435                                                               rs232putchar( *st
                            r++);
002BE2 8915           12194         MOV.W   R1,R5
002BE4 8904           12195         MOV.W   R0,R4
002BE6 862C43         12196         MOV.B   CS,R1L
002BE9 8020           12197         MOVC.B  R1L,[R0+]
002BEB 8102           12198         MOV.B   R0L,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 199

ADDR   CODE            LINE SOURCELINE
                      12199         CALL    _rs232putchar
002BED C4rrrrrr       +12199 ;       FCALL   _rs232putchar
002BF1 99400001       12200         ADD.W   R4,#01H
002BF5 99510000       12201         ADDC.W  R5,#00H
002BF9 8915           12205         MOV.W   R1,R5
002BFB 8904           12206         MOV.W   R0,R4
002BFD 862C43         12207         MOV.B   CS,R1L
002C00 8020           12208         MOVC.B  R1L,[R0+]
002C02 F2EF           12209         BNE     _800
002C04                12211 _801:
002C04 91082C         12212         MOV.B   R0L,#02CH
                      12213 ; rs232cmd.c 3436       
                      12214 ; rs232cmd.c 3437                                                       rs232putchar( ',');
                      12216         CALL    _rs232putchar
002C07 C4rrrrrr       +12216 ;       FCALL   _rs232putchar
                      12217 ; rs232cmd.c 3438                                                       break;
                      12218 ; rs232cmd.c 3439                                               }
002C0C                12220 _808:
                      12221 ; rs232cmd.c 3440       
                      12222 ; rs232cmd.c 3441                                       if ( str == NULL)
002C0C 6954           12224         OR.W    R5,R4
002C0E F20A           12225         BNE     _809
                      12226 ; rs232cmd.c 3442                                               rs232printf( 6, "%d,", level);
002C10 B906           12228         MOV.W   R0,#06H
002C12 0F40           12229         PUSH.W  R6
002C14 9938rrrr       12232         MOV.W   R3,#SEG( _533 )
002C18 9928rrrr       12233         MOV.W   R2,#SOF( _533 )
002C1C 0F0C           12234         PUSH.W  R2, R3
                      12236         CALL    _rs232printf
002C1E C4rrrrrr       +12236 ;       FCALL   _rs232printf
002C22 A976           12237         ADDS.W  R7,#06H
002C24                12239 _809:
                      12240 ; rs232cmd.c 3443       
                      12241 ; rs232cmd.c 3444                                       rs232printf( 6, "%.1f,", AudioSetup[AESEB
                            UAudio].Timing);
002C24 964842rr       12243         MOV.B   ES,#SEG( _AudioSetup+20 )
002C28 9918rrrr       12244         MOV.W   R1,#SOF( _AudioSetup+20 )
002C2C 8B01           12245         MOV.W   R0,[R1+]
002C2E 8A11           12246         MOV.W   R1,[R1]
002C30 C4rrrrrr       12247         FCALL   __SPF2DPF
002C34 0F0F           12248         PUSH.W  R0, R1, R2, R3
002C36 9918rrrr       12250         MOV.W   R1,#SEG( _785 )
002C3A 9908rrrr       12251         MOV.W   R0,#SOF( _785 )
002C3E 0F03           12252         PUSH.W  R0, R1
002C40 B906           12254         MOV.W   R0,#06H
                      12255         CALL    _rs232printf
002C42 C4rrrrrr       +12255 ;       FCALL   _rs232printf
002C46 9970000C       12256         ADD.W   R7,#0CH
                      12258 ; rs232cmd.c 3445       
                      12259 ; rs232cmd.c 3446                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
002C4A 964842rr       12261         MOV.B   ES,#SEG( _AudioSetup+24 )
002C4E 9908rrrr       12262         MOV.W   R0,#SOF( _AudioSetup+24 )
002C52 8A00           12263         MOV.W   R0,[R0]
002C54 E900000C       12264         MULU.W  R0,#0CH
002C58 8920           12265         MOV.W   R2,R0
002C5A B930           12266         MOVS.W  R3,#00H
002C5C 9918rrrr       12267         MOV.W   R1,#SEG( _AudioFrequencyPar )
002C60 9908rrrr       12268         MOV.W   R0,#SOF( _AudioFrequencyPar )
002C64 0902           12269         ADD.W   R0,R2
002C66 1913           12270         ADDC.W  R1,R3
002C68 862C43         12271         MOV.B   CS,R1L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 200

ADDR   CODE            LINE SOURCELINE
002C6B 8840           12272         MOVC.W  R4,[R0+]
002C6D 99040000       12273         CMP.W   R0,#00H
002C71 F202           12274         BNE     _818
002C73 A64143         12275         ADDS.B  CS,#01H
002C73 A64143         12275         ADDS.B  CS,#01H
002C76                12276 _818:
002C76 8850           12277         MOVC.W  R5,[R0+]
                      12280 ; rs232cmd.c 3447       
                      12281 ; rs232cmd.c 3448                                       while ( *str)
002C78 8915           12283         MOV.W   R1,R5
002C7A 8904           12284         MOV.W   R0,R4
002C7C 862C43         12285         MOV.B   CS,R1L
002C7F 8020           12286         MOVC.B  R1L,[R0+]
002C81 F312           12287         BEQ     _811
002C81 F31200         12287         BEQ     _811
002C84                12288 _810:
                      12289 ; rs232cmd.c 3449                                               rs232putchar( *str++);
002C84 8915           12291         MOV.W   R1,R5
002C86 8904           12292         MOV.W   R0,R4
002C88 862C43         12293         MOV.B   CS,R1L
002C8B 8020           12294         MOVC.B  R1L,[R0+]
002C8D 8102           12295         MOV.B   R0L,R1L
                      12296         CALL    _rs232putchar
002C8F C4rrrrrr       +12296 ;       FCALL   _rs232putchar
002C93 99400001       12297         ADD.W   R4,#01H
002C97 99510000       12298         ADDC.W  R5,#00H
002C9B 8915           12302         MOV.W   R1,R5
002C9D 8904           12303         MOV.W   R0,R4
002C9F 862C43         12304         MOV.B   CS,R1L
002CA2 8020           12305         MOVC.B  R1L,[R0+]
002CA4 F2EF           12306         BNE     _810
002CA6                12308 _811:
                      12309 ; rs232cmd.c 3450       
                      12310 ; rs232cmd.c 3451                                       rs232putchar( ',');
002CA6 91082C         12312         MOV.B   R0L,#02CH
                      12313         CALL    _rs232putchar
002CA9 C4rrrrrr       +12313 ;       FCALL   _rs232putchar
                      12314 ; rs232cmd.c 3452       
                      12315 ; rs232cmd.c 3453                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
002CAD 964842rr       12317         MOV.B   ES,#SEG( _AudioSetup+26 )
002CB1 9908rrrr       12318         MOV.W   R0,#SOF( _AudioSetup+26 )
002CB5 8A00           12319         MOV.W   R0,[R0]
002CB7 0F01           12320         PUSH.W  R0
002CB9 9918rrrr       12322         MOV.W   R1,#SEG( _9 )
002CBD 9908rrrr       12323         MOV.W   R0,#SOF( _9 )
002CC1 0F03           12324         PUSH.W  R0, R1
002CC3 B906           12326         MOV.W   R0,#06H
                      12327         CALL    _rs232printf
002CC5 C4rrrrrr       +12327 ;       FCALL   _rs232printf
002CC9 A976           12328         ADDS.W  R7,#06H
                      12330 ; rs232cmd.c 3454                               }
                      12331 ; rs232cmd.c 3455                       }
                      12332 ; rs232cmd.c 3456               }
002CCC                12334 _815:
                      12335 ; rs232cmd.c 3457       }
002CCC 2F70           12337         POP.W   R4, R5, R6
002CCE D680           12339         RET
                      12342 ; rs232cmd.c 3458       
                      12343 ; rs232cmd.c 3459       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 201

ADDR   CODE            LINE SOURCELINE
                      12344 ; rs232cmd.c 3460       /* AudioGenAESEBUSystem                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      12345 ; rs232cmd.c 3461       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12346 ; rs232cmd.c 3462       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12347 ; rs232cmd.c 3463       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      12348 ; rs232cmd.c 3464       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12349 ; rs232cmd.c 3465       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12350 ; rs232cmd.c 3466       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12351 ; rs232cmd.c 3467       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12352 ; rs232cmd.c 3468       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12353 ; rs232cmd.c 3469       /************************************************************************
                            **/
                      12354 ; rs232cmd.c 3470       void AudioGenAESEBUSystem( void)
                      12355 ; rs232cmd.c 3471       {
                      12356         ALIGN   1
                      12358         PUBLIC  _AudioGenAESEBUSystem
002CD0                12359 _AudioGenAESEBUSystem:
002CD0 0F30           12363         PUSH.W  R4, R5
                      12369 ; rs232cmd.c 3472               int system;
                      12370 ; rs232cmd.c 3473               char code *str;
                      12371 ; rs232cmd.c 3474       
                      12372 ; rs232cmd.c 3475               if ( CmdExecute && !SCPIError)
002CD2 964842rr       12374         MOV.B   ES,#SEG( _CmdExecute )
002CD6 9908rrrr       12375         MOV.W   R0,#SOF( _CmdExecute )
002CDA 8200           12376         MOV.B   R0L,[R0]
002CDC F379           12377         BEQ     _831
002CDE 964842rr       12378         MOV.B   ES,#SEG( _SCPIError )
002CE2 9908rrrr       12379         MOV.W   R0,#SOF( _SCPIError )
002CE6 8A00           12380         MOV.W   R0,[R0]
002CE8 F273           12381         BNE     _831
                      12382 ; rs232cmd.c 3476               {
                      12383 ; rs232cmd.c 3477                       if ( CmdRequest)
002CEA 964842rr       12385         MOV.B   ES,#SEG( _CmdRequest )
002CEE 9908rrrr       12386         MOV.W   R0,#SOF( _CmdRequest )
002CF2 8200           12387         MOV.B   R0L,[R0]
002CF4 F33F           12388         BEQ     _822
                      12389 ; rs232cmd.c 3478                       {
                      12390 ; rs232cmd.c 3479                               if ( ParCnt)
002CF6 964842rr       12392         MOV.B   ES,#SEG( _ParCnt )
002CFA 9908rrrr       12393         MOV.W   R0,#SOF( _ParCnt )
002CFE 8200           12394         MOV.B   R0L,[R0]
002D00 F306           12395         BEQ     _819
                      12396 ; rs232cmd.c 3480                                       SCPIError = ParNotAllowed;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 202

ADDR   CODE            LINE SOURCELINE
002D02 964842rr       12398         MOV.B   ES,#SEG( _SCPIError )
002D06 9908rrrr       12399         MOV.W   R0,#SOF( _SCPIError )
002D0A BA06           12400         MOV.W   [R0],#06H
002D0C FE61           12401         BR      _831
002D0C FE61           12401         BR      _831
002D0E                12402 _819:
                      12403 ; rs232cmd.c 3481                               else
                      12404 ; rs232cmd.c 3482                               {
                      12405 ; rs232cmd.c 3483                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002D0E 964842rr       12407         MOV.B   ES,#SEG( _AudioSetup+14 )
002D12 9908rrrr       12408         MOV.W   R0,#SOF( _AudioSetup+14 )
002D16 8A00           12409         MOV.W   R0,[R0]
002D18 E900000C       12410         MULU.W  R0,#0CH
002D1C 8920           12411         MOV.W   R2,R0
002D1E B930           12412         MOVS.W  R3,#00H
002D20 9918rrrr       12413         MOV.W   R1,#SEG( _AESEBUSystemPar )
002D24 9908rrrr       12414         MOV.W   R0,#SOF( _AESEBUSystemPar )
002D28 0902           12415         ADD.W   R0,R2
002D2A 1913           12416         ADDC.W  R1,R3
002D2C 862C43         12417         MOV.B   CS,R1L
002D2F 8820           12418         MOVC.W  R2,[R0+]
002D31 99040000       12419         CMP.W   R0,#00H
002D35 F202           12420         BNE     _832
002D37 A64143         12421         ADDS.B  CS,#01H
002D37 A64143         12421         ADDS.B  CS,#01H
002D3A                12422 _832:
002D3A 8830           12423         MOVC.W  R3,[R0+]
002D3C 8953           12424         MOV.W   R5,R3
002D3E 8942           12425         MOV.W   R4,R2
                      12427 ; rs232cmd.c 3484       
                      12428 ; rs232cmd.c 3485                                       while ( *str)
002D40 866C43         12430         MOV.B   CS,R3L
002D43 8062           12431         MOVC.B  R3L,[R2+]
002D45 F312           12432         BEQ     _821
002D45 F31200         12432         BEQ     _821
002D48                12433 _820:
                      12434 ; rs232cmd.c 3486                                               rs232putchar( *str++);
002D48 8915           12436         MOV.W   R1,R5
002D4A 8904           12437         MOV.W   R0,R4
002D4C 862C43         12438         MOV.B   CS,R1L
002D4F 8020           12439         MOVC.B  R1L,[R0+]
002D51 8102           12440         MOV.B   R0L,R1L
                      12441         CALL    _rs232putchar
002D53 C4rrrrrr       +12441 ;       FCALL   _rs232putchar
002D57 99400001       12442         ADD.W   R4,#01H
002D5B 99510000       12443         ADDC.W  R5,#00H
002D5F 8915           12447         MOV.W   R1,R5
002D61 8904           12448         MOV.W   R0,R4
002D63 862C43         12449         MOV.B   CS,R1L
002D66 8020           12450         MOVC.B  R1L,[R0+]
002D68 F2EF           12451         BNE     _820
002D6A                12453 _821:
                      12454 ; rs232cmd.c 3487       
                      12455 ; rs232cmd.c 3488                                       rs232putchar('\n');
002D6A 91080A         12457         MOV.B   R0L,#0AH
                      12458         CALL    _rs232putchar
002D6D C4rrrrrr       +12458 ;       FCALL   _rs232putchar
                      12459 ; rs232cmd.c 3489                               }
                      12460 ; rs232cmd.c 3490                       }
002D71 FE2F           12462         BR      _831
002D71 FE2F00         12462         BR      _831
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 203

ADDR   CODE            LINE SOURCELINE
002D74                12463 _822:
                      12464 ; rs232cmd.c 3491                       else
                      12465 ; rs232cmd.c 3492                       {
                      12466 ; rs232cmd.c 3493                               if ( ParCnt != 1)
002D74 964842rr       12468         MOV.B   ES,#SEG( _ParCnt )
002D78 9908rrrr       12469         MOV.W   R0,#SOF( _ParCnt )
002D7C 8200           12470         MOV.B   R0L,[R0]
002D7E 910401         12471         CMP.B   R0L,#01H
002D81 F307           12472         BEQ     _823
                      12473 ; rs232cmd.c 3494                                       SCPIError = SyntaxErr;
002D83 964842rr       12475         MOV.B   ES,#SEG( _SCPIError )
002D87 9908rrrr       12476         MOV.W   R0,#SOF( _SCPIError )
002D8B BA03           12477         MOV.W   [R0],#03H
002D8D FE21           12478         BR      _831
002D8D FE2100         12478         BR      _831
002D90                12479 _823:
                      12480 ; rs232cmd.c 3495                               else
                      12481 ; rs232cmd.c 3496                               {
                      12482 ; rs232cmd.c 3497                                       system = FindParameter( Cmd, AESEBUSystem
                            Par);
002D90 9918rrrr       12484         MOV.W   R1,#SEG( _Cmd )
002D94 9908rrrr       12485         MOV.W   R0,#SOF( _Cmd )
002D98 9938rrrr       12486         MOV.W   R3,#SEG( _AESEBUSystemPar )
002D9C 9928rrrr       12487         MOV.W   R2,#SOF( _AESEBUSystemPar )
002DA0 C5192C         12488         CALL    _FindParameter
                      12490 ; rs232cmd.c 3498               
                      12491 ; rs232cmd.c 3499                                       if ( system > -1)
002DA3 8910           12493         MOV.W   R1,R0
002DA5 9914FFFF       12494         CMP.W   R1,#0FFFFH
002DA9 FD0D           12497         BLE     _824
                      12498 ; rs232cmd.c 3500                                       {
                      12499 ; rs232cmd.c 3501                                               if ( SetAudioSystem( AESEBUAudio,
                             system) == FAIL)
002DAB B901           12501         MOV.W   R0,#01H
                      12502         CALL    _SetAudioSystem
002DAD C4rrrrrr       +12502 ;       FCALL   _SetAudioSystem
002DB1 6900           12504         OR.W    R0,R0
002DB3 F20E           12505         BNE     _831
                      12506 ; rs232cmd.c 3502                                                       SCPIError = ExecErr;
002DB5 964842rr       12508         MOV.B   ES,#SEG( _SCPIError )
002DB9 9908rrrr       12509         MOV.W   R0,#SOF( _SCPIError )
002DBD 9A08001D       12510         MOV.W   [R0],#01DH
                      12511 ; rs232cmd.c 3503                                       }
002DC1 FE07           12513         BR      _831
002DC1 FE0700         12513         BR      _831
002DC4                12514 _824:
                      12515 ; rs232cmd.c 3504                                       else
                      12516 ; rs232cmd.c 3505                                               SCPIError = DataOutOfRange;
002DC4 964842rr       12518         MOV.B   ES,#SEG( _SCPIError )
002DC8 9908rrrr       12519         MOV.W   R0,#SOF( _SCPIError )
002DCC 9A080021       12520         MOV.W   [R0],#021H
                      12521 ; rs232cmd.c 3506                               }
                      12522 ; rs232cmd.c 3507                       }
                      12523 ; rs232cmd.c 3508               }
002DD0                12525 _831:
                      12526 ; rs232cmd.c 3509       }
002DD0 2F30           12528         POP.W   R4, R5
002DD2 D680           12530         RET
                      12533 ; rs232cmd.c 3510       
                      12534 ; rs232cmd.c 3511       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 204

ADDR   CODE            LINE SOURCELINE
                      12535 ; rs232cmd.c 3512       /* AudioGenAESEBUSignal                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      12536 ; rs232cmd.c 3513       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12537 ; rs232cmd.c 3514       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12538 ; rs232cmd.c 3515       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      12539 ; rs232cmd.c 3516       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12540 ; rs232cmd.c 3517       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12541 ; rs232cmd.c 3518       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12542 ; rs232cmd.c 3519       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12543 ; rs232cmd.c 3520       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12544 ; rs232cmd.c 3521       /************************************************************************
                            **/
                      12545 ; rs232cmd.c 3522       void AudioGenAESEBUSignal( void)
                      12546 ; rs232cmd.c 3523       {
                      12547         ALIGN   1
                      12549         PUBLIC  _AudioGenAESEBUSignal
002DD4                12550 _AudioGenAESEBUSignal:
002DD4 0F30           12554         PUSH.W  R4, R5
                      12560 ; rs232cmd.c 3524               int signal;
                      12561 ; rs232cmd.c 3525               char code *str;
                      12562 ; rs232cmd.c 3526       
                      12563 ; rs232cmd.c 3527               if ( CmdExecute && !SCPIError)
002DD6 964842rr       12565         MOV.B   ES,#SEG( _CmdExecute )
002DDA 9908rrrr       12566         MOV.W   R0,#SOF( _CmdExecute )
002DDE 8200           12567         MOV.B   R0L,[R0]
002DE0 F379           12568         BEQ     _847
002DE2 964842rr       12569         MOV.B   ES,#SEG( _SCPIError )
002DE6 9908rrrr       12570         MOV.W   R0,#SOF( _SCPIError )
002DEA 8A00           12571         MOV.W   R0,[R0]
002DEC F273           12572         BNE     _847
                      12573 ; rs232cmd.c 3528               {
                      12574 ; rs232cmd.c 3529                       if ( CmdRequest)
002DEE 964842rr       12576         MOV.B   ES,#SEG( _CmdRequest )
002DF2 9908rrrr       12577         MOV.W   R0,#SOF( _CmdRequest )
002DF6 8200           12578         MOV.B   R0L,[R0]
002DF8 F33F           12579         BEQ     _838
                      12580 ; rs232cmd.c 3530                       {
                      12581 ; rs232cmd.c 3531                               if ( ParCnt)
002DFA 964842rr       12583         MOV.B   ES,#SEG( _ParCnt )
002DFE 9908rrrr       12584         MOV.W   R0,#SOF( _ParCnt )
002E02 8200           12585         MOV.B   R0L,[R0]
002E04 F306           12586         BEQ     _835
                      12587 ; rs232cmd.c 3532                                       SCPIError = ParNotAllowed;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 205

ADDR   CODE            LINE SOURCELINE
002E06 964842rr       12589         MOV.B   ES,#SEG( _SCPIError )
002E0A 9908rrrr       12590         MOV.W   R0,#SOF( _SCPIError )
002E0E BA06           12591         MOV.W   [R0],#06H
002E10 FE61           12592         BR      _847
002E10 FE61           12592         BR      _847
002E12                12593 _835:
                      12594 ; rs232cmd.c 3533                               else
                      12595 ; rs232cmd.c 3534                               {
                      12596 ; rs232cmd.c 3535                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002E12 964842rr       12598         MOV.B   ES,#SEG( _AudioSetup+16 )
002E16 9908rrrr       12599         MOV.W   R0,#SOF( _AudioSetup+16 )
002E1A 8A00           12600         MOV.W   R0,[R0]
002E1C E900000C       12601         MULU.W  R0,#0CH
002E20 8920           12602         MOV.W   R2,R0
002E22 B930           12603         MOVS.W  R3,#00H
002E24 9918rrrr       12604         MOV.W   R1,#SEG( _AudioSignalPar )
002E28 9908rrrr       12605         MOV.W   R0,#SOF( _AudioSignalPar )
002E2C 0902           12606         ADD.W   R0,R2
002E2E 1913           12607         ADDC.W  R1,R3
002E30 862C43         12608         MOV.B   CS,R1L
002E33 8820           12609         MOVC.W  R2,[R0+]
002E35 99040000       12610         CMP.W   R0,#00H
002E39 F202           12611         BNE     _848
002E3B A64143         12612         ADDS.B  CS,#01H
002E3B A64143         12612         ADDS.B  CS,#01H
002E3E                12613 _848:
002E3E 8830           12614         MOVC.W  R3,[R0+]
002E40 8953           12615         MOV.W   R5,R3
002E42 8942           12616         MOV.W   R4,R2
                      12618 ; rs232cmd.c 3536       
                      12619 ; rs232cmd.c 3537                                       while ( *str)
002E44 866C43         12621         MOV.B   CS,R3L
002E47 8062           12622         MOVC.B  R3L,[R2+]
002E49 F312           12623         BEQ     _837
002E49 F31200         12623         BEQ     _837
002E4C                12624 _836:
                      12625 ; rs232cmd.c 3538                                               rs232putchar( *str++);
002E4C 8915           12627         MOV.W   R1,R5
002E4E 8904           12628         MOV.W   R0,R4
002E50 862C43         12629         MOV.B   CS,R1L
002E53 8020           12630         MOVC.B  R1L,[R0+]
002E55 8102           12631         MOV.B   R0L,R1L
                      12632         CALL    _rs232putchar
002E57 C4rrrrrr       +12632 ;       FCALL   _rs232putchar
002E5B 99400001       12633         ADD.W   R4,#01H
002E5F 99510000       12634         ADDC.W  R5,#00H
002E63 8915           12638         MOV.W   R1,R5
002E65 8904           12639         MOV.W   R0,R4
002E67 862C43         12640         MOV.B   CS,R1L
002E6A 8020           12641         MOVC.B  R1L,[R0+]
002E6C F2EF           12642         BNE     _836
002E6E                12644 _837:
                      12645 ; rs232cmd.c 3539       
                      12646 ; rs232cmd.c 3540                                       rs232putchar('\n');
002E6E 91080A         12648         MOV.B   R0L,#0AH
                      12649         CALL    _rs232putchar
002E71 C4rrrrrr       +12649 ;       FCALL   _rs232putchar
                      12650 ; rs232cmd.c 3541                               }
                      12651 ; rs232cmd.c 3542                       }
002E75 FE2F           12653         BR      _847
002E75 FE2F00         12653         BR      _847
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 206

ADDR   CODE            LINE SOURCELINE
002E78                12654 _838:
                      12655 ; rs232cmd.c 3543                       else
                      12656 ; rs232cmd.c 3544                       {
                      12657 ; rs232cmd.c 3545                               if ( ParCnt != 1)
002E78 964842rr       12659         MOV.B   ES,#SEG( _ParCnt )
002E7C 9908rrrr       12660         MOV.W   R0,#SOF( _ParCnt )
002E80 8200           12661         MOV.B   R0L,[R0]
002E82 910401         12662         CMP.B   R0L,#01H
002E85 F307           12663         BEQ     _839
                      12664 ; rs232cmd.c 3546                                       SCPIError = SyntaxErr;
002E87 964842rr       12666         MOV.B   ES,#SEG( _SCPIError )
002E8B 9908rrrr       12667         MOV.W   R0,#SOF( _SCPIError )
002E8F BA03           12668         MOV.W   [R0],#03H
002E91 FE21           12669         BR      _847
002E91 FE2100         12669         BR      _847
002E94                12670 _839:
                      12671 ; rs232cmd.c 3547                               else
                      12672 ; rs232cmd.c 3548                               {
                      12673 ; rs232cmd.c 3549                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002E94 9918rrrr       12675         MOV.W   R1,#SEG( _Cmd )
002E98 9908rrrr       12676         MOV.W   R0,#SOF( _Cmd )
002E9C 9938rrrr       12677         MOV.W   R3,#SEG( _AudioSignalPar )
002EA0 9928rrrr       12678         MOV.W   R2,#SOF( _AudioSignalPar )
002EA4 C518AA         12679         CALL    _FindParameter
                      12681 ; rs232cmd.c 3550               
                      12682 ; rs232cmd.c 3551                                       if ( signal > -1)
002EA7 8910           12684         MOV.W   R1,R0
002EA9 9914FFFF       12685         CMP.W   R1,#0FFFFH
002EAD FD0D           12688         BLE     _840
                      12689 ; rs232cmd.c 3552                                       {
                      12690 ; rs232cmd.c 3553                                               if ( SetAudioSignal( AESEBUAudio,
                             signal) == FAIL)
002EAF B901           12692         MOV.W   R0,#01H
                      12693         CALL    _SetAudioSignal
002EB1 C4rrrrrr       +12693 ;       FCALL   _SetAudioSignal
002EB5 6900           12695         OR.W    R0,R0
002EB7 F20E           12696         BNE     _847
                      12697 ; rs232cmd.c 3554                                                       SCPIError = ExecErr;
002EB9 964842rr       12699         MOV.B   ES,#SEG( _SCPIError )
002EBD 9908rrrr       12700         MOV.W   R0,#SOF( _SCPIError )
002EC1 9A08001D       12701         MOV.W   [R0],#01DH
                      12702 ; rs232cmd.c 3555                                       }
002EC5 FE07           12704         BR      _847
002EC5 FE0700         12704         BR      _847
002EC8                12705 _840:
                      12706 ; rs232cmd.c 3556                                       else
                      12707 ; rs232cmd.c 3557                                               SCPIError = DataOutOfRange;
002EC8 964842rr       12709         MOV.B   ES,#SEG( _SCPIError )
002ECC 9908rrrr       12710         MOV.W   R0,#SOF( _SCPIError )
002ED0 9A080021       12711         MOV.W   [R0],#021H
                      12712 ; rs232cmd.c 3558                               }
                      12713 ; rs232cmd.c 3559                       }
                      12714 ; rs232cmd.c 3560               }
002ED4                12716 _847:
                      12717 ; rs232cmd.c 3561       }
002ED4 2F30           12719         POP.W   R4, R5
002ED6 D680           12721         RET
                      12724 ; rs232cmd.c 3562       
                      12725 ; rs232cmd.c 3563       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 207

ADDR   CODE            LINE SOURCELINE
                      12726 ; rs232cmd.c 3564       /* AudioGenAESEBULevel                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      12727 ; rs232cmd.c 3565       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12728 ; rs232cmd.c 3566       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      12729 ; rs232cmd.c 3567       /* Revised:             0000628                                          
                                                                                                                             
                                                                                    */
                      12730 ; rs232cmd.c 3568       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      12731 ; rs232cmd.c 3569       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      12732 ; rs232cmd.c 3570       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      12733 ; rs232cmd.c 3571       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      12734 ; rs232cmd.c 3572       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      12735 ; rs232cmd.c 3573       /************************************************************************
                            **/
                      12736 ; rs232cmd.c 3574       void AudioGenAESEBULevel( void)
                      12737 ; rs232cmd.c 3575       {
                      12738         ALIGN   1
                      12740         PUBLIC  _AudioGenAESEBULevel
002ED8                12741 _AudioGenAESEBULevel:
002ED8 0F30           12745         PUSH.W  R4, R5
002EDA A97E           12747         ADDS.W  R7,#0EH
                      12752 ; rs232cmd.c 3576               code char *str;
                      12753 ; rs232cmd.c 3577               int level;
                      12754 ; rs232cmd.c 3578       
                      12755 ; rs232cmd.c 3579               if ( CmdExecute && !SCPIError)
002EDC 964842rr       12757         MOV.B   ES,#SEG( _CmdExecute )
002EE0 9908rrrr       12758         MOV.W   R0,#SOF( _CmdExecute )
002EE4 8200           12759         MOV.B   R0L,[R0]
                      12760         BEQ     _896
002EE6 F202           +12760 ;       BNE     _LG_782
002EE8 D500EC         +12760 ;       JMP.L   _896
002EEC D500EC00       +12760 ;       JMP.L   _896
002EEC                +12760 _LG_782:
002EEC 964842rr       12761         MOV.B   ES,#SEG( _SCPIError )
002EF0 9908rrrr       12762         MOV.W   R0,#SOF( _SCPIError )
002EF4 8A00           12763         MOV.W   R0,[R0]
                      12764         BNE     _896
002EF6 F302           +12764 ;       BEQ     _LG_784
002EF8 D500E4         +12764 ;       JMP.L   _896
002EFC D500E400       +12764 ;       JMP.L   _896
002EFC                +12764 _LG_784:
                      12765 ; rs232cmd.c 3580               {
                      12766 ; rs232cmd.c 3581                       if ( CmdRequest)
002EFC 964842rr       12768         MOV.B   ES,#SEG( _CmdRequest )
002F00 9908rrrr       12769         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 208

ADDR   CODE            LINE SOURCELINE
002F04 8200           12770         MOV.B   R0L,[R0]
002F06 F367           12771         BEQ     _868
                      12772 ; rs232cmd.c 3582                       {
                      12773 ; rs232cmd.c 3583                               if ( ParCnt)
002F08 964842rr       12775         MOV.B   ES,#SEG( _ParCnt )
002F0C 9908rrrr       12776         MOV.W   R0,#SOF( _ParCnt )
002F10 8200           12777         MOV.B   R0L,[R0]
002F12 F307           12778         BEQ     _851
                      12779 ; rs232cmd.c 3584                                       SCPIError = ParNotAllowed;
002F14 964842rr       12781         MOV.B   ES,#SEG( _SCPIError )
002F18 9908rrrr       12782         MOV.W   R0,#SOF( _SCPIError )
002F1C BA06           12783         MOV.W   [R0],#06H
                      12784         BR      _896
002F1E D500D1         +12784         JMP.L   _896
002F1E D500D100       +12784         JMP.L   _896
002F22                12785 _851:
                      12786 ; rs232cmd.c 3585                               else
                      12787 ; rs232cmd.c 3586                               {
                      12788 ; rs232cmd.c 3587                                       switch ( AudioSetup[AESEBUAudio].Level)
002F22 964842rr       12790         MOV.B   ES,#SEG( _AudioSetup+18 )
002F26 9908rrrr       12791         MOV.W   R0,#SOF( _AudioSetup+18 )
002F2A 8A00           12792         MOV.W   R0,[R0]
002F2C 99040000       12793         CMP.W   R0,#00H
002F30 F345           12794         BEQ     _861
002F32 99040001       12795         CMP.W   R0,#01H
002F36 F310           12796         BEQ     _852
002F38 99040002       12797         CMP.W   R0,#02H
002F3C F310           12798         BEQ     _853
002F3E 99040003       12799         CMP.W   R0,#03H
002F42 F310           12800         BEQ     _854
002F44 99040004       12801         CMP.W   R0,#04H
002F48 F310           12802         BEQ     _855
002F4A 99040005       12803         CMP.W   R0,#05H
002F4E F310           12804         BEQ     _856
002F50 99040006       12805         CMP.W   R0,#06H
002F54 F310           12806         BEQ     _857
002F56 FE12           12807         BR      _858
                      12808 ; rs232cmd.c 3588                                       {
                      12809 ; rs232cmd.c 3589                                               case M0dBFS:
                      12810 ; rs232cmd.c 3590                                                       level = 0;
                      12811 ; rs232cmd.c 3591                                                       break;
                      12812 ; rs232cmd.c 3592       
                      12813 ; rs232cmd.c 3593                                               case M9dBFS:
002F58                12815 _852:
                      12816 ; rs232cmd.c 3594                                                       level = -9;
002F58 9A78FFF7       12818         MOV.W   [R7],#0FFF7H
                      12819 ; rs232cmd.c 3595                                                       break;
002F5C FE30           12821         BR      _867
                      12822 ; rs232cmd.c 3596       
                      12823 ; rs232cmd.c 3597                                               case M12dBFS:
002F5E                12825 _853:
                      12826 ; rs232cmd.c 3598                                                       level = -12;
002F5E 9A78FFF4       12828         MOV.W   [R7],#0FFF4H
                      12829 ; rs232cmd.c 3599                                                       break;
002F62 FE2D           12831         BR      _867
                      12832 ; rs232cmd.c 3600       
                      12833 ; rs232cmd.c 3601                                               case M15dBFS:
002F64                12835 _854:
                      12836 ; rs232cmd.c 3602                                                       level = -15;
002F64 9A78FFF1       12838         MOV.W   [R7],#0FFF1H
                      12839 ; rs232cmd.c 3603                                                       break;
002F68 FE2A           12841         BR      _867
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 209

ADDR   CODE            LINE SOURCELINE
                      12842 ; rs232cmd.c 3604       
                      12843 ; rs232cmd.c 3605                                               case M16dBFS:
002F6A                12845 _855:
                      12846 ; rs232cmd.c 3606                                                       level = -16;
002F6A 9A78FFF0       12848         MOV.W   [R7],#0FFF0H
                      12849 ; rs232cmd.c 3607                                                       break;
002F6E FE27           12851         BR      _867
                      12852 ; rs232cmd.c 3608       
                      12853 ; rs232cmd.c 3609                                               case M18dBFS:
002F70                12855 _856:
                      12856 ; rs232cmd.c 3610                                                       level = -18;
002F70 9A78FFEE       12858         MOV.W   [R7],#0FFEEH
                      12859 ; rs232cmd.c 3611                                                       break;
002F74 FE24           12861         BR      _867
                      12862 ; rs232cmd.c 3612       
                      12863 ; rs232cmd.c 3613                                               case M21dBFS:
002F76                12865 _857:
                      12866 ; rs232cmd.c 3614                                                       level = -21;
002F76 9A78FFEB       12868         MOV.W   [R7],#0FFEBH
                      12869 ; rs232cmd.c 3615                                                       break;
002F7A FE21           12871         BR      _867
                      12872 ; rs232cmd.c 3616       
                      12873 ; rs232cmd.c 3617                                               default:
002F7C                12875 _858:
                      12876 ; rs232cmd.c 3618                                                       str = SILENCEParTxt;
002F7C 9958rrrr       12878         MOV.W   R5,#SEG( _SILENCEParTxt )
002F80 9948rrrr       12879         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12881 ; rs232cmd.c 3619       
                      12882 ; rs232cmd.c 3620                                                       while ( *str)
002F84 964843rr       12884         MOV.B   CS,#SEG( _SILENCEParTxt )
002F88 9908rrrr       12885         MOV.W   R0,#SOF( _SILENCEParTxt )
002F8C 8020           12886         MOVC.B  R1L,[R0+]
002F8E F311           12887         BEQ     _860
002F8E F311           12887         BEQ     _860
002F90                12888 _859:
                      12889 ; rs232cmd.c 3621                                                               rs232putchar( *st
                            r++);
002F90 8915           12891         MOV.W   R1,R5
002F92 8904           12892         MOV.W   R0,R4
002F94 862C43         12893         MOV.B   CS,R1L
002F97 8020           12894         MOVC.B  R1L,[R0+]
002F99 8102           12895         MOV.B   R0L,R1L
                      12896         CALL    _rs232putchar
002F9B C4rrrrrr       +12896 ;       FCALL   _rs232putchar
002F9F 99400001       12897         ADD.W   R4,#01H
002FA3 99510000       12898         ADDC.W  R5,#00H
002FA7 8915           12902         MOV.W   R1,R5
002FA9 8904           12903         MOV.W   R0,R4
002FAB 862C43         12904         MOV.B   CS,R1L
002FAE 8020           12905         MOVC.B  R1L,[R0+]
002FB0 F2EF           12906         BNE     _859
002FB2                12908 _860:
                      12909 ; rs232cmd.c 3622       
                      12910 ; rs232cmd.c 3623                                                       rs232putchar('\n');
002FB2 91080A         12912         MOV.B   R0L,#0AH
                      12913         CALL    _rs232putchar
002FB5 C4rrrrrr       +12913 ;       FCALL   _rs232putchar
                      12914 ; rs232cmd.c 3624                                                       return;
                      12916         BR      _896
002FB9 D50083         +12916         JMP.L   _896
002FBC                12918 _861:
002FBC BA70           12920         MOV.W   [R7],#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 210

ADDR   CODE            LINE SOURCELINE
                      12921 ; rs232cmd.c 3625                                               }
002FBE                12923 _867:
                      12924 ; rs232cmd.c 3626       
                      12925 ; rs232cmd.c 3627                                       rs232printf( 6, "%d\n", level);
002FBE B906           12927         MOV.W   R0,#06H
002FC0 8A17           12928         MOV.W   R1,[R7]
002FC2 0F02           12929         PUSH.W  R1
002FC4 9938rrrr       12931         MOV.W   R3,#SEG( _9 )
002FC8 9928rrrr       12932         MOV.W   R2,#SOF( _9 )
002FCC 0F0C           12933         PUSH.W  R2, R3
                      12935         CALL    _rs232printf
002FCE C4rrrrrr       +12935 ;       FCALL   _rs232printf
002FD2 A976           12936         ADDS.W  R7,#06H
                      12938 ; rs232cmd.c 3628                               }
                      12939 ; rs232cmd.c 3629                       }
002FD4 FE76           12941         BR      _896
002FD4 FE76           12941         BR      _896
002FD6                12942 _868:
                      12943 ; rs232cmd.c 3630                       else
                      12944 ; rs232cmd.c 3631                       {
                      12945 ; rs232cmd.c 3632                               if ( ParCnt != 1)
002FD6 964842rr       12947         MOV.B   ES,#SEG( _ParCnt )
002FDA 9908rrrr       12948         MOV.W   R0,#SOF( _ParCnt )
002FDE 8200           12949         MOV.B   R0L,[R0]
002FE0 910401         12950         CMP.B   R0L,#01H
002FE3 F307           12951         BEQ     _869
                      12952 ; rs232cmd.c 3633                                       SCPIError = SyntaxErr;
002FE5 964842rr       12954         MOV.B   ES,#SEG( _SCPIError )
002FE9 9908rrrr       12955         MOV.W   R0,#SOF( _SCPIError )
002FED BA03           12956         MOV.W   [R0],#03H
002FEF FE69           12957         BR      _896
002FEF FE6900         12957         BR      _896
002FF2                12958 _869:
                      12959 ; rs232cmd.c 3634                               else
                      12960 ; rs232cmd.c 3635                               {
                      12961 ; rs232cmd.c 3636                                       level = FindParameter( Cmd, AESEBULevelPa
                            r);
002FF2 9938rrrr       12963         MOV.W   R3,#SEG( _AESEBULevelPar )
002FF6 9928rrrr       12964         MOV.W   R2,#SOF( _AESEBULevelPar )
002FFA 9918rrrr       12965         MOV.W   R1,#SEG( _Cmd )
002FFE 9908rrrr       12966         MOV.W   R0,#SOF( _Cmd )
003002 C517FB         12967         CALL    _FindParameter
003005 8A0F           12968         MOV.W   [R7],R0
                      12969 ; rs232cmd.c 3637               
                      12970 ; rs232cmd.c 3638                                       if ( level > -1)
003007 9A74FFFF       12972         CMP.W   [R7],#0FFFFH
00300B FD03           12973         BLE     _870
                      12974 ; rs232cmd.c 3639                                               level = AESEBUSilence;
00300D BA77           12976         MOV.W   [R7],#07H
00300F FE4D           12977         BR      _888
00300F FE4D00         12977         BR      _888
003012                12978 _870:
                      12979 ; rs232cmd.c 3640                                       else
                      12980 ; rs232cmd.c 3641                                       {
                      12981 ; rs232cmd.c 3642                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
003012 964842rr       12983         MOV.B   ES,#SEG( _ParCnt )
003016 9908rrrr       12984         MOV.W   R0,#SOF( _ParCnt )
00301A 8200           12985         MOV.B   R0L,[R0]
00301C 910401         12986         CMP.B   R0L,#01H
00301F F215           12987         BNE     _871
003021 9128rr         12988         MOV.B   R1L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 211

ADDR   CODE            LINE SOURCELINE
003024 7133           12989         XOR.B   R1H,R1H
003026 8907           12990         MOV.W   R0,R7
003028 0F03           12991         PUSH.W  R0, R1
00302A 9918rrrr       12993         MOV.W   R1,#SEG( _10 )
00302E 9908rrrr       12994         MOV.W   R0,#SOF( _10 )
003032 0F03           12995         PUSH.W  R0, R1
003034 9918rrrr       12997         MOV.W   R1,#SEG( _Cmd )
003038 9908rrrr       12998         MOV.W   R0,#SOF( _Cmd )
                      12999         CALL    _sscanf
00303C C4rrrrrr       +12999 ;       FCALL   _sscanf
003040 99700008       13000         ADD.W   R7,#08H
003044 99040001       13002         CMP.W   R0,#01H
003048 F306           13003         BEQ     _872
003048 F306           13003         BEQ     _872
00304A                13004 _871:
                      13005 ; rs232cmd.c 3643                                                       SCPIError = SyntaxErr;
00304A 964842rr       13007         MOV.B   ES,#SEG( _SCPIError )
00304E 9908rrrr       13008         MOV.W   R0,#SOF( _SCPIError )
003052 BA03           13009         MOV.W   [R0],#03H
003054 FE2A           13010         BR      _888
003054 FE2A           13010         BR      _888
003056                13011 _872:
                      13012 ; rs232cmd.c 3644                                               else {
                      13013 ; rs232cmd.c 3645                                                       switch ( level)
003056 9A740000       13015         CMP.W   [R7],#00H
00305A F326           13016         BEQ     _880
00305C 9A74FFF7       13017         CMP.W   [R7],#0FFF7H
003060 F310           13018         BEQ     _873
003062 9A74FFF4       13019         CMP.W   [R7],#0FFF4H
003066 F30F           13020         BEQ     _874
003068 9A74FFF1       13021         CMP.W   [R7],#0FFF1H
00306C F30E           13022         BEQ     _875
00306E 9A74FFF0       13023         CMP.W   [R7],#0FFF0H
003072 F30D           13024         BEQ     _876
003074 9A74FFEE       13025         CMP.W   [R7],#0FFEEH
003078 F30C           13026         BEQ     _877
00307A 9A74FFEB       13027         CMP.W   [R7],#0FFEBH
00307E F30B           13028         BEQ     _878
003080 FE0C           13029         BR      _879
                      13030 ; rs232cmd.c 3646                                                       {
                      13031 ; rs232cmd.c 3647                                                               case 0:
                      13032 ; rs232cmd.c 3648                                                                       level = M
                            0dBFS;
                      13033 ; rs232cmd.c 3649                                                                       break;
                      13034 ; rs232cmd.c 3650       
                      13035 ; rs232cmd.c 3651                                                               case -9:
003082                13037 _873:
                      13038 ; rs232cmd.c 3652                                                                       level = M
                            9dBFS;
003082 BA71           13040         MOV.W   [R7],#01H
                      13041 ; rs232cmd.c 3653                                                                       break;
003084 FE12           13043         BR      _888
                      13044 ; rs232cmd.c 3654       
                      13045 ; rs232cmd.c 3655                                                               case -12:
003086                13047 _874:
                      13048 ; rs232cmd.c 3656                                                                       level = M
                            12dBFS;
003086 BA72           13050         MOV.W   [R7],#02H
                      13051 ; rs232cmd.c 3657                                                                       break;
003088 FE10           13053         BR      _888
                      13054 ; rs232cmd.c 3658       
                      13055 ; rs232cmd.c 3659                                                               case -15:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 212

ADDR   CODE            LINE SOURCELINE
00308A                13057 _875:
                      13058 ; rs232cmd.c 3660                                                                       level = M
                            15dBFS;
00308A BA73           13060         MOV.W   [R7],#03H
                      13061 ; rs232cmd.c 3661                                                                       break;
00308C FE0E           13063         BR      _888
                      13064 ; rs232cmd.c 3662       
                      13065 ; rs232cmd.c 3663                                                               case -16:
00308E                13067 _876:
                      13068 ; rs232cmd.c 3664                                                                       level = M
                            16dBFS;
00308E BA74           13070         MOV.W   [R7],#04H
                      13071 ; rs232cmd.c 3665                                                                       break;
003090 FE0C           13073         BR      _888
                      13074 ; rs232cmd.c 3666       
                      13075 ; rs232cmd.c 3667                                                               case -18:
003092                13077 _877:
                      13078 ; rs232cmd.c 3668                                                                       level = M
                            18dBFS;
003092 BA75           13080         MOV.W   [R7],#05H
                      13081 ; rs232cmd.c 3669                                                                       break;
003094 FE0A           13083         BR      _888
                      13084 ; rs232cmd.c 3670       
                      13085 ; rs232cmd.c 3671                                                               case -21:
003096                13087 _878:
                      13088 ; rs232cmd.c 3672                                                                       level = M
                            21dBFS;
003096 BA76           13090         MOV.W   [R7],#06H
                      13091 ; rs232cmd.c 3673                                                                       break;
003098 FE08           13093         BR      _888
                      13094 ; rs232cmd.c 3674       
                      13095 ; rs232cmd.c 3675                                                               default:
00309A                13097 _879:
                      13098 ; rs232cmd.c 3676                                                                       SCPIError
                             = DataOutOfRange;
00309A 964842rr       13100         MOV.B   ES,#SEG( _SCPIError )
00309E 9908rrrr       13101         MOV.W   R0,#SOF( _SCPIError )
0030A2 9A080021       13102         MOV.W   [R0],#021H
                      13103 ; rs232cmd.c 3677                                                                       return;
0030A6 FE0D           13105         BR      _896
0030A8                13107 _880:
0030A8 BA70           13109         MOV.W   [R7],#00H
                      13110 ; rs232cmd.c 3678                                                       }
                      13111 ; rs232cmd.c 3679                                               }
                      13112 ; rs232cmd.c 3680                                       }
0030AA                13114 _888:
                      13115 ; rs232cmd.c 3681       
                      13116 ; rs232cmd.c 3682                                       if ( SetAudioLevel( AESEBUAudio, level) =
                            = FAIL)
0030AA B901           13118         MOV.W   R0,#01H
0030AC 8A17           13119         MOV.W   R1,[R7]
                      13120         CALL    _SetAudioLevel
0030AE C4rrrrrr       +13120 ;       FCALL   _SetAudioLevel
0030B2 6900           13121         OR.W    R0,R0
0030B4 F206           13122         BNE     _896
                      13123 ; rs232cmd.c 3683                                               SCPIError = ExecErr;
0030B6 964842rr       13125         MOV.B   ES,#SEG( _SCPIError )
0030BA 9908rrrr       13126         MOV.W   R0,#SOF( _SCPIError )
0030BE 9A08001D       13127         MOV.W   [R0],#01DH
                      13128 ; rs232cmd.c 3684                               }
                      13129 ; rs232cmd.c 3685                       }
                      13130 ; rs232cmd.c 3686               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 213

ADDR   CODE            LINE SOURCELINE
                      13131 ; rs232cmd.c 3687       }
0030C2                13133 _896:
0030C2 A972           13134         ADDS.W  R7,#02H
0030C4 2F30           13136         POP.W   R4, R5
0030C6 D680           13138         RET
                      13141 ; rs232cmd.c 3688       
                      13142 ; rs232cmd.c 3689       /************************************************************************
                            **/
                      13143 ; rs232cmd.c 3690       /* AudioGenAESEBUTiming                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      13144 ; rs232cmd.c 3691       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13145 ; rs232cmd.c 3692       /* Author:              Kim Engedahl, DEV, 000616                        
                                                                                                                             
                                    */
                      13146 ; rs232cmd.c 3693       /* Revised:             000616                                           
                                                                                                                             
                                                                                    */
                      13147 ; rs232cmd.c 3694       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13148 ; rs232cmd.c 3695       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13149 ; rs232cmd.c 3696       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13150 ; rs232cmd.c 3697       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13151 ; rs232cmd.c 3698       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13152 ; rs232cmd.c 3699       /************************************************************************
                            **/
                      13153 ; rs232cmd.c 3700       void AudioGenAESEBUTiming( void)
                      13154 ; rs232cmd.c 3701       {
                      13155         ALIGN   1
                      13157         PUBLIC  _AudioGenAESEBUTiming
0030C8                13158 _AudioGenAESEBUTiming:
0030C8 0F70           13162         PUSH.W  R4, R5, R6
0030CA 99720014       13164         SUB.W   R7,#014H
                      13169 ; rs232cmd.c 3702               float timing;
                      13170 ; rs232cmd.c 3703               int tmp;
                      13171 ; rs232cmd.c 3704       
                      13172 ; rs232cmd.c 3705               if ( CmdExecute && !SCPIError)
0030CE 964842rr       13174         MOV.B   ES,#SEG( _CmdExecute )
0030D2 9908rrrr       13175         MOV.W   R0,#SOF( _CmdExecute )
0030D6 8200           13176         MOV.B   R0L,[R0]
                      13177         BEQ     _918
0030D8 F202           +13177 ;       BNE     _LG_832
0030DA D500A9         +13177 ;       JMP.L   _918
0030DE D500A900       +13177 ;       JMP.L   _918
0030DE                +13177 _LG_832:
0030DE 964842rr       13178         MOV.B   ES,#SEG( _SCPIError )
0030E2 9908rrrr       13179         MOV.W   R0,#SOF( _SCPIError )
0030E6 8A00           13180         MOV.W   R0,[R0]
                      13181         BNE     _918
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 214

ADDR   CODE            LINE SOURCELINE
0030E8 F302           +13181 ;       BEQ     _LG_834
0030EA D500A1         +13181 ;       JMP.L   _918
0030EE D500A100       +13181 ;       JMP.L   _918
0030EE                +13181 _LG_834:
                      13182 ; rs232cmd.c 3706               {
                      13183 ; rs232cmd.c 3707                       if ( CmdRequest)
0030EE 964842rr       13185         MOV.B   ES,#SEG( _CmdRequest )
0030F2 9908rrrr       13186         MOV.W   R0,#SOF( _CmdRequest )
0030F6 8200           13187         MOV.B   R0L,[R0]
0030F8 F321           13188         BEQ     _907
                      13189 ; rs232cmd.c 3708                       {
                      13190 ; rs232cmd.c 3709                               if ( ParCnt)
0030FA 964842rr       13192         MOV.B   ES,#SEG( _ParCnt )
0030FE 9908rrrr       13193         MOV.W   R0,#SOF( _ParCnt )
003102 8200           13194         MOV.B   R0L,[R0]
003104 F307           13195         BEQ     _906
                      13196 ; rs232cmd.c 3710                                       SCPIError = ParNotAllowed;
003106 964842rr       13198         MOV.B   ES,#SEG( _SCPIError )
00310A 9908rrrr       13199         MOV.W   R0,#SOF( _SCPIError )
00310E BA06           13200         MOV.W   [R0],#06H
                      13201         BR      _918
003110 D5008E         +13201         JMP.L   _918
003110 D5008E00       +13201         JMP.L   _918
003114                13202 _906:
                      13203 ; rs232cmd.c 3711                               else
                      13204 ; rs232cmd.c 3712                                       rs232printf( 6, "%.1f\n", AudioSetup[AESE
                            BUAudio].Timing);
003114 964842rr       13206         MOV.B   ES,#SEG( _AudioSetup+20 )
003118 9918rrrr       13207         MOV.W   R1,#SOF( _AudioSetup+20 )
00311C 8B01           13208         MOV.W   R0,[R1+]
00311E 8A11           13209         MOV.W   R1,[R1]
003120 C4rrrrrr       13210         FCALL   __SPF2DPF
003124 0F0F           13211         PUSH.W  R0, R1, R2, R3
003126 9918rrrr       13213         MOV.W   R1,#SEG( _901 )
00312A 9908rrrr       13214         MOV.W   R0,#SOF( _901 )
00312E 0F03           13215         PUSH.W  R0, R1
003130 B906           13217         MOV.W   R0,#06H
                      13218         CALL    _rs232printf
003132 C4rrrrrr       +13218 ;       FCALL   _rs232printf
003136 9970000C       13219         ADD.W   R7,#0CH
                      13221 ; rs232cmd.c 3713                       }
00313A FE79           13223         BR      _918
00313A FE79           13223         BR      _918
00313C                13224 _907:
                      13225 ; rs232cmd.c 3714                       else
                      13226 ; rs232cmd.c 3715                       {
                      13227 ; rs232cmd.c 3716                               if (( ParCnt != 1) || ( sscanf( Cmd, "%f", &timin
                            g) != 1))
00313C 964842rr       13229         MOV.B   ES,#SEG( _ParCnt )
003140 9908rrrr       13230         MOV.W   R0,#SOF( _ParCnt )
003144 8200           13231         MOV.B   R0L,[R0]
003146 910401         13232         CMP.B   R0L,#01H
003149 F216           13233         BNE     _908
00314B 9918rrrr       13234         MOV.W   R1,#SEG( _Cmd )
00314F 9908rrrr       13235         MOV.W   R0,#SOF( _Cmd )
003153 9168rr         13236         MOV.B   R3L,#SEG( __lc_bs )
003156 7177           13237         XOR.B   R3H,R3H
003158 402710         13238         LEA     R2,R7+16
00315B 0F0C           13239         PUSH.W  R2, R3
00315D 9938rrrr       13241         MOV.W   R3,#SEG( _902 )
003161 9928rrrr       13242         MOV.W   R2,#SOF( _902 )
003165 0F0C           13243         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 215

ADDR   CODE            LINE SOURCELINE
                      13245         CALL    _sscanf
003167 C4rrrrrr       +13245 ;       FCALL   _sscanf
00316B 99700008       13246         ADD.W   R7,#08H
00316F 99040001       13248         CMP.W   R0,#01H
003173 F307           13249         BEQ     _909
003173 F30700         13249         BEQ     _909
003176                13250 _908:
                      13251 ; rs232cmd.c 3717                                       SCPIError = SyntaxErr;
003176 964842rr       13253         MOV.B   ES,#SEG( _SCPIError )
00317A 9908rrrr       13254         MOV.W   R0,#SOF( _SCPIError )
00317E BA03           13255         MOV.W   [R0],#03H
003180 FE56           13256         BR      _918
003180 FE56           13256         BR      _918
003182                13257 _909:
                      13258 ; rs232cmd.c 3718                               else
                      13259 ; rs232cmd.c 3719                               {
                      13260 ; rs232cmd.c 3720                                       tmp = (int)(( timing / 0.8) + 0.5 - ( 1*(
                             timing < 0)));
003182 8C1712         13262         MOV.W   R1,[R7+18]
003185 8C0710         13263         MOV.W   R0,[R7+16]
003188 C4rrrrrr       13264         FCALL   __SPF2DPF
00318C 9C780E3FE9     13265         MOV.W   [R7+14],#03FE9H
003191 9C780C9999     13266         MOV.W   [R7+12],#09999H
003196 9C780A9999     13267         MOV.W   [R7+10],#09999H
00319B 9C7808999A     13268         MOV.W   [R7+8],#0999AH
0031A0 406708         13269         LEA     R6,R7+8
0031A3 C4rrrrrr       13270         FCALL   __DIV_DPF
0031A7 9C780E3FE0     13271         MOV.W   [R7+14],#03FE0H
0031AC BC700C         13272         MOV.W   [R7+12],#00H
0031AF BC700A         13273         MOV.W   [R7+10],#00H
0031B2 BC7008         13274         MOV.W   [R7+8],#00H
0031B5 406708         13275         LEA     R6,R7+8
0031B8 C4rrrrrr       13276         FCALL   __ADD_DPF
0031BC 8C3F06         13277         MOV.W   [R7+6],R3
0031BF 8C2F04         13278         MOV.W   [R7+4],R2
0031C2 8C1F02         13279         MOV.W   [R7+2],R1
0031C5 8A0F           13280         MOV.W   [R7],R0
0031C7 8C1712         13281         MOV.W   R1,[R7+18]
0031CA 8C0710         13282         MOV.W   R0,[R7+16]
0031CD B930           13283         MOV.W   R3,#00H
0031CF B920           13284         MOV.W   R2,#00H
0031D1 C4rrrrrr       13285         FCALL   __CMP_SPF
0031D5 9104FF         13286         CMP.B   R0L,#0FFH
0031D8 F206           13287         BNE     _921
0031DA B900           13288         MOVS.W  R0,#00H
0031DC B910           13289         MOVS.W  R1,#00H
0031DE B920           13290         MOVS.W  R2,#00H
0031E0 99383FF0       13291         MOV.W   R3,#03FF0H
0031E4 FE04           13292         BR      _922
0031E4 FE04           13292         BR      _922
0031E6                13293 _921:
0031E6 B900           13294         MOVS.W  R0,#00H
0031E8 B910           13295         MOVS.W  R1,#00H
0031EA B920           13296         MOVS.W  R2,#00H
0031EC B930           13297         MOVS.W  R3,#00H
0031EC B930           13297         MOVS.W  R3,#00H
0031EE                13298 _922:
0031EE 8967           13299         MOV.W   R6,R7
0031F0 C4rrrrrr       13300         FCALL   __SUBR_DPF
0031F4 C4rrrrrr       13301         FCALL   __DPF2S
                      13303 ; rs232cmd.c 3721       
                      13304 ; rs232cmd.c 3722                                       if (( tmp < -12) || ( tmp > 13))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 216

ADDR   CODE            LINE SOURCELINE
0031F8 9904FFF4       13306         CMP.W   R0,#0FFF4H
0031FC FB03           13307         BLT     _910
0031FE 9904000D       13308         CMP.W   R0,#0DH
003202 FD07           13309         BLE     _911
003202 FD07           13309         BLE     _911
003204                13310 _910:
                      13311 ; rs232cmd.c 3723                                               SCPIError = DataOutOfRange;
003204 964842rr       13313         MOV.B   ES,#SEG( _SCPIError )
003208 9908rrrr       13314         MOV.W   R0,#SOF( _SCPIError )
00320C 9A080021       13315         MOV.W   [R0],#021H
003210 FE0E           13316         BR      _918
003210 FE0E           13316         BR      _918
003212                13317 _911:
                      13318 ; rs232cmd.c 3724                                       else
                      13319 ; rs232cmd.c 3725                                       {
                      13320 ; rs232cmd.c 3726                                               if ( SetAudioTiming( AESEBUAudio,
                             timing) == FAIL)
003212 B901           13322         MOV.W   R0,#01H
003214 8C3712         13324         MOV.W   R3,[R7+18]
003217 8C2710         13325         MOV.W   R2,[R7+16]
                      13326         CALL    _SetAudioTiming
00321A C4rrrrrr       +13326 ;       FCALL   _SetAudioTiming
00321E 6900           13327         OR.W    R0,R0
003220 F206           13328         BNE     _918
                      13329 ; rs232cmd.c 3727                                                       SCPIError = ExecErr;
003222 964842rr       13331         MOV.B   ES,#SEG( _SCPIError )
003226 9908rrrr       13332         MOV.W   R0,#SOF( _SCPIError )
00322A 9A08001D       13333         MOV.W   [R0],#01DH
                      13334 ; rs232cmd.c 3728                                       }
                      13335 ; rs232cmd.c 3729                               }
                      13336 ; rs232cmd.c 3730                       }
                      13337 ; rs232cmd.c 3731               }
00322E                13339 _918:
                      13340 ; rs232cmd.c 3732       }
00322E 99700014       13342         ADD.W   R7,#014H
003232 2F70           13344         POP.W   R4, R5, R6
003234 D680           13346         RET
                      13348 ; rs232cmd.c 3733       
                      13349 ; rs232cmd.c 3734       /************************************************************************
                            **/
                      13350 ; rs232cmd.c 3735       /* AudioGenAESEBUWordClock                                               
                                                                                                                 RS232CMD.C *
                            /
                      13351 ; rs232cmd.c 3736       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13352 ; rs232cmd.c 3737       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13353 ; rs232cmd.c 3738       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      13354 ; rs232cmd.c 3739       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13355 ; rs232cmd.c 3740       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 217

ADDR   CODE            LINE SOURCELINE
                      13356 ; rs232cmd.c 3741       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13357 ; rs232cmd.c 3742       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13358 ; rs232cmd.c 3743       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13359 ; rs232cmd.c 3744       /************************************************************************
                            **/
                      13360 ; rs232cmd.c 3745       void AudioGenAESEBUWordClock( void)
                      13361 ; rs232cmd.c 3746       {
                      13362         ALIGN   1
                      13364         PUBLIC  _AudioGenAESEBUWordClock
003236                13365 _AudioGenAESEBUWordClock:
003236 0F30           13369         PUSH.W  R4, R5
                      13375 ; rs232cmd.c 3747               int frequency;
                      13376 ; rs232cmd.c 3748               char code *str;
                      13377 ; rs232cmd.c 3749       
                      13378 ; rs232cmd.c 3750               if ( CmdExecute && !SCPIError)
003238 964842rr       13380         MOV.B   ES,#SEG( _CmdExecute )
00323C 9908rrrr       13381         MOV.W   R0,#SOF( _CmdExecute )
003240 8200           13382         MOV.B   R0L,[R0]
003242 F379           13383         BEQ     _937
003244 964842rr       13384         MOV.B   ES,#SEG( _SCPIError )
003248 9908rrrr       13385         MOV.W   R0,#SOF( _SCPIError )
00324C 8A00           13386         MOV.W   R0,[R0]
00324E F273           13387         BNE     _937
                      13388 ; rs232cmd.c 3751               {
                      13389 ; rs232cmd.c 3752                       if ( CmdRequest)
003250 964842rr       13391         MOV.B   ES,#SEG( _CmdRequest )
003254 9908rrrr       13392         MOV.W   R0,#SOF( _CmdRequest )
003258 8200           13393         MOV.B   R0L,[R0]
00325A F33F           13394         BEQ     _928
                      13395 ; rs232cmd.c 3753                       {
                      13396 ; rs232cmd.c 3754                               if ( ParCnt)
00325C 964842rr       13398         MOV.B   ES,#SEG( _ParCnt )
003260 9908rrrr       13399         MOV.W   R0,#SOF( _ParCnt )
003264 8200           13400         MOV.B   R0L,[R0]
003266 F306           13401         BEQ     _925
                      13402 ; rs232cmd.c 3755                                       SCPIError = ParNotAllowed;
003268 964842rr       13404         MOV.B   ES,#SEG( _SCPIError )
00326C 9908rrrr       13405         MOV.W   R0,#SOF( _SCPIError )
003270 BA06           13406         MOV.W   [R0],#06H
003272 FE61           13407         BR      _937
003272 FE61           13407         BR      _937
003274                13408 _925:
                      13409 ; rs232cmd.c 3756                               else
                      13410 ; rs232cmd.c 3757                               {
                      13411 ; rs232cmd.c 3758                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
003274 964842rr       13413         MOV.B   ES,#SEG( _AudioSetup+24 )
003278 9908rrrr       13414         MOV.W   R0,#SOF( _AudioSetup+24 )
00327C 8A00           13415         MOV.W   R0,[R0]
00327E E900000C       13416         MULU.W  R0,#0CH
003282 8920           13417         MOV.W   R2,R0
003284 B930           13418         MOVS.W  R3,#00H
003286 9918rrrr       13419         MOV.W   R1,#SEG( _AudioFrequencyPar )
00328A 9908rrrr       13420         MOV.W   R0,#SOF( _AudioFrequencyPar )
00328E 0902           13421         ADD.W   R0,R2
003290 1913           13422         ADDC.W  R1,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 218

ADDR   CODE            LINE SOURCELINE
003292 862C43         13423         MOV.B   CS,R1L
003295 8820           13424         MOVC.W  R2,[R0+]
003297 99040000       13425         CMP.W   R0,#00H
00329B F202           13426         BNE     _938
00329D A64143         13427         ADDS.B  CS,#01H
00329D A64143         13427         ADDS.B  CS,#01H
0032A0                13428 _938:
0032A0 8830           13429         MOVC.W  R3,[R0+]
0032A2 8953           13430         MOV.W   R5,R3
0032A4 8942           13431         MOV.W   R4,R2
                      13433 ; rs232cmd.c 3759       
                      13434 ; rs232cmd.c 3760                                       while ( *str)
0032A6 866C43         13436         MOV.B   CS,R3L
0032A9 8062           13437         MOVC.B  R3L,[R2+]
0032AB F312           13438         BEQ     _927
0032AB F31200         13438         BEQ     _927
0032AE                13439 _926:
                      13440 ; rs232cmd.c 3761                                               rs232putchar( *str++);
0032AE 8915           13442         MOV.W   R1,R5
0032B0 8904           13443         MOV.W   R0,R4
0032B2 862C43         13444         MOV.B   CS,R1L
0032B5 8020           13445         MOVC.B  R1L,[R0+]
0032B7 8102           13446         MOV.B   R0L,R1L
                      13447         CALL    _rs232putchar
0032B9 C4rrrrrr       +13447 ;       FCALL   _rs232putchar
0032BD 99400001       13448         ADD.W   R4,#01H
0032C1 99510000       13449         ADDC.W  R5,#00H
0032C5 8915           13453         MOV.W   R1,R5
0032C7 8904           13454         MOV.W   R0,R4
0032C9 862C43         13455         MOV.B   CS,R1L
0032CC 8020           13456         MOVC.B  R1L,[R0+]
0032CE F2EF           13457         BNE     _926
0032D0                13459 _927:
                      13460 ; rs232cmd.c 3762       
                      13461 ; rs232cmd.c 3763                                       rs232putchar('\n');
0032D0 91080A         13463         MOV.B   R0L,#0AH
                      13464         CALL    _rs232putchar
0032D3 C4rrrrrr       +13464 ;       FCALL   _rs232putchar
                      13465 ; rs232cmd.c 3764                               }
                      13466 ; rs232cmd.c 3765                       }
0032D7 FE2F           13468         BR      _937
0032D7 FE2F00         13468         BR      _937
0032DA                13469 _928:
                      13470 ; rs232cmd.c 3766                       else
                      13471 ; rs232cmd.c 3767                       {
                      13472 ; rs232cmd.c 3768                               if ( ParCnt != 1)
0032DA 964842rr       13474         MOV.B   ES,#SEG( _ParCnt )
0032DE 9908rrrr       13475         MOV.W   R0,#SOF( _ParCnt )
0032E2 8200           13476         MOV.B   R0L,[R0]
0032E4 910401         13477         CMP.B   R0L,#01H
0032E7 F307           13478         BEQ     _929
                      13479 ; rs232cmd.c 3769                                       SCPIError = SyntaxErr;
0032E9 964842rr       13481         MOV.B   ES,#SEG( _SCPIError )
0032ED 9908rrrr       13482         MOV.W   R0,#SOF( _SCPIError )
0032F1 BA03           13483         MOV.W   [R0],#03H
0032F3 FE21           13484         BR      _937
0032F3 FE2100         13484         BR      _937
0032F6                13485 _929:
                      13486 ; rs232cmd.c 3770                               else
                      13487 ; rs232cmd.c 3771                               {
                      13488 ; rs232cmd.c 3772                                       frequency = FindParameter( Cmd, AudioFreq
                            uencyPar);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 219

ADDR   CODE            LINE SOURCELINE
0032F6 9918rrrr       13490         MOV.W   R1,#SEG( _Cmd )
0032FA 9908rrrr       13491         MOV.W   R0,#SOF( _Cmd )
0032FE 9938rrrr       13492         MOV.W   R3,#SEG( _AudioFrequencyPar )
003302 9928rrrr       13493         MOV.W   R2,#SOF( _AudioFrequencyPar )
003306 C51679         13494         CALL    _FindParameter
                      13496 ; rs232cmd.c 3773               
                      13497 ; rs232cmd.c 3774                                       if ( frequency > -1)
003309 8910           13499         MOV.W   R1,R0
00330B 9914FFFF       13500         CMP.W   R1,#0FFFFH
00330F FD0D           13503         BLE     _930
                      13504 ; rs232cmd.c 3775                                       {
                      13505 ; rs232cmd.c 3776                                               if ( SetAudioWordClock( AESEBUAud
                            io, frequency) == FAIL)
003311 B901           13507         MOV.W   R0,#01H
                      13508         CALL    _SetAudioWordClock
003313 C4rrrrrr       +13508 ;       FCALL   _SetAudioWordClock
003317 6900           13510         OR.W    R0,R0
003319 F20E           13511         BNE     _937
                      13512 ; rs232cmd.c 3777                                                       SCPIError = ExecErr;
00331B 964842rr       13514         MOV.B   ES,#SEG( _SCPIError )
00331F 9908rrrr       13515         MOV.W   R0,#SOF( _SCPIError )
003323 9A08001D       13516         MOV.W   [R0],#01DH
                      13517 ; rs232cmd.c 3778                                       }
003327 FE07           13519         BR      _937
003327 FE0700         13519         BR      _937
00332A                13520 _930:
                      13521 ; rs232cmd.c 3779                                       else
                      13522 ; rs232cmd.c 3780                                               SCPIError = DataOutOfRange;
00332A 964842rr       13524         MOV.B   ES,#SEG( _SCPIError )
00332E 9908rrrr       13525         MOV.W   R0,#SOF( _SCPIError )
003332 9A080021       13526         MOV.W   [R0],#021H
                      13527 ; rs232cmd.c 3781                               }
                      13528 ; rs232cmd.c 3782                       }
                      13529 ; rs232cmd.c 3783               }
003336                13531 _937:
                      13532 ; rs232cmd.c 3784       }
003336 2F30           13534         POP.W   R4, R5
003338 D680           13536         RET
                      13539 ; rs232cmd.c 3785       
                      13540 ; rs232cmd.c 3786       /************************************************************************
                            **/
                      13541 ; rs232cmd.c 3787       /* AudioGenAESEBUClick                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      13542 ; rs232cmd.c 3788       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13543 ; rs232cmd.c 3789       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13544 ; rs232cmd.c 3790       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      13545 ; rs232cmd.c 3791       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13546 ; rs232cmd.c 3792       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 220

ADDR   CODE            LINE SOURCELINE
                      13547 ; rs232cmd.c 3793       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13548 ; rs232cmd.c 3794       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13549 ; rs232cmd.c 3795       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13550 ; rs232cmd.c 3796       /************************************************************************
                            **/
                      13551 ; rs232cmd.c 3797       void AudioGenAESEBUClick( void)
                      13552 ; rs232cmd.c 3798       {
                      13553         ALIGN   1
                      13555         PUBLIC  _AudioGenAESEBUClick
00333A                13556 _AudioGenAESEBUClick:
00333A A97E           13560         ADDS.W  R7,#0EH
                      13563 ; rs232cmd.c 3799               int click;
                      13564 ; rs232cmd.c 3800       
                      13565 ; rs232cmd.c 3801               if ( CmdExecute && !SCPIError)
00333C 964842rr       13567         MOV.B   ES,#SEG( _CmdExecute )
003340 9908rrrr       13568         MOV.W   R0,#SOF( _CmdExecute )
003344 8200           13569         MOV.B   R0L,[R0]
003346 F363           13570         BEQ     _953
003348 964842rr       13571         MOV.B   ES,#SEG( _SCPIError )
00334C 9908rrrr       13572         MOV.W   R0,#SOF( _SCPIError )
003350 8A00           13573         MOV.W   R0,[R0]
003352 F25D           13574         BNE     _953
                      13575 ; rs232cmd.c 3802               {
                      13576 ; rs232cmd.c 3803                       if ( CmdRequest)
003354 964842rr       13578         MOV.B   ES,#SEG( _CmdRequest )
003358 9908rrrr       13579         MOV.W   R0,#SOF( _CmdRequest )
00335C 8200           13580         MOV.B   R0L,[R0]
00335E F31C           13581         BEQ     _942
                      13582 ; rs232cmd.c 3804                       {
                      13583 ; rs232cmd.c 3805                               if ( ParCnt)
003360 964842rr       13585         MOV.B   ES,#SEG( _ParCnt )
003364 9908rrrr       13586         MOV.W   R0,#SOF( _ParCnt )
003368 8200           13587         MOV.B   R0L,[R0]
00336A F306           13588         BEQ     _941
                      13589 ; rs232cmd.c 3806                                       SCPIError = ParNotAllowed;
00336C 964842rr       13591         MOV.B   ES,#SEG( _SCPIError )
003370 9908rrrr       13592         MOV.W   R0,#SOF( _SCPIError )
003374 BA06           13593         MOV.W   [R0],#06H
003376 FE4B           13594         BR      _953
003376 FE4B           13594         BR      _953
003378                13595 _941:
                      13596 ; rs232cmd.c 3807                               else
                      13597 ; rs232cmd.c 3808                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
003378 B906           13599         MOV.W   R0,#06H
00337A 964842rr       13600         MOV.B   ES,#SEG( _AudioSetup+26 )
00337E 9918rrrr       13601         MOV.W   R1,#SOF( _AudioSetup+26 )
003382 8A11           13602         MOV.W   R1,[R1]
003384 0F02           13603         PUSH.W  R1
003386 9938rrrr       13605         MOV.W   R3,#SEG( _9 )
00338A 9928rrrr       13606         MOV.W   R2,#SOF( _9 )
00338E 0F0C           13607         PUSH.W  R2, R3
                      13609         CALL    _rs232printf
003390 C4rrrrrr       +13609 ;       FCALL   _rs232printf
003394 A976           13610         ADDS.W  R7,#06H
                      13612 ; rs232cmd.c 3809                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 221

ADDR   CODE            LINE SOURCELINE
003396 FE3B           13614         BR      _953
003396 FE3B           13614         BR      _953
003398                13615 _942:
                      13616 ; rs232cmd.c 3810                       else
                      13617 ; rs232cmd.c 3811                       {
                      13618 ; rs232cmd.c 3812                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
003398 964842rr       13620         MOV.B   ES,#SEG( _ParCnt )
00339C 9908rrrr       13621         MOV.W   R0,#SOF( _ParCnt )
0033A0 8200           13622         MOV.B   R0L,[R0]
0033A2 910401         13623         CMP.B   R0L,#01H
0033A5 F215           13624         BNE     _943
0033A7 9918rrrr       13625         MOV.W   R1,#SEG( _Cmd )
0033AB 9908rrrr       13626         MOV.W   R0,#SOF( _Cmd )
0033AF 9168rr         13627         MOV.B   R3L,#SEG( __lc_bs )
0033B2 7177           13628         XOR.B   R3H,R3H
0033B4 8927           13629         MOV.W   R2,R7
0033B6 0F0C           13630         PUSH.W  R2, R3
0033B8 9938rrrr       13632         MOV.W   R3,#SEG( _10 )
0033BC 9928rrrr       13633         MOV.W   R2,#SOF( _10 )
0033C0 0F0C           13634         PUSH.W  R2, R3
                      13636         CALL    _sscanf
0033C2 C4rrrrrr       +13636 ;       FCALL   _sscanf
0033C6 99700008       13637         ADD.W   R7,#08H
0033CA 99040001       13639         CMP.W   R0,#01H
0033CE F306           13640         BEQ     _944
0033CE F306           13640         BEQ     _944
0033D0                13641 _943:
                      13642 ; rs232cmd.c 3813                                       SCPIError = SyntaxErr;
0033D0 964842rr       13644         MOV.B   ES,#SEG( _SCPIError )
0033D4 9908rrrr       13645         MOV.W   R0,#SOF( _SCPIError )
0033D8 BA03           13646         MOV.W   [R0],#03H
0033DA FE19           13647         BR      _953
0033DA FE19           13647         BR      _953
0033DC                13648 _944:
                      13649 ; rs232cmd.c 3814                               else
                      13650 ; rs232cmd.c 3815                               {
                      13651 ; rs232cmd.c 3816                                       if (( click != click1s) && ( click != cli
                            ck3s))
0033DC 9A740001       13653         CMP.W   [R7],#01H
0033E0 F30A           13654         BEQ     _946
0033E2 9A740003       13655         CMP.W   [R7],#03H
0033E6 F307           13656         BEQ     _946
                      13657 ; rs232cmd.c 3817                                               SCPIError = DataOutOfRange;
0033E8 964842rr       13659         MOV.B   ES,#SEG( _SCPIError )
0033EC 9908rrrr       13660         MOV.W   R0,#SOF( _SCPIError )
0033F0 9A080021       13661         MOV.W   [R0],#021H
0033F4 FE0C           13662         BR      _953
0033F4 FE0C           13662         BR      _953
0033F6                13663 _946:
                      13664 ; rs232cmd.c 3818                                       else
                      13665 ; rs232cmd.c 3819                                       {
                      13666 ; rs232cmd.c 3820                                               if ( SetAudioClick( AESEBUAudio, 
                            click) == FAIL)
0033F6 B901           13668         MOV.W   R0,#01H
0033F8 8A17           13669         MOV.W   R1,[R7]
                      13670         CALL    _SetAudioClick
0033FA C4rrrrrr       +13670 ;       FCALL   _SetAudioClick
0033FE 6900           13671         OR.W    R0,R0
003400 F206           13672         BNE     _953
                      13673 ; rs232cmd.c 3821                                                       SCPIError = ExecErr;
003402 964842rr       13675         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 222

ADDR   CODE            LINE SOURCELINE
003406 9908rrrr       13676         MOV.W   R0,#SOF( _SCPIError )
00340A 9A08001D       13677         MOV.W   [R0],#01DH
                      13678 ; rs232cmd.c 3822                                       }
                      13679 ; rs232cmd.c 3823                               }
                      13680 ; rs232cmd.c 3824                       }
                      13681 ; rs232cmd.c 3825               }
00340E                13683 _953:
                      13684 ; rs232cmd.c 3826       }
00340E A972           13686         ADDS.W  R7,#02H
003410 D680           13688         RET
                      13690 ; rs232cmd.c 3827       
                      13691 ; rs232cmd.c 3828       /************************************************************************
                            **/
                      13692 ; rs232cmd.c 3829       /* FactPassword                                                          
                                                                                                                             
                                                 RS232CMD.C */
                      13693 ; rs232cmd.c 3830       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13694 ; rs232cmd.c 3831       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      13695 ; rs232cmd.c 3832       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      13696 ; rs232cmd.c 3833       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13697 ; rs232cmd.c 3834       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13698 ; rs232cmd.c 3835       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13699 ; rs232cmd.c 3836       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13700 ; rs232cmd.c 3837       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13701 ; rs232cmd.c 3838       /************************************************************************
                            **/
                      13702 ; rs232cmd.c 3839       void FactPassword( void)
                      13703 ; rs232cmd.c 3840       {
                      13704         ALIGN   1
                      13706         PUBLIC  _FactPassword
003412                13707 _FactPassword:
                      13711 ; rs232cmd.c 3841               if ( CmdExecute && !SCPIError)
003412 964842rr       13713         MOV.B   ES,#SEG( _CmdExecute )
003416 9908rrrr       13714         MOV.W   R0,#SOF( _CmdExecute )
00341A 8200           13715         MOV.B   R0L,[R0]
00341C F365           13716         BEQ     _974
00341E 964842rr       13717         MOV.B   ES,#SEG( _SCPIError )
003422 9908rrrr       13718         MOV.W   R0,#SOF( _SCPIError )
003426 8A00           13719         MOV.W   R0,[R0]
003428 F25F           13720         BNE     _974
                      13721 ; rs232cmd.c 3842               {
                      13722 ; rs232cmd.c 3843                       if ( CmdRequest)
00342A 964842rr       13724         MOV.B   ES,#SEG( _CmdRequest )
00342E 9908rrrr       13725         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 223

ADDR   CODE            LINE SOURCELINE
003432 8200           13726         MOV.B   R0L,[R0]
003434 F320           13727         BEQ     _963
                      13728 ; rs232cmd.c 3844                       {
                      13729 ; rs232cmd.c 3845                               if ( ParCnt)
003436 964842rr       13731         MOV.B   ES,#SEG( _ParCnt )
00343A 9908rrrr       13732         MOV.W   R0,#SOF( _ParCnt )
00343E 8200           13733         MOV.B   R0L,[R0]
003440 F306           13734         BEQ     _961
                      13735 ; rs232cmd.c 3846                                       SCPIError = ParNotAllowed;
003442 964842rr       13737         MOV.B   ES,#SEG( _SCPIError )
003446 9908rrrr       13738         MOV.W   R0,#SOF( _SCPIError )
00344A BA06           13739         MOV.W   [R0],#06H
00344C D680           13740         RET
00344C D680           13740         RET
00344E                13741 _961:
                      13742 ; rs232cmd.c 3847                               else
                      13743 ; rs232cmd.c 3848                               {
                      13744 ; rs232cmd.c 3849                                       if ( PasswordProtected)
00344E 964842rr       13746         MOV.B   ES,#SEG( _PasswordProtected )
003452 9908rrrr       13747         MOV.W   R0,#SOF( _PasswordProtected )
003456 8A00           13748         MOV.W   R0,[R0]
003458 F307           13749         BEQ     _962
                      13750 ; rs232cmd.c 3850                                               rs232puts( "ON\n");
00345A 9918rrrr       13752         MOV.W   R1,#SEG( _958 )
00345E 9908rrrr       13753         MOV.W   R0,#SOF( _958 )
                      13754         CALL    _rs232puts
003462 C4rrrrrr       +13754 ;       FCALL   _rs232puts
003466 D680           13755         RET
003466 D680           13755         RET
003468                13756 _962:
                      13757 ; rs232cmd.c 3851                                       else
                      13758 ; rs232cmd.c 3852                                               rs232puts( "OFF\n");
003468 9918rrrr       13760         MOV.W   R1,#SEG( _959 )
00346C 9908rrrr       13761         MOV.W   R0,#SOF( _959 )
                      13762         CALL    _rs232puts
003470 C4rrrrrr       +13762 ;       FCALL   _rs232puts
                      13763 ; rs232cmd.c 3853                               }
                      13764 ; rs232cmd.c 3854                       }
003474 D680           13766         RET
003474 D680           13766         RET
003476                13767 _963:
                      13768 ; rs232cmd.c 3855                       else
                      13769 ; rs232cmd.c 3856                       {
                      13770 ; rs232cmd.c 3857                               if ( ParCnt != 1)
003476 964842rr       13772         MOV.B   ES,#SEG( _ParCnt )
00347A 9908rrrr       13773         MOV.W   R0,#SOF( _ParCnt )
00347E 8200           13774         MOV.B   R0L,[R0]
003480 910401         13775         CMP.B   R0L,#01H
003483 F307           13776         BEQ     _964
                      13777 ; rs232cmd.c 3858                                       SCPIError = SyntaxErr;
003485 964842rr       13779         MOV.B   ES,#SEG( _SCPIError )
003489 9908rrrr       13780         MOV.W   R0,#SOF( _SCPIError )
00348D BA03           13781         MOV.W   [R0],#03H
00348F D680           13782         RET
00348F D68000         13782         RET
003492                13783 _964:
                      13784 ; rs232cmd.c 3859                               else
                      13785 ; rs232cmd.c 3860                               {
                      13786 ; rs232cmd.c 3861                                       if ( !strcmp( Cmd, "ON"))
003492 9938rrrr       13788         MOV.W   R3,#SEG( _960 )
003496 9928rrrr       13789         MOV.W   R2,#SOF( _960 )
00349A 9918rrrr       13790         MOV.W   R1,#SEG( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 224

ADDR   CODE            LINE SOURCELINE
00349E 9908rrrr       13791         MOV.W   R0,#SOF( _Cmd )
                      13792         CALL    _strcmp
0034A2 C4rrrrrr       +13792 ;       FCALL   _strcmp
0034A6 6900           13793         OR.W    R0,R0
0034A8 F207           13794         BNE     _965
                      13795 ; rs232cmd.c 3862                                               PasswordProtected = true;
0034AA 964842rr       13797         MOV.B   ES,#SEG( _PasswordProtected )
0034AE 9908rrrr       13798         MOV.W   R0,#SOF( _PasswordProtected )
0034B2 9A08FFFF       13799         MOV.W   [R0],#0FFFFH
0034B6 D680           13800         RET
0034B6 D680           13800         RET
0034B8                13801 _965:
                      13802 ; rs232cmd.c 3863                                       else
                      13803 ; rs232cmd.c 3864                                               if ( !Cstrcmp( Cmd, PasswordText)
                            )
0034B8 9938rrrr       13805         MOV.W   R3,#SEG( _PasswordText )
0034BC 9928rrrr       13806         MOV.W   R2,#SOF( _PasswordText )
0034C0 9918rrrr       13807         MOV.W   R1,#SEG( _Cmd )
0034C4 9908rrrr       13808         MOV.W   R0,#SOF( _Cmd )
                      13809         CALL    _Cstrcmp
0034C8 C4rrrrrr       +13809 ;       FCALL   _Cstrcmp
0034CC 6900           13810         OR.W    R0,R0
0034CE F206           13811         BNE     _966
                      13812 ; rs232cmd.c 3865                                                       PasswordProtected = false
                            ;
0034D0 964842rr       13814         MOV.B   ES,#SEG( _PasswordProtected )
0034D4 9908rrrr       13815         MOV.W   R0,#SOF( _PasswordProtected )
0034D8 BA00           13816         MOV.W   [R0],#00H
0034DA D680           13817         RET
0034DA D680           13817         RET
0034DC                13818 _966:
                      13819 ; rs232cmd.c 3866                                       else
                      13820 ; rs232cmd.c 3867                                               SCPIError = IllegalParValue;
0034DC 964842rr       13822         MOV.B   ES,#SEG( _SCPIError )
0034E0 9908rrrr       13823         MOV.W   R0,#SOF( _SCPIError )
0034E4 9A080023       13824         MOV.W   [R0],#023H
                      13825 ; rs232cmd.c 3868                               }
                      13826 ; rs232cmd.c 3869                       }
                      13827 ; rs232cmd.c 3870               }
0034E8                13829 _974:
                      13830 ; rs232cmd.c 3871       }
0034E8 D680           13832         RET
                      13834 ; rs232cmd.c 3872       
                      13835 ; rs232cmd.c 3873       /************************************************************************
                            **/
                      13836 ; rs232cmd.c 3874       /* FactReset                                                             
                                                                                                                             
                                                         RS232CMD.C */
                      13837 ; rs232cmd.c 3875       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13838 ; rs232cmd.c 3876       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
                      13839 ; rs232cmd.c 3877       /* Revised:       000914                                                 
                                                                                                                             
                                                                                    */
                      13840 ; rs232cmd.c 3878       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 225

ADDR   CODE            LINE SOURCELINE
                      13841 ; rs232cmd.c 3879       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      13842 ; rs232cmd.c 3880       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      13843 ; rs232cmd.c 3881       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      13844 ; rs232cmd.c 3882       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      13845 ; rs232cmd.c 3883       /************************************************************************
                            **/
                      13846 ; rs232cmd.c 3884       void FactReset( void)
                      13847 ; rs232cmd.c 3885       {
                      13848         ALIGN   1
                      13850         PUBLIC  _FactReset
0034EA                13851 _FactReset:
0034EA 0F10           13855         PUSH.W  R4
                      13859 ; rs232cmd.c 3886               int i;
                      13860 ; rs232cmd.c 3887       
                      13861 ; rs232cmd.c 3888               if ( !PasswordProtected)
0034EC 964842rr       13863         MOV.B   ES,#SEG( _PasswordProtected )
0034F0 9908rrrr       13864         MOV.W   R0,#SOF( _PasswordProtected )
0034F4 8A00           13865         MOV.W   R0,[R0]
0034F6 F256           13866         BNE     _983
                      13867 ; rs232cmd.c 3889               {
                      13868 ; rs232cmd.c 3890                       if ( CmdExecute && !SCPIError)
0034F8 964842rr       13870         MOV.B   ES,#SEG( _CmdExecute )
0034FC 9908rrrr       13871         MOV.W   R0,#SOF( _CmdExecute )
003500 8200           13872         MOV.B   R0L,[R0]
003502 F350           13873         BEQ     _983
003504 964842rr       13874         MOV.B   ES,#SEG( _SCPIError )
003508 9908rrrr       13875         MOV.W   R0,#SOF( _SCPIError )
00350C 8A00           13876         MOV.W   R0,[R0]
00350E F24A           13877         BNE     _983
                      13878 ; rs232cmd.c 3891                       {
                      13879 ; rs232cmd.c 3892                               if ( CmdRequest)
003510 964842rr       13881         MOV.B   ES,#SEG( _CmdRequest )
003514 9908rrrr       13882         MOV.W   R0,#SOF( _CmdRequest )
003518 8200           13883         MOV.B   R0L,[R0]
00351A F306           13884         BEQ     _976
                      13885 ; rs232cmd.c 3893                                               SCPIError = SyntaxErr;
00351C 964842rr       13887         MOV.B   ES,#SEG( _SCPIError )
003520 9908rrrr       13888         MOV.W   R0,#SOF( _SCPIError )
003524 BA03           13889         MOV.W   [R0],#03H
003526 FE3E           13890         BR      _983
003526 FE3E           13890         BR      _983
003528                13891 _976:
                      13892 ; rs232cmd.c 3894                               else
                      13893 ; rs232cmd.c 3895                               {
                      13894 ; rs232cmd.c 3896                                       if ( ParCnt)
003528 964842rr       13896         MOV.B   ES,#SEG( _ParCnt )
00352C 9908rrrr       13897         MOV.W   R0,#SOF( _ParCnt )
003530 8200           13898         MOV.B   R0L,[R0]
003532 F306           13899         BEQ     _977
                      13900 ; rs232cmd.c 3897                                               SCPIError = SyntaxErr;
003534 964842rr       13902         MOV.B   ES,#SEG( _SCPIError )
003538 9908rrrr       13903         MOV.W   R0,#SOF( _SCPIError )
00353C BA03           13904         MOV.W   [R0],#03H
00353E FE32           13905         BR      _983
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 226

ADDR   CODE            LINE SOURCELINE
00353E FE32           13905         BR      _983
003540                13906 _977:
                      13907 ; rs232cmd.c 3898                                       else
                      13908 ; rs232cmd.c 3899                                       {
                      13909 ; rs232cmd.c 3900                                               GenlockDefaults();               
                                            // 
                      13911         CALL    _GenlockDefaults
003540 C4rrrrrr       +13911 ;       FCALL   _GenlockDefaults
                      13912 ; rs232cmd.c 3901                                               BBDefaults();                    
                                                            // 
                      13914         CALL    _BBDefaults
003544 C4rrrrrr       +13914 ;       FCALL   _BBDefaults
                      13915 ; rs232cmd.c 3902                                               CBDefaults();                    
                                                            //
                      13917         CALL    _CBDefaults
003548 C4rrrrrr       +13917 ;       FCALL   _CBDefaults
                      13918 ; rs232cmd.c 3903                                               AudioDefaults();                 
                                                    //
                      13920         CALL    _AudioDefaults
00354C C4rrrrrr       +13920 ;       FCALL   _AudioDefaults
                      13921 ; rs232cmd.c 3904       
                      13922 ; rs232cmd.c 3905                                               GenlockInit();                   
                                                    // init the genlock setup
                      13924         CALL    _GenlockInit
003550 C4rrrrrr       +13924 ;       FCALL   _GenlockInit
                      13925 ; rs232cmd.c 3906                                               BBInit();                        
                                                                            // init the black burst setups
                      13927         CALL    _BBInit
003554 C4rrrrrr       +13927 ;       FCALL   _BBInit
                      13928 ; rs232cmd.c 3907                                               CBInit();                        
                                                                            // init the colorbar generator (PAL,EBU ColorBar)
                            
                      13930         CALL    _CBInit
003558 C4rrrrrr       +13930 ;       FCALL   _CBInit
                      13931 ; rs232cmd.c 3908                                               AudioInit();                     
                                                            // init the audio setup, (this includes an AudioTimer)           
                                            
                      13933         CALL    _AudioInit
00355C C4rrrrrr       +13933 ;       FCALL   _AudioInit
                      13934 ; rs232cmd.c 3909       
                      13935 ; rs232cmd.c 3910                                               GenlockUpdate();                 
                                                    // update the genlock setup.
                      13937         CALL    _GenlockUpdate
003560 C4rrrrrr       +13937 ;       FCALL   _GenlockUpdate
                      13938 ; rs232cmd.c 3911                                               CBUpdate();                      
                                                                    // update the colorbar generator (PAL,EBU ColorBar)
                      13940         CALL    _CBUpdate
003564 C4rrrrrr       +13940 ;       FCALL   _CBUpdate
                      13941 ; rs232cmd.c 3912                                               BBUpdate();                      
                                                                    // update the black burst setups
                      13943         CALL    _BBUpdate
003568 C4rrrrrr       +13943 ;       FCALL   _BBUpdate
                      13944 ; rs232cmd.c 3913                                               AudioUpdate();                   
                                                    // update the audio setup
                      13946         CALL    _AudioUpdate
00356C C4rrrrrr       +13946 ;       FCALL   _AudioUpdate
                      13947 ; rs232cmd.c 3914       
                      13948 ; rs232cmd.c 3915                                               for ( i = 1; i <= NoOfPresets; i+
                            +)
003570 B941           13950         MOV.W   R4,#01H
003572                13952 _978:
                      13953 ; rs232cmd.c 3916                                                       StorePreset( i);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 227

ADDR   CODE            LINE SOURCELINE
003572 8904           13955         MOV.W   R0,R4
                      13958         CALL    _StorePreset
003574 C4rrrrrr       +13958 ;       FCALL   _StorePreset
003578 A941           13962         ADDS.W  R4,#01H
00357A 99440004       13965         CMP.W   R4,#04H
00357E FDF9           13966         BLE     _978
                      13967 ; rs232cmd.c 3917       
                      13968 ; rs232cmd.c 3918                                               Settings.ActivePreset = 0;
003580 964842rr       13970         MOV.B   ES,#SEG( _Settings )
003584 9908rrrr       13971         MOV.W   R0,#SOF( _Settings )
003588 BA00           13972         MOV.W   [R0],#00H
                      13973 ; rs232cmd.c 3919                                               NV_Store( &Settings, SettingsPtr,
                             sizeof( Settings));
00358A 9918rrrr       13975         MOV.W   R1,#SEG( _Settings )
00358E 9908rrrr       13976         MOV.W   R0,#SOF( _Settings )
003592 964842rr       13977         MOV.B   ES,#SEG( _SettingsPtr )
003596 9928rrrr       13978         MOV.W   R2,#SOF( _SettingsPtr )
00359A 8A22           13979         MOV.W   R2,[R2]
00359C 9938004A       13980         MOV.W   R3,#04AH
                      13981         CALL    _NV_Store
0035A0 C4rrrrrr       +13981 ;       FCALL   _NV_Store
                      13982 ; rs232cmd.c 3920                                       }
                      13983 ; rs232cmd.c 3921                               }
                      13984 ; rs232cmd.c 3922                       }
                      13985 ; rs232cmd.c 3923               }
0035A4                13987 _983:
                      13988 ; rs232cmd.c 3924       }
0035A4 2F10           13990         POP.W   R4
0035A6 D680           13992         RET
                      13995 ; rs232cmd.c 3925       
                      13996 ; rs232cmd.c 3926       /************************************************************************
                            **/
                      13997 ; rs232cmd.c 3927       /* FactV24Command                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      13998 ; rs232cmd.c 3928       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      13999 ; rs232cmd.c 3929       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                    */
                      14000 ; rs232cmd.c 3930       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      14001 ; rs232cmd.c 3931       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14002 ; rs232cmd.c 3932       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14003 ; rs232cmd.c 3933       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14004 ; rs232cmd.c 3934       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14005 ; rs232cmd.c 3935       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 228

ADDR   CODE            LINE SOURCELINE
                      14006 ; rs232cmd.c 3936       /************************************************************************
                            **/
                      14007 ; rs232cmd.c 3937       void FactV24Command( void)
                      14008 ; rs232cmd.c 3938       {
                      14009         ALIGN   1
                      14011         PUBLIC  _FactV24Command
0035A8                14012 _FactV24Command:
0035A8 0F30           14016         PUSH.W  R4, R5
0035AA 9972003E       14018         SUB.W   R7,#03EH
                      14024 ; rs232cmd.c 3939               UC address;
                      14025 ; rs232cmd.c 3940               char command[30], result[30];;
                      14026 ; rs232cmd.c 3941       
                      14027 ; rs232cmd.c 3942               if ( !PasswordProtected)
0035AE 964842rr       14029         MOV.B   ES,#SEG( _PasswordProtected )
0035B2 9908rrrr       14030         MOV.W   R0,#SOF( _PasswordProtected )
0035B6 8A00           14031         MOV.W   R0,[R0]
                      14032         BNE     _1000
0035B8 F302           +14032 ;       BEQ     _LG_918
0035BA D50084         +14032 ;       JMP.L   _1000
0035BE D5008400       +14032 ;       JMP.L   _1000
0035BE                +14032 _LG_918:
                      14033 ; rs232cmd.c 3943               {
                      14034 ; rs232cmd.c 3944                       if ( CmdExecute && !SCPIError)
0035BE 964842rr       14036         MOV.B   ES,#SEG( _CmdExecute )
0035C2 9908rrrr       14037         MOV.W   R0,#SOF( _CmdExecute )
0035C6 8200           14038         MOV.B   R0L,[R0]
0035C8 F37D           14039         BEQ     _1000
0035CA 964842rr       14040         MOV.B   ES,#SEG( _SCPIError )
0035CE 9908rrrr       14041         MOV.W   R0,#SOF( _SCPIError )
0035D2 8A00           14042         MOV.W   R0,[R0]
0035D4 F277           14043         BNE     _1000
                      14044 ; rs232cmd.c 3945                       {
                      14045 ; rs232cmd.c 3946                               if ( CmdRequest)
0035D6 964842rr       14047         MOV.B   ES,#SEG( _CmdRequest )
0035DA 9908rrrr       14048         MOV.W   R0,#SOF( _CmdRequest )
0035DE 8200           14049         MOV.B   R0L,[R0]
0035E0 F306           14050         BEQ     _988
                      14051 ; rs232cmd.c 3947                                       SCPIError = SyntaxErr;
0035E2 964842rr       14053         MOV.B   ES,#SEG( _SCPIError )
0035E6 9908rrrr       14054         MOV.W   R0,#SOF( _SCPIError )
0035EA BA03           14055         MOV.W   [R0],#03H
0035EC FE6B           14056         BR      _1000
0035EC FE6B           14056         BR      _1000
0035EE                14057 _988:
                      14058 ; rs232cmd.c 3948                               else
                      14059 ; rs232cmd.c 3949                               {
                      14060 ; rs232cmd.c 3950                                       if (( ParCnt != 2) || ( sscanf( Cmd, "%d,
                            %s", &address, command) != 2))
0035EE 964842rr       14062         MOV.B   ES,#SEG( _ParCnt )
0035F2 9908rrrr       14063         MOV.W   R0,#SOF( _ParCnt )
0035F6 8200           14064         MOV.B   R0L,[R0]
0035F8 910402         14065         CMP.B   R0L,#02H
0035FB F21A           14066         BNE     _989
0035FD 9918rrrr       14067         MOV.W   R1,#SEG( _Cmd )
003601 9908rrrr       14068         MOV.W   R0,#SOF( _Cmd )
003605 9168rr         14069         MOV.B   R3L,#SEG( __lc_bs )
003608 7177           14070         XOR.B   R3H,R3H
00360A 8927           14071         MOV.W   R2,R7
00360C 91A8rr         14072         MOV.B   R5L,#SEG( __lc_bs )
00360F 71BB           14073         XOR.B   R5H,R5H
003611 404702         14074         LEA     R4,R7+2
003614 0F30           14075         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 229

ADDR   CODE            LINE SOURCELINE
003616 0F0C           14077         PUSH.W  R2, R3
003618 9938rrrr       14079         MOV.W   R3,#SEG( _985 )
00361C 9928rrrr       14080         MOV.W   R2,#SOF( _985 )
003620 0F0C           14081         PUSH.W  R2, R3
                      14083         CALL    _sscanf
003622 C4rrrrrr       +14083 ;       FCALL   _sscanf
003626 9970000C       14084         ADD.W   R7,#0CH
00362A 99040002       14086         CMP.W   R0,#02H
00362E F306           14087         BEQ     _990
00362E F306           14087         BEQ     _990
003630                14088 _989:
                      14089 ; rs232cmd.c 3951                                               SCPIError = SyntaxErr;
003630 964842rr       14091         MOV.B   ES,#SEG( _SCPIError )
003634 9908rrrr       14092         MOV.W   R0,#SOF( _SCPIError )
003638 BA03           14093         MOV.W   [R0],#03H
00363A FE44           14094         BR      _1000
00363A FE44           14094         BR      _1000
00363C                14095 _990:
                      14096 ; rs232cmd.c 3952                                       else
                      14097 ; rs232cmd.c 3953                                       {
                      14098 ; rs232cmd.c 3954                                               if ( command[2] == '?')
00363C 9474043F       14100         CMP.B   [R7+4],#03FH
003640 F227           14101         BNE     _992
                      14102 ; rs232cmd.c 3955                                               {
                      14103 ; rs232cmd.c 3956                                                       if ( sio0SndRequest( 12, 
                            address, result, "%s", command) == OK)
003642 9908000C       14105         MOV.W   R0,#0CH
003646 8227           14106         MOV.B   R1L,[R7]
003648 B130           14107         MOVS.B  R1H,#00H
00364A 91A8rr         14108         MOV.B   R5L,#SEG( __lc_bs )
00364D 71BB           14109         XOR.B   R5H,R5H
00364F 404720         14110         LEA     R4,R7+32
003652 9168rr         14111         MOV.B   R3L,#SEG( __lc_bs )
003655 7177           14112         XOR.B   R3H,R3H
003657 402702         14113         LEA     R2,R7+2
00365A 0F0C           14114         PUSH.W  R2, R3
00365C 9938rrrr       14116         MOV.W   R3,#SEG( _986 )
003660 9928rrrr       14117         MOV.W   R2,#SOF( _986 )
003664 0F0C           14118         PUSH.W  R2, R3
003666 8935           14120         MOV.W   R3,R5
003668 8924           14121         MOV.W   R2,R4
                      14122         CALL    _sio0SndRequest
00366A C4rrrrrr       +14122 ;       FCALL   _sio0SndRequest
00366E 99700008       14123         ADD.W   R7,#08H
003672 9904FFFF       14125         CMP.W   R0,#0FFFFH
003676 F205           14126         BNE     _991
                      14127 ; rs232cmd.c 3957                                                               rs232puts( result
                            );
003678 8915           14129         MOV.W   R1,R5
00367A 8904           14130         MOV.W   R0,R4
                      14131         CALL    _rs232puts
00367C C4rrrrrr       +14131 ;       FCALL   _rs232puts
003680 FE21           14132         BR      _1000
003680 FE21           14132         BR      _1000
003682                14133 _991:
                      14134 ; rs232cmd.c 3958                                                       else
                      14135 ; rs232cmd.c 3959                                                               SCPIError = ExecE
                            rr;
003682 964842rr       14137         MOV.B   ES,#SEG( _SCPIError )
003686 9908rrrr       14138         MOV.W   R0,#SOF( _SCPIError )
00368A 9A08001D       14139         MOV.W   [R0],#01DH
                      14140 ; rs232cmd.c 3960                                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 230

ADDR   CODE            LINE SOURCELINE
00368E FE1A           14142         BR      _1000
00368E FE1A           14142         BR      _1000
003690                14143 _992:
                      14144 ; rs232cmd.c 3961                                               else
                      14145 ; rs232cmd.c 3962                                               {
                      14146 ; rs232cmd.c 3963                                                       if ( sio0SndCommand( 20, 
                            address, "%s;", command) == FAIL)
003690 99080014       14148         MOV.W   R0,#014H
003694 8227           14149         MOV.B   R1L,[R7]
003696 B130           14150         MOVS.B  R1H,#00H
003698 9168rr         14151         MOV.B   R3L,#SEG( __lc_bs )
00369B 7177           14152         XOR.B   R3H,R3H
00369D 402702         14153         LEA     R2,R7+2
0036A0 0F0C           14154         PUSH.W  R2, R3
0036A2 9938rrrr       14156         MOV.W   R3,#SEG( _987 )
0036A6 9928rrrr       14157         MOV.W   R2,#SOF( _987 )
0036AA 0F0C           14158         PUSH.W  R2, R3
                      14160         CALL    _sio0SndCommand
0036AC C4rrrrrr       +14160 ;       FCALL   _sio0SndCommand
0036B0 99700008       14161         ADD.W   R7,#08H
0036B4 6900           14163         OR.W    R0,R0
0036B6 F206           14164         BNE     _1000
                      14165 ; rs232cmd.c 3964                                                               SCPIError = ExecE
                            rr;
0036B8 964842rr       14167         MOV.B   ES,#SEG( _SCPIError )
0036BC 9908rrrr       14168         MOV.W   R0,#SOF( _SCPIError )
0036C0 9A08001D       14169         MOV.W   [R0],#01DH
                      14170 ; rs232cmd.c 3965                                               }
                      14171 ; rs232cmd.c 3966                                       }
                      14172 ; rs232cmd.c 3967                               }
                      14173 ; rs232cmd.c 3968                       }
                      14174 ; rs232cmd.c 3969               }
0036C4                14176 _1000:
                      14177 ; rs232cmd.c 3970       }
0036C4 9970003E       14179         ADD.W   R7,#03EH
0036C8 2F30           14181         POP.W   R4, R5
0036CA D680           14183         RET
                      14185 ; rs232cmd.c 3971       
                      14186 ; rs232cmd.c 3972       /************************************************************************
                            **/
                      14187 ; rs232cmd.c 3973       /* FactV24Transparent                                                    
                                                                                                                             
                                RS232CMD.C  */
                      14188 ; rs232cmd.c 3974       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14189 ; rs232cmd.c 3975       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      14190 ; rs232cmd.c 3976       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      14191 ; rs232cmd.c 3977       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14192 ; rs232cmd.c 3978       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 231

ADDR   CODE            LINE SOURCELINE
                      14193 ; rs232cmd.c 3979       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14194 ; rs232cmd.c 3980       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14195 ; rs232cmd.c 3981       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14196 ; rs232cmd.c 3982       /************************************************************************
                            **/
                      14197 ; rs232cmd.c 3983       void FactV24Transparent( void)
                      14198 ; rs232cmd.c 3984       {
                      14199         ALIGN   1
                      14201         PUBLIC  _FactV24Transparent
0036CC                14202 _FactV24Transparent:
                      14208 ; rs232cmd.c 3985               int unit;
                      14209 ; rs232cmd.c 3986       
                      14210 ; rs232cmd.c 3987               if ( !PasswordProtected)
0036CC 964842rr       14212         MOV.B   ES,#SEG( _PasswordProtected )
0036D0 9908rrrr       14213         MOV.W   R0,#SOF( _PasswordProtected )
0036D4 8A00           14214         MOV.W   R0,[R0]
0036D6 F22E           14215         BNE     _1011
                      14216 ; rs232cmd.c 3988               {
                      14217 ; rs232cmd.c 3989                       if ( CmdExecute && !SCPIError)
0036D8 964842rr       14219         MOV.B   ES,#SEG( _CmdExecute )
0036DC 9908rrrr       14220         MOV.W   R0,#SOF( _CmdExecute )
0036E0 8200           14221         MOV.B   R0L,[R0]
0036E2 F328           14222         BEQ     _1011
0036E4 964842rr       14223         MOV.B   ES,#SEG( _SCPIError )
0036E8 9908rrrr       14224         MOV.W   R0,#SOF( _SCPIError )
0036EC 8A00           14225         MOV.W   R0,[R0]
0036EE F222           14226         BNE     _1011
                      14227 ; rs232cmd.c 3990                       {
                      14228 ; rs232cmd.c 3991                               if ( CmdRequest)
0036F0 964842rr       14230         MOV.B   ES,#SEG( _CmdRequest )
0036F4 9908rrrr       14231         MOV.W   R0,#SOF( _CmdRequest )
0036F8 8200           14232         MOV.B   R0L,[R0]
0036FA F306           14233         BEQ     _1005
                      14234 ; rs232cmd.c 3992                                       SCPIError = SyntaxErr;
0036FC 964842rr       14236         MOV.B   ES,#SEG( _SCPIError )
003700 9908rrrr       14237         MOV.W   R0,#SOF( _SCPIError )
003704 BA03           14238         MOV.W   [R0],#03H
003706 D680           14239         RET
003706 D680           14239         RET
003708                14240 _1005:
                      14241 ; rs232cmd.c 3993                               else
                      14242 ; rs232cmd.c 3994                               {
                      14243 ; rs232cmd.c 3995                                       unit = FindParameter( Cmd, UnitPar);
003708 9918rrrr       14245         MOV.W   R1,#SEG( _Cmd )
00370C 9908rrrr       14246         MOV.W   R0,#SOF( _Cmd )
003710 9938rrrr       14247         MOV.W   R3,#SEG( _UnitPar )
003714 9928rrrr       14248         MOV.W   R2,#SOF( _UnitPar )
003718 C51470         14249         CALL    _FindParameter
                      14251 ; rs232cmd.c 3996               
                      14252 ; rs232cmd.c 3997                                       if ( unit > -1)
00371B 9904FFFF       14254         CMP.W   R0,#0FFFFH
00371F FD04           14255         BLE     _1006
                      14256 ; rs232cmd.c 3998                                               BBSPGCommunication( unit);
                      14258         CALL    _BBSPGCommunication
003721 C4rrrrrr       +14258 ;       FCALL   _BBSPGCommunication
003725 D680           14260         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 232

ADDR   CODE            LINE SOURCELINE
003725 D68000         14260         RET
003728                14261 _1006:
                      14262 ; rs232cmd.c 3999                                       else
                      14263 ; rs232cmd.c 4000                                               SCPIError = DataOutOfRange;
003728 964842rr       14265         MOV.B   ES,#SEG( _SCPIError )
00372C 9908rrrr       14266         MOV.W   R0,#SOF( _SCPIError )
003730 9A080021       14267         MOV.W   [R0],#021H
                      14268 ; rs232cmd.c 4001                               }
                      14269 ; rs232cmd.c 4002                       }
                      14270 ; rs232cmd.c 4003               }
003734                14272 _1011:
                      14273 ; rs232cmd.c 4004       }
003734 D680           14275         RET
                      14277 ; rs232cmd.c 4005       
                      14278 ; rs232cmd.c 4006       /************************************************************************
                            **/
                      14279 ; rs232cmd.c 4007       /* FactChecksumCode                                                      
                                                                                                                             
                                         RS232CMD.C */
                      14280 ; rs232cmd.c 4008       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14281 ; rs232cmd.c 4009       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14282 ; rs232cmd.c 4010       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14283 ; rs232cmd.c 4011       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14284 ; rs232cmd.c 4012       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14285 ; rs232cmd.c 4013       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14286 ; rs232cmd.c 4014       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14287 ; rs232cmd.c 4015       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14288 ; rs232cmd.c 4016       /************************************************************************
                            **/
                      14289 ; rs232cmd.c 4017       void FactChecksumCode( void)
                      14290 ; rs232cmd.c 4018       {
                      14291         ALIGN   1
                      14293         PUBLIC  _FactChecksumCode
003736                14294 _FactChecksumCode:
003736 0F30           14298         PUSH.W  R4, R5
003738 9972001E       14300         SUB.W   R7,#01EH
                      14303 ; rs232cmd.c 4019               char buffer[30];
                      14304 ; rs232cmd.c 4020       
                      14305 ; rs232cmd.c 4021               if ( CmdExecute && !SCPIError)
00373C 964842rr       14307         MOV.B   ES,#SEG( _CmdExecute )
003740 9908rrrr       14308         MOV.W   R0,#SOF( _CmdExecute )
003744 8200           14309         MOV.B   R0L,[R0]
003746 F338           14310         BEQ     _1019
003748 964842rr       14311         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 233

ADDR   CODE            LINE SOURCELINE
00374C 9908rrrr       14312         MOV.W   R0,#SOF( _SCPIError )
003750 8A00           14313         MOV.W   R0,[R0]
003752 F232           14314         BNE     _1019
                      14315 ; rs232cmd.c 4022               {
                      14316 ; rs232cmd.c 4023                       if ( CmdRequest)
003754 964842rr       14318         MOV.B   ES,#SEG( _CmdRequest )
003758 9908rrrr       14319         MOV.W   R0,#SOF( _CmdRequest )
00375C 8200           14320         MOV.B   R0L,[R0]
00375E F327           14321         BEQ     _1015
                      14322 ; rs232cmd.c 4024                       {
                      14323 ; rs232cmd.c 4025                               if ( ParCnt)
003760 964842rr       14325         MOV.B   ES,#SEG( _ParCnt )
003764 9908rrrr       14326         MOV.W   R0,#SOF( _ParCnt )
003768 8200           14327         MOV.B   R0L,[R0]
00376A F306           14328         BEQ     _1014
                      14329 ; rs232cmd.c 4026                                       SCPIError = SyntaxErr;
00376C 964842rr       14331         MOV.B   ES,#SEG( _SCPIError )
003770 9908rrrr       14332         MOV.W   R0,#SOF( _SCPIError )
003774 BA03           14333         MOV.W   [R0],#03H
003776 FE20           14334         BR      _1019
003776 FE20           14334         BR      _1019
003778                14335 _1014:
                      14336 ; rs232cmd.c 4027                               else
                      14337 ; rs232cmd.c 4028                               {               
                      14338 ; rs232cmd.c 4029                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPROMCode, StartOfPROMCode+SizeOfPROMCode-1));
003778 B910           14340         MOV.W   R1,#00H
00377A B900           14341         MOV.W   R0,#00H
00377C B933           14342         MOV.W   R3,#03H
00377E 9928FFFF       14343         MOV.W   R2,#0FFFFH
                      14344         CALL    _ROMChecksum
003782 C4rrrrrr       +14344 ;       FCALL   _ROMChecksum
003786 91A8rr         14345         MOV.B   R5L,#SEG( __lc_bs )
003789 71BB           14346         XOR.B   R5H,R5H
00378B 8947           14347         MOV.W   R4,R7
00378D 0F01           14348         PUSH.W  R0
00378F 9918rrrr       14350         MOV.W   R1,#SEG( _1013 )
003793 9908rrrr       14351         MOV.W   R0,#SOF( _1013 )
003797 0F03           14352         PUSH.W  R0, R1
003799 8915           14354         MOV.W   R1,R5
00379B 8904           14355         MOV.W   R0,R4
                      14356         CALL    _sprintf
00379D C4rrrrrr       +14356 ;       FCALL   _sprintf
0037A1 A976           14357         ADDS.W  R7,#06H
                      14359 ; rs232cmd.c 4030                                       rs232puts( buffer);
0037A3 8915           14361         MOV.W   R1,R5
0037A5 8904           14362         MOV.W   R0,R4
                      14363         CALL    _rs232puts
0037A7 C4rrrrrr       +14363 ;       FCALL   _rs232puts
                      14364 ; rs232cmd.c 4031                               }
                      14365 ; rs232cmd.c 4032                       }
0037AB FE06           14367         BR      _1019
0037AB FE0600         14367         BR      _1019
0037AE                14368 _1015:
                      14369 ; rs232cmd.c 4033                       else
                      14370 ; rs232cmd.c 4034                               SCPIError = SyntaxErr;
0037AE 964842rr       14372         MOV.B   ES,#SEG( _SCPIError )
0037B2 9908rrrr       14373         MOV.W   R0,#SOF( _SCPIError )
0037B6 BA03           14374         MOV.W   [R0],#03H
                      14375 ; rs232cmd.c 4035               }
0037B8                14377 _1019:
                      14378 ; rs232cmd.c 4036       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 234

ADDR   CODE            LINE SOURCELINE
0037B8 9970001E       14380         ADD.W   R7,#01EH
0037BC 2F30           14382         POP.W   R4, R5
0037BE D680           14384         RET
                      14386 ; rs232cmd.c 4037       
                      14387 ; rs232cmd.c 4038       /************************************************************************
                            **/
                      14388 ; rs232cmd.c 4039       /* FactChecksumPLD                                                       
                                                                                                                             
                                         RS232CMD.C */
                      14389 ; rs232cmd.c 4040       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14390 ; rs232cmd.c 4041       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14391 ; rs232cmd.c 4042       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14392 ; rs232cmd.c 4043       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14393 ; rs232cmd.c 4044       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14394 ; rs232cmd.c 4045       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14395 ; rs232cmd.c 4046       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14396 ; rs232cmd.c 4047       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14397 ; rs232cmd.c 4048       /************************************************************************
                            **/
                      14398 ; rs232cmd.c 4049       void FactChecksumPLD( void)
                      14399 ; rs232cmd.c 4050       {
                      14400         ALIGN   1
                      14402         PUBLIC  _FactChecksumPLD
0037C0                14403 _FactChecksumPLD:
0037C0 0F30           14407         PUSH.W  R4, R5
0037C2 9972001E       14409         SUB.W   R7,#01EH
                      14412 ; rs232cmd.c 4051               char buffer[30];
                      14413 ; rs232cmd.c 4052       
                      14414 ; rs232cmd.c 4053               if ( CmdExecute && !SCPIError)
0037C6 964842rr       14416         MOV.B   ES,#SEG( _CmdExecute )
0037CA 9908rrrr       14417         MOV.W   R0,#SOF( _CmdExecute )
0037CE 8200           14418         MOV.B   R0L,[R0]
0037D0 F338           14419         BEQ     _1025
0037D2 964842rr       14420         MOV.B   ES,#SEG( _SCPIError )
0037D6 9908rrrr       14421         MOV.W   R0,#SOF( _SCPIError )
0037DA 8A00           14422         MOV.W   R0,[R0]
0037DC F232           14423         BNE     _1025
                      14424 ; rs232cmd.c 4054               {
                      14425 ; rs232cmd.c 4055                       if ( CmdRequest)
0037DE 964842rr       14427         MOV.B   ES,#SEG( _CmdRequest )
0037E2 9908rrrr       14428         MOV.W   R0,#SOF( _CmdRequest )
0037E6 8200           14429         MOV.B   R0L,[R0]
0037E8 F327           14430         BEQ     _1021
                      14431 ; rs232cmd.c 4056                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 235

ADDR   CODE            LINE SOURCELINE
                      14432 ; rs232cmd.c 4057                               if ( ParCnt)
0037EA 964842rr       14434         MOV.B   ES,#SEG( _ParCnt )
0037EE 9908rrrr       14435         MOV.W   R0,#SOF( _ParCnt )
0037F2 8200           14436         MOV.B   R0L,[R0]
0037F4 F306           14437         BEQ     _1020
                      14438 ; rs232cmd.c 4058                                       SCPIError = SyntaxErr;
0037F6 964842rr       14440         MOV.B   ES,#SEG( _SCPIError )
0037FA 9908rrrr       14441         MOV.W   R0,#SOF( _SCPIError )
0037FE BA03           14442         MOV.W   [R0],#03H
003800 FE20           14443         BR      _1025
003800 FE20           14443         BR      _1025
003802                14444 _1020:
                      14445 ; rs232cmd.c 4059                               else
                      14446 ; rs232cmd.c 4060                               {               
                      14447 ; rs232cmd.c 4061                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPLDCode, StartOfPLDCode+SizeOfPLDCode-1));
003802 B914           14449         MOV.W   R1,#04H
003804 B900           14450         MOV.W   R0,#00H
003806 B934           14451         MOV.W   R3,#04H
003808 99289FFF       14452         MOV.W   R2,#09FFFH
                      14453         CALL    _ROMChecksum
00380C C4rrrrrr       +14453 ;       FCALL   _ROMChecksum
003810 91A8rr         14454         MOV.B   R5L,#SEG( __lc_bs )
003813 71BB           14455         XOR.B   R5H,R5H
003815 8947           14456         MOV.W   R4,R7
003817 0F01           14457         PUSH.W  R0
003819 9918rrrr       14459         MOV.W   R1,#SEG( _1013 )
00381D 9908rrrr       14460         MOV.W   R0,#SOF( _1013 )
003821 0F03           14461         PUSH.W  R0, R1
003823 8915           14463         MOV.W   R1,R5
003825 8904           14464         MOV.W   R0,R4
                      14465         CALL    _sprintf
003827 C4rrrrrr       +14465 ;       FCALL   _sprintf
00382B A976           14466         ADDS.W  R7,#06H
                      14468 ; rs232cmd.c 4062                                       rs232puts( buffer);
00382D 8915           14470         MOV.W   R1,R5
00382F 8904           14471         MOV.W   R0,R4
                      14472         CALL    _rs232puts
003831 C4rrrrrr       +14472 ;       FCALL   _rs232puts
                      14473 ; rs232cmd.c 4063                               }
                      14474 ; rs232cmd.c 4064                       }
003835 FE06           14476         BR      _1025
003835 FE0600         14476         BR      _1025
003838                14477 _1021:
                      14478 ; rs232cmd.c 4065                       else
                      14479 ; rs232cmd.c 4066                               SCPIError = SyntaxErr;
003838 964842rr       14481         MOV.B   ES,#SEG( _SCPIError )
00383C 9908rrrr       14482         MOV.W   R0,#SOF( _SCPIError )
003840 BA03           14483         MOV.W   [R0],#03H
                      14484 ; rs232cmd.c 4067               }
003842                14486 _1025:
                      14487 ; rs232cmd.c 4068       }
003842 9970001E       14489         ADD.W   R7,#01EH
003846 2F30           14491         POP.W   R4, R5
003848 D680           14493         RET
                      14495 ; rs232cmd.c 4069       
                      14496 ; rs232cmd.c 4070       /************************************************************************
                            **/
                      14497 ; rs232cmd.c 4071       /* FactChecksumEmbAudio                                                  
                                                                                                                         RS23
                            2CMD.C  */
                      14498 ; rs232cmd.c 4072       /*                                                                       
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 236

ADDR   CODE            LINE SOURCELINE
                                                                                                                             
                                                    */
                      14499 ; rs232cmd.c 4073       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14500 ; rs232cmd.c 4074       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14501 ; rs232cmd.c 4075       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14502 ; rs232cmd.c 4076       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14503 ; rs232cmd.c 4077       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14504 ; rs232cmd.c 4078       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14505 ; rs232cmd.c 4079       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14506 ; rs232cmd.c 4080       /************************************************************************
                            **/
                      14507 ; rs232cmd.c 4081       void FactChecksumEmbAudio( void)
                      14508 ; rs232cmd.c 4082       {
                      14509         ALIGN   1
                      14511         PUBLIC  _FactChecksumEmbAudio
00384A                14512 _FactChecksumEmbAudio:
00384A 0F30           14516         PUSH.W  R4, R5
00384C 9972001E       14518         SUB.W   R7,#01EH
                      14521 ; rs232cmd.c 4083               char buffer[30];
                      14522 ; rs232cmd.c 4084       
                      14523 ; rs232cmd.c 4085               if ( CmdExecute && !SCPIError)
003850 964842rr       14525         MOV.B   ES,#SEG( _CmdExecute )
003854 9908rrrr       14526         MOV.W   R0,#SOF( _CmdExecute )
003858 8200           14527         MOV.B   R0L,[R0]
00385A F339           14528         BEQ     _1031
00385C 964842rr       14529         MOV.B   ES,#SEG( _SCPIError )
003860 9908rrrr       14530         MOV.W   R0,#SOF( _SCPIError )
003864 8A00           14531         MOV.W   R0,[R0]
003866 F233           14532         BNE     _1031
                      14533 ; rs232cmd.c 4086               {
                      14534 ; rs232cmd.c 4087                       if ( CmdRequest)
003868 964842rr       14536         MOV.B   ES,#SEG( _CmdRequest )
00386C 9908rrrr       14537         MOV.W   R0,#SOF( _CmdRequest )
003870 8200           14538         MOV.B   R0L,[R0]
003872 F328           14539         BEQ     _1027
                      14540 ; rs232cmd.c 4088                       {
                      14541 ; rs232cmd.c 4089                               if ( ParCnt)
003874 964842rr       14543         MOV.B   ES,#SEG( _ParCnt )
003878 9908rrrr       14544         MOV.W   R0,#SOF( _ParCnt )
00387C 8200           14545         MOV.B   R0L,[R0]
00387E F306           14546         BEQ     _1026
                      14547 ; rs232cmd.c 4090                                       SCPIError = SyntaxErr;
003880 964842rr       14549         MOV.B   ES,#SEG( _SCPIError )
003884 9908rrrr       14550         MOV.W   R0,#SOF( _SCPIError )
003888 BA03           14551         MOV.W   [R0],#03H
00388A FE21           14552         BR      _1031
00388A FE21           14552         BR      _1031
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 237

ADDR   CODE            LINE SOURCELINE
00388C                14553 _1026:
                      14554 ; rs232cmd.c 4091                               else
                      14555 ; rs232cmd.c 4092                               {               
                      14556 ; rs232cmd.c 4093                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfEmbAudioCode, StartOfEmbAudioCode+SizeOfEmbAudioCode-1));
00388C B914           14558         MOV.W   R1,#04H
00388E 9908A000       14559         MOV.W   R0,#0A000H
003892 B934           14560         MOV.W   R3,#04H
003894 9928C3FF       14561         MOV.W   R2,#0C3FFH
                      14562         CALL    _ROMChecksum
003898 C4rrrrrr       +14562 ;       FCALL   _ROMChecksum
00389C 91A8rr         14563         MOV.B   R5L,#SEG( __lc_bs )
00389F 71BB           14564         XOR.B   R5H,R5H
0038A1 8947           14565         MOV.W   R4,R7
0038A3 0F01           14566         PUSH.W  R0
0038A5 9918rrrr       14568         MOV.W   R1,#SEG( _1013 )
0038A9 9908rrrr       14569         MOV.W   R0,#SOF( _1013 )
0038AD 0F03           14570         PUSH.W  R0, R1
0038AF 8915           14572         MOV.W   R1,R5
0038B1 8904           14573         MOV.W   R0,R4
                      14574         CALL    _sprintf
0038B3 C4rrrrrr       +14574 ;       FCALL   _sprintf
0038B7 A976           14575         ADDS.W  R7,#06H
                      14577 ; rs232cmd.c 4094                                       rs232puts( buffer);
0038B9 8915           14579         MOV.W   R1,R5
0038BB 8904           14580         MOV.W   R0,R4
                      14581         CALL    _rs232puts
0038BD C4rrrrrr       +14581 ;       FCALL   _rs232puts
                      14582 ; rs232cmd.c 4095                               }
                      14583 ; rs232cmd.c 4096                       }
0038C1 FE06           14585         BR      _1031
0038C1 FE0600         14585         BR      _1031
0038C4                14586 _1027:
                      14587 ; rs232cmd.c 4097                       else
                      14588 ; rs232cmd.c 4098                               SCPIError = SyntaxErr;
0038C4 964842rr       14590         MOV.B   ES,#SEG( _SCPIError )
0038C8 9908rrrr       14591         MOV.W   R0,#SOF( _SCPIError )
0038CC BA03           14592         MOV.W   [R0],#03H
                      14593 ; rs232cmd.c 4099               }
0038CE                14595 _1031:
                      14596 ; rs232cmd.c 4100       }
0038CE 9970001E       14598         ADD.W   R7,#01EH
0038D2 2F30           14600         POP.W   R4, R5
0038D4 D680           14602         RET
                      14604 ; rs232cmd.c 4101       
                      14605 ; rs232cmd.c 4102       /************************************************************************
                            **/
                      14606 ; rs232cmd.c 4103       /* FactChecksumPattern                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      14607 ; rs232cmd.c 4104       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14608 ; rs232cmd.c 4105       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14609 ; rs232cmd.c 4106       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14610 ; rs232cmd.c 4107       /*                                                                       
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 238

ADDR   CODE            LINE SOURCELINE
                                                    */
                      14611 ; rs232cmd.c 4108       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14612 ; rs232cmd.c 4109       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14613 ; rs232cmd.c 4110       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14614 ; rs232cmd.c 4111       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14615 ; rs232cmd.c 4112       /************************************************************************
                            **/
                      14616 ; rs232cmd.c 4113       void FactChecksumPattern( void)
                      14617 ; rs232cmd.c 4114       {
                      14618         ALIGN   1
                      14620         PUBLIC  _FactChecksumPattern
0038D6                14621 _FactChecksumPattern:
0038D6 0F30           14625         PUSH.W  R4, R5
0038D8 9972001E       14627         SUB.W   R7,#01EH
                      14630 ; rs232cmd.c 4115               char buffer[30];
                      14631 ; rs232cmd.c 4116       
                      14632 ; rs232cmd.c 4117               if ( CmdExecute && !SCPIError)
0038DC 964842rr       14634         MOV.B   ES,#SEG( _CmdExecute )
0038E0 9908rrrr       14635         MOV.W   R0,#SOF( _CmdExecute )
0038E4 8200           14636         MOV.B   R0L,[R0]
0038E6 F338           14637         BEQ     _1037
0038E8 964842rr       14638         MOV.B   ES,#SEG( _SCPIError )
0038EC 9908rrrr       14639         MOV.W   R0,#SOF( _SCPIError )
0038F0 8A00           14640         MOV.W   R0,[R0]
0038F2 F232           14641         BNE     _1037
                      14642 ; rs232cmd.c 4118               {
                      14643 ; rs232cmd.c 4119                       if ( CmdRequest)
0038F4 964842rr       14645         MOV.B   ES,#SEG( _CmdRequest )
0038F8 9908rrrr       14646         MOV.W   R0,#SOF( _CmdRequest )
0038FC 8200           14647         MOV.B   R0L,[R0]
0038FE F327           14648         BEQ     _1033
                      14649 ; rs232cmd.c 4120                       {
                      14650 ; rs232cmd.c 4121                               if ( ParCnt)
003900 964842rr       14652         MOV.B   ES,#SEG( _ParCnt )
003904 9908rrrr       14653         MOV.W   R0,#SOF( _ParCnt )
003908 8200           14654         MOV.B   R0L,[R0]
00390A F306           14655         BEQ     _1032
                      14656 ; rs232cmd.c 4122                                       SCPIError = SyntaxErr;
00390C 964842rr       14658         MOV.B   ES,#SEG( _SCPIError )
003910 9908rrrr       14659         MOV.W   R0,#SOF( _SCPIError )
003914 BA03           14660         MOV.W   [R0],#03H
003916 FE20           14661         BR      _1037
003916 FE20           14661         BR      _1037
003918                14662 _1032:
                      14663 ; rs232cmd.c 4123                               else
                      14664 ; rs232cmd.c 4124                               {               
                      14665 ; rs232cmd.c 4125                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfCBVideoCode, StartOfCBVideoCode+SizeOfCBVideoCode-1));
003918 B915           14667         MOV.W   R1,#05H
00391A B900           14668         MOV.W   R0,#00H
00391C B937           14669         MOV.W   R3,#07H
00391E 9928FFFF       14670         MOV.W   R2,#0FFFFH
                      14671         CALL    _ROMChecksum
003922 C4rrrrrr       +14671 ;       FCALL   _ROMChecksum
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 239

ADDR   CODE            LINE SOURCELINE
003926 91A8rr         14672         MOV.B   R5L,#SEG( __lc_bs )
003929 71BB           14673         XOR.B   R5H,R5H
00392B 8947           14674         MOV.W   R4,R7
00392D 0F01           14675         PUSH.W  R0
00392F 9918rrrr       14677         MOV.W   R1,#SEG( _1013 )
003933 9908rrrr       14678         MOV.W   R0,#SOF( _1013 )
003937 0F03           14679         PUSH.W  R0, R1
003939 8915           14681         MOV.W   R1,R5
00393B 8904           14682         MOV.W   R0,R4
                      14683         CALL    _sprintf
00393D C4rrrrrr       +14683 ;       FCALL   _sprintf
003941 A976           14684         ADDS.W  R7,#06H
                      14686 ; rs232cmd.c 4126                                       rs232puts( buffer);
003943 8915           14688         MOV.W   R1,R5
003945 8904           14689         MOV.W   R0,R4
                      14690         CALL    _rs232puts
003947 C4rrrrrr       +14690 ;       FCALL   _rs232puts
                      14691 ; rs232cmd.c 4127                               }
                      14692 ; rs232cmd.c 4128                       }
00394B FE06           14694         BR      _1037
00394B FE0600         14694         BR      _1037
00394E                14695 _1033:
                      14696 ; rs232cmd.c 4129                       else
                      14697 ; rs232cmd.c 4130                               SCPIError = SyntaxErr;
00394E 964842rr       14699         MOV.B   ES,#SEG( _SCPIError )
003952 9908rrrr       14700         MOV.W   R0,#SOF( _SCPIError )
003956 BA03           14701         MOV.W   [R0],#03H
                      14702 ; rs232cmd.c 4131               }
003958                14704 _1037:
                      14705 ; rs232cmd.c 4132       }
003958 9970001E       14707         ADD.W   R7,#01EH
00395C 2F30           14709         POP.W   R4, R5
00395E D680           14711         RET
                      14713 ; rs232cmd.c 4133       
                      14714 ; rs232cmd.c 4134       /************************************************************************
                            **/
                      14715 ; rs232cmd.c 4135       /* FactChecksumRange                                                     
                                                                                                                             
                                RS232CMD.C  */
                      14716 ; rs232cmd.c 4136       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14717 ; rs232cmd.c 4137       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                    */
                      14718 ; rs232cmd.c 4138       /* Revised:       000705                                                 
                                                                                                                             
                                                                                    */
                      14719 ; rs232cmd.c 4139       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14720 ; rs232cmd.c 4140       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14721 ; rs232cmd.c 4141       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14722 ; rs232cmd.c 4142       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 240

ADDR   CODE            LINE SOURCELINE
                      14723 ; rs232cmd.c 4143       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14724 ; rs232cmd.c 4144       /************************************************************************
                            **/
                      14725 ; rs232cmd.c 4145       void FactChecksumRange( void)
                      14726 ; rs232cmd.c 4146       {
                      14727         ALIGN   1
                      14729         PUBLIC  _FactChecksumRange
003960                14730 _FactChecksumRange:
003960 0F30           14734         PUSH.W  R4, R5
003962 99720026       14736         SUB.W   R7,#026H
                      14741 ; rs232cmd.c 4147               UL StartAddr, EndAddr;
                      14742 ; rs232cmd.c 4148       
                      14743 ; rs232cmd.c 4149               char buffer[30];
                      14744 ; rs232cmd.c 4150       
                      14745 ; rs232cmd.c 4151               if ( CmdExecute && !SCPIError)
003966 964842rr       14747         MOV.B   ES,#SEG( _CmdExecute )
00396A 9908rrrr       14748         MOV.W   R0,#SOF( _CmdExecute )
00396E 8200           14749         MOV.B   R0L,[R0]
003970 F354           14750         BEQ     _1045
003972 964842rr       14751         MOV.B   ES,#SEG( _SCPIError )
003976 9908rrrr       14752         MOV.W   R0,#SOF( _SCPIError )
00397A 8A00           14753         MOV.W   R0,[R0]
00397C F24E           14754         BNE     _1045
                      14755 ; rs232cmd.c 4152               {
                      14756 ; rs232cmd.c 4153                       if ( CmdRequest)
00397E 964842rr       14758         MOV.B   ES,#SEG( _CmdRequest )
003982 9908rrrr       14759         MOV.W   R0,#SOF( _CmdRequest )
003986 8200           14760         MOV.B   R0L,[R0]
003988 F343           14761         BEQ     _1041
                      14762 ; rs232cmd.c 4154                       {
                      14763 ; rs232cmd.c 4155                               if (( ParCnt != 2) || (( sscanf( Cmd, "%lu,%lu", 
                            &StartAddr, &EndAddr)) != 2))
00398A 964842rr       14765         MOV.B   ES,#SEG( _ParCnt )
00398E 9908rrrr       14766         MOV.W   R0,#SOF( _ParCnt )
003992 8200           14767         MOV.B   R0L,[R0]
003994 910402         14768         CMP.B   R0L,#02H
003997 F21A           14769         BNE     _1039
003999 9918rrrr       14770         MOV.W   R1,#SEG( _Cmd )
00399D 9908rrrr       14771         MOV.W   R0,#SOF( _Cmd )
0039A1 9168rr         14772         MOV.B   R3L,#SEG( __lc_bs )
0039A4 7177           14773         XOR.B   R3H,R3H
0039A6 8927           14774         MOV.W   R2,R7
0039A8 91A8rr         14775         MOV.B   R5L,#SEG( __lc_bs )
0039AB 71BB           14776         XOR.B   R5H,R5H
0039AD 404704         14777         LEA     R4,R7+4
0039B0 0F30           14778         PUSH.W  R4, R5
0039B2 0F0C           14780         PUSH.W  R2, R3
0039B4 9938rrrr       14782         MOV.W   R3,#SEG( _1038 )
0039B8 9928rrrr       14783         MOV.W   R2,#SOF( _1038 )
0039BC 0F0C           14784         PUSH.W  R2, R3
                      14786         CALL    _sscanf
0039BE C4rrrrrr       +14786 ;       FCALL   _sscanf
0039C2 9970000C       14787         ADD.W   R7,#0CH
0039C6 99040002       14789         CMP.W   R0,#02H
0039CA F306           14790         BEQ     _1040
0039CA F306           14790         BEQ     _1040
0039CC                14791 _1039:
                      14792 ; rs232cmd.c 4156                                       SCPIError = SyntaxErr;
0039CC 964842rr       14794         MOV.B   ES,#SEG( _SCPIError )
0039D0 9908rrrr       14795         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 241

ADDR   CODE            LINE SOURCELINE
0039D4 BA03           14796         MOV.W   [R0],#03H
0039D6 FE21           14797         BR      _1045
0039D6 FE21           14797         BR      _1045
0039D8                14798 _1040:
                      14799 ; rs232cmd.c 4157                               else
                      14800 ; rs232cmd.c 4158                               {
                      14801 ; rs232cmd.c 4159                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtAddr, EndAddr));
0039D8 8C1702         14803         MOV.W   R1,[R7+2]
0039DB 8A07           14804         MOV.W   R0,[R7]
0039DD 8C3706         14805         MOV.W   R3,[R7+6]
0039E0 8C2704         14806         MOV.W   R2,[R7+4]
                      14807         CALL    _ROMChecksum
0039E3 C4rrrrrr       +14807 ;       FCALL   _ROMChecksum
0039E7 91A8rr         14808         MOV.B   R5L,#SEG( __lc_bs )
0039EA 71BB           14809         XOR.B   R5H,R5H
0039EC 404708         14810         LEA     R4,R7+8
0039EF 0F01           14811         PUSH.W  R0
0039F1 9918rrrr       14813         MOV.W   R1,#SEG( _1013 )
0039F5 9908rrrr       14814         MOV.W   R0,#SOF( _1013 )
0039F9 0F03           14815         PUSH.W  R0, R1
0039FB 8915           14817         MOV.W   R1,R5
0039FD 8904           14818         MOV.W   R0,R4
                      14819         CALL    _sprintf
0039FF C4rrrrrr       +14819 ;       FCALL   _sprintf
003A03 A976           14820         ADDS.W  R7,#06H
                      14822 ; rs232cmd.c 4160                                       rs232puts( buffer);
003A05 8915           14824         MOV.W   R1,R5
003A07 8904           14825         MOV.W   R0,R4
                      14826         CALL    _rs232puts
003A09 C4rrrrrr       +14826 ;       FCALL   _rs232puts
                      14827 ; rs232cmd.c 4161                               }
                      14828 ; rs232cmd.c 4162                       }
003A0D FE06           14830         BR      _1045
003A0D FE0600         14830         BR      _1045
003A10                14831 _1041:
                      14832 ; rs232cmd.c 4163                       else
                      14833 ; rs232cmd.c 4164                               SCPIError = SyntaxErr;
003A10 964842rr       14835         MOV.B   ES,#SEG( _SCPIError )
003A14 9908rrrr       14836         MOV.W   R0,#SOF( _SCPIError )
003A18 BA03           14837         MOV.W   [R0],#03H
                      14838 ; rs232cmd.c 4165               }
003A1A                14840 _1045:
                      14841 ; rs232cmd.c 4166       }
003A1A 99700026       14843         ADD.W   R7,#026H
003A1E 2F30           14845         POP.W   R4, R5
003A20 D680           14847         RET
                      14849 ; rs232cmd.c 4167       
                      14850 ; rs232cmd.c 4168       /************************************************************************
                            **/
                      14851 ; rs232cmd.c 4169       /* FactMainVersion                                                       
                                                                                                                             
                                         RS232CMD.C */
                      14852 ; rs232cmd.c 4170       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14853 ; rs232cmd.c 4171       /* Author:              Kim Engedahl, DEV, 000620                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 242

ADDR   CODE            LINE SOURCELINE
                      14854 ; rs232cmd.c 4172       /* Revised:       000620                                                 
                                                                                                                             
                                                                                    */
                      14855 ; rs232cmd.c 4173       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14856 ; rs232cmd.c 4174       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14857 ; rs232cmd.c 4175       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      14858 ; rs232cmd.c 4176       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14859 ; rs232cmd.c 4177       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14860 ; rs232cmd.c 4178       /************************************************************************
                            **/
                      14861 ; rs232cmd.c 4179       void FactMainVersion( void)
                      14862 ; rs232cmd.c 4180       {
                      14863         ALIGN   1
                      14865         PUBLIC  _FactMainVersion
003A22                14866 _FactMainVersion:
003A22 0F30           14870         PUSH.W  R4, R5
003A24 99720014       14872         SUB.W   R7,#014H
                      14875 ; rs232cmd.c 4181               char buffer[20];
                      14876 ; rs232cmd.c 4182       
                      14877 ; rs232cmd.c 4183               if ( CmdExecute && !SCPIError)
003A28 964842rr       14879         MOV.B   ES,#SEG( _CmdExecute )
003A2C 9908rrrr       14880         MOV.W   R0,#SOF( _CmdExecute )
003A30 8200           14881         MOV.B   R0L,[R0]
003A32 F333           14882         BEQ     _1053
003A34 964842rr       14883         MOV.B   ES,#SEG( _SCPIError )
003A38 9908rrrr       14884         MOV.W   R0,#SOF( _SCPIError )
003A3C 8A00           14885         MOV.W   R0,[R0]
003A3E F22D           14886         BNE     _1053
                      14887 ; rs232cmd.c 4184               {
                      14888 ; rs232cmd.c 4185                       if ( CmdRequest)
003A40 964842rr       14890         MOV.B   ES,#SEG( _CmdRequest )
003A44 9908rrrr       14891         MOV.W   R0,#SOF( _CmdRequest )
003A48 8200           14892         MOV.B   R0L,[R0]
003A4A F322           14893         BEQ     _1049
                      14894 ; rs232cmd.c 4186                       {
                      14895 ; rs232cmd.c 4187                               if ( ParCnt)
003A4C 964842rr       14897         MOV.B   ES,#SEG( _ParCnt )
003A50 9908rrrr       14898         MOV.W   R0,#SOF( _ParCnt )
003A54 8200           14899         MOV.B   R0L,[R0]
003A56 F306           14900         BEQ     _1048
                      14901 ; rs232cmd.c 4188                                       SCPIError = SyntaxErr;
003A58 964842rr       14903         MOV.B   ES,#SEG( _SCPIError )
003A5C 9908rrrr       14904         MOV.W   R0,#SOF( _SCPIError )
003A60 BA03           14905         MOV.W   [R0],#03H
003A62 FE1B           14906         BR      _1053
003A62 FE1B           14906         BR      _1053
003A64                14907 _1048:
                      14908 ; rs232cmd.c 4189                               else
                      14909 ; rs232cmd.c 4190                               {
                      14910 ; rs232cmd.c 4191                                       sprintf( buffer, "%u\n", MasterSWVersion)
                            ;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 243

ADDR   CODE            LINE SOURCELINE
003A64 91A8rr         14912         MOV.B   R5L,#SEG( __lc_bs )
003A67 71BB           14913         XOR.B   R5H,R5H
003A69 8947           14914         MOV.W   R4,R7
003A6B 99080017       14915         MOV.W   R0,#017H
003A6F 0F01           14916         PUSH.W  R0
003A71 9918rrrr       14918         MOV.W   R1,#SEG( _1013 )
003A75 9908rrrr       14919         MOV.W   R0,#SOF( _1013 )
003A79 0F03           14920         PUSH.W  R0, R1
003A7B 8915           14922         MOV.W   R1,R5
003A7D 8904           14923         MOV.W   R0,R4
                      14924         CALL    _sprintf
003A7F C4rrrrrr       +14924 ;       FCALL   _sprintf
003A83 A976           14925         ADDS.W  R7,#06H
                      14927 ; rs232cmd.c 4192                                       rs232puts( buffer);
003A85 8915           14929         MOV.W   R1,R5
003A87 8904           14930         MOV.W   R0,R4
                      14931         CALL    _rs232puts
003A89 C4rrrrrr       +14931 ;       FCALL   _rs232puts
                      14932 ; rs232cmd.c 4193                               }
                      14933 ; rs232cmd.c 4194                       }
003A8D FE06           14935         BR      _1053
003A8D FE0600         14935         BR      _1053
003A90                14936 _1049:
                      14937 ; rs232cmd.c 4195                       else
                      14938 ; rs232cmd.c 4196                               SCPIError = SyntaxErr;
003A90 964842rr       14940         MOV.B   ES,#SEG( _SCPIError )
003A94 9908rrrr       14941         MOV.W   R0,#SOF( _SCPIError )
003A98 BA03           14942         MOV.W   [R0],#03H
                      14943 ; rs232cmd.c 4197               }
003A9A                14945 _1053:
                      14946 ; rs232cmd.c 4198       }
003A9A 99700014       14948         ADD.W   R7,#014H
003A9E 2F30           14950         POP.W   R4, R5
003AA0 D680           14952         RET
                      14954 ; rs232cmd.c 4199       
                      14955 ; rs232cmd.c 4200       /************************************************************************
                            **/
                      14956 ; rs232cmd.c 4201       /* FactMainIDNCompany                                                    
                                                                                                                             
                                RS232CMD.C  */
                      14957 ; rs232cmd.c 4202       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14958 ; rs232cmd.c 4203       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      14959 ; rs232cmd.c 4204       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      14960 ; rs232cmd.c 4205       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      14961 ; rs232cmd.c 4206       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      14962 ; rs232cmd.c 4207       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 244

ADDR   CODE            LINE SOURCELINE
                      14963 ; rs232cmd.c 4208       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      14964 ; rs232cmd.c 4209       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      14965 ; rs232cmd.c 4210       /************************************************************************
                            **/
                      14966 ; rs232cmd.c 4211       void FactMainIDNCompany( void)
                      14967 ; rs232cmd.c 4212       {
                      14968         ALIGN   1
                      14970         PUBLIC  _FactMainIDNCompany
003AA2                14971 _FactMainIDNCompany:
003AA2 0F70           14975         PUSH.W  R4, R5, R6
003AA4 99720022       14977         SUB.W   R7,#022H
                      14980 ; rs232cmd.c 4213               char Company[33];
                      14981 ; rs232cmd.c 4214       
                      14982 ; rs232cmd.c 4215               if ( CmdExecute && !SCPIError)
003AA8 964842rr       14984         MOV.B   ES,#SEG( _CmdExecute )
003AAC 9908rrrr       14985         MOV.W   R0,#SOF( _CmdExecute )
003AB0 8200           14986         MOV.B   R0L,[R0]
003AB2 F364           14987         BEQ     _1064
003AB4 964842rr       14988         MOV.B   ES,#SEG( _SCPIError )
003AB8 9908rrrr       14989         MOV.W   R0,#SOF( _SCPIError )
003ABC 8A00           14990         MOV.W   R0,[R0]
003ABE F25E           14991         BNE     _1064
                      14992 ; rs232cmd.c 4216               {
                      14993 ; rs232cmd.c 4217                       if ( CmdRequest)
003AC0 964842rr       14995         MOV.B   ES,#SEG( _CmdRequest )
003AC4 9908rrrr       14996         MOV.W   R0,#SOF( _CmdRequest )
003AC8 8200           14997         MOV.B   R0L,[R0]
003ACA F317           14998         BEQ     _1056
                      14999 ; rs232cmd.c 4218                       {
                      15000 ; rs232cmd.c 4219                               if ( ParCnt)
003ACC 964842rr       15002         MOV.B   ES,#SEG( _ParCnt )
003AD0 9908rrrr       15003         MOV.W   R0,#SOF( _ParCnt )
003AD4 8200           15004         MOV.B   R0L,[R0]
003AD6 F306           15005         BEQ     _1055
                      15006 ; rs232cmd.c 4220                                       SCPIError = SyntaxErr;
003AD8 964842rr       15008         MOV.B   ES,#SEG( _SCPIError )
003ADC 9908rrrr       15009         MOV.W   R0,#SOF( _SCPIError )
003AE0 BA03           15010         MOV.W   [R0],#03H
003AE2 FE4C           15011         BR      _1064
003AE2 FE4C           15011         BR      _1064
003AE4                15012 _1055:
                      15013 ; rs232cmd.c 4221                               else
                      15014 ; rs232cmd.c 4222                               {
                      15015 ; rs232cmd.c 4223                                       rs232puts( Calibration.Company);
003AE4 9918rrrr       15017         MOV.W   R1,#SEG( _Calibration )
003AE8 9908rrrr       15018         MOV.W   R0,#SOF( _Calibration )
                      15019         CALL    _rs232puts
003AEC C4rrrrrr       +15019 ;       FCALL   _rs232puts
                      15020 ; rs232cmd.c 4224                                       rs232putchar( '\n');
003AF0 91080A         15022         MOV.B   R0L,#0AH
                      15023         CALL    _rs232putchar
003AF3 C4rrrrrr       +15023 ;       FCALL   _rs232putchar
                      15024 ; rs232cmd.c 4225                               }
                      15025 ; rs232cmd.c 4226                       }
003AF7 FE42           15027         BR      _1064
003AF7 FE4200         15027         BR      _1064
003AFA                15028 _1056:
                      15029 ; rs232cmd.c 4227                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 245

ADDR   CODE            LINE SOURCELINE
                      15030 ; rs232cmd.c 4228                       {
                      15031 ; rs232cmd.c 4229                               if ( !PasswordProtected)
003AFA 964842rr       15033         MOV.B   ES,#SEG( _PasswordProtected )
003AFE 9908rrrr       15034         MOV.W   R0,#SOF( _PasswordProtected )
003B02 8A00           15035         MOV.W   R0,[R0]
003B04 F23B           15036         BNE     _1064
                      15037 ; rs232cmd.c 4230                               {
                      15038 ; rs232cmd.c 4231                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Company) != 1))
003B06 964842rr       15040         MOV.B   ES,#SEG( _ParCnt )
003B0A 9908rrrr       15041         MOV.W   R0,#SOF( _ParCnt )
003B0E 8200           15042         MOV.B   R0L,[R0]
003B10 910401         15043         CMP.B   R0L,#01H
003B13 F217           15044         BNE     _1057
003B15 9918rrrr       15045         MOV.W   R1,#SEG( _Cmd )
003B19 9908rrrr       15046         MOV.W   R0,#SOF( _Cmd )
003B1D 91A8rr         15047         MOV.B   R5L,#SEG( __lc_bs )
003B20 71BB           15048         XOR.B   R5H,R5H
003B22 8947           15049         MOV.W   R4,R7
003B24 8935           15050         MOV.W   R3,R5
003B26 8924           15051         MOV.W   R2,R4
003B28 0F0C           15052         PUSH.W  R2, R3
003B2A 9938rrrr       15054         MOV.W   R3,#SEG( _1054 )
003B2E 9928rrrr       15055         MOV.W   R2,#SOF( _1054 )
003B32 0F0C           15056         PUSH.W  R2, R3
                      15058         CALL    _sscanf
003B34 C4rrrrrr       +15058 ;       FCALL   _sscanf
003B38 99700008       15059         ADD.W   R7,#08H
003B3C 99040001       15061         CMP.W   R0,#01H
003B40 F306           15062         BEQ     _1058
003B40 F306           15062         BEQ     _1058
003B42                15063 _1057:
                      15064 ; rs232cmd.c 4232                                               SCPIError = SyntaxErr;
003B42 964842rr       15066         MOV.B   ES,#SEG( _SCPIError )
003B46 9908rrrr       15067         MOV.W   R0,#SOF( _SCPIError )
003B4A BA03           15068         MOV.W   [R0],#03H
003B4C FE17           15069         BR      _1064
003B4C FE17           15069         BR      _1064
003B4E                15070 _1058:
                      15071 ; rs232cmd.c 4233                                       else
                      15072 ; rs232cmd.c 4234                                       {
                      15073 ; rs232cmd.c 4235                                               strncpy( Calibration.Company, Com
                            pany, 32);
003B4E 99680020       15075         MOV.W   R6,#020H
003B52 9918rrrr       15076         MOV.W   R1,#SEG( _Calibration )
003B56 9908rrrr       15077         MOV.W   R0,#SOF( _Calibration )
003B5A 8935           15078         MOV.W   R3,R5
003B5C 8924           15079         MOV.W   R2,R4
                      15080         CALL    _strncpy
003B5E C4rrrrrr       +15080 ;       FCALL   _strncpy
                      15081 ; rs232cmd.c 4236       
                      15082 ; rs232cmd.c 4237                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003B62 964842rr       15084         MOV.B   ES,#SEG( _CalibrationPtr )
003B66 9928rrrr       15085         MOV.W   R2,#SOF( _CalibrationPtr )
003B6A 8A22           15086         MOV.W   R2,[R2]
003B6C 993800E0       15087         MOV.W   R3,#0E0H
003B70 9918rrrr       15088         MOV.W   R1,#SEG( _Calibration )
003B74 9908rrrr       15089         MOV.W   R0,#SOF( _Calibration )
                      15090         CALL    _NV_Store
003B78 C4rrrrrr       +15090 ;       FCALL   _NV_Store
                      15091 ; rs232cmd.c 4238                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 246

ADDR   CODE            LINE SOURCELINE
                      15092 ; rs232cmd.c 4239                               }
                      15093 ; rs232cmd.c 4240                       }
                      15094 ; rs232cmd.c 4241               }
003B7C                15096 _1064:
                      15097 ; rs232cmd.c 4242       }
003B7C 99700022       15099         ADD.W   R7,#022H
003B80 2F70           15101         POP.W   R4, R5, R6
003B82 D680           15103         RET
                      15105 ; rs232cmd.c 4243       
                      15106 ; rs232cmd.c 4244       /************************************************************************
                            **/
                      15107 ; rs232cmd.c 4245       /* FactMainIDNType                                                       
                                                                                                                             
                                         RS232CMD.C */
                      15108 ; rs232cmd.c 4246       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15109 ; rs232cmd.c 4247       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15110 ; rs232cmd.c 4248       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      15111 ; rs232cmd.c 4249       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15112 ; rs232cmd.c 4250       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15113 ; rs232cmd.c 4251       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15114 ; rs232cmd.c 4252       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15115 ; rs232cmd.c 4253       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15116 ; rs232cmd.c 4254       /************************************************************************
                            **/
                      15117 ; rs232cmd.c 4255       void FactMainIDNType( void)
                      15118 ; rs232cmd.c 4256       {
                      15119         ALIGN   1
                      15121         PUBLIC  _FactMainIDNType
003B84                15122 _FactMainIDNType:
003B84 0F70           15126         PUSH.W  R4, R5, R6
003B86 99720022       15128         SUB.W   R7,#022H
                      15131 ; rs232cmd.c 4257               char Type[33];
                      15132 ; rs232cmd.c 4258       
                      15133 ; rs232cmd.c 4259               if ( CmdExecute && !SCPIError)
003B8A 964842rr       15135         MOV.B   ES,#SEG( _CmdExecute )
003B8E 9908rrrr       15136         MOV.W   R0,#SOF( _CmdExecute )
003B92 8200           15137         MOV.B   R0L,[R0]
003B94 F364           15138         BEQ     _1076
003B96 964842rr       15139         MOV.B   ES,#SEG( _SCPIError )
003B9A 9908rrrr       15140         MOV.W   R0,#SOF( _SCPIError )
003B9E 8A00           15141         MOV.W   R0,[R0]
003BA0 F25E           15142         BNE     _1076
                      15143 ; rs232cmd.c 4260               {
                      15144 ; rs232cmd.c 4261                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 247

ADDR   CODE            LINE SOURCELINE
003BA2 964842rr       15146         MOV.B   ES,#SEG( _CmdRequest )
003BA6 9908rrrr       15147         MOV.W   R0,#SOF( _CmdRequest )
003BAA 8200           15148         MOV.B   R0L,[R0]
003BAC F317           15149         BEQ     _1068
                      15150 ; rs232cmd.c 4262                       {
                      15151 ; rs232cmd.c 4263                               if ( ParCnt)
003BAE 964842rr       15153         MOV.B   ES,#SEG( _ParCnt )
003BB2 9908rrrr       15154         MOV.W   R0,#SOF( _ParCnt )
003BB6 8200           15155         MOV.B   R0L,[R0]
003BB8 F306           15156         BEQ     _1067
                      15157 ; rs232cmd.c 4264                                       SCPIError = SyntaxErr;
003BBA 964842rr       15159         MOV.B   ES,#SEG( _SCPIError )
003BBE 9908rrrr       15160         MOV.W   R0,#SOF( _SCPIError )
003BC2 BA03           15161         MOV.W   [R0],#03H
003BC4 FE4C           15162         BR      _1076
003BC4 FE4C           15162         BR      _1076
003BC6                15163 _1067:
                      15164 ; rs232cmd.c 4265                               else
                      15165 ; rs232cmd.c 4266                               {
                      15166 ; rs232cmd.c 4267                                       rs232puts( Calibration.Type);
003BC6 9918rrrr       15168         MOV.W   R1,#SEG( _Calibration+33 )
003BCA 9908rrrr       15169         MOV.W   R0,#SOF( _Calibration+33 )
                      15170         CALL    _rs232puts
003BCE C4rrrrrr       +15170 ;       FCALL   _rs232puts
                      15171 ; rs232cmd.c 4268                                       rs232putchar( '\n');
003BD2 91080A         15173         MOV.B   R0L,#0AH
                      15174         CALL    _rs232putchar
003BD5 C4rrrrrr       +15174 ;       FCALL   _rs232putchar
                      15175 ; rs232cmd.c 4269                               }
                      15176 ; rs232cmd.c 4270                       }
003BD9 FE42           15178         BR      _1076
003BD9 FE4200         15178         BR      _1076
003BDC                15179 _1068:
                      15180 ; rs232cmd.c 4271                       else
                      15181 ; rs232cmd.c 4272                       {
                      15182 ; rs232cmd.c 4273                               if ( !PasswordProtected)
003BDC 964842rr       15184         MOV.B   ES,#SEG( _PasswordProtected )
003BE0 9908rrrr       15185         MOV.W   R0,#SOF( _PasswordProtected )
003BE4 8A00           15186         MOV.W   R0,[R0]
003BE6 F23B           15187         BNE     _1076
                      15188 ; rs232cmd.c 4274                               {
                      15189 ; rs232cmd.c 4275                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Type) != 1))
003BE8 964842rr       15191         MOV.B   ES,#SEG( _ParCnt )
003BEC 9908rrrr       15192         MOV.W   R0,#SOF( _ParCnt )
003BF0 8200           15193         MOV.B   R0L,[R0]
003BF2 910401         15194         CMP.B   R0L,#01H
003BF5 F217           15195         BNE     _1069
003BF7 9918rrrr       15196         MOV.W   R1,#SEG( _Cmd )
003BFB 9908rrrr       15197         MOV.W   R0,#SOF( _Cmd )
003BFF 91A8rr         15198         MOV.B   R5L,#SEG( __lc_bs )
003C02 71BB           15199         XOR.B   R5H,R5H
003C04 8947           15200         MOV.W   R4,R7
003C06 8935           15201         MOV.W   R3,R5
003C08 8924           15202         MOV.W   R2,R4
003C0A 0F0C           15203         PUSH.W  R2, R3
003C0C 9938rrrr       15205         MOV.W   R3,#SEG( _1054 )
003C10 9928rrrr       15206         MOV.W   R2,#SOF( _1054 )
003C14 0F0C           15207         PUSH.W  R2, R3
                      15209         CALL    _sscanf
003C16 C4rrrrrr       +15209 ;       FCALL   _sscanf
003C1A 99700008       15210         ADD.W   R7,#08H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 248

ADDR   CODE            LINE SOURCELINE
003C1E 99040001       15212         CMP.W   R0,#01H
003C22 F306           15213         BEQ     _1070
003C22 F306           15213         BEQ     _1070
003C24                15214 _1069:
                      15215 ; rs232cmd.c 4276                                               SCPIError = SyntaxErr;
003C24 964842rr       15217         MOV.B   ES,#SEG( _SCPIError )
003C28 9908rrrr       15218         MOV.W   R0,#SOF( _SCPIError )
003C2C BA03           15219         MOV.W   [R0],#03H
003C2E FE17           15220         BR      _1076
003C2E FE17           15220         BR      _1076
003C30                15221 _1070:
                      15222 ; rs232cmd.c 4277                                       else
                      15223 ; rs232cmd.c 4278                                       {
                      15224 ; rs232cmd.c 4279                                               strncpy( Calibration.Type, Type, 
                            32);
003C30 9918rrrr       15226         MOV.W   R1,#SEG( _Calibration+33 )
003C34 9908rrrr       15227         MOV.W   R0,#SOF( _Calibration+33 )
003C38 99680020       15228         MOV.W   R6,#020H
003C3C 8935           15229         MOV.W   R3,R5
003C3E 8924           15230         MOV.W   R2,R4
                      15231         CALL    _strncpy
003C40 C4rrrrrr       +15231 ;       FCALL   _strncpy
                      15232 ; rs232cmd.c 4280       
                      15233 ; rs232cmd.c 4281                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003C44 9918rrrr       15235         MOV.W   R1,#SEG( _Calibration )
003C48 9908rrrr       15236         MOV.W   R0,#SOF( _Calibration )
003C4C 964842rr       15237         MOV.B   ES,#SEG( _CalibrationPtr )
003C50 9928rrrr       15238         MOV.W   R2,#SOF( _CalibrationPtr )
003C54 8A22           15239         MOV.W   R2,[R2]
003C56 993800E0       15240         MOV.W   R3,#0E0H
                      15241         CALL    _NV_Store
003C5A C4rrrrrr       +15241 ;       FCALL   _NV_Store
                      15242 ; rs232cmd.c 4282                                       }
                      15243 ; rs232cmd.c 4283                               }
                      15244 ; rs232cmd.c 4284                       }
                      15245 ; rs232cmd.c 4285               }
003C5E                15247 _1076:
                      15248 ; rs232cmd.c 4286       }
003C5E 99700022       15250         ADD.W   R7,#022H
003C62 2F70           15252         POP.W   R4, R5, R6
003C64 D680           15254         RET
                      15256 ; rs232cmd.c 4287       
                      15257 ; rs232cmd.c 4288       /************************************************************************
                            **/
                      15258 ; rs232cmd.c 4289       /* FactMainIDNNumber                                                     
                                                                                                                         RS23
                            2CMD.C  */
                      15259 ; rs232cmd.c 4290       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15260 ; rs232cmd.c 4291       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15261 ; rs232cmd.c 4292       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      15262 ; rs232cmd.c 4293       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 249

ADDR   CODE            LINE SOURCELINE
                      15263 ; rs232cmd.c 4294       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15264 ; rs232cmd.c 4295       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15265 ; rs232cmd.c 4296       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15266 ; rs232cmd.c 4297       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15267 ; rs232cmd.c 4298       /************************************************************************
                            **/
                      15268 ; rs232cmd.c 4299       void FactMainIDNKUNumber( void)
                      15269 ; rs232cmd.c 4300       {
                      15270         ALIGN   1
                      15272         PUBLIC  _FactMainIDNKUNumber
003C66                15273 _FactMainIDNKUNumber:
003C66 0F70           15277         PUSH.W  R4, R5, R6
003C68 9972000A       15279         SUB.W   R7,#0AH
                      15283 ; rs232cmd.c 4301               char KUNumber[9];
                      15284 ; rs232cmd.c 4302       
                      15285 ; rs232cmd.c 4303               if ( CmdExecute && !SCPIError)
003C6C 964842rr       15287         MOV.B   ES,#SEG( _CmdExecute )
003C70 9908rrrr       15288         MOV.W   R0,#SOF( _CmdExecute )
003C74 8200           15289         MOV.B   R0L,[R0]
003C76 F364           15290         BEQ     _1089
003C78 964842rr       15291         MOV.B   ES,#SEG( _SCPIError )
003C7C 9908rrrr       15292         MOV.W   R0,#SOF( _SCPIError )
003C80 8A00           15293         MOV.W   R0,[R0]
003C82 F25E           15294         BNE     _1089
                      15295 ; rs232cmd.c 4304               {
                      15296 ; rs232cmd.c 4305                       if ( CmdRequest)
003C84 964842rr       15298         MOV.B   ES,#SEG( _CmdRequest )
003C88 9908rrrr       15299         MOV.W   R0,#SOF( _CmdRequest )
003C8C 8200           15300         MOV.B   R0L,[R0]
003C8E F317           15301         BEQ     _1081
                      15302 ; rs232cmd.c 4306                       {
                      15303 ; rs232cmd.c 4307                               if ( ParCnt)
003C90 964842rr       15305         MOV.B   ES,#SEG( _ParCnt )
003C94 9908rrrr       15306         MOV.W   R0,#SOF( _ParCnt )
003C98 8200           15307         MOV.B   R0L,[R0]
003C9A F306           15308         BEQ     _1080
                      15309 ; rs232cmd.c 4308                                       SCPIError = SyntaxErr;
003C9C 964842rr       15311         MOV.B   ES,#SEG( _SCPIError )
003CA0 9908rrrr       15312         MOV.W   R0,#SOF( _SCPIError )
003CA4 BA03           15313         MOV.W   [R0],#03H
003CA6 FE4C           15314         BR      _1089
003CA6 FE4C           15314         BR      _1089
003CA8                15315 _1080:
                      15316 ; rs232cmd.c 4309                               else
                      15317 ; rs232cmd.c 4310                               {
                      15318 ; rs232cmd.c 4311                                       rs232puts( Calibration.KUNumber);
003CA8 9918rrrr       15320         MOV.W   R1,#SEG( _Calibration+66 )
003CAC 9908rrrr       15321         MOV.W   R0,#SOF( _Calibration+66 )
                      15322         CALL    _rs232puts
003CB0 C4rrrrrr       +15322 ;       FCALL   _rs232puts
                      15323 ; rs232cmd.c 4312                                       rs232putchar( '\n');
003CB4 91080A         15325         MOV.B   R0L,#0AH
                      15326         CALL    _rs232putchar
003CB7 C4rrrrrr       +15326 ;       FCALL   _rs232putchar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 250

ADDR   CODE            LINE SOURCELINE
                      15327 ; rs232cmd.c 4313                               }
                      15328 ; rs232cmd.c 4314                       }
003CBB FE42           15330         BR      _1089
003CBB FE4200         15330         BR      _1089
003CBE                15331 _1081:
                      15332 ; rs232cmd.c 4315                       else
                      15333 ; rs232cmd.c 4316                       {
                      15334 ; rs232cmd.c 4317                               if ( !PasswordProtected)
003CBE 964842rr       15336         MOV.B   ES,#SEG( _PasswordProtected )
003CC2 9908rrrr       15337         MOV.W   R0,#SOF( _PasswordProtected )
003CC6 8A00           15338         MOV.W   R0,[R0]
003CC8 F23B           15339         BNE     _1089
                      15340 ; rs232cmd.c 4318                               {
                      15341 ; rs232cmd.c 4319                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", KUNumber) != 1))
003CCA 964842rr       15343         MOV.B   ES,#SEG( _ParCnt )
003CCE 9908rrrr       15344         MOV.W   R0,#SOF( _ParCnt )
003CD2 8200           15345         MOV.B   R0L,[R0]
003CD4 910401         15346         CMP.B   R0L,#01H
003CD7 F217           15347         BNE     _1082
003CD9 9918rrrr       15348         MOV.W   R1,#SEG( _Cmd )
003CDD 9908rrrr       15349         MOV.W   R0,#SOF( _Cmd )
003CE1 91A8rr         15350         MOV.B   R5L,#SEG( __lc_bs )
003CE4 71BB           15351         XOR.B   R5H,R5H
003CE6 8947           15352         MOV.W   R4,R7
003CE8 8935           15353         MOV.W   R3,R5
003CEA 8924           15354         MOV.W   R2,R4
003CEC 0F0C           15355         PUSH.W  R2, R3
003CEE 9938rrrr       15357         MOV.W   R3,#SEG( _1079 )
003CF2 9928rrrr       15358         MOV.W   R2,#SOF( _1079 )
003CF6 0F0C           15359         PUSH.W  R2, R3
                      15361         CALL    _sscanf
003CF8 C4rrrrrr       +15361 ;       FCALL   _sscanf
003CFC 99700008       15362         ADD.W   R7,#08H
003D00 99040001       15364         CMP.W   R0,#01H
003D04 F306           15365         BEQ     _1083
003D04 F306           15365         BEQ     _1083
003D06                15366 _1082:
                      15367 ; rs232cmd.c 4320                                               SCPIError = SyntaxErr;
003D06 964842rr       15369         MOV.B   ES,#SEG( _SCPIError )
003D0A 9908rrrr       15370         MOV.W   R0,#SOF( _SCPIError )
003D0E BA03           15371         MOV.W   [R0],#03H
003D10 FE17           15372         BR      _1089
003D10 FE17           15372         BR      _1089
003D12                15373 _1083:
                      15374 ; rs232cmd.c 4321                                       else
                      15375 ; rs232cmd.c 4322                                       {
                      15376 ; rs232cmd.c 4323                                               strncpy( Calibration.KUNumber, KU
                            Number, 9);
003D12 9918rrrr       15378         MOV.W   R1,#SEG( _Calibration+66 )
003D16 9908rrrr       15379         MOV.W   R0,#SOF( _Calibration+66 )
003D1A 99680009       15380         MOV.W   R6,#09H
003D1E 8935           15381         MOV.W   R3,R5
003D20 8924           15382         MOV.W   R2,R4
                      15383         CALL    _strncpy
003D22 C4rrrrrr       +15383 ;       FCALL   _strncpy
                      15384 ; rs232cmd.c 4324       
                      15385 ; rs232cmd.c 4325                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003D26 9918rrrr       15387         MOV.W   R1,#SEG( _Calibration )
003D2A 9908rrrr       15388         MOV.W   R0,#SOF( _Calibration )
003D2E 964842rr       15389         MOV.B   ES,#SEG( _CalibrationPtr )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 251

ADDR   CODE            LINE SOURCELINE
003D32 9928rrrr       15390         MOV.W   R2,#SOF( _CalibrationPtr )
003D36 8A22           15391         MOV.W   R2,[R2]
003D38 993800E0       15392         MOV.W   R3,#0E0H
                      15393         CALL    _NV_Store
003D3C C4rrrrrr       +15393 ;       FCALL   _NV_Store
                      15394 ; rs232cmd.c 4326                                       }
                      15395 ; rs232cmd.c 4327                               }
                      15396 ; rs232cmd.c 4328                       }
                      15397 ; rs232cmd.c 4329               }
003D40                15399 _1089:
                      15400 ; rs232cmd.c 4330       }
003D40 9970000A       15402         ADD.W   R7,#0AH
003D44 2F70           15404         POP.W   R4, R5, R6
003D46 D680           15406         RET
                      15408 ; rs232cmd.c 4331       
                      15409 ; rs232cmd.c 4332       /************************************************************************
                            **/
                      15410 ; rs232cmd.c 4333       /* FactMainIDNSWRevision                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      15411 ; rs232cmd.c 4334       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15412 ; rs232cmd.c 4335       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15413 ; rs232cmd.c 4336       /* Revised:       000616                                                 
                                                                                                                             
                                                                                    */
                      15414 ; rs232cmd.c 4337       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15415 ; rs232cmd.c 4338       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15416 ; rs232cmd.c 4339       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15417 ; rs232cmd.c 4340       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15418 ; rs232cmd.c 4341       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15419 ; rs232cmd.c 4342       /************************************************************************
                            **/
                      15420 ; rs232cmd.c 4343       void FactMainIDNSWRevision( void)
                      15421 ; rs232cmd.c 4344       {
                      15422         ALIGN   1
                      15424         PUBLIC  _FactMainIDNSWRevision
003D48                15425 _FactMainIDNSWRevision:
003D48 0F70           15429         PUSH.W  R4, R5, R6
003D4A 9972000A       15431         SUB.W   R7,#0AH
                      15434 ; rs232cmd.c 4345               char SWRevision[9];
                      15435 ; rs232cmd.c 4346       
                      15436 ; rs232cmd.c 4347               if ( CmdExecute && !SCPIError)
003D4E 964842rr       15438         MOV.B   ES,#SEG( _CmdExecute )
003D52 9908rrrr       15439         MOV.W   R0,#SOF( _CmdExecute )
003D56 8200           15440         MOV.B   R0L,[R0]
003D58 F364           15441         BEQ     _1101
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 252

ADDR   CODE            LINE SOURCELINE
003D5A 964842rr       15442         MOV.B   ES,#SEG( _SCPIError )
003D5E 9908rrrr       15443         MOV.W   R0,#SOF( _SCPIError )
003D62 8A00           15444         MOV.W   R0,[R0]
003D64 F25E           15445         BNE     _1101
                      15446 ; rs232cmd.c 4348               {
                      15447 ; rs232cmd.c 4349                       if ( CmdRequest)
003D66 964842rr       15449         MOV.B   ES,#SEG( _CmdRequest )
003D6A 9908rrrr       15450         MOV.W   R0,#SOF( _CmdRequest )
003D6E 8200           15451         MOV.B   R0L,[R0]
003D70 F317           15452         BEQ     _1093
                      15453 ; rs232cmd.c 4350                       {
                      15454 ; rs232cmd.c 4351                               if ( ParCnt)
003D72 964842rr       15456         MOV.B   ES,#SEG( _ParCnt )
003D76 9908rrrr       15457         MOV.W   R0,#SOF( _ParCnt )
003D7A 8200           15458         MOV.B   R0L,[R0]
003D7C F306           15459         BEQ     _1092
                      15460 ; rs232cmd.c 4352                                       SCPIError = SyntaxErr;
003D7E 964842rr       15462         MOV.B   ES,#SEG( _SCPIError )
003D82 9908rrrr       15463         MOV.W   R0,#SOF( _SCPIError )
003D86 BA03           15464         MOV.W   [R0],#03H
003D88 FE4C           15465         BR      _1101
003D88 FE4C           15465         BR      _1101
003D8A                15466 _1092:
                      15467 ; rs232cmd.c 4353                               else
                      15468 ; rs232cmd.c 4354                               {
                      15469 ; rs232cmd.c 4355                                       rs232puts( Calibration.SWRevision);
003D8A 9918rrrr       15471         MOV.W   R1,#SEG( _Calibration+75 )
003D8E 9908rrrr       15472         MOV.W   R0,#SOF( _Calibration+75 )
                      15473         CALL    _rs232puts
003D92 C4rrrrrr       +15473 ;       FCALL   _rs232puts
                      15474 ; rs232cmd.c 4356                                       rs232putchar( '\n');
003D96 91080A         15476         MOV.B   R0L,#0AH
                      15477         CALL    _rs232putchar
003D99 C4rrrrrr       +15477 ;       FCALL   _rs232putchar
                      15478 ; rs232cmd.c 4357                               }
                      15479 ; rs232cmd.c 4358                       }
003D9D FE42           15481         BR      _1101
003D9D FE4200         15481         BR      _1101
003DA0                15482 _1093:
                      15483 ; rs232cmd.c 4359                       else
                      15484 ; rs232cmd.c 4360                       {
                      15485 ; rs232cmd.c 4361                               if ( !PasswordProtected)
003DA0 964842rr       15487         MOV.B   ES,#SEG( _PasswordProtected )
003DA4 9908rrrr       15488         MOV.W   R0,#SOF( _PasswordProtected )
003DA8 8A00           15489         MOV.W   R0,[R0]
003DAA F23B           15490         BNE     _1101
                      15491 ; rs232cmd.c 4362                               {
                      15492 ; rs232cmd.c 4363                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", SWRevision) != 1))
003DAC 964842rr       15494         MOV.B   ES,#SEG( _ParCnt )
003DB0 9908rrrr       15495         MOV.W   R0,#SOF( _ParCnt )
003DB4 8200           15496         MOV.B   R0L,[R0]
003DB6 910401         15497         CMP.B   R0L,#01H
003DB9 F217           15498         BNE     _1094
003DBB 9918rrrr       15499         MOV.W   R1,#SEG( _Cmd )
003DBF 9908rrrr       15500         MOV.W   R0,#SOF( _Cmd )
003DC3 91A8rr         15501         MOV.B   R5L,#SEG( __lc_bs )
003DC6 71BB           15502         XOR.B   R5H,R5H
003DC8 8947           15503         MOV.W   R4,R7
003DCA 8935           15504         MOV.W   R3,R5
003DCC 8924           15505         MOV.W   R2,R4
003DCE 0F0C           15506         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 253

ADDR   CODE            LINE SOURCELINE
003DD0 9938rrrr       15508         MOV.W   R3,#SEG( _1079 )
003DD4 9928rrrr       15509         MOV.W   R2,#SOF( _1079 )
003DD8 0F0C           15510         PUSH.W  R2, R3
                      15512         CALL    _sscanf
003DDA C4rrrrrr       +15512 ;       FCALL   _sscanf
003DDE 99700008       15513         ADD.W   R7,#08H
003DE2 99040001       15515         CMP.W   R0,#01H
003DE6 F306           15516         BEQ     _1095
003DE6 F306           15516         BEQ     _1095
003DE8                15517 _1094:
                      15518 ; rs232cmd.c 4364                                               SCPIError = SyntaxErr;
003DE8 964842rr       15520         MOV.B   ES,#SEG( _SCPIError )
003DEC 9908rrrr       15521         MOV.W   R0,#SOF( _SCPIError )
003DF0 BA03           15522         MOV.W   [R0],#03H
003DF2 FE17           15523         BR      _1101
003DF2 FE17           15523         BR      _1101
003DF4                15524 _1095:
                      15525 ; rs232cmd.c 4365                                       else
                      15526 ; rs232cmd.c 4366                                       {
                      15527 ; rs232cmd.c 4367                                               strncpy( Calibration.SWRevision, 
                            SWRevision, 8);
003DF4 9918rrrr       15529         MOV.W   R1,#SEG( _Calibration+75 )
003DF8 9908rrrr       15530         MOV.W   R0,#SOF( _Calibration+75 )
003DFC 99680008       15531         MOV.W   R6,#08H
003E00 8935           15532         MOV.W   R3,R5
003E02 8924           15533         MOV.W   R2,R4
                      15534         CALL    _strncpy
003E04 C4rrrrrr       +15534 ;       FCALL   _strncpy
                      15535 ; rs232cmd.c 4368       
                      15536 ; rs232cmd.c 4369                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003E08 9918rrrr       15538         MOV.W   R1,#SEG( _Calibration )
003E0C 9908rrrr       15539         MOV.W   R0,#SOF( _Calibration )
003E10 964842rr       15540         MOV.B   ES,#SEG( _CalibrationPtr )
003E14 9928rrrr       15541         MOV.W   R2,#SOF( _CalibrationPtr )
003E18 8A22           15542         MOV.W   R2,[R2]
003E1A 993800E0       15543         MOV.W   R3,#0E0H
                      15544         CALL    _NV_Store
003E1E C4rrrrrr       +15544 ;       FCALL   _NV_Store
                      15545 ; rs232cmd.c 4370                                       }
                      15546 ; rs232cmd.c 4371                               }
                      15547 ; rs232cmd.c 4372                       }
                      15548 ; rs232cmd.c 4373               }
003E22                15550 _1101:
                      15551 ; rs232cmd.c 4374       }
003E22 9970000A       15553         ADD.W   R7,#0AH
003E26 2F70           15555         POP.W   R4, R5, R6
003E28 D680           15557         RET
                      15559 ; rs232cmd.c 4375       
                      15560 ; rs232cmd.c 4376       /************************************************************************
                            **/
                      15561 ; rs232cmd.c 4377       /* FactMainSystem                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      15562 ; rs232cmd.c 4378       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15563 ; rs232cmd.c 4379       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 254

ADDR   CODE            LINE SOURCELINE
                      15564 ; rs232cmd.c 4380       /* Revised:       000617                                                 
                                                                                                                             
                                                                                    */
                      15565 ; rs232cmd.c 4381       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15566 ; rs232cmd.c 4382       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15567 ; rs232cmd.c 4383       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15568 ; rs232cmd.c 4384       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15569 ; rs232cmd.c 4385       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15570 ; rs232cmd.c 4386       /************************************************************************
                            **/
                      15571 ; rs232cmd.c 4387       void FactMainSystem( void)
                      15572 ; rs232cmd.c 4388       {
                      15573         ALIGN   1
                      15575         PUBLIC  _FactMainSystem
003E2A                15576 _FactMainSystem:
003E2A 0F30           15580         PUSH.W  R4, R5
                      15586 ; rs232cmd.c 4389               int system;
                      15587 ; rs232cmd.c 4390               char code *str;
                      15588 ; rs232cmd.c 4391       
                      15589 ; rs232cmd.c 4392               if ( CmdExecute && !SCPIError)
003E2C 964842rr       15591         MOV.B   ES,#SEG( _CmdExecute )
003E30 9908rrrr       15592         MOV.W   R0,#SOF( _CmdExecute )
003E34 8200           15593         MOV.B   R0L,[R0]
                      15594         BEQ     _1117
003E36 F202           +15594 ;       BNE     _LG_1052
003E38 D5008C         +15594 ;       JMP.L   _1117
003E3C D5008C00       +15594 ;       JMP.L   _1117
003E3C                +15594 _LG_1052:
003E3C 964842rr       15595         MOV.B   ES,#SEG( _SCPIError )
003E40 9908rrrr       15596         MOV.W   R0,#SOF( _SCPIError )
003E44 8A00           15597         MOV.W   R0,[R0]
                      15598         BNE     _1117
003E46 F302           +15598 ;       BEQ     _LG_1054
003E48 D50084         +15598 ;       JMP.L   _1117
003E4C D5008400       +15598 ;       JMP.L   _1117
003E4C                +15598 _LG_1054:
                      15599 ; rs232cmd.c 4393               {
                      15600 ; rs232cmd.c 4394                       if ( CmdRequest)
003E4C 964842rr       15602         MOV.B   ES,#SEG( _CmdRequest )
003E50 9908rrrr       15603         MOV.W   R0,#SOF( _CmdRequest )
003E54 8200           15604         MOV.B   R0L,[R0]
003E56 F33F           15605         BEQ     _1107
                      15606 ; rs232cmd.c 4395                       {
                      15607 ; rs232cmd.c 4396                               if ( ParCnt)
003E58 964842rr       15609         MOV.B   ES,#SEG( _ParCnt )
003E5C 9908rrrr       15610         MOV.W   R0,#SOF( _ParCnt )
003E60 8200           15611         MOV.B   R0L,[R0]
003E62 F306           15612         BEQ     _1104
                      15613 ; rs232cmd.c 4397                                       SCPIError = ParNotAllowed;
003E64 964842rr       15615         MOV.B   ES,#SEG( _SCPIError )
003E68 9908rrrr       15616         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 255

ADDR   CODE            LINE SOURCELINE
003E6C BA06           15617         MOV.W   [R0],#06H
003E6E FE71           15618         BR      _1117
003E6E FE71           15618         BR      _1117
003E70                15619 _1104:
                      15620 ; rs232cmd.c 4398                               else
                      15621 ; rs232cmd.c 4399                               {
                      15622 ; rs232cmd.c 4400                                       str = SystemPar[Calibration.ResetSystem].
                            LongName;
003E70 964842rr       15624         MOV.B   ES,#SEG( _Calibration+97 )
003E74 9908rrrr       15625         MOV.W   R0,#SOF( _Calibration+97 )
003E78 8200           15626         MOV.B   R0L,[R0]
003E7A E8000C         15627         MULU.B  R0L,#0CH
003E7D 8920           15628         MOV.W   R2,R0
003E7F B930           15629         MOVS.W  R3,#00H
003E81 9918rrrr       15630         MOV.W   R1,#SEG( _SystemPar )
003E85 9908rrrr       15631         MOV.W   R0,#SOF( _SystemPar )
003E89 0902           15632         ADD.W   R0,R2
003E8B 1913           15633         ADDC.W  R1,R3
003E8D 862C43         15634         MOV.B   CS,R1L
003E90 8820           15635         MOVC.W  R2,[R0+]
003E92 99040000       15636         CMP.W   R0,#00H
003E96 F202           15637         BNE     _1118
003E98 A64143         15638         ADDS.B  CS,#01H
003E98 A6414300       15638         ADDS.B  CS,#01H
003E9C                15639 _1118:
003E9C 8830           15640         MOVC.W  R3,[R0+]
003E9E 8953           15641         MOV.W   R5,R3
003EA0 8942           15642         MOV.W   R4,R2
                      15644 ; rs232cmd.c 4401       
                      15645 ; rs232cmd.c 4402                                       while ( *str)
003EA2 866C43         15647         MOV.B   CS,R3L
003EA5 8062           15648         MOVC.B  R3L,[R2+]
003EA7 F312           15649         BEQ     _1106
003EA7 F31200         15649         BEQ     _1106
003EAA                15650 _1105:
                      15651 ; rs232cmd.c 4403                                               rs232putchar( *str++);
003EAA 8915           15653         MOV.W   R1,R5
003EAC 8904           15654         MOV.W   R0,R4
003EAE 862C43         15655         MOV.B   CS,R1L
003EB1 8020           15656         MOVC.B  R1L,[R0+]
003EB3 8102           15657         MOV.B   R0L,R1L
                      15658         CALL    _rs232putchar
003EB5 C4rrrrrr       +15658 ;       FCALL   _rs232putchar
003EB9 99400001       15659         ADD.W   R4,#01H
003EBD 99510000       15660         ADDC.W  R5,#00H
003EC1 8915           15664         MOV.W   R1,R5
003EC3 8904           15665         MOV.W   R0,R4
003EC5 862C43         15666         MOV.B   CS,R1L
003EC8 8020           15667         MOVC.B  R1L,[R0+]
003ECA F2EF           15668         BNE     _1105
003ECC                15670 _1106:
                      15671 ; rs232cmd.c 4404       
                      15672 ; rs232cmd.c 4405                                       rs232putchar('\n');
003ECC 91080A         15674         MOV.B   R0L,#0AH
                      15675         CALL    _rs232putchar
003ECF C4rrrrrr       +15675 ;       FCALL   _rs232putchar
                      15676 ; rs232cmd.c 4406                               }
                      15677 ; rs232cmd.c 4407                       }
003ED3 FE3F           15679         BR      _1117
003ED3 FE3F00         15679         BR      _1117
003ED6                15680 _1107:
                      15681 ; rs232cmd.c 4408                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 256

ADDR   CODE            LINE SOURCELINE
                      15682 ; rs232cmd.c 4409                       {
                      15683 ; rs232cmd.c 4410                               if ( ParCnt != 1)
003ED6 964842rr       15685         MOV.B   ES,#SEG( _ParCnt )
003EDA 9908rrrr       15686         MOV.W   R0,#SOF( _ParCnt )
003EDE 8200           15687         MOV.B   R0L,[R0]
003EE0 910401         15688         CMP.B   R0L,#01H
003EE3 F307           15689         BEQ     _1108
                      15690 ; rs232cmd.c 4411                                       SCPIError = SyntaxErr;
003EE5 964842rr       15692         MOV.B   ES,#SEG( _SCPIError )
003EE9 9908rrrr       15693         MOV.W   R0,#SOF( _SCPIError )
003EED BA03           15694         MOV.W   [R0],#03H
003EEF FE31           15695         BR      _1117
003EEF FE3100         15695         BR      _1117
003EF2                15696 _1108:
                      15697 ; rs232cmd.c 4412                               else
                      15698 ; rs232cmd.c 4413                               {
                      15699 ; rs232cmd.c 4414                                       system = FindParameter( Cmd, SystemPar);
003EF2 9918rrrr       15701         MOV.W   R1,#SEG( _Cmd )
003EF6 9908rrrr       15702         MOV.W   R0,#SOF( _Cmd )
003EFA 9938rrrr       15703         MOV.W   R3,#SEG( _SystemPar )
003EFE 9928rrrr       15704         MOV.W   R2,#SOF( _SystemPar )
003F02 C5107B         15705         CALL    _FindParameter
                      15707 ; rs232cmd.c 4415       
                      15708 ; rs232cmd.c 4416                                       if ( system == PAL_PALID)                
                                                            // If line7, (PAL w/ID), ever should
003F05 99040001       15710         CMP.W   R0,#01H
003F09 F208           15711         BNE     _1109
                      15712 ; rs232cmd.c 4417                                               SCPIError = DataOutOfRange;      
                                                    //  be supported remove this exception
003F0B 964842rr       15714         MOV.B   ES,#SEG( _SCPIError )
003F0F 9908rrrr       15715         MOV.W   R0,#SOF( _SCPIError )
003F13 9A080021       15716         MOV.W   [R0],#021H
003F17 FE1D           15717         BR      _1117
003F17 FE1D00         15717         BR      _1117
003F1A                15718 _1109:
                      15720 ; rs232cmd.c 4418                                       else                                     
                                    
                      15721 ; rs232cmd.c 4419                                       {       
                      15722 ; rs232cmd.c 4420                                               if ( system > -1)
003F1A 9904FFFF       15724         CMP.W   R0,#0FFFFH
003F1E FD13           15725         BLE     _1110
                      15726 ; rs232cmd.c 4421                                               {
                      15727 ; rs232cmd.c 4422                                                       Calibration.ResetSystem =
                             system;
003F20 964842rr       15729         MOV.B   ES,#SEG( _Calibration+97 )
003F24 9918rrrr       15730         MOV.W   R1,#SOF( _Calibration+97 )
003F28 8209           15731         MOV.B   [R1],R0L
                      15732 ; rs232cmd.c 4423       
                      15733 ; rs232cmd.c 4424                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
003F2A 9918rrrr       15735         MOV.W   R1,#SEG( _Calibration )
003F2E 9908rrrr       15736         MOV.W   R0,#SOF( _Calibration )
003F32 964842rr       15737         MOV.B   ES,#SEG( _CalibrationPtr )
003F36 9928rrrr       15738         MOV.W   R2,#SOF( _CalibrationPtr )
003F3A 8A22           15739         MOV.W   R2,[R2]
003F3C 993800E0       15740         MOV.W   R3,#0E0H
                      15741         CALL    _NV_Store
003F40 C4rrrrrr       +15741 ;       FCALL   _NV_Store
                      15742 ; rs232cmd.c 4425                                               }
003F44 FE06           15744         BR      _1117
003F44 FE06           15744         BR      _1117
003F46                15745 _1110:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 257

ADDR   CODE            LINE SOURCELINE
                      15746 ; rs232cmd.c 4426                                               else
                      15747 ; rs232cmd.c 4427                                                       SCPIError = DataOutOfRang
                            e;
003F46 964842rr       15749         MOV.B   ES,#SEG( _SCPIError )
003F4A 9908rrrr       15750         MOV.W   R0,#SOF( _SCPIError )
003F4E 9A080021       15751         MOV.W   [R0],#021H
                      15752 ; rs232cmd.c 4428                                       }
                      15753 ; rs232cmd.c 4429                               }
                      15754 ; rs232cmd.c 4430                       }
                      15755 ; rs232cmd.c 4431               }
003F52                15757 _1117:
                      15758 ; rs232cmd.c 4432       }
003F52 2F30           15760         POP.W   R4, R5
003F54 D680           15762         RET
                      15765 ; rs232cmd.c 4433       
                      15766 ; rs232cmd.c 4434       /************************************************************************
                            **/
                      15767 ; rs232cmd.c 4435       /* FactMainFMSDateProd                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      15768 ; rs232cmd.c 4436       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15769 ; rs232cmd.c 4437       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      15770 ; rs232cmd.c 4438       /* Revised:       0006014                                                
                                                                                                                             
                                                                                    */
                      15771 ; rs232cmd.c 4439       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      15772 ; rs232cmd.c 4440       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      15773 ; rs232cmd.c 4441       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      15774 ; rs232cmd.c 4442       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      15775 ; rs232cmd.c 4443       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      15776 ; rs232cmd.c 4444       /************************************************************************
                            **/
                      15777 ; rs232cmd.c 4445       void FactMainFMSDateProd( void)
                      15778 ; rs232cmd.c 4446       {
                      15779         ALIGN   1
                      15781         PUBLIC  _FactMainFMSDateProd
003F56                15782 _FactMainFMSDateProd:
003F56 0F30           15786         PUSH.W  R4, R5
003F58 9972001A       15788         SUB.W   R7,#01AH
                      15794 ; rs232cmd.c 4447               UI year, month, day;
                      15795 ; rs232cmd.c 4448               char buffer[20];
                      15796 ; rs232cmd.c 4449       
                      15797 ; rs232cmd.c 4450               if ( CmdExecute && !SCPIError)
003F5C 964842rr       15799         MOV.B   ES,#SEG( _CmdExecute )
003F60 9908rrrr       15800         MOV.W   R0,#SOF( _CmdExecute )
003F64 8200           15801         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 258

ADDR   CODE            LINE SOURCELINE
                      15802         BEQ     _1134
003F66 F202           +15802 ;       BNE     _LG_1072
003F68 D500C7         +15802 ;       JMP.L   _1134
003F6C D500C700       +15802 ;       JMP.L   _1134
003F6C                +15802 _LG_1072:
003F6C 964842rr       15803         MOV.B   ES,#SEG( _SCPIError )
003F70 9908rrrr       15804         MOV.W   R0,#SOF( _SCPIError )
003F74 8A00           15805         MOV.W   R0,[R0]
                      15806         BNE     _1134
003F76 F302           +15806 ;       BEQ     _LG_1074
003F78 D500BF         +15806 ;       JMP.L   _1134
003F7C D500BF00       +15806 ;       JMP.L   _1134
003F7C                +15806 _LG_1074:
                      15807 ; rs232cmd.c 4451               {
                      15808 ; rs232cmd.c 4452                       if ( CmdRequest)
003F7C 964842rr       15810         MOV.B   ES,#SEG( _CmdRequest )
003F80 9908rrrr       15811         MOV.W   R0,#SOF( _CmdRequest )
003F84 8200           15812         MOV.B   R0L,[R0]
003F86 F35A           15813         BEQ     _1124
                      15814 ; rs232cmd.c 4453                       {
                      15815 ; rs232cmd.c 4454                               if ( ParCnt)
003F88 964842rr       15817         MOV.B   ES,#SEG( _ParCnt )
003F8C 9908rrrr       15818         MOV.W   R0,#SOF( _ParCnt )
003F90 8200           15819         MOV.B   R0L,[R0]
003F92 F307           15820         BEQ     _1123
                      15821 ; rs232cmd.c 4455                                       SCPIError = SyntaxErr;
003F94 964842rr       15823         MOV.B   ES,#SEG( _SCPIError )
003F98 9908rrrr       15824         MOV.W   R0,#SOF( _SCPIError )
003F9C BA03           15825         MOV.W   [R0],#03H
                      15826         BR      _1134
003F9E D500AC         +15826         JMP.L   _1134
003F9E D500AC00       +15826         JMP.L   _1134
003FA2                15827 _1123:
                      15828 ; rs232cmd.c 4456                               else
                      15829 ; rs232cmd.c 4457                               {
                      15830 ; rs232cmd.c 4458                                       day = Calibration.ProdDate % 100;
003FA2 964842rr       15832         MOV.B   ES,#SEG( _Calibration+98 )
003FA6 9918rrrr       15833         MOV.W   R1,#SOF( _Calibration+98 )
003FAA 8B01           15834         MOV.W   R0,[R1+]
003FAC 8A11           15835         MOV.W   R1,[R1]
003FAE B930           15836         MOV.W   R3,#00H
003FB0 99280064       15837         MOV.W   R2,#064H
003FB4 964842rr       15838         MOV.B   ES,#SEG( _Calibration+98 )
003FB8 9948rrrr       15839         MOV.W   R4,#SOF( _Calibration+98 )
003FBC 8B0C           15840         MOV.W   [R4+],R0
003FBE 8A1C           15841         MOV.W   [R4],R1
003FC0 C4rrrrrr       15842         FCALL   __UMODL
003FC4 8C0F04         15843         MOV.W   [R7+4],R0
003FC7 964842rr       15844         MOV.B   ES,#SEG( _Calibration+98 )
003FCB 9918rrrr       15845         MOV.W   R1,#SOF( _Calibration+98 )
003FCF 8B01           15846         MOV.W   R0,[R1+]
003FD1 8A11           15847         MOV.W   R1,[R1]
                      15848 ; rs232cmd.c 4459                                       month = ( Calibration.ProdDate / 100) % 1
                            00;
003FD3 B930           15850         MOV.W   R3,#00H
003FD5 99280064       15851         MOV.W   R2,#064H
003FD9 8953           15852         MOV.W   R5,R3
003FDB 8942           15853         MOV.W   R4,R2
003FDD C4rrrrrr       15854         FCALL   __UDIVL
003FE1 8935           15855         MOV.W   R3,R5
003FE3 8924           15856         MOV.W   R2,R4
003FE5 C4rrrrrr       15857         FCALL   __UMODL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 259

ADDR   CODE            LINE SOURCELINE
003FE9 8C0F02         15858         MOV.W   [R7+2],R0
                      15859 ; rs232cmd.c 4460                                       year = ( Calibration.ProdDate / 10000);
003FEC B930           15861         MOV.W   R3,#00H
003FEE 99282710       15862         MOV.W   R2,#02710H
003FF2 964842rr       15863         MOV.B   ES,#SEG( _Calibration+98 )
003FF6 9918rrrr       15864         MOV.W   R1,#SOF( _Calibration+98 )
003FFA 8B01           15865         MOV.W   R0,[R1+]
003FFC 8A11           15866         MOV.W   R1,[R1]
003FFE C4rrrrrr       15867         FCALL   __UDIVL
004002 8A0F           15868         MOV.W   [R7],R0
                      15869 ; rs232cmd.c 4461       
                      15870 ; rs232cmd.c 4462                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
004004 91A8rr         15872         MOV.B   R5L,#SEG( __lc_bs )
004007 71BB           15873         XOR.B   R5H,R5H
004009 404706         15874         LEA     R4,R7+6
00400C 8C0704         15875         MOV.W   R0,[R7+4]
00400F 0F01           15876         PUSH.W  R0
004011 8C0704         15878         MOV.W   R0,[R7+4]
004014 0F01           15879         PUSH.W  R0
004016 8C0704         15881         MOV.W   R0,[R7+4]
004019 0F01           15882         PUSH.W  R0
00401B 9918rrrr       15884         MOV.W   R1,#SEG( _183 )
00401F 9908rrrr       15885         MOV.W   R0,#SOF( _183 )
004023 0F03           15886         PUSH.W  R0, R1
004025 8915           15888         MOV.W   R1,R5
004027 8904           15889         MOV.W   R0,R4
                      15890         CALL    _sprintf
004029 C4rrrrrr       +15890 ;       FCALL   _sprintf
00402D 9970000A       15891         ADD.W   R7,#0AH
                      15893 ; rs232cmd.c 4463       
                      15894 ; rs232cmd.c 4464                                       rs232puts( buffer);
004031 8915           15896         MOV.W   R1,R5
004033 8904           15897         MOV.W   R0,R4
                      15898         CALL    _rs232puts
004035 C4rrrrrr       +15898 ;       FCALL   _rs232puts
                      15899 ; rs232cmd.c 4465                               }
                      15900 ; rs232cmd.c 4466                       }
004039 FE5F           15902         BR      _1134
004039 FE5F00         15902         BR      _1134
00403C                15903 _1124:
                      15904 ; rs232cmd.c 4467                       else
                      15905 ; rs232cmd.c 4468                       {
                      15906 ; rs232cmd.c 4469                               if ( !PasswordProtected)
00403C 964842rr       15908         MOV.B   ES,#SEG( _PasswordProtected )
004040 9908rrrr       15909         MOV.W   R0,#SOF( _PasswordProtected )
004044 8A00           15910         MOV.W   R0,[R0]
004046 F258           15911         BNE     _1134
                      15912 ; rs232cmd.c 4470                               {
                      15913 ; rs232cmd.c 4471                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
004048 964842rr       15915         MOV.B   ES,#SEG( _ParCnt )
00404C 9908rrrr       15916         MOV.W   R0,#SOF( _ParCnt )
004050 8200           15917         MOV.B   R0L,[R0]
004052 910403         15918         CMP.B   R0L,#03H
004055 F21F           15919         BNE     _1125
004057 9168rr         15920         MOV.B   R3L,#SEG( __lc_bs )
00405A 7177           15921         XOR.B   R3H,R3H
00405C 8927           15922         MOV.W   R2,R7
00405E 91A8rr         15923         MOV.B   R5L,#SEG( __lc_bs )
004061 71BB           15924         XOR.B   R5H,R5H
004063 404702         15925         LEA     R4,R7+2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 260

ADDR   CODE            LINE SOURCELINE
004066 9128rr         15926         MOV.B   R1L,#SEG( __lc_bs )
004069 7133           15927         XOR.B   R1H,R1H
00406B 400704         15928         LEA     R0,R7+4
00406E 0F03           15929         PUSH.W  R0, R1
004070 0F30           15931         PUSH.W  R4, R5
004072 0F0C           15933         PUSH.W  R2, R3
004074 9938rrrr       15935         MOV.W   R3,#SEG( _1122 )
004078 9928rrrr       15936         MOV.W   R2,#SOF( _1122 )
00407C 0F0C           15937         PUSH.W  R2, R3
00407E 9918rrrr       15939         MOV.W   R1,#SEG( _Cmd )
004082 9908rrrr       15940         MOV.W   R0,#SOF( _Cmd )
                      15941         CALL    _sscanf
004086 C4rrrrrr       +15941 ;       FCALL   _sscanf
00408A 99700010       15942         ADD.W   R7,#010H
00408E 99040003       15944         CMP.W   R0,#03H
004092 F306           15945         BEQ     _1126
004092 F306           15945         BEQ     _1126
004094                15946 _1125:
                      15947 ; rs232cmd.c 4472                                               SCPIError = SyntaxErr;
004094 964842rr       15949         MOV.B   ES,#SEG( _SCPIError )
004098 9908rrrr       15950         MOV.W   R0,#SOF( _SCPIError )
00409C BA03           15951         MOV.W   [R0],#03H
00409E FE2C           15952         BR      _1134
00409E FE2C           15952         BR      _1134
0040A0                15953 _1126:
                      15954 ; rs232cmd.c 4473                                       else
                      15955 ; rs232cmd.c 4474                                       {
                      15956 ; rs232cmd.c 4475                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0040A0 8A07           15958         MOV.W   R0,[R7]
0040A2 8C1702         15959         MOV.W   R1,[R7+2]
0040A5 8C2704         15960         MOV.W   R2,[R7+4]
                      15961         CALL    _ValidateDate
0040A8 C4rrrrrr       +15961 ;       FCALL   _ValidateDate
0040AC 6900           15962         OR.W    R0,R0
0040AE F207           15963         BNE     _1127
                      15964 ; rs232cmd.c 4476                                                       SCPIError = ExecErr;
0040B0 964842rr       15966         MOV.B   ES,#SEG( _SCPIError )
0040B4 9908rrrr       15967         MOV.W   R0,#SOF( _SCPIError )
0040B8 9A08001D       15968         MOV.W   [R0],#01DH
0040BC FE1D           15969         BR      _1134
0040BC FE1D           15969         BR      _1134
0040BE                15970 _1127:
                      15971 ; rs232cmd.c 4477                                               else
                      15972 ; rs232cmd.c 4478                                               {
                      15973 ; rs232cmd.c 4479                                                       Calibration.ProdDate = da
                            y + 100*month + 10000*year;
0040BE 8C0702         15975         MOV.W   R0,[R7+2]
0040C1 E9000064       15976         MULU.W  R0,#064H
0040C5 0C0704         15977         ADD.W   R0,[R7+4]
0040C8 8A27           15978         MOV.W   R2,[R7]
0040CA E9202710       15979         MULU.W  R2,#02710H
0040CE 0902           15980         ADD.W   R0,R2
0040D0 B910           15981         MOVS.W  R1,#00H
0040D2 964842rr       15982         MOV.B   ES,#SEG( _Calibration+98 )
0040D6 9928rrrr       15983         MOV.W   R2,#SOF( _Calibration+98 )
0040DA 8B0A           15984         MOV.W   [R2+],R0
0040DC 8A1A           15985         MOV.W   [R2],R1
                      15986 ; rs232cmd.c 4480                                               
                      15987 ; rs232cmd.c 4481                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0040DE 9918rrrr       15989         MOV.W   R1,#SEG( _Calibration )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 261

ADDR   CODE            LINE SOURCELINE
0040E2 9908rrrr       15990         MOV.W   R0,#SOF( _Calibration )
0040E6 964842rr       15991         MOV.B   ES,#SEG( _CalibrationPtr )
0040EA 9928rrrr       15992         MOV.W   R2,#SOF( _CalibrationPtr )
0040EE 8A22           15993         MOV.W   R2,[R2]
0040F0 993800E0       15994         MOV.W   R3,#0E0H
                      15995         CALL    _NV_Store
0040F4 C4rrrrrr       +15995 ;       FCALL   _NV_Store
                      15996 ; rs232cmd.c 4482                                               }
                      15997 ; rs232cmd.c 4483                                       }                               
                      15998 ; rs232cmd.c 4484                               }
                      15999 ; rs232cmd.c 4485                       }
                      16000 ; rs232cmd.c 4486               }
0040F8                16002 _1134:
                      16003 ; rs232cmd.c 4487       }
0040F8 9970001A       16005         ADD.W   R7,#01AH
0040FC 2F30           16007         POP.W   R4, R5
0040FE D680           16009         RET
                      16011 ; rs232cmd.c 4488       
                      16012 ; rs232cmd.c 4489       /************************************************************************
                            **/
                      16013 ; rs232cmd.c 4490       /* FactMainFMSDateUpd                                                    
                                                                                                                             
                                RS232CMD.C  */
                      16014 ; rs232cmd.c 4491       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16015 ; rs232cmd.c 4492       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                    */
                      16016 ; rs232cmd.c 4493       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16017 ; rs232cmd.c 4494       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16018 ; rs232cmd.c 4495       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16019 ; rs232cmd.c 4496       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16020 ; rs232cmd.c 4497       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16021 ; rs232cmd.c 4498       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16022 ; rs232cmd.c 4499       /************************************************************************
                            **/
                      16023 ; rs232cmd.c 4500       void FactMainFMSDateUpd( void)
                      16024 ; rs232cmd.c 4501       {
                      16025         ALIGN   1
                      16027         PUBLIC  _FactMainFMSDateUpd
004100                16028 _FactMainFMSDateUpd:
004100 0F30           16032         PUSH.W  R4, R5
004102 9972001A       16034         SUB.W   R7,#01AH
                      16040 ; rs232cmd.c 4502               UI year, month, day;
                      16041 ; rs232cmd.c 4503               char buffer[20];
                      16042 ; rs232cmd.c 4504       
                      16043 ; rs232cmd.c 4505               if ( CmdExecute && !SCPIError)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 262

ADDR   CODE            LINE SOURCELINE
004106 964842rr       16045         MOV.B   ES,#SEG( _CmdExecute )
00410A 9908rrrr       16046         MOV.W   R0,#SOF( _CmdExecute )
00410E 8200           16047         MOV.B   R0L,[R0]
                      16048         BEQ     _1148
004110 F202           +16048 ;       BNE     _LG_1088
004112 D500C7         +16048 ;       JMP.L   _1148
004116 D500C700       +16048 ;       JMP.L   _1148
004116                +16048 _LG_1088:
004116 964842rr       16049         MOV.B   ES,#SEG( _SCPIError )
00411A 9908rrrr       16050         MOV.W   R0,#SOF( _SCPIError )
00411E 8A00           16051         MOV.W   R0,[R0]
                      16052         BNE     _1148
004120 F302           +16052 ;       BEQ     _LG_1090
004122 D500BF         +16052 ;       JMP.L   _1148
004126 D500BF00       +16052 ;       JMP.L   _1148
004126                +16052 _LG_1090:
                      16053 ; rs232cmd.c 4506               {
                      16054 ; rs232cmd.c 4507                       if ( CmdRequest)
004126 964842rr       16056         MOV.B   ES,#SEG( _CmdRequest )
00412A 9908rrrr       16057         MOV.W   R0,#SOF( _CmdRequest )
00412E 8200           16058         MOV.B   R0L,[R0]
004130 F35A           16059         BEQ     _1138
                      16060 ; rs232cmd.c 4508                       {
                      16061 ; rs232cmd.c 4509                               if ( ParCnt)
004132 964842rr       16063         MOV.B   ES,#SEG( _ParCnt )
004136 9908rrrr       16064         MOV.W   R0,#SOF( _ParCnt )
00413A 8200           16065         MOV.B   R0L,[R0]
00413C F307           16066         BEQ     _1137
                      16067 ; rs232cmd.c 4510                                       SCPIError = SyntaxErr;
00413E 964842rr       16069         MOV.B   ES,#SEG( _SCPIError )
004142 9908rrrr       16070         MOV.W   R0,#SOF( _SCPIError )
004146 BA03           16071         MOV.W   [R0],#03H
                      16072         BR      _1148
004148 D500AC         +16072         JMP.L   _1148
004148 D500AC00       +16072         JMP.L   _1148
00414C                16073 _1137:
                      16074 ; rs232cmd.c 4511                               else
                      16075 ; rs232cmd.c 4512                               {
                      16076 ; rs232cmd.c 4513                                       day = Calibration.UpdateDate % 100;
00414C 964842rr       16078         MOV.B   ES,#SEG( _Calibration+102 )
004150 9918rrrr       16079         MOV.W   R1,#SOF( _Calibration+102 )
004154 8B01           16080         MOV.W   R0,[R1+]
004156 8A11           16081         MOV.W   R1,[R1]
004158 B930           16082         MOV.W   R3,#00H
00415A 99280064       16083         MOV.W   R2,#064H
00415E 964842rr       16084         MOV.B   ES,#SEG( _Calibration+102 )
004162 9948rrrr       16085         MOV.W   R4,#SOF( _Calibration+102 )
004166 8B0C           16086         MOV.W   [R4+],R0
004168 8A1C           16087         MOV.W   [R4],R1
00416A C4rrrrrr       16088         FCALL   __UMODL
00416E 8C0F04         16089         MOV.W   [R7+4],R0
004171 964842rr       16090         MOV.B   ES,#SEG( _Calibration+102 )
004175 9918rrrr       16091         MOV.W   R1,#SOF( _Calibration+102 )
004179 8B01           16092         MOV.W   R0,[R1+]
00417B 8A11           16093         MOV.W   R1,[R1]
                      16094 ; rs232cmd.c 4514                                       month = ( Calibration.UpdateDate / 100) %
                             100;
00417D B930           16096         MOV.W   R3,#00H
00417F 99280064       16097         MOV.W   R2,#064H
004183 8953           16098         MOV.W   R5,R3
004185 8942           16099         MOV.W   R4,R2
004187 C4rrrrrr       16100         FCALL   __UDIVL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 263

ADDR   CODE            LINE SOURCELINE
00418B 8935           16101         MOV.W   R3,R5
00418D 8924           16102         MOV.W   R2,R4
00418F C4rrrrrr       16103         FCALL   __UMODL
004193 8C0F02         16104         MOV.W   [R7+2],R0
                      16105 ; rs232cmd.c 4515                                       year = ( Calibration.UpdateDate / 10000);
                            
004196 B930           16107         MOV.W   R3,#00H
004198 99282710       16108         MOV.W   R2,#02710H
00419C 964842rr       16109         MOV.B   ES,#SEG( _Calibration+102 )
0041A0 9918rrrr       16110         MOV.W   R1,#SOF( _Calibration+102 )
0041A4 8B01           16111         MOV.W   R0,[R1+]
0041A6 8A11           16112         MOV.W   R1,[R1]
0041A8 C4rrrrrr       16113         FCALL   __UDIVL
0041AC 8A0F           16114         MOV.W   [R7],R0
                      16115 ; rs232cmd.c 4516       
                      16116 ; rs232cmd.c 4517                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
0041AE 91A8rr         16118         MOV.B   R5L,#SEG( __lc_bs )
0041B1 71BB           16119         XOR.B   R5H,R5H
0041B3 404706         16120         LEA     R4,R7+6
0041B6 8C0704         16121         MOV.W   R0,[R7+4]
0041B9 0F01           16122         PUSH.W  R0
0041BB 8C0704         16124         MOV.W   R0,[R7+4]
0041BE 0F01           16125         PUSH.W  R0
0041C0 8C0704         16127         MOV.W   R0,[R7+4]
0041C3 0F01           16128         PUSH.W  R0
0041C5 9918rrrr       16130         MOV.W   R1,#SEG( _183 )
0041C9 9908rrrr       16131         MOV.W   R0,#SOF( _183 )
0041CD 0F03           16132         PUSH.W  R0, R1
0041CF 8915           16134         MOV.W   R1,R5
0041D1 8904           16135         MOV.W   R0,R4
                      16136         CALL    _sprintf
0041D3 C4rrrrrr       +16136 ;       FCALL   _sprintf
0041D7 9970000A       16137         ADD.W   R7,#0AH
                      16139 ; rs232cmd.c 4518       
                      16140 ; rs232cmd.c 4519                                       rs232puts( buffer);
0041DB 8915           16142         MOV.W   R1,R5
0041DD 8904           16143         MOV.W   R0,R4
                      16144         CALL    _rs232puts
0041DF C4rrrrrr       +16144 ;       FCALL   _rs232puts
                      16145 ; rs232cmd.c 4520                               }
                      16146 ; rs232cmd.c 4521                       }
0041E3 FE5F           16148         BR      _1148
0041E3 FE5F00         16148         BR      _1148
0041E6                16149 _1138:
                      16150 ; rs232cmd.c 4522                       else
                      16151 ; rs232cmd.c 4523                       {
                      16152 ; rs232cmd.c 4524                               if ( !PasswordProtected)
0041E6 964842rr       16154         MOV.B   ES,#SEG( _PasswordProtected )
0041EA 9908rrrr       16155         MOV.W   R0,#SOF( _PasswordProtected )
0041EE 8A00           16156         MOV.W   R0,[R0]
0041F0 F258           16157         BNE     _1148
                      16158 ; rs232cmd.c 4525                               {
                      16159 ; rs232cmd.c 4526                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
0041F2 964842rr       16161         MOV.B   ES,#SEG( _ParCnt )
0041F6 9908rrrr       16162         MOV.W   R0,#SOF( _ParCnt )
0041FA 8200           16163         MOV.B   R0L,[R0]
0041FC 910403         16164         CMP.B   R0L,#03H
0041FF F21F           16165         BNE     _1139
004201 9168rr         16166         MOV.B   R3L,#SEG( __lc_bs )
004204 7177           16167         XOR.B   R3H,R3H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 264

ADDR   CODE            LINE SOURCELINE
004206 8927           16168         MOV.W   R2,R7
004208 91A8rr         16169         MOV.B   R5L,#SEG( __lc_bs )
00420B 71BB           16170         XOR.B   R5H,R5H
00420D 404702         16171         LEA     R4,R7+2
004210 9128rr         16172         MOV.B   R1L,#SEG( __lc_bs )
004213 7133           16173         XOR.B   R1H,R1H
004215 400704         16174         LEA     R0,R7+4
004218 0F03           16175         PUSH.W  R0, R1
00421A 0F30           16177         PUSH.W  R4, R5
00421C 0F0C           16179         PUSH.W  R2, R3
00421E 9938rrrr       16181         MOV.W   R3,#SEG( _1122 )
004222 9928rrrr       16182         MOV.W   R2,#SOF( _1122 )
004226 0F0C           16183         PUSH.W  R2, R3
004228 9918rrrr       16185         MOV.W   R1,#SEG( _Cmd )
00422C 9908rrrr       16186         MOV.W   R0,#SOF( _Cmd )
                      16187         CALL    _sscanf
004230 C4rrrrrr       +16187 ;       FCALL   _sscanf
004234 99700010       16188         ADD.W   R7,#010H
004238 99040003       16190         CMP.W   R0,#03H
00423C F306           16191         BEQ     _1140
00423C F306           16191         BEQ     _1140
00423E                16192 _1139:
                      16193 ; rs232cmd.c 4527                                               SCPIError = SyntaxErr;
00423E 964842rr       16195         MOV.B   ES,#SEG( _SCPIError )
004242 9908rrrr       16196         MOV.W   R0,#SOF( _SCPIError )
004246 BA03           16197         MOV.W   [R0],#03H
004248 FE2C           16198         BR      _1148
004248 FE2C           16198         BR      _1148
00424A                16199 _1140:
                      16200 ; rs232cmd.c 4528                                       else
                      16201 ; rs232cmd.c 4529                                       {
                      16202 ; rs232cmd.c 4530                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
00424A 8A07           16204         MOV.W   R0,[R7]
00424C 8C1702         16205         MOV.W   R1,[R7+2]
00424F 8C2704         16206         MOV.W   R2,[R7+4]
                      16207         CALL    _ValidateDate
004252 C4rrrrrr       +16207 ;       FCALL   _ValidateDate
004256 6900           16208         OR.W    R0,R0
004258 F207           16209         BNE     _1141
                      16210 ; rs232cmd.c 4531                                                       SCPIError = ExecErr;
00425A 964842rr       16212         MOV.B   ES,#SEG( _SCPIError )
00425E 9908rrrr       16213         MOV.W   R0,#SOF( _SCPIError )
004262 9A08001D       16214         MOV.W   [R0],#01DH
004266 FE1D           16215         BR      _1148
004266 FE1D           16215         BR      _1148
004268                16216 _1141:
                      16217 ; rs232cmd.c 4532                                               else
                      16218 ; rs232cmd.c 4533                                               {
                      16219 ; rs232cmd.c 4534                                                       Calibration.UpdateDate = 
                            day + 100*month + 10000*year;
004268 8C0702         16221         MOV.W   R0,[R7+2]
00426B E9000064       16222         MULU.W  R0,#064H
00426F 0C0704         16223         ADD.W   R0,[R7+4]
004272 8A27           16224         MOV.W   R2,[R7]
004274 E9202710       16225         MULU.W  R2,#02710H
004278 0902           16226         ADD.W   R0,R2
00427A B910           16227         MOVS.W  R1,#00H
00427C 964842rr       16228         MOV.B   ES,#SEG( _Calibration+102 )
004280 9928rrrr       16229         MOV.W   R2,#SOF( _Calibration+102 )
004284 8B0A           16230         MOV.W   [R2+],R0
004286 8A1A           16231         MOV.W   [R2],R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 265

ADDR   CODE            LINE SOURCELINE
                      16232 ; rs232cmd.c 4535                                               
                      16233 ; rs232cmd.c 4536                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004288 9918rrrr       16235         MOV.W   R1,#SEG( _Calibration )
00428C 9908rrrr       16236         MOV.W   R0,#SOF( _Calibration )
004290 964842rr       16237         MOV.B   ES,#SEG( _CalibrationPtr )
004294 9928rrrr       16238         MOV.W   R2,#SOF( _CalibrationPtr )
004298 8A22           16239         MOV.W   R2,[R2]
00429A 993800E0       16240         MOV.W   R3,#0E0H
                      16241         CALL    _NV_Store
00429E C4rrrrrr       +16241 ;       FCALL   _NV_Store
                      16242 ; rs232cmd.c 4537                                               }
                      16243 ; rs232cmd.c 4538                                       }                               
                      16244 ; rs232cmd.c 4539                               }
                      16245 ; rs232cmd.c 4540                       }
                      16246 ; rs232cmd.c 4541               }
0042A2                16248 _1148:
                      16249 ; rs232cmd.c 4542       }
0042A2 9970001A       16251         ADD.W   R7,#01AH
0042A6 2F30           16253         POP.W   R4, R5
0042A8 D680           16255         RET
                      16257 ; rs232cmd.c 4543       
                      16258 ; rs232cmd.c 4544       /************************************************************************
                            **/
                      16259 ; rs232cmd.c 4545       /* FactGenlockGenDate                                                    
                                                                                                                             
                                RS232CMD.C  */
                      16260 ; rs232cmd.c 4546       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16261 ; rs232cmd.c 4547       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      16262 ; rs232cmd.c 4548       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16263 ; rs232cmd.c 4549       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16264 ; rs232cmd.c 4550       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16265 ; rs232cmd.c 4551       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16266 ; rs232cmd.c 4552       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16267 ; rs232cmd.c 4553       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16268 ; rs232cmd.c 4554       /************************************************************************
                            **/
                      16269 ; rs232cmd.c 4555       void FactGenlockGenDate( void)
                      16270 ; rs232cmd.c 4556       {
                      16271         ALIGN   1
                      16273         PUBLIC  _FactGenlockGenDate
0042AA                16274 _FactGenlockGenDate:
0042AA 0F30           16278         PUSH.W  R4, R5
0042AC 9972001A       16280         SUB.W   R7,#01AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 266

ADDR   CODE            LINE SOURCELINE
                      16286 ; rs232cmd.c 4557               UI year, month, day;
                      16287 ; rs232cmd.c 4558               char buffer[20];
                      16288 ; rs232cmd.c 4559       
                      16289 ; rs232cmd.c 4560               if ( CmdExecute && !SCPIError)
0042B0 964842rr       16291         MOV.B   ES,#SEG( _CmdExecute )
0042B4 9908rrrr       16292         MOV.W   R0,#SOF( _CmdExecute )
0042B8 8200           16293         MOV.B   R0L,[R0]
                      16294         BEQ     _1162
0042BA F202           +16294 ;       BNE     _LG_1104
0042BC D500C7         +16294 ;       JMP.L   _1162
0042C0 D500C700       +16294 ;       JMP.L   _1162
0042C0                +16294 _LG_1104:
0042C0 964842rr       16295         MOV.B   ES,#SEG( _SCPIError )
0042C4 9908rrrr       16296         MOV.W   R0,#SOF( _SCPIError )
0042C8 8A00           16297         MOV.W   R0,[R0]
                      16298         BNE     _1162
0042CA F302           +16298 ;       BEQ     _LG_1106
0042CC D500BF         +16298 ;       JMP.L   _1162
0042D0 D500BF00       +16298 ;       JMP.L   _1162
0042D0                +16298 _LG_1106:
                      16299 ; rs232cmd.c 4561               {
                      16300 ; rs232cmd.c 4562                       if ( CmdRequest)
0042D0 964842rr       16302         MOV.B   ES,#SEG( _CmdRequest )
0042D4 9908rrrr       16303         MOV.W   R0,#SOF( _CmdRequest )
0042D8 8200           16304         MOV.B   R0L,[R0]
0042DA F35A           16305         BEQ     _1152
                      16306 ; rs232cmd.c 4563                       {
                      16307 ; rs232cmd.c 4564                               if ( ParCnt)
0042DC 964842rr       16309         MOV.B   ES,#SEG( _ParCnt )
0042E0 9908rrrr       16310         MOV.W   R0,#SOF( _ParCnt )
0042E4 8200           16311         MOV.B   R0L,[R0]
0042E6 F307           16312         BEQ     _1151
                      16313 ; rs232cmd.c 4565                                       SCPIError = SyntaxErr;
0042E8 964842rr       16315         MOV.B   ES,#SEG( _SCPIError )
0042EC 9908rrrr       16316         MOV.W   R0,#SOF( _SCPIError )
0042F0 BA03           16317         MOV.W   [R0],#03H
                      16318         BR      _1162
0042F2 D500AC         +16318         JMP.L   _1162
0042F2 D500AC00       +16318         JMP.L   _1162
0042F6                16319 _1151:
                      16320 ; rs232cmd.c 4566                               else
                      16321 ; rs232cmd.c 4567                               {
                      16322 ; rs232cmd.c 4568                                       day = Calibration.GenlockCalibration.Date
                             % 100;
0042F6 964842rr       16324         MOV.B   ES,#SEG( _Calibration+106 )
0042FA 9918rrrr       16325         MOV.W   R1,#SOF( _Calibration+106 )
0042FE 8B01           16326         MOV.W   R0,[R1+]
004300 8A11           16327         MOV.W   R1,[R1]
004302 B930           16328         MOV.W   R3,#00H
004304 99280064       16329         MOV.W   R2,#064H
004308 964842rr       16330         MOV.B   ES,#SEG( _Calibration+106 )
00430C 9948rrrr       16331         MOV.W   R4,#SOF( _Calibration+106 )
004310 8B0C           16332         MOV.W   [R4+],R0
004312 8A1C           16333         MOV.W   [R4],R1
004314 C4rrrrrr       16334         FCALL   __UMODL
004318 8C0F04         16335         MOV.W   [R7+4],R0
00431B 964842rr       16336         MOV.B   ES,#SEG( _Calibration+106 )
00431F 9918rrrr       16337         MOV.W   R1,#SOF( _Calibration+106 )
004323 8B01           16338         MOV.W   R0,[R1+]
004325 8A11           16339         MOV.W   R1,[R1]
                      16340 ; rs232cmd.c 4569                                       month = ( Calibration.GenlockCalibration.
                            Date / 100) % 100;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 267

ADDR   CODE            LINE SOURCELINE
004327 B930           16342         MOV.W   R3,#00H
004329 99280064       16343         MOV.W   R2,#064H
00432D 8953           16344         MOV.W   R5,R3
00432F 8942           16345         MOV.W   R4,R2
004331 C4rrrrrr       16346         FCALL   __UDIVL
004335 8935           16347         MOV.W   R3,R5
004337 8924           16348         MOV.W   R2,R4
004339 C4rrrrrr       16349         FCALL   __UMODL
00433D 8C0F02         16350         MOV.W   [R7+2],R0
                      16351 ; rs232cmd.c 4570                                       year = ( Calibration.GenlockCalibration.D
                            ate / 10000);
004340 B930           16353         MOV.W   R3,#00H
004342 99282710       16354         MOV.W   R2,#02710H
004346 964842rr       16355         MOV.B   ES,#SEG( _Calibration+106 )
00434A 9918rrrr       16356         MOV.W   R1,#SOF( _Calibration+106 )
00434E 8B01           16357         MOV.W   R0,[R1+]
004350 8A11           16358         MOV.W   R1,[R1]
004352 C4rrrrrr       16359         FCALL   __UDIVL
004356 8A0F           16360         MOV.W   [R7],R0
                      16361 ; rs232cmd.c 4571       
                      16362 ; rs232cmd.c 4572                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
004358 91A8rr         16364         MOV.B   R5L,#SEG( __lc_bs )
00435B 71BB           16365         XOR.B   R5H,R5H
00435D 404706         16366         LEA     R4,R7+6
004360 8C0704         16367         MOV.W   R0,[R7+4]
004363 0F01           16368         PUSH.W  R0
004365 8C0704         16370         MOV.W   R0,[R7+4]
004368 0F01           16371         PUSH.W  R0
00436A 8C0704         16373         MOV.W   R0,[R7+4]
00436D 0F01           16374         PUSH.W  R0
00436F 9918rrrr       16376         MOV.W   R1,#SEG( _183 )
004373 9908rrrr       16377         MOV.W   R0,#SOF( _183 )
004377 0F03           16378         PUSH.W  R0, R1
004379 8915           16380         MOV.W   R1,R5
00437B 8904           16381         MOV.W   R0,R4
                      16382         CALL    _sprintf
00437D C4rrrrrr       +16382 ;       FCALL   _sprintf
004381 9970000A       16383         ADD.W   R7,#0AH
                      16385 ; rs232cmd.c 4573       
                      16386 ; rs232cmd.c 4574                                       rs232puts( buffer);
004385 8915           16388         MOV.W   R1,R5
004387 8904           16389         MOV.W   R0,R4
                      16390         CALL    _rs232puts
004389 C4rrrrrr       +16390 ;       FCALL   _rs232puts
                      16391 ; rs232cmd.c 4575                               }
                      16392 ; rs232cmd.c 4576                       }
00438D FE5F           16394         BR      _1162
00438D FE5F00         16394         BR      _1162
004390                16395 _1152:
                      16396 ; rs232cmd.c 4577                       else
                      16397 ; rs232cmd.c 4578                       {
                      16398 ; rs232cmd.c 4579                               if ( !PasswordProtected)
004390 964842rr       16400         MOV.B   ES,#SEG( _PasswordProtected )
004394 9908rrrr       16401         MOV.W   R0,#SOF( _PasswordProtected )
004398 8A00           16402         MOV.W   R0,[R0]
00439A F258           16403         BNE     _1162
                      16404 ; rs232cmd.c 4580                               {
                      16405 ; rs232cmd.c 4581                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
00439C 964842rr       16407         MOV.B   ES,#SEG( _ParCnt )
0043A0 9908rrrr       16408         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 268

ADDR   CODE            LINE SOURCELINE
0043A4 8200           16409         MOV.B   R0L,[R0]
0043A6 910403         16410         CMP.B   R0L,#03H
0043A9 F21F           16411         BNE     _1153
0043AB 9168rr         16412         MOV.B   R3L,#SEG( __lc_bs )
0043AE 7177           16413         XOR.B   R3H,R3H
0043B0 8927           16414         MOV.W   R2,R7
0043B2 91A8rr         16415         MOV.B   R5L,#SEG( __lc_bs )
0043B5 71BB           16416         XOR.B   R5H,R5H
0043B7 404702         16417         LEA     R4,R7+2
0043BA 9128rr         16418         MOV.B   R1L,#SEG( __lc_bs )
0043BD 7133           16419         XOR.B   R1H,R1H
0043BF 400704         16420         LEA     R0,R7+4
0043C2 0F03           16421         PUSH.W  R0, R1
0043C4 0F30           16423         PUSH.W  R4, R5
0043C6 0F0C           16425         PUSH.W  R2, R3
0043C8 9938rrrr       16427         MOV.W   R3,#SEG( _1122 )
0043CC 9928rrrr       16428         MOV.W   R2,#SOF( _1122 )
0043D0 0F0C           16429         PUSH.W  R2, R3
0043D2 9918rrrr       16431         MOV.W   R1,#SEG( _Cmd )
0043D6 9908rrrr       16432         MOV.W   R0,#SOF( _Cmd )
                      16433         CALL    _sscanf
0043DA C4rrrrrr       +16433 ;       FCALL   _sscanf
0043DE 99700010       16434         ADD.W   R7,#010H
0043E2 99040003       16436         CMP.W   R0,#03H
0043E6 F306           16437         BEQ     _1154
0043E6 F306           16437         BEQ     _1154
0043E8                16438 _1153:
                      16439 ; rs232cmd.c 4582                                               SCPIError = SyntaxErr;
0043E8 964842rr       16441         MOV.B   ES,#SEG( _SCPIError )
0043EC 9908rrrr       16442         MOV.W   R0,#SOF( _SCPIError )
0043F0 BA03           16443         MOV.W   [R0],#03H
0043F2 FE2C           16444         BR      _1162
0043F2 FE2C           16444         BR      _1162
0043F4                16445 _1154:
                      16446 ; rs232cmd.c 4583                                       else
                      16447 ; rs232cmd.c 4584                                       {
                      16448 ; rs232cmd.c 4585                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0043F4 8A07           16450         MOV.W   R0,[R7]
0043F6 8C1702         16451         MOV.W   R1,[R7+2]
0043F9 8C2704         16452         MOV.W   R2,[R7+4]
                      16453         CALL    _ValidateDate
0043FC C4rrrrrr       +16453 ;       FCALL   _ValidateDate
004400 6900           16454         OR.W    R0,R0
004402 F207           16455         BNE     _1155
                      16456 ; rs232cmd.c 4586                                                       SCPIError = ExecErr;
004404 964842rr       16458         MOV.B   ES,#SEG( _SCPIError )
004408 9908rrrr       16459         MOV.W   R0,#SOF( _SCPIError )
00440C 9A08001D       16460         MOV.W   [R0],#01DH
004410 FE1D           16461         BR      _1162
004410 FE1D           16461         BR      _1162
004412                16462 _1155:
                      16463 ; rs232cmd.c 4587                                               else
                      16464 ; rs232cmd.c 4588                                               {
                      16465 ; rs232cmd.c 4589                                                       Calibration.GenlockCalibr
                            ation.Date = day + 100*month + 10000*year;
004412 8C0702         16467         MOV.W   R0,[R7+2]
004415 E9000064       16468         MULU.W  R0,#064H
004419 0C0704         16469         ADD.W   R0,[R7+4]
00441C 8A27           16470         MOV.W   R2,[R7]
00441E E9202710       16471         MULU.W  R2,#02710H
004422 0902           16472         ADD.W   R0,R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 269

ADDR   CODE            LINE SOURCELINE
004424 B910           16473         MOVS.W  R1,#00H
004426 964842rr       16474         MOV.B   ES,#SEG( _Calibration+106 )
00442A 9928rrrr       16475         MOV.W   R2,#SOF( _Calibration+106 )
00442E 8B0A           16476         MOV.W   [R2+],R0
004430 8A1A           16477         MOV.W   [R2],R1
                      16478 ; rs232cmd.c 4590                                               
                      16479 ; rs232cmd.c 4591                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004432 9918rrrr       16481         MOV.W   R1,#SEG( _Calibration )
004436 9908rrrr       16482         MOV.W   R0,#SOF( _Calibration )
00443A 964842rr       16483         MOV.B   ES,#SEG( _CalibrationPtr )
00443E 9928rrrr       16484         MOV.W   R2,#SOF( _CalibrationPtr )
004442 8A22           16485         MOV.W   R2,[R2]
004444 993800E0       16486         MOV.W   R3,#0E0H
                      16487         CALL    _NV_Store
004448 C4rrrrrr       +16487 ;       FCALL   _NV_Store
                      16488 ; rs232cmd.c 4592                                               }
                      16489 ; rs232cmd.c 4593                                       }                               
                      16490 ; rs232cmd.c 4594                               }
                      16491 ; rs232cmd.c 4595                       }
                      16492 ; rs232cmd.c 4596               }
00444C                16494 _1162:
                      16495 ; rs232cmd.c 4597       }
00444C 9970001A       16497         ADD.W   R7,#01AH
004450 2F30           16499         POP.W   R4, R5
004452 D680           16501         RET
                      16503 ; rs232cmd.c 4598       
                      16504 ; rs232cmd.c 4599       /************************************************************************
                            **/
                      16505 ; rs232cmd.c 4600       /* FactGenlockGenVersion                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      16506 ; rs232cmd.c 4601       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16507 ; rs232cmd.c 4602       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16508 ; rs232cmd.c 4603       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      16509 ; rs232cmd.c 4604       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16510 ; rs232cmd.c 4605       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16511 ; rs232cmd.c 4606       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16512 ; rs232cmd.c 4607       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16513 ; rs232cmd.c 4608       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16514 ; rs232cmd.c 4609       /************************************************************************
                            **/
                      16515 ; rs232cmd.c 4610       void FactGenlockGenVersion( void)
                      16516 ; rs232cmd.c 4611       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 270

ADDR   CODE            LINE SOURCELINE
                      16517         ALIGN   1
                      16519         PUBLIC  _FactGenlockGenVersion
004454                16520 _FactGenlockGenVersion:
004454 0F30           16524         PUSH.W  R4, R5
004456 9972000A       16526         SUB.W   R7,#0AH
                      16530 ; rs232cmd.c 4612               char result[10];
                      16531 ; rs232cmd.c 4613       
                      16532 ; rs232cmd.c 4614               if ( CmdExecute && !SCPIError)
00445A 964842rr       16534         MOV.B   ES,#SEG( _CmdExecute )
00445E 9908rrrr       16535         MOV.W   R0,#SOF( _CmdExecute )
004462 8200           16536         MOV.B   R0L,[R0]
004464 F337           16537         BEQ     _1172
004466 964842rr       16538         MOV.B   ES,#SEG( _SCPIError )
00446A 9908rrrr       16539         MOV.W   R0,#SOF( _SCPIError )
00446E 8A00           16540         MOV.W   R0,[R0]
004470 F231           16541         BNE     _1172
                      16542 ; rs232cmd.c 4615               {
                      16543 ; rs232cmd.c 4616                       if ( CmdRequest)
004472 964842rr       16545         MOV.B   ES,#SEG( _CmdRequest )
004476 9908rrrr       16546         MOV.W   R0,#SOF( _CmdRequest )
00447A 8200           16547         MOV.B   R0L,[R0]
00447C F326           16548         BEQ     _1167
                      16549 ; rs232cmd.c 4617                       {
                      16550 ; rs232cmd.c 4618                               if ( ParCnt)
00447E 964842rr       16552         MOV.B   ES,#SEG( _ParCnt )
004482 9908rrrr       16553         MOV.W   R0,#SOF( _ParCnt )
004486 8200           16554         MOV.B   R0L,[R0]
004488 F306           16555         BEQ     _1165
                      16556 ; rs232cmd.c 4619                                       SCPIError = SyntaxErr;
00448A 964842rr       16558         MOV.B   ES,#SEG( _SCPIError )
00448E 9908rrrr       16559         MOV.W   R0,#SOF( _SCPIError )
004492 BA03           16560         MOV.W   [R0],#03H
004494 FE1F           16561         BR      _1172
004494 FE1F           16561         BR      _1172
004496                16562 _1165:
                      16563 ; rs232cmd.c 4620                               else
                      16564 ; rs232cmd.c 4621                               {
                      16565 ; rs232cmd.c 4622                                       if ( GenlockVersion( result) == OK)
004496 91A8rr         16567         MOV.B   R5L,#SEG( __lc_bs )
004499 71BB           16568         XOR.B   R5H,R5H
00449B 8947           16569         MOV.W   R4,R7
00449D 8915           16570         MOV.W   R1,R5
00449F 8904           16571         MOV.W   R0,R4
                      16572         CALL    _GenlockVersion
0044A1 C4rrrrrr       +16572 ;       FCALL   _GenlockVersion
0044A5 9904FFFF       16573         CMP.W   R0,#0FFFFH
0044A9 F209           16574         BNE     _1166
                      16575 ; rs232cmd.c 4623                                       {
                      16576 ; rs232cmd.c 4624                                               rs232puts( result);
0044AB 8915           16578         MOV.W   R1,R5
0044AD 8904           16579         MOV.W   R0,R4
                      16580         CALL    _rs232puts
0044AF C4rrrrrr       +16580 ;       FCALL   _rs232puts
                      16581 ; rs232cmd.c 4625                                               rs232putchar( '\n');
0044B3 91080A         16583         MOV.B   R0L,#0AH
                      16584         CALL    _rs232putchar
0044B6 C4rrrrrr       +16584 ;       FCALL   _rs232putchar
                      16585 ; rs232cmd.c 4626                                       }
0044BA FE0C           16587         BR      _1172
0044BA FE0C           16587         BR      _1172
0044BC                16588 _1166:
                      16589 ; rs232cmd.c 4627                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 271

ADDR   CODE            LINE SOURCELINE
                      16590 ; rs232cmd.c 4628                                               SCPIError = ExecErr;             
                                    
0044BC 964842rr       16592         MOV.B   ES,#SEG( _SCPIError )
0044C0 9908rrrr       16593         MOV.W   R0,#SOF( _SCPIError )
0044C4 9A08001D       16594         MOV.W   [R0],#01DH
                      16595 ; rs232cmd.c 4629                               }
                      16596 ; rs232cmd.c 4630                       }
0044C8 FE05           16598         BR      _1172
0044C8 FE05           16598         BR      _1172
0044CA                16599 _1167:
                      16600 ; rs232cmd.c 4631                       else
                      16601 ; rs232cmd.c 4632                               SCPIError = SyntaxErr;
0044CA 964842rr       16603         MOV.B   ES,#SEG( _SCPIError )
0044CE 9908rrrr       16604         MOV.W   R0,#SOF( _SCPIError )
0044D2 BA03           16605         MOV.W   [R0],#03H
                      16606 ; rs232cmd.c 4633               }
0044D4                16608 _1172:
                      16609 ; rs232cmd.c 4634       }
0044D4 9970000A       16611         ADD.W   R7,#0AH
0044D8 2F30           16613         POP.W   R4, R5
0044DA D680           16615         RET
                      16617 ; rs232cmd.c 4635       
                      16618 ; rs232cmd.c 4636       /************************************************************************
                            **/
                      16619 ; rs232cmd.c 4637       /* FactGenlockGenFRefDate                                                
                                                                                                                         RS23
                            2CMD.C  */
                      16620 ; rs232cmd.c 4638       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16621 ; rs232cmd.c 4639       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16622 ; rs232cmd.c 4640       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      16623 ; rs232cmd.c 4641       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16624 ; rs232cmd.c 4642       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16625 ; rs232cmd.c 4643       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16626 ; rs232cmd.c 4644       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16627 ; rs232cmd.c 4645       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16628 ; rs232cmd.c 4646       /************************************************************************
                            **/
                      16629 ; rs232cmd.c 4647       void FactGenlockGenFRefDate( void)
                      16630 ; rs232cmd.c 4648       {
                      16631         ALIGN   1
                      16633         PUBLIC  _FactGenlockGenFRefDate
0044DC                16634 _FactGenlockGenFRefDate:
0044DC 0F30           16638         PUSH.W  R4, R5
0044DE 9972001A       16640         SUB.W   R7,#01AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 272

ADDR   CODE            LINE SOURCELINE
                      16646 ; rs232cmd.c 4649               UI year, month, day;
                      16647 ; rs232cmd.c 4650               char buffer[20];
                      16648 ; rs232cmd.c 4651       
                      16649 ; rs232cmd.c 4652               if ( CmdExecute && !SCPIError)
0044E2 964842rr       16651         MOV.B   ES,#SEG( _CmdExecute )
0044E6 9908rrrr       16652         MOV.W   R0,#SOF( _CmdExecute )
0044EA 8200           16653         MOV.B   R0L,[R0]
                      16654         BEQ     _1187
0044EC F202           +16654 ;       BNE     _LG_1130
0044EE D500C7         +16654 ;       JMP.L   _1187
0044F2 D500C700       +16654 ;       JMP.L   _1187
0044F2                +16654 _LG_1130:
0044F2 964842rr       16655         MOV.B   ES,#SEG( _SCPIError )
0044F6 9908rrrr       16656         MOV.W   R0,#SOF( _SCPIError )
0044FA 8A00           16657         MOV.W   R0,[R0]
                      16658         BNE     _1187
0044FC F302           +16658 ;       BEQ     _LG_1132
0044FE D500BF         +16658 ;       JMP.L   _1187
004502 D500BF00       +16658 ;       JMP.L   _1187
004502                +16658 _LG_1132:
                      16659 ; rs232cmd.c 4653               {
                      16660 ; rs232cmd.c 4654                       if ( CmdRequest)
004502 964842rr       16662         MOV.B   ES,#SEG( _CmdRequest )
004506 9908rrrr       16663         MOV.W   R0,#SOF( _CmdRequest )
00450A 8200           16664         MOV.B   R0L,[R0]
00450C F35A           16665         BEQ     _1177
                      16666 ; rs232cmd.c 4655                       {
                      16667 ; rs232cmd.c 4656                               if ( ParCnt)
00450E 964842rr       16669         MOV.B   ES,#SEG( _ParCnt )
004512 9908rrrr       16670         MOV.W   R0,#SOF( _ParCnt )
004516 8200           16671         MOV.B   R0L,[R0]
004518 F307           16672         BEQ     _1176
                      16673 ; rs232cmd.c 4657                                       SCPIError = SyntaxErr;
00451A 964842rr       16675         MOV.B   ES,#SEG( _SCPIError )
00451E 9908rrrr       16676         MOV.W   R0,#SOF( _SCPIError )
004522 BA03           16677         MOV.W   [R0],#03H
                      16678         BR      _1187
004524 D500AC         +16678         JMP.L   _1187
004524 D500AC00       +16678         JMP.L   _1187
004528                16679 _1176:
                      16680 ; rs232cmd.c 4658                               else
                      16681 ; rs232cmd.c 4659                               {
                      16682 ; rs232cmd.c 4660                                       day = Calibration.GenlockCalibration.DACF
                            actDate % 100;
004528 964842rr       16684         MOV.B   ES,#SEG( _Calibration+110 )
00452C 9918rrrr       16685         MOV.W   R1,#SOF( _Calibration+110 )
004530 8B01           16686         MOV.W   R0,[R1+]
004532 8A11           16687         MOV.W   R1,[R1]
004534 B930           16688         MOV.W   R3,#00H
004536 99280064       16689         MOV.W   R2,#064H
00453A 964842rr       16690         MOV.B   ES,#SEG( _Calibration+110 )
00453E 9948rrrr       16691         MOV.W   R4,#SOF( _Calibration+110 )
004542 8B0C           16692         MOV.W   [R4+],R0
004544 8A1C           16693         MOV.W   [R4],R1
004546 C4rrrrrr       16694         FCALL   __UMODL
00454A 8C0F04         16695         MOV.W   [R7+4],R0
00454D 964842rr       16696         MOV.B   ES,#SEG( _Calibration+110 )
004551 9918rrrr       16697         MOV.W   R1,#SOF( _Calibration+110 )
004555 8B01           16698         MOV.W   R0,[R1+]
004557 8A11           16699         MOV.W   R1,[R1]
                      16700 ; rs232cmd.c 4661                                       month = ( Calibration.GenlockCalibration.
                            DACFactDate / 100) % 100;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 273

ADDR   CODE            LINE SOURCELINE
004559 B930           16702         MOV.W   R3,#00H
00455B 99280064       16703         MOV.W   R2,#064H
00455F 8953           16704         MOV.W   R5,R3
004561 8942           16705         MOV.W   R4,R2
004563 C4rrrrrr       16706         FCALL   __UDIVL
004567 8935           16707         MOV.W   R3,R5
004569 8924           16708         MOV.W   R2,R4
00456B C4rrrrrr       16709         FCALL   __UMODL
00456F 8C0F02         16710         MOV.W   [R7+2],R0
                      16711 ; rs232cmd.c 4662                                       year = ( Calibration.GenlockCalibration.D
                            ACFactDate / 10000);
004572 B930           16713         MOV.W   R3,#00H
004574 99282710       16714         MOV.W   R2,#02710H
004578 964842rr       16715         MOV.B   ES,#SEG( _Calibration+110 )
00457C 9918rrrr       16716         MOV.W   R1,#SOF( _Calibration+110 )
004580 8B01           16717         MOV.W   R0,[R1+]
004582 8A11           16718         MOV.W   R1,[R1]
004584 C4rrrrrr       16719         FCALL   __UDIVL
004588 8A0F           16720         MOV.W   [R7],R0
                      16721 ; rs232cmd.c 4663       
                      16722 ; rs232cmd.c 4664                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
00458A 91A8rr         16724         MOV.B   R5L,#SEG( __lc_bs )
00458D 71BB           16725         XOR.B   R5H,R5H
00458F 404706         16726         LEA     R4,R7+6
004592 8C0704         16727         MOV.W   R0,[R7+4]
004595 0F01           16728         PUSH.W  R0
004597 8C0704         16730         MOV.W   R0,[R7+4]
00459A 0F01           16731         PUSH.W  R0
00459C 8C0704         16733         MOV.W   R0,[R7+4]
00459F 0F01           16734         PUSH.W  R0
0045A1 9918rrrr       16736         MOV.W   R1,#SEG( _1174 )
0045A5 9908rrrr       16737         MOV.W   R0,#SOF( _1174 )
0045A9 0F03           16738         PUSH.W  R0, R1
0045AB 8915           16740         MOV.W   R1,R5
0045AD 8904           16741         MOV.W   R0,R4
                      16742         CALL    _sprintf
0045AF C4rrrrrr       +16742 ;       FCALL   _sprintf
0045B3 9970000A       16743         ADD.W   R7,#0AH
                      16745 ; rs232cmd.c 4665       
                      16746 ; rs232cmd.c 4666                                       rs232puts( buffer);
0045B7 8915           16748         MOV.W   R1,R5
0045B9 8904           16749         MOV.W   R0,R4
                      16750         CALL    _rs232puts
0045BB C4rrrrrr       +16750 ;       FCALL   _rs232puts
                      16751 ; rs232cmd.c 4667                               }
                      16752 ; rs232cmd.c 4668                       }
0045BF FE5F           16754         BR      _1187
0045BF FE5F00         16754         BR      _1187
0045C2                16755 _1177:
                      16756 ; rs232cmd.c 4669                       else
                      16757 ; rs232cmd.c 4670                       {
                      16758 ; rs232cmd.c 4671                               if ( !PasswordProtected)
0045C2 964842rr       16760         MOV.B   ES,#SEG( _PasswordProtected )
0045C6 9908rrrr       16761         MOV.W   R0,#SOF( _PasswordProtected )
0045CA 8A00           16762         MOV.W   R0,[R0]
0045CC F258           16763         BNE     _1187
                      16764 ; rs232cmd.c 4672                               {
                      16765 ; rs232cmd.c 4673                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
0045CE 964842rr       16767         MOV.B   ES,#SEG( _ParCnt )
0045D2 9908rrrr       16768         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 274

ADDR   CODE            LINE SOURCELINE
0045D6 8200           16769         MOV.B   R0L,[R0]
0045D8 910403         16770         CMP.B   R0L,#03H
0045DB F21F           16771         BNE     _1178
0045DD 9168rr         16772         MOV.B   R3L,#SEG( __lc_bs )
0045E0 7177           16773         XOR.B   R3H,R3H
0045E2 8927           16774         MOV.W   R2,R7
0045E4 91A8rr         16775         MOV.B   R5L,#SEG( __lc_bs )
0045E7 71BB           16776         XOR.B   R5H,R5H
0045E9 404702         16777         LEA     R4,R7+2
0045EC 9128rr         16778         MOV.B   R1L,#SEG( __lc_bs )
0045EF 7133           16779         XOR.B   R1H,R1H
0045F1 400704         16780         LEA     R0,R7+4
0045F4 0F03           16781         PUSH.W  R0, R1
0045F6 0F30           16783         PUSH.W  R4, R5
0045F8 0F0C           16785         PUSH.W  R2, R3
0045FA 9938rrrr       16787         MOV.W   R3,#SEG( _1175 )
0045FE 9928rrrr       16788         MOV.W   R2,#SOF( _1175 )
004602 0F0C           16789         PUSH.W  R2, R3
004604 9918rrrr       16791         MOV.W   R1,#SEG( _Cmd )
004608 9908rrrr       16792         MOV.W   R0,#SOF( _Cmd )
                      16793         CALL    _sscanf
00460C C4rrrrrr       +16793 ;       FCALL   _sscanf
004610 99700010       16794         ADD.W   R7,#010H
004614 99040003       16796         CMP.W   R0,#03H
004618 F306           16797         BEQ     _1179
004618 F306           16797         BEQ     _1179
00461A                16798 _1178:
                      16799 ; rs232cmd.c 4674                                               SCPIError = SyntaxErr;
00461A 964842rr       16801         MOV.B   ES,#SEG( _SCPIError )
00461E 9908rrrr       16802         MOV.W   R0,#SOF( _SCPIError )
004622 BA03           16803         MOV.W   [R0],#03H
004624 FE2C           16804         BR      _1187
004624 FE2C           16804         BR      _1187
004626                16805 _1179:
                      16806 ; rs232cmd.c 4675                                       else
                      16807 ; rs232cmd.c 4676                                       {
                      16808 ; rs232cmd.c 4677                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004626 8A07           16810         MOV.W   R0,[R7]
004628 8C1702         16811         MOV.W   R1,[R7+2]
00462B 8C2704         16812         MOV.W   R2,[R7+4]
                      16813         CALL    _ValidateDate
00462E C4rrrrrr       +16813 ;       FCALL   _ValidateDate
004632 6900           16814         OR.W    R0,R0
004634 F207           16815         BNE     _1180
                      16816 ; rs232cmd.c 4678                                                       SCPIError = ExecErr;
004636 964842rr       16818         MOV.B   ES,#SEG( _SCPIError )
00463A 9908rrrr       16819         MOV.W   R0,#SOF( _SCPIError )
00463E 9A08001D       16820         MOV.W   [R0],#01DH
004642 FE1D           16821         BR      _1187
004642 FE1D           16821         BR      _1187
004644                16822 _1180:
                      16823 ; rs232cmd.c 4679                                               else
                      16824 ; rs232cmd.c 4680                                               {
                      16825 ; rs232cmd.c 4681                                                       Calibration.GenlockCalibr
                            ation.DACFactDate = day + 100*month + 10000*year;
004644 8C0702         16827         MOV.W   R0,[R7+2]
004647 E9000064       16828         MULU.W  R0,#064H
00464B 0C0704         16829         ADD.W   R0,[R7+4]
00464E 8A27           16830         MOV.W   R2,[R7]
004650 E9202710       16831         MULU.W  R2,#02710H
004654 0902           16832         ADD.W   R0,R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 275

ADDR   CODE            LINE SOURCELINE
004656 B910           16833         MOVS.W  R1,#00H
004658 964842rr       16834         MOV.B   ES,#SEG( _Calibration+110 )
00465C 9928rrrr       16835         MOV.W   R2,#SOF( _Calibration+110 )
004660 8B0A           16836         MOV.W   [R2+],R0
004662 8A1A           16837         MOV.W   [R2],R1
                      16838 ; rs232cmd.c 4682                                               
                      16839 ; rs232cmd.c 4683                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004664 9918rrrr       16841         MOV.W   R1,#SEG( _Calibration )
004668 9908rrrr       16842         MOV.W   R0,#SOF( _Calibration )
00466C 964842rr       16843         MOV.B   ES,#SEG( _CalibrationPtr )
004670 9928rrrr       16844         MOV.W   R2,#SOF( _CalibrationPtr )
004674 8A22           16845         MOV.W   R2,[R2]
004676 993800E0       16846         MOV.W   R3,#0E0H
                      16847         CALL    _NV_Store
00467A C4rrrrrr       +16847 ;       FCALL   _NV_Store
                      16848 ; rs232cmd.c 4684                                               }
                      16849 ; rs232cmd.c 4685                                       }                               
                      16850 ; rs232cmd.c 4686                               }
                      16851 ; rs232cmd.c 4687                       }
                      16852 ; rs232cmd.c 4688               }
00467E                16854 _1187:
                      16855 ; rs232cmd.c 4689       }
00467E 9970001A       16857         ADD.W   R7,#01AH
004682 2F30           16859         POP.W   R4, R5
004684 D680           16861         RET
                      16863 ; rs232cmd.c 4690       
                      16864 ; rs232cmd.c 4691       /************************************************************************
                            **/
                      16865 ; rs232cmd.c 4692       /* FactGenlockGenFRefDAC                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      16866 ; rs232cmd.c 4693       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16867 ; rs232cmd.c 4694       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      16868 ; rs232cmd.c 4695       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      16869 ; rs232cmd.c 4696       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      16870 ; rs232cmd.c 4697       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      16871 ; rs232cmd.c 4698       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      16872 ; rs232cmd.c 4699       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      16873 ; rs232cmd.c 4700       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      16874 ; rs232cmd.c 4701       /************************************************************************
                            **/
                      16875 ; rs232cmd.c 4702       void FactGenlockGenFRefDAC( void)
                      16876 ; rs232cmd.c 4703       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 276

ADDR   CODE            LINE SOURCELINE
                      16877         ALIGN   1
                      16879         PUBLIC  _FactGenlockGenFRefDAC
004686                16880 _FactGenlockGenFRefDAC:
004686 0F30           16884         PUSH.W  R4, R5
004688 99720016       16886         SUB.W   R7,#016H
                      16890 ; rs232cmd.c 4704               char buffer[20];
                      16891 ; rs232cmd.c 4705               UI DACValue;
                      16892 ; rs232cmd.c 4706       
                      16893 ; rs232cmd.c 4707               if ( CmdExecute && !SCPIError)
00468C 964842rr       16895         MOV.B   ES,#SEG( _CmdExecute )
004690 9908rrrr       16896         MOV.W   R0,#SOF( _CmdExecute )
004694 8200           16897         MOV.B   R0L,[R0]
004696 F36E           16898         BEQ     _1200
004698 964842rr       16899         MOV.B   ES,#SEG( _SCPIError )
00469C 9908rrrr       16900         MOV.W   R0,#SOF( _SCPIError )
0046A0 8A00           16901         MOV.W   R0,[R0]
0046A2 F268           16902         BNE     _1200
                      16903 ; rs232cmd.c 4708               {
                      16904 ; rs232cmd.c 4709                       if ( CmdRequest)
0046A4 964842rr       16906         MOV.B   ES,#SEG( _CmdRequest )
0046A8 9908rrrr       16907         MOV.W   R0,#SOF( _CmdRequest )
0046AC 8200           16908         MOV.B   R0L,[R0]
0046AE F325           16909         BEQ     _1192
                      16910 ; rs232cmd.c 4710                       {
                      16911 ; rs232cmd.c 4711                               if ( ParCnt)
0046B0 964842rr       16913         MOV.B   ES,#SEG( _ParCnt )
0046B4 9908rrrr       16914         MOV.W   R0,#SOF( _ParCnt )
0046B8 8200           16915         MOV.B   R0L,[R0]
0046BA F306           16916         BEQ     _1191
                      16917 ; rs232cmd.c 4712                                       SCPIError = SyntaxErr;
0046BC 964842rr       16919         MOV.B   ES,#SEG( _SCPIError )
0046C0 9908rrrr       16920         MOV.W   R0,#SOF( _SCPIError )
0046C4 BA03           16921         MOV.W   [R0],#03H
0046C6 FE56           16922         BR      _1200
0046C6 FE56           16922         BR      _1200
0046C8                16923 _1191:
                      16924 ; rs232cmd.c 4713                               else
                      16925 ; rs232cmd.c 4714                               {
                      16926 ; rs232cmd.c 4715                                       sprintf( buffer, "%u\n", Calibration.Genl
                            ockCalibration.DACFactValue);
0046C8 91A8rr         16928         MOV.B   R5L,#SEG( __lc_bs )
0046CB 71BB           16929         XOR.B   R5H,R5H
0046CD 8947           16930         MOV.W   R4,R7
0046CF 964842rr       16931         MOV.B   ES,#SEG( _Calibration+118 )
0046D3 9908rrrr       16932         MOV.W   R0,#SOF( _Calibration+118 )
0046D7 8A00           16933         MOV.W   R0,[R0]
0046D9 0F01           16934         PUSH.W  R0
0046DB 9918rrrr       16936         MOV.W   R1,#SEG( _1013 )
0046DF 9908rrrr       16937         MOV.W   R0,#SOF( _1013 )
0046E3 0F03           16938         PUSH.W  R0, R1
0046E5 8915           16940         MOV.W   R1,R5
0046E7 8904           16941         MOV.W   R0,R4
                      16942         CALL    _sprintf
0046E9 C4rrrrrr       +16942 ;       FCALL   _sprintf
0046ED A976           16943         ADDS.W  R7,#06H
                      16945 ; rs232cmd.c 4716       
                      16946 ; rs232cmd.c 4717                                       rs232puts( buffer);
0046EF 8915           16948         MOV.W   R1,R5
0046F1 8904           16949         MOV.W   R0,R4
                      16950         CALL    _rs232puts
0046F3 C4rrrrrr       +16950 ;       FCALL   _rs232puts
                      16951 ; rs232cmd.c 4718                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 277

ADDR   CODE            LINE SOURCELINE
                      16952 ; rs232cmd.c 4719                       }
0046F7 FE3E           16954         BR      _1200
0046F7 FE3E00         16954         BR      _1200
0046FA                16955 _1192:
                      16956 ; rs232cmd.c 4720                       else
                      16957 ; rs232cmd.c 4721                       {
                      16958 ; rs232cmd.c 4722                               if ( !PasswordProtected)
0046FA 964842rr       16960         MOV.B   ES,#SEG( _PasswordProtected )
0046FE 9908rrrr       16961         MOV.W   R0,#SOF( _PasswordProtected )
004702 8A00           16962         MOV.W   R0,[R0]
004704 F237           16963         BNE     _1200
                      16964 ; rs232cmd.c 4723                               {
                      16965 ; rs232cmd.c 4724                                       if (( ParCnt != 1) || (( sscanf( Cmd, "%u
                            ", &DACValue)) != 1))
004706 964842rr       16967         MOV.B   ES,#SEG( _ParCnt )
00470A 9908rrrr       16968         MOV.W   R0,#SOF( _ParCnt )
00470E 8200           16969         MOV.B   R0L,[R0]
004710 910401         16970         CMP.B   R0L,#01H
004713 F216           16971         BNE     _1193
004715 9918rrrr       16972         MOV.W   R1,#SEG( _Cmd )
004719 9908rrrr       16973         MOV.W   R0,#SOF( _Cmd )
00471D 9168rr         16974         MOV.B   R3L,#SEG( __lc_bs )
004720 7177           16975         XOR.B   R3H,R3H
004722 402714         16976         LEA     R2,R7+20
004725 0F0C           16977         PUSH.W  R2, R3
004727 9938rrrr       16979         MOV.W   R3,#SEG( _1190 )
00472B 9928rrrr       16980         MOV.W   R2,#SOF( _1190 )
00472F 0F0C           16981         PUSH.W  R2, R3
                      16983         CALL    _sscanf
004731 C4rrrrrr       +16983 ;       FCALL   _sscanf
004735 99700008       16984         ADD.W   R7,#08H
004739 99040001       16986         CMP.W   R0,#01H
00473D F307           16987         BEQ     _1194
00473D F30700         16987         BEQ     _1194
004740                16988 _1193:
                      16989 ; rs232cmd.c 4725                                               SCPIError = SyntaxErr;
004740 964842rr       16991         MOV.B   ES,#SEG( _SCPIError )
004744 9908rrrr       16992         MOV.W   R0,#SOF( _SCPIError )
004748 BA03           16993         MOV.W   [R0],#03H
00474A FE14           16994         BR      _1200
00474A FE14           16994         BR      _1200
00474C                16995 _1194:
                      16996 ; rs232cmd.c 4726                                       else
                      16997 ; rs232cmd.c 4727                                       {
                      16998 ; rs232cmd.c 4728                                               Calibration.GenlockCalibration.DA
                            CFactValue = DACValue;
00474C 8C0714         17000         MOV.W   R0,[R7+20]
00474F 964842rr       17001         MOV.B   ES,#SEG( _Calibration+118 )
004753 9918rrrr       17002         MOV.W   R1,#SOF( _Calibration+118 )
004757 8A09           17003         MOV.W   [R1],R0
                      17004 ; rs232cmd.c 4729                                                               
                      17005 ; rs232cmd.c 4730                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004759 9918rrrr       17007         MOV.W   R1,#SEG( _Calibration )
00475D 9908rrrr       17008         MOV.W   R0,#SOF( _Calibration )
004761 964842rr       17009         MOV.B   ES,#SEG( _CalibrationPtr )
004765 9928rrrr       17010         MOV.W   R2,#SOF( _CalibrationPtr )
004769 8A22           17011         MOV.W   R2,[R2]
00476B 993800E0       17012         MOV.W   R3,#0E0H
                      17013         CALL    _NV_Store
00476F C4rrrrrr       +17013 ;       FCALL   _NV_Store
                      17014 ; rs232cmd.c 4731                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 278

ADDR   CODE            LINE SOURCELINE
                      17015 ; rs232cmd.c 4732                               }
                      17016 ; rs232cmd.c 4733                       }
                      17017 ; rs232cmd.c 4734               }
004774                17019 _1200:
                      17020 ; rs232cmd.c 4735       }
004774 99700016       17022         ADD.W   R7,#016H
004778 2F30           17024         POP.W   R4, R5
00477A D680           17026         RET
                      17028 ; rs232cmd.c 4736       
                      17029 ; rs232cmd.c 4737       /************************************************************************
                            **/
                      17030 ; rs232cmd.c 4738       /* FactGenlockGenURefDate                                                
                                                                                                                         RS23
                            2CMD.C  */
                      17031 ; rs232cmd.c 4739       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17032 ; rs232cmd.c 4740       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      17033 ; rs232cmd.c 4741       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17034 ; rs232cmd.c 4742       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17035 ; rs232cmd.c 4743       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17036 ; rs232cmd.c 4744       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17037 ; rs232cmd.c 4745       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17038 ; rs232cmd.c 4746       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17039 ; rs232cmd.c 4747       /************************************************************************
                            **/
                      17040 ; rs232cmd.c 4748       void FactGenlockGenURefDate( void)
                      17041 ; rs232cmd.c 4749       {
                      17042         ALIGN   1
                      17044         PUBLIC  _FactGenlockGenURefDate
00477C                17045 _FactGenlockGenURefDate:
00477C 0F30           17049         PUSH.W  R4, R5
00477E 9972001A       17051         SUB.W   R7,#01AH
                      17057 ; rs232cmd.c 4750               UI year, month, day;
                      17058 ; rs232cmd.c 4751               char buffer[20];
                      17059 ; rs232cmd.c 4752       
                      17060 ; rs232cmd.c 4753               if ( CmdExecute && !SCPIError)
004782 964842rr       17062         MOV.B   ES,#SEG( _CmdExecute )
004786 9908rrrr       17063         MOV.W   R0,#SOF( _CmdExecute )
00478A 8200           17064         MOV.B   R0L,[R0]
                      17065         BEQ     _1213
00478C F202           +17065 ;       BNE     _LG_1160
00478E D500C1         +17065 ;       JMP.L   _1213
004792 D500C100       +17065 ;       JMP.L   _1213
004792                +17065 _LG_1160:
004792 964842rr       17066         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 279

ADDR   CODE            LINE SOURCELINE
004796 9908rrrr       17067         MOV.W   R0,#SOF( _SCPIError )
00479A 8A00           17068         MOV.W   R0,[R0]
                      17069         BNE     _1213
00479C F302           +17069 ;       BEQ     _LG_1162
00479E D500B9         +17069 ;       JMP.L   _1213
0047A2 D500B900       +17069 ;       JMP.L   _1213
0047A2                +17069 _LG_1162:
                      17070 ; rs232cmd.c 4754               {
                      17071 ; rs232cmd.c 4755                       if ( CmdRequest)
0047A2 964842rr       17073         MOV.B   ES,#SEG( _CmdRequest )
0047A6 9908rrrr       17074         MOV.W   R0,#SOF( _CmdRequest )
0047AA 8200           17075         MOV.B   R0L,[R0]
0047AC F35A           17076         BEQ     _1204
                      17077 ; rs232cmd.c 4756                       {
                      17078 ; rs232cmd.c 4757                               if ( ParCnt)
0047AE 964842rr       17080         MOV.B   ES,#SEG( _ParCnt )
0047B2 9908rrrr       17081         MOV.W   R0,#SOF( _ParCnt )
0047B6 8200           17082         MOV.B   R0L,[R0]
0047B8 F307           17083         BEQ     _1203
                      17084 ; rs232cmd.c 4758                                       SCPIError = SyntaxErr;
0047BA 964842rr       17086         MOV.B   ES,#SEG( _SCPIError )
0047BE 9908rrrr       17087         MOV.W   R0,#SOF( _SCPIError )
0047C2 BA03           17088         MOV.W   [R0],#03H
                      17089         BR      _1213
0047C4 D500A6         +17089         JMP.L   _1213
0047C4 D500A600       +17089         JMP.L   _1213
0047C8                17090 _1203:
                      17091 ; rs232cmd.c 4759                               else
                      17092 ; rs232cmd.c 4760                               {
                      17093 ; rs232cmd.c 4761                                       day = Calibration.GenlockCalibration.DACU
                            serDate % 100;
0047C8 964842rr       17095         MOV.B   ES,#SEG( _Calibration+114 )
0047CC 9918rrrr       17096         MOV.W   R1,#SOF( _Calibration+114 )
0047D0 8B01           17097         MOV.W   R0,[R1+]
0047D2 8A11           17098         MOV.W   R1,[R1]
0047D4 B930           17099         MOV.W   R3,#00H
0047D6 99280064       17100         MOV.W   R2,#064H
0047DA 964842rr       17101         MOV.B   ES,#SEG( _Calibration+114 )
0047DE 9948rrrr       17102         MOV.W   R4,#SOF( _Calibration+114 )
0047E2 8B0C           17103         MOV.W   [R4+],R0
0047E4 8A1C           17104         MOV.W   [R4],R1
0047E6 C4rrrrrr       17105         FCALL   __UMODL
0047EA 8C0F04         17106         MOV.W   [R7+4],R0
0047ED 964842rr       17107         MOV.B   ES,#SEG( _Calibration+114 )
0047F1 9918rrrr       17108         MOV.W   R1,#SOF( _Calibration+114 )
0047F5 8B01           17109         MOV.W   R0,[R1+]
0047F7 8A11           17110         MOV.W   R1,[R1]
                      17111 ; rs232cmd.c 4762                                       month = ( Calibration.GenlockCalibration.
                            DACUserDate / 100) % 100;
0047F9 B930           17113         MOV.W   R3,#00H
0047FB 99280064       17114         MOV.W   R2,#064H
0047FF 8953           17115         MOV.W   R5,R3
004801 8942           17116         MOV.W   R4,R2
004803 C4rrrrrr       17117         FCALL   __UDIVL
004807 8935           17118         MOV.W   R3,R5
004809 8924           17119         MOV.W   R2,R4
00480B C4rrrrrr       17120         FCALL   __UMODL
00480F 8C0F02         17121         MOV.W   [R7+2],R0
                      17122 ; rs232cmd.c 4763                                       year = ( Calibration.GenlockCalibration.D
                            ACUserDate / 10000);
004812 B930           17124         MOV.W   R3,#00H
004814 99282710       17125         MOV.W   R2,#02710H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 280

ADDR   CODE            LINE SOURCELINE
004818 964842rr       17126         MOV.B   ES,#SEG( _Calibration+114 )
00481C 9918rrrr       17127         MOV.W   R1,#SOF( _Calibration+114 )
004820 8B01           17128         MOV.W   R0,[R1+]
004822 8A11           17129         MOV.W   R1,[R1]
004824 C4rrrrrr       17130         FCALL   __UDIVL
004828 8A0F           17131         MOV.W   [R7],R0
                      17132 ; rs232cmd.c 4764       
                      17133 ; rs232cmd.c 4765                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
00482A 91A8rr         17135         MOV.B   R5L,#SEG( __lc_bs )
00482D 71BB           17136         XOR.B   R5H,R5H
00482F 404706         17137         LEA     R4,R7+6
004832 8C0704         17138         MOV.W   R0,[R7+4]
004835 0F01           17139         PUSH.W  R0
004837 8C0704         17141         MOV.W   R0,[R7+4]
00483A 0F01           17142         PUSH.W  R0
00483C 8C0704         17144         MOV.W   R0,[R7+4]
00483F 0F01           17145         PUSH.W  R0
004841 9918rrrr       17147         MOV.W   R1,#SEG( _1174 )
004845 9908rrrr       17148         MOV.W   R0,#SOF( _1174 )
004849 0F03           17149         PUSH.W  R0, R1
00484B 8915           17151         MOV.W   R1,R5
00484D 8904           17152         MOV.W   R0,R4
                      17153         CALL    _sprintf
00484F C4rrrrrr       +17153 ;       FCALL   _sprintf
004853 9970000A       17154         ADD.W   R7,#0AH
                      17156 ; rs232cmd.c 4766       
                      17157 ; rs232cmd.c 4767                                       rs232puts( buffer);
004857 8915           17159         MOV.W   R1,R5
004859 8904           17160         MOV.W   R0,R4
                      17161         CALL    _rs232puts
00485B C4rrrrrr       +17161 ;       FCALL   _rs232puts
                      17162 ; rs232cmd.c 4768                               }
                      17163 ; rs232cmd.c 4769                       }
00485F FE59           17165         BR      _1213
00485F FE5900         17165         BR      _1213
004862                17166 _1204:
                      17167 ; rs232cmd.c 4770                       else
                      17168 ; rs232cmd.c 4771                       {
                      17169 ; rs232cmd.c 4772                               if (( ParCnt != 3) || (( sscanf( Cmd, "%u,%u,%u",
                             &year, &month, &day)) != 3))
004862 964842rr       17171         MOV.B   ES,#SEG( _ParCnt )
004866 9908rrrr       17172         MOV.W   R0,#SOF( _ParCnt )
00486A 8200           17173         MOV.B   R0L,[R0]
00486C 910403         17174         CMP.B   R0L,#03H
00486F F21F           17175         BNE     _1205
004871 9168rr         17176         MOV.B   R3L,#SEG( __lc_bs )
004874 7177           17177         XOR.B   R3H,R3H
004876 8927           17178         MOV.W   R2,R7
004878 91A8rr         17179         MOV.B   R5L,#SEG( __lc_bs )
00487B 71BB           17180         XOR.B   R5H,R5H
00487D 404702         17181         LEA     R4,R7+2
004880 9128rr         17182         MOV.B   R1L,#SEG( __lc_bs )
004883 7133           17183         XOR.B   R1H,R1H
004885 400704         17184         LEA     R0,R7+4
004888 0F03           17185         PUSH.W  R0, R1
00488A 0F30           17187         PUSH.W  R4, R5
00488C 0F0C           17189         PUSH.W  R2, R3
00488E 9938rrrr       17191         MOV.W   R3,#SEG( _1175 )
004892 9928rrrr       17192         MOV.W   R2,#SOF( _1175 )
004896 0F0C           17193         PUSH.W  R2, R3
004898 9918rrrr       17195         MOV.W   R1,#SEG( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 281

ADDR   CODE            LINE SOURCELINE
00489C 9908rrrr       17196         MOV.W   R0,#SOF( _Cmd )
                      17197         CALL    _sscanf
0048A0 C4rrrrrr       +17197 ;       FCALL   _sscanf
0048A4 99700010       17198         ADD.W   R7,#010H
0048A8 99040003       17200         CMP.W   R0,#03H
0048AC F306           17201         BEQ     _1206
0048AC F306           17201         BEQ     _1206
0048AE                17202 _1205:
                      17203 ; rs232cmd.c 4773                                       SCPIError = SyntaxErr;
0048AE 964842rr       17205         MOV.B   ES,#SEG( _SCPIError )
0048B2 9908rrrr       17206         MOV.W   R0,#SOF( _SCPIError )
0048B6 BA03           17207         MOV.W   [R0],#03H
0048B8 FE2C           17208         BR      _1213
0048B8 FE2C           17208         BR      _1213
0048BA                17209 _1206:
                      17210 ; rs232cmd.c 4774                               else
                      17211 ; rs232cmd.c 4775                               {
                      17212 ; rs232cmd.c 4776                                       if ( ValidateDate( year, month, day) == F
                            AIL)
0048BA 8A07           17214         MOV.W   R0,[R7]
0048BC 8C1702         17215         MOV.W   R1,[R7+2]
0048BF 8C2704         17216         MOV.W   R2,[R7+4]
                      17217         CALL    _ValidateDate
0048C2 C4rrrrrr       +17217 ;       FCALL   _ValidateDate
0048C6 6900           17218         OR.W    R0,R0
0048C8 F207           17219         BNE     _1207
                      17220 ; rs232cmd.c 4777                                               SCPIError = ExecErr;
0048CA 964842rr       17222         MOV.B   ES,#SEG( _SCPIError )
0048CE 9908rrrr       17223         MOV.W   R0,#SOF( _SCPIError )
0048D2 9A08001D       17224         MOV.W   [R0],#01DH
0048D6 FE1D           17225         BR      _1213
0048D6 FE1D           17225         BR      _1213
0048D8                17226 _1207:
                      17227 ; rs232cmd.c 4778                                       else
                      17228 ; rs232cmd.c 4779                                       {
                      17229 ; rs232cmd.c 4780                                               Calibration.GenlockCalibration.DA
                            CUserDate = day + 100*month + 10000*year;
0048D8 8C0702         17231         MOV.W   R0,[R7+2]
0048DB E9000064       17232         MULU.W  R0,#064H
0048DF 0C0704         17233         ADD.W   R0,[R7+4]
0048E2 8A27           17234         MOV.W   R2,[R7]
0048E4 E9202710       17235         MULU.W  R2,#02710H
0048E8 0902           17236         ADD.W   R0,R2
0048EA B910           17237         MOVS.W  R1,#00H
0048EC 964842rr       17238         MOV.B   ES,#SEG( _Calibration+114 )
0048F0 9928rrrr       17239         MOV.W   R2,#SOF( _Calibration+114 )
0048F4 8B0A           17240         MOV.W   [R2+],R0
0048F6 8A1A           17241         MOV.W   [R2],R1
                      17242 ; rs232cmd.c 4781                                               
                      17243 ; rs232cmd.c 4782                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0048F8 9918rrrr       17245         MOV.W   R1,#SEG( _Calibration )
0048FC 9908rrrr       17246         MOV.W   R0,#SOF( _Calibration )
004900 964842rr       17247         MOV.B   ES,#SEG( _CalibrationPtr )
004904 9928rrrr       17248         MOV.W   R2,#SOF( _CalibrationPtr )
004908 8A22           17249         MOV.W   R2,[R2]
00490A 993800E0       17250         MOV.W   R3,#0E0H
                      17251         CALL    _NV_Store
00490E C4rrrrrr       +17251 ;       FCALL   _NV_Store
                      17252 ; rs232cmd.c 4783                                       }                               
                      17253 ; rs232cmd.c 4784                               }
                      17254 ; rs232cmd.c 4785                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 282

ADDR   CODE            LINE SOURCELINE
                      17255 ; rs232cmd.c 4786               }
004912                17257 _1213:
                      17258 ; rs232cmd.c 4787       }
004912 9970001A       17260         ADD.W   R7,#01AH
004916 2F30           17262         POP.W   R4, R5
004918 D680           17264         RET
                      17266 ; rs232cmd.c 4788       
                      17267 ; rs232cmd.c 4789       /************************************************************************
                            **/
                      17268 ; rs232cmd.c 4790       /* FactGenlockGenURefDAC                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      17269 ; rs232cmd.c 4791       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17270 ; rs232cmd.c 4792       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      17271 ; rs232cmd.c 4793       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17272 ; rs232cmd.c 4794       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17273 ; rs232cmd.c 4795       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17274 ; rs232cmd.c 4796       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17275 ; rs232cmd.c 4797       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17276 ; rs232cmd.c 4798       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17277 ; rs232cmd.c 4799       /************************************************************************
                            **/
                      17278 ; rs232cmd.c 4800       void FactGenlockGenURefDAC( void)
                      17279 ; rs232cmd.c 4801       {
                      17280         ALIGN   1
                      17282         PUBLIC  _FactGenlockGenURefDAC
00491A                17283 _FactGenlockGenURefDAC:
00491A 0F30           17287         PUSH.W  R4, R5
00491C 99720016       17289         SUB.W   R7,#016H
                      17293 ; rs232cmd.c 4802               char buffer[20];
                      17294 ; rs232cmd.c 4803               UI DACValue;
                      17295 ; rs232cmd.c 4804       
                      17296 ; rs232cmd.c 4805               if ( CmdExecute && !SCPIError)
004920 964842rr       17298         MOV.B   ES,#SEG( _CmdExecute )
004924 9908rrrr       17299         MOV.W   R0,#SOF( _CmdExecute )
004928 8200           17300         MOV.B   R0L,[R0]
00492A F368           17301         BEQ     _1224
00492C 964842rr       17302         MOV.B   ES,#SEG( _SCPIError )
004930 9908rrrr       17303         MOV.W   R0,#SOF( _SCPIError )
004934 8A00           17304         MOV.W   R0,[R0]
004936 F262           17305         BNE     _1224
                      17306 ; rs232cmd.c 4806               {
                      17307 ; rs232cmd.c 4807                       if ( CmdRequest)
004938 964842rr       17309         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 283

ADDR   CODE            LINE SOURCELINE
00493C 9908rrrr       17310         MOV.W   R0,#SOF( _CmdRequest )
004940 8200           17311         MOV.B   R0L,[R0]
004942 F325           17312         BEQ     _1217
                      17313 ; rs232cmd.c 4808                       {
                      17314 ; rs232cmd.c 4809                               if ( ParCnt)
004944 964842rr       17316         MOV.B   ES,#SEG( _ParCnt )
004948 9908rrrr       17317         MOV.W   R0,#SOF( _ParCnt )
00494C 8200           17318         MOV.B   R0L,[R0]
00494E F306           17319         BEQ     _1216
                      17320 ; rs232cmd.c 4810                                       SCPIError = SyntaxErr;
004950 964842rr       17322         MOV.B   ES,#SEG( _SCPIError )
004954 9908rrrr       17323         MOV.W   R0,#SOF( _SCPIError )
004958 BA03           17324         MOV.W   [R0],#03H
00495A FE50           17325         BR      _1224
00495A FE50           17325         BR      _1224
00495C                17326 _1216:
                      17327 ; rs232cmd.c 4811                               else
                      17328 ; rs232cmd.c 4812                               {
                      17329 ; rs232cmd.c 4813                                       sprintf( buffer, "%u\n", Calibration.Genl
                            ockCalibration.DACUserValue);
00495C 91A8rr         17331         MOV.B   R5L,#SEG( __lc_bs )
00495F 71BB           17332         XOR.B   R5H,R5H
004961 8947           17333         MOV.W   R4,R7
004963 964842rr       17334         MOV.B   ES,#SEG( _Calibration+120 )
004967 9908rrrr       17335         MOV.W   R0,#SOF( _Calibration+120 )
00496B 8A00           17336         MOV.W   R0,[R0]
00496D 0F01           17337         PUSH.W  R0
00496F 9918rrrr       17339         MOV.W   R1,#SEG( _1013 )
004973 9908rrrr       17340         MOV.W   R0,#SOF( _1013 )
004977 0F03           17341         PUSH.W  R0, R1
004979 8915           17343         MOV.W   R1,R5
00497B 8904           17344         MOV.W   R0,R4
                      17345         CALL    _sprintf
00497D C4rrrrrr       +17345 ;       FCALL   _sprintf
004981 A976           17346         ADDS.W  R7,#06H
                      17348 ; rs232cmd.c 4814       
                      17349 ; rs232cmd.c 4815                                       rs232puts( buffer);
004983 8915           17351         MOV.W   R1,R5
004985 8904           17352         MOV.W   R0,R4
                      17353         CALL    _rs232puts
004987 C4rrrrrr       +17353 ;       FCALL   _rs232puts
                      17354 ; rs232cmd.c 4816                               }
                      17355 ; rs232cmd.c 4817                       }
00498B FE38           17357         BR      _1224
00498B FE3800         17357         BR      _1224
00498E                17358 _1217:
                      17359 ; rs232cmd.c 4818                       else
                      17360 ; rs232cmd.c 4819                       {
                      17361 ; rs232cmd.c 4820                               if (( ParCnt != 1) || (( sscanf( Cmd, "%u", &DACV
                            alue)) != 1))
00498E 964842rr       17363         MOV.B   ES,#SEG( _ParCnt )
004992 9908rrrr       17364         MOV.W   R0,#SOF( _ParCnt )
004996 8200           17365         MOV.B   R0L,[R0]
004998 910401         17366         CMP.B   R0L,#01H
00499B F216           17367         BNE     _1218
00499D 9918rrrr       17368         MOV.W   R1,#SEG( _Cmd )
0049A1 9908rrrr       17369         MOV.W   R0,#SOF( _Cmd )
0049A5 9168rr         17370         MOV.B   R3L,#SEG( __lc_bs )
0049A8 7177           17371         XOR.B   R3H,R3H
0049AA 402714         17372         LEA     R2,R7+20
0049AD 0F0C           17373         PUSH.W  R2, R3
0049AF 9938rrrr       17375         MOV.W   R3,#SEG( _1190 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 284

ADDR   CODE            LINE SOURCELINE
0049B3 9928rrrr       17376         MOV.W   R2,#SOF( _1190 )
0049B7 0F0C           17377         PUSH.W  R2, R3
                      17379         CALL    _sscanf
0049B9 C4rrrrrr       +17379 ;       FCALL   _sscanf
0049BD 99700008       17380         ADD.W   R7,#08H
0049C1 99040001       17382         CMP.W   R0,#01H
0049C5 F307           17383         BEQ     _1219
0049C5 F30700         17383         BEQ     _1219
0049C8                17384 _1218:
                      17385 ; rs232cmd.c 4821                                       SCPIError = SyntaxErr;
0049C8 964842rr       17387         MOV.B   ES,#SEG( _SCPIError )
0049CC 9908rrrr       17388         MOV.W   R0,#SOF( _SCPIError )
0049D0 BA03           17389         MOV.W   [R0],#03H
0049D2 FE14           17390         BR      _1224
0049D2 FE14           17390         BR      _1224
0049D4                17391 _1219:
                      17392 ; rs232cmd.c 4822                               else
                      17393 ; rs232cmd.c 4823                               {
                      17394 ; rs232cmd.c 4824                                       Calibration.GenlockCalibration.DACUserVal
                            ue = DACValue;
0049D4 8C0714         17396         MOV.W   R0,[R7+20]
0049D7 964842rr       17397         MOV.B   ES,#SEG( _Calibration+120 )
0049DB 9918rrrr       17398         MOV.W   R1,#SOF( _Calibration+120 )
0049DF 8A09           17399         MOV.W   [R1],R0
                      17400 ; rs232cmd.c 4825                                                               
                      17401 ; rs232cmd.c 4826                                       NV_Store( &Calibration, CalibrationPtr, s
                            izeof( Calibration));
0049E1 9918rrrr       17403         MOV.W   R1,#SEG( _Calibration )
0049E5 9908rrrr       17404         MOV.W   R0,#SOF( _Calibration )
0049E9 964842rr       17405         MOV.B   ES,#SEG( _CalibrationPtr )
0049ED 9928rrrr       17406         MOV.W   R2,#SOF( _CalibrationPtr )
0049F1 8A22           17407         MOV.W   R2,[R2]
0049F3 993800E0       17408         MOV.W   R3,#0E0H
                      17409         CALL    _NV_Store
0049F7 C4rrrrrr       +17409 ;       FCALL   _NV_Store
                      17410 ; rs232cmd.c 4827                               }
                      17411 ; rs232cmd.c 4828                       }
                      17412 ; rs232cmd.c 4829               }
0049FC                17414 _1224:
                      17415 ; rs232cmd.c 4830       }
0049FC 99700016       17417         ADD.W   R7,#016H
004A00 2F30           17419         POP.W   R4, R5
004A02 D680           17421         RET
                      17423 ; rs232cmd.c 4831       
                      17424 ; rs232cmd.c 4832       /************************************************************************
                            **/
                      17425 ; rs232cmd.c 4833       /* FactGenlockGenHPHZero                                                 
                                                                                                                         RS23
                            2CMD.C  */
                      17426 ; rs232cmd.c 4834       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17427 ; rs232cmd.c 4835       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      17428 ; rs232cmd.c 4836       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17429 ; rs232cmd.c 4837       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 285

ADDR   CODE            LINE SOURCELINE
                      17430 ; rs232cmd.c 4838       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17431 ; rs232cmd.c 4839       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17432 ; rs232cmd.c 4840       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17433 ; rs232cmd.c 4841       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17434 ; rs232cmd.c 4842       /************************************************************************
                            **/
                      17435 ; rs232cmd.c 4843       void FactGenlockGenHPHZero( void)
                      17436 ; rs232cmd.c 4844       {
                      17437         ALIGN   1
                      17439         PUBLIC  _FactGenlockGenHPHZero
004A04                17440 _FactGenlockGenHPHZero:
004A04 0F30           17444         PUSH.W  R4, R5
004A06 99720026       17446         SUB.W   R7,#026H
                      17451 ; rs232cmd.c 4845               char buffer[30];
                      17452 ; rs232cmd.c 4846               UL HPHZeroG, HPHZeroM;
                      17453 ; rs232cmd.c 4847       
                      17454 ; rs232cmd.c 4848               if ( CmdExecute && !SCPIError)
004A0A 964842rr       17456         MOV.B   ES,#SEG( _CmdExecute )
004A0E 9908rrrr       17457         MOV.W   R0,#SOF( _CmdExecute )
004A12 8200           17458         MOV.B   R0L,[R0]
                      17459         BEQ     _1237
004A14 F202           +17459 ;       BNE     _LG_1186
004A16 D5008A         +17459 ;       JMP.L   _1237
004A1A D5008A00       +17459 ;       JMP.L   _1237
004A1A                +17459 _LG_1186:
004A1A 964842rr       17460         MOV.B   ES,#SEG( _SCPIError )
004A1E 9908rrrr       17461         MOV.W   R0,#SOF( _SCPIError )
004A22 8A00           17462         MOV.W   R0,[R0]
                      17463         BNE     _1237
004A24 F302           +17463 ;       BEQ     _LG_1188
004A26 D50082         +17463 ;       JMP.L   _1237
004A2A D5008200       +17463 ;       JMP.L   _1237
004A2A                +17463 _LG_1188:
                      17464 ; rs232cmd.c 4849               {
                      17465 ; rs232cmd.c 4850                       if ( CmdRequest)
004A2A 964842rr       17467         MOV.B   ES,#SEG( _CmdRequest )
004A2E 9908rrrr       17468         MOV.W   R0,#SOF( _CmdRequest )
004A32 8200           17469         MOV.B   R0L,[R0]
004A34 F32E           17470         BEQ     _1229
                      17471 ; rs232cmd.c 4851                       {
                      17472 ; rs232cmd.c 4852                               if ( ParCnt)
004A36 964842rr       17474         MOV.B   ES,#SEG( _ParCnt )
004A3A 9908rrrr       17475         MOV.W   R0,#SOF( _ParCnt )
004A3E 8200           17476         MOV.B   R0L,[R0]
004A40 F306           17477         BEQ     _1228
                      17478 ; rs232cmd.c 4853                                       SCPIError = SyntaxErr;
004A42 964842rr       17480         MOV.B   ES,#SEG( _SCPIError )
004A46 9908rrrr       17481         MOV.W   R0,#SOF( _SCPIError )
004A4A BA03           17482         MOV.W   [R0],#03H
004A4C FE6F           17483         BR      _1237
004A4C FE6F           17483         BR      _1237
004A4E                17484 _1228:
                      17485 ; rs232cmd.c 4854                               else
                      17486 ; rs232cmd.c 4855                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 286

ADDR   CODE            LINE SOURCELINE
                      17487 ; rs232cmd.c 4856                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .GenlockCalibration.HPHZeroG, 
                      17488 ; rs232cmd.c 4857                                                                                
                                                                                                Calibration.GenlockCalibratio
                            n.HPHZeroM);
004A4E 91A8rr         17490         MOV.B   R5L,#SEG( __lc_bs )
004A51 71BB           17491         XOR.B   R5H,R5H
004A53 8947           17492         MOV.W   R4,R7
004A55 964842rr       17493         MOV.B   ES,#SEG( _Calibration+122 )
004A59 9918rrrr       17494         MOV.W   R1,#SOF( _Calibration+122 )
004A5D 8B01           17495         MOV.W   R0,[R1+]
004A5F 8A11           17496         MOV.W   R1,[R1]
004A61 964842rr       17497         MOV.B   ES,#SEG( _Calibration+130 )
004A65 9938rrrr       17498         MOV.W   R3,#SOF( _Calibration+130 )
004A69 8B23           17499         MOV.W   R2,[R3+]
004A6B 8A33           17500         MOV.W   R3,[R3]
004A6D 0F0C           17501         PUSH.W  R2, R3
004A6F 0F03           17503         PUSH.W  R0, R1
004A71 9918rrrr       17505         MOV.W   R1,#SEG( _1227 )
004A75 9908rrrr       17506         MOV.W   R0,#SOF( _1227 )
004A79 0F03           17507         PUSH.W  R0, R1
004A7B 8915           17509         MOV.W   R1,R5
004A7D 8904           17510         MOV.W   R0,R4
                      17511         CALL    _sprintf
004A7F C4rrrrrr       +17511 ;       FCALL   _sprintf
004A83 9970000C       17512         ADD.W   R7,#0CH
                      17514 ; rs232cmd.c 4858                                       rs232puts( buffer);
004A87 8915           17516         MOV.W   R1,R5
004A89 8904           17517         MOV.W   R0,R4
                      17518         CALL    _rs232puts
004A8B C4rrrrrr       +17518 ;       FCALL   _rs232puts
                      17519 ; rs232cmd.c 4859                               }
                      17520 ; rs232cmd.c 4860                       }
004A8F FE4E           17522         BR      _1237
004A8F FE4E00         17522         BR      _1237
004A92                17523 _1229:
                      17524 ; rs232cmd.c 4861                       else
                      17525 ; rs232cmd.c 4862                       {
                      17526 ; rs232cmd.c 4863                               if ( !PasswordProtected)
004A92 964842rr       17528         MOV.B   ES,#SEG( _PasswordProtected )
004A96 9908rrrr       17529         MOV.W   R0,#SOF( _PasswordProtected )
004A9A 8A00           17530         MOV.W   R0,[R0]
004A9C F247           17531         BNE     _1237
                      17532 ; rs232cmd.c 4864                               {
                      17533 ; rs232cmd.c 4865                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &HPHZeroG, &HPHZeroM)) != 2))
004A9E 964842rr       17535         MOV.B   ES,#SEG( _ParCnt )
004AA2 9908rrrr       17536         MOV.W   R0,#SOF( _ParCnt )
004AA6 8200           17537         MOV.B   R0L,[R0]
004AA8 910402         17538         CMP.B   R0L,#02H
004AAB F21B           17539         BNE     _1230
004AAD 9918rrrr       17540         MOV.W   R1,#SEG( _Cmd )
004AB1 9908rrrr       17541         MOV.W   R0,#SOF( _Cmd )
004AB5 9168rr         17542         MOV.B   R3L,#SEG( __lc_bs )
004AB8 7177           17543         XOR.B   R3H,R3H
004ABA 40271E         17544         LEA     R2,R7+30
004ABD 91A8rr         17545         MOV.B   R5L,#SEG( __lc_bs )
004AC0 71BB           17546         XOR.B   R5H,R5H
004AC2 404722         17547         LEA     R4,R7+34
004AC5 0F30           17548         PUSH.W  R4, R5
004AC7 0F0C           17550         PUSH.W  R2, R3
004AC9 9938rrrr       17552         MOV.W   R3,#SEG( _1038 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 287

ADDR   CODE            LINE SOURCELINE
004ACD 9928rrrr       17553         MOV.W   R2,#SOF( _1038 )
004AD1 0F0C           17554         PUSH.W  R2, R3
                      17556         CALL    _sscanf
004AD3 C4rrrrrr       +17556 ;       FCALL   _sscanf
004AD7 9970000C       17557         ADD.W   R7,#0CH
004ADB 99040002       17559         CMP.W   R0,#02H
004ADF F307           17560         BEQ     _1231
004ADF F30700         17560         BEQ     _1231
004AE2                17561 _1230:
                      17562 ; rs232cmd.c 4866                                               SCPIError = SyntaxErr;
004AE2 964842rr       17564         MOV.B   ES,#SEG( _SCPIError )
004AE6 9908rrrr       17565         MOV.W   R0,#SOF( _SCPIError )
004AEA BA03           17566         MOV.W   [R0],#03H
004AEC FE1F           17567         BR      _1237
004AEC FE1F           17567         BR      _1237
004AEE                17568 _1231:
                      17569 ; rs232cmd.c 4867                                       else
                      17570 ; rs232cmd.c 4868                                       {
                      17571 ; rs232cmd.c 4869                                               Calibration.GenlockCalibration.HP
                            HZeroG = HPHZeroG;
004AEE 8C1720         17573         MOV.W   R1,[R7+32]
004AF1 8C071E         17574         MOV.W   R0,[R7+30]
004AF4 964842rr       17575         MOV.B   ES,#SEG( _Calibration+122 )
004AF8 9928rrrr       17576         MOV.W   R2,#SOF( _Calibration+122 )
004AFC 8B0A           17577         MOV.W   [R2+],R0
004AFE 8A1A           17578         MOV.W   [R2],R1
                      17579 ; rs232cmd.c 4870                                               Calibration.GenlockCalibration.HP
                            HZeroM = HPHZeroM;
004B00 8C1724         17581         MOV.W   R1,[R7+36]
004B03 8C0722         17582         MOV.W   R0,[R7+34]
004B06 964842rr       17583         MOV.B   ES,#SEG( _Calibration+130 )
004B0A 9928rrrr       17584         MOV.W   R2,#SOF( _Calibration+130 )
004B0E 8B0A           17585         MOV.W   [R2+],R0
004B10 8A1A           17586         MOV.W   [R2],R1
                      17587 ; rs232cmd.c 4871                                       
                      17588 ; rs232cmd.c 4872                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004B12 9918rrrr       17590         MOV.W   R1,#SEG( _Calibration )
004B16 9908rrrr       17591         MOV.W   R0,#SOF( _Calibration )
004B1A 964842rr       17592         MOV.B   ES,#SEG( _CalibrationPtr )
004B1E 9928rrrr       17593         MOV.W   R2,#SOF( _CalibrationPtr )
004B22 8A22           17594         MOV.W   R2,[R2]
004B24 993800E0       17595         MOV.W   R3,#0E0H
                      17596         CALL    _NV_Store
004B28 C4rrrrrr       +17596 ;       FCALL   _NV_Store
                      17597 ; rs232cmd.c 4873                                       }
                      17598 ; rs232cmd.c 4874                               }
                      17599 ; rs232cmd.c 4875                       }
                      17600 ; rs232cmd.c 4876               }
004B2C                17602 _1237:
                      17603 ; rs232cmd.c 4877       }
004B2C 99700026       17605         ADD.W   R7,#026H
004B30 2F30           17607         POP.W   R4, R5
004B32 D680           17609         RET
                      17611 ; rs232cmd.c 4878       
                      17612 ; rs232cmd.c 4879       /************************************************************************
                            **/
                      17613 ; rs232cmd.c 4880       /* FactGenlockGenPhase                                                   
                                                                                                                         RS23
                            2CMD.C  */
                      17614 ; rs232cmd.c 4881       /*                                                                       
                                                                                                                             
                                                                                                                             
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 288

ADDR   CODE            LINE SOURCELINE
                                                    */
                      17615 ; rs232cmd.c 4882       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      17616 ; rs232cmd.c 4883       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17617 ; rs232cmd.c 4884       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17618 ; rs232cmd.c 4885       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17619 ; rs232cmd.c 4886       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17620 ; rs232cmd.c 4887       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17621 ; rs232cmd.c 4888       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17622 ; rs232cmd.c 4889       /************************************************************************
                            **/
                      17623 ; rs232cmd.c 4890       void FactGenlockGenPhase( void)
                      17624 ; rs232cmd.c 4891       {
                      17625         ALIGN   1
                      17627         PUBLIC  _FactGenlockGenPhase
004B34                17628 _FactGenlockGenPhase:
004B34 0F30           17632         PUSH.W  R4, R5
004B36 99720026       17634         SUB.W   R7,#026H
                      17639 ; rs232cmd.c 4892               char buffer[30];
                      17640 ; rs232cmd.c 4893               UL PhaseG, PhaseM;
                      17641 ; rs232cmd.c 4894       
                      17642 ; rs232cmd.c 4895               if ( CmdExecute && !SCPIError)
004B3A 964842rr       17644         MOV.B   ES,#SEG( _CmdExecute )
004B3E 9908rrrr       17645         MOV.W   R0,#SOF( _CmdExecute )
004B42 8200           17646         MOV.B   R0L,[R0]
                      17647         BEQ     _1249
004B44 F202           +17647 ;       BNE     _LG_1200
004B46 D5008A         +17647 ;       JMP.L   _1249
004B4A D5008A00       +17647 ;       JMP.L   _1249
004B4A                +17647 _LG_1200:
004B4A 964842rr       17648         MOV.B   ES,#SEG( _SCPIError )
004B4E 9908rrrr       17649         MOV.W   R0,#SOF( _SCPIError )
004B52 8A00           17650         MOV.W   R0,[R0]
                      17651         BNE     _1249
004B54 F302           +17651 ;       BEQ     _LG_1202
004B56 D50082         +17651 ;       JMP.L   _1249
004B5A D5008200       +17651 ;       JMP.L   _1249
004B5A                +17651 _LG_1202:
                      17652 ; rs232cmd.c 4896               {
                      17653 ; rs232cmd.c 4897                       if ( CmdRequest)
004B5A 964842rr       17655         MOV.B   ES,#SEG( _CmdRequest )
004B5E 9908rrrr       17656         MOV.W   R0,#SOF( _CmdRequest )
004B62 8200           17657         MOV.B   R0L,[R0]
004B64 F32E           17658         BEQ     _1241
                      17659 ; rs232cmd.c 4898                       {
                      17660 ; rs232cmd.c 4899                               if ( ParCnt)
004B66 964842rr       17662         MOV.B   ES,#SEG( _ParCnt )
004B6A 9908rrrr       17663         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 289

ADDR   CODE            LINE SOURCELINE
004B6E 8200           17664         MOV.B   R0L,[R0]
004B70 F306           17665         BEQ     _1240
                      17666 ; rs232cmd.c 4900                                       SCPIError = SyntaxErr;
004B72 964842rr       17668         MOV.B   ES,#SEG( _SCPIError )
004B76 9908rrrr       17669         MOV.W   R0,#SOF( _SCPIError )
004B7A BA03           17670         MOV.W   [R0],#03H
004B7C FE6F           17671         BR      _1249
004B7C FE6F           17671         BR      _1249
004B7E                17672 _1240:
                      17673 ; rs232cmd.c 4901                               else
                      17674 ; rs232cmd.c 4902                               {
                      17675 ; rs232cmd.c 4903                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .GenlockCalibration.PhaseG, 
                      17676 ; rs232cmd.c 4904                                                                                
                                                                                                Calibration.GenlockCalibratio
                            n.PhaseM);
004B7E 91A8rr         17678         MOV.B   R5L,#SEG( __lc_bs )
004B81 71BB           17679         XOR.B   R5H,R5H
004B83 8947           17680         MOV.W   R4,R7
004B85 964842rr       17681         MOV.B   ES,#SEG( _Calibration+126 )
004B89 9918rrrr       17682         MOV.W   R1,#SOF( _Calibration+126 )
004B8D 8B01           17683         MOV.W   R0,[R1+]
004B8F 8A11           17684         MOV.W   R1,[R1]
004B91 964842rr       17685         MOV.B   ES,#SEG( _Calibration+134 )
004B95 9938rrrr       17686         MOV.W   R3,#SOF( _Calibration+134 )
004B99 8B23           17687         MOV.W   R2,[R3+]
004B9B 8A33           17688         MOV.W   R3,[R3]
004B9D 0F0C           17689         PUSH.W  R2, R3
004B9F 0F03           17691         PUSH.W  R0, R1
004BA1 9918rrrr       17693         MOV.W   R1,#SEG( _1227 )
004BA5 9908rrrr       17694         MOV.W   R0,#SOF( _1227 )
004BA9 0F03           17695         PUSH.W  R0, R1
004BAB 8915           17697         MOV.W   R1,R5
004BAD 8904           17698         MOV.W   R0,R4
                      17699         CALL    _sprintf
004BAF C4rrrrrr       +17699 ;       FCALL   _sprintf
004BB3 9970000C       17700         ADD.W   R7,#0CH
                      17702 ; rs232cmd.c 4905                                       rs232puts( buffer);
004BB7 8915           17704         MOV.W   R1,R5
004BB9 8904           17705         MOV.W   R0,R4
                      17706         CALL    _rs232puts
004BBB C4rrrrrr       +17706 ;       FCALL   _rs232puts
                      17707 ; rs232cmd.c 4906                               }
                      17708 ; rs232cmd.c 4907                       }
004BBF FE4E           17710         BR      _1249
004BBF FE4E00         17710         BR      _1249
004BC2                17711 _1241:
                      17712 ; rs232cmd.c 4908                       else
                      17713 ; rs232cmd.c 4909                       {
                      17714 ; rs232cmd.c 4910                               if ( !PasswordProtected)
004BC2 964842rr       17716         MOV.B   ES,#SEG( _PasswordProtected )
004BC6 9908rrrr       17717         MOV.W   R0,#SOF( _PasswordProtected )
004BCA 8A00           17718         MOV.W   R0,[R0]
004BCC F247           17719         BNE     _1249
                      17720 ; rs232cmd.c 4911                               {
                      17721 ; rs232cmd.c 4912                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
004BCE 964842rr       17723         MOV.B   ES,#SEG( _ParCnt )
004BD2 9908rrrr       17724         MOV.W   R0,#SOF( _ParCnt )
004BD6 8200           17725         MOV.B   R0L,[R0]
004BD8 910402         17726         CMP.B   R0L,#02H
004BDB F21B           17727         BNE     _1242
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 290

ADDR   CODE            LINE SOURCELINE
004BDD 9918rrrr       17728         MOV.W   R1,#SEG( _Cmd )
004BE1 9908rrrr       17729         MOV.W   R0,#SOF( _Cmd )
004BE5 9168rr         17730         MOV.B   R3L,#SEG( __lc_bs )
004BE8 7177           17731         XOR.B   R3H,R3H
004BEA 40271E         17732         LEA     R2,R7+30
004BED 91A8rr         17733         MOV.B   R5L,#SEG( __lc_bs )
004BF0 71BB           17734         XOR.B   R5H,R5H
004BF2 404722         17735         LEA     R4,R7+34
004BF5 0F30           17736         PUSH.W  R4, R5
004BF7 0F0C           17738         PUSH.W  R2, R3
004BF9 9938rrrr       17740         MOV.W   R3,#SEG( _1038 )
004BFD 9928rrrr       17741         MOV.W   R2,#SOF( _1038 )
004C01 0F0C           17742         PUSH.W  R2, R3
                      17744         CALL    _sscanf
004C03 C4rrrrrr       +17744 ;       FCALL   _sscanf
004C07 9970000C       17745         ADD.W   R7,#0CH
004C0B 99040002       17747         CMP.W   R0,#02H
004C0F F307           17748         BEQ     _1243
004C0F F30700         17748         BEQ     _1243
004C12                17749 _1242:
                      17750 ; rs232cmd.c 4913                                               SCPIError = SyntaxErr;
004C12 964842rr       17752         MOV.B   ES,#SEG( _SCPIError )
004C16 9908rrrr       17753         MOV.W   R0,#SOF( _SCPIError )
004C1A BA03           17754         MOV.W   [R0],#03H
004C1C FE1F           17755         BR      _1249
004C1C FE1F           17755         BR      _1249
004C1E                17756 _1243:
                      17757 ; rs232cmd.c 4914                                       else
                      17758 ; rs232cmd.c 4915                                       {
                      17759 ; rs232cmd.c 4916                                               Calibration.GenlockCalibration.Ph
                            aseG = PhaseG;
004C1E 8C1720         17761         MOV.W   R1,[R7+32]
004C21 8C071E         17762         MOV.W   R0,[R7+30]
004C24 964842rr       17763         MOV.B   ES,#SEG( _Calibration+126 )
004C28 9928rrrr       17764         MOV.W   R2,#SOF( _Calibration+126 )
004C2C 8B0A           17765         MOV.W   [R2+],R0
004C2E 8A1A           17766         MOV.W   [R2],R1
                      17767 ; rs232cmd.c 4917                                               Calibration.GenlockCalibration.Ph
                            aseM = PhaseM;
004C30 8C1724         17769         MOV.W   R1,[R7+36]
004C33 8C0722         17770         MOV.W   R0,[R7+34]
004C36 964842rr       17771         MOV.B   ES,#SEG( _Calibration+134 )
004C3A 9928rrrr       17772         MOV.W   R2,#SOF( _Calibration+134 )
004C3E 8B0A           17773         MOV.W   [R2+],R0
004C40 8A1A           17774         MOV.W   [R2],R1
                      17775 ; rs232cmd.c 4918                                       
                      17776 ; rs232cmd.c 4919                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004C42 9918rrrr       17778         MOV.W   R1,#SEG( _Calibration )
004C46 9908rrrr       17779         MOV.W   R0,#SOF( _Calibration )
004C4A 964842rr       17780         MOV.B   ES,#SEG( _CalibrationPtr )
004C4E 9928rrrr       17781         MOV.W   R2,#SOF( _CalibrationPtr )
004C52 8A22           17782         MOV.W   R2,[R2]
004C54 993800E0       17783         MOV.W   R3,#0E0H
                      17784         CALL    _NV_Store
004C58 C4rrrrrr       +17784 ;       FCALL   _NV_Store
                      17785 ; rs232cmd.c 4920                                       }
                      17786 ; rs232cmd.c 4921                               }
                      17787 ; rs232cmd.c 4922                       }
                      17788 ; rs232cmd.c 4923               }
004C5C                17790 _1249:
                      17791 ; rs232cmd.c 4924       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 291

ADDR   CODE            LINE SOURCELINE
004C5C 99700026       17793         ADD.W   R7,#026H
004C60 2F30           17795         POP.W   R4, R5
004C62 D680           17797         RET
                      17799 ; rs232cmd.c 4925       
                      17800 ; rs232cmd.c 4926       /************************************************************************
                            **/
                      17801 ; rs232cmd.c 4927       /* FactBBGenDate                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      17802 ; rs232cmd.c 4928       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17803 ; rs232cmd.c 4929       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      17804 ; rs232cmd.c 4930       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      17805 ; rs232cmd.c 4931       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      17806 ; rs232cmd.c 4932       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      17807 ; rs232cmd.c 4933       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      17808 ; rs232cmd.c 4934       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      17809 ; rs232cmd.c 4935       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      17810 ; rs232cmd.c 4936       /************************************************************************
                            **/
                      17811 ; rs232cmd.c 4937       void FactBBGenDate( void)
                      17812 ; rs232cmd.c 4938       {
                      17813         ALIGN   1
                      17815         PUBLIC  _FactBBGenDate
004C64                17816 _FactBBGenDate:
004C64 0F30           17820         PUSH.W  R4, R5
004C66 9972001E       17822         SUB.W   R7,#01EH
                      17828 ; rs232cmd.c 4939               UI year, month, day;
                      17829 ; rs232cmd.c 4940               char buffer[20];
                      17830 ; rs232cmd.c 4941       
                      17831 ; rs232cmd.c 4942               if ( CmdExecute && !SCPIError)
004C6A 964842rr       17833         MOV.B   ES,#SEG( _CmdExecute )
004C6E 9908rrrr       17834         MOV.W   R0,#SOF( _CmdExecute )
004C72 8200           17835         MOV.B   R0L,[R0]
                      17836         BEQ     _1263
004C74 F202           +17836 ;       BNE     _LG_1214
004C76 D500D0         +17836 ;       JMP.L   _1263
004C7A D500D000       +17836 ;       JMP.L   _1263
004C7A                +17836 _LG_1214:
004C7A 964842rr       17837         MOV.B   ES,#SEG( _SCPIError )
004C7E 9908rrrr       17838         MOV.W   R0,#SOF( _SCPIError )
004C82 8A00           17839         MOV.W   R0,[R0]
                      17840         BNE     _1263
004C84 F302           +17840 ;       BEQ     _LG_1216
004C86 D500C8         +17840 ;       JMP.L   _1263
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 292

ADDR   CODE            LINE SOURCELINE
004C8A D500C800       +17840 ;       JMP.L   _1263
004C8A                +17840 _LG_1216:
                      17841 ; rs232cmd.c 4943               {
                      17842 ; rs232cmd.c 4944                       if ( CmdRequest)
004C8A 964842rr       17844         MOV.B   ES,#SEG( _CmdRequest )
004C8E 9908rrrr       17845         MOV.W   R0,#SOF( _CmdRequest )
004C92 8200           17846         MOV.B   R0L,[R0]
004C94 F358           17847         BEQ     _1253
                      17848 ; rs232cmd.c 4945                       {
                      17849 ; rs232cmd.c 4946                               if ( ParCnt)
004C96 964842rr       17851         MOV.B   ES,#SEG( _ParCnt )
004C9A 9908rrrr       17852         MOV.W   R0,#SOF( _ParCnt )
004C9E 8200           17853         MOV.B   R0L,[R0]
004CA0 F307           17854         BEQ     _1252
                      17855 ; rs232cmd.c 4947                                       SCPIError = SyntaxErr;
004CA2 964842rr       17857         MOV.B   ES,#SEG( _SCPIError )
004CA6 9908rrrr       17858         MOV.W   R0,#SOF( _SCPIError )
004CAA BA03           17859         MOV.W   [R0],#03H
                      17860         BR      _1263
004CAC D500B5         +17860         JMP.L   _1263
004CAC D500B500       +17860         JMP.L   _1263
004CB0                17861 _1252:
                      17862 ; rs232cmd.c 4948                               else
                      17863 ; rs232cmd.c 4949                               {
                      17864 ; rs232cmd.c 4950                                       day = Calibration.BBCalibration[Suffix[0]
                            ].Date % 100;
004CB0 964842rr       17866         MOV.B   ES,#SEG( _Suffix )
004CB4 9908rrrr       17867         MOV.W   R0,#SOF( _Suffix )
004CB8 8A00           17868         MOV.W   R0,[R0]
004CBA E9000014       17869         MULU.W  R0,#014H
004CBE B910           17870         MOVS.W  R1,#00H
004CC0 964842rr       17871         MOV.B   ES,#SEG( _Calibration+138 )
004CC4 8D10rrrr       17872         MOV.W   R1,[R0+SOF( _Calibration+140 )]
004CC8 8D00rrrr       17873         MOV.W   R0,[R0+SOF( _Calibration+138 )]
004CCC B930           17874         MOV.W   R3,#00H
004CCE 99280064       17875         MOV.W   R2,#064H
004CD2 8C1F02         17876         MOV.W   [R7+2],R1
004CD5 8A0F           17877         MOV.W   [R7],R0
004CD7 C4rrrrrr       17878         FCALL   __UMODL
004CDB 8C0F08         17879         MOV.W   [R7+8],R0
                      17880 ; rs232cmd.c 4951                                       month = ( Calibration.BBCalibration[Suffi
                            x[0]].Date / 100) % 100;
004CDE B930           17882         MOV.W   R3,#00H
004CE0 99280064       17883         MOV.W   R2,#064H
004CE4 8953           17884         MOV.W   R5,R3
004CE6 8942           17885         MOV.W   R4,R2
004CE8 8C1702         17886         MOV.W   R1,[R7+2]
004CEB 8A07           17887         MOV.W   R0,[R7]
004CED C4rrrrrr       17888         FCALL   __UDIVL
004CF1 8935           17889         MOV.W   R3,R5
004CF3 8924           17890         MOV.W   R2,R4
004CF5 C4rrrrrr       17891         FCALL   __UMODL
004CF9 8C0F06         17892         MOV.W   [R7+6],R0
                      17893 ; rs232cmd.c 4952                                       year = ( Calibration.BBCalibration[Suffix
                            [0]].Date / 10000);
004CFC B930           17895         MOV.W   R3,#00H
004CFE 99282710       17896         MOV.W   R2,#02710H
004D02 8C1702         17897         MOV.W   R1,[R7+2]
004D05 8A07           17898         MOV.W   R0,[R7]
004D07 C4rrrrrr       17899         FCALL   __UDIVL
004D0B 8C0F04         17900         MOV.W   [R7+4],R0
                      17901 ; rs232cmd.c 4953       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 293

ADDR   CODE            LINE SOURCELINE
                      17902 ; rs232cmd.c 4954                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
004D0E 91A8rr         17904         MOV.B   R5L,#SEG( __lc_bs )
004D11 71BB           17905         XOR.B   R5H,R5H
004D13 40470A         17906         LEA     R4,R7+10
004D16 8C0708         17907         MOV.W   R0,[R7+8]
004D19 0F01           17908         PUSH.W  R0
004D1B 8C0708         17910         MOV.W   R0,[R7+8]
004D1E 0F01           17911         PUSH.W  R0
004D20 8C0708         17913         MOV.W   R0,[R7+8]
004D23 0F01           17914         PUSH.W  R0
004D25 9918rrrr       17916         MOV.W   R1,#SEG( _1174 )
004D29 9908rrrr       17917         MOV.W   R0,#SOF( _1174 )
004D2D 0F03           17918         PUSH.W  R0, R1
004D2F 8915           17920         MOV.W   R1,R5
004D31 8904           17921         MOV.W   R0,R4
                      17922         CALL    _sprintf
004D33 C4rrrrrr       +17922 ;       FCALL   _sprintf
004D37 9970000A       17923         ADD.W   R7,#0AH
                      17925 ; rs232cmd.c 4955       
                      17926 ; rs232cmd.c 4956                                       rs232puts( buffer);
004D3B 8915           17928         MOV.W   R1,R5
004D3D 8904           17929         MOV.W   R0,R4
                      17930         CALL    _rs232puts
004D3F C4rrrrrr       +17930 ;       FCALL   _rs232puts
                      17931 ; rs232cmd.c 4957                               }
                      17932 ; rs232cmd.c 4958                       }
004D43 FE6A           17934         BR      _1263
004D43 FE6A00         17934         BR      _1263
004D46                17935 _1253:
                      17936 ; rs232cmd.c 4959                       else
                      17937 ; rs232cmd.c 4960                       {
                      17938 ; rs232cmd.c 4961                               if ( !PasswordProtected)
004D46 964842rr       17940         MOV.B   ES,#SEG( _PasswordProtected )
004D4A 9908rrrr       17941         MOV.W   R0,#SOF( _PasswordProtected )
004D4E 8A00           17942         MOV.W   R0,[R0]
004D50 F263           17943         BNE     _1263
                      17944 ; rs232cmd.c 4962                               {
                      17945 ; rs232cmd.c 4963                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
004D52 964842rr       17947         MOV.B   ES,#SEG( _ParCnt )
004D56 9908rrrr       17948         MOV.W   R0,#SOF( _ParCnt )
004D5A 8200           17949         MOV.B   R0L,[R0]
004D5C 910403         17950         CMP.B   R0L,#03H
004D5F F220           17951         BNE     _1254
004D61 9168rr         17952         MOV.B   R3L,#SEG( __lc_bs )
004D64 7177           17953         XOR.B   R3H,R3H
004D66 402704         17954         LEA     R2,R7+4
004D69 91A8rr         17955         MOV.B   R5L,#SEG( __lc_bs )
004D6C 71BB           17956         XOR.B   R5H,R5H
004D6E 404706         17957         LEA     R4,R7+6
004D71 9128rr         17958         MOV.B   R1L,#SEG( __lc_bs )
004D74 7133           17959         XOR.B   R1H,R1H
004D76 400708         17960         LEA     R0,R7+8
004D79 0F03           17961         PUSH.W  R0, R1
004D7B 0F30           17963         PUSH.W  R4, R5
004D7D 0F0C           17965         PUSH.W  R2, R3
004D7F 9938rrrr       17967         MOV.W   R3,#SEG( _1175 )
004D83 9928rrrr       17968         MOV.W   R2,#SOF( _1175 )
004D87 0F0C           17969         PUSH.W  R2, R3
004D89 9918rrrr       17971         MOV.W   R1,#SEG( _Cmd )
004D8D 9908rrrr       17972         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 294

ADDR   CODE            LINE SOURCELINE
                      17973         CALL    _sscanf
004D91 C4rrrrrr       +17973 ;       FCALL   _sscanf
004D95 99700010       17974         ADD.W   R7,#010H
004D99 99040003       17976         CMP.W   R0,#03H
004D9D F307           17977         BEQ     _1255
004D9D F30700         17977         BEQ     _1255
004DA0                17978 _1254:
                      17979 ; rs232cmd.c 4964                                               SCPIError = SyntaxErr;
004DA0 964842rr       17981         MOV.B   ES,#SEG( _SCPIError )
004DA4 9908rrrr       17982         MOV.W   R0,#SOF( _SCPIError )
004DA8 BA03           17983         MOV.W   [R0],#03H
004DAA FE36           17984         BR      _1263
004DAA FE36           17984         BR      _1263
004DAC                17985 _1255:
                      17986 ; rs232cmd.c 4965                                       else
                      17987 ; rs232cmd.c 4966                                       {
                      17988 ; rs232cmd.c 4967                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004DAC 8C0704         17990         MOV.W   R0,[R7+4]
004DAF 8C1706         17991         MOV.W   R1,[R7+6]
004DB2 8C2708         17992         MOV.W   R2,[R7+8]
                      17993         CALL    _ValidateDate
004DB5 C4rrrrrr       +17993 ;       FCALL   _ValidateDate
004DB9 6900           17994         OR.W    R0,R0
004DBB F208           17995         BNE     _1256
                      17996 ; rs232cmd.c 4968                                                       SCPIError = ExecErr;
004DBD 964842rr       17998         MOV.B   ES,#SEG( _SCPIError )
004DC1 9908rrrr       17999         MOV.W   R0,#SOF( _SCPIError )
004DC5 9A08001D       18000         MOV.W   [R0],#01DH
004DC9 FE27           18001         BR      _1263
004DC9 FE2700         18001         BR      _1263
004DCC                18002 _1256:
                      18003 ; rs232cmd.c 4969                                               else
                      18004 ; rs232cmd.c 4970                                               {
                      18005 ; rs232cmd.c 4971                                                       Calibration.BBCalibration
                            [Suffix[0]].Date = day + 100*month + 10000*year;
004DCC 8C0706         18007         MOV.W   R0,[R7+6]
004DCF E9000064       18008         MULU.W  R0,#064H
004DD3 0C0708         18009         ADD.W   R0,[R7+8]
004DD6 8C2704         18010         MOV.W   R2,[R7+4]
004DD9 E9202710       18011         MULU.W  R2,#02710H
004DDD 0902           18012         ADD.W   R0,R2
004DDF B910           18013         MOVS.W  R1,#00H
004DE1 964842rr       18014         MOV.B   ES,#SEG( _Suffix )
004DE5 9928rrrr       18015         MOV.W   R2,#SOF( _Suffix )
004DE9 8A22           18016         MOV.W   R2,[R2]
004DEB E9200014       18017         MULU.W  R2,#014H
004DEF B930           18018         MOVS.W  R3,#00H
004DF1 964842rr       18019         MOV.B   ES,#SEG( _Calibration+138 )
004DF5 8D0Arrrr       18020         MOV.W   [R2+SOF( _Calibration+138 )],R0
004DF9 8D1Arrrr       18021         MOV.W   [R2+SOF( _Calibration+140 )],R1
                      18022 ; rs232cmd.c 4972                                               
                      18023 ; rs232cmd.c 4973                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004DFD 9918rrrr       18025         MOV.W   R1,#SEG( _Calibration )
004E01 9908rrrr       18026         MOV.W   R0,#SOF( _Calibration )
004E05 964842rr       18027         MOV.B   ES,#SEG( _CalibrationPtr )
004E09 9928rrrr       18028         MOV.W   R2,#SOF( _CalibrationPtr )
004E0D 8A22           18029         MOV.W   R2,[R2]
004E0F 993800E0       18030         MOV.W   R3,#0E0H
                      18031         CALL    _NV_Store
004E13 C4rrrrrr       +18031 ;       FCALL   _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 295

ADDR   CODE            LINE SOURCELINE
                      18032 ; rs232cmd.c 4974                                               }
                      18033 ; rs232cmd.c 4975                                       }                               
                      18034 ; rs232cmd.c 4976                               }
                      18035 ; rs232cmd.c 4977                       }
                      18036 ; rs232cmd.c 4978               }
004E18                18038 _1263:
                      18039 ; rs232cmd.c 4979       }
004E18 9970001E       18041         ADD.W   R7,#01EH
004E1C 2F30           18043         POP.W   R4, R5
004E1E D680           18045         RET
                      18047 ; rs232cmd.c 4980       
                      18048 ; rs232cmd.c 4981       /************************************************************************
                            **/
                      18049 ; rs232cmd.c 4982       /* FactBBGenVersion                                                      
                                                                                                                             
                                         RS232CMD.C */
                      18050 ; rs232cmd.c 4983       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18051 ; rs232cmd.c 4984       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                    */
                      18052 ; rs232cmd.c 4985       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      18053 ; rs232cmd.c 4986       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18054 ; rs232cmd.c 4987       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18055 ; rs232cmd.c 4988       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18056 ; rs232cmd.c 4989       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18057 ; rs232cmd.c 4990       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18058 ; rs232cmd.c 4991       /************************************************************************
                            **/
                      18059 ; rs232cmd.c 4992       void FactBBGenVersion( void)
                      18060 ; rs232cmd.c 4993       {
                      18061         ALIGN   1
                      18063         PUBLIC  _FactBBGenVersion
004E20                18064 _FactBBGenVersion:
004E20 0F30           18068         PUSH.W  R4, R5
004E22 9972000A       18070         SUB.W   R7,#0AH
                      18073 ; rs232cmd.c 4994               char result[10];
                      18074 ; rs232cmd.c 4995       
                      18075 ; rs232cmd.c 4996               if ( CmdExecute && !SCPIError)
004E26 964842rr       18077         MOV.B   ES,#SEG( _CmdExecute )
004E2A 9908rrrr       18078         MOV.W   R0,#SOF( _CmdExecute )
004E2E 8200           18079         MOV.B   R0L,[R0]
004E30 F33D           18080         BEQ     _1274
004E32 964842rr       18081         MOV.B   ES,#SEG( _SCPIError )
004E36 9908rrrr       18082         MOV.W   R0,#SOF( _SCPIError )
004E3A 8A00           18083         MOV.W   R0,[R0]
004E3C F237           18084         BNE     _1274
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 296

ADDR   CODE            LINE SOURCELINE
                      18085 ; rs232cmd.c 4997               {
                      18086 ; rs232cmd.c 4998                       if ( CmdRequest)
004E3E 964842rr       18088         MOV.B   ES,#SEG( _CmdRequest )
004E42 9908rrrr       18089         MOV.W   R0,#SOF( _CmdRequest )
004E46 8200           18090         MOV.B   R0L,[R0]
004E48 F32C           18091         BEQ     _1269
                      18092 ; rs232cmd.c 4999                       {
                      18093 ; rs232cmd.c 5000                               if ( ParCnt || Suffix[0])
004E4A 964842rr       18095         MOV.B   ES,#SEG( _ParCnt )
004E4E 9908rrrr       18096         MOV.W   R0,#SOF( _ParCnt )
004E52 8200           18097         MOV.B   R0L,[R0]
004E54 F206           18098         BNE     _1266
004E56 964842rr       18099         MOV.B   ES,#SEG( _Suffix )
004E5A 9908rrrr       18100         MOV.W   R0,#SOF( _Suffix )
004E5E 8A00           18101         MOV.W   R0,[R0]
004E60 F306           18102         BEQ     _1267
004E60 F306           18102         BEQ     _1267
004E62                18103 _1266:
                      18104 ; rs232cmd.c 5001                                       SCPIError = SyntaxErr;
004E62 964842rr       18106         MOV.B   ES,#SEG( _SCPIError )
004E66 9908rrrr       18107         MOV.W   R0,#SOF( _SCPIError )
004E6A BA03           18108         MOV.W   [R0],#03H
004E6C FE1F           18109         BR      _1274
004E6C FE1F           18109         BR      _1274
004E6E                18110 _1267:
                      18111 ; rs232cmd.c 5002                               else
                      18112 ; rs232cmd.c 5003                               {
                      18113 ; rs232cmd.c 5004                                       if ( BBVersion( result) == OK)
004E6E 91A8rr         18115         MOV.B   R5L,#SEG( __lc_bs )
004E71 71BB           18116         XOR.B   R5H,R5H
004E73 8947           18117         MOV.W   R4,R7
004E75 8915           18118         MOV.W   R1,R5
004E77 8904           18119         MOV.W   R0,R4
                      18120         CALL    _BBVersion
004E79 C4rrrrrr       +18120 ;       FCALL   _BBVersion
004E7D 9904FFFF       18121         CMP.W   R0,#0FFFFH
004E81 F209           18122         BNE     _1268
                      18123 ; rs232cmd.c 5005                                       {
                      18124 ; rs232cmd.c 5006                                               rs232puts( result);
004E83 8915           18126         MOV.W   R1,R5
004E85 8904           18127         MOV.W   R0,R4
                      18128         CALL    _rs232puts
004E87 C4rrrrrr       +18128 ;       FCALL   _rs232puts
                      18129 ; rs232cmd.c 5007                                               rs232putchar( '\n');
004E8B 91080A         18131         MOV.B   R0L,#0AH
                      18132         CALL    _rs232putchar
004E8E C4rrrrrr       +18132 ;       FCALL   _rs232putchar
                      18133 ; rs232cmd.c 5008                                       }
004E92 FE0C           18135         BR      _1274
004E92 FE0C           18135         BR      _1274
004E94                18136 _1268:
                      18137 ; rs232cmd.c 5009                                       else
                      18138 ; rs232cmd.c 5010                                               SCPIError = ExecErr;             
                                    
004E94 964842rr       18140         MOV.B   ES,#SEG( _SCPIError )
004E98 9908rrrr       18141         MOV.W   R0,#SOF( _SCPIError )
004E9C 9A08001D       18142         MOV.W   [R0],#01DH
                      18143 ; rs232cmd.c 5011                               }
                      18144 ; rs232cmd.c 5012                       }
004EA0 FE05           18146         BR      _1274
004EA0 FE05           18146         BR      _1274
004EA2                18147 _1269:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 297

ADDR   CODE            LINE SOURCELINE
                      18148 ; rs232cmd.c 5013                       else
                      18149 ; rs232cmd.c 5014                               SCPIError = SyntaxErr;
004EA2 964842rr       18151         MOV.B   ES,#SEG( _SCPIError )
004EA6 9908rrrr       18152         MOV.W   R0,#SOF( _SCPIError )
004EAA BA03           18153         MOV.W   [R0],#03H
                      18154 ; rs232cmd.c 5015               }
004EAC                18156 _1274:
                      18157 ; rs232cmd.c 5016       }
004EAC 9970000A       18159         ADD.W   R7,#0AH
004EB0 2F30           18161         POP.W   R4, R5
004EB2 D680           18163         RET
                      18165 ; rs232cmd.c 5017       
                      18166 ; rs232cmd.c 5018       /************************************************************************
                            **/
                      18167 ; rs232cmd.c 5019       /* FactBBGenSignal                                                       
                                                                                                                             
                                         RS232CMD.C */
                      18168 ; rs232cmd.c 5020       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18169 ; rs232cmd.c 5021       /* Author:              Kim Engedahl, DEV, 000503                        
                                                                                                                             
                                    */
                      18170 ; rs232cmd.c 5022       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      18171 ; rs232cmd.c 5023       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18172 ; rs232cmd.c 5024       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18173 ; rs232cmd.c 5025       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18174 ; rs232cmd.c 5026       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18175 ; rs232cmd.c 5027       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18176 ; rs232cmd.c 5028       /************************************************************************
                            **/
                      18177 ; rs232cmd.c 5029       void FactBBGenSignal( void)
                      18178 ; rs232cmd.c 5030       {
                      18179         ALIGN   1
                      18181         PUBLIC  _FactBBGenSignal
004EB4                18182 _FactBBGenSignal:
                      18188 ; rs232cmd.c 5031               int signal;
                      18189 ; rs232cmd.c 5032       
                      18190 ; rs232cmd.c 5033               if ( CmdExecute && !SCPIError)
004EB4 964842rr       18192         MOV.B   ES,#SEG( _CmdExecute )
004EB8 9908rrrr       18193         MOV.W   R0,#SOF( _CmdExecute )
004EBC 8200           18194         MOV.B   R0L,[R0]
004EBE F349           18195         BEQ     _1287
004EC0 964842rr       18196         MOV.B   ES,#SEG( _SCPIError )
004EC4 9908rrrr       18197         MOV.W   R0,#SOF( _SCPIError )
004EC8 8A00           18198         MOV.W   R0,[R0]
004ECA F243           18199         BNE     _1287
                      18200 ; rs232cmd.c 5034               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 298

ADDR   CODE            LINE SOURCELINE
                      18201 ; rs232cmd.c 5035                       if ( CmdRequest)
004ECC 964842rr       18203         MOV.B   ES,#SEG( _CmdRequest )
004ED0 9908rrrr       18204         MOV.W   R0,#SOF( _CmdRequest )
004ED4 8200           18205         MOV.B   R0L,[R0]
004ED6 F306           18206         BEQ     _1276
                      18207 ; rs232cmd.c 5036                               SCPIError = SyntaxErr;
004ED8 964842rr       18209         MOV.B   ES,#SEG( _SCPIError )
004EDC 9908rrrr       18210         MOV.W   R0,#SOF( _SCPIError )
004EE0 BA03           18211         MOV.W   [R0],#03H
004EE2 D680           18212         RET
004EE2 D680           18212         RET
004EE4                18213 _1276:
                      18214 ; rs232cmd.c 5037                       else
                      18215 ; rs232cmd.c 5038                       {
                      18216 ; rs232cmd.c 5039                               if ( !PasswordProtected)
004EE4 964842rr       18218         MOV.B   ES,#SEG( _PasswordProtected )
004EE8 9908rrrr       18219         MOV.W   R0,#SOF( _PasswordProtected )
004EEC 8A00           18220         MOV.W   R0,[R0]
004EEE F231           18221         BNE     _1287
                      18222 ; rs232cmd.c 5040                               {
                      18223 ; rs232cmd.c 5041                                       if ( ParCnt != 1)
004EF0 964842rr       18225         MOV.B   ES,#SEG( _ParCnt )
004EF4 9908rrrr       18226         MOV.W   R0,#SOF( _ParCnt )
004EF8 8200           18227         MOV.B   R0L,[R0]
004EFA 910401         18228         CMP.B   R0L,#01H
004EFD F307           18229         BEQ     _1277
                      18230 ; rs232cmd.c 5042                                               SCPIError = SyntaxErr;
004EFF 964842rr       18232         MOV.B   ES,#SEG( _SCPIError )
004F03 9908rrrr       18233         MOV.W   R0,#SOF( _SCPIError )
004F07 BA03           18234         MOV.W   [R0],#03H
004F09 D680           18235         RET
004F09 D68000         18235         RET
004F0C                18236 _1277:
                      18237 ; rs232cmd.c 5043                                       else
                      18238 ; rs232cmd.c 5044                                       {
                      18239 ; rs232cmd.c 5045                                               signal = FindParameter( Cmd, Fact
                            BBGenSignalPar);
004F0C 9918rrrr       18241         MOV.W   R1,#SEG( _Cmd )
004F10 9908rrrr       18242         MOV.W   R0,#SOF( _Cmd )
004F14 9938rrrr       18243         MOV.W   R3,#SEG( _FactBBGenSignalPar )
004F18 9928rrrr       18244         MOV.W   R2,#SOF( _FactBBGenSignalPar )
004F1C C5086E         18245         CALL    _FindParameter
                      18247 ; rs232cmd.c 5046               
                      18248 ; rs232cmd.c 5047                                               switch ( signal)
004F1F 99040000       18250         CMP.W   R0,#00H
004F23 F305           18251         BEQ     _1278
004F25 99040001       18252         CMP.W   R0,#01H
004F29 F308           18253         BEQ     _1279
004F2B FE0D           18254         BR      _1280
                      18255 ; rs232cmd.c 5048                                               {
                      18256 ; rs232cmd.c 5049                                                       case 0:
004F2E                18258 _1278:
                      18259 ; rs232cmd.c 5050                                                               BBControlPort = 0
                            ;
004F2E 964842rr       18261         MOV.B   ES,#SEG( _BBControlPort )
004F32 9908rrrr       18262         MOV.W   R0,#SOF( _BBControlPort )
004F36 BA00           18263         MOV.W   [R0],#00H
                      18264 ; rs232cmd.c 5051                                                               break;
004F38 D680           18266         RET
                      18267 ; rs232cmd.c 5052       
                      18268 ; rs232cmd.c 5053                                                       case 1:
004F3A                18270 _1279:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 299

ADDR   CODE            LINE SOURCELINE
                      18271 ; rs232cmd.c 5054                                                               BBControlPort = 1
                            ;
004F3A 964842rr       18273         MOV.B   ES,#SEG( _BBControlPort )
004F3E 9908rrrr       18274         MOV.W   R0,#SOF( _BBControlPort )
004F42 BA01           18275         MOV.W   [R0],#01H
                      18276 ; rs232cmd.c 5055                                                               break;
004F44 D680           18278         RET
                      18279 ; rs232cmd.c 5056       
                      18280 ; rs232cmd.c 5057                                                       default:
004F46                18282 _1280:
                      18283 ; rs232cmd.c 5058                                                               SCPIError = DataO
                            utOfRange;
004F46 964842rr       18285         MOV.B   ES,#SEG( _SCPIError )
004F4A 9908rrrr       18286         MOV.W   R0,#SOF( _SCPIError )
004F4E 9A080021       18287         MOV.W   [R0],#021H
                      18288 ; rs232cmd.c 5059                                                               break;
                      18289 ; rs232cmd.c 5060                                               }
                      18290 ; rs232cmd.c 5061                                       }
                      18291 ; rs232cmd.c 5062                               }
                      18292 ; rs232cmd.c 5063                       }
                      18293 ; rs232cmd.c 5064               }
004F52                18295 _1287:
                      18296 ; rs232cmd.c 5065       }
004F52 D680           18298         RET
                      18301 ; rs232cmd.c 5066       
                      18302 ; rs232cmd.c 5067       /************************************************************************
                            **/
                      18303 ; rs232cmd.c 5068       /* FactBBGenPhase                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      18304 ; rs232cmd.c 5069       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18305 ; rs232cmd.c 5070       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18306 ; rs232cmd.c 5071       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18307 ; rs232cmd.c 5072       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18308 ; rs232cmd.c 5073       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18309 ; rs232cmd.c 5074       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18310 ; rs232cmd.c 5075       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18311 ; rs232cmd.c 5076       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18312 ; rs232cmd.c 5077       /************************************************************************
                            **/
                      18313 ; rs232cmd.c 5078       void FactBBGenPhase( void)
                      18314 ; rs232cmd.c 5079       {
                      18315         ALIGN   1
                      18317         PUBLIC  _FactBBGenPhase
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 300

ADDR   CODE            LINE SOURCELINE
004F54                18318 _FactBBGenPhase:
004F54 0F30           18322         PUSH.W  R4, R5
004F56 99720026       18324         SUB.W   R7,#026H
                      18329 ; rs232cmd.c 5080               char buffer[30];
                      18330 ; rs232cmd.c 5081               UL PhaseG, PhaseM;
                      18331 ; rs232cmd.c 5082       
                      18332 ; rs232cmd.c 5083               if ( CmdExecute && !SCPIError)
004F5A 964842rr       18334         MOV.B   ES,#SEG( _CmdExecute )
004F5E 9908rrrr       18335         MOV.W   R0,#SOF( _CmdExecute )
004F62 8200           18336         MOV.B   R0L,[R0]
                      18337         BEQ     _1298
004F64 F202           +18337 ;       BNE     _LG_1256
004F66 D5009A         +18337 ;       JMP.L   _1298
004F6A D5009A00       +18337 ;       JMP.L   _1298
004F6A                +18337 _LG_1256:
004F6A 964842rr       18338         MOV.B   ES,#SEG( _SCPIError )
004F6E 9908rrrr       18339         MOV.W   R0,#SOF( _SCPIError )
004F72 8A00           18340         MOV.W   R0,[R0]
                      18341         BNE     _1298
004F74 F302           +18341 ;       BEQ     _LG_1258
004F76 D50092         +18341 ;       JMP.L   _1298
004F7A D5009200       +18341 ;       JMP.L   _1298
004F7A                +18341 _LG_1258:
                      18342 ; rs232cmd.c 5084               {
                      18343 ; rs232cmd.c 5085                       if ( CmdRequest)
004F7A 964842rr       18345         MOV.B   ES,#SEG( _CmdRequest )
004F7E 9908rrrr       18346         MOV.W   R0,#SOF( _CmdRequest )
004F82 8200           18347         MOV.B   R0L,[R0]
004F84 F336           18348         BEQ     _1290
                      18349 ; rs232cmd.c 5086                       {
                      18350 ; rs232cmd.c 5087                               if ( ParCnt)
004F86 964842rr       18352         MOV.B   ES,#SEG( _ParCnt )
004F8A 9908rrrr       18353         MOV.W   R0,#SOF( _ParCnt )
004F8E 8200           18354         MOV.B   R0L,[R0]
004F90 F306           18355         BEQ     _1289
                      18356 ; rs232cmd.c 5088                                       SCPIError = SyntaxErr;
004F92 964842rr       18358         MOV.B   ES,#SEG( _SCPIError )
004F96 9908rrrr       18359         MOV.W   R0,#SOF( _SCPIError )
004F9A BA03           18360         MOV.W   [R0],#03H
004F9C FE7F           18361         BR      _1298
004F9C FE7F           18361         BR      _1298
004F9E                18362 _1289:
                      18363 ; rs232cmd.c 5089                               else
                      18364 ; rs232cmd.c 5090                               {
                      18365 ; rs232cmd.c 5091                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .BBCalibration[Suffix[0]].PhaseG, 
                      18366 ; rs232cmd.c 5092                                                                                
                                                                                                Calibration.BBCalibration[Suf
                            fix[0]].PhaseM);
004F9E 91A8rr         18368         MOV.B   R5L,#SEG( __lc_bs )
004FA1 71BB           18369         XOR.B   R5H,R5H
004FA3 8947           18370         MOV.W   R4,R7
004FA5 964842rr       18371         MOV.B   ES,#SEG( _Suffix )
004FA9 9908rrrr       18372         MOV.W   R0,#SOF( _Suffix )
004FAD 8A00           18373         MOV.W   R0,[R0]
004FAF E9000014       18374         MULU.W  R0,#014H
004FB3 B910           18375         MOVS.W  R1,#00H
004FB5 964842rr       18376         MOV.B   ES,#SEG( _Calibration+142 )
004FB9 8D20rrrr       18377         MOV.W   R2,[R0+SOF( _Calibration+142 )]
004FBD 8D30rrrr       18378         MOV.W   R3,[R0+SOF( _Calibration+144 )]
004FC1 964842rr       18379         MOV.B   ES,#SEG( _Calibration+148 )
004FC5 8D10rrrr       18380         MOV.W   R1,[R0+SOF( _Calibration+150 )]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 301

ADDR   CODE            LINE SOURCELINE
004FC9 8D00rrrr       18381         MOV.W   R0,[R0+SOF( _Calibration+148 )]
004FCD 0F03           18382         PUSH.W  R0, R1
004FCF 0F0C           18384         PUSH.W  R2, R3
004FD1 9918rrrr       18386         MOV.W   R1,#SEG( _1227 )
004FD5 9908rrrr       18387         MOV.W   R0,#SOF( _1227 )
004FD9 0F03           18388         PUSH.W  R0, R1
004FDB 8915           18390         MOV.W   R1,R5
004FDD 8904           18391         MOV.W   R0,R4
                      18392         CALL    _sprintf
004FDF C4rrrrrr       +18392 ;       FCALL   _sprintf
004FE3 9970000C       18393         ADD.W   R7,#0CH
                      18395 ; rs232cmd.c 5093                                       rs232puts( buffer);
004FE7 8915           18397         MOV.W   R1,R5
004FE9 8904           18398         MOV.W   R0,R4
                      18399         CALL    _rs232puts
004FEB C4rrrrrr       +18399 ;       FCALL   _rs232puts
                      18400 ; rs232cmd.c 5094                               }
                      18401 ; rs232cmd.c 5095                       }
004FEF FE56           18403         BR      _1298
004FEF FE5600         18403         BR      _1298
004FF2                18404 _1290:
                      18405 ; rs232cmd.c 5096                       else
                      18406 ; rs232cmd.c 5097                       {
                      18407 ; rs232cmd.c 5098                               if ( !PasswordProtected)
004FF2 964842rr       18409         MOV.B   ES,#SEG( _PasswordProtected )
004FF6 9908rrrr       18410         MOV.W   R0,#SOF( _PasswordProtected )
004FFA 8A00           18411         MOV.W   R0,[R0]
004FFC F24F           18412         BNE     _1298
                      18413 ; rs232cmd.c 5099                               {
                      18414 ; rs232cmd.c 5100                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
004FFE 964842rr       18416         MOV.B   ES,#SEG( _ParCnt )
005002 9908rrrr       18417         MOV.W   R0,#SOF( _ParCnt )
005006 8200           18418         MOV.B   R0L,[R0]
005008 910402         18419         CMP.B   R0L,#02H
00500B F21B           18420         BNE     _1291
00500D 9918rrrr       18421         MOV.W   R1,#SEG( _Cmd )
005011 9908rrrr       18422         MOV.W   R0,#SOF( _Cmd )
005015 9168rr         18423         MOV.B   R3L,#SEG( __lc_bs )
005018 7177           18424         XOR.B   R3H,R3H
00501A 40271E         18425         LEA     R2,R7+30
00501D 91A8rr         18426         MOV.B   R5L,#SEG( __lc_bs )
005020 71BB           18427         XOR.B   R5H,R5H
005022 404722         18428         LEA     R4,R7+34
005025 0F30           18429         PUSH.W  R4, R5
005027 0F0C           18431         PUSH.W  R2, R3
005029 9938rrrr       18433         MOV.W   R3,#SEG( _1038 )
00502D 9928rrrr       18434         MOV.W   R2,#SOF( _1038 )
005031 0F0C           18435         PUSH.W  R2, R3
                      18437         CALL    _sscanf
005033 C4rrrrrr       +18437 ;       FCALL   _sscanf
005037 9970000C       18438         ADD.W   R7,#0CH
00503B 99040002       18440         CMP.W   R0,#02H
00503F F307           18441         BEQ     _1292
00503F F30700         18441         BEQ     _1292
005042                18442 _1291:
                      18443 ; rs232cmd.c 5101                                               SCPIError = SyntaxErr;
005042 964842rr       18445         MOV.B   ES,#SEG( _SCPIError )
005046 9908rrrr       18446         MOV.W   R0,#SOF( _SCPIError )
00504A BA03           18447         MOV.W   [R0],#03H
00504C FE27           18448         BR      _1298
00504C FE27           18448         BR      _1298
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 302

ADDR   CODE            LINE SOURCELINE
00504E                18449 _1292:
                      18450 ; rs232cmd.c 5102                                       else
                      18451 ; rs232cmd.c 5103                                       {
                      18452 ; rs232cmd.c 5104                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseG = PhaseG;
00504E 964842rr       18454         MOV.B   ES,#SEG( _Suffix )
005052 9908rrrr       18455         MOV.W   R0,#SOF( _Suffix )
005056 8A00           18456         MOV.W   R0,[R0]
005058 E9000014       18457         MULU.W  R0,#014H
00505C B910           18458         MOVS.W  R1,#00H
00505E 8C3720         18459         MOV.W   R3,[R7+32]
005061 8C271E         18460         MOV.W   R2,[R7+30]
005064 964842rr       18461         MOV.B   ES,#SEG( _Calibration+142 )
005068 8D28rrrr       18462         MOV.W   [R0+SOF( _Calibration+142 )],R2
00506C 8D38rrrr       18463         MOV.W   [R0+SOF( _Calibration+144 )],R3
                      18464 ; rs232cmd.c 5105                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseM = PhaseM;
005070 8C3724         18466         MOV.W   R3,[R7+36]
005073 8C2722         18467         MOV.W   R2,[R7+34]
005076 964842rr       18468         MOV.B   ES,#SEG( _Calibration+148 )
00507A 8D28rrrr       18469         MOV.W   [R0+SOF( _Calibration+148 )],R2
00507E 8D38rrrr       18470         MOV.W   [R0+SOF( _Calibration+150 )],R3
                      18471 ; rs232cmd.c 5106                                       
                      18472 ; rs232cmd.c 5107                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005082 9918rrrr       18474         MOV.W   R1,#SEG( _Calibration )
005086 9908rrrr       18475         MOV.W   R0,#SOF( _Calibration )
00508A 964842rr       18476         MOV.B   ES,#SEG( _CalibrationPtr )
00508E 9928rrrr       18477         MOV.W   R2,#SOF( _CalibrationPtr )
005092 8A22           18478         MOV.W   R2,[R2]
005094 993800E0       18479         MOV.W   R3,#0E0H
                      18480         CALL    _NV_Store
005098 C4rrrrrr       +18480 ;       FCALL   _NV_Store
                      18481 ; rs232cmd.c 5108                                       }
                      18482 ; rs232cmd.c 5109                               }
                      18483 ; rs232cmd.c 5110                       }
                      18484 ; rs232cmd.c 5111               }
00509C                18486 _1298:
                      18487 ; rs232cmd.c 5112       }
00509C 99700026       18489         ADD.W   R7,#026H
0050A0 2F30           18491         POP.W   R4, R5
0050A2 D680           18493         RET
                      18495 ; rs232cmd.c 5113       
                      18496 ; rs232cmd.c 5114       /************************************************************************
                            **/
                      18497 ; rs232cmd.c 5115       /* FactBBGenScHPhase                                                     
                                                                                                                             
                                RS232CMD.C  */
                      18498 ; rs232cmd.c 5116       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18499 ; rs232cmd.c 5117       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18500 ; rs232cmd.c 5118       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18501 ; rs232cmd.c 5119       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 303

ADDR   CODE            LINE SOURCELINE
                      18502 ; rs232cmd.c 5120       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18503 ; rs232cmd.c 5121       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18504 ; rs232cmd.c 5122       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18505 ; rs232cmd.c 5123       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18506 ; rs232cmd.c 5124       /************************************************************************
                            **/
                      18507 ; rs232cmd.c 5125       void FactBBGenScHPhase( void)
                      18508 ; rs232cmd.c 5126       {
                      18509         ALIGN   1
                      18511         PUBLIC  _FactBBGenScHPhase
0050A4                18512 _FactBBGenScHPhase:
0050A4 0F30           18516         PUSH.W  R4, R5
0050A6 99720022       18518         SUB.W   R7,#022H
                      18523 ; rs232cmd.c 5127               char buffer[30];
                      18524 ; rs232cmd.c 5128               UI ScHPhaseG, ScHPhaseM;
                      18525 ; rs232cmd.c 5129       
                      18526 ; rs232cmd.c 5130               if ( CmdExecute && !SCPIError)
0050AA 964842rr       18528         MOV.B   ES,#SEG( _CmdExecute )
0050AE 9908rrrr       18529         MOV.W   R0,#SOF( _CmdExecute )
0050B2 8200           18530         MOV.B   R0L,[R0]
                      18531         BEQ     _1312
0050B4 F202           +18531 ;       BNE     _LG_1270
0050B6 D50097         +18531 ;       JMP.L   _1312
0050BA D5009700       +18531 ;       JMP.L   _1312
0050BA                +18531 _LG_1270:
0050BA 964842rr       18532         MOV.B   ES,#SEG( _SCPIError )
0050BE 9908rrrr       18533         MOV.W   R0,#SOF( _SCPIError )
0050C2 8A00           18534         MOV.W   R0,[R0]
                      18535         BNE     _1312
0050C4 F302           +18535 ;       BEQ     _LG_1272
0050C6 D5008F         +18535 ;       JMP.L   _1312
0050CA D5008F00       +18535 ;       JMP.L   _1312
0050CA                +18535 _LG_1272:
                      18536 ; rs232cmd.c 5131               {
                      18537 ; rs232cmd.c 5132                       if ( CmdRequest)
0050CA 964842rr       18539         MOV.B   ES,#SEG( _CmdRequest )
0050CE 9908rrrr       18540         MOV.W   R0,#SOF( _CmdRequest )
0050D2 8200           18541         MOV.B   R0L,[R0]
0050D4 F332           18542         BEQ     _1304
                      18543 ; rs232cmd.c 5133                       {
                      18544 ; rs232cmd.c 5134                               if ( ParCnt)
0050D6 964842rr       18546         MOV.B   ES,#SEG( _ParCnt )
0050DA 9908rrrr       18547         MOV.W   R0,#SOF( _ParCnt )
0050DE 8200           18548         MOV.B   R0L,[R0]
0050E0 F306           18549         BEQ     _1303
                      18550 ; rs232cmd.c 5135                                       SCPIError = SyntaxErr;
0050E2 964842rr       18552         MOV.B   ES,#SEG( _SCPIError )
0050E6 9908rrrr       18553         MOV.W   R0,#SOF( _SCPIError )
0050EA BA03           18554         MOV.W   [R0],#03H
0050EC FE7C           18555         BR      _1312
0050EC FE7C           18555         BR      _1312
0050EE                18556 _1303:
                      18557 ; rs232cmd.c 5136                               else
                      18558 ; rs232cmd.c 5137                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 304

ADDR   CODE            LINE SOURCELINE
                      18559 ; rs232cmd.c 5138                                       sprintf( buffer, "%u,%u\n", Calibration.B
                            BCalibration[Suffix[0]].ScHPhaseG, 
                      18560 ; rs232cmd.c 5139                                                                                
                                                                                        Calibration.BBCalibration[Suffix[0]].
                            ScHPhaseM);
0050EE 91A8rr         18562         MOV.B   R5L,#SEG( __lc_bs )
0050F1 71BB           18563         XOR.B   R5H,R5H
0050F3 8947           18564         MOV.W   R4,R7
0050F5 964842rr       18565         MOV.B   ES,#SEG( _Suffix )
0050F9 9908rrrr       18566         MOV.W   R0,#SOF( _Suffix )
0050FD 8A00           18567         MOV.W   R0,[R0]
0050FF E9000014       18568         MULU.W  R0,#014H
005103 B910           18569         MOVS.W  R1,#00H
005105 964842rr       18570         MOV.B   ES,#SEG( _Calibration+146 )
005109 8D20rrrr       18571         MOV.W   R2,[R0+SOF( _Calibration+146 )]
00510D 964842rr       18572         MOV.B   ES,#SEG( _Calibration+152 )
005111 8D00rrrr       18573         MOV.W   R0,[R0+SOF( _Calibration+152 )]
005115 0F01           18574         PUSH.W  R0
005117 0F04           18576         PUSH.W  R2
005119 9918rrrr       18578         MOV.W   R1,#SEG( _1301 )
00511D 9908rrrr       18579         MOV.W   R0,#SOF( _1301 )
005121 0F03           18580         PUSH.W  R0, R1
005123 8915           18582         MOV.W   R1,R5
005125 8904           18583         MOV.W   R0,R4
                      18584         CALL    _sprintf
005127 C4rrrrrr       +18584 ;       FCALL   _sprintf
00512B 99700008       18585         ADD.W   R7,#08H
                      18587 ; rs232cmd.c 5140                                       rs232puts( buffer);
00512F 8915           18589         MOV.W   R1,R5
005131 8904           18590         MOV.W   R0,R4
                      18591         CALL    _rs232puts
005133 C4rrrrrr       +18591 ;       FCALL   _rs232puts
                      18592 ; rs232cmd.c 5141                               }
                      18593 ; rs232cmd.c 5142                       }
005137 FE57           18595         BR      _1312
005137 FE5700         18595         BR      _1312
00513A                18596 _1304:
                      18597 ; rs232cmd.c 5143                       else
                      18598 ; rs232cmd.c 5144                       {
                      18599 ; rs232cmd.c 5145                               if ( !PasswordProtected)
00513A 964842rr       18601         MOV.B   ES,#SEG( _PasswordProtected )
00513E 9908rrrr       18602         MOV.W   R0,#SOF( _PasswordProtected )
005142 8A00           18603         MOV.W   R0,[R0]
005144 F250           18604         BNE     _1312
                      18605 ; rs232cmd.c 5146                               {
                      18606 ; rs232cmd.c 5147                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005146 964842rr       18608         MOV.B   ES,#SEG( _ParCnt )
00514A 9908rrrr       18609         MOV.W   R0,#SOF( _ParCnt )
00514E 8200           18610         MOV.B   R0L,[R0]
005150 910402         18611         CMP.B   R0L,#02H
005153 F21B           18612         BNE     _1305
005155 9918rrrr       18613         MOV.W   R1,#SEG( _Cmd )
005159 9908rrrr       18614         MOV.W   R0,#SOF( _Cmd )
00515D 9168rr         18615         MOV.B   R3L,#SEG( __lc_bs )
005160 7177           18616         XOR.B   R3H,R3H
005162 40271E         18617         LEA     R2,R7+30
005165 91A8rr         18618         MOV.B   R5L,#SEG( __lc_bs )
005168 71BB           18619         XOR.B   R5H,R5H
00516A 404720         18620         LEA     R4,R7+32
00516D 0F30           18621         PUSH.W  R4, R5
00516F 0F0C           18623         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 305

ADDR   CODE            LINE SOURCELINE
005171 9938rrrr       18625         MOV.W   R3,#SEG( _1302 )
005175 9928rrrr       18626         MOV.W   R2,#SOF( _1302 )
005179 0F0C           18627         PUSH.W  R2, R3
                      18629         CALL    _sscanf
00517B C4rrrrrr       +18629 ;       FCALL   _sscanf
00517F 9970000C       18630         ADD.W   R7,#0CH
005183 99040002       18632         CMP.W   R0,#02H
005187 F307           18633         BEQ     _1306
005187 F30700         18633         BEQ     _1306
00518A                18634 _1305:
                      18635 ; rs232cmd.c 5148                                               SCPIError = SyntaxErr;
00518A 964842rr       18637         MOV.B   ES,#SEG( _SCPIError )
00518E 9908rrrr       18638         MOV.W   R0,#SOF( _SCPIError )
005192 BA03           18639         MOV.W   [R0],#03H
005194 FE28           18640         BR      _1312
005194 FE28           18640         BR      _1312
005196                18641 _1306:
                      18642 ; rs232cmd.c 5149                                       else
                      18643 ; rs232cmd.c 5150                                       {
                      18644 ; rs232cmd.c 5151                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseG = ScHPhaseG;
005196 964842rr       18646         MOV.B   ES,#SEG( _Suffix )
00519A 9908rrrr       18647         MOV.W   R0,#SOF( _Suffix )
00519E 8A00           18648         MOV.W   R0,[R0]
0051A0 E9000014       18649         MULU.W  R0,#014H
0051A4 B910           18650         MOVS.W  R1,#00H
0051A6 8C271E         18651         MOV.W   R2,[R7+30]
0051A9 964842rr       18652         MOV.B   ES,#SEG( _Calibration+146 )
0051AD 8D28rrrr       18653         MOV.W   [R0+SOF( _Calibration+146 )],R2
                      18654 ; rs232cmd.c 5152                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseM = ScHPhaseM;
0051B1 964842rr       18656         MOV.B   ES,#SEG( _Suffix )
0051B5 9908rrrr       18657         MOV.W   R0,#SOF( _Suffix )
0051B9 8A00           18658         MOV.W   R0,[R0]
0051BB E9000014       18659         MULU.W  R0,#014H
0051BF B910           18660         MOVS.W  R1,#00H
0051C1 8C2720         18661         MOV.W   R2,[R7+32]
0051C4 964842rr       18662         MOV.B   ES,#SEG( _Calibration+152 )
0051C8 8D28rrrr       18663         MOV.W   [R0+SOF( _Calibration+152 )],R2
                      18664 ; rs232cmd.c 5153                                       
                      18665 ; rs232cmd.c 5154                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0051CC 9918rrrr       18667         MOV.W   R1,#SEG( _Calibration )
0051D0 9908rrrr       18668         MOV.W   R0,#SOF( _Calibration )
0051D4 964842rr       18669         MOV.B   ES,#SEG( _CalibrationPtr )
0051D8 9928rrrr       18670         MOV.W   R2,#SOF( _CalibrationPtr )
0051DC 8A22           18671         MOV.W   R2,[R2]
0051DE 993800E0       18672         MOV.W   R3,#0E0H
                      18673         CALL    _NV_Store
0051E2 C4rrrrrr       +18673 ;       FCALL   _NV_Store
                      18674 ; rs232cmd.c 5155                                       }
                      18675 ; rs232cmd.c 5156                               }
                      18676 ; rs232cmd.c 5157                       }
                      18677 ; rs232cmd.c 5158               }
0051E6                18679 _1312:
                      18680 ; rs232cmd.c 5159       }
0051E6 99700022       18682         ADD.W   R7,#022H
0051EA 2F30           18684         POP.W   R4, R5
0051EC D680           18686         RET
                      18688 ; rs232cmd.c 5160       
                      18689 ; rs232cmd.c 5161       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 306

ADDR   CODE            LINE SOURCELINE
                      18690 ; rs232cmd.c 5162       /* FactBBGenDAC                                                          
                                                                                                                             
                                                 RS232CMD.C */
                      18691 ; rs232cmd.c 5163       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18692 ; rs232cmd.c 5164       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18693 ; rs232cmd.c 5165       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      18694 ; rs232cmd.c 5166       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18695 ; rs232cmd.c 5167       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18696 ; rs232cmd.c 5168       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18697 ; rs232cmd.c 5169       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18698 ; rs232cmd.c 5170       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18699 ; rs232cmd.c 5171       /************************************************************************
                            **/
                      18700 ; rs232cmd.c 5172       void FactBBGenDAC( void)
                      18701 ; rs232cmd.c 5173       {
                      18702         ALIGN   1
                      18704         PUBLIC  _FactBBGenDAC
0051EE                18705 _FactBBGenDAC:
0051EE 0F30           18709         PUSH.W  R4, R5
0051F0 99720024       18711         SUB.W   R7,#024H
                      18717 ; rs232cmd.c 5174               char buffer[30];
                      18718 ; rs232cmd.c 5175               UI DACGain, DACOffset, DACLevel;
                      18719 ; rs232cmd.c 5176       
                      18720 ; rs232cmd.c 5177               if ( CmdExecute && !SCPIError)
0051F4 964842rr       18722         MOV.B   ES,#SEG( _CmdExecute )
0051F8 9908rrrr       18723         MOV.W   R0,#SOF( _CmdExecute )
0051FC 8200           18724         MOV.B   R0L,[R0]
                      18725         BEQ     _1324
0051FE F202           +18725 ;       BNE     _LG_1284
005200 D500A3         +18725 ;       JMP.L   _1324
005204 D500A300       +18725 ;       JMP.L   _1324
005204                +18725 _LG_1284:
005204 964842rr       18726         MOV.B   ES,#SEG( _SCPIError )
005208 9908rrrr       18727         MOV.W   R0,#SOF( _SCPIError )
00520C 8A00           18728         MOV.W   R0,[R0]
                      18729         BNE     _1324
00520E F302           +18729 ;       BEQ     _LG_1286
005210 D5009B         +18729 ;       JMP.L   _1324
005214 D5009B00       +18729 ;       JMP.L   _1324
005214                +18729 _LG_1286:
                      18730 ; rs232cmd.c 5178               {
                      18731 ; rs232cmd.c 5179                       if ( CmdRequest)
005214 964842rr       18733         MOV.B   ES,#SEG( _CmdRequest )
005218 9908rrrr       18734         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 307

ADDR   CODE            LINE SOURCELINE
00521C 8200           18735         MOV.B   R0L,[R0]
00521E F33B           18736         BEQ     _1316
                      18737 ; rs232cmd.c 5180                       {
                      18738 ; rs232cmd.c 5181                               if ( ParCnt)
005220 964842rr       18740         MOV.B   ES,#SEG( _ParCnt )
005224 9908rrrr       18741         MOV.W   R0,#SOF( _ParCnt )
005228 8200           18742         MOV.B   R0L,[R0]
00522A F307           18743         BEQ     _1315
                      18744 ; rs232cmd.c 5182                                       SCPIError = SyntaxErr;
00522C 964842rr       18746         MOV.B   ES,#SEG( _SCPIError )
005230 9908rrrr       18747         MOV.W   R0,#SOF( _SCPIError )
005234 BA03           18748         MOV.W   [R0],#03H
                      18749         BR      _1324
005236 D50088         +18749         JMP.L   _1324
005236 D5008800       +18749         JMP.L   _1324
00523A                18750 _1315:
                      18751 ; rs232cmd.c 5183                               else
                      18752 ; rs232cmd.c 5184                               {
                      18753 ; rs232cmd.c 5185                                       sprintf( buffer, "%u,%u,%u\n", Calibratio
                            n.BBCalibration[Suffix[0]].DACGain, 
                      18754 ; rs232cmd.c 5186                                                                                
                                                                                                 Calibration.BBCalibration[Su
                            ffix[0]].DACOffset,
                      18755 ; rs232cmd.c 5187                                                                                
                                                                                                 Calibration.BBCalibration[Su
                            ffix[0]].DACLevel);
00523A 91A8rr         18757         MOV.B   R5L,#SEG( __lc_bs )
00523D 71BB           18758         XOR.B   R5H,R5H
00523F 8947           18759         MOV.W   R4,R7
005241 964842rr       18760         MOV.B   ES,#SEG( _Suffix )
005245 9908rrrr       18761         MOV.W   R0,#SOF( _Suffix )
005249 8A00           18762         MOV.W   R0,[R0]
00524B E9000014       18763         MULU.W  R0,#014H
00524F B910           18764         MOVS.W  R1,#00H
005251 964842rr       18765         MOV.B   ES,#SEG( _Calibration+154 )
005255 8540rrrr       18766         MOV.B   R2L,[R0+SOF( _Calibration+154 )]
005259 B150           18767         MOVS.B  R2H,#00H
00525B 964842rr       18768         MOV.B   ES,#SEG( _Calibration+155 )
00525F 8560rrrr       18769         MOV.B   R3L,[R0+SOF( _Calibration+155 )]
005263 B170           18770         MOVS.B  R3H,#00H
005265 964842rr       18771         MOV.B   ES,#SEG( _Calibration+156 )
005269 8500rrrr       18772         MOV.B   R0L,[R0+SOF( _Calibration+156 )]
00526D B110           18773         MOVS.B  R0H,#00H
00526F 0F01           18774         PUSH.W  R0
005271 0F08           18776         PUSH.W  R3
005273 0F04           18778         PUSH.W  R2
005275 9918rrrr       18780         MOV.W   R1,#SEG( _1174 )
005279 9908rrrr       18781         MOV.W   R0,#SOF( _1174 )
00527D 0F03           18782         PUSH.W  R0, R1
00527F 8915           18784         MOV.W   R1,R5
005281 8904           18785         MOV.W   R0,R4
                      18786         CALL    _sprintf
005283 C4rrrrrr       +18786 ;       FCALL   _sprintf
005287 9970000A       18787         ADD.W   R7,#0AH
                      18789 ; rs232cmd.c 5188                                       rs232puts( buffer);
00528B 8915           18791         MOV.W   R1,R5
00528D 8904           18792         MOV.W   R0,R4
                      18793         CALL    _rs232puts
00528F C4rrrrrr       +18793 ;       FCALL   _rs232puts
                      18794 ; rs232cmd.c 5189                               }
                      18795 ; rs232cmd.c 5190                       }
005293 FE5A           18797         BR      _1324
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 308

ADDR   CODE            LINE SOURCELINE
005293 FE5A00         18797         BR      _1324
005296                18798 _1316:
                      18799 ; rs232cmd.c 5191                       else
                      18800 ; rs232cmd.c 5192                       {
                      18801 ; rs232cmd.c 5193                               if ( !PasswordProtected)
005296 964842rr       18803         MOV.B   ES,#SEG( _PasswordProtected )
00529A 9908rrrr       18804         MOV.W   R0,#SOF( _PasswordProtected )
00529E 8A00           18805         MOV.W   R0,[R0]
0052A0 F253           18806         BNE     _1324
                      18807 ; rs232cmd.c 5194                               {
                      18808 ; rs232cmd.c 5195                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &DACGain, &DACOffset, &DACLevel)) != 3))
0052A2 964842rr       18810         MOV.B   ES,#SEG( _ParCnt )
0052A6 9908rrrr       18811         MOV.W   R0,#SOF( _ParCnt )
0052AA 8200           18812         MOV.B   R0L,[R0]
0052AC 910403         18813         CMP.B   R0L,#03H
0052AF F220           18814         BNE     _1317
0052B1 9168rr         18815         MOV.B   R3L,#SEG( __lc_bs )
0052B4 7177           18816         XOR.B   R3H,R3H
0052B6 40271E         18817         LEA     R2,R7+30
0052B9 91A8rr         18818         MOV.B   R5L,#SEG( __lc_bs )
0052BC 71BB           18819         XOR.B   R5H,R5H
0052BE 404720         18820         LEA     R4,R7+32
0052C1 9128rr         18821         MOV.B   R1L,#SEG( __lc_bs )
0052C4 7133           18822         XOR.B   R1H,R1H
0052C6 400722         18823         LEA     R0,R7+34
0052C9 0F03           18824         PUSH.W  R0, R1
0052CB 0F30           18826         PUSH.W  R4, R5
0052CD 0F0C           18828         PUSH.W  R2, R3
0052CF 9938rrrr       18830         MOV.W   R3,#SEG( _1175 )
0052D3 9928rrrr       18831         MOV.W   R2,#SOF( _1175 )
0052D7 0F0C           18832         PUSH.W  R2, R3
0052D9 9918rrrr       18834         MOV.W   R1,#SEG( _Cmd )
0052DD 9908rrrr       18835         MOV.W   R0,#SOF( _Cmd )
                      18836         CALL    _sscanf
0052E1 C4rrrrrr       +18836 ;       FCALL   _sscanf
0052E5 99700010       18837         ADD.W   R7,#010H
0052E9 99040003       18839         CMP.W   R0,#03H
0052ED F307           18840         BEQ     _1318
0052ED F30700         18840         BEQ     _1318
0052F0                18841 _1317:
                      18842 ; rs232cmd.c 5196                                               SCPIError = SyntaxErr;
0052F0 964842rr       18844         MOV.B   ES,#SEG( _SCPIError )
0052F4 9908rrrr       18845         MOV.W   R0,#SOF( _SCPIError )
0052F8 BA03           18846         MOV.W   [R0],#03H
0052FA FE26           18847         BR      _1324
0052FA FE26           18847         BR      _1324
0052FC                18848 _1318:
                      18849 ; rs232cmd.c 5197                                       else
                      18850 ; rs232cmd.c 5198                                       {
                      18851 ; rs232cmd.c 5199                                               Calibration.BBCalibration[Suffix[
                            0]].DACGain = DACGain;
0052FC 8C271E         18853         MOV.W   R2,[R7+30]
0052FF 964842rr       18854         MOV.B   ES,#SEG( _Suffix )
005303 9908rrrr       18855         MOV.W   R0,#SOF( _Suffix )
005307 8A00           18856         MOV.W   R0,[R0]
005309 E9000014       18857         MULU.W  R0,#014H
00530D B910           18858         MOVS.W  R1,#00H
00530F 964842rr       18859         MOV.B   ES,#SEG( _Calibration+154 )
005313 8548rrrr       18860         MOV.B   [R0+SOF( _Calibration+154 )],R2L
                      18861 ; rs232cmd.c 5200                                               Calibration.BBCalibration[Suffix[
                            0]].DACOffset = DACOffset;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 309

ADDR   CODE            LINE SOURCELINE
005317 8C2720         18863         MOV.W   R2,[R7+32]
00531A 964842rr       18864         MOV.B   ES,#SEG( _Calibration+155 )
00531E 8548rrrr       18865         MOV.B   [R0+SOF( _Calibration+155 )],R2L
                      18866 ; rs232cmd.c 5201                                               Calibration.BBCalibration[Suffix[
                            0]].DACLevel = DACLevel;        
005322 8C2722         18868         MOV.W   R2,[R7+34]
005325 964842rr       18869         MOV.B   ES,#SEG( _Calibration+156 )
005329 8548rrrr       18870         MOV.B   [R0+SOF( _Calibration+156 )],R2L
                      18871 ; rs232cmd.c 5202                                                               
                      18872 ; rs232cmd.c 5203                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
00532D 9918rrrr       18874         MOV.W   R1,#SEG( _Calibration )
005331 9908rrrr       18875         MOV.W   R0,#SOF( _Calibration )
005335 964842rr       18876         MOV.B   ES,#SEG( _CalibrationPtr )
005339 9928rrrr       18877         MOV.W   R2,#SOF( _CalibrationPtr )
00533D 8A22           18878         MOV.W   R2,[R2]
00533F 993800E0       18879         MOV.W   R3,#0E0H
                      18880         CALL    _NV_Store
005343 C4rrrrrr       +18880 ;       FCALL   _NV_Store
                      18881 ; rs232cmd.c 5204                                       }
                      18882 ; rs232cmd.c 5205                               }
                      18883 ; rs232cmd.c 5206                       }
                      18884 ; rs232cmd.c 5207               }
005348                18886 _1324:
                      18887 ; rs232cmd.c 5208       }
005348 99700024       18889         ADD.W   R7,#024H
00534C 2F30           18891         POP.W   R4, R5
00534E D680           18893         RET
                      18895 ; rs232cmd.c 5209       
                      18896 ; rs232cmd.c 5210       /************************************************************************
                            **/
                      18897 ; rs232cmd.c 5211       /* FactTSGenDate                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      18898 ; rs232cmd.c 5212       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18899 ; rs232cmd.c 5213       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      18900 ; rs232cmd.c 5214       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      18901 ; rs232cmd.c 5215       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      18902 ; rs232cmd.c 5216       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      18903 ; rs232cmd.c 5217       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      18904 ; rs232cmd.c 5218       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      18905 ; rs232cmd.c 5219       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      18906 ; rs232cmd.c 5220       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 310

ADDR   CODE            LINE SOURCELINE
                      18907 ; rs232cmd.c 5221       void FactTSGenDate( void)
                      18908 ; rs232cmd.c 5222       {
                      18909         ALIGN   1
                      18911         PUBLIC  _FactTSGenDate
005350                18912 _FactTSGenDate:
005350 0F30           18916         PUSH.W  R4, R5
005352 9972001A       18918         SUB.W   R7,#01AH
                      18924 ; rs232cmd.c 5223               UI year, month, day;
                      18925 ; rs232cmd.c 5224               char buffer[20];
                      18926 ; rs232cmd.c 5225       
                      18927 ; rs232cmd.c 5226               if ( CmdExecute && !SCPIError)
005356 964842rr       18929         MOV.B   ES,#SEG( _CmdExecute )
00535A 9908rrrr       18930         MOV.W   R0,#SOF( _CmdExecute )
00535E 8200           18931         MOV.B   R0L,[R0]
                      18932         BEQ     _1338
005360 F202           +18932 ;       BNE     _LG_1298
005362 D500C7         +18932 ;       JMP.L   _1338
005366 D500C700       +18932 ;       JMP.L   _1338
005366                +18932 _LG_1298:
005366 964842rr       18933         MOV.B   ES,#SEG( _SCPIError )
00536A 9908rrrr       18934         MOV.W   R0,#SOF( _SCPIError )
00536E 8A00           18935         MOV.W   R0,[R0]
                      18936         BNE     _1338
005370 F302           +18936 ;       BEQ     _LG_1300
005372 D500BF         +18936 ;       JMP.L   _1338
005376 D500BF00       +18936 ;       JMP.L   _1338
005376                +18936 _LG_1300:
                      18937 ; rs232cmd.c 5227               {
                      18938 ; rs232cmd.c 5228                       if ( CmdRequest)
005376 964842rr       18940         MOV.B   ES,#SEG( _CmdRequest )
00537A 9908rrrr       18941         MOV.W   R0,#SOF( _CmdRequest )
00537E 8200           18942         MOV.B   R0L,[R0]
005380 F35A           18943         BEQ     _1328
                      18944 ; rs232cmd.c 5229                       {
                      18945 ; rs232cmd.c 5230                               if ( ParCnt)
005382 964842rr       18947         MOV.B   ES,#SEG( _ParCnt )
005386 9908rrrr       18948         MOV.W   R0,#SOF( _ParCnt )
00538A 8200           18949         MOV.B   R0L,[R0]
00538C F307           18950         BEQ     _1327
                      18951 ; rs232cmd.c 5231                                       SCPIError = SyntaxErr;
00538E 964842rr       18953         MOV.B   ES,#SEG( _SCPIError )
005392 9908rrrr       18954         MOV.W   R0,#SOF( _SCPIError )
005396 BA03           18955         MOV.W   [R0],#03H
                      18956         BR      _1338
005398 D500AC         +18956         JMP.L   _1338
005398 D500AC00       +18956         JMP.L   _1338
00539C                18957 _1327:
                      18958 ; rs232cmd.c 5232                               else
                      18959 ; rs232cmd.c 5233                               {
                      18960 ; rs232cmd.c 5234                                       day = Calibration.CBCalibration.Date % 10
                            0;
00539C 964842rr       18962         MOV.B   ES,#SEG( _Calibration+198 )
0053A0 9918rrrr       18963         MOV.W   R1,#SOF( _Calibration+198 )
0053A4 8B01           18964         MOV.W   R0,[R1+]
0053A6 8A11           18965         MOV.W   R1,[R1]
0053A8 B930           18966         MOV.W   R3,#00H
0053AA 99280064       18967         MOV.W   R2,#064H
0053AE 964842rr       18968         MOV.B   ES,#SEG( _Calibration+198 )
0053B2 9948rrrr       18969         MOV.W   R4,#SOF( _Calibration+198 )
0053B6 8B0C           18970         MOV.W   [R4+],R0
0053B8 8A1C           18971         MOV.W   [R4],R1
0053BA C4rrrrrr       18972         FCALL   __UMODL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 311

ADDR   CODE            LINE SOURCELINE
0053BE 8C0F04         18973         MOV.W   [R7+4],R0
0053C1 964842rr       18974         MOV.B   ES,#SEG( _Calibration+198 )
0053C5 9918rrrr       18975         MOV.W   R1,#SOF( _Calibration+198 )
0053C9 8B01           18976         MOV.W   R0,[R1+]
0053CB 8A11           18977         MOV.W   R1,[R1]
                      18978 ; rs232cmd.c 5235                                       month = ( Calibration.CBCalibration.Date 
                            / 100) % 100;
0053CD B930           18980         MOV.W   R3,#00H
0053CF 99280064       18981         MOV.W   R2,#064H
0053D3 8953           18982         MOV.W   R5,R3
0053D5 8942           18983         MOV.W   R4,R2
0053D7 C4rrrrrr       18984         FCALL   __UDIVL
0053DB 8935           18985         MOV.W   R3,R5
0053DD 8924           18986         MOV.W   R2,R4
0053DF C4rrrrrr       18987         FCALL   __UMODL
0053E3 8C0F02         18988         MOV.W   [R7+2],R0
                      18989 ; rs232cmd.c 5236                                       year = ( Calibration.CBCalibration.Date /
                             10000);
0053E6 B930           18991         MOV.W   R3,#00H
0053E8 99282710       18992         MOV.W   R2,#02710H
0053EC 964842rr       18993         MOV.B   ES,#SEG( _Calibration+198 )
0053F0 9918rrrr       18994         MOV.W   R1,#SOF( _Calibration+198 )
0053F4 8B01           18995         MOV.W   R0,[R1+]
0053F6 8A11           18996         MOV.W   R1,[R1]
0053F8 C4rrrrrr       18997         FCALL   __UDIVL
0053FC 8A0F           18998         MOV.W   [R7],R0
                      18999 ; rs232cmd.c 5237       
                      19000 ; rs232cmd.c 5238                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
0053FE 91A8rr         19002         MOV.B   R5L,#SEG( __lc_bs )
005401 71BB           19003         XOR.B   R5H,R5H
005403 404706         19004         LEA     R4,R7+6
005406 8C0704         19005         MOV.W   R0,[R7+4]
005409 0F01           19006         PUSH.W  R0
00540B 8C0704         19008         MOV.W   R0,[R7+4]
00540E 0F01           19009         PUSH.W  R0
005410 8C0704         19011         MOV.W   R0,[R7+4]
005413 0F01           19012         PUSH.W  R0
005415 9918rrrr       19014         MOV.W   R1,#SEG( _1174 )
005419 9908rrrr       19015         MOV.W   R0,#SOF( _1174 )
00541D 0F03           19016         PUSH.W  R0, R1
00541F 8915           19018         MOV.W   R1,R5
005421 8904           19019         MOV.W   R0,R4
                      19020         CALL    _sprintf
005423 C4rrrrrr       +19020 ;       FCALL   _sprintf
005427 9970000A       19021         ADD.W   R7,#0AH
                      19023 ; rs232cmd.c 5239       
                      19024 ; rs232cmd.c 5240                                       rs232puts( buffer);
00542B 8915           19026         MOV.W   R1,R5
00542D 8904           19027         MOV.W   R0,R4
                      19028         CALL    _rs232puts
00542F C4rrrrrr       +19028 ;       FCALL   _rs232puts
                      19029 ; rs232cmd.c 5241                               }
                      19030 ; rs232cmd.c 5242                       }
005433 FE5F           19032         BR      _1338
005433 FE5F00         19032         BR      _1338
005436                19033 _1328:
                      19034 ; rs232cmd.c 5243                       else
                      19035 ; rs232cmd.c 5244                       {
                      19036 ; rs232cmd.c 5245                               if ( !PasswordProtected)
005436 964842rr       19038         MOV.B   ES,#SEG( _PasswordProtected )
00543A 9908rrrr       19039         MOV.W   R0,#SOF( _PasswordProtected )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 312

ADDR   CODE            LINE SOURCELINE
00543E 8A00           19040         MOV.W   R0,[R0]
005440 F258           19041         BNE     _1338
                      19042 ; rs232cmd.c 5246                               {
                      19043 ; rs232cmd.c 5247                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
005442 964842rr       19045         MOV.B   ES,#SEG( _ParCnt )
005446 9908rrrr       19046         MOV.W   R0,#SOF( _ParCnt )
00544A 8200           19047         MOV.B   R0L,[R0]
00544C 910403         19048         CMP.B   R0L,#03H
00544F F21F           19049         BNE     _1329
005451 9168rr         19050         MOV.B   R3L,#SEG( __lc_bs )
005454 7177           19051         XOR.B   R3H,R3H
005456 8927           19052         MOV.W   R2,R7
005458 91A8rr         19053         MOV.B   R5L,#SEG( __lc_bs )
00545B 71BB           19054         XOR.B   R5H,R5H
00545D 404702         19055         LEA     R4,R7+2
005460 9128rr         19056         MOV.B   R1L,#SEG( __lc_bs )
005463 7133           19057         XOR.B   R1H,R1H
005465 400704         19058         LEA     R0,R7+4
005468 0F03           19059         PUSH.W  R0, R1
00546A 0F30           19061         PUSH.W  R4, R5
00546C 0F0C           19063         PUSH.W  R2, R3
00546E 9938rrrr       19065         MOV.W   R3,#SEG( _1175 )
005472 9928rrrr       19066         MOV.W   R2,#SOF( _1175 )
005476 0F0C           19067         PUSH.W  R2, R3
005478 9918rrrr       19069         MOV.W   R1,#SEG( _Cmd )
00547C 9908rrrr       19070         MOV.W   R0,#SOF( _Cmd )
                      19071         CALL    _sscanf
005480 C4rrrrrr       +19071 ;       FCALL   _sscanf
005484 99700010       19072         ADD.W   R7,#010H
005488 99040003       19074         CMP.W   R0,#03H
00548C F306           19075         BEQ     _1330
00548C F306           19075         BEQ     _1330
00548E                19076 _1329:
                      19077 ; rs232cmd.c 5248                                               SCPIError = SyntaxErr;
00548E 964842rr       19079         MOV.B   ES,#SEG( _SCPIError )
005492 9908rrrr       19080         MOV.W   R0,#SOF( _SCPIError )
005496 BA03           19081         MOV.W   [R0],#03H
005498 FE2C           19082         BR      _1338
005498 FE2C           19082         BR      _1338
00549A                19083 _1330:
                      19084 ; rs232cmd.c 5249                                       else
                      19085 ; rs232cmd.c 5250                                       {
                      19086 ; rs232cmd.c 5251                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
00549A 8A07           19088         MOV.W   R0,[R7]
00549C 8C1702         19089         MOV.W   R1,[R7+2]
00549F 8C2704         19090         MOV.W   R2,[R7+4]
                      19091         CALL    _ValidateDate
0054A2 C4rrrrrr       +19091 ;       FCALL   _ValidateDate
0054A6 6900           19092         OR.W    R0,R0
0054A8 F207           19093         BNE     _1331
                      19094 ; rs232cmd.c 5252                                                       SCPIError = ExecErr;
0054AA 964842rr       19096         MOV.B   ES,#SEG( _SCPIError )
0054AE 9908rrrr       19097         MOV.W   R0,#SOF( _SCPIError )
0054B2 9A08001D       19098         MOV.W   [R0],#01DH
0054B6 FE1D           19099         BR      _1338
0054B6 FE1D           19099         BR      _1338
0054B8                19100 _1331:
                      19101 ; rs232cmd.c 5253                                               else
                      19102 ; rs232cmd.c 5254                                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 313

ADDR   CODE            LINE SOURCELINE
                      19103 ; rs232cmd.c 5255                                                       Calibration.CBCalibration
                            .Date = day + 100*month + 10000*year;
0054B8 8C0702         19105         MOV.W   R0,[R7+2]
0054BB E9000064       19106         MULU.W  R0,#064H
0054BF 0C0704         19107         ADD.W   R0,[R7+4]
0054C2 8A27           19108         MOV.W   R2,[R7]
0054C4 E9202710       19109         MULU.W  R2,#02710H
0054C8 0902           19110         ADD.W   R0,R2
0054CA B910           19111         MOVS.W  R1,#00H
0054CC 964842rr       19112         MOV.B   ES,#SEG( _Calibration+198 )
0054D0 9928rrrr       19113         MOV.W   R2,#SOF( _Calibration+198 )
0054D4 8B0A           19114         MOV.W   [R2+],R0
0054D6 8A1A           19115         MOV.W   [R2],R1
                      19116 ; rs232cmd.c 5256                                               
                      19117 ; rs232cmd.c 5257                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0054D8 9918rrrr       19119         MOV.W   R1,#SEG( _Calibration )
0054DC 9908rrrr       19120         MOV.W   R0,#SOF( _Calibration )
0054E0 964842rr       19121         MOV.B   ES,#SEG( _CalibrationPtr )
0054E4 9928rrrr       19122         MOV.W   R2,#SOF( _CalibrationPtr )
0054E8 8A22           19123         MOV.W   R2,[R2]
0054EA 993800E0       19124         MOV.W   R3,#0E0H
                      19125         CALL    _NV_Store
0054EE C4rrrrrr       +19125 ;       FCALL   _NV_Store
                      19126 ; rs232cmd.c 5258                                               }
                      19127 ; rs232cmd.c 5259                                       }                               
                      19128 ; rs232cmd.c 5260                               }
                      19129 ; rs232cmd.c 5261                       }
                      19130 ; rs232cmd.c 5262               }
0054F2                19132 _1338:
                      19133 ; rs232cmd.c 5263       }
0054F2 9970001A       19135         ADD.W   R7,#01AH
0054F6 2F30           19137         POP.W   R4, R5
0054F8 D680           19139         RET
                      19141 ; rs232cmd.c 5264       
                      19142 ; rs232cmd.c 5265       /************************************************************************
                            **/
                      19143 ; rs232cmd.c 5266       /* FactTSGenAGain                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19144 ; rs232cmd.c 5267       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19145 ; rs232cmd.c 5268       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19146 ; rs232cmd.c 5269       /* Revised:       000727,                                                
                                                                                                                             
                                                                                    */
                      19147 ; rs232cmd.c 5270       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19148 ; rs232cmd.c 5271       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19149 ; rs232cmd.c 5272       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 314

ADDR   CODE            LINE SOURCELINE
                      19150 ; rs232cmd.c 5273       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19151 ; rs232cmd.c 5274       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19152 ; rs232cmd.c 5275       /************************************************************************
                            **/
                      19153 ; rs232cmd.c 5276       void FactTSGenAGain( void)
                      19154 ; rs232cmd.c 5277       {
                      19155         ALIGN   1
                      19157         PUBLIC  _FactTSGenAGain
0054FA                19158 _FactTSGenAGain:
0054FA 0F30           19162         PUSH.W  R4, R5
0054FC 99720018       19164         SUB.W   R7,#018H
                      19169 ; rs232cmd.c 5278               char buffer[20];
                      19170 ; rs232cmd.c 5279               UC GainG, GainM;
                      19171 ; rs232cmd.c 5280       
                      19172 ; rs232cmd.c 5281               if ( CmdExecute && !SCPIError)
005500 964842rr       19174         MOV.B   ES,#SEG( _CmdExecute )
005504 9908rrrr       19175         MOV.W   R0,#SOF( _CmdExecute )
005508 8200           19176         MOV.B   R0L,[R0]
                      19177         BEQ     _1352
00550A F202           +19177 ;       BNE     _LG_1314
00550C D50095         +19177 ;       JMP.L   _1352
005510 D5009500       +19177 ;       JMP.L   _1352
005510                +19177 _LG_1314:
005510 964842rr       19178         MOV.B   ES,#SEG( _SCPIError )
005514 9908rrrr       19179         MOV.W   R0,#SOF( _SCPIError )
005518 8A00           19180         MOV.W   R0,[R0]
                      19181         BNE     _1352
00551A F302           +19181 ;       BEQ     _LG_1316
00551C D5008D         +19181 ;       JMP.L   _1352
005520 D5008D00       +19181 ;       JMP.L   _1352
005520                +19181 _LG_1316:
                      19182 ; rs232cmd.c 5282               {
                      19183 ; rs232cmd.c 5283                       if ( CmdRequest)
005520 964842rr       19185         MOV.B   ES,#SEG( _CmdRequest )
005524 9908rrrr       19186         MOV.W   R0,#SOF( _CmdRequest )
005528 8200           19187         MOV.B   R0L,[R0]
00552A F32E           19188         BEQ     _1342
                      19189 ; rs232cmd.c 5284                       {
                      19190 ; rs232cmd.c 5285                               if ( ParCnt)
00552C 964842rr       19192         MOV.B   ES,#SEG( _ParCnt )
005530 9908rrrr       19193         MOV.W   R0,#SOF( _ParCnt )
005534 8200           19194         MOV.B   R0L,[R0]
005536 F306           19195         BEQ     _1341
                      19196 ; rs232cmd.c 5286                                       SCPIError = SyntaxErr;
005538 964842rr       19198         MOV.B   ES,#SEG( _SCPIError )
00553C 9908rrrr       19199         MOV.W   R0,#SOF( _SCPIError )
005540 BA03           19200         MOV.W   [R0],#03H
005542 FE7A           19201         BR      _1352
005542 FE7A           19201         BR      _1352
005544                19202 _1341:
                      19203 ; rs232cmd.c 5287                               else
                      19204 ; rs232cmd.c 5288                               {
                      19205 ; rs232cmd.c 5289                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.GainG, 
                      19206 ; rs232cmd.c 5290                                                                                
                                                                                        Calibration.CBCalibration.GainM);
005544 91A8rr         19208         MOV.B   R5L,#SEG( __lc_bs )
005547 71BB           19209         XOR.B   R5H,R5H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 315

ADDR   CODE            LINE SOURCELINE
005549 8947           19210         MOV.W   R4,R7
00554B 964842rr       19211         MOV.B   ES,#SEG( _Calibration+213 )
00554F 9908rrrr       19212         MOV.W   R0,#SOF( _Calibration+213 )
005553 8200           19213         MOV.B   R0L,[R0]
005555 B110           19214         MOVS.B  R0H,#00H
005557 964842rr       19215         MOV.B   ES,#SEG( _Calibration+215 )
00555B 9918rrrr       19216         MOV.W   R1,#SOF( _Calibration+215 )
00555F 8221           19217         MOV.B   R1L,[R1]
005561 B130           19218         MOVS.B  R1H,#00H
005563 0F02           19219         PUSH.W  R1
005565 0F01           19221         PUSH.W  R0
005567 9918rrrr       19223         MOV.W   R1,#SEG( _1301 )
00556B 9908rrrr       19224         MOV.W   R0,#SOF( _1301 )
00556F 0F03           19225         PUSH.W  R0, R1
005571 8915           19227         MOV.W   R1,R5
005573 8904           19228         MOV.W   R0,R4
                      19229         CALL    _sprintf
005575 C4rrrrrr       +19229 ;       FCALL   _sprintf
005579 99700008       19230         ADD.W   R7,#08H
                      19232 ; rs232cmd.c 5291                                       rs232puts( buffer);
00557D 8915           19234         MOV.W   R1,R5
00557F 8904           19235         MOV.W   R0,R4
                      19236         CALL    _rs232puts
005581 C4rrrrrr       +19236 ;       FCALL   _rs232puts
                      19237 ; rs232cmd.c 5292                               }
                      19238 ; rs232cmd.c 5293                       }
005585 FE59           19240         BR      _1352
005585 FE5900         19240         BR      _1352
005588                19241 _1342:
                      19242 ; rs232cmd.c 5294                       else
                      19243 ; rs232cmd.c 5295                       {
                      19244 ; rs232cmd.c 5296                               if ( !PasswordProtected)
005588 964842rr       19246         MOV.B   ES,#SEG( _PasswordProtected )
00558C 9908rrrr       19247         MOV.W   R0,#SOF( _PasswordProtected )
005590 8A00           19248         MOV.W   R0,[R0]
005592 F252           19249         BNE     _1352
                      19250 ; rs232cmd.c 5297                               {
                      19251 ; rs232cmd.c 5298                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &GainG, &GainM)) != 2))
005594 964842rr       19253         MOV.B   ES,#SEG( _ParCnt )
005598 9908rrrr       19254         MOV.W   R0,#SOF( _ParCnt )
00559C 8200           19255         MOV.B   R0L,[R0]
00559E 910402         19256         CMP.B   R0L,#02H
0055A1 F21B           19257         BNE     _1343
0055A3 9918rrrr       19258         MOV.W   R1,#SEG( _Cmd )
0055A7 9908rrrr       19259         MOV.W   R0,#SOF( _Cmd )
0055AB 9168rr         19260         MOV.B   R3L,#SEG( __lc_bs )
0055AE 7177           19261         XOR.B   R3H,R3H
0055B0 402714         19262         LEA     R2,R7+20
0055B3 91A8rr         19263         MOV.B   R5L,#SEG( __lc_bs )
0055B6 71BB           19264         XOR.B   R5H,R5H
0055B8 404716         19265         LEA     R4,R7+22
0055BB 0F30           19266         PUSH.W  R4, R5
0055BD 0F0C           19268         PUSH.W  R2, R3
0055BF 9938rrrr       19270         MOV.W   R3,#SEG( _1302 )
0055C3 9928rrrr       19271         MOV.W   R2,#SOF( _1302 )
0055C7 0F0C           19272         PUSH.W  R2, R3
                      19274         CALL    _sscanf
0055C9 C4rrrrrr       +19274 ;       FCALL   _sscanf
0055CD 9970000C       19275         ADD.W   R7,#0CH
0055D1 99040002       19277         CMP.W   R0,#02H
0055D5 F307           19278         BEQ     _1344
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 316

ADDR   CODE            LINE SOURCELINE
0055D5 F30700         19278         BEQ     _1344
0055D8                19279 _1343:
                      19280 ; rs232cmd.c 5299                                               SCPIError = SyntaxErr;
0055D8 964842rr       19282         MOV.B   ES,#SEG( _SCPIError )
0055DC 9908rrrr       19283         MOV.W   R0,#SOF( _SCPIError )
0055E0 BA03           19284         MOV.W   [R0],#03H
0055E2 FE2A           19285         BR      _1352
0055E2 FE2A           19285         BR      _1352
0055E4                19286 _1344:
                      19287 ; rs232cmd.c 5300                                       else
                      19288 ; rs232cmd.c 5301                                       {
                      19289 ; rs232cmd.c 5302                                               Calibration.CBCalibration.GainG =
                             GainG;
0055E4 840714         19291         MOV.B   R0L,[R7+20]
0055E7 964842rr       19292         MOV.B   ES,#SEG( _Calibration+213 )
0055EB 9918rrrr       19293         MOV.W   R1,#SOF( _Calibration+213 )
0055EF 8209           19294         MOV.B   [R1],R0L
                      19295 ; rs232cmd.c 5303                                               Calibration.CBCalibration.GainM =
                             GainM;
0055F1 840716         19297         MOV.B   R0L,[R7+22]
0055F4 964842rr       19298         MOV.B   ES,#SEG( _Calibration+215 )
0055F8 9918rrrr       19299         MOV.W   R1,#SOF( _Calibration+215 )
0055FC 8209           19300         MOV.B   [R1],R0L
                      19301 ; rs232cmd.c 5304                                                                                
                                                                                                                             
                                                                                                                            
                      19302 ; rs232cmd.c 5305                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0055FE 9918rrrr       19304         MOV.W   R1,#SEG( _Calibration )
005602 9908rrrr       19305         MOV.W   R0,#SOF( _Calibration )
005606 964842rr       19306         MOV.B   ES,#SEG( _CalibrationPtr )
00560A 9928rrrr       19307         MOV.W   R2,#SOF( _CalibrationPtr )
00560E 8A22           19308         MOV.W   R2,[R2]
005610 993800E0       19309         MOV.W   R3,#0E0H
                      19310         CALL    _NV_Store
005614 C4rrrrrr       +19310 ;       FCALL   _NV_Store
                      19311 ; rs232cmd.c 5306       
                      19312 ; rs232cmd.c 5307                                               if ( CBSetup.System < NTSC)
005618 964842rr       19314         MOV.B   ES,#SEG( _CBSetup )
00561C 9908rrrr       19315         MOV.W   R0,#SOF( _CBSetup )
005620 8200           19316         MOV.B   R0L,[R0]
005622 910402         19317         CMP.B   R0L,#02H
005625 F005           19318         BCC     _1345
                      19319 ; rs232cmd.c 5308                                                       WriteCBGain( GainG);
005627 840714         19321         MOV.B   R0L,[R7+20]
                      19322         CALL    _WriteCBGain
00562A C4rrrrrr       +19322 ;       FCALL   _WriteCBGain
00562E FE04           19323         BR      _1352
00562E FE04           19323         BR      _1352
005630                19324 _1345:
                      19325 ; rs232cmd.c 5309                                               else
                      19326 ; rs232cmd.c 5310                                                       WriteCBGain( GainM);
005630 840716         19328         MOV.B   R0L,[R7+22]
                      19329         CALL    _WriteCBGain
005633 C4rrrrrr       +19329 ;       FCALL   _WriteCBGain
                      19330 ; rs232cmd.c 5311                                       }
                      19331 ; rs232cmd.c 5312                               }
                      19332 ; rs232cmd.c 5313                       }
                      19333 ; rs232cmd.c 5314               }
005638                19335 _1352:
                      19336 ; rs232cmd.c 5315       }
005638 99700018       19338         ADD.W   R7,#018H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 317

ADDR   CODE            LINE SOURCELINE
00563C 2F30           19340         POP.W   R4, R5
00563E D680           19342         RET
                      19344 ; rs232cmd.c 5316       
                      19345 ; rs232cmd.c 5317       /************************************************************************
                            **/
                      19346 ; rs232cmd.c 5318       /* FactTSGenCGain                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19347 ; rs232cmd.c 5319       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19348 ; rs232cmd.c 5320       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19349 ; rs232cmd.c 5321       /* Revised:       000727,                                                
                                                                                                                             
                                                                                    */
                      19350 ; rs232cmd.c 5322       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19351 ; rs232cmd.c 5323       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19352 ; rs232cmd.c 5324       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      19353 ; rs232cmd.c 5325       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19354 ; rs232cmd.c 5326       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19355 ; rs232cmd.c 5327       /************************************************************************
                            **/
                      19356 ; rs232cmd.c 5328       void FactTSGenCGain( void)
                      19357 ; rs232cmd.c 5329       {
                      19358         ALIGN   1
                      19360         PUBLIC  _FactTSGenCGain
005640                19361 _FactTSGenCGain:
005640 0F30           19365         PUSH.W  R4, R5
005642 99720018       19367         SUB.W   R7,#018H
                      19372 ; rs232cmd.c 5330               char buffer[20];
                      19373 ; rs232cmd.c 5331               UC ChromaGainG, ChromaGainM;
                      19374 ; rs232cmd.c 5332       
                      19375 ; rs232cmd.c 5333               if ( CmdExecute && !SCPIError)
005646 964842rr       19377         MOV.B   ES,#SEG( _CmdExecute )
00564A 9908rrrr       19378         MOV.W   R0,#SOF( _CmdExecute )
00564E 8200           19379         MOV.B   R0L,[R0]
                      19380         BEQ     _1367
005650 F202           +19380 ;       BNE     _LG_1330
005652 D50095         +19380 ;       JMP.L   _1367
005656 D5009500       +19380 ;       JMP.L   _1367
005656                +19380 _LG_1330:
005656 964842rr       19381         MOV.B   ES,#SEG( _SCPIError )
00565A 9908rrrr       19382         MOV.W   R0,#SOF( _SCPIError )
00565E 8A00           19383         MOV.W   R0,[R0]
                      19384         BNE     _1367
005660 F302           +19384 ;       BEQ     _LG_1332
005662 D5008D         +19384 ;       JMP.L   _1367
005666 D5008D00       +19384 ;       JMP.L   _1367
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 318

ADDR   CODE            LINE SOURCELINE
005666                +19384 _LG_1332:
                      19385 ; rs232cmd.c 5334               {
                      19386 ; rs232cmd.c 5335                       if ( CmdRequest)
005666 964842rr       19388         MOV.B   ES,#SEG( _CmdRequest )
00566A 9908rrrr       19389         MOV.W   R0,#SOF( _CmdRequest )
00566E 8200           19390         MOV.B   R0L,[R0]
005670 F32E           19391         BEQ     _1357
                      19392 ; rs232cmd.c 5336                       {
                      19393 ; rs232cmd.c 5337                               if ( ParCnt)
005672 964842rr       19395         MOV.B   ES,#SEG( _ParCnt )
005676 9908rrrr       19396         MOV.W   R0,#SOF( _ParCnt )
00567A 8200           19397         MOV.B   R0L,[R0]
00567C F306           19398         BEQ     _1356
                      19399 ; rs232cmd.c 5338                                       SCPIError = SyntaxErr;
00567E 964842rr       19401         MOV.B   ES,#SEG( _SCPIError )
005682 9908rrrr       19402         MOV.W   R0,#SOF( _SCPIError )
005686 BA03           19403         MOV.W   [R0],#03H
005688 FE7A           19404         BR      _1367
005688 FE7A           19404         BR      _1367
00568A                19405 _1356:
                      19406 ; rs232cmd.c 5339                               else
                      19407 ; rs232cmd.c 5340                               {
                      19408 ; rs232cmd.c 5341                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ChromaGainG, 
                      19409 ; rs232cmd.c 5342                                                                                
                                                                                        Calibration.CBCalibration.ChromaGainM
                            );
00568A 91A8rr         19411         MOV.B   R5L,#SEG( __lc_bs )
00568D 71BB           19412         XOR.B   R5H,R5H
00568F 8947           19413         MOV.W   R4,R7
005691 964842rr       19414         MOV.B   ES,#SEG( _Calibration+214 )
005695 9908rrrr       19415         MOV.W   R0,#SOF( _Calibration+214 )
005699 8200           19416         MOV.B   R0L,[R0]
00569B B110           19417         MOVS.B  R0H,#00H
00569D 964842rr       19418         MOV.B   ES,#SEG( _Calibration+216 )
0056A1 9918rrrr       19419         MOV.W   R1,#SOF( _Calibration+216 )
0056A5 8221           19420         MOV.B   R1L,[R1]
0056A7 B130           19421         MOVS.B  R1H,#00H
0056A9 0F02           19422         PUSH.W  R1
0056AB 0F01           19424         PUSH.W  R0
0056AD 9918rrrr       19426         MOV.W   R1,#SEG( _1301 )
0056B1 9908rrrr       19427         MOV.W   R0,#SOF( _1301 )
0056B5 0F03           19428         PUSH.W  R0, R1
0056B7 8915           19430         MOV.W   R1,R5
0056B9 8904           19431         MOV.W   R0,R4
                      19432         CALL    _sprintf
0056BB C4rrrrrr       +19432 ;       FCALL   _sprintf
0056BF 99700008       19433         ADD.W   R7,#08H
                      19435 ; rs232cmd.c 5343                                       rs232puts( buffer);
0056C3 8915           19437         MOV.W   R1,R5
0056C5 8904           19438         MOV.W   R0,R4
                      19439         CALL    _rs232puts
0056C7 C4rrrrrr       +19439 ;       FCALL   _rs232puts
                      19440 ; rs232cmd.c 5344                               }
                      19441 ; rs232cmd.c 5345                       }
0056CB FE59           19443         BR      _1367
0056CB FE5900         19443         BR      _1367
0056CE                19444 _1357:
                      19445 ; rs232cmd.c 5346                       else
                      19446 ; rs232cmd.c 5347                       {
                      19447 ; rs232cmd.c 5348                               if ( !PasswordProtected)
0056CE 964842rr       19449         MOV.B   ES,#SEG( _PasswordProtected )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 319

ADDR   CODE            LINE SOURCELINE
0056D2 9908rrrr       19450         MOV.W   R0,#SOF( _PasswordProtected )
0056D6 8A00           19451         MOV.W   R0,[R0]
0056D8 F252           19452         BNE     _1367
                      19453 ; rs232cmd.c 5349                               {
                      19454 ; rs232cmd.c 5350                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ChromaGainG, &ChromaGainM)) != 2))
0056DA 964842rr       19456         MOV.B   ES,#SEG( _ParCnt )
0056DE 9908rrrr       19457         MOV.W   R0,#SOF( _ParCnt )
0056E2 8200           19458         MOV.B   R0L,[R0]
0056E4 910402         19459         CMP.B   R0L,#02H
0056E7 F21B           19460         BNE     _1358
0056E9 9918rrrr       19461         MOV.W   R1,#SEG( _Cmd )
0056ED 9908rrrr       19462         MOV.W   R0,#SOF( _Cmd )
0056F1 9168rr         19463         MOV.B   R3L,#SEG( __lc_bs )
0056F4 7177           19464         XOR.B   R3H,R3H
0056F6 402714         19465         LEA     R2,R7+20
0056F9 91A8rr         19466         MOV.B   R5L,#SEG( __lc_bs )
0056FC 71BB           19467         XOR.B   R5H,R5H
0056FE 404716         19468         LEA     R4,R7+22
005701 0F30           19469         PUSH.W  R4, R5
005703 0F0C           19471         PUSH.W  R2, R3
005705 9938rrrr       19473         MOV.W   R3,#SEG( _1302 )
005709 9928rrrr       19474         MOV.W   R2,#SOF( _1302 )
00570D 0F0C           19475         PUSH.W  R2, R3
                      19477         CALL    _sscanf
00570F C4rrrrrr       +19477 ;       FCALL   _sscanf
005713 9970000C       19478         ADD.W   R7,#0CH
005717 99040002       19480         CMP.W   R0,#02H
00571B F307           19481         BEQ     _1359
00571B F30700         19481         BEQ     _1359
00571E                19482 _1358:
                      19483 ; rs232cmd.c 5351                                               SCPIError = SyntaxErr;
00571E 964842rr       19485         MOV.B   ES,#SEG( _SCPIError )
005722 9908rrrr       19486         MOV.W   R0,#SOF( _SCPIError )
005726 BA03           19487         MOV.W   [R0],#03H
005728 FE2A           19488         BR      _1367
005728 FE2A           19488         BR      _1367
00572A                19489 _1359:
                      19490 ; rs232cmd.c 5352                                       else
                      19491 ; rs232cmd.c 5353                                       {
                      19492 ; rs232cmd.c 5354                                               Calibration.CBCalibration.ChromaG
                            ainG = ChromaGainG;
00572A 840714         19494         MOV.B   R0L,[R7+20]
00572D 964842rr       19495         MOV.B   ES,#SEG( _Calibration+214 )
005731 9918rrrr       19496         MOV.W   R1,#SOF( _Calibration+214 )
005735 8209           19497         MOV.B   [R1],R0L
                      19498 ; rs232cmd.c 5355                                               Calibration.CBCalibration.ChromaG
                            ainM = ChromaGainM;
005737 840716         19500         MOV.B   R0L,[R7+22]
00573A 964842rr       19501         MOV.B   ES,#SEG( _Calibration+216 )
00573E 9918rrrr       19502         MOV.W   R1,#SOF( _Calibration+216 )
005742 8209           19503         MOV.B   [R1],R0L
                      19504 ; rs232cmd.c 5356                                                                                
                                                                                                                             
                                                                                                                            
                      19505 ; rs232cmd.c 5357                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005744 9918rrrr       19507         MOV.W   R1,#SEG( _Calibration )
005748 9908rrrr       19508         MOV.W   R0,#SOF( _Calibration )
00574C 964842rr       19509         MOV.B   ES,#SEG( _CalibrationPtr )
005750 9928rrrr       19510         MOV.W   R2,#SOF( _CalibrationPtr )
005754 8A22           19511         MOV.W   R2,[R2]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 320

ADDR   CODE            LINE SOURCELINE
005756 993800E0       19512         MOV.W   R3,#0E0H
                      19513         CALL    _NV_Store
00575A C4rrrrrr       +19513 ;       FCALL   _NV_Store
                      19514 ; rs232cmd.c 5358       
                      19515 ; rs232cmd.c 5359                                               if ( CBSetup.System < NTSC)
00575E 964842rr       19517         MOV.B   ES,#SEG( _CBSetup )
005762 9908rrrr       19518         MOV.W   R0,#SOF( _CBSetup )
005766 8200           19519         MOV.B   R0L,[R0]
005768 910402         19520         CMP.B   R0L,#02H
00576B F005           19521         BCC     _1360
                      19522 ; rs232cmd.c 5360                                                       WriteCBChromaGain( Chroma
                            GainG);
00576D 840714         19524         MOV.B   R0L,[R7+20]
                      19525         CALL    _WriteCBChromaGain
005770 C4rrrrrr       +19525 ;       FCALL   _WriteCBChromaGain
005774 FE04           19526         BR      _1367
005774 FE04           19526         BR      _1367
005776                19527 _1360:
                      19528 ; rs232cmd.c 5361                                               else
                      19529 ; rs232cmd.c 5362                                                       WriteCBChromaGain( Chroma
                            GainM);
005776 840716         19531         MOV.B   R0L,[R7+22]
                      19532         CALL    _WriteCBChromaGain
005779 C4rrrrrr       +19532 ;       FCALL   _WriteCBChromaGain
                      19533 ; rs232cmd.c 5363                                       }
                      19534 ; rs232cmd.c 5364                               }
                      19535 ; rs232cmd.c 5365                       }
                      19536 ; rs232cmd.c 5366               }
00577E                19538 _1367:
                      19539 ; rs232cmd.c 5367       }
00577E 99700018       19541         ADD.W   R7,#018H
005782 2F30           19543         POP.W   R4, R5
005784 D680           19545         RET
                      19547 ; rs232cmd.c 5368       
                      19548 ; rs232cmd.c 5369       /************************************************************************
                            **/
                      19549 ; rs232cmd.c 5370       /* FactTSGenPhase                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      19550 ; rs232cmd.c 5371       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19551 ; rs232cmd.c 5372       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19552 ; rs232cmd.c 5373       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      19553 ; rs232cmd.c 5374       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19554 ; rs232cmd.c 5375       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19555 ; rs232cmd.c 5376       /* Remarks:             PAL range: 0-4*625*1728, NTSC range: 0-2*525*1716
                                                                            */
                      19556 ; rs232cmd.c 5377       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 321

ADDR   CODE            LINE SOURCELINE
                      19557 ; rs232cmd.c 5378       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19558 ; rs232cmd.c 5379       /************************************************************************
                            **/
                      19559 ; rs232cmd.c 5380       void FactTSGenPhase( void)
                      19560 ; rs232cmd.c 5381       {
                      19561         ALIGN   1
                      19563         PUBLIC  _FactTSGenPhase
005786                19564 _FactTSGenPhase:
005786 0F30           19568         PUSH.W  R4, R5
005788 99720026       19570         SUB.W   R7,#026H
                      19575 ; rs232cmd.c 5382               char buffer[30];
                      19576 ; rs232cmd.c 5383               UL PhaseG, PhaseM;
                      19577 ; rs232cmd.c 5384       
                      19578 ; rs232cmd.c 5385               if ( CmdExecute && !SCPIError)
00578C 964842rr       19580         MOV.B   ES,#SEG( _CmdExecute )
005790 9908rrrr       19581         MOV.W   R0,#SOF( _CmdExecute )
005794 8200           19582         MOV.B   R0L,[R0]
                      19583         BEQ     _1380
005796 F202           +19583 ;       BNE     _LG_1346
005798 D50092         +19583 ;       JMP.L   _1380
00579C D5009200       +19583 ;       JMP.L   _1380
00579C                +19583 _LG_1346:
00579C 964842rr       19584         MOV.B   ES,#SEG( _SCPIError )
0057A0 9908rrrr       19585         MOV.W   R0,#SOF( _SCPIError )
0057A4 8A00           19586         MOV.W   R0,[R0]
                      19587         BNE     _1380
0057A6 F302           +19587 ;       BEQ     _LG_1348
0057A8 D5008A         +19587 ;       JMP.L   _1380
0057AC D5008A00       +19587 ;       JMP.L   _1380
0057AC                +19587 _LG_1348:
                      19588 ; rs232cmd.c 5386               {
                      19589 ; rs232cmd.c 5387                       if ( CmdRequest)
0057AC 964842rr       19591         MOV.B   ES,#SEG( _CmdRequest )
0057B0 9908rrrr       19592         MOV.W   R0,#SOF( _CmdRequest )
0057B4 8200           19593         MOV.B   R0L,[R0]
0057B6 F32E           19594         BEQ     _1372
                      19595 ; rs232cmd.c 5388                       {
                      19596 ; rs232cmd.c 5389                               if ( ParCnt)
0057B8 964842rr       19598         MOV.B   ES,#SEG( _ParCnt )
0057BC 9908rrrr       19599         MOV.W   R0,#SOF( _ParCnt )
0057C0 8200           19600         MOV.B   R0L,[R0]
0057C2 F306           19601         BEQ     _1371
                      19602 ; rs232cmd.c 5390                                       SCPIError = SyntaxErr;
0057C4 964842rr       19604         MOV.B   ES,#SEG( _SCPIError )
0057C8 9908rrrr       19605         MOV.W   R0,#SOF( _SCPIError )
0057CC BA03           19606         MOV.W   [R0],#03H
0057CE FE77           19607         BR      _1380
0057CE FE77           19607         BR      _1380
0057D0                19608 _1371:
                      19609 ; rs232cmd.c 5391                               else
                      19610 ; rs232cmd.c 5392                               {
                      19611 ; rs232cmd.c 5393                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .CBCalibration.PhaseG, 
                      19612 ; rs232cmd.c 5394                                                                                
                                                                                                Calibration.CBCalibration.Pha
                            seM);
0057D0 91A8rr         19614         MOV.B   R5L,#SEG( __lc_bs )
0057D3 71BB           19615         XOR.B   R5H,R5H
0057D5 8947           19616         MOV.W   R4,R7
0057D7 964842rr       19617         MOV.B   ES,#SEG( _Calibration+202 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 322

ADDR   CODE            LINE SOURCELINE
0057DB 9918rrrr       19618         MOV.W   R1,#SOF( _Calibration+202 )
0057DF 8B01           19619         MOV.W   R0,[R1+]
0057E1 8A11           19620         MOV.W   R1,[R1]
0057E3 964842rr       19621         MOV.B   ES,#SEG( _Calibration+208 )
0057E7 9938rrrr       19622         MOV.W   R3,#SOF( _Calibration+208 )
0057EB 8B23           19623         MOV.W   R2,[R3+]
0057ED 8A33           19624         MOV.W   R3,[R3]
0057EF 0F0C           19625         PUSH.W  R2, R3
0057F1 0F03           19627         PUSH.W  R0, R1
0057F3 9918rrrr       19629         MOV.W   R1,#SEG( _1227 )
0057F7 9908rrrr       19630         MOV.W   R0,#SOF( _1227 )
0057FB 0F03           19631         PUSH.W  R0, R1
0057FD 8915           19633         MOV.W   R1,R5
0057FF 8904           19634         MOV.W   R0,R4
                      19635         CALL    _sprintf
005801 C4rrrrrr       +19635 ;       FCALL   _sprintf
005805 9970000C       19636         ADD.W   R7,#0CH
                      19638 ; rs232cmd.c 5395                                       rs232puts( buffer);
005809 8915           19640         MOV.W   R1,R5
00580B 8904           19641         MOV.W   R0,R4
                      19642         CALL    _rs232puts
00580D C4rrrrrr       +19642 ;       FCALL   _rs232puts
                      19643 ; rs232cmd.c 5396                               }
                      19644 ; rs232cmd.c 5397                       }
005811 FE56           19646         BR      _1380
005811 FE5600         19646         BR      _1380
005814                19647 _1372:
                      19648 ; rs232cmd.c 5398                       else
                      19649 ; rs232cmd.c 5399                       {
                      19650 ; rs232cmd.c 5400                               if ( !PasswordProtected)
005814 964842rr       19652         MOV.B   ES,#SEG( _PasswordProtected )
005818 9908rrrr       19653         MOV.W   R0,#SOF( _PasswordProtected )
00581C 8A00           19654         MOV.W   R0,[R0]
00581E F24F           19655         BNE     _1380
                      19656 ; rs232cmd.c 5401                               {
                      19657 ; rs232cmd.c 5402                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
005820 964842rr       19659         MOV.B   ES,#SEG( _ParCnt )
005824 9908rrrr       19660         MOV.W   R0,#SOF( _ParCnt )
005828 8200           19661         MOV.B   R0L,[R0]
00582A 910402         19662         CMP.B   R0L,#02H
00582D F21B           19663         BNE     _1373
00582F 9918rrrr       19664         MOV.W   R1,#SEG( _Cmd )
005833 9908rrrr       19665         MOV.W   R0,#SOF( _Cmd )
005837 9168rr         19666         MOV.B   R3L,#SEG( __lc_bs )
00583A 7177           19667         XOR.B   R3H,R3H
00583C 40271E         19668         LEA     R2,R7+30
00583F 91A8rr         19669         MOV.B   R5L,#SEG( __lc_bs )
005842 71BB           19670         XOR.B   R5H,R5H
005844 404722         19671         LEA     R4,R7+34
005847 0F30           19672         PUSH.W  R4, R5
005849 0F0C           19674         PUSH.W  R2, R3
00584B 9938rrrr       19676         MOV.W   R3,#SEG( _1038 )
00584F 9928rrrr       19677         MOV.W   R2,#SOF( _1038 )
005853 0F0C           19678         PUSH.W  R2, R3
                      19680         CALL    _sscanf
005855 C4rrrrrr       +19680 ;       FCALL   _sscanf
005859 9970000C       19681         ADD.W   R7,#0CH
00585D 99040002       19683         CMP.W   R0,#02H
005861 F307           19684         BEQ     _1374
005861 F30700         19684         BEQ     _1374
005864                19685 _1373:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 323

ADDR   CODE            LINE SOURCELINE
                      19686 ; rs232cmd.c 5403                                               SCPIError = SyntaxErr;
005864 964842rr       19688         MOV.B   ES,#SEG( _SCPIError )
005868 9908rrrr       19689         MOV.W   R0,#SOF( _SCPIError )
00586C BA03           19690         MOV.W   [R0],#03H
00586E FE27           19691         BR      _1380
00586E FE27           19691         BR      _1380
005870                19692 _1374:
                      19693 ; rs232cmd.c 5404                                       else
                      19694 ; rs232cmd.c 5405                                       {
                      19695 ; rs232cmd.c 5406                                               Calibration.CBCalibration.PhaseG 
                            = PhaseG;
005870 8C1720         19697         MOV.W   R1,[R7+32]
005873 8C071E         19698         MOV.W   R0,[R7+30]
005876 964842rr       19699         MOV.B   ES,#SEG( _Calibration+202 )
00587A 9928rrrr       19700         MOV.W   R2,#SOF( _Calibration+202 )
00587E 8B0A           19701         MOV.W   [R2+],R0
005880 8A1A           19702         MOV.W   [R2],R1
                      19703 ; rs232cmd.c 5407                                               Calibration.CBCalibration.PhaseM 
                            = PhaseM;
005882 8C1724         19705         MOV.W   R1,[R7+36]
005885 8C0722         19706         MOV.W   R0,[R7+34]
005888 964842rr       19707         MOV.B   ES,#SEG( _Calibration+208 )
00588C 9928rrrr       19708         MOV.W   R2,#SOF( _Calibration+208 )
005890 8B0A           19709         MOV.W   [R2+],R0
005892 8A1A           19710         MOV.W   [R2],R1
                      19711 ; rs232cmd.c 5408                                       
                      19712 ; rs232cmd.c 5409                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005894 9918rrrr       19714         MOV.W   R1,#SEG( _Calibration )
005898 9908rrrr       19715         MOV.W   R0,#SOF( _Calibration )
00589C 964842rr       19716         MOV.B   ES,#SEG( _CalibrationPtr )
0058A0 9928rrrr       19717         MOV.W   R2,#SOF( _CalibrationPtr )
0058A4 8A22           19718         MOV.W   R2,[R2]
0058A6 993800E0       19719         MOV.W   R3,#0E0H
                      19720         CALL    _NV_Store
0058AA C4rrrrrr       +19720 ;       FCALL   _NV_Store
                      19721 ; rs232cmd.c 5410       
                      19722 ; rs232cmd.c 5411                                               SetCBDelay( CBSetup.Delay);
0058AE 964842rr       19724         MOV.B   ES,#SEG( _CBSetup+4 )
0058B2 9918rrrr       19725         MOV.W   R1,#SOF( _CBSetup+4 )
0058B6 8B01           19726         MOV.W   R0,[R1+]
0058B8 8A11           19727         MOV.W   R1,[R1]
                      19728         CALL    _SetCBDelay
0058BA C4rrrrrr       +19728 ;       FCALL   _SetCBDelay
                      19729 ; rs232cmd.c 5412                                       }
                      19730 ; rs232cmd.c 5413                               }
                      19731 ; rs232cmd.c 5414                       }
                      19732 ; rs232cmd.c 5415               }
0058BE                19734 _1380:
                      19735 ; rs232cmd.c 5416       }
0058BE 99700026       19737         ADD.W   R7,#026H
0058C2 2F30           19739         POP.W   R4, R5
0058C4 D680           19741         RET
                      19743 ; rs232cmd.c 5417       
                      19744 ; rs232cmd.c 5418       /************************************************************************
                            **/
                      19745 ; rs232cmd.c 5419       /* FactTSGenScHPhase                                                     
                                                                                                                             
                                RS232CMD.C  */
                      19746 ; rs232cmd.c 5420       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 324

ADDR   CODE            LINE SOURCELINE
                      19747 ; rs232cmd.c 5421       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      19748 ; rs232cmd.c 5422       /* Revised:       000727                                                 
                                                                                                                             
                                                                                    */
                      19749 ; rs232cmd.c 5423       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19750 ; rs232cmd.c 5424       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19751 ; rs232cmd.c 5425       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      19752 ; rs232cmd.c 5426       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19753 ; rs232cmd.c 5427       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19754 ; rs232cmd.c 5428       /************************************************************************
                            **/
                      19755 ; rs232cmd.c 5429       void FactTSGenScHPhase( void)
                      19756 ; rs232cmd.c 5430       {
                      19757         ALIGN   1
                      19759         PUBLIC  _FactTSGenScHPhase
0058C6                19760 _FactTSGenScHPhase:
0058C6 0F30           19764         PUSH.W  R4, R5
0058C8 99720022       19766         SUB.W   R7,#022H
                      19771 ; rs232cmd.c 5431               char buffer[30];
                      19772 ; rs232cmd.c 5432               UC ScHPhaseG, ScHPhaseM;
                      19773 ; rs232cmd.c 5433       
                      19774 ; rs232cmd.c 5434               if ( CmdExecute && !SCPIError)
0058CC 964842rr       19776         MOV.B   ES,#SEG( _CmdExecute )
0058D0 9908rrrr       19777         MOV.W   R0,#SOF( _CmdExecute )
0058D4 8200           19778         MOV.B   R0L,[R0]
                      19779         BEQ     _1392
0058D6 F202           +19779 ;       BNE     _LG_1360
0058D8 D5008C         +19779 ;       JMP.L   _1392
0058DC D5008C00       +19779 ;       JMP.L   _1392
0058DC                +19779 _LG_1360:
0058DC 964842rr       19780         MOV.B   ES,#SEG( _SCPIError )
0058E0 9908rrrr       19781         MOV.W   R0,#SOF( _SCPIError )
0058E4 8A00           19782         MOV.W   R0,[R0]
                      19783         BNE     _1392
0058E6 F302           +19783 ;       BEQ     _LG_1362
0058E8 D50084         +19783 ;       JMP.L   _1392
0058EC D5008400       +19783 ;       JMP.L   _1392
0058EC                +19783 _LG_1362:
                      19784 ; rs232cmd.c 5435               {
                      19785 ; rs232cmd.c 5436                       if ( CmdRequest)
0058EC 964842rr       19787         MOV.B   ES,#SEG( _CmdRequest )
0058F0 9908rrrr       19788         MOV.W   R0,#SOF( _CmdRequest )
0058F4 8200           19789         MOV.B   R0L,[R0]
0058F6 F32E           19790         BEQ     _1384
                      19791 ; rs232cmd.c 5437                       {
                      19792 ; rs232cmd.c 5438                               if ( ParCnt)
0058F8 964842rr       19794         MOV.B   ES,#SEG( _ParCnt )
0058FC 9908rrrr       19795         MOV.W   R0,#SOF( _ParCnt )
005900 8200           19796         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 325

ADDR   CODE            LINE SOURCELINE
005902 F306           19797         BEQ     _1383
                      19798 ; rs232cmd.c 5439                                       SCPIError = SyntaxErr;
005904 964842rr       19800         MOV.B   ES,#SEG( _SCPIError )
005908 9908rrrr       19801         MOV.W   R0,#SOF( _SCPIError )
00590C BA03           19802         MOV.W   [R0],#03H
00590E FE71           19803         BR      _1392
00590E FE71           19803         BR      _1392
005910                19804 _1383:
                      19805 ; rs232cmd.c 5440                               else
                      19806 ; rs232cmd.c 5441                               {
                      19807 ; rs232cmd.c 5442                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ScHPhaseG, 
                      19808 ; rs232cmd.c 5443                                                                                
                                                                                        Calibration.CBCalibration.ScHPhaseM);
                            
005910 91A8rr         19810         MOV.B   R5L,#SEG( __lc_bs )
005913 71BB           19811         XOR.B   R5H,R5H
005915 8947           19812         MOV.W   R4,R7
005917 964842rr       19813         MOV.B   ES,#SEG( _Calibration+206 )
00591B 9908rrrr       19814         MOV.W   R0,#SOF( _Calibration+206 )
00591F 8200           19815         MOV.B   R0L,[R0]
005921 B110           19816         MOVS.B  R0H,#00H
005923 964842rr       19817         MOV.B   ES,#SEG( _Calibration+212 )
005927 9918rrrr       19818         MOV.W   R1,#SOF( _Calibration+212 )
00592B 8221           19819         MOV.B   R1L,[R1]
00592D B130           19820         MOVS.B  R1H,#00H
00592F 0F02           19821         PUSH.W  R1
005931 0F01           19823         PUSH.W  R0
005933 9918rrrr       19825         MOV.W   R1,#SEG( _1301 )
005937 9908rrrr       19826         MOV.W   R0,#SOF( _1301 )
00593B 0F03           19827         PUSH.W  R0, R1
00593D 8915           19829         MOV.W   R1,R5
00593F 8904           19830         MOV.W   R0,R4
                      19831         CALL    _sprintf
005941 C4rrrrrr       +19831 ;       FCALL   _sprintf
005945 99700008       19832         ADD.W   R7,#08H
                      19834 ; rs232cmd.c 5444                                       rs232puts( buffer);
005949 8915           19836         MOV.W   R1,R5
00594B 8904           19837         MOV.W   R0,R4
                      19838         CALL    _rs232puts
00594D C4rrrrrr       +19838 ;       FCALL   _rs232puts
                      19839 ; rs232cmd.c 5445                               }
                      19840 ; rs232cmd.c 5446                       }
005951 FE50           19842         BR      _1392
005951 FE5000         19842         BR      _1392
005954                19843 _1384:
                      19844 ; rs232cmd.c 5447                       else
                      19845 ; rs232cmd.c 5448                       {
                      19846 ; rs232cmd.c 5449                               if ( !PasswordProtected)
005954 964842rr       19848         MOV.B   ES,#SEG( _PasswordProtected )
005958 9908rrrr       19849         MOV.W   R0,#SOF( _PasswordProtected )
00595C 8A00           19850         MOV.W   R0,[R0]
00595E F249           19851         BNE     _1392
                      19852 ; rs232cmd.c 5450                               {
                      19853 ; rs232cmd.c 5451                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005960 964842rr       19855         MOV.B   ES,#SEG( _ParCnt )
005964 9908rrrr       19856         MOV.W   R0,#SOF( _ParCnt )
005968 8200           19857         MOV.B   R0L,[R0]
00596A 910402         19858         CMP.B   R0L,#02H
00596D F21B           19859         BNE     _1385
00596F 9918rrrr       19860         MOV.W   R1,#SEG( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 326

ADDR   CODE            LINE SOURCELINE
005973 9908rrrr       19861         MOV.W   R0,#SOF( _Cmd )
005977 9168rr         19862         MOV.B   R3L,#SEG( __lc_bs )
00597A 7177           19863         XOR.B   R3H,R3H
00597C 40271E         19864         LEA     R2,R7+30
00597F 91A8rr         19865         MOV.B   R5L,#SEG( __lc_bs )
005982 71BB           19866         XOR.B   R5H,R5H
005984 404720         19867         LEA     R4,R7+32
005987 0F30           19868         PUSH.W  R4, R5
005989 0F0C           19870         PUSH.W  R2, R3
00598B 9938rrrr       19872         MOV.W   R3,#SEG( _1302 )
00598F 9928rrrr       19873         MOV.W   R2,#SOF( _1302 )
005993 0F0C           19874         PUSH.W  R2, R3
                      19876         CALL    _sscanf
005995 C4rrrrrr       +19876 ;       FCALL   _sscanf
005999 9970000C       19877         ADD.W   R7,#0CH
00599D 99040002       19879         CMP.W   R0,#02H
0059A1 F307           19880         BEQ     _1386
0059A1 F30700         19880         BEQ     _1386
0059A4                19881 _1385:
                      19882 ; rs232cmd.c 5452                                               SCPIError = SyntaxErr;
0059A4 964842rr       19884         MOV.B   ES,#SEG( _SCPIError )
0059A8 9908rrrr       19885         MOV.W   R0,#SOF( _SCPIError )
0059AC BA03           19886         MOV.W   [R0],#03H
0059AE FE21           19887         BR      _1392
0059AE FE21           19887         BR      _1392
0059B0                19888 _1386:
                      19889 ; rs232cmd.c 5453                                       else
                      19890 ; rs232cmd.c 5454                                       {
                      19891 ; rs232cmd.c 5455                                               Calibration.CBCalibration.ScHPhas
                            eG = ScHPhaseG;
0059B0 84071E         19893         MOV.B   R0L,[R7+30]
0059B3 964842rr       19894         MOV.B   ES,#SEG( _Calibration+206 )
0059B7 9918rrrr       19895         MOV.W   R1,#SOF( _Calibration+206 )
0059BB 8209           19896         MOV.B   [R1],R0L
                      19897 ; rs232cmd.c 5456                                               Calibration.CBCalibration.ScHPhas
                            eM = ScHPhaseM;
0059BD 840720         19899         MOV.B   R0L,[R7+32]
0059C0 964842rr       19900         MOV.B   ES,#SEG( _Calibration+212 )
0059C4 9918rrrr       19901         MOV.W   R1,#SOF( _Calibration+212 )
0059C8 8209           19902         MOV.B   [R1],R0L
                      19903 ; rs232cmd.c 5457                                       
                      19904 ; rs232cmd.c 5458                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0059CA 9918rrrr       19906         MOV.W   R1,#SEG( _Calibration )
0059CE 9908rrrr       19907         MOV.W   R0,#SOF( _Calibration )
0059D2 964842rr       19908         MOV.B   ES,#SEG( _CalibrationPtr )
0059D6 9928rrrr       19909         MOV.W   R2,#SOF( _CalibrationPtr )
0059DA 8A22           19910         MOV.W   R2,[R2]
0059DC 993800E0       19911         MOV.W   R3,#0E0H
                      19912         CALL    _NV_Store
0059E0 C4rrrrrr       +19912 ;       FCALL   _NV_Store
                      19913 ; rs232cmd.c 5459       
                      19914 ; rs232cmd.c 5460                                               SetCBScHPhase( CBSetup.ScHPhase);
                            
0059E4 964842rr       19916         MOV.B   ES,#SEG( _CBSetup+8 )
0059E8 9908rrrr       19917         MOV.W   R0,#SOF( _CBSetup+8 )
0059EC 8A00           19918         MOV.W   R0,[R0]
                      19919         CALL    _SetCBScHPhase
0059EE C4rrrrrr       +19919 ;       FCALL   _SetCBScHPhase
                      19920 ; rs232cmd.c 5461                                       }
                      19921 ; rs232cmd.c 5462                               }
                      19922 ; rs232cmd.c 5463                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 327

ADDR   CODE            LINE SOURCELINE
                      19923 ; rs232cmd.c 5464               }
0059F2                19925 _1392:
                      19926 ; rs232cmd.c 5465       }
0059F2 99700022       19928         ADD.W   R7,#022H
0059F6 2F30           19930         POP.W   R4, R5
0059F8 D680           19932         RET
                      19934 ; rs232cmd.c 5466       
                      19935 ; rs232cmd.c 5467       /************************************************************************
                            **/
                      19936 ; rs232cmd.c 5468       /* FactAudioGenStatus                                                    
                                                                                                                             
                                RS232CMD.C  */
                      19937 ; rs232cmd.c 5469       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19938 ; rs232cmd.c 5470       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      19939 ; rs232cmd.c 5471       /* Revised:       000625                                                 
                                                                                                                             
                                                                                    */
                      19940 ; rs232cmd.c 5472       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      19941 ; rs232cmd.c 5473       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      19942 ; rs232cmd.c 5474       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                      19943 ; rs232cmd.c 5475       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      19944 ; rs232cmd.c 5476       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      19945 ; rs232cmd.c 5477       /************************************************************************
                            **/
                      19946 ; rs232cmd.c 5478       void FactAudioGenStatus( void)
                      19947 ; rs232cmd.c 5479       {
                      19948         ALIGN   1
                      19950         PUBLIC  _FactAudioGenStatus
0059FA                19951 _FactAudioGenStatus:
0059FA 0F30           19955         PUSH.W  R4, R5
0059FC 99720014       19957         SUB.W   R7,#014H
                      19960 ; rs232cmd.c 5480               char buffer[20];
                      19961 ; rs232cmd.c 5481       
                      19962 ; rs232cmd.c 5482               if ( CmdExecute && !SCPIError)
005A00 964842rr       19964         MOV.B   ES,#SEG( _CmdExecute )
005A04 9908rrrr       19965         MOV.W   R0,#SOF( _CmdExecute )
005A08 8200           19966         MOV.B   R0L,[R0]
005A0A F337           19967         BEQ     _1400
005A0C 964842rr       19968         MOV.B   ES,#SEG( _SCPIError )
005A10 9908rrrr       19969         MOV.W   R0,#SOF( _SCPIError )
005A14 8A00           19970         MOV.W   R0,[R0]
005A16 F231           19971         BNE     _1400
                      19972 ; rs232cmd.c 5483               {
                      19973 ; rs232cmd.c 5484                       if ( CmdRequest)
005A18 964842rr       19975         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 328

ADDR   CODE            LINE SOURCELINE
005A1C 9908rrrr       19976         MOV.W   R0,#SOF( _CmdRequest )
005A20 8200           19977         MOV.B   R0L,[R0]
005A22 F326           19978         BEQ     _1396
                      19979 ; rs232cmd.c 5485                       {
                      19980 ; rs232cmd.c 5486                               if ( ParCnt)
005A24 964842rr       19982         MOV.B   ES,#SEG( _ParCnt )
005A28 9908rrrr       19983         MOV.W   R0,#SOF( _ParCnt )
005A2C 8200           19984         MOV.B   R0L,[R0]
005A2E F306           19985         BEQ     _1395
                      19986 ; rs232cmd.c 5487                                       SCPIError = SyntaxErr;
005A30 964842rr       19988         MOV.B   ES,#SEG( _SCPIError )
005A34 9908rrrr       19989         MOV.W   R0,#SOF( _SCPIError )
005A38 BA03           19990         MOV.W   [R0],#03H
005A3A FE1F           19991         BR      _1400
005A3A FE1F           19991         BR      _1400
005A3C                19992 _1395:
                      19993 ; rs232cmd.c 5488                               else
                      19994 ; rs232cmd.c 5489                               {
                      19995 ; rs232cmd.c 5490                                       sprintf( buffer, "%u\n", 0, AudioStatus()
                            );
                      19997         CALL    _AudioStatus
005A3C C4rrrrrr       +19997 ;       FCALL   _AudioStatus
005A40 B110           19998         MOVS.B  R0H,#00H
005A42 91A8rr         19999         MOV.B   R5L,#SEG( __lc_bs )
005A45 71BB           20000         XOR.B   R5H,R5H
005A47 8947           20001         MOV.W   R4,R7
005A49 0F01           20002         PUSH.W  R0
005A4B B900           20004         MOV.W   R0,#00H
005A4D 0F01           20005         PUSH.W  R0
005A4F 9918rrrr       20007         MOV.W   R1,#SEG( _1013 )
005A53 9908rrrr       20008         MOV.W   R0,#SOF( _1013 )
005A57 0F03           20009         PUSH.W  R0, R1
005A59 8915           20011         MOV.W   R1,R5
005A5B 8904           20012         MOV.W   R0,R4
                      20013         CALL    _sprintf
005A5D C4rrrrrr       +20013 ;       FCALL   _sprintf
005A61 99700008       20014         ADD.W   R7,#08H
                      20016 ; rs232cmd.c 5491                                       rs232puts( buffer);
005A65 8915           20018         MOV.W   R1,R5
005A67 8904           20019         MOV.W   R0,R4
                      20020         CALL    _rs232puts
005A69 C4rrrrrr       +20020 ;       FCALL   _rs232puts
                      20021 ; rs232cmd.c 5492                               }
                      20022 ; rs232cmd.c 5493                       }
005A6D FE06           20024         BR      _1400
005A6D FE0600         20024         BR      _1400
005A70                20025 _1396:
                      20026 ; rs232cmd.c 5494                       else
                      20027 ; rs232cmd.c 5495                               SCPIError = SyntaxErr;
005A70 964842rr       20029         MOV.B   ES,#SEG( _SCPIError )
005A74 9908rrrr       20030         MOV.W   R0,#SOF( _SCPIError )
005A78 BA03           20031         MOV.W   [R0],#03H
                      20032 ; rs232cmd.c 5496               }
005A7A                20034 _1400:
                      20035 ; rs232cmd.c 5497       }
005A7A 99700014       20037         ADD.W   R7,#014H
005A7E 2F30           20039         POP.W   R4, R5
005A80 D680           20041         RET
                      20043 ; rs232cmd.c 5498       
                      20044 ; rs232cmd.c 5499       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 329

ADDR   CODE            LINE SOURCELINE
                      20045 ; rs232cmd.c 5500       /* FactAudioGenDate                                                      
                                                                                                                             
                                         RS232CMD.C */
                      20046 ; rs232cmd.c 5501       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20047 ; rs232cmd.c 5502       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      20048 ; rs232cmd.c 5503       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      20049 ; rs232cmd.c 5504       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20050 ; rs232cmd.c 5505       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20051 ; rs232cmd.c 5506       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20052 ; rs232cmd.c 5507       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20053 ; rs232cmd.c 5508       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20054 ; rs232cmd.c 5509       /************************************************************************
                            **/
                      20055 ; rs232cmd.c 5510       void FactAudioGenDate( void)
                      20056 ; rs232cmd.c 5511       {
                      20057         ALIGN   1
                      20059         PUBLIC  _FactAudioGenDate
005A82                20060 _FactAudioGenDate:
005A82 0F30           20064         PUSH.W  R4, R5
005A84 9972001A       20066         SUB.W   R7,#01AH
                      20072 ; rs232cmd.c 5512               UI year, month, day;
                      20073 ; rs232cmd.c 5513               char buffer[20];
                      20074 ; rs232cmd.c 5514       
                      20075 ; rs232cmd.c 5515               if ( CmdExecute && !SCPIError)
005A88 964842rr       20077         MOV.B   ES,#SEG( _CmdExecute )
005A8C 9908rrrr       20078         MOV.W   R0,#SOF( _CmdExecute )
005A90 8200           20079         MOV.B   R0L,[R0]
                      20080         BEQ     _1412
005A92 F202           +20080 ;       BNE     _LG_1382
005A94 D500C7         +20080 ;       JMP.L   _1412
005A98 D500C700       +20080 ;       JMP.L   _1412
005A98                +20080 _LG_1382:
005A98 964842rr       20081         MOV.B   ES,#SEG( _SCPIError )
005A9C 9908rrrr       20082         MOV.W   R0,#SOF( _SCPIError )
005AA0 8A00           20083         MOV.W   R0,[R0]
                      20084         BNE     _1412
005AA2 F302           +20084 ;       BEQ     _LG_1384
005AA4 D500BF         +20084 ;       JMP.L   _1412
005AA8 D500BF00       +20084 ;       JMP.L   _1412
005AA8                +20084 _LG_1384:
                      20085 ; rs232cmd.c 5516               {
                      20086 ; rs232cmd.c 5517                       if ( CmdRequest)
005AA8 964842rr       20088         MOV.B   ES,#SEG( _CmdRequest )
005AAC 9908rrrr       20089         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 330

ADDR   CODE            LINE SOURCELINE
005AB0 8200           20090         MOV.B   R0L,[R0]
005AB2 F35A           20091         BEQ     _1402
                      20092 ; rs232cmd.c 5518                       {
                      20093 ; rs232cmd.c 5519                               if ( ParCnt)
005AB4 964842rr       20095         MOV.B   ES,#SEG( _ParCnt )
005AB8 9908rrrr       20096         MOV.W   R0,#SOF( _ParCnt )
005ABC 8200           20097         MOV.B   R0L,[R0]
005ABE F307           20098         BEQ     _1401
                      20099 ; rs232cmd.c 5520                                       SCPIError = SyntaxErr;
005AC0 964842rr       20101         MOV.B   ES,#SEG( _SCPIError )
005AC4 9908rrrr       20102         MOV.W   R0,#SOF( _SCPIError )
005AC8 BA03           20103         MOV.W   [R0],#03H
                      20104         BR      _1412
005ACA D500AC         +20104         JMP.L   _1412
005ACA D500AC00       +20104         JMP.L   _1412
005ACE                20105 _1401:
                      20106 ; rs232cmd.c 5521                               else
                      20107 ; rs232cmd.c 5522                               {
                      20108 ; rs232cmd.c 5523                                       day = Calibration.AudioCalibration.Date %
                             100;
005ACE 964842rr       20110         MOV.B   ES,#SEG( _Calibration+218 )
005AD2 9918rrrr       20111         MOV.W   R1,#SOF( _Calibration+218 )
005AD6 8B01           20112         MOV.W   R0,[R1+]
005AD8 8A11           20113         MOV.W   R1,[R1]
005ADA B930           20114         MOV.W   R3,#00H
005ADC 99280064       20115         MOV.W   R2,#064H
005AE0 964842rr       20116         MOV.B   ES,#SEG( _Calibration+218 )
005AE4 9948rrrr       20117         MOV.W   R4,#SOF( _Calibration+218 )
005AE8 8B0C           20118         MOV.W   [R4+],R0
005AEA 8A1C           20119         MOV.W   [R4],R1
005AEC C4rrrrrr       20120         FCALL   __UMODL
005AF0 8C0F04         20121         MOV.W   [R7+4],R0
005AF3 964842rr       20122         MOV.B   ES,#SEG( _Calibration+218 )
005AF7 9918rrrr       20123         MOV.W   R1,#SOF( _Calibration+218 )
005AFB 8B01           20124         MOV.W   R0,[R1+]
005AFD 8A11           20125         MOV.W   R1,[R1]
                      20126 ; rs232cmd.c 5524                                       month = ( Calibration.AudioCalibration.Da
                            te / 100) % 100;
005AFF B930           20128         MOV.W   R3,#00H
005B01 99280064       20129         MOV.W   R2,#064H
005B05 8953           20130         MOV.W   R5,R3
005B07 8942           20131         MOV.W   R4,R2
005B09 C4rrrrrr       20132         FCALL   __UDIVL
005B0D 8935           20133         MOV.W   R3,R5
005B0F 8924           20134         MOV.W   R2,R4
005B11 C4rrrrrr       20135         FCALL   __UMODL
005B15 8C0F02         20136         MOV.W   [R7+2],R0
                      20137 ; rs232cmd.c 5525                                       year = ( Calibration.AudioCalibration.Dat
                            e / 10000);
005B18 B930           20139         MOV.W   R3,#00H
005B1A 99282710       20140         MOV.W   R2,#02710H
005B1E 964842rr       20141         MOV.B   ES,#SEG( _Calibration+218 )
005B22 9918rrrr       20142         MOV.W   R1,#SOF( _Calibration+218 )
005B26 8B01           20143         MOV.W   R0,[R1+]
005B28 8A11           20144         MOV.W   R1,[R1]
005B2A C4rrrrrr       20145         FCALL   __UDIVL
005B2E 8A0F           20146         MOV.W   [R7],R0
                      20147 ; rs232cmd.c 5526       
                      20148 ; rs232cmd.c 5527                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
005B30 91A8rr         20150         MOV.B   R5L,#SEG( __lc_bs )
005B33 71BB           20151         XOR.B   R5H,R5H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 331

ADDR   CODE            LINE SOURCELINE
005B35 404706         20152         LEA     R4,R7+6
005B38 8C0704         20153         MOV.W   R0,[R7+4]
005B3B 0F01           20154         PUSH.W  R0
005B3D 8C0704         20156         MOV.W   R0,[R7+4]
005B40 0F01           20157         PUSH.W  R0
005B42 8C0704         20159         MOV.W   R0,[R7+4]
005B45 0F01           20160         PUSH.W  R0
005B47 9918rrrr       20162         MOV.W   R1,#SEG( _1174 )
005B4B 9908rrrr       20163         MOV.W   R0,#SOF( _1174 )
005B4F 0F03           20164         PUSH.W  R0, R1
005B51 8915           20166         MOV.W   R1,R5
005B53 8904           20167         MOV.W   R0,R4
                      20168         CALL    _sprintf
005B55 C4rrrrrr       +20168 ;       FCALL   _sprintf
005B59 9970000A       20169         ADD.W   R7,#0AH
                      20171 ; rs232cmd.c 5528       
                      20172 ; rs232cmd.c 5529                                       rs232puts( buffer);
005B5D 8915           20174         MOV.W   R1,R5
005B5F 8904           20175         MOV.W   R0,R4
                      20176         CALL    _rs232puts
005B61 C4rrrrrr       +20176 ;       FCALL   _rs232puts
                      20177 ; rs232cmd.c 5530                               }
                      20178 ; rs232cmd.c 5531                       }
005B65 FE5F           20180         BR      _1412
005B65 FE5F00         20180         BR      _1412
005B68                20181 _1402:
                      20182 ; rs232cmd.c 5532                       else
                      20183 ; rs232cmd.c 5533                       {
                      20184 ; rs232cmd.c 5534                               if ( !PasswordProtected)
005B68 964842rr       20186         MOV.B   ES,#SEG( _PasswordProtected )
005B6C 9908rrrr       20187         MOV.W   R0,#SOF( _PasswordProtected )
005B70 8A00           20188         MOV.W   R0,[R0]
005B72 F258           20189         BNE     _1412
                      20190 ; rs232cmd.c 5535                               {
                      20191 ; rs232cmd.c 5536                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
005B74 964842rr       20193         MOV.B   ES,#SEG( _ParCnt )
005B78 9908rrrr       20194         MOV.W   R0,#SOF( _ParCnt )
005B7C 8200           20195         MOV.B   R0L,[R0]
005B7E 910403         20196         CMP.B   R0L,#03H
005B81 F21F           20197         BNE     _1403
005B83 9168rr         20198         MOV.B   R3L,#SEG( __lc_bs )
005B86 7177           20199         XOR.B   R3H,R3H
005B88 8927           20200         MOV.W   R2,R7
005B8A 91A8rr         20201         MOV.B   R5L,#SEG( __lc_bs )
005B8D 71BB           20202         XOR.B   R5H,R5H
005B8F 404702         20203         LEA     R4,R7+2
005B92 9128rr         20204         MOV.B   R1L,#SEG( __lc_bs )
005B95 7133           20205         XOR.B   R1H,R1H
005B97 400704         20206         LEA     R0,R7+4
005B9A 0F03           20207         PUSH.W  R0, R1
005B9C 0F30           20209         PUSH.W  R4, R5
005B9E 0F0C           20211         PUSH.W  R2, R3
005BA0 9938rrrr       20213         MOV.W   R3,#SEG( _1175 )
005BA4 9928rrrr       20214         MOV.W   R2,#SOF( _1175 )
005BA8 0F0C           20215         PUSH.W  R2, R3
005BAA 9918rrrr       20217         MOV.W   R1,#SEG( _Cmd )
005BAE 9908rrrr       20218         MOV.W   R0,#SOF( _Cmd )
                      20219         CALL    _sscanf
005BB2 C4rrrrrr       +20219 ;       FCALL   _sscanf
005BB6 99700010       20220         ADD.W   R7,#010H
005BBA 99040003       20222         CMP.W   R0,#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 332

ADDR   CODE            LINE SOURCELINE
005BBE F306           20223         BEQ     _1404
005BBE F306           20223         BEQ     _1404
005BC0                20224 _1403:
                      20225 ; rs232cmd.c 5537                                               SCPIError = SyntaxErr;
005BC0 964842rr       20227         MOV.B   ES,#SEG( _SCPIError )
005BC4 9908rrrr       20228         MOV.W   R0,#SOF( _SCPIError )
005BC8 BA03           20229         MOV.W   [R0],#03H
005BCA FE2C           20230         BR      _1412
005BCA FE2C           20230         BR      _1412
005BCC                20231 _1404:
                      20232 ; rs232cmd.c 5538                                       else
                      20233 ; rs232cmd.c 5539                                       {
                      20234 ; rs232cmd.c 5540                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
005BCC 8A07           20236         MOV.W   R0,[R7]
005BCE 8C1702         20237         MOV.W   R1,[R7+2]
005BD1 8C2704         20238         MOV.W   R2,[R7+4]
                      20239         CALL    _ValidateDate
005BD4 C4rrrrrr       +20239 ;       FCALL   _ValidateDate
005BD8 6900           20240         OR.W    R0,R0
005BDA F207           20241         BNE     _1405
                      20242 ; rs232cmd.c 5541                                                       SCPIError = ExecErr;
005BDC 964842rr       20244         MOV.B   ES,#SEG( _SCPIError )
005BE0 9908rrrr       20245         MOV.W   R0,#SOF( _SCPIError )
005BE4 9A08001D       20246         MOV.W   [R0],#01DH
005BE8 FE1D           20247         BR      _1412
005BE8 FE1D           20247         BR      _1412
005BEA                20248 _1405:
                      20249 ; rs232cmd.c 5542                                               else
                      20250 ; rs232cmd.c 5543                                               {
                      20251 ; rs232cmd.c 5544                                                       Calibration.AudioCalibrat
                            ion.Date = day + 100*month + 10000*year;
005BEA 8C0702         20253         MOV.W   R0,[R7+2]
005BED E9000064       20254         MULU.W  R0,#064H
005BF1 0C0704         20255         ADD.W   R0,[R7+4]
005BF4 8A27           20256         MOV.W   R2,[R7]
005BF6 E9202710       20257         MULU.W  R2,#02710H
005BFA 0902           20258         ADD.W   R0,R2
005BFC B910           20259         MOVS.W  R1,#00H
005BFE 964842rr       20260         MOV.B   ES,#SEG( _Calibration+218 )
005C02 9928rrrr       20261         MOV.W   R2,#SOF( _Calibration+218 )
005C06 8B0A           20262         MOV.W   [R2+],R0
005C08 8A1A           20263         MOV.W   [R2],R1
                      20264 ; rs232cmd.c 5545                                               
                      20265 ; rs232cmd.c 5546                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
005C0A 9918rrrr       20267         MOV.W   R1,#SEG( _Calibration )
005C0E 9908rrrr       20268         MOV.W   R0,#SOF( _Calibration )
005C12 964842rr       20269         MOV.B   ES,#SEG( _CalibrationPtr )
005C16 9928rrrr       20270         MOV.W   R2,#SOF( _CalibrationPtr )
005C1A 8A22           20271         MOV.W   R2,[R2]
005C1C 993800E0       20272         MOV.W   R3,#0E0H
                      20273         CALL    _NV_Store
005C20 C4rrrrrr       +20273 ;       FCALL   _NV_Store
                      20274 ; rs232cmd.c 5547                                               }
                      20275 ; rs232cmd.c 5548                                       }                               
                      20276 ; rs232cmd.c 5549                               }
                      20277 ; rs232cmd.c 5550                       }
                      20278 ; rs232cmd.c 5551               }
005C24                20280 _1412:
                      20281 ; rs232cmd.c 5552       }
005C24 9970001A       20283         ADD.W   R7,#01AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 333

ADDR   CODE            LINE SOURCELINE
005C28 2F30           20285         POP.W   R4, R5
005C2A D680           20287         RET
                      20289 ; rs232cmd.c 5553       
                      20290 ; rs232cmd.c 5554       /************************************************************************
                            **/
                      20291 ; rs232cmd.c 5555       /* FactAudioGenLevel                                                     
                                                                                                                             
                                RS232CMD.C  */
                      20292 ; rs232cmd.c 5556       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20293 ; rs232cmd.c 5557       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                    */
                      20294 ; rs232cmd.c 5558       /* Revised:       000622                                                 
                                                                                                                             
                                                                                    */
                      20295 ; rs232cmd.c 5559       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20296 ; rs232cmd.c 5560       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20297 ; rs232cmd.c 5561       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20298 ; rs232cmd.c 5562       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20299 ; rs232cmd.c 5563       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20300 ; rs232cmd.c 5564       /************************************************************************
                            **/
                      20301 ; rs232cmd.c 5565       void FactAudioGenLevel( void)
                      20302 ; rs232cmd.c 5566       {
                      20303         ALIGN   1
                      20305         PUBLIC  _FactAudioGenLevel
005C2C                20306 _FactAudioGenLevel:
005C2C 0F30           20310         PUSH.W  R4, R5
005C2E 99720018       20312         SUB.W   R7,#018H
                      20317 ; rs232cmd.c 5567               char buffer[20];
                      20318 ; rs232cmd.c 5568               UC AnalogLeft, AnalogRight;
                      20319 ; rs232cmd.c 5569       
                      20320 ; rs232cmd.c 5570               if ( CmdExecute && !SCPIError)
005C32 964842rr       20322         MOV.B   ES,#SEG( _CmdExecute )
005C36 9908rrrr       20323         MOV.W   R0,#SOF( _CmdExecute )
005C3A 8200           20324         MOV.B   R0L,[R0]
                      20325         BEQ     _1424
005C3C F202           +20325 ;       BNE     _LG_1398
005C3E D5008A         +20325 ;       JMP.L   _1424
005C42 D5008A00       +20325 ;       JMP.L   _1424
005C42                +20325 _LG_1398:
005C42 964842rr       20326         MOV.B   ES,#SEG( _SCPIError )
005C46 9908rrrr       20327         MOV.W   R0,#SOF( _SCPIError )
005C4A 8A00           20328         MOV.W   R0,[R0]
                      20329         BNE     _1424
005C4C F302           +20329 ;       BEQ     _LG_1400
005C4E D50082         +20329 ;       JMP.L   _1424
005C52 D5008200       +20329 ;       JMP.L   _1424
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 334

ADDR   CODE            LINE SOURCELINE
005C52                +20329 _LG_1400:
                      20330 ; rs232cmd.c 5571               {
                      20331 ; rs232cmd.c 5572                       if ( CmdRequest)
005C52 964842rr       20333         MOV.B   ES,#SEG( _CmdRequest )
005C56 9908rrrr       20334         MOV.W   R0,#SOF( _CmdRequest )
005C5A 8200           20335         MOV.B   R0L,[R0]
005C5C F32E           20336         BEQ     _1416
                      20337 ; rs232cmd.c 5573                       {
                      20338 ; rs232cmd.c 5574                               if ( ParCnt)
005C5E 964842rr       20340         MOV.B   ES,#SEG( _ParCnt )
005C62 9908rrrr       20341         MOV.W   R0,#SOF( _ParCnt )
005C66 8200           20342         MOV.B   R0L,[R0]
005C68 F306           20343         BEQ     _1415
                      20344 ; rs232cmd.c 5575                                       SCPIError = SyntaxErr;
005C6A 964842rr       20346         MOV.B   ES,#SEG( _SCPIError )
005C6E 9908rrrr       20347         MOV.W   R0,#SOF( _SCPIError )
005C72 BA03           20348         MOV.W   [R0],#03H
005C74 FE6F           20349         BR      _1424
005C74 FE6F           20349         BR      _1424
005C76                20350 _1415:
                      20351 ; rs232cmd.c 5576                               else
                      20352 ; rs232cmd.c 5577                               {
                      20353 ; rs232cmd.c 5578                                       sprintf( buffer, "%u,%u\n", Calibration.A
                            udioCalibration.AnalogLeftChannel, 
                      20354 ; rs232cmd.c 5579                                                                                
                                                                                        Calibration.AudioCalibration.AnalogRi
                            ghtChannel);
005C76 91A8rr         20356         MOV.B   R5L,#SEG( __lc_bs )
005C79 71BB           20357         XOR.B   R5H,R5H
005C7B 8947           20358         MOV.W   R4,R7
005C7D 964842rr       20359         MOV.B   ES,#SEG( _Calibration+222 )
005C81 9908rrrr       20360         MOV.W   R0,#SOF( _Calibration+222 )
005C85 8200           20361         MOV.B   R0L,[R0]
005C87 B110           20362         MOVS.B  R0H,#00H
005C89 964842rr       20363         MOV.B   ES,#SEG( _Calibration+223 )
005C8D 9918rrrr       20364         MOV.W   R1,#SOF( _Calibration+223 )
005C91 8221           20365         MOV.B   R1L,[R1]
005C93 B130           20366         MOVS.B  R1H,#00H
005C95 0F02           20367         PUSH.W  R1
005C97 0F01           20369         PUSH.W  R0
005C99 9918rrrr       20371         MOV.W   R1,#SEG( _1301 )
005C9D 9908rrrr       20372         MOV.W   R0,#SOF( _1301 )
005CA1 0F03           20373         PUSH.W  R0, R1
005CA3 8915           20375         MOV.W   R1,R5
005CA5 8904           20376         MOV.W   R0,R4
                      20377         CALL    _sprintf
005CA7 C4rrrrrr       +20377 ;       FCALL   _sprintf
005CAB 99700008       20378         ADD.W   R7,#08H
                      20380 ; rs232cmd.c 5580                                       rs232puts( buffer);
005CAF 8915           20382         MOV.W   R1,R5
005CB1 8904           20383         MOV.W   R0,R4
                      20384         CALL    _rs232puts
005CB3 C4rrrrrr       +20384 ;       FCALL   _rs232puts
                      20385 ; rs232cmd.c 5581                               }
                      20386 ; rs232cmd.c 5582                       }
005CB7 FE4E           20388         BR      _1424
005CB7 FE4E00         20388         BR      _1424
005CBA                20389 _1416:
                      20390 ; rs232cmd.c 5583                       else
                      20391 ; rs232cmd.c 5584                       {
                      20392 ; rs232cmd.c 5585                               if ( !PasswordProtected)
005CBA 964842rr       20394         MOV.B   ES,#SEG( _PasswordProtected )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 335

ADDR   CODE            LINE SOURCELINE
005CBE 9908rrrr       20395         MOV.W   R0,#SOF( _PasswordProtected )
005CC2 8A00           20396         MOV.W   R0,[R0]
005CC4 F247           20397         BNE     _1424
                      20398 ; rs232cmd.c 5586                               {
                      20399 ; rs232cmd.c 5587                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &AnalogLeft, &AnalogRight)) != 2))
005CC6 964842rr       20401         MOV.B   ES,#SEG( _ParCnt )
005CCA 9908rrrr       20402         MOV.W   R0,#SOF( _ParCnt )
005CCE 8200           20403         MOV.B   R0L,[R0]
005CD0 910402         20404         CMP.B   R0L,#02H
005CD3 F21B           20405         BNE     _1417
005CD5 9918rrrr       20406         MOV.W   R1,#SEG( _Cmd )
005CD9 9908rrrr       20407         MOV.W   R0,#SOF( _Cmd )
005CDD 9168rr         20408         MOV.B   R3L,#SEG( __lc_bs )
005CE0 7177           20409         XOR.B   R3H,R3H
005CE2 402714         20410         LEA     R2,R7+20
005CE5 91A8rr         20411         MOV.B   R5L,#SEG( __lc_bs )
005CE8 71BB           20412         XOR.B   R5H,R5H
005CEA 404716         20413         LEA     R4,R7+22
005CED 0F30           20414         PUSH.W  R4, R5
005CEF 0F0C           20416         PUSH.W  R2, R3
005CF1 9938rrrr       20418         MOV.W   R3,#SEG( _1302 )
005CF5 9928rrrr       20419         MOV.W   R2,#SOF( _1302 )
005CF9 0F0C           20420         PUSH.W  R2, R3
                      20422         CALL    _sscanf
005CFB C4rrrrrr       +20422 ;       FCALL   _sscanf
005CFF 9970000C       20423         ADD.W   R7,#0CH
005D03 99040002       20425         CMP.W   R0,#02H
005D07 F307           20426         BEQ     _1418
005D07 F30700         20426         BEQ     _1418
005D0A                20427 _1417:
                      20428 ; rs232cmd.c 5588                                               SCPIError = SyntaxErr;
005D0A 964842rr       20430         MOV.B   ES,#SEG( _SCPIError )
005D0E 9908rrrr       20431         MOV.W   R0,#SOF( _SCPIError )
005D12 BA03           20432         MOV.W   [R0],#03H
005D14 FE1F           20433         BR      _1424
005D14 FE1F           20433         BR      _1424
005D16                20434 _1418:
                      20435 ; rs232cmd.c 5589                                       else
                      20436 ; rs232cmd.c 5590                                       {
                      20437 ; rs232cmd.c 5591                                               Calibration.AudioCalibration.Anal
                            ogLeftChannel = AnalogLeft;
005D16 840714         20439         MOV.B   R0L,[R7+20]
005D19 964842rr       20440         MOV.B   ES,#SEG( _Calibration+222 )
005D1D 9918rrrr       20441         MOV.W   R1,#SOF( _Calibration+222 )
005D21 8209           20442         MOV.B   [R1],R0L
                      20443 ; rs232cmd.c 5592                                               Calibration.AudioCalibration.Anal
                            ogRightChannel = AnalogRight;
005D23 840716         20445         MOV.B   R0L,[R7+22]
005D26 964842rr       20446         MOV.B   ES,#SEG( _Calibration+223 )
005D2A 9918rrrr       20447         MOV.W   R1,#SOF( _Calibration+223 )
005D2E 8209           20448         MOV.B   [R1],R0L
                      20449 ; rs232cmd.c 5593                                                               
                      20450 ; rs232cmd.c 5594                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005D30 9918rrrr       20452         MOV.W   R1,#SEG( _Calibration )
005D34 9908rrrr       20453         MOV.W   R0,#SOF( _Calibration )
005D38 964842rr       20454         MOV.B   ES,#SEG( _CalibrationPtr )
005D3C 9928rrrr       20455         MOV.W   R2,#SOF( _CalibrationPtr )
005D40 8A22           20456         MOV.W   R2,[R2]
005D42 993800E0       20457         MOV.W   R3,#0E0H
                      20458         CALL    _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 336

ADDR   CODE            LINE SOURCELINE
005D46 C4rrrrrr       +20458 ;       FCALL   _NV_Store
                      20459 ; rs232cmd.c 5595       
                      20460 ; rs232cmd.c 5596                                               WriteAnlAudioDACLevel( AnalogLeft
                            , AnalogRight);
005D4A 840714         20462         MOV.B   R0L,[R7+20]
005D4D 841716         20463         MOV.B   R0H,[R7+22]
                      20464         CALL    _WriteAnlAudioDACLevel
005D50 C4rrrrrr       +20464 ;       FCALL   _WriteAnlAudioDACLevel
                      20465 ; rs232cmd.c 5597                                       }
                      20466 ; rs232cmd.c 5598                               }
                      20467 ; rs232cmd.c 5599                       }
                      20468 ; rs232cmd.c 5600               }
005D54                20470 _1424:
                      20471 ; rs232cmd.c 5601       }
005D54 99700018       20473         ADD.W   R7,#018H
005D58 2F30           20475         POP.W   R4, R5
005D5A D680           20477         RET
                      20479 ; rs232cmd.c 5602       
                      20480 ; rs232cmd.c 5603       /************************************************************************
                            **/
                      20481 ; rs232cmd.c 5604       /* FactPLDVersion                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      20482 ; rs232cmd.c 5605       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20483 ; rs232cmd.c 5606       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      20484 ; rs232cmd.c 5607       /* Revised:       000625                                                 
                                                                                                                             
                                                                                    */
                      20485 ; rs232cmd.c 5608       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20486 ; rs232cmd.c 5609       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20487 ; rs232cmd.c 5610       /* Remarks:             NOTE! The video PLD version has not been implemen
                            ted at this*/
                      20488 ; rs232cmd.c 5611       /*                                              this time, hence the retu
                            rn value of 0 does NOT reflect the      */
                      20489 ; rs232cmd.c 5612       /*                                              video PLD version.       
                                                                                                                             
                                                                                            */
                      20490 ; rs232cmd.c 5613       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20491 ; rs232cmd.c 5614       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20492 ; rs232cmd.c 5615       /************************************************************************
                            **/
                      20493 ; rs232cmd.c 5616       void FactPLDVersion( void)
                      20494 ; rs232cmd.c 5617       {
                      20495         ALIGN   1
                      20497         PUBLIC  _FactPLDVersion
005D5C                20498 _FactPLDVersion:
005D5C 0F30           20502         PUSH.W  R4, R5
005D5E 99720014       20504         SUB.W   R7,#014H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 337

ADDR   CODE            LINE SOURCELINE
                      20507 ; rs232cmd.c 5618               char buffer[20];
                      20508 ; rs232cmd.c 5619       
                      20509 ; rs232cmd.c 5620               if ( CmdExecute && !SCPIError)
005D62 964842rr       20511         MOV.B   ES,#SEG( _CmdExecute )
005D66 9908rrrr       20512         MOV.W   R0,#SOF( _CmdExecute )
005D6A 8200           20513         MOV.B   R0L,[R0]
005D6C F336           20514         BEQ     _1432
005D6E 964842rr       20515         MOV.B   ES,#SEG( _SCPIError )
005D72 9908rrrr       20516         MOV.W   R0,#SOF( _SCPIError )
005D76 8A00           20517         MOV.W   R0,[R0]
005D78 F230           20518         BNE     _1432
                      20519 ; rs232cmd.c 5621               {
                      20520 ; rs232cmd.c 5622                       if ( CmdRequest)
005D7A 964842rr       20522         MOV.B   ES,#SEG( _CmdRequest )
005D7E 9908rrrr       20523         MOV.W   R0,#SOF( _CmdRequest )
005D82 8200           20524         MOV.B   R0L,[R0]
005D84 F325           20525         BEQ     _1428
                      20526 ; rs232cmd.c 5623                       {
                      20527 ; rs232cmd.c 5624                               if ( ParCnt)
005D86 964842rr       20529         MOV.B   ES,#SEG( _ParCnt )
005D8A 9908rrrr       20530         MOV.W   R0,#SOF( _ParCnt )
005D8E 8200           20531         MOV.B   R0L,[R0]
005D90 F306           20532         BEQ     _1427
                      20533 ; rs232cmd.c 5625                                       SCPIError = SyntaxErr;
005D92 964842rr       20535         MOV.B   ES,#SEG( _SCPIError )
005D96 9908rrrr       20536         MOV.W   R0,#SOF( _SCPIError )
005D9A BA03           20537         MOV.W   [R0],#03H
005D9C FE1E           20538         BR      _1432
005D9C FE1E           20538         BR      _1432
005D9E                20539 _1427:
                      20540 ; rs232cmd.c 5626                               else
                      20541 ; rs232cmd.c 5627                               {
                      20542 ; rs232cmd.c 5628                                       sprintf( buffer, "%u,%u\n", 0, pld_versio
                            n());
                      20544         CALL    _pld_version
005D9E C4rrrrrr       +20544 ;       FCALL   _pld_version
005DA2 91A8rr         20545         MOV.B   R5L,#SEG( __lc_bs )
005DA5 71BB           20546         XOR.B   R5H,R5H
005DA7 8947           20547         MOV.W   R4,R7
005DA9 0F01           20548         PUSH.W  R0
005DAB B900           20550         MOV.W   R0,#00H
005DAD 0F01           20551         PUSH.W  R0
005DAF 9918rrrr       20553         MOV.W   R1,#SEG( _1301 )
005DB3 9908rrrr       20554         MOV.W   R0,#SOF( _1301 )
005DB7 0F03           20555         PUSH.W  R0, R1
005DB9 8915           20557         MOV.W   R1,R5
005DBB 8904           20558         MOV.W   R0,R4
                      20559         CALL    _sprintf
005DBD C4rrrrrr       +20559 ;       FCALL   _sprintf
005DC1 99700008       20560         ADD.W   R7,#08H
                      20562 ; rs232cmd.c 5629                                       rs232puts( buffer);
005DC5 8915           20564         MOV.W   R1,R5
005DC7 8904           20565         MOV.W   R0,R4
                      20566         CALL    _rs232puts
005DC9 C4rrrrrr       +20566 ;       FCALL   _rs232puts
                      20567 ; rs232cmd.c 5630                               }
                      20568 ; rs232cmd.c 5631                       }
005DCD FE06           20570         BR      _1432
005DCD FE0600         20570         BR      _1432
005DD0                20571 _1428:
                      20572 ; rs232cmd.c 5632                       else
                      20573 ; rs232cmd.c 5633                               SCPIError = SyntaxErr;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 338

ADDR   CODE            LINE SOURCELINE
005DD0 964842rr       20575         MOV.B   ES,#SEG( _SCPIError )
005DD4 9908rrrr       20576         MOV.W   R0,#SOF( _SCPIError )
005DD8 BA03           20577         MOV.W   [R0],#03H
                      20578 ; rs232cmd.c 5634               }
005DDA                20580 _1432:
                      20581 ; rs232cmd.c 5635       }
005DDA 99700014       20583         ADD.W   R7,#014H
005DDE 2F30           20585         POP.W   R4, R5
005DE0 D680           20587         RET
                      20589 ; rs232cmd.c 5636       
                      20590 ; rs232cmd.c 5637       /************************************************************************
                            **/
                      20591 ; rs232cmd.c 5638       /* FactTCXOStatus                                                        
                                                                                                                             
                                                 RS232CMD.C */
                      20592 ; rs232cmd.c 5639       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20593 ; rs232cmd.c 5640       /* Author:              Kim Engedahl, DEV, 000628                        
                                                                                                                             
                                    */
                      20594 ; rs232cmd.c 5641       /* Revised:       000628                                                 
                                                                                                                             
                                                                                    */
                      20595 ; rs232cmd.c 5642       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20596 ; rs232cmd.c 5643       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20597 ; rs232cmd.c 5644       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                      20598 ; rs232cmd.c 5645       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20599 ; rs232cmd.c 5646       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20600 ; rs232cmd.c 5647       /************************************************************************
                            **/
                      20601 ; rs232cmd.c 5648       void FactTCXOStatus( void)
                      20602 ; rs232cmd.c 5649       {
                      20603         ALIGN   1
                      20605         PUBLIC  _FactTCXOStatus
005DE2                20606 _FactTCXOStatus:
005DE2 0F30           20610         PUSH.W  R4, R5
005DE4 99720014       20612         SUB.W   R7,#014H
                      20615 ; rs232cmd.c 5650               char buffer[20];
                      20616 ; rs232cmd.c 5651       
                      20617 ; rs232cmd.c 5652               if ( CmdExecute && !SCPIError)
005DE8 964842rr       20619         MOV.B   ES,#SEG( _CmdExecute )
005DEC 9908rrrr       20620         MOV.W   R0,#SOF( _CmdExecute )
005DF0 8200           20621         MOV.B   R0L,[R0]
005DF2 F333           20622         BEQ     _1438
005DF4 964842rr       20623         MOV.B   ES,#SEG( _SCPIError )
005DF8 9908rrrr       20624         MOV.W   R0,#SOF( _SCPIError )
005DFC 8A00           20625         MOV.W   R0,[R0]
005DFE F22D           20626         BNE     _1438
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 339

ADDR   CODE            LINE SOURCELINE
                      20627 ; rs232cmd.c 5653               {
                      20628 ; rs232cmd.c 5654                       if ( CmdRequest)
005E00 964842rr       20630         MOV.B   ES,#SEG( _CmdRequest )
005E04 9908rrrr       20631         MOV.W   R0,#SOF( _CmdRequest )
005E08 8200           20632         MOV.B   R0L,[R0]
005E0A F322           20633         BEQ     _1434
                      20634 ; rs232cmd.c 5655                       {
                      20635 ; rs232cmd.c 5656                               if ( ParCnt)
005E0C 964842rr       20637         MOV.B   ES,#SEG( _ParCnt )
005E10 9908rrrr       20638         MOV.W   R0,#SOF( _ParCnt )
005E14 8200           20639         MOV.B   R0L,[R0]
005E16 F306           20640         BEQ     _1433
                      20641 ; rs232cmd.c 5657                                       SCPIError = SyntaxErr;
005E18 964842rr       20643         MOV.B   ES,#SEG( _SCPIError )
005E1C 9908rrrr       20644         MOV.W   R0,#SOF( _SCPIError )
005E20 BA03           20645         MOV.W   [R0],#03H
005E22 FE1B           20646         BR      _1438
005E22 FE1B           20646         BR      _1438
005E24                20647 _1433:
                      20648 ; rs232cmd.c 5658                               else
                      20649 ; rs232cmd.c 5659                               {
                      20650 ; rs232cmd.c 5660                                       sprintf( buffer, "%u\n", tcxo_status());
                      20652         CALL    _tcxo_status
005E24 C4rrrrrr       +20652 ;       FCALL   _tcxo_status
005E28 91A8rr         20653         MOV.B   R5L,#SEG( __lc_bs )
005E2B 71BB           20654         XOR.B   R5H,R5H
005E2D 8947           20655         MOV.W   R4,R7
005E2F 0F01           20656         PUSH.W  R0
005E31 9918rrrr       20658         MOV.W   R1,#SEG( _1013 )
005E35 9908rrrr       20659         MOV.W   R0,#SOF( _1013 )
005E39 0F03           20660         PUSH.W  R0, R1
005E3B 8915           20662         MOV.W   R1,R5
005E3D 8904           20663         MOV.W   R0,R4
                      20664         CALL    _sprintf
005E3F C4rrrrrr       +20664 ;       FCALL   _sprintf
005E43 A976           20665         ADDS.W  R7,#06H
                      20667 ; rs232cmd.c 5661                                       rs232puts( buffer);
005E45 8915           20669         MOV.W   R1,R5
005E47 8904           20670         MOV.W   R0,R4
                      20671         CALL    _rs232puts
005E49 C4rrrrrr       +20671 ;       FCALL   _rs232puts
                      20672 ; rs232cmd.c 5662                               }
                      20673 ; rs232cmd.c 5663                       }
005E4D FE06           20675         BR      _1438
005E4D FE0600         20675         BR      _1438
005E50                20676 _1434:
                      20677 ; rs232cmd.c 5664                       else
                      20678 ; rs232cmd.c 5665                               SCPIError = SyntaxErr;
005E50 964842rr       20680         MOV.B   ES,#SEG( _SCPIError )
005E54 9908rrrr       20681         MOV.W   R0,#SOF( _SCPIError )
005E58 BA03           20682         MOV.W   [R0],#03H
                      20683 ; rs232cmd.c 5666               }
005E5A                20685 _1438:
                      20686 ; rs232cmd.c 5667       }
005E5A 99700014       20688         ADD.W   R7,#014H
005E5E 2F30           20690         POP.W   R4, R5
005E60 D680           20692         RET
                      20694 ; rs232cmd.c 5668       
                      20695 ; rs232cmd.c 5669       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 340

ADDR   CODE            LINE SOURCELINE
                      20696 ; rs232cmd.c 5670       /* FactMultiMediaChip                                                    
                                                                                                                             
                                RS232CMD.C  */
                      20697 ; rs232cmd.c 5671       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20698 ; rs232cmd.c 5672       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                    */
                      20699 ; rs232cmd.c 5673       /* Revised:       000614                                                 
                                                                                                                             
                                                                                    */
                      20700 ; rs232cmd.c 5674       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20701 ; rs232cmd.c 5675       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      20702 ; rs232cmd.c 5676       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20703 ; rs232cmd.c 5677       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      20704 ; rs232cmd.c 5678       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20705 ; rs232cmd.c 5679       /************************************************************************
                            **/
                      20706 ; rs232cmd.c 5680       void FactMultiMediaChip( void)
                      20707 ; rs232cmd.c 5681       {
                      20708         ALIGN   1
                      20710         PUBLIC  _FactMultiMediaChip
005E62                20711 _FactMultiMediaChip:
005E62 0F30           20715         PUSH.W  R4, R5
005E64 A97A           20717         ADDS.W  R7,#0AH
                      20723 ; rs232cmd.c 5682               UI test[2];
                      20724 ; rs232cmd.c 5683               UC tmp[2];
                      20725 ; rs232cmd.c 5684       
                      20726 ; rs232cmd.c 5685               if ( CmdExecute && !SCPIError)
005E66 964842rr       20728         MOV.B   ES,#SEG( _CmdExecute )
005E6A 9908rrrr       20729         MOV.W   R0,#SOF( _CmdExecute )
005E6E 8200           20730         MOV.B   R0L,[R0]
                      20731         BEQ     _1449
005E70 F202           +20731 ;       BNE     _LG_1428
005E72 D500C0         +20731 ;       JMP.L   _1449
005E76 D500C000       +20731 ;       JMP.L   _1449
005E76                +20731 _LG_1428:
005E76 964842rr       20732         MOV.B   ES,#SEG( _SCPIError )
005E7A 9908rrrr       20733         MOV.W   R0,#SOF( _SCPIError )
005E7E 8A00           20734         MOV.W   R0,[R0]
                      20735         BNE     _1449
005E80 F302           +20735 ;       BEQ     _LG_1430
005E82 D500B8         +20735 ;       JMP.L   _1449
005E86 D500B800       +20735 ;       JMP.L   _1449
005E86                +20735 _LG_1430:
                      20736 ; rs232cmd.c 5686               {
                      20737 ; rs232cmd.c 5687                       if ( CmdRequest)
005E86 964842rr       20739         MOV.B   ES,#SEG( _CmdRequest )
005E8A 9908rrrr       20740         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 341

ADDR   CODE            LINE SOURCELINE
005E8E 8200           20741         MOV.B   R0L,[R0]
005E90 F34C           20742         BEQ     _1442
                      20743 ; rs232cmd.c 5688                       {
                      20744 ; rs232cmd.c 5689                               if ( ParCnt != 1)
005E92 964842rr       20746         MOV.B   ES,#SEG( _ParCnt )
005E96 9908rrrr       20747         MOV.W   R0,#SOF( _ParCnt )
005E9A 8200           20748         MOV.B   R0L,[R0]
005E9C 910401         20749         CMP.B   R0L,#01H
005E9F F307           20750         BEQ     _1441
                      20751 ; rs232cmd.c 5690                                       SCPIError = SyntaxErr;
005EA1 964842rr       20753         MOV.B   ES,#SEG( _SCPIError )
005EA5 9908rrrr       20754         MOV.W   R0,#SOF( _SCPIError )
005EA9 BA03           20755         MOV.W   [R0],#03H
                      20756         BR      _1449
005EAB D500A3         +20756         JMP.L   _1449
005EAB D500A3         +20756         JMP.L   _1449
005EAE                20757 _1441:
                      20758 ; rs232cmd.c 5691                               else
                      20759 ; rs232cmd.c 5692                               {
                      20760 ; rs232cmd.c 5693                                       sscanf( Cmd, "%d", &test[0]);
005EAE 9918rrrr       20762         MOV.W   R1,#SEG( _Cmd )
005EB2 9908rrrr       20763         MOV.W   R0,#SOF( _Cmd )
005EB6 9168rr         20764         MOV.B   R3L,#SEG( __lc_bs )
005EB9 7177           20765         XOR.B   R3H,R3H
005EBB 8927           20766         MOV.W   R2,R7
005EBD 0F0C           20767         PUSH.W  R2, R3
005EBF 9938rrrr       20769         MOV.W   R3,#SEG( _10 )
005EC3 9928rrrr       20770         MOV.W   R2,#SOF( _10 )
005EC7 0F0C           20771         PUSH.W  R2, R3
                      20773         CALL    _sscanf
005EC9 C4rrrrrr       +20773 ;       FCALL   _sscanf
005ECD 99700008       20774         ADD.W   R7,#08H
                      20776 ; rs232cmd.c 5694       
                      20777 ; rs232cmd.c 5695                                       tmp[0] = test[0] & 0x0FF;
005ED1 8A07           20779         MOV.W   R0,[R7]
005ED3 9105FF         20780         AND.B   R0L,#0FFH
005ED6 840F04         20781         MOV.B   [R7+4],R0L
                      20782 ; rs232cmd.c 5696       
                      20783 ; rs232cmd.c 5697                                       TransmitIIC( 0x40, 1, tmp, IIC_PTV);
005ED9 9168rr         20785         MOV.B   R3L,#SEG( __lc_bs )
005EDC 7177           20786         XOR.B   R3H,R3H
005EDE 402704         20787         LEA     R2,R7+4
005EE1 912800         20788         MOV.B   R1L,#00H
005EE4 911801         20789         MOV.B   R0H,#01H
005EE7 910840         20790         MOV.B   R0L,#040H
                      20791         CALL    _TransmitIIC
005EEA C4rrrrrr       +20791 ;       FCALL   _TransmitIIC
                      20792 ; rs232cmd.c 5698                                       ReceiveIIC( 0x40, 1, &tmp[1], IIC_PTV);
005EEE 9168rr         20794         MOV.B   R3L,#SEG( __lc_bs )
005EF1 7177           20795         XOR.B   R3H,R3H
005EF3 402705         20796         LEA     R2,R7+5
005EF6 910840         20797         MOV.B   R0L,#040H
005EF9 911801         20798         MOV.B   R0H,#01H
005EFC 912800         20799         MOV.B   R1L,#00H
                      20800         CALL    _ReceiveIIC
005EFF C4rrrrrr       +20800 ;       FCALL   _ReceiveIIC
                      20801 ; rs232cmd.c 5699       
                      20802 ; rs232cmd.c 5700                                       rs232printf( 12,"%03d,%03d\n", ( int) tmp
                            [0], ( int) tmp[1]);
005F03 9908000C       20804         MOV.W   R0,#0CH
005F07 842704         20805         MOV.B   R1L,[R7+4]
005F0A B130           20806         MOVS.B  R1H,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 342

ADDR   CODE            LINE SOURCELINE
005F0C 844705         20807         MOV.B   R2L,[R7+5]
005F0F B150           20808         MOVS.B  R2H,#00H
005F11 0F04           20809         PUSH.W  R2
005F13 0F02           20811         PUSH.W  R1
005F15 9938rrrr       20813         MOV.W   R3,#SEG( _1439 )
005F19 9928rrrr       20814         MOV.W   R2,#SOF( _1439 )
005F1D 0F0C           20815         PUSH.W  R2, R3
                      20817         CALL    _rs232printf
005F1F C4rrrrrr       +20817 ;       FCALL   _rs232printf
005F23 99700008       20818         ADD.W   R7,#08H
                      20820 ; rs232cmd.c 5701                               }
                      20821 ; rs232cmd.c 5702                       }
005F27 FE66           20823         BR      _1449
005F27 FE6600         20823         BR      _1449
005F2A                20824 _1442:
                      20825 ; rs232cmd.c 5703                       else
                      20826 ; rs232cmd.c 5704                       {
                      20827 ; rs232cmd.c 5705                               if ( !PasswordProtected)
005F2A 964842rr       20829         MOV.B   ES,#SEG( _PasswordProtected )
005F2E 9908rrrr       20830         MOV.W   R0,#SOF( _PasswordProtected )
005F32 8A00           20831         MOV.W   R0,[R0]
005F34 F25F           20832         BNE     _1449
                      20833 ; rs232cmd.c 5706                               {
                      20834 ; rs232cmd.c 5707                                       if ( ParCnt != 2)
005F36 964842rr       20836         MOV.B   ES,#SEG( _ParCnt )
005F3A 9908rrrr       20837         MOV.W   R0,#SOF( _ParCnt )
005F3E 8200           20838         MOV.B   R0L,[R0]
005F40 910402         20839         CMP.B   R0L,#02H
005F43 F307           20840         BEQ     _1443
                      20841 ; rs232cmd.c 5708                                               SCPIError = SyntaxErr;  
005F45 964842rr       20843         MOV.B   ES,#SEG( _SCPIError )
005F49 9908rrrr       20844         MOV.W   R0,#SOF( _SCPIError )
005F4D BA03           20845         MOV.W   [R0],#03H
005F4F FE52           20846         BR      _1449
005F4F FE5200         20846         BR      _1449
005F52                20847 _1443:
                      20848 ; rs232cmd.c 5709                                       else
                      20849 ; rs232cmd.c 5710                                       {
                      20850 ; rs232cmd.c 5711                                               sscanf( Cmd, "%d,%d", &test[0], &
                            test[1]);
005F52 9918rrrr       20852         MOV.W   R1,#SEG( _Cmd )
005F56 9908rrrr       20853         MOV.W   R0,#SOF( _Cmd )
005F5A 9168rr         20854         MOV.B   R3L,#SEG( __lc_bs )
005F5D 7177           20855         XOR.B   R3H,R3H
005F5F 8927           20856         MOV.W   R2,R7
005F61 91A8rr         20857         MOV.B   R5L,#SEG( __lc_bs )
005F64 71BB           20858         XOR.B   R5H,R5H
005F66 404702         20859         LEA     R4,R7+2
005F69 0F30           20860         PUSH.W  R4, R5
005F6B 0F0C           20862         PUSH.W  R2, R3
005F6D 9938rrrr       20864         MOV.W   R3,#SEG( _1440 )
005F71 9928rrrr       20865         MOV.W   R2,#SOF( _1440 )
005F75 0F0C           20866         PUSH.W  R2, R3
                      20868         CALL    _sscanf
005F77 C4rrrrrr       +20868 ;       FCALL   _sscanf
005F7B 9970000C       20869         ADD.W   R7,#0CH
                      20871 ; rs232cmd.c 5712       
                      20872 ; rs232cmd.c 5713                                               tmp[0] = test[0] & 0x0FF;
005F7F 8A07           20874         MOV.W   R0,[R7]
005F81 9105FF         20875         AND.B   R0L,#0FFH
005F84 840F04         20876         MOV.B   [R7+4],R0L
                      20877 ; rs232cmd.c 5714                                               tmp[1] = test[1] & 0x0FF;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 343

ADDR   CODE            LINE SOURCELINE
005F87 8C0702         20879         MOV.W   R0,[R7+2]
005F8A 9105FF         20880         AND.B   R0L,#0FFH
005F8D 840F05         20881         MOV.B   [R7+5],R0L
                      20882 ; rs232cmd.c 5715       
                      20883 ; rs232cmd.c 5716                                               TransmitIIC( 0x40, 2, tmp, IIC_PT
                            V);
005F90 911802         20885         MOV.B   R0H,#02H
005F93 91A8rr         20886         MOV.B   R5L,#SEG( __lc_bs )
005F96 71BB           20887         XOR.B   R5H,R5H
005F98 404704         20888         LEA     R4,R7+4
005F9B 912800         20889         MOV.B   R1L,#00H
005F9E 8935           20890         MOV.W   R3,R5
005FA0 8924           20891         MOV.W   R2,R4
005FA2 910840         20892         MOV.B   R0L,#040H
                      20893         CALL    _TransmitIIC
005FA5 C4rrrrrr       +20893 ;       FCALL   _TransmitIIC
                      20894 ; rs232cmd.c 5717       
                      20895 ; rs232cmd.c 5718                                               TransmitIIC( 0x40, 1, tmp, IIC_PT
                            V);
005FA9 912800         20897         MOV.B   R1L,#00H
005FAC 911801         20898         MOV.B   R0H,#01H
005FAF 910840         20899         MOV.B   R0L,#040H
005FB2 8935           20900         MOV.W   R3,R5
005FB4 8924           20901         MOV.W   R2,R4
                      20902         CALL    _TransmitIIC
005FB6 C4rrrrrr       +20902 ;       FCALL   _TransmitIIC
                      20903 ; rs232cmd.c 5719                                               ReceiveIIC( 0x40, 1, &tmp[1], IIC
                            _PTV);
005FBA 9168rr         20905         MOV.B   R3L,#SEG( __lc_bs )
005FBD 7177           20906         XOR.B   R3H,R3H
005FBF 402705         20907         LEA     R2,R7+5
005FC2 910840         20908         MOV.B   R0L,#040H
005FC5 911801         20909         MOV.B   R0H,#01H
005FC8 912800         20910         MOV.B   R1L,#00H
                      20911         CALL    _ReceiveIIC
005FCB C4rrrrrr       +20911 ;       FCALL   _ReceiveIIC
                      20912 ; rs232cmd.c 5720       
                      20913 ; rs232cmd.c 5721                                               rs232printf( 12,"%03d,%03d\n", ( 
                            int) tmp[0], ( int) tmp[1]);
005FCF 9908000C       20915         MOV.W   R0,#0CH
005FD3 842704         20916         MOV.B   R1L,[R7+4]
005FD6 B130           20917         MOVS.B  R1H,#00H
005FD8 844705         20918         MOV.B   R2L,[R7+5]
005FDB B150           20919         MOVS.B  R2H,#00H
005FDD 0F04           20920         PUSH.W  R2
005FDF 0F02           20922         PUSH.W  R1
005FE1 9938rrrr       20924         MOV.W   R3,#SEG( _1439 )
005FE5 9928rrrr       20925         MOV.W   R2,#SOF( _1439 )
005FE9 0F0C           20926         PUSH.W  R2, R3
                      20928         CALL    _rs232printf
005FEB C4rrrrrr       +20928 ;       FCALL   _rs232printf
005FEF 99700008       20929         ADD.W   R7,#08H
                      20931 ; rs232cmd.c 5722                                       }
                      20932 ; rs232cmd.c 5723                               }
                      20933 ; rs232cmd.c 5724                       }
                      20934 ; rs232cmd.c 5725               }
005FF4                20936 _1449:
                      20937 ; rs232cmd.c 5726       }
005FF4 A976           20939         ADDS.W  R7,#06H
005FF6 2F30           20941         POP.W   R4, R5
005FF8 D680           20943         RET
                      20945 ; rs232cmd.c 5727       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 344

ADDR   CODE            LINE SOURCELINE
                      20946 ; rs232cmd.c 5728       /************************************************************************
                            **/
                      20947 ; rs232cmd.c 5729       /* FindParameter                                                         
                                                                                                                             
                                                 RS232CMD.C */
                      20948 ; rs232cmd.c 5730       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20949 ; rs232cmd.c 5731       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                      20950 ; rs232cmd.c 5732       /* Revised:             000603                                           
                                                                                                                             
                                                                                    */
                      20951 ; rs232cmd.c 5733       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      20952 ; rs232cmd.c 5734       /* Function:    Find the character defined parameter                     
                                                                                                    */
                      20953 ; rs232cmd.c 5735       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                      20954 ; rs232cmd.c 5736       /* Returns:             The array number containing the parameter or max.
                             array+1                */
                      20955 ; rs232cmd.c 5737       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      20956 ; rs232cmd.c 5738       /************************************************************************
                            **/
                      20957 ; rs232cmd.c 5739       int FindParameter( char* par, struct PAR_STRUCT code* ParPtr)
                      20958 ; rs232cmd.c 5740       {
                      20959         ALIGN   1
                      20961         PUBLIC  _FindParameter
005FFA                20962 _FindParameter:
005FFA 0F70           20966         PUSH.W  R4, R5, R6
005FFC A97C           20968         ADDS.W  R7,#0CH
005FFE 8951           20972         MOV.W   R5,R1
006000 8940           20973         MOV.W   R4,R0
                      20980 ; rs232cmd.c 5741               int tmp = 0;
006002 B960           20982         MOV.W   R6,#00H
                      20984 ; rs232cmd.c 5742       
                      20985 ; rs232cmd.c 5743               while ( ParPtr)
006004 8913           20987         MOV.W   R1,R3
006006 8902           20988         MOV.W   R0,R2
006008 6932           20989         OR.W    R3,R2
00600A F33F           20992         BEQ     _1456
00600A F33F           20992         BEQ     _1456
00600C                20993 _1452:
                      20994 ; rs232cmd.c 5744               {
                      20995 ; rs232cmd.c 5745                       if (( !Cstrcmp( par, ParPtr->LongName)) || ( !Cstrcmp( pa
                            r, ParPtr->ShortName)))
00600C 8C1F02         20997         MOV.W   [R7+2],R1
00600F 8A0F           20998         MOV.W   [R7],R0
006011 862C43         20999         MOV.B   CS,R1L
006014 8820           21000         MOVC.W  R2,[R0+]
006016 99040000       21001         CMP.W   R0,#00H
00601A F202           21002         BNE     _1458
00601C A64143         21003         ADDS.B  CS,#01H
00601C A6414300       21003         ADDS.B  CS,#01H
006020                21004 _1458:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 345

ADDR   CODE            LINE SOURCELINE
006020 8830           21005         MOVC.W  R3,[R0+]
006022 8915           21008         MOV.W   R1,R5
006024 8904           21009         MOV.W   R0,R4
                      21012         CALL    _Cstrcmp
006026 C4rrrrrr       +21012 ;       FCALL   _Cstrcmp
00602A 6900           21015         OR.W    R0,R0
00602C F315           21016         BEQ     _1453
00602E 8C1702         21017         MOV.W   R1,[R7+2]
006031 8A07           21018         MOV.W   R0,[R7]
006033 99000004       21019         ADD.W   R0,#04H
006037 99110000       21020         ADDC.W  R1,#00H
00603B 862C43         21021         MOV.B   CS,R1L
00603E 8820           21022         MOVC.W  R2,[R0+]
006040 99040000       21023         CMP.W   R0,#00H
006044 F202           21024         BNE     _1459
006046 A64143         21025         ADDS.B  CS,#01H
006046 A6414300       21025         ADDS.B  CS,#01H
00604A                21026 _1459:
00604A 8830           21027         MOVC.W  R3,[R0+]
00604C 8915           21028         MOV.W   R1,R5
00604E 8904           21029         MOV.W   R0,R4
                      21032         CALL    _Cstrcmp
006050 C4rrrrrr       +21032 ;       FCALL   _Cstrcmp
006054 6900           21035         OR.W    R0,R0
006056 F202           21036         BNE     _1454
006056 F202           21036         BNE     _1454
006058                21037 _1453:
                      21038 ; rs232cmd.c 5746                               return( tmp);
006058 8906           21040         MOV.W   R0,R6
00605A FE19           21043         BR      _1457
00605A FE19           21043         BR      _1457
00605C                21044 _1454:
                      21051 ; rs232cmd.c 5747       
                      21052 ; rs232cmd.c 5748                       ParPtr = ParPtr->SameLevel;
00605C 8C1702         21054         MOV.W   R1,[R7+2]
00605F 8A07           21055         MOV.W   R0,[R7]
006061 99000008       21056         ADD.W   R0,#08H
006065 99110000       21057         ADDC.W  R1,#00H
006069 862C43         21061         MOV.B   CS,R1L
00606C 8820           21062         MOVC.W  R2,[R0+]
00606E 99040000       21063         CMP.W   R0,#00H
006072 F202           21064         BNE     _1460
006074 A64143         21065         ADDS.B  CS,#01H
006074 A6414300       21065         ADDS.B  CS,#01H
006078                21066 _1460:
006078 8830           21067         MOVC.W  R3,[R0+]
                      21069 ; rs232cmd.c 5749       
                      21070 ; rs232cmd.c 5750                       if ( tmp < 255)
00607A 996400FF       21072         CMP.W   R6,#0FFH
00607E FA05           21073         BGE     _1456
                      21074 ; rs232cmd.c 5751                               tmp++;
006080 A961           21076         ADDS.W  R6,#01H
006082 8913           21080         MOV.W   R1,R3
006084 8902           21081         MOV.W   R0,R2
006086 6932           21082         OR.W    R3,R2
006088 F2C1           21085         BNE     _1452
                      21086 ; rs232cmd.c 5752                       else
                      21087 ; rs232cmd.c 5753                               break;
                      21088 ; rs232cmd.c 5754               }
00608A                21090 _1456:
                      21091 ; rs232cmd.c 5755       
                      21092 ; rs232cmd.c 5756               return( -1);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 346

ADDR   CODE            LINE SOURCELINE
00608A 9908FFFF       21094         MOV.W   R0,#0FFFFH
                      21096 ; rs232cmd.c 5757       }
00608E                21098 _1457:
00608E A974           21099         ADDS.W  R7,#04H
006090 2F70           21101         POP.W   R4, R5, R6
006092 D680           21103         RET
                      21107 ; rs232cmd.c 5758       
                      21108 ; rs232cmd.c 5759       
                      21109 ; rs232cmd.c 5760       /************************************************************************
                            **/
                      21110 ; rs232cmd.c 5761       /* FLTToSamples                                                          
                                                                                                                             
                                                     RS232CMD.C */
                      21111 ; rs232cmd.c 5762       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21112 ; rs232cmd.c 5763       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                    */
                      21113 ; rs232cmd.c 5764       /* Revised:             000530                                           
                                                                                                                             
                                                                                    */
                      21114 ; rs232cmd.c 5765       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */      
                      21115 ; rs232cmd.c 5766       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      21116 ; rs232cmd.c 5767       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                    */
                      21117 ; rs232cmd.c 5768       /* Returns:             FLT in samples, or -1 if illegal                 
                                                                                                                            *
                            /
                      21118 ; rs232cmd.c 5769       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      21119 ; rs232cmd.c 5770       /************************************************************************
                            ***/
                      21120 ; rs232cmd.c 5771       long FLTToSamples( UC system, int F, int L, float T) {
                      21121         ALIGN   1
                      21123         PUBLIC  _FLTToSamples
006094                21124 _FLTToSamples:
006094 0F70           21128         PUSH.W  R4, R5, R6
006096 99720018       21130         SUB.W   R7,#018H
00609A 840F12         21133         MOV.B   [R7+18],R0L
00609D 8C2F0E         21136         MOV.W   [R7+14],R2
                      21146 ; rs232cmd.c 5772       
                      21147 ; rs232cmd.c 5773               long samples;
                      21148 ; rs232cmd.c 5774               char minus;
                      21149 ; rs232cmd.c 5775       
                      21150 ; rs232cmd.c 5776               if (( F == 0) && ( L == 0) && ( T == 0))
0060A0 8C1F10         21152         MOV.W   [R7+16],R1
0060A3 6911           21153         OR.W    R1,R1
0060A5 F210           21154         BNE     _1467
0060A7 8C070E         21155         MOV.W   R0,[R7+14]
0060AA F20D           21156         BNE     _1467
0060AC B930           21157         MOV.W   R3,#00H
0060AE B920           21158         MOV.W   R2,#00H
0060B0 8C1724         21159         MOV.W   R1,[R7+36]
0060B3 8C0722         21160         MOV.W   R0,[R7+34]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 347

ADDR   CODE            LINE SOURCELINE
0060B6 C4rrrrrr       21161         FCALL   __CMP_SPF
0060BA 910400         21162         CMP.B   R0L,#00H
0060BD F204           21163         BNE     _1467
                      21164 ; rs232cmd.c 5777                       return( 0);
0060BF B910           21166         MOV.W   R1,#00H
0060C1 B900           21167         MOV.W   R0,#00H
                      21168         BR      _1534
0060C3 D5021E         +21168         JMP.L   _1534
0060C3 D5021E         +21168         JMP.L   _1534
0060C6                21169 _1467:
                      21172 ; rs232cmd.c 5778       
                      21173 ; rs232cmd.c 5779               if (( F <= 0) && ( L <= 0) && ( T <= 0))
0060C6 9C74100000     21175         CMP.W   [R7+16],#00H
0060CB FC10           21176         BGT     _1470
0060CD 9C740E0000     21177         CMP.W   [R7+14],#00H
0060D2 FC0C           21178         BGT     _1470
0060D4 B930           21179         MOV.W   R3,#00H
0060D6 B920           21180         MOV.W   R2,#00H
0060D8 8C1724         21181         MOV.W   R1,[R7+36]
0060DB 8C0722         21182         MOV.W   R0,[R7+34]
0060DE C4rrrrrr       21183         FCALL   __CMP_SPF
0060E2 910400         21184         CMP.B   R0L,#00H
0060E5 FC03           21185         BGT     _1470
                      21186 ; rs232cmd.c 5780               {
                      21187 ; rs232cmd.c 5781                       minus = 1;
0060E7 B4710C         21189         MOV.B   [R7+12],#01H
                      21191 ; rs232cmd.c 5782               }
0060EA FE19           21193         BR      _1474
0060EA FE19           21193         BR      _1474
0060EC                21194 _1470:
                      21195 ; rs232cmd.c 5783               else
                      21196 ; rs232cmd.c 5784               {
                      21197 ; rs232cmd.c 5785                       if (( F >= 0) && ( L >= 0) && ( T >= 0))
0060EC 9C74100000     21199         CMP.W   [R7+16],#00H
0060F1 FB0E           21200         BLT     _1472
0060F3 9C740E0000     21201         CMP.W   [R7+14],#00H
0060F8 FB0A           21202         BLT     _1472
0060FA B930           21203         MOV.W   R3,#00H
0060FC B920           21204         MOV.W   R2,#00H
0060FE 8C1724         21205         MOV.W   R1,[R7+36]
006101 8C0722         21206         MOV.W   R0,[R7+34]
006104 C4rrrrrr       21207         FCALL   __CMP_SPF
006108 910400         21208         CMP.B   R0L,#00H
00610B FA07           21209         BGE     _1473
                      21210 ; rs232cmd.c 5786                               minus = 0;
00610E                21212 _1472:
                      21213 ; rs232cmd.c 5787                       else
                      21214 ; rs232cmd.c 5788                               return( -1);
00610E 9918FFFF       21216         MOV.W   R1,#0FFFFH
006112 9908FFFF       21217         MOV.W   R0,#0FFFFH
                      21218         BR      _1534
006116 D501F5         +21218         JMP.L   _1534
00611A                21220 _1473:
00611A B4700C         21223         MOV.B   [R7+12],#00H
                      21226 ; rs232cmd.c 5789               }
00611E                21228 _1474:
                      21229 ; rs232cmd.c 5790       
                      21230 ; rs232cmd.c 5791                                                                                
                                                                                                            // 1 sample = (1/
                            27MHz)/256
                      21231 ; rs232cmd.c 5792               samples = ( long)(( T*6912L)/1000L + 0.5);      
00611E 991845D8       21233         MOV.W   R1,#045D8H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 348

ADDR   CODE            LINE SOURCELINE
006122 B900           21234         MOV.W   R0,#00H
006124 8C3724         21235         MOV.W   R3,[R7+36]
006127 8C2722         21236         MOV.W   R2,[R7+34]
00612A C4rrrrrr       21237         FCALL   __MUL_SPF
00612E 9938447A       21238         MOV.W   R3,#0447AH
006132 B920           21239         MOV.W   R2,#00H
006134 C4rrrrrr       21240         FCALL   __DIV_SPF
006138 C4rrrrrr       21241         FCALL   __SPF2DPF
00613C 9C780A3FE0     21242         MOV.W   [R7+10],#03FE0H
006141 BC7008         21243         MOV.W   [R7+8],#00H
006144 BC7006         21244         MOV.W   [R7+6],#00H
006147 BC7004         21245         MOV.W   [R7+4],#00H
00614A 406704         21246         LEA     R6,R7+4
00614D C4rrrrrr       21247         FCALL   __ADD_DPF
006151 C4rrrrrr       21248         FCALL   __DPF2L
006155 8C1F16         21249         MOV.W   [R7+22],R1
006158 8C0F14         21250         MOV.W   [R7+20],R0
                      21251 ; rs232cmd.c 5793       
                      21252 ; rs232cmd.c 5794               if ( system < NTSC)                                              
                                                    // If selected system is PAL..
00615B 844712         21254         MOV.B   R2L,[R7+18]
00615E 914402         21255         CMP.B   R2L,#02H
                      21258         BCC     _1499
006161 F102           +21258 ;       BCS     _LG_1474
006163 D500EB         +21258 ;       JMP.L   _1499
006166 D500EB         +21258 ;       JMP.L   _1499
006166                +21258 _LG_1474:
006166 8C1F0A         21259         MOV.W   [R7+10],R1
006169 8C0F08         21260         MOV.W   [R7+8],R0
                      21261 ; rs232cmd.c 5795               {
                      21262 ; rs232cmd.c 5796       
                      21263 ; rs232cmd.c 5797                       if ( labs( samples) > 442367L)          // Test for illeg
                            al time var
                      21265         CALL    _labs
00616C C4rrrrrr       +21265 ;       FCALL   _labs
006170 99140006       21267         CMP.W   R1,#06H
006174 FB0A           21268         BLT     _1475
006176 FC03           21269         BGT     _1540
006178 9904BFFF       21270         CMP.W   R0,#0BFFFH
00617C F906           21271         BL      _1475
00617C F906           21271         BL      _1475
00617E                21272 _1540:
                      21273 ; rs232cmd.c 5798                               return( -1);
00617E 9918FFFF       21275         MOV.W   R1,#0FFFFH
006182 9908FFFF       21276         MOV.W   R0,#0FFFFH
                      21277         BR      _1534
006186 D501BD         +21277         JMP.L   _1534
006186 D501BD00       +21277         JMP.L   _1534
00618A                21278 _1475:
                      21281 ; rs232cmd.c 5799       
                      21282 ; rs232cmd.c 5800                       switch ( F)                                              
                                                                            // Test for illegal field & line
00618A 9C74100000     21284         CMP.W   [R7+16],#00H
00618F F31A           21285         BEQ     _1476
006191 9C7410FFFF     21286         CMP.W   [R7+16],#0FFFFH
006196 F328           21287         BEQ     _1481
006198 9C7410FFFD     21288         CMP.W   [R7+16],#0FFFDH
00619D F325           21289         BEQ     _1481
00619F 9C74100002     21290         CMP.W   [R7+16],#02H
0061A4 F321           21291         BEQ     _1481
0061A6 9C7410FFFE     21292         CMP.W   [R7+16],#0FFFEH
0061AB F32A           21293         BEQ     _1484
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 349

ADDR   CODE            LINE SOURCELINE
0061AD 9C74100001     21294         CMP.W   [R7+16],#01H
0061B2 F326           21295         BEQ     _1484
0061B4 9C74100003     21296         CMP.W   [R7+16],#03H
0061B9 F323           21297         BEQ     _1484
0061BB 9C74100004     21298         CMP.W   [R7+16],#04H
0061C0 F32B           21299         BEQ     _1485
0061C2 FE44           21300         BR      _1487
                      21301 ; rs232cmd.c 5801                       {
                      21302 ; rs232cmd.c 5802                               case 0:
0061C4                21304 _1476:
                      21305 ; rs232cmd.c 5803                                       if (( minus && ( L < -311)) || ( !minus &
                            & ( L > 312)))
0061C4 84070C         21307         MOV.B   R0L,[R7+12]
0061C7 F304           21308         BEQ     _1477
0061C9 9C740EFEC9     21309         CMP.W   [R7+14],#0FEC9H
0061CE FB06           21310         BLT     _1478
0061CE FB06           21310         BLT     _1478
0061D0                21311 _1477:
0061D0 84070C         21312         MOV.B   R0L,[R7+12]
0061D3 F242           21313         BNE     _1492
0061D5 9C740E0138     21314         CMP.W   [R7+14],#0138H
0061DA FD3E           21315         BLE     _1492
0061DA FD3E           21315         BLE     _1492
0061DC                21316 _1478:
                      21317 ; rs232cmd.c 5804                                               return( -1);
0061DC 9918FFFF       21319         MOV.W   R1,#0FFFFH
0061E0 9908FFFF       21320         MOV.W   R0,#0FFFFH
                      21321         BR      _1534
0061E4 D5018E         +21321         JMP.L   _1534
                      21322 ; rs232cmd.c 5805                                       break;
                      21323 ; rs232cmd.c 5806       
                      21324 ; rs232cmd.c 5807                               case -1:
                      21325 ; rs232cmd.c 5808                               case -3:
                      21326 ; rs232cmd.c 5809                               case 2:
0061E8                21328 _1481:
                      21331 ; rs232cmd.c 5810                                       if ( abs( L) > 312)
0061E8 8C070E         21333         MOV.W   R0,[R7+14]
                      21334         CALL    _abs
0061EB C4rrrrrr       +21334 ;       FCALL   _abs
0061EF 99040138       21335         CMP.W   R0,#0138H
0061F3 FD32           21336         BLE     _1492
                      21337 ; rs232cmd.c 5811                                               return( -1);
0061F5 9918FFFF       21339         MOV.W   R1,#0FFFFH
0061F9 9908FFFF       21340         MOV.W   R0,#0FFFFH
                      21341         BR      _1534
0061FD D50181         +21341         JMP.L   _1534
                      21342 ; rs232cmd.c 5812                                       break;
                      21343 ; rs232cmd.c 5813       
                      21344 ; rs232cmd.c 5814                               case -2:
                      21345 ; rs232cmd.c 5815                               case 1:
                      21346 ; rs232cmd.c 5816                               case 3:
006200                21348 _1484:
                      21351 ; rs232cmd.c 5817                                       if ( abs( L) > 311)
006200 8C070E         21353         MOV.W   R0,[R7+14]
                      21354         CALL    _abs
006203 C4rrrrrr       +21354 ;       FCALL   _abs
006207 99040137       21355         CMP.W   R0,#0137H
00620B FD26           21356         BLE     _1492
                      21357 ; rs232cmd.c 5818                                               return( -1);
00620D 9918FFFF       21359         MOV.W   R1,#0FFFFH
006211 9908FFFF       21360         MOV.W   R0,#0FFFFH
                      21361         BR      _1534
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 350

ADDR   CODE            LINE SOURCELINE
006215 D50175         +21361         JMP.L   _1534
                      21362 ; rs232cmd.c 5819                                       break;
                      21363 ; rs232cmd.c 5820       
                      21364 ; rs232cmd.c 5821                               case 4:
006218                21366 _1485:
                      21369 ; rs232cmd.c 5822                                       if (( L > 0) || ( T > 0.0))
006218 9C740E0000     21371         CMP.W   [R7+14],#00H
00621D FC11           21372         BGT     _1486
00621F 8C1724         21373         MOV.W   R1,[R7+36]
006222 8C0722         21374         MOV.W   R0,[R7+34]
006225 C4rrrrrr       21375         FCALL   __SPF2DPF
006229 BC7006         21376         MOV.W   [R7+6],#00H
00622C BC7004         21377         MOV.W   [R7+4],#00H
00622F BC7002         21378         MOV.W   [R7+2],#00H
006232 BA70           21379         MOV.W   [R7],#00H
006234 8967           21380         MOV.W   R6,R7
006236 C4rrrrrr       21381         FCALL   __CMP_DPF
00623A 910401         21382         CMP.B   R0L,#01H
00623D F20D           21383         BNE     _1492
00623D F20D00         21383         BNE     _1492
006240                21384 _1486:
                      21385 ; rs232cmd.c 5823                                               return( -1);
006240 9918FFFF       21387         MOV.W   R1,#0FFFFH
006244 9908FFFF       21388         MOV.W   R0,#0FFFFH
                      21389         BR      _1534
006248 D5015C         +21389         JMP.L   _1534
                      21390 ; rs232cmd.c 5824                                       break;
                      21391 ; rs232cmd.c 5825       
                      21392 ; rs232cmd.c 5826                               default:
00624C                21394 _1487:
                      21395 ; rs232cmd.c 5827                                       return( -1);
00624C 9918FFFF       21397         MOV.W   R1,#0FFFFH
006250 9908FFFF       21398         MOV.W   R0,#0FFFFH
                      21399         BR      _1534
006254 D50156         +21399         JMP.L   _1534
                      21400 ; rs232cmd.c 5828                       }
006258                21402 _1492:
                      21405 ; rs232cmd.c 5829       
                      21406 ; rs232cmd.c 5830                       if ( !minus)                                             
                                                                    // if posistive delay..
006258 84070C         21408         MOV.B   R0L,[R7+12]
00625B F212           21411         BNE     _1493
                      21412 ; rs232cmd.c 5831                       {
                      21413 ; rs232cmd.c 5832                               if ( F % 2)
00625D 8C0710         21415         MOV.W   R0,[R7+16]
006260 8910           21416         MOV.W   R1,R0
006262 9819           21417         SEXT.W  R1
006264 E9090002       21418         DIV.D   R0,#02H
006268 6911           21419         OR.W    R1,R1
00626A F341           21420         BEQ     _1498
                      21421 ; rs232cmd.c 5833                               {
                      21422 ; rs232cmd.c 5834                                       L += 313;
00626C 8C070E         21424         MOV.W   R0,[R7+14]
00626F 99000139       21425         ADD.W   R0,#0139H
006273 8C0F0E         21427         MOV.W   [R7+14],R0
                      21428 ; rs232cmd.c 5835                                       F--;
006276 8C0710         21430         MOV.W   R0,[R7+16]
006279 A90F           21431         ADDS.W  R0,#0FH
00627B 8C0F10         21432         MOV.W   [R7+16],R0
                      21433 ; rs232cmd.c 5836                               }
                      21434 ; rs232cmd.c 5837                       }
00627E FE37           21436         BR      _1498
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 351

ADDR   CODE            LINE SOURCELINE
00627E FE37           21436         BR      _1498
006280                21437 _1493:
                      21438 ; rs232cmd.c 5838                       else                                                     
                                                                                            // ..else delay is negative
                      21439 ; rs232cmd.c 5839                       {
                      21440 ; rs232cmd.c 5840                               F += 7;
006280 8C0710         21442         MOV.W   R0,[R7+16]
006283 A907           21443         ADDS.W  R0,#07H
                      21444 ; rs232cmd.c 5841       
                      21445 ; rs232cmd.c 5842                               samples += 442367L;
006285 8C370A         21447         MOV.W   R3,[R7+10]
006288 8C2708         21448         MOV.W   R2,[R7+8]
00628B 9920BFFF       21449         ADD.W   R2,#0BFFFH
00628F 99310006       21450         ADDC.W  R3,#06H
006293 8C3F16         21451         MOV.W   [R7+22],R3
006296 8C2F14         21452         MOV.W   [R7+20],R2
                      21453 ; rs232cmd.c 5843       
                      21454 ; rs232cmd.c 5844                               if ( F % 2) {
006299 8C0F10         21456         MOV.W   [R7+16],R0
00629C 8910           21457         MOV.W   R1,R0
00629E 9819           21458         SEXT.W  R1
0062A0 E9090002       21459         DIV.D   R0,#02H
0062A4 6911           21460         OR.W    R1,R1
0062A6 F30A           21461         BEQ     _1494
                      21462 ; rs232cmd.c 5845                                       L += 624;
0062A8 8C070E         21464         MOV.W   R0,[R7+14]
0062AB 99000270       21465         ADD.W   R0,#0270H
0062AF 8C0F0E         21466         MOV.W   [R7+14],R0
                      21467 ; rs232cmd.c 5846                                       F--;
0062B2 8C0710         21469         MOV.W   R0,[R7+16]
0062B5 A90F           21470         ADDS.W  R0,#0FH
0062B7 8C0F10         21471         MOV.W   [R7+16],R0
                      21472 ; rs232cmd.c 5847                               }
0062BA FE05           21474         BR      _1495
0062BA FE05           21474         BR      _1495
0062BC                21475 _1494:
                      21476 ; rs232cmd.c 5848                               else
                      21477 ; rs232cmd.c 5849                                       L += 312;
0062BC 8C070E         21479         MOV.W   R0,[R7+14]
0062BF 99000138       21480         ADD.W   R0,#0138H
0062C3 8C0F0E         21481         MOV.W   [R7+14],R0
0062C3 8C0F0E         21481         MOV.W   [R7+14],R0
0062C6                21482 _1495:
                      21483 ; rs232cmd.c 5850       
                      21484 ; rs232cmd.c 5851                               if ( T == 0)
0062C6 B930           21486         MOV.W   R3,#00H
0062C8 B920           21487         MOV.W   R2,#00H
0062CA 8C1724         21488         MOV.W   R1,[R7+36]
0062CD 8C0722         21489         MOV.W   R0,[R7+34]
0062D0 C4rrrrrr       21490         FCALL   __CMP_SPF
0062D4 910400         21491         CMP.B   R0L,#00H
0062D7 F20B           21492         BNE     _1498
                      21493 ; rs232cmd.c 5852                                       samples++;
0062D9 8C1716         21495         MOV.W   R1,[R7+22]
0062DC 8C0714         21496         MOV.W   R0,[R7+20]
0062DF 99000001       21497         ADD.W   R0,#01H
0062E3 99110000       21498         ADDC.W  R1,#00H
0062E7 8C1F16         21499         MOV.W   [R7+22],R1
0062EA 8C0F14         21500         MOV.W   [R7+20],R0
                      21501 ; rs232cmd.c 5853                       }
0062EE                21503 _1498:
                      21504 ; rs232cmd.c 5854       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 352

ADDR   CODE            LINE SOURCELINE
                      21505 ; rs232cmd.c 5855                       samples += F*138240000L + L*442368L;
0062EE 8C0710         21507         MOV.W   R0,[R7+16]
0062F1 9819           21508         SEXT.W  R1
0062F3 8931           21509         MOV.W   R3,R1
0062F5 8920           21510         MOV.W   R2,R0
0062F7 DD25           21511         ASL.D   R2,#05H
0062F9 0920           21512         ADD.W   R2,R0
0062FB 1931           21513         ADDC.W  R3,R1
0062FD DD25           21514         ASL.D   R2,#05H
0062FF 2920           21515         SUB.W   R2,R0
006301 3931           21516         SUBB.W  R3,R1
006303 DD22           21517         ASL.D   R2,#02H
006305 2920           21518         SUB.W   R2,R0
006307 3931           21519         SUBB.W  R3,R1
006309 DD22           21520         ASL.D   R2,#02H
00630B 2920           21521         SUB.W   R2,R0
00630D 3931           21522         SUBB.W  R3,R1
00630F DD2D           21523         ASL.D   R2,#0DH
006311 8C070E         21524         MOV.W   R0,[R7+14]
006314 8940           21525         MOV.W   R4,R0
006316 9859           21526         SEXT.W  R5
006318 8915           21527         MOV.W   R1,R5
00631A 8904           21528         MOV.W   R0,R4
00631C DD03           21529         ASL.D   R0,#03H
00631E 2904           21530         SUB.W   R0,R4
006320 3915           21531         SUBB.W  R1,R5
006322 DD02           21532         ASL.D   R0,#02H
006324 2904           21533         SUB.W   R0,R4
006326 3915           21534         SUBB.W  R1,R5
006328 DD0E           21535         ASL.D   R0,#0EH
00632A 0920           21536         ADD.W   R2,R0
00632C 1931           21537         ADDC.W  R3,R1
00632E 8C1716         21538         MOV.W   R1,[R7+22]
006331 8C0714         21539         MOV.W   R0,[R7+20]
006334 0902           21540         ADD.W   R0,R2
006336 1913           21541         ADDC.W  R1,R3
                      21542 ; rs232cmd.c 5856               }
                      21544         BR      _1520
006338 D500E4         +21544         JMP.L   _1520
006338 D500E400       +21544         JMP.L   _1520
00633C                21545 _1499:
                      21547 ; rs232cmd.c 5857               else                                                             
                                                                                            // ..else system is NTSC
                      21548 ; rs232cmd.c 5858               {
                      21549 ; rs232cmd.c 5859       
                      21550 ; rs232cmd.c 5860                       if ( labs( samples) > 439295L)          // Test for illeg
                            al time var
00633C 8C1716         21552         MOV.W   R1,[R7+22]
00633F 8C0714         21553         MOV.W   R0,[R7+20]
                      21554         CALL    _labs
006342 C4rrrrrr       +21554 ;       FCALL   _labs
006346 99140006       21555         CMP.W   R1,#06H
00634A FB0A           21556         BLT     _1500
00634C FC03           21557         BGT     _1546
00634E 9904B3FF       21558         CMP.W   R0,#0B3FFH
006352 F906           21559         BL      _1500
006352 F906           21559         BL      _1500
006354                21560 _1546:
                      21561 ; rs232cmd.c 5861                               return( -1);
006354 9918FFFF       21563         MOV.W   R1,#0FFFFH
006358 9908FFFF       21564         MOV.W   R0,#0FFFFH
                      21565         BR      _1534
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 353

ADDR   CODE            LINE SOURCELINE
00635C D500D2         +21565         JMP.L   _1534
00635C D500D200       +21565         JMP.L   _1534
006360                21566 _1500:
                      21569 ; rs232cmd.c 5862       
                      21570 ; rs232cmd.c 5863                       switch ( F)                                              
                                                                            // Test for illegal field & line
006360 9C74100000     21572         CMP.W   [R7+16],#00H
006365 F30C           21573         BEQ     _1501
006367 9C7410FFFF     21574         CMP.W   [R7+16],#0FFFFH
00636C F31A           21575         BEQ     _1504
00636E 9C74100001     21576         CMP.W   [R7+16],#01H
006373 F323           21577         BEQ     _1505
006375 9C74100002     21578         CMP.W   [R7+16],#02H
00637A F32B           21579         BEQ     _1506
00637C FE44           21580         BR      _1508
                      21581 ; rs232cmd.c 5864                       {
                      21582 ; rs232cmd.c 5865                               case 0:
00637E                21584 _1501:
                      21585 ; rs232cmd.c 5866                                       if (( minus && ( L < -261)) || ( !minus &
                            & ( L > 262)))
00637E 84070C         21587         MOV.B   R0L,[R7+12]
006381 F304           21588         BEQ     _1502
006383 9C740EFEFB     21589         CMP.W   [R7+14],#0FEFBH
006388 FB06           21590         BLT     _1503
006388 FB06           21590         BLT     _1503
00638A                21591 _1502:
00638A 84070C         21592         MOV.B   R0L,[R7+12]
00638D F241           21593         BNE     _1513
00638F 9C740E0106     21594         CMP.W   [R7+14],#0106H
006394 FD3D           21595         BLE     _1513
006394 FD3D           21595         BLE     _1513
006396                21596 _1503:
                      21597 ; rs232cmd.c 5867                                               return( -1);
006396 9918FFFF       21599         MOV.W   R1,#0FFFFH
00639A 9908FFFF       21600         MOV.W   R0,#0FFFFH
                      21601         BR      _1534
00639E D500B1         +21601         JMP.L   _1534
                      21602 ; rs232cmd.c 5868                                       break;
                      21603 ; rs232cmd.c 5869       
                      21604 ; rs232cmd.c 5870                               case -1:
0063A2                21606 _1504:
                      21609 ; rs232cmd.c 5871                                       if ( abs( L) > 262)
0063A2 8C070E         21611         MOV.W   R0,[R7+14]
                      21612         CALL    _abs
0063A5 C4rrrrrr       +21612 ;       FCALL   _abs
0063A9 99040106       21613         CMP.W   R0,#0106H
0063AD FD31           21614         BLE     _1513
                      21615 ; rs232cmd.c 5872                                               return( -1);
0063AF 9918FFFF       21617         MOV.W   R1,#0FFFFH
0063B3 9908FFFF       21618         MOV.W   R0,#0FFFFH
                      21619         BR      _1534
0063B7 D500A4         +21619         JMP.L   _1534
                      21620 ; rs232cmd.c 5873                                       break;
                      21621 ; rs232cmd.c 5874       
                      21622 ; rs232cmd.c 5875                               case 1:
0063BA                21624 _1505:
                      21627 ; rs232cmd.c 5876                                       if ( abs( L) > 261)
0063BA 8C070E         21629         MOV.W   R0,[R7+14]
                      21630         CALL    _abs
0063BD C4rrrrrr       +21630 ;       FCALL   _abs
0063C1 99040105       21631         CMP.W   R0,#0105H
0063C5 FD25           21632         BLE     _1513
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 354

ADDR   CODE            LINE SOURCELINE
                      21633 ; rs232cmd.c 5877                                               return( -1);
0063C7 9918FFFF       21635         MOV.W   R1,#0FFFFH
0063CB 9908FFFF       21636         MOV.W   R0,#0FFFFH
                      21637         BR      _1534
0063CF D50098         +21637         JMP.L   _1534
                      21638 ; rs232cmd.c 5878                                       break;
                      21639 ; rs232cmd.c 5879       
                      21640 ; rs232cmd.c 5880                               case 2:
0063D2                21642 _1506:
                      21645 ; rs232cmd.c 5881                                       if (( L > 0) || ( T > 0.0))
0063D2 9C740E0000     21647         CMP.W   [R7+14],#00H
0063D7 FC12           21648         BGT     _1507
0063D9 8C1724         21649         MOV.W   R1,[R7+36]
0063DC 8C0722         21650         MOV.W   R0,[R7+34]
0063DF C4rrrrrr       21651         FCALL   __SPF2DPF
0063E3 BC700A         21652         MOV.W   [R7+10],#00H
0063E6 BC7008         21653         MOV.W   [R7+8],#00H
0063E9 BC7006         21654         MOV.W   [R7+6],#00H
0063EC BC7004         21655         MOV.W   [R7+4],#00H
0063EF 406704         21656         LEA     R6,R7+4
0063F2 C4rrrrrr       21657         FCALL   __CMP_DPF
0063F6 910401         21658         CMP.B   R0L,#01H
0063F9 F20B           21659         BNE     _1513
0063F9 F20B00         21659         BNE     _1513
0063FC                21660 _1507:
                      21661 ; rs232cmd.c 5882                                               return( -1);
0063FC 9918FFFF       21663         MOV.W   R1,#0FFFFH
006400 9908FFFF       21664         MOV.W   R0,#0FFFFH
006404 FE7E           21665         BR      _1534
                      21666 ; rs232cmd.c 5883                                       break;
                      21667 ; rs232cmd.c 5884       
                      21668 ; rs232cmd.c 5885                               default:
006406                21670 _1508:
                      21671 ; rs232cmd.c 5886                                       return( -1);
006406 9918FFFF       21673         MOV.W   R1,#0FFFFH
00640A 9908FFFF       21674         MOV.W   R0,#0FFFFH
00640E FE79           21675         BR      _1534
                      21676 ; rs232cmd.c 5887                       }
006410                21678 _1513:
                      21681 ; rs232cmd.c 5888       
                      21682 ; rs232cmd.c 5889                       if ( !minus)                                             
                                                            // if posistive delay..
006410 84070C         21684         MOV.B   R0L,[R7+12]
006413 F212           21687         BNE     _1514
                      21688 ; rs232cmd.c 5890                       {                                               
                      21689 ; rs232cmd.c 5891       
                      21690 ; rs232cmd.c 5892                               if ( F % 2)
006415 8C0710         21692         MOV.W   R0,[R7+16]
006418 8910           21693         MOV.W   R1,R0
00641A 9819           21694         SEXT.W  R1
00641C E9090002       21695         DIV.D   R0,#02H
006420 6911           21696         OR.W    R1,R1
006422 F341           21697         BEQ     _1519
                      21698 ; rs232cmd.c 5893                               {
                      21699 ; rs232cmd.c 5894                                       L += 263;
006424 8C070E         21701         MOV.W   R0,[R7+14]
006427 99000107       21702         ADD.W   R0,#0107H
00642B 8C0F0E         21704         MOV.W   [R7+14],R0
                      21705 ; rs232cmd.c 5895                                       F--;
00642E 8C0710         21707         MOV.W   R0,[R7+16]
006431 A90F           21708         ADDS.W  R0,#0FH
006433 8C0F10         21709         MOV.W   [R7+16],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 355

ADDR   CODE            LINE SOURCELINE
                      21710 ; rs232cmd.c 5896                               }
                      21711 ; rs232cmd.c 5897                       }
006436 FE37           21713         BR      _1519
006436 FE37           21713         BR      _1519
006438                21714 _1514:
                      21715 ; rs232cmd.c 5898                       else                                                     
                                                                                            // ..else delay is negative
                      21716 ; rs232cmd.c 5899                       {                                                        
                                                                                                            
                      21717 ; rs232cmd.c 5900                               F += 3;
006438 8C0710         21719         MOV.W   R0,[R7+16]
00643B A903           21720         ADDS.W  R0,#03H
                      21721 ; rs232cmd.c 5901       
                      21722 ; rs232cmd.c 5902                               samples += 439295;
00643D 8C3716         21724         MOV.W   R3,[R7+22]
006440 8C2714         21725         MOV.W   R2,[R7+20]
006443 9920B3FF       21726         ADD.W   R2,#0B3FFH
006447 99310006       21727         ADDC.W  R3,#06H
00644B 8C3F16         21728         MOV.W   [R7+22],R3
00644E 8C2F14         21729         MOV.W   [R7+20],R2
                      21730 ; rs232cmd.c 5903       
                      21731 ; rs232cmd.c 5904                               if ( F % 2)
006451 8C0F10         21733         MOV.W   [R7+16],R0
006454 8910           21734         MOV.W   R1,R0
006456 9819           21735         SEXT.W  R1
006458 E9090002       21736         DIV.D   R0,#02H
00645C 6911           21737         OR.W    R1,R1
00645E F30A           21738         BEQ     _1515
                      21739 ; rs232cmd.c 5905                               {
                      21740 ; rs232cmd.c 5906                                       L += 524;
006460 8C070E         21742         MOV.W   R0,[R7+14]
006463 9900020C       21743         ADD.W   R0,#020CH
006467 8C0F0E         21744         MOV.W   [R7+14],R0
                      21745 ; rs232cmd.c 5907                                       F--;
00646A 8C0710         21747         MOV.W   R0,[R7+16]
00646D A90F           21748         ADDS.W  R0,#0FH
00646F 8C0F10         21749         MOV.W   [R7+16],R0
                      21750 ; rs232cmd.c 5908                               }
006472 FE05           21752         BR      _1516
006472 FE05           21752         BR      _1516
006474                21753 _1515:
                      21754 ; rs232cmd.c 5909                               else
                      21755 ; rs232cmd.c 5910                                       L += 262;
006474 8C070E         21757         MOV.W   R0,[R7+14]
006477 99000106       21758         ADD.W   R0,#0106H
00647B 8C0F0E         21759         MOV.W   [R7+14],R0
00647B 8C0F0E         21759         MOV.W   [R7+14],R0
00647E                21760 _1516:
                      21761 ; rs232cmd.c 5911       
                      21762 ; rs232cmd.c 5912                               if ( T == 0)
00647E B930           21764         MOV.W   R3,#00H
006480 B920           21765         MOV.W   R2,#00H
006482 8C1724         21766         MOV.W   R1,[R7+36]
006485 8C0722         21767         MOV.W   R0,[R7+34]
006488 C4rrrrrr       21768         FCALL   __CMP_SPF
00648C 910400         21769         CMP.B   R0L,#00H
00648F F20B           21770         BNE     _1519
                      21771 ; rs232cmd.c 5913                                       samples++;
006491 8C1716         21773         MOV.W   R1,[R7+22]
006494 8C0714         21774         MOV.W   R0,[R7+20]
006497 99000001       21775         ADD.W   R0,#01H
00649B 99110000       21776         ADDC.W  R1,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 356

ADDR   CODE            LINE SOURCELINE
00649F 8C1F16         21777         MOV.W   [R7+22],R1
0064A2 8C0F14         21778         MOV.W   [R7+20],R0
                      21779 ; rs232cmd.c 5914                       }
0064A6                21781 _1519:
                      21782 ; rs232cmd.c 5915       
                      21783 ; rs232cmd.c 5916                       samples += F*115315200L + L*439296L;
0064A6 8C0710         21785         MOV.W   R0,[R7+16]
0064A9 9819           21786         SEXT.W  R1
0064AB 8931           21787         MOV.W   R3,R1
0064AD 8920           21788         MOV.W   R2,R0
0064AF DD23           21789         ASL.D   R2,#03H
0064B1 2920           21790         SUB.W   R2,R0
0064B3 3931           21791         SUBB.W  R3,R1
0064B5 DD23           21792         ASL.D   R2,#03H
0064B7 2920           21793         SUB.W   R2,R0
0064B9 3931           21794         SUBB.W  R3,R1
0064BB DD26           21795         ASL.D   R2,#06H
0064BD 2920           21796         SUB.W   R2,R0
0064BF 3931           21797         SUBB.W  R3,R1
0064C1 DD23           21798         ASL.D   R2,#03H
0064C3 0920           21799         ADD.W   R2,R0
0064C5 1931           21800         ADDC.W  R3,R1
0064C7 DD23           21801         ASL.D   R2,#03H
0064C9 0920           21802         ADD.W   R2,R0
0064CB 1931           21803         ADDC.W  R3,R1
0064CD DD29           21804         ASL.D   R2,#09H
0064CF 8C070E         21805         MOV.W   R0,[R7+14]
0064D2 8940           21806         MOV.W   R4,R0
0064D4 9859           21807         SEXT.W  R5
0064D6 8915           21808         MOV.W   R1,R5
0064D8 8904           21809         MOV.W   R0,R4
0064DA DD03           21810         ASL.D   R0,#03H
0064DC 2904           21811         SUB.W   R0,R4
0064DE 3915           21812         SUBB.W  R1,R5
0064E0 DD02           21813         ASL.D   R0,#02H
0064E2 2904           21814         SUB.W   R0,R4
0064E4 3915           21815         SUBB.W  R1,R5
0064E6 DD02           21816         ASL.D   R0,#02H
0064E8 2904           21817         SUB.W   R0,R4
0064EA 3915           21818         SUBB.W  R1,R5
0064EC DD02           21819         ASL.D   R0,#02H
0064EE 0904           21820         ADD.W   R0,R4
0064F0 1915           21821         ADDC.W  R1,R5
0064F2 DD0A           21822         ASL.D   R0,#0AH
0064F4 0920           21823         ADD.W   R2,R0
0064F6 1931           21824         ADDC.W  R3,R1
0064F8 8C1716         21825         MOV.W   R1,[R7+22]
0064FB 8C0714         21826         MOV.W   R0,[R7+20]
0064FE 0902           21827         ADD.W   R0,R2
006500 1913           21828         ADDC.W  R1,R3
                      21829 ; rs232cmd.c 5917               }
006502                21831 _1520:
                      21832 ; rs232cmd.c 5918       
                      21833 ; rs232cmd.c 5919               return( samples);
                      21834 ; rs232cmd.c 5920       }
006502                21836 _1534:
006502 99700018       21837         ADD.W   R7,#018H
006506 2F70           21839         POP.W   R4, R5, R6
006508 D680           21841         RET
                      21843 ; rs232cmd.c 5921       
                      21844 ; rs232cmd.c 5922       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 357

ADDR   CODE            LINE SOURCELINE
                      21845 ; rs232cmd.c 5923       /* PrintSamplesToFLT                                                     
                                                                                                                             
                                     RS232CMD.C */
                      21846 ; rs232cmd.c 5924       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21847 ; rs232cmd.c 5925       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                    */
                      21848 ; rs232cmd.c 5926       /* Revised:             000530                                           
                                                                                                                             
                                                                                    */
                      21849 ; rs232cmd.c 5927       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                      21850 ; rs232cmd.c 5928       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                      21851 ; rs232cmd.c 5929       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                    */
                      21852 ; rs232cmd.c 5930       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                      21853 ; rs232cmd.c 5931       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                      21854 ; rs232cmd.c 5932       /************************************************************************
                            **/
                      21855 ; rs232cmd.c 5933       void PrintSamplesToFLT( UC system, long samples) {
                      21856         ALIGN   1
                      21858         PUBLIC  _PrintSamplesToFLT
00650A                21859 _PrintSamplesToFLT:
00650A 0F70           21863         PUSH.W  R4, R5, R6
00650C A97A           21865         ADDS.W  R7,#0AH
                      21878 ; rs232cmd.c 5934       
                      21879 ; rs232cmd.c 5935               char sign;
                      21880 ; rs232cmd.c 5936               int frame, field, line;
                      21881 ; rs232cmd.c 5937       
                      21882 ; rs232cmd.c 5938               sign = '+';
00650E 9478022B       21884         MOV.B   [R7+2],#02BH
                      21886 ; rs232cmd.c 5939       
                      21887 ; rs232cmd.c 5940               if ( system < NTSC)                                              
                                                                            // If system selected is PAL..
006512 910402         21889         CMP.B   R0L,#02H
                      21890         BCC     _1557
006515 F102           +21890 ;       BCS     _LG_1560
006517 D50087         +21890 ;       JMP.L   _1557
00651A D50087         +21890 ;       JMP.L   _1557
00651A                +21890 _LG_1560:
                      21891 ; rs232cmd.c 5941               {
                      21892 ; rs232cmd.c 5942                       // 552960000 = 2*625*1728*256
                      21893 ; rs232cmd.c 5943                       // 276480000 = 625*1728*256
                      21894 ; rs232cmd.c 5944                       // 442368    = 1728*256
                      21895 ; rs232cmd.c 5945       
                      21896 ; rs232cmd.c 5946                       if ( samples >= 552960000L)
00651A 8953           21898         MOV.W   R5,R3
00651C 8942           21899         MOV.W   R4,R2
00651E 993420F5       21900         CMP.W   R3,#020F5H
006522 FB50           21901         BLT     _1556
006524 FC03           21902         BGT     _1569
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 358

ADDR   CODE            LINE SOURCELINE
006526 99248000       21903         CMP.W   R2,#08000H
00652A F14C           21904         BCS     _1556
00652A F14C           21904         BCS     _1556
00652C                21905 _1569:
                      21906 ; rs232cmd.c 5947                       {
                      21907 ; rs232cmd.c 5948                               samples--;
00652C 99420001       21909         SUB.W   R4,#01H
006530 99530000       21910         SUBB.W  R5,#00H
006534 8915           21911         MOV.W   R1,R5
006536 8904           21912         MOV.W   R0,R4
                      21915 ; rs232cmd.c 5949       
                      21916 ; rs232cmd.c 5950                               frame = samples / 276480000L;
006538 9938107A       21918         MOV.W   R3,#0107AH
00653C 9928C000       21919         MOV.W   R2,#0C000H
006540 8951           21920         MOV.W   R5,R1
006542 8940           21921         MOV.W   R4,R0
006544 C4rrrrrr       21922         FCALL   __SDIVL
006548 8A0F           21925         MOV.W   [R7],R0
                      21927 ; rs232cmd.c 5951                               line = ( samples % 276480000L) /  442368L;
00654A 9938107A       21929         MOV.W   R3,#0107AH
00654E 9928C000       21930         MOV.W   R2,#0C000H
006552 8915           21931         MOV.W   R1,R5
006554 8904           21932         MOV.W   R0,R4
006556 C4rrrrrr       21933         FCALL   __SMODL
00655A B936           21937         MOV.W   R3,#06H
00655C 9928C000       21938         MOV.W   R2,#0C000H
006560 8951           21939         MOV.W   R5,R1
006562 8940           21940         MOV.W   R4,R0
006564 C4rrrrrr       21941         FCALL   __SDIVL
006568 8960           21942         MOV.W   R6,R0
00656A 8C6F04         21943         MOV.W   [R7+4],R6
                      21944 ; rs232cmd.c 5952                               samples = ( samples % 276480000L) %  442368L;
00656D 8915           21946         MOV.W   R1,R5
00656F 8904           21947         MOV.W   R0,R4
006571 B936           21948         MOV.W   R3,#06H
006573 9928C000       21949         MOV.W   R2,#0C000H
006577 C4rrrrrr       21950         FCALL   __SMODL
                      21952 ; rs232cmd.c 5953                               field = 2*frame;
00657B 8A27           21954         MOV.W   R2,[R7]
00657D D921           21955         ASL.W   R2,#01H
00657F 8932           21959         MOV.W   R3,R2
                      21961 ; rs232cmd.c 5954       
                      21962 ; rs232cmd.c 5955                               if ( line > 312)
006581 99480138       21964         MOV.W   R4,#0138H
006585 99640138       21965         CMP.W   R6,#0138H
006589 FD08           21966         BLE     _1554
                      21967 ; rs232cmd.c 5956                               {
                      21968 ; rs232cmd.c 5957                                       field++;
00658B A921           21970         ADDS.W  R2,#01H
00658D 8932           21971         MOV.W   R3,R2
                      21974 ; rs232cmd.c 5958                                       line = 624-line;
00658F 99280270       21976         MOV.W   R2,#0270H
006593 2926           21977         SUB.W   R2,R6
006595 8C2F04         21978         MOV.W   [R7+4],R2
                      21979 ; rs232cmd.c 5959                               }
006598 FE04           21981         BR      _1555
006598 FE04           21981         BR      _1555
00659A                21982 _1554:
                      21983 ; rs232cmd.c 5960                               else
                      21984 ; rs232cmd.c 5961                                       line = 312-line;
00659A 8C2704         21986         MOV.W   R2,[R7+4]
00659D 2942           21987         SUB.W   R4,R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 359

ADDR   CODE            LINE SOURCELINE
00659F 8C4F04         21988         MOV.W   [R7+4],R4
00659F 8C4F04         21988         MOV.W   [R7+4],R4
0065A2                21989 _1555:
                      21990 ; rs232cmd.c 5962       
                      21991 ; rs232cmd.c 5963                               samples = 442368L - 1 - samples;
0065A2 B956           21993         MOV.W   R5,#06H
0065A4 9948BFFF       21994         MOV.W   R4,#0BFFFH
0065A8 2940           21995         SUB.W   R4,R0
0065AA 3951           21996         SUBB.W  R5,R1
                      21999 ; rs232cmd.c 5964                               field = 7-field;
0065AC B917           22001         MOV.W   R1,#07H
0065AE 2913           22002         SUB.W   R1,R3
0065B0 8901           22003         MOV.W   R0,R1
                      22006 ; rs232cmd.c 5965       
                      22007 ; rs232cmd.c 5966                               if ( field != 4)
0065B2 99140004       22009         CMP.W   R1,#04H
                      22010         BEQ     _1567
0065B6 F202           +22010 ;       BNE     _LG_1570
0065B8 D500B8         +22010 ;       JMP.L   _1567
0065BC D500B800       +22010 ;       JMP.L   _1567
0065BC                +22010 _LG_1570:
                      22011 ; rs232cmd.c 5967                                       sign = '-';
0065BC 9478022D       22013         MOV.B   [R7+2],#02DH
                      22016 ; rs232cmd.c 5968                       }
                      22018         BR      _1567
0065C0 D500B4         +22018         JMP.L   _1567
0065C0 D500B400       +22018         JMP.L   _1567
0065C4                22019 _1556:
                      22020 ; rs232cmd.c 5969                       else
                      22021 ; rs232cmd.c 5970                       {
                      22022 ; rs232cmd.c 5971                               frame = samples / 276480000L;
0065C4 9938107A       22024         MOV.W   R3,#0107AH
0065C8 9928C000       22025         MOV.W   R2,#0C000H
0065CC 8915           22026         MOV.W   R1,R5
0065CE 8904           22027         MOV.W   R0,R4
0065D0 C4rrrrrr       22028         FCALL   __SDIVL
0065D4 8A0F           22030         MOV.W   [R7],R0
                      22032 ; rs232cmd.c 5972                               line = ( samples % 276480000L) / 442368L;
0065D6 9938107A       22034         MOV.W   R3,#0107AH
0065DA 9928C000       22035         MOV.W   R2,#0C000H
0065DE 8915           22036         MOV.W   R1,R5
0065E0 8904           22037         MOV.W   R0,R4
0065E2 C4rrrrrr       22038         FCALL   __SMODL
0065E6 B936           22042         MOV.W   R3,#06H
0065E8 9928C000       22043         MOV.W   R2,#0C000H
0065EC 8951           22044         MOV.W   R5,R1
0065EE 8940           22045         MOV.W   R4,R0
0065F0 C4rrrrrr       22046         FCALL   __SDIVL
0065F4 8960           22047         MOV.W   R6,R0
0065F6 8C6F04         22048         MOV.W   [R7+4],R6
                      22049 ; rs232cmd.c 5973                               samples = ( samples % 276480000L) % 442368L;
0065F9 8915           22051         MOV.W   R1,R5
0065FB 8904           22052         MOV.W   R0,R4
0065FD B936           22053         MOV.W   R3,#06H
0065FF 9928C000       22054         MOV.W   R2,#0C000H
006603 C4rrrrrr       22055         FCALL   __SMODL
006607 8951           22056         MOV.W   R5,R1
006609 8940           22057         MOV.W   R4,R0
                      22059 ; rs232cmd.c 5974                               field = 2*frame;
00660B 8A17           22061         MOV.W   R1,[R7]
00660D D911           22062         ASL.W   R1,#01H
00660F 8901           22066         MOV.W   R0,R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 360

ADDR   CODE            LINE SOURCELINE
                      22068 ; rs232cmd.c 5975       
                      22069 ; rs232cmd.c 5976                               if ( line > 312)
006611 99640138       22071         CMP.W   R6,#0138H
                      22072         BLE     _1567
006615 FC02           +22072 ;       BGT     _LG_1572
006617 D50088         +22072 ;       JMP.L   _1567
00661A D50088         +22072 ;       JMP.L   _1567
00661A                +22072 _LG_1572:
                      22073 ; rs232cmd.c 5977                               {
                      22074 ; rs232cmd.c 5978                                       field++;
00661A A911           22076         ADDS.W  R1,#01H
00661C 8901           22077         MOV.W   R0,R1
                      22080 ; rs232cmd.c 5979                                       line -= 313;
00661E 99620139       22082         SUB.W   R6,#0139H
006622 8C6F04         22083         MOV.W   [R7+4],R6
                      22084 ; rs232cmd.c 5980                               }
                      22085 ; rs232cmd.c 5981                       }
                      22086 ; rs232cmd.c 5982               }
                      22088         BR      _1567
006625 D50081         +22088         JMP.L   _1567
006625 D50081         +22088         JMP.L   _1567
006628                22089 _1557:
                      22092 ; rs232cmd.c 5983               else {                                                           
                                                            // ..system selected is NTSC
                      22093 ; rs232cmd.c 5984                       if ( samples >= 230630400L)
006628 8953           22095         MOV.W   R5,R3
00662A 8942           22096         MOV.W   R4,R2
00662C 99340DBF       22097         CMP.W   R3,#0DBFH
006630 FB4D           22098         BLT     _1560
006632 FC03           22099         BGT     _1573
006634 99242400       22100         CMP.W   R2,#02400H
006638 F149           22101         BCS     _1560
006638 F149           22101         BCS     _1560
00663A                22102 _1573:
                      22105 ; rs232cmd.c 5985                       {
                      22106 ; rs232cmd.c 5986                               // 230630400 = 525*1716*256
                      22107 ; rs232cmd.c 5987                               // 439296    = 1716*256
                      22108 ; rs232cmd.c 5988       
                      22109 ; rs232cmd.c 5989                               samples--;
00663A 99420001       22111         SUB.W   R4,#01H
00663E 99530000       22112         SUBB.W  R5,#00H
006642 8915           22114         MOV.W   R1,R5
006644 8904           22115         MOV.W   R0,R4
                      22118 ; rs232cmd.c 5990       
                      22119 ; rs232cmd.c 5991                               frame = samples / 230630400L;
006646 99380DBF       22121         MOV.W   R3,#0DBFH
00664A 99282400       22122         MOV.W   R2,#02400H
00664E 8951           22123         MOV.W   R5,R1
006650 8940           22124         MOV.W   R4,R0
006652 C4rrrrrr       22125         FCALL   __SDIVL
006656 8A0F           22128         MOV.W   [R7],R0
                      22130 ; rs232cmd.c 5992                               line = ( samples % 230630400L) / 439296L;
006658 99380DBF       22132         MOV.W   R3,#0DBFH
00665C 99282400       22133         MOV.W   R2,#02400H
006660 8915           22134         MOV.W   R1,R5
006662 8904           22135         MOV.W   R0,R4
006664 C4rrrrrr       22136         FCALL   __SMODL
006668 B936           22140         MOV.W   R3,#06H
00666A 9928B400       22141         MOV.W   R2,#0B400H
00666E 8951           22142         MOV.W   R5,R1
006670 8940           22143         MOV.W   R4,R0
006672 C4rrrrrr       22144         FCALL   __SDIVL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 361

ADDR   CODE            LINE SOURCELINE
006676 8960           22145         MOV.W   R6,R0
006678 8C6F04         22146         MOV.W   [R7+4],R6
                      22147 ; rs232cmd.c 5993                               samples = ( samples % 230630400L) % 439296L;
00667B 8915           22149         MOV.W   R1,R5
00667D 8904           22150         MOV.W   R0,R4
00667F B936           22151         MOV.W   R3,#06H
006681 9928B400       22152         MOV.W   R2,#0B400H
006685 C4rrrrrr       22153         FCALL   __SMODL
                      22155 ; rs232cmd.c 5994       
                      22156 ; rs232cmd.c 5995                               field = 2*frame;
006689 8A27           22158         MOV.W   R2,[R7]
00668B D921           22159         ASL.W   R2,#01H
00668D 8932           22163         MOV.W   R3,R2
                      22165 ; rs232cmd.c 5996       
                      22166 ; rs232cmd.c 5997                               if ( line > 262)
00668F 99480106       22168         MOV.W   R4,#0106H
006693 99640106       22169         CMP.W   R6,#0106H
006697 FD08           22170         BLE     _1558
                      22171 ; rs232cmd.c 5998                               {
                      22172 ; rs232cmd.c 5999                                       field++;
006699 A921           22174         ADDS.W  R2,#01H
00669B 8932           22175         MOV.W   R3,R2
                      22178 ; rs232cmd.c 6000                                       line = 524-line;
00669D 9928020C       22180         MOV.W   R2,#020CH
0066A1 2926           22181         SUB.W   R2,R6
0066A3 8C2F04         22182         MOV.W   [R7+4],R2
                      22183 ; rs232cmd.c 6001                               }
0066A6 FE04           22185         BR      _1559
0066A6 FE04           22185         BR      _1559
0066A8                22186 _1558:
                      22187 ; rs232cmd.c 6002                               else
                      22188 ; rs232cmd.c 6003                                       line = 262-line;
0066A8 8C2704         22190         MOV.W   R2,[R7+4]
0066AB 2942           22191         SUB.W   R4,R2
0066AD 8C4F04         22192         MOV.W   [R7+4],R4
0066AD 8C4F04         22192         MOV.W   [R7+4],R4
0066B0                22193 _1559:
                      22194 ; rs232cmd.c 6004       
                      22195 ; rs232cmd.c 6005                               samples = 439296L - 1 - samples;
0066B0 B956           22197         MOV.W   R5,#06H
0066B2 9948B3FF       22198         MOV.W   R4,#0B3FFH
0066B6 2940           22199         SUB.W   R4,R0
0066B8 3951           22200         SUBB.W  R5,R1
                      22203 ; rs232cmd.c 6006                               field = 3 - field;
0066BA B913           22205         MOV.W   R1,#03H
0066BC 2913           22206         SUB.W   R1,R3
0066BE 8901           22207         MOV.W   R0,R1
                      22210 ; rs232cmd.c 6007       
                      22211 ; rs232cmd.c 6008                               if ( field != 2)
0066C0 99140002       22213         CMP.W   R1,#02H
0066C4 F332           22214         BEQ     _1567
                      22215 ; rs232cmd.c 6009                                       sign = '-';
0066C6 9478022D       22217         MOV.B   [R7+2],#02DH
                      22220 ; rs232cmd.c 6010                       }
0066CA FE2F           22222         BR      _1567
0066CA FE2F           22222         BR      _1567
0066CC                22223 _1560:
                      22224 ; rs232cmd.c 6011                       else
                      22225 ; rs232cmd.c 6012                       {
                      22226 ; rs232cmd.c 6013                               frame = samples / 230630400L;
0066CC 99380DBF       22228         MOV.W   R3,#0DBFH
0066D0 99282400       22229         MOV.W   R2,#02400H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 362

ADDR   CODE            LINE SOURCELINE
0066D4 8915           22230         MOV.W   R1,R5
0066D6 8904           22231         MOV.W   R0,R4
0066D8 C4rrrrrr       22232         FCALL   __SDIVL
0066DC 8A0F           22234         MOV.W   [R7],R0
                      22236 ; rs232cmd.c 6014                               line = ( samples % 230630400L) / 439296L;
0066DE 99380DBF       22238         MOV.W   R3,#0DBFH
0066E2 99282400       22239         MOV.W   R2,#02400H
0066E6 8915           22240         MOV.W   R1,R5
0066E8 8904           22241         MOV.W   R0,R4
0066EA C4rrrrrr       22242         FCALL   __SMODL
0066EE B936           22246         MOV.W   R3,#06H
0066F0 9928B400       22247         MOV.W   R2,#0B400H
0066F4 8951           22248         MOV.W   R5,R1
0066F6 8940           22249         MOV.W   R4,R0
0066F8 C4rrrrrr       22250         FCALL   __SDIVL
0066FC 8960           22251         MOV.W   R6,R0
0066FE 8C6F04         22252         MOV.W   [R7+4],R6
                      22253 ; rs232cmd.c 6015                               samples = ( samples % 230630400L) % 439296L;
006701 B936           22255         MOV.W   R3,#06H
006703 9928B400       22256         MOV.W   R2,#0B400H
006707 8915           22257         MOV.W   R1,R5
006709 8904           22258         MOV.W   R0,R4
00670B C4rrrrrr       22259         FCALL   __SMODL
00670F 8951           22260         MOV.W   R5,R1
006711 8940           22261         MOV.W   R4,R0
                      22263 ; rs232cmd.c 6016                               field = 2*frame;
006713 8A17           22265         MOV.W   R1,[R7]
006715 D911           22266         ASL.W   R1,#01H
006717 8901           22270         MOV.W   R0,R1
                      22272 ; rs232cmd.c 6017       
                      22273 ; rs232cmd.c 6018                               if ( line > 262)
006719 99640106       22275         CMP.W   R6,#0106H
00671D FD06           22276         BLE     _1567
                      22277 ; rs232cmd.c 6019                               {
                      22278 ; rs232cmd.c 6020                                       field++;
00671F A911           22280         ADDS.W  R1,#01H
006721 8901           22281         MOV.W   R0,R1
                      22284 ; rs232cmd.c 6021                                       line -= 263;
006723 99620107       22286         SUB.W   R6,#0107H
006727 8C6F04         22287         MOV.W   [R7+4],R6
                      22288 ; rs232cmd.c 6022                               }
                      22289 ; rs232cmd.c 6023                       }
                      22290 ; rs232cmd.c 6024               }
00672A                22292 _1567:
                      22293 ; rs232cmd.c 6025       
                      22294 ; rs232cmd.c 6026               rs232printf( 12, "%c%d,", sign, abs( field));
                      22296         CALL    _abs
00672A C4rrrrrr       +22296 ;       FCALL   _abs
00672E 842702         22298         MOV.B   R1L,[R7+2]
006731 9039           22299         SEXT.B  R1H
006733 0F01           22303         PUSH.W  R0
006735 8961           22305         MOV.W   R6,R1
006737 0F02           22306         PUSH.W  R1
006739 9918rrrr       22308         MOV.W   R1,#SEG( _1552 )
00673D 9908rrrr       22309         MOV.W   R0,#SOF( _1552 )
006741 0F03           22310         PUSH.W  R0, R1
006743 9908000C       22312         MOV.W   R0,#0CH
                      22313         CALL    _rs232printf
006747 C4rrrrrr       +22313 ;       FCALL   _rs232printf
00674B 99700008       22314         ADD.W   R7,#08H
                      22316 ; rs232cmd.c 6027               rs232printf( 12, "%c%d,", sign, abs( line));
00674F 8C0704         22318         MOV.W   R0,[R7+4]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 363

ADDR   CODE            LINE SOURCELINE
                      22319         CALL    _abs
006752 C4rrrrrr       +22319 ;       FCALL   _abs
006756 0F01           22320         PUSH.W  R0
006758 8C6F02         22322         MOV.W   [R7+2],R6
00675B 0F40           22323         PUSH.W  R6
00675D 9918rrrr       22325         MOV.W   R1,#SEG( _1552 )
006761 9908rrrr       22326         MOV.W   R0,#SOF( _1552 )
006765 0F03           22327         PUSH.W  R0, R1
006767 9908000C       22329         MOV.W   R0,#0CH
                      22330         CALL    _rs232printf
00676B C4rrrrrr       +22330 ;       FCALL   _rs232printf
00676F 99700008       22331         ADD.W   R7,#08H
                      22333 ; rs232cmd.c 6028               rs232printf( 12, "%c%.1f", sign, fabs((float) ( samples*1000L)/69
                            12L));
006773 8915           22335         MOV.W   R1,R5
006775 8904           22336         MOV.W   R0,R4
006777 DD05           22337         ASL.D   R0,#05H
006779 2904           22338         SUB.W   R0,R4
00677B 3915           22339         SUBB.W  R1,R5
00677D DD02           22340         ASL.D   R0,#02H
00677F 0904           22341         ADD.W   R0,R4
006781 1915           22342         ADDC.W  R1,R5
006783 DD03           22343         ASL.D   R0,#03H
006785 C4rrrrrr       22344         FCALL   __L2SPF
006789 993845D8       22345         MOV.W   R3,#045D8H
00678D B920           22346         MOV.W   R2,#00H
00678F C4rrrrrr       22347         FCALL   __DIV_SPF
006793 C4rrrrrr       22348         FCALL   __SPF2DPF
                      22349         CALL    _fabs
006797 C4rrrrrr       +22349 ;       FCALL   _fabs
00679B 0F0F           22350         PUSH.W  R0, R1, R2, R3
00679D 8C0708         22352         MOV.W   R0,[R7+8]
0067A0 0F01           22353         PUSH.W  R0
0067A2 9918rrrr       22355         MOV.W   R1,#SEG( _1553 )
0067A6 9908rrrr       22356         MOV.W   R0,#SOF( _1553 )
0067AA 0F03           22357         PUSH.W  R0, R1
0067AC 9908000C       22359         MOV.W   R0,#0CH
                      22360         CALL    _rs232printf
0067B0 C4rrrrrr       +22360 ;       FCALL   _rs232printf
0067B4 9970000E       22361         ADD.W   R7,#0EH
                      22363 ; rs232cmd.c 6029       }
0067B8 A976           22365         ADDS.W  R7,#06H
0067BA 2F70           22367         POP.W   R4, R5, R6
0067BC D680           22369         RET
                      22372 ; rs232cmd.c 6030       
00000E                22375         RSEG    RS232CMD_INI_FA
00000E 2C25640A00     22376 _366:   DB      02CH,025H,064H,00AH,000H
                      22379         EXTRN   HDATA(_PresetPtr)
                      22381         EXTRN   HDATA(_CmdExecute)
000013 256C752C256C75 22382 _1227:  DB      025H,06CH,075H,02CH,025H,06CH,075H,00AH,000H
       0A00                 
                      22385         EXTRN   HCODE(_ValidateDate)
                      22388         EXTRN   HCODE(_SetGenlockSystem)
                      22391         EXTRN   HCODE(_StorePreset)
                      22394         EXTRN   HCODE(_UpdateSTBRegister)
00001C 25733B00       22395 _987:   DB      025H,073H,03BH,000H
000020 25640A00       22396 _9:     DB      025H,064H,00AH,000H
                      22399         EXTRN   HCODE(_SetBBSystem)
000024 220A00         22400 _110:   DB      022H,00AH,000H
                      22403         EXTRN   HCODE(_SetBBDelay)
                      22406         EXTRN   HCODE(_strlen)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 364

ADDR   CODE            LINE SOURCELINE
000027 25752C25752C25 22407 _1174:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,00AH,000H
       750A00               
                      22410         EXTRN   HCODE(_SetCBDelay)
000031 256325642C00   22411 _1552:  DB      025H,063H,025H,064H,02CH,000H
                      22414         EXTRN   HCODE(_SetBBScHPhase)
                      22417         EXTRN   HCODE(_BBUpdate)
                      22418         EXTRN   HCODE(__UMODL)
                      22421         EXTRN   HCODE(_ResetErrorEventQueue)
                      22424         EXTRN   HCODE(_GenlockVersion)
                      22427         EXTRN   HCODE(_Cstrcmp)
                      22430         EXTRN   HCODE(_SetAudioTiming)
000037 25752C25752C25 22431 _1175:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,000H
       7500                 
                      22434         EXTRN   HCODE(_strncpy)
                      22436         EXTRN   HDATA(_AudioOutput)
                      22439         EXTRN   HCODE(_SetAudioWordClock)
                      22440         EXTRN   HCODE(__DIV_DPF)
000040 252E31662C00   22441 _785:   DB      025H,02EH,031H,066H,02CH,000H
                      22444         EXTRN   HCODE(_abs)
000046 25750A00       22445 _1013:  DB      025H,075H,00AH,000H
                      22448         EXTRN   HCODE(_ReadErrorEventQueue)
                      22453         EXTRN   HCODE(_TransmitIIC)
                      22456         EXTRN   HCODE(_CBUpdate)
                      22459         EXTRN   HCODE(_SetAudioSystem)
                      22462         EXTRN   HCODE(_sio0SndCommand)
                      22465         EXTRN   HCODE(_strcmp)
                      22468         EXTRN   HCODE(_AudioStatus)
00004A 25752C25750A00 22469 _1301:  DB      025H,075H,02CH,025H,075H,00AH,000H
                      22472         EXTRN   HCODE(_sscanf)
000051 253033642C2530 22473 _1439:  DB      025H,030H,033H,064H,02CH,025H,030H,033H,064H,00AH,000H
       33640A00             
00005C 25752C257500   22474 _1302:  DB      025H,075H,02CH,025H,075H,000H
000062 256400         22475 _10:    DB      025H,064H,000H
000065 256600         22476 _902:   DB      025H,066H,000H
                      22477         EXTRN   HCODE(__MUL_SPF)
                      22480         EXTRN   HCODE(_SetCBSystem)
                      22482         EXTRN   HDATA(_CBSetup)
                      22484         EXTRN   HDATA(_BBSetup)
000068 256C00         22485 _221:   DB      025H,06CH,000H
                      22487         EXTRN   HDATA(_OperEnableReg)
00006B 475825643B00   22488 _316:   DB      047H,058H,025H,064H,03BH,000H
                      22489         EXTRN   HCODE(__SUBR_DPF)
000071 257300         22490 _986:   DB      025H,073H,000H
                      22493         EXTRN   HCODE(_GenlockInit)
                      22496         EXTRN   HDATA(_Cmd)
                      22499         EXTRN   HCODE(_GenlockUpdate)
000074 4F4E00         22500 _960:   DB      04FH,04EH,000H
000077 257500         22501 _1190:  DB      025H,075H,000H
                      22504         EXTRN   HCODE(_SetAudioSignal)
                      22505         EXTRN   HCODE(__SPF2DPF)
                      22508         EXTRN   HCODE(_CBInit)
                      22511         EXTRN   HCODE(_strcpy)
00007A 252E31660A00   22512 _901:   DB      025H,02EH,031H,066H,00AH,000H
                      22515         EXTRN   HCODE(_WriteCBChromaGain)
                      22518         EXTRN   HCODE(_fabs)
                      22520         EXTRN   HDATA(_ParCnt)
                      22523         EXTRN   HCODE(_NV_Recall)
                      22526         EXTRN   HCODE(_labs)
000080 4F464600       22527 _262:   DB      04FH,046H,046H,000H
                      22529         EXTRN   HDATA(_GenlockStatus)
                      22532         EXTRN   HCODE(_ReceiveIIC)
                      22535         EXTRN   HCODE(_SetAudioOutput)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 365

ADDR   CODE            LINE SOURCELINE
                      22537         EXTRN   HDATA(_NumSuffix)
                      22540         EXTRN   HCODE(_rs232puts)
                      22542         EXTRN   HDATA(_CalibrationPtr)
                      22544         EXTRN   HDATA(_CmdRequest)
                      22546         EXTRN   HDATA(_ESRReg)
                      22548         EXTRN   HDATA(_STBReg)
                      22550         EXTRN   HDATA(_AudioSetup)
000084 256C752C256C75 22551 _1038:  DB      025H,06CH,075H,02CH,025H,06CH,075H,000H
       00                   
                      22557         EXTRN   HCODE(_ErrorTxt_Array)
                      22560         EXTRN   HCODE(_SetGenlockDelay)
                      22563         EXTRN   HCODE(_WriteCBGain)
00008C 25642C256400   22564 _1440:  DB      025H,064H,02CH,025H,064H,000H
000092 2563252E316600 22565 _1553:  DB      025H,063H,025H,02EH,031H,066H,000H
                      22567         EXTRN   HDATA(_BBControlPort)
000099 4847256C643B00 22568 _315:   DB      048H,047H,025H,06CH,064H,03BH,000H
                      22571         EXTRN   HCODE(_BBDefaults)
                      22573         EXTRN   HDATA(_SettingsPtr)
0000A0 474D3000       22574 _314:   DB      047H,04DH,030H,000H
                      22575         EXTRN   HCODE(__L2SPF)
                      22577         EXTRN   HDATA(_ESEReg)
                      22580         EXTRN   HCODE(_BBVersion)
0000A4 4F46460A00     22581 _959:   DB      04FH,046H,046H,00AH,000H
                      22584         EXTRN   HCODE(_BBInit)
                      22587         EXTRN   HCODE(_CBDefaults)
0000A9 25642C257300   22588 _985:   DB      025H,064H,02CH,025H,073H,000H
0000AF 475825753B00   22589 _334:   DB      047H,058H,025H,075H,03BH,000H
                      22591         EXTRN   HDATA(_GenlockSetup)
                      22594         EXTRN   HCODE(_SetCBEmbAudioSignal)
                      22597         EXTRN   HCODE(_rs232printf)
                      22600         EXTRN   HCODE(_AudioUpdate)
                      22602         EXTRN   HDATA(_Settings)
                      22605         EXTRN   HCODE(_sprintf)
                      22607         EXTRN   HDATA(_OperEventReg)
                      22608         EXTRN   HCODE(__CMP_SPF)
                      22609         EXTRN   HCODE(__DIV_SPF)
                      22611         EXTRN   HDATA(_SREReg)
                      22614         EXTRN   HCODE(_NV_Store)
0000B5 25642C25642C25 22615 _184:   DB      025H,064H,02CH,025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       642C256400           
                      22618         EXTRN   HCODE(_pld_version)
                      22621         EXTRN   HCODE(_RecallPreset)
                      22624         EXTRN   HCODE(_AudioInit)
                      22626         EXTRN   HDATA(_Calibration)
                      22629         EXTRN   HCODE(_BBSPGCommunication)
0000C1 25642C25642C25 22630 _1122:  DB      025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       6400                 
0000CA 25642C25642C25 22631 _299:   DB      025H,064H,02CH,025H,064H,02CH,025H,066H,000H
       6600                 
                      22632         EXTRN   HCODE(__ADD_DPF)
                      22633         EXTRN   HCODE(__SMODL)
                      22636         EXTRN   HCODE(_tcxo_status)
0000D3 25642C25377300 22637 _157:   DB      025H,064H,02CH,025H,037H,073H,000H
                      22639         EXTRN   HDATA(_QuestEnableReg)
                      22640         EXTRN   IDATA(__lc_bs)
                      22643         EXTRN   HCODE(_ResetInstrument)
                      22645         EXTRN   HDATA(_QuestConditionReg)
                      22648         EXTRN   HCODE(_SetAudioClick)
0000DA 25387300       22649 _1079:  DB      025H,038H,073H,000H
                      22652         EXTRN   HCODE(_SetCBPattern)
                      22653         EXTRN   HCODE(__SDIVL)
0000DE 2533327300     22654 _1054:  DB      025H,033H,032H,073H,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 366

ADDR   CODE            LINE SOURCELINE
                      22657         EXTRN   HCODE(_GenlockDefaults)
0000E3 25642C00       22658 _533:   DB      025H,064H,02CH,000H
                      22661         EXTRN   HCODE(_rs232putchar)
                      22662         EXTRN   HCODE(__DPF2L)
                      22663         EXTRN   HCODE(__CMP_DPF)
                      22665         EXTRN   HDATA(_OperConditionReg)
                      22668         EXTRN   HCODE(_AudioDefaults)
0000E7 25642C25642C25 22669 _183:   DB      025H,064H,02CH,025H,064H,02CH,025H,064H,00AH,000H
       640A00               
0000F1 25642C25313773 22670 _131:   DB      025H,064H,02CH,025H,031H,037H,073H,000H
       00                   
                      22672         EXTRN   HDATA(_SCPIError)
                      22673         EXTRN   HCODE(__UDIVL)
                      22676         EXTRN   HCODE(_ROMChecksum)
                      22679         EXTRN   HCODE(_WriteAnlAudioDACLevel)
0000F9 25642C2200     22680 _109:   DB      025H,064H,02CH,022H,000H
0000FE 4F4E0A00       22681 _958:   DB      04FH,04EH,00AH,000H
                      22684         EXTRN   HCODE(_SetAudioLevel)
000102 2C25642C00     22685 _421:   DB      02CH,025H,064H,02CH,000H
                      22686         EXTRN   HCODE(__DPF2S)
                      22689         EXTRN   HCODE(_sio0SndRequest)
                      22692         EXTRN   HCODE(_UpdateESRRegister)
                      22694         EXTRN   HDATA(_QuestEventReg)
                      22697         EXTRN   HCODE(_SetCBScHPhase)
                      22698         EXTRN   DATA(__lc_ub_xvwbuffer)
                      22699         EXTRN   DATA(__lc_ue_xvwbuffer)
                      22700         CALLS   'CLSCommand', 'ResetErrorEventQueue'
                      22701         CALLS   'ESECommand', 'rs232printf'
                      22702         CALLS   'ESECommand', 'sscanf'
                      22703         CALLS   'ESRCommand', 'UpdateESRRegister'
                      22704         CALLS   'ESRCommand', 'rs232printf'
                      22705         CALLS   'SRECommand', 'rs232printf'
                      22706         CALLS   'SRECommand', 'sscanf'
                      22707         CALLS   'STBCommand', 'UpdateSTBRegister'
                      22708         CALLS   'STBCommand', 'rs232printf'
                      22709         CALLS   'RSTCommand', 'ResetInstrument'
                      22710         CALLS   'IDNCommand', 'rs232puts'
                      22711         CALLS   'IDNCommand', 'rs232putchar'
                      22712         CALLS   'IDNCommand', 'rs232puts'
                      22713         CALLS   'IDNCommand', 'rs232putchar'
                      22714         CALLS   'IDNCommand', 'rs232puts'
                      22715         CALLS   'IDNCommand', 'rs232putchar'
                      22716         CALLS   'IDNCommand', 'rs232puts'
                      22717         CALLS   'IDNCommand', 'rs232putchar'
                      22718         CALLS   'RCLCommand', 'sscanf'
                      22719         CALLS   'RCLCommand', 'RecallPreset'
                      22720         CALLS   'SAVCommand', 'sscanf'
                      22721         CALLS   'SAVCommand', 'StorePreset'
                      22722         CALLS   'SystemError', 'ReadErrorEventQueue'
                      22723         CALLS   'SystemError', 'sprintf'
                      22724         CALLS   'SystemError', 'rs232puts'
                      22725         CALLS   'SystemError', 'rs232putchar'
                      22726         CALLS   'SystemError', 'rs232puts'
                      22727         CALLS   'SystemVersion', 'rs232putchar'
                      22728         CALLS   'SystemPresetName', 'sscanf'
                      22729         CALLS   'SystemPresetName', 'NV_Recall'
                      22730         CALLS   'SystemPresetName', 'rs232puts'
                      22731         CALLS   'SystemPresetName', 'rs232putchar'
                      22732         CALLS   'SystemPresetName', 'sscanf'
                      22733         CALLS   'SystemPresetName', 'strlen'
                      22734         CALLS   'SystemPresetName', 'NV_Recall'
                      22735         CALLS   'SystemPresetName', 'strcpy'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 367

ADDR   CODE            LINE SOURCELINE
                      22736         CALLS   'SystemPresetName', 'NV_Store'
                      22737         CALLS   'SystemPresetAuthor', 'sscanf'
                      22738         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22739         CALLS   'SystemPresetAuthor', 'rs232puts'
                      22740         CALLS   'SystemPresetAuthor', 'rs232putchar'
                      22741         CALLS   'SystemPresetAuthor', 'sscanf'
                      22742         CALLS   'SystemPresetAuthor', 'strlen'
                      22743         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22744         CALLS   'SystemPresetAuthor', 'strcpy'
                      22745         CALLS   'SystemPresetAuthor', 'NV_Store'
                      22746         CALLS   'SystemPresetDate', 'sscanf'
                      22747         CALLS   'SystemPresetDate', 'NV_Recall'
                      22748         CALLS   'SystemPresetDate', 'sprintf'
                      22749         CALLS   'SystemPresetDate', 'rs232puts'
                      22750         CALLS   'SystemPresetDate', 'sscanf'
                      22751         CALLS   'SystemPresetDate', 'ValidateDate'
                      22752         CALLS   'SystemPresetDate', 'NV_Recall'
                      22753         CALLS   'SystemPresetDate', 'NV_Store'
                      22754         CALLS   'StatusOperEvent', 'rs232printf'
                      22755         CALLS   'StatusOperCondition', 'rs232printf'
                      22756         CALLS   'StatusOperEnable', 'rs232printf'
                      22757         CALLS   'StatusOperEnable', 'sscanf'
                      22758         CALLS   'StatusQuestEvent', 'rs232printf'
                      22759         CALLS   'StatusQuestCondition', 'rs232printf'
                      22760         CALLS   'StatusQuestEnable', 'rs232printf'
                      22761         CALLS   'StatusQuestEnable', 'sscanf'
                      22762         CALLS   'StatusPreset', 'rs232putchar'
                      22763         CALLS   'StatusPreset', 'rs232puts'
                      22764         CALLS   'StatusPreset', 'rs232putchar'
                      22765         CALLS   'GenlockGen', 'rs232putchar'
                      22766         CALLS   'GenlockGen', 'PrintSamplesToFLT'
                      22767         CALLS   'GenlockGen', 'rs232putchar'
                      22768         CALLS   'GenlockGenSystem', 'rs232putchar'
                      22769         CALLS   'GenlockGenSystem', 'FindParameter'
                      22770         CALLS   'GenlockGenSystem', 'SetGenlockSystem'
                      22771         CALLS   'GenlockGenDelay', 'PrintSamplesToFLT'
                      22772         CALLS   'GenlockGenDelay', 'rs232putchar'
                      22773         CALLS   'GenlockGenDelay', 'sscanf'
                      22774         CALLS   'GenlockGenDelay', 'FLTToSamples'
                      22775         CALLS   'GenlockGenDelay', 'SetGenlockDelay'
                      22776         CALLS   'GenlockGenCalibrateEnable', 'rs232putchar'
                      22777         CALLS   'GenlockGenCalibrateEnable', 'FindParameter'
                      22778         CALLS   'GenlockGenCalibrateEnable', 'SetGenlockSystem'
                      22779         CALLS   'GenlockGenCalibrateEnable', 'SetBBSystem'
                      22780         CALLS   'GenlockGenCalibrateEnable', 'sio0SndCommand'
                      22781         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22782         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22783         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22784         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22785         CALLS   'GenlockGenCalibrateStore', 'NV_Store'
                      22786         CALLS   'BBGen', 'rs232putchar'
                      22787         CALLS   'BBGen', 'PrintSamplesToFLT'
                      22788         CALLS   'BBGen', 'rs232printf'
                      22789         CALLS   'BBGenSystem', 'rs232putchar'
                      22790         CALLS   'BBGenSystem', 'FindParameter'
                      22791         CALLS   'BBGenSystem', 'SetBBSystem'
                      22792         CALLS   'BBGenDelay', 'PrintSamplesToFLT'
                      22793         CALLS   'BBGenDelay', 'rs232putchar'
                      22794         CALLS   'BBGenDelay', 'sscanf'
                      22795         CALLS   'BBGenDelay', 'FLTToSamples'
                      22796         CALLS   'BBGenDelay', 'SetBBDelay'
                      22797         CALLS   'BBGenScHPhase', 'rs232printf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 368

ADDR   CODE            LINE SOURCELINE
                      22798         CALLS   'BBGenScHPhase', 'sscanf'
                      22799         CALLS   'BBGenScHPhase', 'SetBBScHPhase'
                      22800         CALLS   'TSGen', 'rs232putchar'
                      22801         CALLS   'TSGen', 'PrintSamplesToFLT'
                      22802         CALLS   'TSGen', 'rs232printf'
                      22803         CALLS   'TSGen', 'rs232putchar'
                      22804         CALLS   'TSGenPattern', 'rs232putchar'
                      22805         CALLS   'TSGenPattern', 'FindParameter'
                      22806         CALLS   'TSGenPattern', 'SetCBPattern'
                      22807         CALLS   'TSGenSystem', 'rs232putchar'
                      22808         CALLS   'TSGenSystem', 'FindParameter'
                      22809         CALLS   'TSGenSystem', 'SetCBSystem'
                      22810         CALLS   'TSGenDelay', 'PrintSamplesToFLT'
                      22811         CALLS   'TSGenDelay', 'rs232putchar'
                      22812         CALLS   'TSGenDelay', 'sscanf'
                      22813         CALLS   'TSGenDelay', 'FLTToSamples'
                      22814         CALLS   'TSGenDelay', 'SetCBDelay'
                      22815         CALLS   'TSGenScHPhase', 'rs232printf'
                      22816         CALLS   'TSGenScHPhase', 'sscanf'
                      22817         CALLS   'TSGenScHPhase', 'SetCBScHPhase'
                      22818         CALLS   'TSGenEmbAudioSignal', 'rs232putchar'
                      22819         CALLS   'TSGenEmbAudioSignal', 'FindParameter'
                      22820         CALLS   'TSGenEmbAudioSignal', 'SetCBEmbAudioSignal'
                      22821         CALLS   'AudioGenOutput', 'rs232putchar'
                      22822         CALLS   'AudioGenOutput', 'FindParameter'
                      22823         CALLS   'AudioGenOutput', 'SetAudioOutput'
                      22824         CALLS   'AudioGenAnalog', 'rs232putchar'
                      22825         CALLS   'AudioGenAnalog', 'rs232printf'
                      22826         CALLS   'AudioGenAnalogSignal', 'rs232putchar'
                      22827         CALLS   'AudioGenAnalogSignal', 'FindParameter'
                      22828         CALLS   'AudioGenAnalogSignal', 'SetAudioSignal'
                      22829         CALLS   'AudioGenAnalogLevel', 'rs232putchar'
                      22830         CALLS   'AudioGenAnalogLevel', 'rs232printf'
                      22831         CALLS   'AudioGenAnalogLevel', 'FindParameter'
                      22832         CALLS   'AudioGenAnalogLevel', 'sscanf'
                      22833         CALLS   'AudioGenAnalogLevel', 'SetAudioLevel'
                      22834         CALLS   'AudioGenAnalogClick', 'rs232printf'
                      22835         CALLS   'AudioGenAnalogClick', 'sscanf'
                      22836         CALLS   'AudioGenAnalogClick', 'SetAudioClick'
                      22837         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22838         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22839         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22840         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22841         CALLS   'AudioGenAESEBUSystem', 'rs232putchar'
                      22842         CALLS   'AudioGenAESEBUSystem', 'FindParameter'
                      22843         CALLS   'AudioGenAESEBUSystem', 'SetAudioSystem'
                      22844         CALLS   'AudioGenAESEBUSignal', 'rs232putchar'
                      22845         CALLS   'AudioGenAESEBUSignal', 'FindParameter'
                      22846         CALLS   'AudioGenAESEBUSignal', 'SetAudioSignal'
                      22847         CALLS   'AudioGenAESEBULevel', 'rs232putchar'
                      22848         CALLS   'AudioGenAESEBULevel', 'rs232printf'
                      22849         CALLS   'AudioGenAESEBULevel', 'FindParameter'
                      22850         CALLS   'AudioGenAESEBULevel', 'sscanf'
                      22851         CALLS   'AudioGenAESEBULevel', 'SetAudioLevel'
                      22852         CALLS   'AudioGenAESEBUTiming', 'rs232printf'
                      22853         CALLS   'AudioGenAESEBUTiming', 'sscanf'
                      22854         CALLS   'AudioGenAESEBUTiming', 'SetAudioTiming'
                      22855         CALLS   'AudioGenAESEBUWordClock', 'rs232putchar'
                      22856         CALLS   'AudioGenAESEBUWordClock', 'FindParameter'
                      22857         CALLS   'AudioGenAESEBUWordClock', 'SetAudioWordClock'
                      22858         CALLS   'AudioGenAESEBUClick', 'rs232printf'
                      22859         CALLS   'AudioGenAESEBUClick', 'sscanf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 369

ADDR   CODE            LINE SOURCELINE
                      22860         CALLS   'AudioGenAESEBUClick', 'SetAudioClick'
                      22861         CALLS   'FactPassword', 'rs232puts'
                      22862         CALLS   'FactPassword', 'strcmp'
                      22863         CALLS   'FactPassword', 'Cstrcmp'
                      22864         CALLS   'FactReset', 'GenlockDefaults'
                      22865         CALLS   'FactReset', 'BBDefaults'
                      22866         CALLS   'FactReset', 'CBDefaults'
                      22867         CALLS   'FactReset', 'AudioDefaults'
                      22868         CALLS   'FactReset', 'GenlockInit'
                      22869         CALLS   'FactReset', 'BBInit'
                      22870         CALLS   'FactReset', 'CBInit'
                      22871         CALLS   'FactReset', 'AudioInit'
                      22872         CALLS   'FactReset', 'GenlockUpdate'
                      22873         CALLS   'FactReset', 'CBUpdate'
                      22874         CALLS   'FactReset', 'BBUpdate'
                      22875         CALLS   'FactReset', 'AudioUpdate'
                      22876         CALLS   'FactReset', 'StorePreset'
                      22877         CALLS   'FactReset', 'NV_Store'
                      22878         CALLS   'FactV24Command', 'sscanf'
                      22879         CALLS   'FactV24Command', 'sio0SndRequest'
                      22880         CALLS   'FactV24Command', 'rs232puts'
                      22881         CALLS   'FactV24Command', 'sio0SndCommand'
                      22882         CALLS   'FactV24Transparent', 'FindParameter'
                      22883         CALLS   'FactV24Transparent', 'BBSPGCommunication'
                      22884         CALLS   'FactChecksumCode', 'ROMChecksum'
                      22885         CALLS   'FactChecksumCode', 'sprintf'
                      22886         CALLS   'FactChecksumCode', 'rs232puts'
                      22887         CALLS   'FactChecksumPLD', 'ROMChecksum'
                      22888         CALLS   'FactChecksumPLD', 'sprintf'
                      22889         CALLS   'FactChecksumPLD', 'rs232puts'
                      22890         CALLS   'FactChecksumEmbAudio', 'ROMChecksum'
                      22891         CALLS   'FactChecksumEmbAudio', 'sprintf'
                      22892         CALLS   'FactChecksumEmbAudio', 'rs232puts'
                      22893         CALLS   'FactChecksumPattern', 'ROMChecksum'
                      22894         CALLS   'FactChecksumPattern', 'sprintf'
                      22895         CALLS   'FactChecksumPattern', 'rs232puts'
                      22896         CALLS   'FactChecksumRange', 'sscanf'
                      22897         CALLS   'FactChecksumRange', 'ROMChecksum'
                      22898         CALLS   'FactChecksumRange', 'sprintf'
                      22899         CALLS   'FactChecksumRange', 'rs232puts'
                      22900         CALLS   'FactMainVersion', 'sprintf'
                      22901         CALLS   'FactMainVersion', 'rs232puts'
                      22902         CALLS   'FactMainIDNCompany', 'rs232puts'
                      22903         CALLS   'FactMainIDNCompany', 'rs232putchar'
                      22904         CALLS   'FactMainIDNCompany', 'sscanf'
                      22905         CALLS   'FactMainIDNCompany', 'strncpy'
                      22906         CALLS   'FactMainIDNCompany', 'NV_Store'
                      22907         CALLS   'FactMainIDNType', 'rs232puts'
                      22908         CALLS   'FactMainIDNType', 'rs232putchar'
                      22909         CALLS   'FactMainIDNType', 'sscanf'
                      22910         CALLS   'FactMainIDNType', 'strncpy'
                      22911         CALLS   'FactMainIDNType', 'NV_Store'
                      22912         CALLS   'FactMainIDNKUNumber', 'rs232puts'
                      22913         CALLS   'FactMainIDNKUNumber', 'rs232putchar'
                      22914         CALLS   'FactMainIDNKUNumber', 'sscanf'
                      22915         CALLS   'FactMainIDNKUNumber', 'strncpy'
                      22916         CALLS   'FactMainIDNKUNumber', 'NV_Store'
                      22917         CALLS   'FactMainIDNSWRevision', 'rs232puts'
                      22918         CALLS   'FactMainIDNSWRevision', 'rs232putchar'
                      22919         CALLS   'FactMainIDNSWRevision', 'sscanf'
                      22920         CALLS   'FactMainIDNSWRevision', 'strncpy'
                      22921         CALLS   'FactMainIDNSWRevision', 'NV_Store'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 370

ADDR   CODE            LINE SOURCELINE
                      22922         CALLS   'FactMainSystem', 'rs232putchar'
                      22923         CALLS   'FactMainSystem', 'FindParameter'
                      22924         CALLS   'FactMainSystem', 'NV_Store'
                      22925         CALLS   'FactMainFMSDateProd', 'sprintf'
                      22926         CALLS   'FactMainFMSDateProd', 'rs232puts'
                      22927         CALLS   'FactMainFMSDateProd', 'sscanf'
                      22928         CALLS   'FactMainFMSDateProd', 'ValidateDate'
                      22929         CALLS   'FactMainFMSDateProd', 'NV_Store'
                      22930         CALLS   'FactMainFMSDateUpd', 'sprintf'
                      22931         CALLS   'FactMainFMSDateUpd', 'rs232puts'
                      22932         CALLS   'FactMainFMSDateUpd', 'sscanf'
                      22933         CALLS   'FactMainFMSDateUpd', 'ValidateDate'
                      22934         CALLS   'FactMainFMSDateUpd', 'NV_Store'
                      22935         CALLS   'FactGenlockGenDate', 'sprintf'
                      22936         CALLS   'FactGenlockGenDate', 'rs232puts'
                      22937         CALLS   'FactGenlockGenDate', 'sscanf'
                      22938         CALLS   'FactGenlockGenDate', 'ValidateDate'
                      22939         CALLS   'FactGenlockGenDate', 'NV_Store'
                      22940         CALLS   'FactGenlockGenVersion', 'GenlockVersion'
                      22941         CALLS   'FactGenlockGenVersion', 'rs232puts'
                      22942         CALLS   'FactGenlockGenVersion', 'rs232putchar'
                      22943         CALLS   'FactGenlockGenFRefDate', 'sprintf'
                      22944         CALLS   'FactGenlockGenFRefDate', 'rs232puts'
                      22945         CALLS   'FactGenlockGenFRefDate', 'sscanf'
                      22946         CALLS   'FactGenlockGenFRefDate', 'ValidateDate'
                      22947         CALLS   'FactGenlockGenFRefDate', 'NV_Store'
                      22948         CALLS   'FactGenlockGenFRefDAC', 'sprintf'
                      22949         CALLS   'FactGenlockGenFRefDAC', 'rs232puts'
                      22950         CALLS   'FactGenlockGenFRefDAC', 'sscanf'
                      22951         CALLS   'FactGenlockGenFRefDAC', 'NV_Store'
                      22952         CALLS   'FactGenlockGenURefDate', 'sprintf'
                      22953         CALLS   'FactGenlockGenURefDate', 'rs232puts'
                      22954         CALLS   'FactGenlockGenURefDate', 'sscanf'
                      22955         CALLS   'FactGenlockGenURefDate', 'ValidateDate'
                      22956         CALLS   'FactGenlockGenURefDate', 'NV_Store'
                      22957         CALLS   'FactGenlockGenURefDAC', 'sprintf'
                      22958         CALLS   'FactGenlockGenURefDAC', 'rs232puts'
                      22959         CALLS   'FactGenlockGenURefDAC', 'sscanf'
                      22960         CALLS   'FactGenlockGenURefDAC', 'NV_Store'
                      22961         CALLS   'FactGenlockGenHPHZero', 'sprintf'
                      22962         CALLS   'FactGenlockGenHPHZero', 'rs232puts'
                      22963         CALLS   'FactGenlockGenHPHZero', 'sscanf'
                      22964         CALLS   'FactGenlockGenHPHZero', 'NV_Store'
                      22965         CALLS   'FactGenlockGenPhase', 'sprintf'
                      22966         CALLS   'FactGenlockGenPhase', 'rs232puts'
                      22967         CALLS   'FactGenlockGenPhase', 'sscanf'
                      22968         CALLS   'FactGenlockGenPhase', 'NV_Store'
                      22969         CALLS   'FactBBGenDate', 'sprintf'
                      22970         CALLS   'FactBBGenDate', 'rs232puts'
                      22971         CALLS   'FactBBGenDate', 'sscanf'
                      22972         CALLS   'FactBBGenDate', 'ValidateDate'
                      22973         CALLS   'FactBBGenDate', 'NV_Store'
                      22974         CALLS   'FactBBGenVersion', 'BBVersion'
                      22975         CALLS   'FactBBGenVersion', 'rs232puts'
                      22976         CALLS   'FactBBGenVersion', 'rs232putchar'
                      22977         CALLS   'FactBBGenSignal', 'FindParameter'
                      22978         CALLS   'FactBBGenPhase', 'sprintf'
                      22979         CALLS   'FactBBGenPhase', 'rs232puts'
                      22980         CALLS   'FactBBGenPhase', 'sscanf'
                      22981         CALLS   'FactBBGenPhase', 'NV_Store'
                      22982         CALLS   'FactBBGenScHPhase', 'sprintf'
                      22983         CALLS   'FactBBGenScHPhase', 'rs232puts'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 371

ADDR   CODE            LINE SOURCELINE
                      22984         CALLS   'FactBBGenScHPhase', 'sscanf'
                      22985         CALLS   'FactBBGenScHPhase', 'NV_Store'
                      22986         CALLS   'FactBBGenDAC', 'sprintf'
                      22987         CALLS   'FactBBGenDAC', 'rs232puts'
                      22988         CALLS   'FactBBGenDAC', 'sscanf'
                      22989         CALLS   'FactBBGenDAC', 'NV_Store'
                      22990         CALLS   'FactTSGenDate', 'sprintf'
                      22991         CALLS   'FactTSGenDate', 'rs232puts'
                      22992         CALLS   'FactTSGenDate', 'sscanf'
                      22993         CALLS   'FactTSGenDate', 'ValidateDate'
                      22994         CALLS   'FactTSGenDate', 'NV_Store'
                      22995         CALLS   'FactTSGenAGain', 'sprintf'
                      22996         CALLS   'FactTSGenAGain', 'rs232puts'
                      22997         CALLS   'FactTSGenAGain', 'sscanf'
                      22998         CALLS   'FactTSGenAGain', 'NV_Store'
                      22999         CALLS   'FactTSGenAGain', 'WriteCBGain'
                      23000         CALLS   'FactTSGenCGain', 'sprintf'
                      23001         CALLS   'FactTSGenCGain', 'rs232puts'
                      23002         CALLS   'FactTSGenCGain', 'sscanf'
                      23003         CALLS   'FactTSGenCGain', 'NV_Store'
                      23004         CALLS   'FactTSGenCGain', 'WriteCBChromaGain'
                      23005         CALLS   'FactTSGenPhase', 'sprintf'
                      23006         CALLS   'FactTSGenPhase', 'rs232puts'
                      23007         CALLS   'FactTSGenPhase', 'sscanf'
                      23008         CALLS   'FactTSGenPhase', 'NV_Store'
                      23009         CALLS   'FactTSGenPhase', 'SetCBDelay'
                      23010         CALLS   'FactTSGenScHPhase', 'sprintf'
                      23011         CALLS   'FactTSGenScHPhase', 'rs232puts'
                      23012         CALLS   'FactTSGenScHPhase', 'sscanf'
                      23013         CALLS   'FactTSGenScHPhase', 'NV_Store'
                      23014         CALLS   'FactTSGenScHPhase', 'SetCBScHPhase'
                      23015         CALLS   'FactAudioGenStatus', 'AudioStatus'
                      23016         CALLS   'FactAudioGenStatus', 'sprintf'
                      23017         CALLS   'FactAudioGenStatus', 'rs232puts'
                      23018         CALLS   'FactAudioGenDate', 'sprintf'
                      23019         CALLS   'FactAudioGenDate', 'rs232puts'
                      23020         CALLS   'FactAudioGenDate', 'sscanf'
                      23021         CALLS   'FactAudioGenDate', 'ValidateDate'
                      23022         CALLS   'FactAudioGenDate', 'NV_Store'
                      23023         CALLS   'FactAudioGenLevel', 'sprintf'
                      23024         CALLS   'FactAudioGenLevel', 'rs232puts'
                      23025         CALLS   'FactAudioGenLevel', 'sscanf'
                      23026         CALLS   'FactAudioGenLevel', 'NV_Store'
                      23027         CALLS   'FactAudioGenLevel', 'WriteAnlAudioDACLevel'
                      23028         CALLS   'FactPLDVersion', 'pld_version'
                      23029         CALLS   'FactPLDVersion', 'sprintf'
                      23030         CALLS   'FactPLDVersion', 'rs232puts'
                      23031         CALLS   'FactTCXOStatus', 'tcxo_status'
                      23032         CALLS   'FactTCXOStatus', 'sprintf'
                      23033         CALLS   'FactTCXOStatus', 'rs232puts'
                      23034         CALLS   'FactMultiMediaChip', 'sscanf'
                      23035         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23036         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23037         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23038         CALLS   'FactMultiMediaChip', 'sscanf'
                      23039         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23040         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23041         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23042         CALLS   'FindParameter', 'Cstrcmp'
                      23043         CALLS   'FLTToSamples', 'labs'
                      23044         CALLS   'FLTToSamples', 'abs'
                      23045         CALLS   'FLTToSamples', 'labs'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 372

ADDR   CODE            LINE SOURCELINE
                      23046         CALLS   'FLTToSamples', 'abs'
                      23047         CALLS   'PrintSamplesToFLT', 'abs'
                      23048         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23049         CALLS   'PrintSamplesToFLT', 'abs'
                      23050         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23051         CALLS   'PrintSamplesToFLT', 'fabs'
                      23052         CALLS   'PrintSamplesToFLT', 'rs232printf'
