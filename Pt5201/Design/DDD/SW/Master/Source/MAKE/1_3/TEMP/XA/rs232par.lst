XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
U:\Pt5201\Design\DDD\SW\Master\Source\MAKE\2_1\temp\xa\rs232par.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -I..\..\rtxcdef\xa
                          3 ;          -I..\..\rtxc\xa\include -I..\..\code\include\1_0 -I..\..\app_spec\xa
                          4 ;          -Ml -O2 -s
                          6 $NOZPAGE
                          7         NAME    RS232PAR
                         11 ; rs232par.c    1       /* MODULE:                                                               
                               */
                         12 ; rs232par.c    2       /*   r232par.c - RS232 command interpreter                               
                                                                                                                             
                                    */
                         13 ; rs232par.c    3       /************************************************************************
                            ****/
                         14 ; rs232par.c    4       /* FUNCTIONS:                                                            
                               */
                         15 ; rs232par.c    5       /*                                                                       
                               */
                         16 ; rs232par.c    6       /* TASKS:                                                                
                               */
                         17 ; rs232par.c    7       /*                                                                       
                               */
                         18 ; rs232par.c    8       /* NOTES:                                                                
                               */
                         19 ; rs232par.c    9       /*                                                                       
                               */
                         20 ; rs232par.c   10       /************************************************************************
                            ****/
                         21 ; rs232par.c   11       /*
                         22 ; rs232par.c   12        *   PTV software for PT5201
                         23 ; rs232par.c   13        *   Copyright (c) 
                         24 ; rs232par.c   14        *   ProTeleVision Technologies A/S.
                         25 ; rs232par.c   15        *   ALL RIGHTS RESERVED
                         26 ; rs232par.c   16       */
                         27 ; rs232par.c   17       /************************************************************************
                            ****/
                         28 ; rs232par.c   18       
                         29 ; rs232par.c   19       /************************************************************************
                            **/
                         30 ; rs232par.c   20       /* Include files:                                                        
                                                                                                                             
                                                                                                            */
                         31 ; rs232par.c   21       
                         32 ; rs232par.c   22       #include <ctype.h>
                         35 ; rs232par.c   23       #include <stdio.h>
                         56 ; rs232par.c   24       #include <math.h>
                         59 ; rs232par.c   25       #include <string.h>
                         62 ; rs232par.c   26       
                         63 ; rs232par.c   27       #include "define.h"
                         66 ; rs232par.c   28       #include "util.h"
                         69 ; rs232par.c   29       #include "rs232par.h"
                         72 ; rs232par.c   30       #include "rs232err.h"
                         75 ; rs232par.c   31       #include "rs232cmd.h"
                         80 ; rs232par.c   32       #include "rs232.h"
                        409 ; rs232par.c   33       
                        410 ; rs232par.c   34       #define StateP0                 0
                        411 ; rs232par.c   35       #define StateP1                 StateP0+1
                        412 ; rs232par.c   36       #define StateP2                 StateP1+1
                        413 ; rs232par.c   37       #define StateP3                 StateP2+1
                        414 ; rs232par.c   38       #define StateP4                 StateP3+1
                        415 ; rs232par.c   39       #define StateP5                 StateP4+1
                        416 ; rs232par.c   40       #define StateP6                 StateP5+1
                        417 ; rs232par.c   41       #define StateP7                 StateP6+1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        418 ; rs232par.c   42       #define StateP8                 StateP7+1
                        419 ; rs232par.c   43       
                        420 ; rs232par.c   44       #define StateC0                 StateP8+1
                        421 ; rs232par.c   45       
                        422 ; rs232par.c   46       #define StateD0                 StateC0+1
                        423 ; rs232par.c   47       #define StateD1                 StateD0+1
                        424 ; rs232par.c   48       #define StateD2                 StateD1+1
                        425 ; rs232par.c   49       #define StateD3                 StateD2+1
                        426 ; rs232par.c   50       #define StateD4                 StateD3+1
                        427 ; rs232par.c   51       #define StateD5                 StateD4+1
                        428 ; rs232par.c   52       #define StateD6                 StateD5+1
                        429 ; rs232par.c   53       #define StateD7                 StateD6+1
                        430 ; rs232par.c   54       
                        431 ; rs232par.c   55       #define StateS0                 StateD7+1
                        432 ; rs232par.c   56       #define StateS1                 StateS0+1
                        433 ; rs232par.c   57       #define StateS2                 StateS1+1
                        434 ; rs232par.c   58       #define StateS3                 StateS2+1
                        435 ; rs232par.c   59       
                        436 ; rs232par.c   60       #define StateDA0                StateS3+1
                        437 ; rs232par.c   61       #define StateDA1                StateDA0+1
                        438 ; rs232par.c   62       #define StateDA2                StateDA1+1
                        439 ; rs232par.c   63       #define StateDA3                StateDA2+1
                        440 ; rs232par.c   64       #define StateDA4                StateDA3+1
                        441 ; rs232par.c   65       #define StateDA5                StateDA4+1
                        442 ; rs232par.c   66       
                        443 ; rs232par.c   67       #define StateA0                 StateDA5+1
                        444 ; rs232par.c   68       
                        445 ; rs232par.c   69       #define StateE0                 StateA0+1
                        446 ; rs232par.c   70       
                        447 ; rs232par.c   71       #define StateERROR      StateE0+1
                        448 ; rs232par.c   72       
                        449 ; rs232par.c   73       #define iswhitespace(c)         (((c) != 0x0A) && ((c) <= 0x20))
                        450 ; rs232par.c   74       #define isoctaldigit(c)         (((c) >= '0') && ((c) <= '7'))
                        451 ; rs232par.c   75       #define isbinarydigit(c)        (((c) == '0') || ((c) == '1'))
                        452 ; rs232par.c   76       #define iscolon(c)                              ((c) == ':')
                        453 ; rs232par.c   77       #define isasterix(c)                    ((c) == '*')
                        454 ; rs232par.c   78       #define issemicolon(c)          ((c) == ';')
                        455 ; rs232par.c   79       #define isquestionmark(c)       ((c) == '?')
                        456 ; rs232par.c   80       #define isunderscore(c)         ((c) == '_')
                        457 ; rs232par.c   81       #define isplussign(c)                   ((c) == '+')
                        458 ; rs232par.c   82       #define isminussign(c)          ((c) == '-')
                        459 ; rs232par.c   83       #define isslash(c)                              ((c) == '/')
                        460 ; rs232par.c   84       #define isdoubledagger(c)       ((c) == '#')
                        461 ; rs232par.c   85       #define isdot(c)                                        ((c) == '.')
                        462 ; rs232par.c   86       #define iscomma(c)                              ((c) == ',')
                        463 ; rs232par.c   87       #define isquote(c)                              ((c) == '\'')
                        464 ; rs232par.c   88       #define isdoublequote(c)        ((c) == '\"')
                        465 ; rs232par.c   89       #define isnewline(c)                    ((c) == 0x0A)           // Newlin
                            e is Linefeed
                        466 ; rs232par.c   90       
                        467 ; rs232par.c   91       enum CmdStates  { Idle = 0, NextLevel, Ready, PMUS, PMT, Error };
                        468 ; rs232par.c   92       
                        469 ; rs232par.c   93       bit NewCmdExecuted;
                        470 ; rs232par.c   94       bit CmdRequest, CmdExecute;
                        471 ; rs232par.c   95       
                        472 ; rs232par.c   96       UC ResponseReceived;
                        473 ; rs232par.c   97       
                        474 ; rs232par.c   98       char Cmd[512];
                        475 ; rs232par.c   99       UI CmdNdx;
                        476 ; rs232par.c  100       
                        477 ; rs232par.c  101       UI NumSuffix;
                        478 ; rs232par.c  102       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        479 ; rs232par.c  103       UC ParCnt;
                        480 ; rs232par.c  104       UC ParType[10];
                        481 ; rs232par.c  105       
                        482 ; rs232par.c  106       static struct CMD_STRUCT code* CmdPtr = &Subsystem[0];
000000                  483 RS232PAR_INI_FA SEGMENT HDATA INSEGMENT INIT
000000                  484         RSEG    RS232PAR_INI_FA
                        503         ALIGN   1
000000                  504 _CmdPtr:
                        505 ; rs232par.c  107       static struct CMD_STRUCT code* CmdLevelPtr = &Subsystem[0];
000000 rrrrrrrrrrrrrr   506         DD      _Subsystem
       rr                   
                        508         ALIGN   1
000004                  509 _CmdLevelPtr:
                        510 ; rs232par.c  108       
                        511 ; rs232par.c  109       static UC State = StateP0;
000004 rrrrrrrrrrrrrr   512         DD      _Subsystem
       rr                   
                        514 ; rs232par.c  110       
                        515 ; rs232par.c  111       static UI NoOfBytes;
                        516 ; rs232par.c  112       static UC NoOfDigits;
                        517 ; rs232par.c  113       
                        518 ; rs232par.c  114       /************************************************************************
                            **/
                        519 ; rs232par.c  115       /* CmdSyntax                                                             
                                                                                                                             
                                                             RS232PAR.C     */
                        520 ; rs232par.c  116       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        521 ; rs232par.c  117       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                        522 ; rs232par.c  118       /* Revised:             000414                                           
                                                                                                                             
                                                                                    */
                        523 ; rs232par.c  119       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        524 ; rs232par.c  120       /* Function:    --                                                       
                                                                                                                             
                                                                                                            */
                        525 ; rs232par.c  121       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                    */
                        526 ; rs232par.c  122       /* Returns:             Command state                                    
                                                                                                                             
                                                                                    */
                        527 ; rs232par.c  123       /* Updates:             --                                               
                                                                                                                             
                                                                                                                    */
                        528 ; rs232par.c  124       /************************************************************************
                            **/
                        529 ; rs232par.c  125       char CmdSyntax( char c)
                        530 ; rs232par.c  126       {
000008 00               531 _State: DB      000H
000000                  532 RS232PAR_PR     SEGMENT HCODE
000000                  533         RSEG    RS232PAR_PR
                        534         ALIGN   1
                        536         PUBLIC  _CmdSyntax
000000                  537 _CmdSyntax:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
000000 0F30             541         PUSH.W  R4, R5
000002 A97C             543         ADDS.W  R7,#0CH
                        550 ; rs232par.c  127               char c_str;
                        551 ; rs232par.c  128       
                        552 ; rs232par.c  129               c_str = c;
                        553 ; rs232par.c  130               c = toupper( c);
000004 8190             555         MOV.B   R4H,R0L
000006 8109             556         MOV.B   R0L,R4H
000008 9019             557         SEXT.B  R0H
000000                  562 RS232PAR_IR     SEGMENT HCODE INSEGMENT ROMDATA
000000                  563         RSEG    RS232PAR_IR
                        564         ALIGN   1
000000                  565 __swtable385:
000000 rrrrrrrrrrrrrr   566         DW      SOF _11,SEG _11
       rrrrrrrrrrrrrr       
       rrrr                 
000004 rrrrrrrrrrrrrr   567         DW      SOF _17,SEG _17
       rrrrrrrrrrrrrr       
       rrrr                 
000008 rrrrrrrrrrrrrr   568         DW      SOF _19,SEG _19
       rrrrrrrrrrrrrr       
       rrrr                 
00000C rrrrrrrrrrrrrr   569         DW      SOF _31,SEG _31
       rrrrrrrrrrrrrr       
       rrrr                 
000010 rrrrrrrrrrrrrr   570         DW      SOF _33,SEG _33
       rrrrrrrrrrrrrr       
       rrrr                 
000014 rrrrrrrrrrrrrr   571         DW      SOF _43,SEG _43
       rrrrrrrrrrrrrr       
       rrrr                 
000018 rrrrrrrrrrrrrr   572         DW      SOF _48,SEG _48
       rrrrrrrrrrrrrr       
       rrrr                 
00001C rrrrrrrrrrrrrr   573         DW      SOF _62,SEG _62
       rrrrrrrrrrrrrr       
       rrrr                 
000020 rrrrrrrrrrrrrr   574         DW      SOF _68,SEG _68
       rrrrrrrrrrrrrr       
       rrrr                 
000024 rrrrrrrrrrrrrr   575         DW      SOF _80,SEG _80
       rrrrrrrrrrrrrr       
       rrrr                 
000028 rrrrrrrrrrrrrr   576         DW      SOF _90,SEG _90
       rrrrrrrrrrrrrr       
       rrrr                 
00002C rrrrrrrrrrrrrr   577         DW      SOF _93,SEG _93
       rrrrrrrrrrrrrr       
       rrrr                 
000030 rrrrrrrrrrrrrr   578         DW      SOF _96,SEG _96
       rrrrrrrrrrrrrr       
       rrrr                 
000034 rrrrrrrrrrrrrr   579         DW      SOF _108,SEG _108
       rrrrrrrrrrrrrr       
       rrrr                 
000038 rrrrrrrrrrrrrr   580         DW      SOF _118,SEG _118
       rrrrrrrrrrrrrr       
       rrrr                 
00003C rrrrrrrrrrrrrr   581         DW      SOF _126,SEG _126
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
000040 rrrrrrrrrrrrrr   582         DW      SOF _134,SEG _134
       rrrrrrrrrrrrrr       
       rrrr                 
000044 rrrrrrrrrrrrrr   583         DW      SOF _137,SEG _137
       rrrrrrrrrrrrrr       
       rrrr                 
000048 rrrrrrrrrrrrrr   584         DW      SOF _145,SEG _145
       rrrrrrrrrrrrrr       
       rrrr                 
00004C rrrrrrrrrrrrrr   585         DW      SOF _147,SEG _147
       rrrrrrrrrrrrrr       
       rrrr                 
000050 rrrrrrrrrrrrrr   586         DW      SOF _154,SEG _154
       rrrrrrrrrrrrrr       
       rrrr                 
000054 rrrrrrrrrrrrrr   587         DW      SOF _156,SEG _156
       rrrrrrrrrrrrrr       
       rrrr                 
000058 rrrrrrrrrrrrrr   588         DW      SOF _163,SEG _163
       rrrrrrrrrrrrrr       
       rrrr                 
00005C rrrrrrrrrrrrrr   589         DW      SOF _169,SEG _169
       rrrrrrrrrrrrrr       
       rrrr                 
000060 rrrrrrrrrrrrrr   590         DW      SOF _176,SEG _176
       rrrrrrrrrrrrrr       
       rrrr                 
000064 rrrrrrrrrrrrrr   591         DW      SOF _184,SEG _184
       rrrrrrrrrrrrrr       
       rrrr                 
000068 rrrrrrrrrrrrrr   592         DW      SOF _192,SEG _192
       rrrrrrrrrrrrrr       
       rrrr                 
00006C rrrrrrrrrrrrrr   593         DW      SOF _201,SEG _201
       rrrrrrrrrrrrrr       
       rrrr                 
000070 rrrrrrrrrrrrrr   594         DW      SOF _203,SEG _203
       rrrrrrrrrrrrrr       
       rrrr                 
000074 rrrrrrrrrrrrrr   595         DW      SOF _205,SEG _205
       rrrrrrrrrrrrrr       
       rrrr                 
000078 rrrrrrrrrrrrrr   596         DW      SOF _206,SEG _206
       rrrrrrrrrrrrrr       
       rrrr                 
00000A                  597         RSEG    RS232PAR_PR
                        598         CALL    _toupper
00000A C4rrrrrr        +598 ;       FCALL   _toupper
00000E 8950             599         MOV.W   R5,R0
                        605 ; rs232par.c  131       
                        606 ; rs232par.c  132               switch ( rs232GetLastError())
                        608         CALL    _rs232GetLastError
000010 C4rrrrrr        +608 ;       FCALL   _rs232GetLastError
000014 99040000         609         CMP.W   R0,#00H
000018 F33D             610         BEQ     _10
00001A 99040002         611         CMP.W   R0,#02H
00001E F307             612         BEQ     _3
000020 99040001         613         CMP.W   R0,#01H
000024 F311             614         BEQ     _4
000026 99040008         615         CMP.W   R0,#08H
00002A F31B             616         BEQ     _5
00002C FE27             617         BR      _6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
                        618 ; rs232par.c  133               {
                        619 ; rs232par.c  134                       case ERR_NONE:
                        620 ; rs232par.c  135                               break;
                        621 ; rs232par.c  136       
                        622 ; rs232par.c  137                       case ERR_OVERFLOW:
00002E                  624 _3:
                        625 ; rs232par.c  138                               SCPIError = InputBufferOverrun;
00002E 964842rr         627         MOV.B   ES,#SEG( _SCPIError )
000032 9908rrrr         628         MOV.W   R0,#SOF( _SCPIError )
000036 9A08002B         629         MOV.W   [R0],#02BH
                        630 ; rs232par.c  139                               State = StateERROR;
00003A 964842rr         632         MOV.B   ES,#SEG( _State )
00003E 9908rrrr         633         MOV.W   R0,#SOF( _State )
000042 92081E           634         MOV.B   [R0],#01EH
                        635 ; rs232par.c  140                               break;
000045 FE27             637         BR      _10
                        638 ; rs232par.c  141       
                        639 ; rs232par.c  142                       case ERR_PARITY:
000048                  641 _4:
                        642 ; rs232par.c  143                               SCPIError = ParityErrInMessage;
000048 964842rr         644         MOV.B   ES,#SEG( _SCPIError )
00004C 9908rrrr         645         MOV.W   R0,#SOF( _SCPIError )
000050 9A080029         646         MOV.W   [R0],#029H
                        647 ; rs232par.c  144                               State = StateERROR;
000054 964842rr         649         MOV.B   ES,#SEG( _State )
000058 9908rrrr         650         MOV.W   R0,#SOF( _State )
00005C 92081E           651         MOV.B   [R0],#01EH
                        652 ; rs232par.c  145                               break;
00005F FE1A             654         BR      _10
                        655 ; rs232par.c  146       
                        656 ; rs232par.c  147                       case ERR_FRAMING:
000062                  658 _5:
                        659 ; rs232par.c  148                               SCPIError = FramingErrInMessage;
000062 964842rr         661         MOV.B   ES,#SEG( _SCPIError )
000066 9908rrrr         662         MOV.W   R0,#SOF( _SCPIError )
00006A 9A08002A         663         MOV.W   [R0],#02AH
                        664 ; rs232par.c  149                               State = StateERROR;
00006E 964842rr         666         MOV.B   ES,#SEG( _State )
000072 9908rrrr         667         MOV.W   R0,#SOF( _State )
000076 92081E           668         MOV.B   [R0],#01EH
                        669 ; rs232par.c  150                               break;
000079 FE0D             671         BR      _10
                        672 ; rs232par.c  151       
                        673 ; rs232par.c  152                       default:
00007C                  675 _6:
                        676 ; rs232par.c  153                               SCPIError = CommunicationErr;
00007C 964842rr         678         MOV.B   ES,#SEG( _SCPIError )
000080 9908rrrr         679         MOV.W   R0,#SOF( _SCPIError )
000084 9A080028         680         MOV.W   [R0],#028H
                        681 ; rs232par.c  154                               State = StateERROR;
000088 964842rr         683         MOV.B   ES,#SEG( _State )
00008C 9908rrrr         684         MOV.W   R0,#SOF( _State )
000090 92081E           685         MOV.B   [R0],#01EH
                        686 ; rs232par.c  155                               break;
                        687 ; rs232par.c  156               }
000094                  689 _10:
                        690 ; rs232par.c  157       
                        691 ; rs232par.c  158               switch ( State)
000094 964842rr         693         MOV.B   ES,#SEG( _State )
000098 9908rrrr         694         MOV.W   R0,#SOF( _State )
00009C 8220             695         MOV.B   R1L,[R0]
00009E 91241E           696         CMP.B   R1L,#01EH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
                        697         BG      _329
0000A1 F902            +697 ;       BL      _LG_8
0000A3 D5110A          +697 ;       JMP.L   _329
0000A3 D5110A          +697 ;       JMP.L   _329
0000A6                 +697 _LG_8:
0000A6 7133             698         XOR.B   R1H,R1H
0000A8 D912             699         ASL.W   R1,#02H
0000AA 964843rr         700         MOV.B   CS,#SEG( __swtable385 )
0000AE 9910rrrr         701         ADD.W   R1,#SOF( __swtable385 )
0000B2 8801             702         MOVC.W  R0,[R1+]
0000B4 0F01             703         PUSH.W  R0
0000B6 8801             704         MOVC.W  R0,[R1+]
0000B8 0F01             705         PUSH.W  R0
0000BA D680             706         RET
                        707 ; rs232par.c  159               {
                        708 ; rs232par.c  160                       case StateP0:                                            
                                     // COMMAND PROGRAM DATA
0000BC                  710 _11:
                        711 ; rs232par.c  161                               SCPIError = NoErr;
0000BC B940             713         MOV.W   R4,#00H
0000BE 964842rr         714         MOV.B   ES,#SEG( _SCPIError )
0000C2 9908rrrr         715         MOV.W   R0,#SOF( _SCPIError )
0000C6 BA00             716         MOV.W   [R0],#00H
                        717 ; rs232par.c  162                               CmdExecute = CmdRequest = FALSE;
0000C8 912800           719         MOV.B   R1L,#00H
0000CB 964842rr         720         MOV.B   ES,#SEG( _CmdRequest )
0000CF 9908rrrr         721         MOV.W   R0,#SOF( _CmdRequest )
0000D3 B200             722         MOV.B   [R0],#00H
0000D5 964842rr         723         MOV.B   ES,#SEG( _CmdExecute )
0000D9 9908rrrr         724         MOV.W   R0,#SOF( _CmdExecute )
0000DD 8228             725         MOV.B   [R0],R1L
                        726 ; rs232par.c  163                               ParType[ParCnt = 0] = P_NoParameter;
0000DF 964842rr         728         MOV.B   ES,#SEG( _ParCnt )
0000E3 9908rrrr         729         MOV.W   R0,#SOF( _ParCnt )
0000E7 8228             730         MOV.B   [R0],R1L
0000E9 8142             731         MOV.B   R2L,R1L
0000EB 9059             732         SEXT.B  R2H
0000ED 9839             733         SEXT.W  R3
0000EF 964842rr         734         MOV.B   ES,#SEG( _ParType )
0000F3 852Arrrr         735         MOV.B   [R2+SOF( _ParType )],R1L
                        736 ; rs232par.c  164       
                        737 ; rs232par.c  165                               if ( iswhitespace(c) || issemicolon(c))
0000F7 91A40A           739         CMP.B   R5L,#0AH
0000FA F304             740         BEQ     _12
0000FC 91A420           741         CMP.B   R5L,#020H
                        742         BLE     _329
0000FF FC02            +742 ;       BGT     _LG_12
000101 D510DB          +742 ;       JMP.L   _329
000101 D510DB          +742 ;       JMP.L   _329
000104                 +742 _LG_12:
000104                 +742 _LG_12:
000104                  743 _12:
000104 91A43B           744         CMP.B   R5L,#03BH
                        745         BEQ     _329
000107 F202            +745 ;       BNE     _LG_14
000109 D510D7          +745 ;       JMP.L   _329
000109 D510D7          +745 ;       JMP.L   _329
00010C                 +745 _LG_14:
                        746 ; rs232par.c  166                                       break;
                        747 ; rs232par.c  167       
                        748 ; rs232par.c  168                               if ( isalpha(c))
00010C 814A             750         MOV.B   R2L,R5L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
00010E 9059             751         SEXT.B  R2H
000110 9839             752         SEXT.W  R3
000112 964842rr         753         MOV.B   ES,#SEG( __ctype_+1 )
000116 8502rrrr         754         MOV.B   R0L,[R2+SOF( __ctype_+1 )]
00011A 9019             755         SEXT.B  R0H
00011C 99050003         756         AND.W   R0,#03H
000120 F323             757         BEQ     _13
                        758 ; rs232par.c  169                               {
                        759 ; rs232par.c  170                                       Cmd[CmdNdx = 0] = c;
000122 964842rr         761         MOV.B   ES,#SEG( _CmdNdx )
000126 9908rrrr         762         MOV.W   R0,#SOF( _CmdNdx )
00012A 8A48             763         MOV.W   [R0],R4
00012C 8904             764         MOV.W   R0,R4
00012E 9819             765         SEXT.W  R1
000130 964842rr         766         MOV.B   ES,#SEG( _Cmd )
000134 85A8rrrr         767         MOV.B   [R0+SOF( _Cmd )],R5L
                        768 ; rs232par.c  171                                       NumSuffix = 0;
000138 964842rr         770         MOV.B   ES,#SEG( _NumSuffix )
00013C 9908rrrr         771         MOV.W   R0,#SOF( _NumSuffix )
000140 BA00             772         MOV.W   [R0],#00H
                        773 ; rs232par.c  172                                       State = StateP2;
000142 964842rr         775         MOV.B   ES,#SEG( _State )
000146 9908rrrr         776         MOV.W   R0,#SOF( _State )
00014A B202             777         MOV.B   [R0],#02H
                        778 ; rs232par.c  173                                       CmdPtr = CmdLevelPtr;
00014C 964842rr         780         MOV.B   ES,#SEG( _CmdLevelPtr )
000150 9918rrrr         781         MOV.W   R1,#SOF( _CmdLevelPtr )
000154 8B01             782         MOV.W   R0,[R1+]
000156 8A11             783         MOV.W   R1,[R1]
000158 964842rr         784         MOV.B   ES,#SEG( _CmdPtr )
00015C 9928rrrr         785         MOV.W   R2,#SOF( _CmdPtr )
000160 8B0A             786         MOV.W   [R2+],R0
000162 8A1A             787         MOV.W   [R2],R1
                        788 ; rs232par.c  174                                       break;
                        790         BR      _329
000164 D510AA          +790         JMP.L   _329
                        791 ; rs232par.c  175                               }
000168                  793 _13:
                        795 ; rs232par.c  176       
                        796 ; rs232par.c  177                               if ( iscolon(c))
000168 91A43A           798         CMP.B   R5L,#03AH
00016B F217             799         BNE     _14
                        800 ; rs232par.c  178                               {
                        801 ; rs232par.c  179                                       State = StateP1;
00016D 964842rr         803         MOV.B   ES,#SEG( _State )
000171 9908rrrr         804         MOV.W   R0,#SOF( _State )
000175 B201             805         MOV.B   [R0],#01H
                        806 ; rs232par.c  180                                       CmdPtr = CmdLevelPtr = &Subsystem[0];
000177 964842rr         808         MOV.B   ES,#SEG( _CmdLevelPtr )
00017B 9908rrrr         809         MOV.W   R0,#SOF( _CmdLevelPtr )
00017F 9B08rrrr         810         MOV.W   [R0+],#SOF( _Subsystem )
000183 9A08rrrr         811         MOV.W   [R0],#SEG( _Subsystem )
000187 964842rr         812         MOV.B   ES,#SEG( _CmdPtr )
00018B 9908rrrr         813         MOV.W   R0,#SOF( _CmdPtr )
00018F 9B08rrrr         814         MOV.W   [R0+],#SOF( _Subsystem )
000193 9A08rrrr         815         MOV.W   [R0],#SEG( _Subsystem )
                        816 ; rs232par.c  181                                       break;
                        818         BR      _329
000197 D51090          +818         JMP.L   _329
                        819 ; rs232par.c  182                               }
00019A                  821 _14:
                        822 ; rs232par.c  183       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
                        823 ; rs232par.c  184                               if ( isasterix(c))
00019A 91A42A           825         CMP.B   R5L,#02AH
00019D F226             826         BNE     _15
                        827 ; rs232par.c  185                               {
                        828 ; rs232par.c  186                                       Cmd[CmdNdx = 0] = c;
00019F 964842rr         830         MOV.B   ES,#SEG( _CmdNdx )
0001A3 9908rrrr         831         MOV.W   R0,#SOF( _CmdNdx )
0001A7 8A48             832         MOV.W   [R0],R4
0001A9 8904             833         MOV.W   R0,R4
0001AB 9819             834         SEXT.W  R1
0001AD 964842rr         835         MOV.B   ES,#SEG( _Cmd )
0001B1 85A8rrrr         836         MOV.B   [R0+SOF( _Cmd )],R5L
                        837 ; rs232par.c  187                                       State = StateP3;
0001B5 964842rr         839         MOV.B   ES,#SEG( _State )
0001B9 9908rrrr         840         MOV.W   R0,#SOF( _State )
0001BD B203             841         MOV.B   [R0],#03H
                        842 ; rs232par.c  188                                       CmdLevelPtr = CmdPtr;
0001BF 964842rr         844         MOV.B   ES,#SEG( _CmdPtr )
0001C3 9918rrrr         845         MOV.W   R1,#SOF( _CmdPtr )
0001C7 8B01             846         MOV.W   R0,[R1+]
0001C9 8A11             847         MOV.W   R1,[R1]
0001CB 964842rr         848         MOV.B   ES,#SEG( _CmdLevelPtr )
0001CF 9928rrrr         849         MOV.W   R2,#SOF( _CmdLevelPtr )
0001D3 8B0A             850         MOV.W   [R2+],R0
0001D5 8A1A             851         MOV.W   [R2],R1
                        852 ; rs232par.c  189                                       CmdPtr = &Mandated[0];
0001D7 964842rr         854         MOV.B   ES,#SEG( _CmdPtr )
0001DB 9908rrrr         855         MOV.W   R0,#SOF( _CmdPtr )
0001DF 9B08rrrr         856         MOV.W   [R0+],#SOF( _Mandated )
0001E3 9A08rrrr         857         MOV.W   [R0],#SEG( _Mandated )
                        858 ; rs232par.c  190                                       break;
                        860         BR      _329
0001E7 D51068          +860         JMP.L   _329
                        861 ; rs232par.c  191                               }
0001EA                  863 _15:
                        864 ; rs232par.c  192       
                        865 ; rs232par.c  193                               if ( isnewline(c))
0001EA 91A40A           867         CMP.B   R5L,#0AH
0001ED F224             868         BNE     _16
                        869 ; rs232par.c  194                               {
                        870 ; rs232par.c  195                                       Cmd[CmdNdx = 0] = 0;
0001EF 964842rr         872         MOV.B   ES,#SEG( _CmdNdx )
0001F3 9908rrrr         873         MOV.W   R0,#SOF( _CmdNdx )
0001F7 8A48             874         MOV.W   [R0],R4
0001F9 8944             875         MOV.W   R4,R4
0001FB 9859             876         SEXT.W  R5
0001FD 964842rr         877         MOV.B   ES,#SEG( _Cmd )
000201 852Crrrr         878         MOV.B   [R4+SOF( _Cmd )],R1L
                        879 ; rs232par.c  196                                       State = StateP0;
000205 964842rr         881         MOV.B   ES,#SEG( _State )
000209 9908rrrr         882         MOV.W   R0,#SOF( _State )
00020D B200             883         MOV.B   [R0],#00H
                        884 ; rs232par.c  197                                       CmdPtr = CmdLevelPtr = &Subsystem[0];
00020F 964842rr         886         MOV.B   ES,#SEG( _CmdLevelPtr )
000213 9908rrrr         887         MOV.W   R0,#SOF( _CmdLevelPtr )
000217 9B08rrrr         888         MOV.W   [R0+],#SOF( _Subsystem )
00021B 9A08rrrr         889         MOV.W   [R0],#SEG( _Subsystem )
00021F 964842rr         890         MOV.B   ES,#SEG( _CmdPtr )
000223 9908rrrr         891         MOV.W   R0,#SOF( _CmdPtr )
000227 9B08rrrr         892         MOV.W   [R0+],#SOF( _Subsystem )
00022B 9A08rrrr         893         MOV.W   [R0],#SEG( _Subsystem )
                        894 ; rs232par.c  198                                       return( PMT);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
00022F 910804           896         MOV.B   R0L,#04H
                        897         BR      _384
000232 D5104F          +897         JMP.L   _384
                        898 ; rs232par.c  199                               }
000236                  900 _16:
                        901 ; rs232par.c  200       
                        902 ; rs232par.c  201                               SCPIError = InvalidChar;
000236 964842rr         904         MOV.B   ES,#SEG( _SCPIError )
00023A 9908rrrr         905         MOV.W   R0,#SOF( _SCPIError )
00023E BA02             906         MOV.W   [R0],#02H
                        907 ; rs232par.c  202                               State = StateERROR;
000240 964842rr         909         MOV.B   ES,#SEG( _State )
000244 9908rrrr         910         MOV.W   R0,#SOF( _State )
000248 92081E           911         MOV.B   [R0],#01EH
                        912 ; rs232par.c  203                               break;
                        914         BR      _329
00024B D51036          +914         JMP.L   _329
                        915 ; rs232par.c  204       
                        916 ; rs232par.c  205                       case StateP1:
00024E                  918 _17:
                        919 ; rs232par.c  206                               if ( isalpha(c))
00024E 810A             921         MOV.B   R0L,R5L
000250 9019             922         SEXT.B  R0H
000252 9819             923         SEXT.W  R1
000254 964842rr         924         MOV.B   ES,#SEG( __ctype_+1 )
000258 8500rrrr         925         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
00025C 9019             926         SEXT.B  R0H
00025E 99050003         927         AND.W   R0,#03H
000262 F318             928         BEQ     _18
                        929 ; rs232par.c  207                               {
                        930 ; rs232par.c  208                                       Cmd[CmdNdx = 0] = c;
000264 B910             932         MOV.W   R1,#00H
000266 964842rr         933         MOV.B   ES,#SEG( _CmdNdx )
00026A 9908rrrr         934         MOV.W   R0,#SOF( _CmdNdx )
00026E BA00             935         MOV.W   [R0],#00H
000270 8921             936         MOV.W   R2,R1
000272 B930             937         MOVS.W  R3,#00H
000274 964842rr         938         MOV.B   ES,#SEG( _Cmd )
000278 85AArrrr         939         MOV.B   [R2+SOF( _Cmd )],R5L
                        940 ; rs232par.c  209                                       NumSuffix = 0;
00027C 964842rr         942         MOV.B   ES,#SEG( _NumSuffix )
000280 9908rrrr         943         MOV.W   R0,#SOF( _NumSuffix )
000284 BA00             944         MOV.W   [R0],#00H
                        945 ; rs232par.c  210                                       State = StateP2;
000286 964842rr         947         MOV.B   ES,#SEG( _State )
00028A 9908rrrr         948         MOV.W   R0,#SOF( _State )
00028E B202             949         MOV.B   [R0],#02H
                        950 ; rs232par.c  211                                       break;
                        952         BR      _329
000290 D51014          +952         JMP.L   _329
                        953 ; rs232par.c  212                               }
000294                  955 _18:
                        956 ; rs232par.c  213       
                        957 ; rs232par.c  214                               SCPIError = InvalidChar;
000294 964842rr         959         MOV.B   ES,#SEG( _SCPIError )
000298 9908rrrr         960         MOV.W   R0,#SOF( _SCPIError )
00029C BA02             961         MOV.W   [R0],#02H
                        962 ; rs232par.c  215                               State = StateERROR;
00029E 964842rr         964         MOV.B   ES,#SEG( _State )
0002A2 9908rrrr         965         MOV.W   R0,#SOF( _State )
0002A6 92081E           966         MOV.B   [R0],#01EH
                        967 ; rs232par.c  216                               break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
                        969         BR      _329
0002A9 D51007          +969         JMP.L   _329
                        970 ; rs232par.c  217       
                        971 ; rs232par.c  218                       case StateP2:
0002AC                  973 _19:
                        974 ; rs232par.c  219                               if ( iswhitespace( c))
0002AC 91A40A           976         CMP.B   R5L,#0AH
0002AF F31C             977         BEQ     _21
0002B1 91A420           978         CMP.B   R5L,#020H
0002B4 FC19             979         BGT     _21
                        980 ; rs232par.c  220                               {
                        981 ; rs232par.c  221                                       Cmd[++CmdNdx] = 0;
0002B6 964842rr         983         MOV.B   ES,#SEG( _CmdNdx )
0002BA 9908rrrr         984         MOV.W   R0,#SOF( _CmdNdx )
0002BE 8A00             985         MOV.W   R0,[R0]
0002C0 A901             986         ADDS.W  R0,#01H
0002C2 8920             987         MOV.W   R2,R0
0002C4 B930             988         MOVS.W  R3,#00H
0002C6 964842rr         989         MOV.B   ES,#SEG( _CmdNdx )
0002CA 9918rrrr         990         MOV.W   R1,#SOF( _CmdNdx )
0002CE 8A09             991         MOV.W   [R1],R0
0002D0 964842rr         992         MOV.B   ES,#SEG( _Cmd )
0002D4 B520rrrr         993         MOV.B   [R2+SOF( _Cmd )],#00H
                        994 ; rs232par.c  222                                       State = StateP6;
0002D8 964842rr         996         MOV.B   ES,#SEG( _State )
0002DC 9908rrrr         997         MOV.W   R0,#SOF( _State )
0002E0 B206             998         MOV.B   [R0],#06H
                        999 ; rs232par.c  223                                       return( Ready);
0002E2 910802          1001         MOV.B   R0L,#02H
                       1002         BR      _384
0002E5 D50FF5         +1002         JMP.L   _384
                       1003 ; rs232par.c  224                               }
0002E8                 1005 _21:
                       1006 ; rs232par.c  225       
                       1007 ; rs232par.c  226                               if ( isalpha(c) || isunderscore(c) || isdigit(c))
                            
0002E8 810A            1009         MOV.B   R0L,R5L
0002EA 9019            1010         SEXT.B  R0H
0002EC 9819            1011         SEXT.W  R1
0002EE 9938rrrr        1012         MOV.W   R3,#SEG( __ctype_+1 )
0002F2 9928rrrr        1013         MOV.W   R2,#SOF( __ctype_+1 )
0002F6 0920            1014         ADD.W   R2,R0
0002F8 8C3F02          1015         MOV.W   [R7+2],R3
0002FB 8A2F            1016         MOV.W   [R7],R2
0002FD 964842rr        1017         MOV.B   ES,#SEG( __ctype_+1 )
000301 8500rrrr        1018         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
000305 911803          1019         MOV.B   R0H,#03H
000308 5110            1020         AND.B   R0H,R0L
00030A F205            1021         BNE     _23
00030C 91A45F          1022         CMP.B   R5L,#05FH
00030F F303            1023         BEQ     _23
000311 910504          1024         AND.B   R0L,#04H
000314 F357            1025         BEQ     _26
000314 F357            1025         BEQ     _26
000316                 1026 _23:
                       1027 ; rs232par.c  227                               {
                       1028 ; rs232par.c  228                                       CmdLevelPtr = CmdPtr;
000316 964842rr        1030         MOV.B   ES,#SEG( _CmdPtr )
00031A 9918rrrr        1031         MOV.W   R1,#SOF( _CmdPtr )
00031E 8B01            1032         MOV.W   R0,[R1+]
000320 8A11            1033         MOV.W   R1,[R1]
000322 964842rr        1034         MOV.B   ES,#SEG( _CmdLevelPtr )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
000326 9948rrrr        1035         MOV.W   R4,#SOF( _CmdLevelPtr )
00032A 8B0C            1036         MOV.W   [R4+],R0
00032C 8A1C            1037         MOV.W   [R4],R1
                       1038 ; rs232par.c  229       
                       1039 ; rs232par.c  230                                       if ( CmdNdx < 11)
00032E 964842rr        1041         MOV.B   ES,#SEG( _CmdNdx )
000332 9908rrrr        1042         MOV.W   R0,#SOF( _CmdNdx )
000336 8A00            1043         MOV.W   R0,[R0]
000338 9904000B        1044         CMP.W   R0,#0BH
00033C F036            1045         BCC     _25
                       1046 ; rs232par.c  231                                       {
                       1047 ; rs232par.c  232                                               Cmd[++CmdNdx] = c;
00033E A901            1049         ADDS.W  R0,#01H
000340 8910            1050         MOV.W   R1,R0
000342 8921            1051         MOV.W   R2,R1
000344 B930            1052         MOVS.W  R3,#00H
000346 964842rr        1053         MOV.B   ES,#SEG( _CmdNdx )
00034A 9948rrrr        1054         MOV.W   R4,#SOF( _CmdNdx )
00034E 8A1C            1055         MOV.W   [R4],R1
000350 964842rr        1056         MOV.B   ES,#SEG( _Cmd )
000354 85AArrrr        1057         MOV.B   [R2+SOF( _Cmd )],R5L
                       1058 ; rs232par.c  233                                               if ( isdigit(c))
000358 8C3702          1060         MOV.W   R3,[R7+2]
00035B 8A27            1061         MOV.W   R2,[R7]
00035D 866C42          1062         MOV.B   ES,R3L
000360 8222            1063         MOV.B   R1L,[R2]
000362 9039            1064         SEXT.B  R1H
000364 99150004        1065         AND.W   R1,#04H
000368 F313            1066         BEQ     _24
                       1067 ; rs232par.c  234                                               {
                       1068 ; rs232par.c  235                                                       NumSuffix = 10*NumSuffix 
                            + ( c-'0');
00036A 964842rr        1070         MOV.B   ES,#SEG( _NumSuffix )
00036E 9908rrrr        1071         MOV.W   R0,#SOF( _NumSuffix )
000372 8A00            1072         MOV.W   R0,[R0]
000374 E900000A        1073         MULU.W  R0,#0AH
000378 81AA            1074         MOV.B   R5L,R5L
00037A 90B9            1075         SEXT.B  R5H
00037C 99520030        1076         SUB.W   R5,#030H
000380 0905            1077         ADD.W   R0,R5
000382 964842rr        1078         MOV.B   ES,#SEG( _NumSuffix )
000386 9918rrrr        1079         MOV.W   R1,#SOF( _NumSuffix )
00038A 8A09            1080         MOV.W   [R1],R0
                       1081 ; rs232par.c  236                                                       break;
                       1083         BR      _329
00038C D50F96         +1083         JMP.L   _329
                       1084 ; rs232par.c  237                                               }
000390                 1086 _24:
                       1087 ; rs232par.c  238                                               NumSuffix = 0;
000390 964842rr        1089         MOV.B   ES,#SEG( _NumSuffix )
000394 9918rrrr        1090         MOV.W   R1,#SOF( _NumSuffix )
000398 BA10            1091         MOV.W   [R1],#00H
                       1092 ; rs232par.c  239                                               NoOfDigits = CmdNdx + 1;
00039A A101            1094         ADDS.B  R0L,#01H
00039C 964842rr        1095         MOV.B   ES,#SEG( _NoOfDigits )
0003A0 9918rrrr        1096         MOV.W   R1,#SOF( _NoOfDigits )
0003A4 8209            1097         MOV.B   [R1],R0L
                       1098 ; rs232par.c  240                                               break;
                       1100         BR      _329
0003A6 D50F89         +1100         JMP.L   _329
                       1101 ; rs232par.c  241                                       }
0003AA                 1103 _25:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
                       1104 ; rs232par.c  242       
                       1105 ; rs232par.c  243                                       SCPIError = PrgmMnemonicTooLong;
0003AA 964842rr        1107         MOV.B   ES,#SEG( _SCPIError )
0003AE 9908rrrr        1108         MOV.W   R0,#SOF( _SCPIError )
0003B2 9A08000A        1109         MOV.W   [R0],#0AH
                       1110 ; rs232par.c  244                                       State = StateERROR;
0003B6 964842rr        1112         MOV.B   ES,#SEG( _State )
0003BA 9908rrrr        1113         MOV.W   R0,#SOF( _State )
0003BE 92081E          1114         MOV.B   [R0],#01EH
                       1115 ; rs232par.c  245                                       break;
                       1117         BR      _329
0003C1 D50F7B         +1117         JMP.L   _329
                       1118 ; rs232par.c  246                               }
0003C4                 1120 _26:
                       1121 ; rs232par.c  247       
                       1122 ; rs232par.c  248                               if ( isquestionmark(c))
0003C4 91A43F          1124         CMP.B   R5L,#03FH
0003C7 F20D            1125         BNE     _27
                       1126 ; rs232par.c  249                               {
                       1127 ; rs232par.c  250                                       State = StateP5;
0003C9 964842rr        1129         MOV.B   ES,#SEG( _State )
0003CD 9908rrrr        1130         MOV.W   R0,#SOF( _State )
0003D1 B205            1131         MOV.B   [R0],#05H
                       1132 ; rs232par.c  251                                       CmdRequest = TRUE;
0003D3 964842rr        1134         MOV.B   ES,#SEG( _CmdRequest )
0003D7 9908rrrr        1135         MOV.W   R0,#SOF( _CmdRequest )
0003DB 9208FF          1136         MOV.B   [R0],#0FFH
                       1137 ; rs232par.c  252                                       break;
                       1139         BR      _329
0003DE D50F6D         +1139         JMP.L   _329
                       1140 ; rs232par.c  253                               }
0003E2                 1142 _27:
                       1143 ; rs232par.c  254       
                       1144 ; rs232par.c  255                               if ( issemicolon(c))
0003E2 91A43B          1146         CMP.B   R5L,#03BH
0003E5 F21A            1147         BNE     _28
                       1148 ; rs232par.c  256                               {
                       1149 ; rs232par.c  257                                       Cmd[++CmdNdx] = 0;
0003E7 964842rr        1151         MOV.B   ES,#SEG( _CmdNdx )
0003EB 9908rrrr        1152         MOV.W   R0,#SOF( _CmdNdx )
0003EF 8A00            1153         MOV.W   R0,[R0]
0003F1 A901            1154         ADDS.W  R0,#01H
0003F3 8920            1155         MOV.W   R2,R0
0003F5 B930            1156         MOVS.W  R3,#00H
0003F7 964842rr        1157         MOV.B   ES,#SEG( _CmdNdx )
0003FB 9918rrrr        1158         MOV.W   R1,#SOF( _CmdNdx )
0003FF 8A09            1159         MOV.W   [R1],R0
000401 964842rr        1160         MOV.B   ES,#SEG( _Cmd )
000405 B520rrrr        1161         MOV.B   [R2+SOF( _Cmd )],#00H
                       1162 ; rs232par.c  258                                       State = StateP0;
000409 964842rr        1164         MOV.B   ES,#SEG( _State )
00040D 9908rrrr        1165         MOV.W   R0,#SOF( _State )
000411 B200            1166         MOV.B   [R0],#00H
                       1167 ; rs232par.c  259                                       return( PMUS);
000413 910803          1169         MOV.B   R0L,#03H
                       1170         BR      _384
000416 D50F5D         +1170         JMP.L   _384
                       1171 ; rs232par.c  260                               }
00041A                 1173 _28:
                       1174 ; rs232par.c  261       
                       1175 ; rs232par.c  262                               if ( iscolon(c))
00041A 91A43A          1177         CMP.B   R5L,#03AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
00041D F21A            1178         BNE     _29
                       1179 ; rs232par.c  263                               {
                       1180 ; rs232par.c  264                                       Cmd[++CmdNdx] = 0;
00041F 964842rr        1182         MOV.B   ES,#SEG( _CmdNdx )
000423 9908rrrr        1183         MOV.W   R0,#SOF( _CmdNdx )
000427 8A00            1184         MOV.W   R0,[R0]
000429 A901            1185         ADDS.W  R0,#01H
00042B 8920            1186         MOV.W   R2,R0
00042D B930            1187         MOVS.W  R3,#00H
00042F 964842rr        1188         MOV.B   ES,#SEG( _CmdNdx )
000433 9918rrrr        1189         MOV.W   R1,#SOF( _CmdNdx )
000437 8A09            1190         MOV.W   [R1],R0
000439 964842rr        1191         MOV.B   ES,#SEG( _Cmd )
00043D B520rrrr        1192         MOV.B   [R2+SOF( _Cmd )],#00H
                       1193 ; rs232par.c  265                                       State = StateP1;
000441 964842rr        1195         MOV.B   ES,#SEG( _State )
000445 9908rrrr        1196         MOV.W   R0,#SOF( _State )
000449 B201            1197         MOV.B   [R0],#01H
                       1198 ; rs232par.c  266                                       return( NextLevel);
00044B 910801          1200         MOV.B   R0L,#01H
                       1201         BR      _384
00044E D50F41         +1201         JMP.L   _384
                       1202 ; rs232par.c  267                               }
000452                 1204 _29:
                       1205 ; rs232par.c  268       
                       1206 ; rs232par.c  269                               if ( isnewline(c))
000452 91A40A          1208         CMP.B   R5L,#0AH
000455 F21A            1209         BNE     _30
                       1210 ; rs232par.c  270                               {
                       1211 ; rs232par.c  271                                       Cmd[++CmdNdx] = 0;
000457 964842rr        1213         MOV.B   ES,#SEG( _CmdNdx )
00045B 9908rrrr        1214         MOV.W   R0,#SOF( _CmdNdx )
00045F 8A00            1215         MOV.W   R0,[R0]
000461 A901            1216         ADDS.W  R0,#01H
000463 8920            1217         MOV.W   R2,R0
000465 B930            1218         MOVS.W  R3,#00H
000467 964842rr        1219         MOV.B   ES,#SEG( _CmdNdx )
00046B 9918rrrr        1220         MOV.W   R1,#SOF( _CmdNdx )
00046F 8A09            1221         MOV.W   [R1],R0
000471 964842rr        1222         MOV.B   ES,#SEG( _Cmd )
000475 B520rrrr        1223         MOV.B   [R2+SOF( _Cmd )],#00H
                       1224 ; rs232par.c  272                                       State = StateP0;
000479 964842rr        1226         MOV.B   ES,#SEG( _State )
00047D 9908rrrr        1227         MOV.W   R0,#SOF( _State )
000481 B200            1228         MOV.B   [R0],#00H
                       1229 ; rs232par.c  273                                       return( PMT);
000483 910804          1231         MOV.B   R0L,#04H
                       1232         BR      _384
000486 D50F25         +1232         JMP.L   _384
                       1233 ; rs232par.c  274                               }
00048A                 1235 _30:
                       1236 ; rs232par.c  275       
                       1237 ; rs232par.c  276                               SCPIError = InvalidChar;
00048A 964842rr        1239         MOV.B   ES,#SEG( _SCPIError )
00048E 9908rrrr        1240         MOV.W   R0,#SOF( _SCPIError )
000492 BA02            1241         MOV.W   [R0],#02H
                       1242 ; rs232par.c  277                               State = StateERROR;
000494 964842rr        1244         MOV.B   ES,#SEG( _State )
000498 9908rrrr        1245         MOV.W   R0,#SOF( _State )
00049C 92081E          1246         MOV.B   [R0],#01EH
                       1247 ; rs232par.c  278                               break;
                       1249         BR      _329
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
00049F D50F0C         +1249         JMP.L   _329
                       1250 ; rs232par.c  279       
                       1251 ; rs232par.c  280                       case StateP3:
0004A2                 1253 _31:
                       1254 ; rs232par.c  281                               if ( isalpha(c))
0004A2 810A            1256         MOV.B   R0L,R5L
0004A4 9019            1257         SEXT.B  R0H
0004A6 9819            1258         SEXT.W  R1
0004A8 964842rr        1259         MOV.B   ES,#SEG( __ctype_+1 )
0004AC 8500rrrr        1260         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
0004B0 9019            1261         SEXT.B  R0H
0004B2 99050003        1262         AND.W   R0,#03H
0004B6 F318            1263         BEQ     _32
                       1264 ; rs232par.c  282                               {
                       1265 ; rs232par.c  283                                       Cmd[CmdNdx = 0] = c;
0004B8 B910            1267         MOV.W   R1,#00H
0004BA 964842rr        1268         MOV.B   ES,#SEG( _CmdNdx )
0004BE 9908rrrr        1269         MOV.W   R0,#SOF( _CmdNdx )
0004C2 BA00            1270         MOV.W   [R0],#00H
0004C4 8921            1271         MOV.W   R2,R1
0004C6 B930            1272         MOVS.W  R3,#00H
0004C8 964842rr        1273         MOV.B   ES,#SEG( _Cmd )
0004CC 85AArrrr        1274         MOV.B   [R2+SOF( _Cmd )],R5L
                       1275 ; rs232par.c  284                                       NumSuffix = 0;
0004D0 964842rr        1277         MOV.B   ES,#SEG( _NumSuffix )
0004D4 9908rrrr        1278         MOV.W   R0,#SOF( _NumSuffix )
0004D8 BA00            1279         MOV.W   [R0],#00H
                       1280 ; rs232par.c  285                                       State = StateP4;
0004DA 964842rr        1282         MOV.B   ES,#SEG( _State )
0004DE 9908rrrr        1283         MOV.W   R0,#SOF( _State )
0004E2 B204            1284         MOV.B   [R0],#04H
                       1285 ; rs232par.c  286                                       break;
                       1287         BR      _329
0004E4 D50EEA         +1287         JMP.L   _329
                       1288 ; rs232par.c  287                               }
0004E8                 1290 _32:
                       1291 ; rs232par.c  288       
                       1292 ; rs232par.c  289                               SCPIError = InvalidChar;
0004E8 964842rr        1294         MOV.B   ES,#SEG( _SCPIError )
0004EC 9908rrrr        1295         MOV.W   R0,#SOF( _SCPIError )
0004F0 BA02            1296         MOV.W   [R0],#02H
                       1297 ; rs232par.c  290                               State = StateERROR;
0004F2 964842rr        1299         MOV.B   ES,#SEG( _State )
0004F6 9908rrrr        1300         MOV.W   R0,#SOF( _State )
0004FA 92081E          1301         MOV.B   [R0],#01EH
                       1302 ; rs232par.c  291                               break;
                       1304         BR      _329
0004FD D50EDD         +1304         JMP.L   _329
                       1305 ; rs232par.c  292       
                       1306 ; rs232par.c  293                       case StateP4:
000500                 1308 _33:
                       1309 ; rs232par.c  294                               if ( iswhitespace(c))
000500 91A40A          1311         CMP.B   R5L,#0AH
000503 F31C            1312         BEQ     _35
000505 91A420          1313         CMP.B   R5L,#020H
000508 FC19            1314         BGT     _35
                       1315 ; rs232par.c  295                               {
                       1316 ; rs232par.c  296                                       Cmd[++CmdNdx] = 0;
00050A 964842rr        1318         MOV.B   ES,#SEG( _CmdNdx )
00050E 9908rrrr        1319         MOV.W   R0,#SOF( _CmdNdx )
000512 8A00            1320         MOV.W   R0,[R0]
000514 A901            1321         ADDS.W  R0,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
000516 8920            1322         MOV.W   R2,R0
000518 B930            1323         MOVS.W  R3,#00H
00051A 964842rr        1324         MOV.B   ES,#SEG( _CmdNdx )
00051E 9918rrrr        1325         MOV.W   R1,#SOF( _CmdNdx )
000522 8A09            1326         MOV.W   [R1],R0
000524 964842rr        1327         MOV.B   ES,#SEG( _Cmd )
000528 B520rrrr        1328         MOV.B   [R2+SOF( _Cmd )],#00H
                       1329 ; rs232par.c  297                                       State = StateP6;
00052C 964842rr        1331         MOV.B   ES,#SEG( _State )
000530 9908rrrr        1332         MOV.W   R0,#SOF( _State )
000534 B206            1333         MOV.B   [R0],#06H
                       1334 ; rs232par.c  298                                       return( Ready);
000536 910802          1336         MOV.B   R0L,#02H
                       1337         BR      _384
000539 D50ECB         +1337         JMP.L   _384
                       1338 ; rs232par.c  299                               }
00053C                 1340 _35:
                       1341 ; rs232par.c  300       
                       1342 ; rs232par.c  301                               if ( isalpha(c) || isunderscore(c) || isdigit(c))
                            
00053C 810A            1344         MOV.B   R0L,R5L
00053E 9019            1345         SEXT.B  R0H
000540 9819            1346         SEXT.W  R1
000542 964842rr        1347         MOV.B   ES,#SEG( __ctype_+1 )
000546 8500rrrr        1348         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
00054A 911803          1349         MOV.B   R0H,#03H
00054D 5110            1350         AND.B   R0H,R0L
00054F F206            1351         BNE     _37
000551 91A45F          1352         CMP.B   R5L,#05FH
000554 F303            1353         BEQ     _37
000556 910504          1354         AND.B   R0L,#04H
000559 F324            1355         BEQ     _39
000559 F32400          1355         BEQ     _39
00055C                 1356 _37:
                       1357 ; rs232par.c  302                               {
                       1358 ; rs232par.c  303                                       if ( CmdNdx < 11)
00055C 964842rr        1360         MOV.B   ES,#SEG( _CmdNdx )
000560 9908rrrr        1361         MOV.W   R0,#SOF( _CmdNdx )
000564 8A00            1362         MOV.W   R0,[R0]
000566 9904000B        1363         CMP.W   R0,#0BH
00056A F00E            1364         BCC     _38
                       1365 ; rs232par.c  304                                       {
                       1366 ; rs232par.c  305                                               Cmd[++CmdNdx] = c;
00056C A901            1368         ADDS.W  R0,#01H
00056E 8920            1369         MOV.W   R2,R0
000570 B930            1370         MOVS.W  R3,#00H
000572 964842rr        1371         MOV.B   ES,#SEG( _CmdNdx )
000576 9918rrrr        1372         MOV.W   R1,#SOF( _CmdNdx )
00057A 8A09            1373         MOV.W   [R1],R0
00057C 964842rr        1374         MOV.B   ES,#SEG( _Cmd )
000580 85AArrrr        1375         MOV.B   [R2+SOF( _Cmd )],R5L
                       1376 ; rs232par.c  306                                               break;
                       1378         BR      _329
000584 D50E9A         +1378         JMP.L   _329
                       1379 ; rs232par.c  307                                       }
000588                 1381 _38:
                       1382 ; rs232par.c  308                                       SCPIError = PrgmMnemonicTooLong;
000588 964842rr        1384         MOV.B   ES,#SEG( _SCPIError )
00058C 9908rrrr        1385         MOV.W   R0,#SOF( _SCPIError )
000590 9A08000A        1386         MOV.W   [R0],#0AH
                       1387 ; rs232par.c  309                                       State = StateERROR;
000594 964842rr        1389         MOV.B   ES,#SEG( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
000598 9908rrrr        1390         MOV.W   R0,#SOF( _State )
00059C 92081E          1391         MOV.B   [R0],#01EH
                       1392 ; rs232par.c  310                                       break;
                       1394         BR      _329
00059F D50E8C         +1394         JMP.L   _329
                       1395 ; rs232par.c  311                               }
0005A2                 1397 _39:
                       1398 ; rs232par.c  312       
                       1399 ; rs232par.c  313                               if ( isquestionmark(c))
0005A2 91A43F          1401         CMP.B   R5L,#03FH
0005A5 F20D            1402         BNE     _40
                       1403 ; rs232par.c  314                               {
                       1404 ; rs232par.c  315                                       State = StateP5;
0005A7 964842rr        1406         MOV.B   ES,#SEG( _State )
0005AB 9908rrrr        1407         MOV.W   R0,#SOF( _State )
0005AF B205            1408         MOV.B   [R0],#05H
                       1409 ; rs232par.c  316                                       CmdRequest = TRUE;
0005B1 964842rr        1411         MOV.B   ES,#SEG( _CmdRequest )
0005B5 9908rrrr        1412         MOV.W   R0,#SOF( _CmdRequest )
0005B9 9208FF          1413         MOV.B   [R0],#0FFH
                       1414 ; rs232par.c  317                                       break;
                       1416         BR      _329
0005BC D50E7E         +1416         JMP.L   _329
                       1417 ; rs232par.c  318                               }
0005C0                 1419 _40:
                       1420 ; rs232par.c  319       
                       1421 ; rs232par.c  320                               if ( issemicolon(c))
0005C0 91A43B          1423         CMP.B   R5L,#03BH
0005C3 F21A            1424         BNE     _41
                       1425 ; rs232par.c  321                               {
                       1426 ; rs232par.c  322                                       Cmd[++CmdNdx] = 0;
0005C5 964842rr        1428         MOV.B   ES,#SEG( _CmdNdx )
0005C9 9908rrrr        1429         MOV.W   R0,#SOF( _CmdNdx )
0005CD 8A00            1430         MOV.W   R0,[R0]
0005CF A901            1431         ADDS.W  R0,#01H
0005D1 8920            1432         MOV.W   R2,R0
0005D3 B930            1433         MOVS.W  R3,#00H
0005D5 964842rr        1434         MOV.B   ES,#SEG( _CmdNdx )
0005D9 9918rrrr        1435         MOV.W   R1,#SOF( _CmdNdx )
0005DD 8A09            1436         MOV.W   [R1],R0
0005DF 964842rr        1437         MOV.B   ES,#SEG( _Cmd )
0005E3 B520rrrr        1438         MOV.B   [R2+SOF( _Cmd )],#00H
                       1439 ; rs232par.c  323                                       State = StateP0;
0005E7 964842rr        1441         MOV.B   ES,#SEG( _State )
0005EB 9908rrrr        1442         MOV.W   R0,#SOF( _State )
0005EF B200            1443         MOV.B   [R0],#00H
                       1444 ; rs232par.c  324                                       return( PMUS);
0005F1 910803          1446         MOV.B   R0L,#03H
                       1447         BR      _384
0005F4 D50E6E         +1447         JMP.L   _384
                       1448 ; rs232par.c  325                               }
0005F8                 1450 _41:
                       1451 ; rs232par.c  326       
                       1452 ; rs232par.c  327                               if ( isnewline(c))
0005F8 91A40A          1454         CMP.B   R5L,#0AH
0005FB F21A            1455         BNE     _42
                       1456 ; rs232par.c  328                               {
                       1457 ; rs232par.c  329                                       Cmd[++CmdNdx] = 0;
0005FD 964842rr        1459         MOV.B   ES,#SEG( _CmdNdx )
000601 9908rrrr        1460         MOV.W   R0,#SOF( _CmdNdx )
000605 8A00            1461         MOV.W   R0,[R0]
000607 A901            1462         ADDS.W  R0,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
000609 8920            1463         MOV.W   R2,R0
00060B B930            1464         MOVS.W  R3,#00H
00060D 964842rr        1465         MOV.B   ES,#SEG( _CmdNdx )
000611 9918rrrr        1466         MOV.W   R1,#SOF( _CmdNdx )
000615 8A09            1467         MOV.W   [R1],R0
000617 964842rr        1468         MOV.B   ES,#SEG( _Cmd )
00061B B520rrrr        1469         MOV.B   [R2+SOF( _Cmd )],#00H
                       1470 ; rs232par.c  330                                       State = StateP0;
00061F 964842rr        1472         MOV.B   ES,#SEG( _State )
000623 9908rrrr        1473         MOV.W   R0,#SOF( _State )
000627 B200            1474         MOV.B   [R0],#00H
                       1475 ; rs232par.c  331                                       return( PMT);
000629 910804          1477         MOV.B   R0L,#04H
                       1478         BR      _384
00062C D50E52         +1478         JMP.L   _384
                       1479 ; rs232par.c  332                               }
000630                 1481 _42:
                       1482 ; rs232par.c  333       
                       1483 ; rs232par.c  334                               SCPIError = InvalidChar;
000630 964842rr        1485         MOV.B   ES,#SEG( _SCPIError )
000634 9908rrrr        1486         MOV.W   R0,#SOF( _SCPIError )
000638 BA02            1487         MOV.W   [R0],#02H
                       1488 ; rs232par.c  335                               State = StateERROR;
00063A 964842rr        1490         MOV.B   ES,#SEG( _State )
00063E 9908rrrr        1491         MOV.W   R0,#SOF( _State )
000642 92081E          1492         MOV.B   [R0],#01EH
                       1493 ; rs232par.c  336                               break;
                       1495         BR      _329
000645 D50E39         +1495         JMP.L   _329
                       1496 ; rs232par.c  337       
                       1497 ; rs232par.c  338                       case StateP5:
000648                 1499 _43:
                       1500 ; rs232par.c  339                               if ( iswhitespace(c))
000648 91A40A          1502         CMP.B   R5L,#0AH
00064B F31C            1503         BEQ     _45
00064D 91A420          1504         CMP.B   R5L,#020H
000650 FC19            1505         BGT     _45
                       1506 ; rs232par.c  340                               {
                       1507 ; rs232par.c  341                                       Cmd[++CmdNdx] = 0;
000652 964842rr        1509         MOV.B   ES,#SEG( _CmdNdx )
000656 9908rrrr        1510         MOV.W   R0,#SOF( _CmdNdx )
00065A 8A00            1511         MOV.W   R0,[R0]
00065C A901            1512         ADDS.W  R0,#01H
00065E 8920            1513         MOV.W   R2,R0
000660 B930            1514         MOVS.W  R3,#00H
000662 964842rr        1515         MOV.B   ES,#SEG( _CmdNdx )
000666 9918rrrr        1516         MOV.W   R1,#SOF( _CmdNdx )
00066A 8A09            1517         MOV.W   [R1],R0
00066C 964842rr        1518         MOV.B   ES,#SEG( _Cmd )
000670 B520rrrr        1519         MOV.B   [R2+SOF( _Cmd )],#00H
                       1520 ; rs232par.c  342                                       State = StateP6;
000674 964842rr        1522         MOV.B   ES,#SEG( _State )
000678 9908rrrr        1523         MOV.W   R0,#SOF( _State )
00067C B206            1524         MOV.B   [R0],#06H
                       1525 ; rs232par.c  343                                       return( Ready);
00067E 910802          1527         MOV.B   R0L,#02H
                       1528         BR      _384
000681 D50E27         +1528         JMP.L   _384
                       1529 ; rs232par.c  344                               }
000684                 1531 _45:
                       1532 ; rs232par.c  345       
                       1533 ; rs232par.c  346                               if ( issemicolon(c))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
000684 91A43B          1535         CMP.B   R5L,#03BH
000687 F21A            1536         BNE     _46
                       1537 ; rs232par.c  347                               {
                       1538 ; rs232par.c  348                                       Cmd[++CmdNdx] = 0;
000689 964842rr        1540         MOV.B   ES,#SEG( _CmdNdx )
00068D 9908rrrr        1541         MOV.W   R0,#SOF( _CmdNdx )
000691 8A00            1542         MOV.W   R0,[R0]
000693 A901            1543         ADDS.W  R0,#01H
000695 8920            1544         MOV.W   R2,R0
000697 B930            1545         MOVS.W  R3,#00H
000699 964842rr        1546         MOV.B   ES,#SEG( _CmdNdx )
00069D 9918rrrr        1547         MOV.W   R1,#SOF( _CmdNdx )
0006A1 8A09            1548         MOV.W   [R1],R0
0006A3 964842rr        1549         MOV.B   ES,#SEG( _Cmd )
0006A7 B520rrrr        1550         MOV.B   [R2+SOF( _Cmd )],#00H
                       1551 ; rs232par.c  349                                       State = StateP0;
0006AB 964842rr        1553         MOV.B   ES,#SEG( _State )
0006AF 9908rrrr        1554         MOV.W   R0,#SOF( _State )
0006B3 B200            1555         MOV.B   [R0],#00H
                       1556 ; rs232par.c  350                                       return( PMUS);
0006B5 910803          1558         MOV.B   R0L,#03H
                       1559         BR      _384
0006B8 D50E0C         +1559         JMP.L   _384
                       1560 ; rs232par.c  351                               }
0006BC                 1562 _46:
                       1563 ; rs232par.c  352       
                       1564 ; rs232par.c  353                               if ( isnewline(c))
0006BC 91A40A          1566         CMP.B   R5L,#0AH
0006BF F21A            1567         BNE     _47
                       1568 ; rs232par.c  354                               {
                       1569 ; rs232par.c  355                                       Cmd[++CmdNdx] = 0;
0006C1 964842rr        1571         MOV.B   ES,#SEG( _CmdNdx )
0006C5 9908rrrr        1572         MOV.W   R0,#SOF( _CmdNdx )
0006C9 8A00            1573         MOV.W   R0,[R0]
0006CB A901            1574         ADDS.W  R0,#01H
0006CD 8920            1575         MOV.W   R2,R0
0006CF B930            1576         MOVS.W  R3,#00H
0006D1 964842rr        1577         MOV.B   ES,#SEG( _CmdNdx )
0006D5 9918rrrr        1578         MOV.W   R1,#SOF( _CmdNdx )
0006D9 8A09            1579         MOV.W   [R1],R0
0006DB 964842rr        1580         MOV.B   ES,#SEG( _Cmd )
0006DF B520rrrr        1581         MOV.B   [R2+SOF( _Cmd )],#00H
                       1582 ; rs232par.c  356                                       State = StateP0;
0006E3 964842rr        1584         MOV.B   ES,#SEG( _State )
0006E7 9908rrrr        1585         MOV.W   R0,#SOF( _State )
0006EB B200            1586         MOV.B   [R0],#00H
                       1587 ; rs232par.c  357                                       return( PMT);
0006ED 910804          1589         MOV.B   R0L,#04H
                       1590         BR      _384
0006F0 D50DF0         +1590         JMP.L   _384
                       1591 ; rs232par.c  358                               }
0006F4                 1593 _47:
                       1594 ; rs232par.c  359       
                       1595 ; rs232par.c  360                               SCPIError = InvalidChar;
0006F4 964842rr        1597         MOV.B   ES,#SEG( _SCPIError )
0006F8 9908rrrr        1598         MOV.W   R0,#SOF( _SCPIError )
0006FC BA02            1599         MOV.W   [R0],#02H
                       1600 ; rs232par.c  361                               State = StateERROR;
0006FE 964842rr        1602         MOV.B   ES,#SEG( _State )
000702 9908rrrr        1603         MOV.W   R0,#SOF( _State )
000706 92081E          1604         MOV.B   [R0],#01EH
                       1605 ; rs232par.c  362                               break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
                       1607         BR      _329
000709 D50DD7         +1607         JMP.L   _329
                       1608 ; rs232par.c  363       
                       1609 ; rs232par.c  364                       case StateP6:
00070C                 1611 _48:
                       1612 ; rs232par.c  365                               if ( iswhitespace(c))
00070C 91A40A          1614         CMP.B   R5L,#0AH
00070F F30A            1615         BEQ     _50
000711 91A420          1616         CMP.B   R5L,#020H
000714 FC07            1617         BGT     _50
                       1618 ; rs232par.c  366                               {
                       1619 ; rs232par.c  367                                       State = StateP6;
000716 964842rr        1621         MOV.B   ES,#SEG( _State )
00071A 9908rrrr        1622         MOV.W   R0,#SOF( _State )
00071E B206            1623         MOV.B   [R0],#06H
                       1624 ; rs232par.c  368                                       break;
                       1626         BR      _329
000720 D50DCC         +1626         JMP.L   _329
                       1627 ; rs232par.c  369                               }
000724                 1629 _50:
                       1630 ; rs232par.c  370       
                       1631 ; rs232par.c  371                               if ( isalpha(c)) {
000724 814A            1633         MOV.B   R2L,R5L
000726 9059            1634         SEXT.B  R2H
000728 9839            1635         SEXT.W  R3
00072A 9918rrrr        1636         MOV.W   R1,#SEG( __ctype_+1 )
00072E 9908rrrr        1637         MOV.W   R0,#SOF( __ctype_+1 )
000732 0902            1638         ADD.W   R0,R2
000734 964842rr        1639         MOV.B   ES,#SEG( __ctype_+1 )
000738 8542rrrr        1640         MOV.B   R2L,[R2+SOF( __ctype_+1 )]
00073C 9059            1641         SEXT.B  R2H
00073E 99250003        1642         AND.W   R2,#03H
000742 F31D            1643         BEQ     _51
                       1644 ; rs232par.c  372                                       Cmd[CmdNdx = 0] = c;
000744 964842rr        1646         MOV.B   ES,#SEG( _CmdNdx )
000748 9908rrrr        1647         MOV.W   R0,#SOF( _CmdNdx )
00074C BA00            1648         MOV.W   [R0],#00H
00074E B900            1649         MOV.W   R0,#00H
000750 B910            1650         MOVS.W  R1,#00H
000752 964842rr        1651         MOV.B   ES,#SEG( _Cmd )
000756 85A8rrrr        1652         MOV.B   [R0+SOF( _Cmd )],R5L
                       1653 ; rs232par.c  373                                       State = StateC0;
00075A 964842rr        1655         MOV.B   ES,#SEG( _State )
00075E 9908rrrr        1656         MOV.W   R0,#SOF( _State )
000762 920809          1657         MOV.B   [R0],#09H
                       1658 ; rs232par.c  374                                       ParCnt++;
000765 964842rr        1660         MOV.B   ES,#SEG( _ParCnt )
000769 9908rrrr        1661         MOV.W   R0,#SOF( _ParCnt )
00076D 8200            1662         MOV.B   R0L,[R0]
00076F A101            1663         ADDS.B  R0L,#01H
000771 964842rr        1664         MOV.B   ES,#SEG( _ParCnt )
000775 9918rrrr        1665         MOV.W   R1,#SOF( _ParCnt )
000779 8209            1666         MOV.B   [R1],R0L
                       1667 ; rs232par.c  375                                       break;
                       1669         BR      _329
00077B D50D9E         +1669         JMP.L   _329
                       1670 ; rs232par.c  376                               }
00077E                 1672 _51:
                       1673 ; rs232par.c  377       
                       1674 ; rs232par.c  378                               if ( isdigit(c)) {
00077E 862C42          1676         MOV.B   ES,R1L
000781 8200            1677         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
000783 9019            1678         SEXT.B  R0H
000785 99050004        1679         AND.W   R0,#04H
000789 F31E            1680         BEQ     _52
                       1681 ; rs232par.c  379                                       Cmd[CmdNdx = 0] = c;
00078B 964842rr        1683         MOV.B   ES,#SEG( _CmdNdx )
00078F 9908rrrr        1684         MOV.W   R0,#SOF( _CmdNdx )
000793 BA00            1685         MOV.W   [R0],#00H
000795 B900            1686         MOV.W   R0,#00H
000797 B910            1687         MOVS.W  R1,#00H
000799 964842rr        1688         MOV.B   ES,#SEG( _Cmd )
00079D 85A8rrrr        1689         MOV.B   [R0+SOF( _Cmd )],R5L
                       1690 ; rs232par.c  380                                       State = StateD2;
0007A1 964842rr        1692         MOV.B   ES,#SEG( _State )
0007A5 9908rrrr        1693         MOV.W   R0,#SOF( _State )
0007A9 92080C          1694         MOV.B   [R0],#0CH
                       1695 ; rs232par.c  381                                       ParCnt++;
0007AC 964842rr        1697         MOV.B   ES,#SEG( _ParCnt )
0007B0 9908rrrr        1698         MOV.W   R0,#SOF( _ParCnt )
0007B4 8200            1699         MOV.B   R0L,[R0]
0007B6 A101            1700         ADDS.B  R0L,#01H
0007B8 964842rr        1701         MOV.B   ES,#SEG( _ParCnt )
0007BC 9918rrrr        1702         MOV.W   R1,#SOF( _ParCnt )
0007C0 8209            1703         MOV.B   [R1],R0L
                       1704 ; rs232par.c  382                                       break;
                       1706         BR      _329
0007C2 D50D7B         +1706         JMP.L   _329
                       1707 ; rs232par.c  383                               }
0007C6                 1709 _52:
                       1710 ; rs232par.c  384       
                       1711 ; rs232par.c  385                               if ( issemicolon(c)) {
0007C6 91A43B          1713         CMP.B   R5L,#03BH
0007C9 F21A            1714         BNE     _53
                       1715 ; rs232par.c  386                                       Cmd[++CmdNdx] = 0;
0007CB 964842rr        1717         MOV.B   ES,#SEG( _CmdNdx )
0007CF 9908rrrr        1718         MOV.W   R0,#SOF( _CmdNdx )
0007D3 8A00            1719         MOV.W   R0,[R0]
0007D5 A901            1720         ADDS.W  R0,#01H
0007D7 8920            1721         MOV.W   R2,R0
0007D9 B930            1722         MOVS.W  R3,#00H
0007DB 964842rr        1723         MOV.B   ES,#SEG( _CmdNdx )
0007DF 9918rrrr        1724         MOV.W   R1,#SOF( _CmdNdx )
0007E3 8A09            1725         MOV.W   [R1],R0
0007E5 964842rr        1726         MOV.B   ES,#SEG( _Cmd )
0007E9 B520rrrr        1727         MOV.B   [R2+SOF( _Cmd )],#00H
                       1728 ; rs232par.c  387                                       State = StateP0;
0007ED 964842rr        1730         MOV.B   ES,#SEG( _State )
0007F1 9908rrrr        1731         MOV.W   R0,#SOF( _State )
0007F5 B200            1732         MOV.B   [R0],#00H
                       1733 ; rs232par.c  388                                       return( PMUS);
0007F7 910803          1735         MOV.B   R0L,#03H
                       1736         BR      _384
0007FA D50D6B         +1736         JMP.L   _384
                       1737 ; rs232par.c  389                               }
0007FE                 1739 _53:
                       1740 ; rs232par.c  390       
                       1741 ; rs232par.c  391                               if ( isplussign(c) || isminussign(c)) {
0007FE 91A42B          1743         CMP.B   R5L,#02BH
000801 F303            1744         BEQ     _54
000803 91A42D          1745         CMP.B   R5L,#02DH
000806 F21D            1746         BNE     _55
000806 F21D            1746         BNE     _55
000808                 1747 _54:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
                       1748 ; rs232par.c  392                                       Cmd[CmdNdx = 0] = c;
000808 964842rr        1750         MOV.B   ES,#SEG( _CmdNdx )
00080C 9908rrrr        1751         MOV.W   R0,#SOF( _CmdNdx )
000810 BA00            1752         MOV.W   [R0],#00H
000812 B900            1753         MOV.W   R0,#00H
000814 B910            1754         MOVS.W  R1,#00H
000816 964842rr        1755         MOV.B   ES,#SEG( _Cmd )
00081A 85A8rrrr        1756         MOV.B   [R0+SOF( _Cmd )],R5L
                       1757 ; rs232par.c  393                                       State = StateD0;
00081E 964842rr        1759         MOV.B   ES,#SEG( _State )
000822 9908rrrr        1760         MOV.W   R0,#SOF( _State )
000826 92080A          1761         MOV.B   [R0],#0AH
                       1762 ; rs232par.c  394                                       ParCnt++;
000829 964842rr        1764         MOV.B   ES,#SEG( _ParCnt )
00082D 9908rrrr        1765         MOV.W   R0,#SOF( _ParCnt )
000831 8200            1766         MOV.B   R0L,[R0]
000833 A101            1767         ADDS.B  R0L,#01H
000835 964842rr        1768         MOV.B   ES,#SEG( _ParCnt )
000839 9918rrrr        1769         MOV.W   R1,#SOF( _ParCnt )
00083D 8209            1770         MOV.B   [R1],R0L
                       1771 ; rs232par.c  395                                       break;
                       1773         BR      _329
00083F D50D3C         +1773         JMP.L   _329
                       1774 ; rs232par.c  396                               }
000842                 1776 _55:
                       1777 ; rs232par.c  397       
                       1778 ; rs232par.c  398                               if ( isdot(c)) {
000842 91A42E          1780         CMP.B   R5L,#02EH
000845 F21E            1781         BNE     _56
                       1782 ; rs232par.c  399                                       Cmd[CmdNdx = 0] = c;
000847 964842rr        1784         MOV.B   ES,#SEG( _CmdNdx )
00084B 9908rrrr        1785         MOV.W   R0,#SOF( _CmdNdx )
00084F BA00            1786         MOV.W   [R0],#00H
000851 B900            1787         MOV.W   R0,#00H
000853 B910            1788         MOVS.W  R1,#00H
000855 964842rr        1789         MOV.B   ES,#SEG( _Cmd )
000859 85A8rrrr        1790         MOV.B   [R0+SOF( _Cmd )],R5L
                       1791 ; rs232par.c  400                                       State = StateD1;
00085D 964842rr        1793         MOV.B   ES,#SEG( _State )
000861 9908rrrr        1794         MOV.W   R0,#SOF( _State )
000865 92080B          1795         MOV.B   [R0],#0BH
                       1796 ; rs232par.c  401                                       ParCnt++;
000868 964842rr        1798         MOV.B   ES,#SEG( _ParCnt )
00086C 9908rrrr        1799         MOV.W   R0,#SOF( _ParCnt )
000870 8200            1800         MOV.B   R0L,[R0]
000872 A101            1801         ADDS.B  R0L,#01H
000874 964842rr        1802         MOV.B   ES,#SEG( _ParCnt )
000878 9918rrrr        1803         MOV.W   R1,#SOF( _ParCnt )
00087C 8209            1804         MOV.B   [R1],R0L
                       1805 ; rs232par.c  402                                       break;
                       1807         BR      _329
00087E D50D1D         +1807         JMP.L   _329
                       1808 ; rs232par.c  403                               }
000882                 1810 _56:
                       1811 ; rs232par.c  404       
                       1812 ; rs232par.c  405                               if ( isdoubledagger(c)) {
000882 91A423          1814         CMP.B   R5L,#023H
000885 F213            1815         BNE     _57
                       1816 ; rs232par.c  406                                       State = StateDA0;
000887 964842rr        1818         MOV.B   ES,#SEG( _State )
00088B 9908rrrr        1819         MOV.W   R0,#SOF( _State )
00088F 920816          1820         MOV.B   [R0],#016H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
                       1821 ; rs232par.c  407                                       ParCnt++;
000892 964842rr        1823         MOV.B   ES,#SEG( _ParCnt )
000896 9908rrrr        1824         MOV.W   R0,#SOF( _ParCnt )
00089A 8200            1825         MOV.B   R0L,[R0]
00089C A101            1826         ADDS.B  R0L,#01H
00089E 964842rr        1827         MOV.B   ES,#SEG( _ParCnt )
0008A2 9918rrrr        1828         MOV.W   R1,#SOF( _ParCnt )
0008A6 8209            1829         MOV.B   [R1],R0L
                       1830 ; rs232par.c  408                                       break;
                       1832         BR      _329
0008A8 D50D08         +1832         JMP.L   _329
                       1833 ; rs232par.c  409                               }
0008AC                 1835 _57:
                       1836 ; rs232par.c  410       
                       1837 ; rs232par.c  411                               if ( isdoublequote(c)) {
0008AC 91A422          1839         CMP.B   R5L,#022H
0008AF F218            1840         BNE     _58
                       1841 ; rs232par.c  412                                       CmdNdx = 0;
0008B1 964842rr        1843         MOV.B   ES,#SEG( _CmdNdx )
0008B5 9908rrrr        1844         MOV.W   R0,#SOF( _CmdNdx )
0008B9 BA00            1845         MOV.W   [R0],#00H
                       1846 ; rs232par.c  413                                       State = StateS2;
0008BB 964842rr        1848         MOV.B   ES,#SEG( _State )
0008BF 9908rrrr        1849         MOV.W   R0,#SOF( _State )
0008C3 920814          1850         MOV.B   [R0],#014H
                       1851 ; rs232par.c  414                                       ParCnt++;
0008C6 964842rr        1853         MOV.B   ES,#SEG( _ParCnt )
0008CA 9908rrrr        1854         MOV.W   R0,#SOF( _ParCnt )
0008CE 8200            1855         MOV.B   R0L,[R0]
0008D0 A101            1856         ADDS.B  R0L,#01H
0008D2 964842rr        1857         MOV.B   ES,#SEG( _ParCnt )
0008D6 9918rrrr        1858         MOV.W   R1,#SOF( _ParCnt )
0008DA 8209            1859         MOV.B   [R1],R0L
                       1860 ; rs232par.c  415                                       break;
                       1862         BR      _329
0008DC D50CEE         +1862         JMP.L   _329
                       1863 ; rs232par.c  416                               }
0008E0                 1865 _58:
                       1866 ; rs232par.c  417       
                       1867 ; rs232par.c  418                               if ( isquote(c)) {
0008E0 91A427          1869         CMP.B   R5L,#027H
0008E3 F218            1870         BNE     _59
                       1871 ; rs232par.c  419                                       CmdNdx = 0;
0008E5 964842rr        1873         MOV.B   ES,#SEG( _CmdNdx )
0008E9 9908rrrr        1874         MOV.W   R0,#SOF( _CmdNdx )
0008ED BA00            1875         MOV.W   [R0],#00H
                       1876 ; rs232par.c  420                                       State = StateS0;
0008EF 964842rr        1878         MOV.B   ES,#SEG( _State )
0008F3 9908rrrr        1879         MOV.W   R0,#SOF( _State )
0008F7 920812          1880         MOV.B   [R0],#012H
                       1881 ; rs232par.c  421                                       ParCnt++;
0008FA 964842rr        1883         MOV.B   ES,#SEG( _ParCnt )
0008FE 9908rrrr        1884         MOV.W   R0,#SOF( _ParCnt )
000902 8200            1885         MOV.B   R0L,[R0]
000904 A101            1886         ADDS.B  R0L,#01H
000906 964842rr        1887         MOV.B   ES,#SEG( _ParCnt )
00090A 9918rrrr        1888         MOV.W   R1,#SOF( _ParCnt )
00090E 8209            1889         MOV.B   [R1],R0L
                       1890 ; rs232par.c  422                                       break;
                       1892         BR      _329
000910 D50CD4         +1892         JMP.L   _329
                       1893 ; rs232par.c  423                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
000914                 1895 _59:
                       1896 ; rs232par.c  424       
                       1897 ; rs232par.c  425                               if ((c) == '(') {
000914 91A428          1899         CMP.B   R5L,#028H
000917 F213            1900         BNE     _60
                       1901 ; rs232par.c  426                                       State = StateE0;
000919 964842rr        1903         MOV.B   ES,#SEG( _State )
00091D 9908rrrr        1904         MOV.W   R0,#SOF( _State )
000921 92081D          1905         MOV.B   [R0],#01DH
                       1906 ; rs232par.c  427                                       ParCnt++;
000924 964842rr        1908         MOV.B   ES,#SEG( _ParCnt )
000928 9908rrrr        1909         MOV.W   R0,#SOF( _ParCnt )
00092C 8200            1910         MOV.B   R0L,[R0]
00092E A101            1911         ADDS.B  R0L,#01H
000930 964842rr        1912         MOV.B   ES,#SEG( _ParCnt )
000934 9918rrrr        1913         MOV.W   R1,#SOF( _ParCnt )
000938 8209            1914         MOV.B   [R1],R0L
                       1915 ; rs232par.c  428                                       break;
                       1917         BR      _329
00093A D50CBF         +1917         JMP.L   _329
                       1918 ; rs232par.c  429                               }
00093E                 1920 _60:
                       1921 ; rs232par.c  430       
                       1922 ; rs232par.c  431                               if ( isnewline(c)) {
00093E 91A40A          1924         CMP.B   R5L,#0AH
000941 F21A            1925         BNE     _61
                       1926 ; rs232par.c  432                                       Cmd[++CmdNdx] = 0;
000943 964842rr        1928         MOV.B   ES,#SEG( _CmdNdx )
000947 9908rrrr        1929         MOV.W   R0,#SOF( _CmdNdx )
00094B 8A00            1930         MOV.W   R0,[R0]
00094D A901            1931         ADDS.W  R0,#01H
00094F 8920            1932         MOV.W   R2,R0
000951 B930            1933         MOVS.W  R3,#00H
000953 964842rr        1934         MOV.B   ES,#SEG( _CmdNdx )
000957 9918rrrr        1935         MOV.W   R1,#SOF( _CmdNdx )
00095B 8A09            1936         MOV.W   [R1],R0
00095D 964842rr        1937         MOV.B   ES,#SEG( _Cmd )
000961 B520rrrr        1938         MOV.B   [R2+SOF( _Cmd )],#00H
                       1939 ; rs232par.c  433                                       State = StateP0;
000965 964842rr        1941         MOV.B   ES,#SEG( _State )
000969 9908rrrr        1942         MOV.W   R0,#SOF( _State )
00096D B200            1943         MOV.B   [R0],#00H
                       1944 ; rs232par.c  434                                       return( PMT);
00096F 910804          1946         MOV.B   R0L,#04H
                       1947         BR      _384
000972 D50CAF         +1947         JMP.L   _384
                       1948 ; rs232par.c  435                               }
000976                 1950 _61:
                       1951 ; rs232par.c  436       
                       1952 ; rs232par.c  437                               SCPIError = InvalidChar;
000976 964842rr        1954         MOV.B   ES,#SEG( _SCPIError )
00097A 9908rrrr        1955         MOV.W   R0,#SOF( _SCPIError )
00097E BA02            1956         MOV.W   [R0],#02H
                       1957 ; rs232par.c  438                               State = StateERROR;
000980 964842rr        1959         MOV.B   ES,#SEG( _State )
000984 9908rrrr        1960         MOV.W   R0,#SOF( _State )
000988 92081E          1961         MOV.B   [R0],#01EH
                       1962 ; rs232par.c  439                               break;
                       1964         BR      _329
00098B D50C96         +1964         JMP.L   _329
                       1965 ; rs232par.c  440       
                       1966 ; rs232par.c  441                       case StateP7:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
00098E                 1968 _62:
                       1969 ; rs232par.c  442                               if ( iswhitespace(c))
00098E 91A40A          1971         CMP.B   R5L,#0AH
000991 F30A            1972         BEQ     _64
000993 91A420          1973         CMP.B   R5L,#020H
000996 FC07            1974         BGT     _64
                       1975 ; rs232par.c  443                               {
                       1976 ; rs232par.c  444                                       State = StateP7;
000998 964842rr        1978         MOV.B   ES,#SEG( _State )
00099C 9908rrrr        1979         MOV.W   R0,#SOF( _State )
0009A0 B207            1980         MOV.B   [R0],#07H
                       1981 ; rs232par.c  445                                       break;
                       1983         BR      _329
0009A2 D50C8B         +1983         JMP.L   _329
                       1984 ; rs232par.c  446                               }
0009A6                 1986 _64:
                       1987 ; rs232par.c  447       
                       1988 ; rs232par.c  448                               if ( issemicolon(c))
0009A6 91A43B          1990         CMP.B   R5L,#03BH
0009A9 F21A            1991         BNE     _65
                       1992 ; rs232par.c  449                               {
                       1993 ; rs232par.c  450                                       Cmd[++CmdNdx] = 0;
0009AB 964842rr        1995         MOV.B   ES,#SEG( _CmdNdx )
0009AF 9908rrrr        1996         MOV.W   R0,#SOF( _CmdNdx )
0009B3 8A00            1997         MOV.W   R0,[R0]
0009B5 A901            1998         ADDS.W  R0,#01H
0009B7 8920            1999         MOV.W   R2,R0
0009B9 B930            2000         MOVS.W  R3,#00H
0009BB 964842rr        2001         MOV.B   ES,#SEG( _CmdNdx )
0009BF 9918rrrr        2002         MOV.W   R1,#SOF( _CmdNdx )
0009C3 8A09            2003         MOV.W   [R1],R0
0009C5 964842rr        2004         MOV.B   ES,#SEG( _Cmd )
0009C9 B520rrrr        2005         MOV.B   [R2+SOF( _Cmd )],#00H
                       2006 ; rs232par.c  451                                       State = StateP0;
0009CD 964842rr        2008         MOV.B   ES,#SEG( _State )
0009D1 9908rrrr        2009         MOV.W   R0,#SOF( _State )
0009D5 B200            2010         MOV.B   [R0],#00H
                       2011 ; rs232par.c  452                                       return( PMUS);
0009D7 910803          2013         MOV.B   R0L,#03H
                       2014         BR      _384
0009DA D50C7B         +2014         JMP.L   _384
                       2015 ; rs232par.c  453                               }
0009DE                 2017 _65:
                       2018 ; rs232par.c  454       
                       2019 ; rs232par.c  455                               if ( iscomma(c))
0009DE 91A42C          2021         CMP.B   R5L,#02CH
0009E1 F21A            2022         BNE     _66
                       2023 ; rs232par.c  456                               {
                       2024 ; rs232par.c  457                                       Cmd[++CmdNdx] = c;
0009E3 964842rr        2026         MOV.B   ES,#SEG( _CmdNdx )
0009E7 9908rrrr        2027         MOV.W   R0,#SOF( _CmdNdx )
0009EB 8A00            2028         MOV.W   R0,[R0]
0009ED A901            2029         ADDS.W  R0,#01H
0009EF 8920            2030         MOV.W   R2,R0
0009F1 B930            2031         MOVS.W  R3,#00H
0009F3 964842rr        2032         MOV.B   ES,#SEG( _CmdNdx )
0009F7 9918rrrr        2033         MOV.W   R1,#SOF( _CmdNdx )
0009FB 8A09            2034         MOV.W   [R1],R0
0009FD 964842rr        2035         MOV.B   ES,#SEG( _Cmd )
000A01 85AArrrr        2036         MOV.B   [R2+SOF( _Cmd )],R5L
                       2037 ; rs232par.c  458                                       State = StateP8;
000A05 964842rr        2039         MOV.B   ES,#SEG( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
000A09 9908rrrr        2040         MOV.W   R0,#SOF( _State )
000A0D 920808          2041         MOV.B   [R0],#08H
                       2042 ; rs232par.c  459                                       return( Ready);
000A10 910802          2044         MOV.B   R0L,#02H
                       2045         BR      _384
000A13 D50C5E         +2045         JMP.L   _384
                       2046 ; rs232par.c  460                               }
000A16                 2048 _66:
                       2049 ; rs232par.c  461       
                       2050 ; rs232par.c  462                               if ( isnewline(c))
000A16 91A40A          2052         CMP.B   R5L,#0AH
000A19 F21A            2053         BNE     _67
                       2054 ; rs232par.c  463                               {
                       2055 ; rs232par.c  464                                       Cmd[++CmdNdx] = 0;
000A1B 964842rr        2057         MOV.B   ES,#SEG( _CmdNdx )
000A1F 9908rrrr        2058         MOV.W   R0,#SOF( _CmdNdx )
000A23 8A00            2059         MOV.W   R0,[R0]
000A25 A901            2060         ADDS.W  R0,#01H
000A27 8920            2061         MOV.W   R2,R0
000A29 B930            2062         MOVS.W  R3,#00H
000A2B 964842rr        2063         MOV.B   ES,#SEG( _CmdNdx )
000A2F 9918rrrr        2064         MOV.W   R1,#SOF( _CmdNdx )
000A33 8A09            2065         MOV.W   [R1],R0
000A35 964842rr        2066         MOV.B   ES,#SEG( _Cmd )
000A39 B520rrrr        2067         MOV.B   [R2+SOF( _Cmd )],#00H
                       2068 ; rs232par.c  465                                       State = StateP0;
000A3D 964842rr        2070         MOV.B   ES,#SEG( _State )
000A41 9908rrrr        2071         MOV.W   R0,#SOF( _State )
000A45 B200            2072         MOV.B   [R0],#00H
                       2073 ; rs232par.c  466                                       return( PMT);
000A47 910804          2075         MOV.B   R0L,#04H
                       2076         BR      _384
000A4A D50C43         +2076         JMP.L   _384
                       2077 ; rs232par.c  467                               }
000A4E                 2079 _67:
                       2080 ; rs232par.c  468       
                       2081 ; rs232par.c  469                               SCPIError = InvalidChar;
000A4E 964842rr        2083         MOV.B   ES,#SEG( _SCPIError )
000A52 9908rrrr        2084         MOV.W   R0,#SOF( _SCPIError )
000A56 BA02            2085         MOV.W   [R0],#02H
                       2086 ; rs232par.c  470                               State = StateERROR;
000A58 964842rr        2088         MOV.B   ES,#SEG( _State )
000A5C 9908rrrr        2089         MOV.W   R0,#SOF( _State )
000A60 92081E          2090         MOV.B   [R0],#01EH
                       2091 ; rs232par.c  471                               break;
                       2093         BR      _329
000A63 D50C2A         +2093         JMP.L   _329
                       2094 ; rs232par.c  472       
                       2095 ; rs232par.c  473                       case StateP8:
000A66                 2097 _68:
                       2098 ; rs232par.c  474                               if ( iswhitespace(c))
000A66 91A40A          2100         CMP.B   R5L,#0AH
000A69 F30A            2101         BEQ     _70
000A6B 91A420          2102         CMP.B   R5L,#020H
000A6E FC07            2103         BGT     _70
                       2104 ; rs232par.c  475                               {
                       2105 ; rs232par.c  476                                       State = StateP8;
000A70 964842rr        2107         MOV.B   ES,#SEG( _State )
000A74 9908rrrr        2108         MOV.W   R0,#SOF( _State )
000A78 920808          2109         MOV.B   [R0],#08H
                       2110 ; rs232par.c  477                                       break;
                       2112         BR      _329
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
000A7B D50C1E         +2112         JMP.L   _329
                       2113 ; rs232par.c  478                               }
000A7E                 2115 _70:
                       2116 ; rs232par.c  479       
                       2117 ; rs232par.c  480                               if ( isalpha(c))
000A7E 814A            2119         MOV.B   R2L,R5L
000A80 9059            2120         SEXT.B  R2H
000A82 9839            2121         SEXT.W  R3
000A84 9918rrrr        2122         MOV.W   R1,#SEG( __ctype_+1 )
000A88 9908rrrr        2123         MOV.W   R0,#SOF( __ctype_+1 )
000A8C 0902            2124         ADD.W   R0,R2
000A8E 964842rr        2125         MOV.B   ES,#SEG( __ctype_+1 )
000A92 8542rrrr        2126         MOV.B   R2L,[R2+SOF( __ctype_+1 )]
000A96 9059            2127         SEXT.B  R2H
000A98 99250003        2128         AND.W   R2,#03H
000A9C F323            2129         BEQ     _71
                       2130 ; rs232par.c  481                               {
                       2131 ; rs232par.c  482                                       Cmd[++CmdNdx] = c;
000A9E 964842rr        2133         MOV.B   ES,#SEG( _CmdNdx )
000AA2 9908rrrr        2134         MOV.W   R0,#SOF( _CmdNdx )
000AA6 8A00            2135         MOV.W   R0,[R0]
000AA8 A901            2136         ADDS.W  R0,#01H
000AAA 8920            2137         MOV.W   R2,R0
000AAC B930            2138         MOVS.W  R3,#00H
000AAE 964842rr        2139         MOV.B   ES,#SEG( _CmdNdx )
000AB2 9918rrrr        2140         MOV.W   R1,#SOF( _CmdNdx )
000AB6 8A09            2141         MOV.W   [R1],R0
000AB8 964842rr        2142         MOV.B   ES,#SEG( _Cmd )
000ABC 85AArrrr        2143         MOV.B   [R2+SOF( _Cmd )],R5L
                       2144 ; rs232par.c  483                                       State = StateC0;
000AC0 964842rr        2146         MOV.B   ES,#SEG( _State )
000AC4 9908rrrr        2147         MOV.W   R0,#SOF( _State )
000AC8 920809          2148         MOV.B   [R0],#09H
                       2149 ; rs232par.c  484                                       ParCnt++;
000ACB 964842rr        2151         MOV.B   ES,#SEG( _ParCnt )
000ACF 9908rrrr        2152         MOV.W   R0,#SOF( _ParCnt )
000AD3 8200            2153         MOV.B   R0L,[R0]
000AD5 A101            2154         ADDS.B  R0L,#01H
000AD7 964842rr        2155         MOV.B   ES,#SEG( _ParCnt )
000ADB 9918rrrr        2156         MOV.W   R1,#SOF( _ParCnt )
000ADF 8209            2157         MOV.B   [R1],R0L
                       2158 ; rs232par.c  485                                       break;
                       2160         BR      _329
000AE1 D50BEB         +2160         JMP.L   _329
                       2161 ; rs232par.c  486                               }
000AE4                 2163 _71:
                       2164 ; rs232par.c  487       
                       2165 ; rs232par.c  488                               if ( isdigit(c))
000AE4 862C42          2167         MOV.B   ES,R1L
000AE7 8200            2168         MOV.B   R0L,[R0]
000AE9 9019            2169         SEXT.B  R0H
000AEB 99050004        2170         AND.W   R0,#04H
000AEF F324            2171         BEQ     _72
                       2172 ; rs232par.c  489                               {
                       2173 ; rs232par.c  490                                       Cmd[++CmdNdx] = c;
000AF1 964842rr        2175         MOV.B   ES,#SEG( _CmdNdx )
000AF5 9908rrrr        2176         MOV.W   R0,#SOF( _CmdNdx )
000AF9 8A00            2177         MOV.W   R0,[R0]
000AFB A901            2178         ADDS.W  R0,#01H
000AFD 8920            2179         MOV.W   R2,R0
000AFF B930            2180         MOVS.W  R3,#00H
000B01 964842rr        2181         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
000B05 9918rrrr        2182         MOV.W   R1,#SOF( _CmdNdx )
000B09 8A09            2183         MOV.W   [R1],R0
000B0B 964842rr        2184         MOV.B   ES,#SEG( _Cmd )
000B0F 85AArrrr        2185         MOV.B   [R2+SOF( _Cmd )],R5L
                       2186 ; rs232par.c  491                                       State = StateD2;
000B13 964842rr        2188         MOV.B   ES,#SEG( _State )
000B17 9908rrrr        2189         MOV.W   R0,#SOF( _State )
000B1B 92080C          2190         MOV.B   [R0],#0CH
                       2191 ; rs232par.c  492                                       ParCnt++;
000B1E 964842rr        2193         MOV.B   ES,#SEG( _ParCnt )
000B22 9908rrrr        2194         MOV.W   R0,#SOF( _ParCnt )
000B26 8200            2195         MOV.B   R0L,[R0]
000B28 A101            2196         ADDS.B  R0L,#01H
000B2A 964842rr        2197         MOV.B   ES,#SEG( _ParCnt )
000B2E 9918rrrr        2198         MOV.W   R1,#SOF( _ParCnt )
000B32 8209            2199         MOV.B   [R1],R0L
                       2200 ; rs232par.c  493                                       break;
                       2202         BR      _329
000B34 D50BC2         +2202         JMP.L   _329
                       2203 ; rs232par.c  494                               }
000B38                 2205 _72:
                       2206 ; rs232par.c  495       
                       2207 ; rs232par.c  496                               if ( isplussign(c) || isminussign(c))
000B38 91A42B          2209         CMP.B   R5L,#02BH
000B3B F303            2210         BEQ     _73
000B3D 91A42D          2211         CMP.B   R5L,#02DH
000B40 F223            2212         BNE     _74
000B40 F223            2212         BNE     _74
000B42                 2213 _73:
                       2214 ; rs232par.c  497                               {
                       2215 ; rs232par.c  498                                       Cmd[++CmdNdx] = c;
000B42 964842rr        2217         MOV.B   ES,#SEG( _CmdNdx )
000B46 9908rrrr        2218         MOV.W   R0,#SOF( _CmdNdx )
000B4A 8A00            2219         MOV.W   R0,[R0]
000B4C A901            2220         ADDS.W  R0,#01H
000B4E 8920            2221         MOV.W   R2,R0
000B50 B930            2222         MOVS.W  R3,#00H
000B52 964842rr        2223         MOV.B   ES,#SEG( _CmdNdx )
000B56 9918rrrr        2224         MOV.W   R1,#SOF( _CmdNdx )
000B5A 8A09            2225         MOV.W   [R1],R0
000B5C 964842rr        2226         MOV.B   ES,#SEG( _Cmd )
000B60 85AArrrr        2227         MOV.B   [R2+SOF( _Cmd )],R5L
                       2228 ; rs232par.c  499                                       State = StateD0;
000B64 964842rr        2230         MOV.B   ES,#SEG( _State )
000B68 9908rrrr        2231         MOV.W   R0,#SOF( _State )
000B6C 92080A          2232         MOV.B   [R0],#0AH
                       2233 ; rs232par.c  500                                       ParCnt++;
000B6F 964842rr        2235         MOV.B   ES,#SEG( _ParCnt )
000B73 9908rrrr        2236         MOV.W   R0,#SOF( _ParCnt )
000B77 8200            2237         MOV.B   R0L,[R0]
000B79 A101            2238         ADDS.B  R0L,#01H
000B7B 964842rr        2239         MOV.B   ES,#SEG( _ParCnt )
000B7F 9918rrrr        2240         MOV.W   R1,#SOF( _ParCnt )
000B83 8209            2241         MOV.B   [R1],R0L
                       2242 ; rs232par.c  501                                       break;
                       2244         BR      _329
000B85 D50B99         +2244         JMP.L   _329
                       2245 ; rs232par.c  502                               }
000B88                 2247 _74:
                       2248 ; rs232par.c  503       
                       2249 ; rs232par.c  504                               if ( isdot(c))
000B88 91A42E          2251         CMP.B   R5L,#02EH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
000B8B F224            2252         BNE     _75
                       2253 ; rs232par.c  505                               {
                       2254 ; rs232par.c  506                                       Cmd[++CmdNdx] = c;
000B8D 964842rr        2256         MOV.B   ES,#SEG( _CmdNdx )
000B91 9908rrrr        2257         MOV.W   R0,#SOF( _CmdNdx )
000B95 8A00            2258         MOV.W   R0,[R0]
000B97 A901            2259         ADDS.W  R0,#01H
000B99 8920            2260         MOV.W   R2,R0
000B9B B930            2261         MOVS.W  R3,#00H
000B9D 964842rr        2262         MOV.B   ES,#SEG( _CmdNdx )
000BA1 9918rrrr        2263         MOV.W   R1,#SOF( _CmdNdx )
000BA5 8A09            2264         MOV.W   [R1],R0
000BA7 964842rr        2265         MOV.B   ES,#SEG( _Cmd )
000BAB 85AArrrr        2266         MOV.B   [R2+SOF( _Cmd )],R5L
                       2267 ; rs232par.c  507                                       State = StateD1;
000BAF 964842rr        2269         MOV.B   ES,#SEG( _State )
000BB3 9908rrrr        2270         MOV.W   R0,#SOF( _State )
000BB7 92080B          2271         MOV.B   [R0],#0BH
                       2272 ; rs232par.c  508                                       ParCnt++;
000BBA 964842rr        2274         MOV.B   ES,#SEG( _ParCnt )
000BBE 9908rrrr        2275         MOV.W   R0,#SOF( _ParCnt )
000BC2 8200            2276         MOV.B   R0L,[R0]
000BC4 A101            2277         ADDS.B  R0L,#01H
000BC6 964842rr        2278         MOV.B   ES,#SEG( _ParCnt )
000BCA 9918rrrr        2279         MOV.W   R1,#SOF( _ParCnt )
000BCE 8209            2280         MOV.B   [R1],R0L
                       2281 ; rs232par.c  509                                       break;
                       2283         BR      _329
000BD0 D50B74         +2283         JMP.L   _329
                       2284 ; rs232par.c  510                               }
000BD4                 2286 _75:
                       2287 ; rs232par.c  511       
                       2288 ; rs232par.c  512                               if ( isdoubledagger(c))
000BD4 91A423          2290         CMP.B   R5L,#023H
000BD7 F213            2291         BNE     _76
                       2292 ; rs232par.c  513                               {
                       2293 ; rs232par.c  514                                       State = StateDA0;
000BD9 964842rr        2295         MOV.B   ES,#SEG( _State )
000BDD 9908rrrr        2296         MOV.W   R0,#SOF( _State )
000BE1 920816          2297         MOV.B   [R0],#016H
                       2298 ; rs232par.c  515                                       ParCnt++;
000BE4 964842rr        2300         MOV.B   ES,#SEG( _ParCnt )
000BE8 9908rrrr        2301         MOV.W   R0,#SOF( _ParCnt )
000BEC 8200            2302         MOV.B   R0L,[R0]
000BEE A101            2303         ADDS.B  R0L,#01H
000BF0 964842rr        2304         MOV.B   ES,#SEG( _ParCnt )
000BF4 9918rrrr        2305         MOV.W   R1,#SOF( _ParCnt )
000BF8 8209            2306         MOV.B   [R1],R0L
                       2307 ; rs232par.c  516                                       break;
                       2309         BR      _329
000BFA D50B5F         +2309         JMP.L   _329
                       2310 ; rs232par.c  517                               }
000BFE                 2312 _76:
                       2313 ; rs232par.c  518       
                       2314 ; rs232par.c  519                               if ( isdoublequote(c))
000BFE 91A422          2316         CMP.B   R5L,#022H
000C01 F21E            2317         BNE     _77
                       2318 ; rs232par.c  520                               {                                                
                                                                                    
                       2319 ; rs232par.c  521                                       CmdNdx++;
000C03 964842rr        2321         MOV.B   ES,#SEG( _CmdNdx )
000C07 9908rrrr        2322         MOV.W   R0,#SOF( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
000C0B 8A00            2323         MOV.W   R0,[R0]
000C0D A901            2324         ADDS.W  R0,#01H
000C0F 964842rr        2325         MOV.B   ES,#SEG( _CmdNdx )
000C13 9918rrrr        2326         MOV.W   R1,#SOF( _CmdNdx )
000C17 8A09            2327         MOV.W   [R1],R0
                       2328 ; rs232par.c  522                                       State = StateS2;
000C19 964842rr        2330         MOV.B   ES,#SEG( _State )
000C1D 9908rrrr        2331         MOV.W   R0,#SOF( _State )
000C21 920814          2332         MOV.B   [R0],#014H
                       2333 ; rs232par.c  523                                       ParCnt++;
000C24 964842rr        2335         MOV.B   ES,#SEG( _ParCnt )
000C28 9908rrrr        2336         MOV.W   R0,#SOF( _ParCnt )
000C2C 8200            2337         MOV.B   R0L,[R0]
000C2E A101            2338         ADDS.B  R0L,#01H
000C30 964842rr        2339         MOV.B   ES,#SEG( _ParCnt )
000C34 9918rrrr        2340         MOV.W   R1,#SOF( _ParCnt )
000C38 8209            2341         MOV.B   [R1],R0L
                       2342 ; rs232par.c  524                                       break;
                       2344         BR      _329
000C3A D50B3F         +2344         JMP.L   _329
                       2345 ; rs232par.c  525                               }
000C3E                 2347 _77:
                       2348 ; rs232par.c  526       
                       2349 ; rs232par.c  527                               if ( isquote(c)) {
000C3E 91A427          2351         CMP.B   R5L,#027H
000C41 F21E            2352         BNE     _78
                       2353 ; rs232par.c  528                                       CmdNdx++;
000C43 964842rr        2355         MOV.B   ES,#SEG( _CmdNdx )
000C47 9908rrrr        2356         MOV.W   R0,#SOF( _CmdNdx )
000C4B 8A00            2357         MOV.W   R0,[R0]
000C4D A901            2358         ADDS.W  R0,#01H
000C4F 964842rr        2359         MOV.B   ES,#SEG( _CmdNdx )
000C53 9918rrrr        2360         MOV.W   R1,#SOF( _CmdNdx )
000C57 8A09            2361         MOV.W   [R1],R0
                       2362 ; rs232par.c  529                                       State = StateS0;
000C59 964842rr        2364         MOV.B   ES,#SEG( _State )
000C5D 9908rrrr        2365         MOV.W   R0,#SOF( _State )
000C61 920812          2366         MOV.B   [R0],#012H
                       2367 ; rs232par.c  530                                       ParCnt++;
000C64 964842rr        2369         MOV.B   ES,#SEG( _ParCnt )
000C68 9908rrrr        2370         MOV.W   R0,#SOF( _ParCnt )
000C6C 8200            2371         MOV.B   R0L,[R0]
000C6E A101            2372         ADDS.B  R0L,#01H
000C70 964842rr        2373         MOV.B   ES,#SEG( _ParCnt )
000C74 9918rrrr        2374         MOV.W   R1,#SOF( _ParCnt )
000C78 8209            2375         MOV.B   [R1],R0L
                       2376 ; rs232par.c  531                                       break;
                       2378         BR      _329
000C7A D50B1F         +2378         JMP.L   _329
                       2379 ; rs232par.c  532                               }
000C7E                 2381 _78:
                       2382 ; rs232par.c  533       
                       2383 ; rs232par.c  534                               if ( (c) == '(')
000C7E 91A428          2385         CMP.B   R5L,#028H
000C81 F213            2386         BNE     _79
                       2387 ; rs232par.c  535                               {
                       2388 ; rs232par.c  536                                       State = StateE0;
000C83 964842rr        2390         MOV.B   ES,#SEG( _State )
000C87 9908rrrr        2391         MOV.W   R0,#SOF( _State )
000C8B 92081D          2392         MOV.B   [R0],#01DH
                       2393 ; rs232par.c  537                                       ParCnt++;
000C8E 964842rr        2395         MOV.B   ES,#SEG( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  31

ADDR   CODE            LINE SOURCELINE
000C92 9908rrrr        2396         MOV.W   R0,#SOF( _ParCnt )
000C96 8200            2397         MOV.B   R0L,[R0]
000C98 A101            2398         ADDS.B  R0L,#01H
000C9A 964842rr        2399         MOV.B   ES,#SEG( _ParCnt )
000C9E 9918rrrr        2400         MOV.W   R1,#SOF( _ParCnt )
000CA2 8209            2401         MOV.B   [R1],R0L
                       2402 ; rs232par.c  538                                       break;
                       2404         BR      _329
000CA4 D50B0A         +2404         JMP.L   _329
                       2405 ; rs232par.c  539                               }
000CA8                 2407 _79:
                       2408 ; rs232par.c  540       
                       2409 ; rs232par.c  541                               SCPIError = InvalidChar;
000CA8 964842rr        2411         MOV.B   ES,#SEG( _SCPIError )
000CAC 9908rrrr        2412         MOV.W   R0,#SOF( _SCPIError )
000CB0 BA02            2413         MOV.W   [R0],#02H
                       2414 ; rs232par.c  542                               State = StateERROR;
000CB2 964842rr        2416         MOV.B   ES,#SEG( _State )
000CB6 9908rrrr        2417         MOV.W   R0,#SOF( _State )
000CBA 92081E          2418         MOV.B   [R0],#01EH
                       2419 ; rs232par.c  543                               break;
                       2421         BR      _329
000CBD D50AFD         +2421         JMP.L   _329
                       2422 ; rs232par.c  544       
                       2423 ; rs232par.c  545                       case StateC0:                                            
                                     // CHARACTER PROGRAM DATA
000CC0                 2425 _80:
                       2426 ; rs232par.c  546                               if ( iswhitespace(c)) {
000CC0 91A40A          2428         CMP.B   R5L,#0AH
000CC3 F315            2429         BEQ     _82
000CC5 91A420          2430         CMP.B   R5L,#020H
000CC8 FC12            2431         BGT     _82
                       2432 ; rs232par.c  547                                       State = StateP7;
000CCA 964842rr        2434         MOV.B   ES,#SEG( _State )
000CCE 9908rrrr        2435         MOV.W   R0,#SOF( _State )
000CD2 B207            2436         MOV.B   [R0],#07H
                       2437 ; rs232par.c  548                                       
                       2438 ; rs232par.c  549                                       ParType[ParCnt] = P_Char;
000CD4 964842rr        2440         MOV.B   ES,#SEG( _ParCnt )
000CD8 9908rrrr        2441         MOV.W   R0,#SOF( _ParCnt )
000CDC 8200            2442         MOV.B   R0L,[R0]
000CDE B110            2443         MOVS.B  R0H,#00H
000CE0 B910            2444         MOVS.W  R1,#00H
000CE2 964842rr        2445         MOV.B   ES,#SEG( _ParType )
000CE6 B501rrrr        2446         MOV.B   [R0+SOF( _ParType )],#01H
                       2447 ; rs232par.c  550                                       break;
                       2449         BR      _329
000CEA D50AE7         +2449         JMP.L   _329
                       2450 ; rs232par.c  551                               }
000CEE                 2452 _82:
                       2453 ; rs232par.c  552       
                       2454 ; rs232par.c  553                               if ( isalpha(c) || isunderscore(c) || isdigit(c))
                             {
000CEE 810A            2456         MOV.B   R0L,R5L
000CF0 9019            2457         SEXT.B  R0H
000CF2 9819            2458         SEXT.W  R1
000CF4 964842rr        2459         MOV.B   ES,#SEG( __ctype_+1 )
000CF8 8500rrrr        2460         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
000CFC 911803          2461         MOV.B   R0H,#03H
000CFF 5110            2462         AND.B   R0H,R0L
000D01 F206            2463         BNE     _84
000D03 91A45F          2464         CMP.B   R5L,#05FH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  32

ADDR   CODE            LINE SOURCELINE
000D06 F303            2465         BEQ     _84
000D08 910504          2466         AND.B   R0L,#04H
000D0B F324            2467         BEQ     _86
000D0B F32400          2467         BEQ     _86
000D0E                 2468 _84:
                       2469 ; rs232par.c  554                                       if ( CmdNdx < 11) {
000D0E 964842rr        2471         MOV.B   ES,#SEG( _CmdNdx )
000D12 9908rrrr        2472         MOV.W   R0,#SOF( _CmdNdx )
000D16 8A00            2473         MOV.W   R0,[R0]
000D18 9904000B        2474         CMP.W   R0,#0BH
000D1C F00E            2475         BCC     _85
                       2476 ; rs232par.c  555                                               Cmd[++CmdNdx] = c;
000D1E A901            2478         ADDS.W  R0,#01H
000D20 8920            2479         MOV.W   R2,R0
000D22 B930            2480         MOVS.W  R3,#00H
000D24 964842rr        2481         MOV.B   ES,#SEG( _CmdNdx )
000D28 9918rrrr        2482         MOV.W   R1,#SOF( _CmdNdx )
000D2C 8A09            2483         MOV.W   [R1],R0
000D2E 964842rr        2484         MOV.B   ES,#SEG( _Cmd )
000D32 85AArrrr        2485         MOV.B   [R2+SOF( _Cmd )],R5L
                       2486 ; rs232par.c  556                                               break;
                       2488         BR      _329
000D36 D50AC1         +2488         JMP.L   _329
                       2489 ; rs232par.c  557                                       }
000D3A                 2491 _85:
                       2492 ; rs232par.c  558                                       SCPIError = PrgmMnemonicTooLong;
000D3A 964842rr        2494         MOV.B   ES,#SEG( _SCPIError )
000D3E 9908rrrr        2495         MOV.W   R0,#SOF( _SCPIError )
000D42 9A08000A        2496         MOV.W   [R0],#0AH
                       2497 ; rs232par.c  559                                       State = StateERROR;
000D46 964842rr        2499         MOV.B   ES,#SEG( _State )
000D4A 9908rrrr        2500         MOV.W   R0,#SOF( _State )
000D4E 92081E          2501         MOV.B   [R0],#01EH
                       2502 ; rs232par.c  560                                       break;
                       2504         BR      _329
000D51 D50AB3         +2504         JMP.L   _329
                       2505 ; rs232par.c  561                               }
000D54                 2507 _86:
                       2508 ; rs232par.c  562       
                       2509 ; rs232par.c  563                               if ( issemicolon(c))
000D54 91A43B          2511         CMP.B   R5L,#03BH
000D57 F225            2512         BNE     _87
                       2513 ; rs232par.c  564                               {
                       2514 ; rs232par.c  565                                       Cmd[++CmdNdx] = 0;
000D59 964842rr        2516         MOV.B   ES,#SEG( _CmdNdx )
000D5D 9908rrrr        2517         MOV.W   R0,#SOF( _CmdNdx )
000D61 8A00            2518         MOV.W   R0,[R0]
000D63 A901            2519         ADDS.W  R0,#01H
000D65 8920            2520         MOV.W   R2,R0
000D67 B930            2521         MOVS.W  R3,#00H
000D69 964842rr        2522         MOV.B   ES,#SEG( _CmdNdx )
000D6D 9918rrrr        2523         MOV.W   R1,#SOF( _CmdNdx )
000D71 8A09            2524         MOV.W   [R1],R0
000D73 964842rr        2525         MOV.B   ES,#SEG( _Cmd )
000D77 B520rrrr        2526         MOV.B   [R2+SOF( _Cmd )],#00H
                       2527 ; rs232par.c  566                                       State = StateP0;
000D7B 964842rr        2529         MOV.B   ES,#SEG( _State )
000D7F 9908rrrr        2530         MOV.W   R0,#SOF( _State )
000D83 B200            2531         MOV.B   [R0],#00H
                       2532 ; rs232par.c  567                                       ParType[ParCnt] = P_Char;
000D85 964842rr        2534         MOV.B   ES,#SEG( _ParCnt )
000D89 9908rrrr        2535         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  33

ADDR   CODE            LINE SOURCELINE
000D8D 8200            2536         MOV.B   R0L,[R0]
000D8F B110            2537         MOVS.B  R0H,#00H
000D91 B910            2538         MOVS.W  R1,#00H
000D93 964842rr        2539         MOV.B   ES,#SEG( _ParType )
000D97 B501rrrr        2540         MOV.B   [R0+SOF( _ParType )],#01H
                       2541 ; rs232par.c  568                                       return( PMUS);
000D9B 910803          2543         MOV.B   R0L,#03H
                       2544         BR      _384
000D9E D50A99         +2544         JMP.L   _384
                       2545 ; rs232par.c  569                               }
000DA2                 2547 _87:
                       2548 ; rs232par.c  570       
                       2549 ; rs232par.c  571                               if ( iscomma(c))
000DA2 91A42C          2551         CMP.B   R5L,#02CH
000DA5 F225            2552         BNE     _88
                       2553 ; rs232par.c  572                               {
                       2554 ; rs232par.c  573                                       Cmd[++CmdNdx] = c;
000DA7 964842rr        2556         MOV.B   ES,#SEG( _CmdNdx )
000DAB 9908rrrr        2557         MOV.W   R0,#SOF( _CmdNdx )
000DAF 8A00            2558         MOV.W   R0,[R0]
000DB1 A901            2559         ADDS.W  R0,#01H
000DB3 8920            2560         MOV.W   R2,R0
000DB5 B930            2561         MOVS.W  R3,#00H
000DB7 964842rr        2562         MOV.B   ES,#SEG( _CmdNdx )
000DBB 9918rrrr        2563         MOV.W   R1,#SOF( _CmdNdx )
000DBF 8A09            2564         MOV.W   [R1],R0
000DC1 964842rr        2565         MOV.B   ES,#SEG( _Cmd )
000DC5 85AArrrr        2566         MOV.B   [R2+SOF( _Cmd )],R5L
                       2567 ; rs232par.c  574                                       State = StateP8;
000DC9 964842rr        2569         MOV.B   ES,#SEG( _State )
000DCD 9908rrrr        2570         MOV.W   R0,#SOF( _State )
000DD1 920808          2571         MOV.B   [R0],#08H
                       2572 ; rs232par.c  575                                       ParType[ParCnt] = P_Char;
000DD4 964842rr        2574         MOV.B   ES,#SEG( _ParCnt )
000DD8 9908rrrr        2575         MOV.W   R0,#SOF( _ParCnt )
000DDC 8200            2576         MOV.B   R0L,[R0]
000DDE B110            2577         MOVS.B  R0H,#00H
000DE0 B910            2578         MOVS.W  R1,#00H
000DE2 964842rr        2579         MOV.B   ES,#SEG( _ParType )
000DE6 B501rrrr        2580         MOV.B   [R0+SOF( _ParType )],#01H
                       2581 ; rs232par.c  576                                       return( Ready);
000DEA 910802          2583         MOV.B   R0L,#02H
                       2584         BR      _384
000DED D50A71         +2584         JMP.L   _384
                       2585 ; rs232par.c  577                               }
000DF0                 2587 _88:
                       2588 ; rs232par.c  578       
                       2589 ; rs232par.c  579                               if ( isnewline(c))
000DF0 91A40A          2591         CMP.B   R5L,#0AH
000DF3 F225            2592         BNE     _89
                       2593 ; rs232par.c  580                               {
                       2594 ; rs232par.c  581                                       Cmd[++CmdNdx] = 0;
000DF5 964842rr        2596         MOV.B   ES,#SEG( _CmdNdx )
000DF9 9908rrrr        2597         MOV.W   R0,#SOF( _CmdNdx )
000DFD 8A00            2598         MOV.W   R0,[R0]
000DFF A901            2599         ADDS.W  R0,#01H
000E01 8920            2600         MOV.W   R2,R0
000E03 B930            2601         MOVS.W  R3,#00H
000E05 964842rr        2602         MOV.B   ES,#SEG( _CmdNdx )
000E09 9918rrrr        2603         MOV.W   R1,#SOF( _CmdNdx )
000E0D 8A09            2604         MOV.W   [R1],R0
000E0F 964842rr        2605         MOV.B   ES,#SEG( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  34

ADDR   CODE            LINE SOURCELINE
000E13 B520rrrr        2606         MOV.B   [R2+SOF( _Cmd )],#00H
                       2607 ; rs232par.c  582                                       State = StateP0;
000E17 964842rr        2609         MOV.B   ES,#SEG( _State )
000E1B 9908rrrr        2610         MOV.W   R0,#SOF( _State )
000E1F B200            2611         MOV.B   [R0],#00H
                       2612 ; rs232par.c  583                                       ParType[ParCnt] = P_Char;
000E21 964842rr        2614         MOV.B   ES,#SEG( _ParCnt )
000E25 9908rrrr        2615         MOV.W   R0,#SOF( _ParCnt )
000E29 8200            2616         MOV.B   R0L,[R0]
000E2B B110            2617         MOVS.B  R0H,#00H
000E2D B910            2618         MOVS.W  R1,#00H
000E2F 964842rr        2619         MOV.B   ES,#SEG( _ParType )
000E33 B501rrrr        2620         MOV.B   [R0+SOF( _ParType )],#01H
                       2621 ; rs232par.c  584                                       return( PMT);
000E37 910804          2623         MOV.B   R0L,#04H
                       2624         BR      _384
000E3A D50A4B         +2624         JMP.L   _384
                       2625 ; rs232par.c  585                               }
000E3E                 2627 _89:
                       2628 ; rs232par.c  586       
                       2629 ; rs232par.c  587                               SCPIError = InvalidChar;
000E3E 964842rr        2631         MOV.B   ES,#SEG( _SCPIError )
000E42 9908rrrr        2632         MOV.W   R0,#SOF( _SCPIError )
000E46 BA02            2633         MOV.W   [R0],#02H
                       2634 ; rs232par.c  588                               State = StateERROR;
000E48 964842rr        2636         MOV.B   ES,#SEG( _State )
000E4C 9908rrrr        2637         MOV.W   R0,#SOF( _State )
000E50 92081E          2638         MOV.B   [R0],#01EH
                       2639 ; rs232par.c  589                               break;
                       2641         BR      _329
000E53 D50A32         +2641         JMP.L   _329
                       2642 ; rs232par.c  590       
                       2643 ; rs232par.c  591                       case StateD0:                                            
                                     // NUMERIC DECIMAL PROGRAM DATA
000E56                 2645 _90:
                       2646 ; rs232par.c  592                               if ( isdigit(c))
000E56 810A            2648         MOV.B   R0L,R5L
000E58 9019            2649         SEXT.B  R0H
000E5A 9819            2650         SEXT.W  R1
000E5C 964842rr        2651         MOV.B   ES,#SEG( __ctype_+1 )
000E60 8500rrrr        2652         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
000E64 9019            2653         SEXT.B  R0H
000E66 99050004        2654         AND.W   R0,#04H
000E6A F318            2655         BEQ     _91
                       2656 ; rs232par.c  593                               {
                       2657 ; rs232par.c  594                                       Cmd[++CmdNdx] = c;
000E6C 964842rr        2659         MOV.B   ES,#SEG( _CmdNdx )
000E70 9908rrrr        2660         MOV.W   R0,#SOF( _CmdNdx )
000E74 8A00            2661         MOV.W   R0,[R0]
000E76 A901            2662         ADDS.W  R0,#01H
000E78 8920            2663         MOV.W   R2,R0
000E7A B930            2664         MOVS.W  R3,#00H
000E7C 964842rr        2665         MOV.B   ES,#SEG( _CmdNdx )
000E80 9918rrrr        2666         MOV.W   R1,#SOF( _CmdNdx )
000E84 8A09            2667         MOV.W   [R1],R0
000E86 964842rr        2668         MOV.B   ES,#SEG( _Cmd )
000E8A 85AArrrr        2669         MOV.B   [R2+SOF( _Cmd )],R5L
                       2670 ; rs232par.c  595                                       State = StateD2;
000E8E 964842rr        2672         MOV.B   ES,#SEG( _State )
000E92 9908rrrr        2673         MOV.W   R0,#SOF( _State )
000E96 92080C          2674         MOV.B   [R0],#0CH
                       2675 ; rs232par.c  596                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  35

ADDR   CODE            LINE SOURCELINE
                       2677         BR      _329
000E99 D50A0F         +2677         JMP.L   _329
                       2678 ; rs232par.c  597                               }
000E9C                 2680 _91:
                       2681 ; rs232par.c  598       
                       2682 ; rs232par.c  599                               if ( isdot(c))
000E9C 91A42E          2684         CMP.B   R5L,#02EH
000E9F F219            2685         BNE     _92
                       2686 ; rs232par.c  600                               {
                       2687 ; rs232par.c  601                                       Cmd[++CmdNdx] = c;
000EA1 964842rr        2689         MOV.B   ES,#SEG( _CmdNdx )
000EA5 9908rrrr        2690         MOV.W   R0,#SOF( _CmdNdx )
000EA9 8A00            2691         MOV.W   R0,[R0]
000EAB A901            2692         ADDS.W  R0,#01H
000EAD 8920            2693         MOV.W   R2,R0
000EAF B930            2694         MOVS.W  R3,#00H
000EB1 964842rr        2695         MOV.B   ES,#SEG( _CmdNdx )
000EB5 9918rrrr        2696         MOV.W   R1,#SOF( _CmdNdx )
000EB9 8A09            2697         MOV.W   [R1],R0
000EBB 964842rr        2698         MOV.B   ES,#SEG( _Cmd )
000EBF 85AArrrr        2699         MOV.B   [R2+SOF( _Cmd )],R5L
                       2700 ; rs232par.c  602                                       State = StateD1;
000EC3 964842rr        2702         MOV.B   ES,#SEG( _State )
000EC7 9908rrrr        2703         MOV.W   R0,#SOF( _State )
000ECB 92080B          2704         MOV.B   [R0],#0BH
                       2705 ; rs232par.c  603                                       break;
                       2707         BR      _329
000ECE D509F5         +2707         JMP.L   _329
                       2708 ; rs232par.c  604                               }
000ED2                 2710 _92:
                       2711 ; rs232par.c  605       
                       2712 ; rs232par.c  606                               SCPIError = InvalidCharInNumber;
000ED2 964842rr        2714         MOV.B   ES,#SEG( _SCPIError )
000ED6 9908rrrr        2715         MOV.W   R0,#SOF( _SCPIError )
000EDA 9A08000E        2716         MOV.W   [R0],#0EH
                       2717 ; rs232par.c  607                               State = StateERROR;
000EDE 964842rr        2719         MOV.B   ES,#SEG( _State )
000EE2 9908rrrr        2720         MOV.W   R0,#SOF( _State )
000EE6 92081E          2721         MOV.B   [R0],#01EH
                       2722 ; rs232par.c  608                               break;
                       2724         BR      _329
000EE9 D509E7         +2724         JMP.L   _329
                       2725 ; rs232par.c  609       
                       2726 ; rs232par.c  610                       case StateD1:
000EEC                 2728 _93:
                       2729 ; rs232par.c  611                               if ( isdigit(c))
000EEC 810A            2731         MOV.B   R0L,R5L
000EEE 9019            2732         SEXT.B  R0H
000EF0 9819            2733         SEXT.W  R1
000EF2 964842rr        2734         MOV.B   ES,#SEG( __ctype_+1 )
000EF6 8500rrrr        2735         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
000EFA 9019            2736         SEXT.B  R0H
000EFC 99050004        2737         AND.W   R0,#04H
000F00 F328            2738         BEQ     _95
                       2739 ; rs232par.c  612                               {
                       2740 ; rs232par.c  613                                       if ( CmdNdx < 255)
000F02 964842rr        2742         MOV.B   ES,#SEG( _CmdNdx )
000F06 9908rrrr        2743         MOV.W   R0,#SOF( _CmdNdx )
000F0A 8A00            2744         MOV.W   R0,[R0]
000F0C 990400FF        2745         CMP.W   R0,#0FFH
000F10 F013            2746         BCC     _94
                       2747 ; rs232par.c  614                                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  36

ADDR   CODE            LINE SOURCELINE
                       2748 ; rs232par.c  615                                               Cmd[++CmdNdx] = c;
000F12 A901            2750         ADDS.W  R0,#01H
000F14 8920            2751         MOV.W   R2,R0
000F16 B930            2752         MOVS.W  R3,#00H
000F18 964842rr        2753         MOV.B   ES,#SEG( _CmdNdx )
000F1C 9918rrrr        2754         MOV.W   R1,#SOF( _CmdNdx )
000F20 8A09            2755         MOV.W   [R1],R0
000F22 964842rr        2756         MOV.B   ES,#SEG( _Cmd )
000F26 85AArrrr        2757         MOV.B   [R2+SOF( _Cmd )],R5L
                       2758 ; rs232par.c  616                                               State = StateD3;
000F2A 964842rr        2760         MOV.B   ES,#SEG( _State )
000F2E 9908rrrr        2761         MOV.W   R0,#SOF( _State )
000F32 92080D          2762         MOV.B   [R0],#0DH
                       2763 ; rs232par.c  617                                               break;
                       2765         BR      _329
000F35 D509C1         +2765         JMP.L   _329
                       2766 ; rs232par.c  618                                       }
000F38                 2768 _94:
                       2769 ; rs232par.c  619                                       SCPIError = TooManyDigits;
000F38 964842rr        2771         MOV.B   ES,#SEG( _SCPIError )
000F3C 9908rrrr        2772         MOV.W   R0,#SOF( _SCPIError )
000F40 9A080010        2773         MOV.W   [R0],#010H
                       2774 ; rs232par.c  620                                       State = StateERROR;
000F44 964842rr        2776         MOV.B   ES,#SEG( _State )
000F48 9908rrrr        2777         MOV.W   R0,#SOF( _State )
000F4C 92081E          2778         MOV.B   [R0],#01EH
                       2779 ; rs232par.c  621                                       break;
                       2781         BR      _329
000F4F D509B4         +2781         JMP.L   _329
                       2782 ; rs232par.c  622                               }
000F52                 2784 _95:
                       2785 ; rs232par.c  623       
                       2786 ; rs232par.c  624                               SCPIError = InvalidCharInNumber;
000F52 964842rr        2788         MOV.B   ES,#SEG( _SCPIError )
000F56 9908rrrr        2789         MOV.W   R0,#SOF( _SCPIError )
000F5A 9A08000E        2790         MOV.W   [R0],#0EH
                       2791 ; rs232par.c  625                               State = StateERROR;
000F5E 964842rr        2793         MOV.B   ES,#SEG( _State )
000F62 9908rrrr        2794         MOV.W   R0,#SOF( _State )
000F66 92081E          2795         MOV.B   [R0],#01EH
                       2796 ; rs232par.c  626                               break;
                       2798         BR      _329
000F69 D509A7         +2798         JMP.L   _329
                       2799 ; rs232par.c  627       
                       2800 ; rs232par.c  628                       case StateD2:
000F6C                 2802 _96:
                       2803 ; rs232par.c  629                               if ( iswhitespace(c))
000F6C 91A40A          2805         CMP.B   R5L,#0AH
000F6F F315            2806         BEQ     _98
000F71 91A420          2807         CMP.B   R5L,#020H
000F74 FC12            2808         BGT     _98
                       2809 ; rs232par.c  630                               {
                       2810 ; rs232par.c  631                                       State = StateD4;
000F76 964842rr        2812         MOV.B   ES,#SEG( _State )
000F7A 9908rrrr        2813         MOV.W   R0,#SOF( _State )
000F7E 92080E          2814         MOV.B   [R0],#0EH
                       2815 ; rs232par.c  632                                       ParType[ParCnt] = P_DecNum;
000F81 964842rr        2817         MOV.B   ES,#SEG( _ParCnt )
000F85 9908rrrr        2818         MOV.W   R0,#SOF( _ParCnt )
000F89 8200            2819         MOV.B   R0L,[R0]
000F8B B110            2820         MOVS.B  R0H,#00H
000F8D B910            2821         MOVS.W  R1,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  37

ADDR   CODE            LINE SOURCELINE
000F8F 964842rr        2822         MOV.B   ES,#SEG( _ParType )
000F93 B502rrrr        2823         MOV.B   [R0+SOF( _ParType )],#02H
                       2824 ; rs232par.c  633                                       break;
                       2826         BR      _329
000F97 D50990         +2826         JMP.L   _329
                       2827 ; rs232par.c  634                               }
000F9A                 2829 _98:
                       2830 ; rs232par.c  635       
                       2831 ; rs232par.c  636                               if ( isdigit(c))
000F9A 810A            2833         MOV.B   R0L,R5L
000F9C 9019            2834         SEXT.B  R0H
000F9E 9819            2835         SEXT.W  R1
000FA0 964842rr        2836         MOV.B   ES,#SEG( __ctype_+1 )
000FA4 8500rrrr        2837         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
000FA8 9019            2838         SEXT.B  R0H
000FAA 99050004        2839         AND.W   R0,#04H
000FAE F323            2840         BEQ     _100
                       2841 ; rs232par.c  637                               {
                       2842 ; rs232par.c  638                                       if ( CmdNdx < 255)
000FB0 964842rr        2844         MOV.B   ES,#SEG( _CmdNdx )
000FB4 9908rrrr        2845         MOV.W   R0,#SOF( _CmdNdx )
000FB8 8A00            2846         MOV.W   R0,[R0]
000FBA 990400FF        2847         CMP.W   R0,#0FFH
000FBE F00E            2848         BCC     _99
                       2849 ; rs232par.c  639                                       {
                       2850 ; rs232par.c  640                                               Cmd[++CmdNdx] = c;
000FC0 A901            2852         ADDS.W  R0,#01H
000FC2 8920            2853         MOV.W   R2,R0
000FC4 B930            2854         MOVS.W  R3,#00H
000FC6 964842rr        2855         MOV.B   ES,#SEG( _CmdNdx )
000FCA 9918rrrr        2856         MOV.W   R1,#SOF( _CmdNdx )
000FCE 8A09            2857         MOV.W   [R1],R0
000FD0 964842rr        2858         MOV.B   ES,#SEG( _Cmd )
000FD4 85AArrrr        2859         MOV.B   [R2+SOF( _Cmd )],R5L
                       2860 ; rs232par.c  641                                               break;
                       2862         BR      _329
000FD8 D50970         +2862         JMP.L   _329
                       2863 ; rs232par.c  642                                       }
000FDC                 2865 _99:
                       2866 ; rs232par.c  643                                       SCPIError = TooManyDigits;
000FDC 964842rr        2868         MOV.B   ES,#SEG( _SCPIError )
000FE0 9908rrrr        2869         MOV.W   R0,#SOF( _SCPIError )
000FE4 9A080010        2870         MOV.W   [R0],#010H
                       2871 ; rs232par.c  644                                       State = StateERROR;
000FE8 964842rr        2873         MOV.B   ES,#SEG( _State )
000FEC 9908rrrr        2874         MOV.W   R0,#SOF( _State )
000FF0 92081E          2875         MOV.B   [R0],#01EH
                       2876 ; rs232par.c  645                                       break;
                       2878         BR      _329
000FF3 D50962         +2878         JMP.L   _329
                       2879 ; rs232par.c  646                               }
000FF6                 2881 _100:
                       2882 ; rs232par.c  647       
                       2883 ; rs232par.c  648                               if ( issemicolon(c))
000FF6 91A43B          2885         CMP.B   R5L,#03BH
000FF9 F225            2886         BNE     _101
                       2887 ; rs232par.c  649                               {
                       2888 ; rs232par.c  650                                       Cmd[++CmdNdx] = 0;
000FFB 964842rr        2890         MOV.B   ES,#SEG( _CmdNdx )
000FFF 9908rrrr        2891         MOV.W   R0,#SOF( _CmdNdx )
001003 8A00            2892         MOV.W   R0,[R0]
001005 A901            2893         ADDS.W  R0,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  38

ADDR   CODE            LINE SOURCELINE
001007 8920            2894         MOV.W   R2,R0
001009 B930            2895         MOVS.W  R3,#00H
00100B 964842rr        2896         MOV.B   ES,#SEG( _CmdNdx )
00100F 9918rrrr        2897         MOV.W   R1,#SOF( _CmdNdx )
001013 8A09            2898         MOV.W   [R1],R0
001015 964842rr        2899         MOV.B   ES,#SEG( _Cmd )
001019 B520rrrr        2900         MOV.B   [R2+SOF( _Cmd )],#00H
                       2901 ; rs232par.c  651                                       State = StateP0;
00101D 964842rr        2903         MOV.B   ES,#SEG( _State )
001021 9908rrrr        2904         MOV.W   R0,#SOF( _State )
001025 B200            2905         MOV.B   [R0],#00H
                       2906 ; rs232par.c  652                                       ParType[ParCnt] = P_DecNum;
001027 964842rr        2908         MOV.B   ES,#SEG( _ParCnt )
00102B 9908rrrr        2909         MOV.W   R0,#SOF( _ParCnt )
00102F 8200            2910         MOV.B   R0L,[R0]
001031 B110            2911         MOVS.B  R0H,#00H
001033 B910            2912         MOVS.W  R1,#00H
001035 964842rr        2913         MOV.B   ES,#SEG( _ParType )
001039 B502rrrr        2914         MOV.B   [R0+SOF( _ParType )],#02H
                       2915 ; rs232par.c  653                                       return( PMUS);
00103D 910803          2917         MOV.B   R0L,#03H
                       2918         BR      _384
001040 D50948         +2918         JMP.L   _384
                       2919 ; rs232par.c  654                               }
001044                 2921 _101:
                       2922 ; rs232par.c  655       
                       2923 ; rs232par.c  656                               if ( isdot(c))
001044 91A42E          2925         CMP.B   R5L,#02EH
001047 F229            2926         BNE     _103
                       2927 ; rs232par.c  657                               {
                       2928 ; rs232par.c  658                                       if ( ++CmdNdx < 255)
001049 964842rr        2930         MOV.B   ES,#SEG( _CmdNdx )
00104D 9908rrrr        2931         MOV.W   R0,#SOF( _CmdNdx )
001051 8A00            2932         MOV.W   R0,[R0]
001053 A901            2933         ADDS.W  R0,#01H
001055 8910            2934         MOV.W   R1,R0
001057 964842rr        2935         MOV.B   ES,#SEG( _CmdNdx )
00105B 9928rrrr        2936         MOV.W   R2,#SOF( _CmdNdx )
00105F 8A1A            2937         MOV.W   [R2],R1
001061 991400FF        2938         CMP.W   R1,#0FFH
001065 F00D            2939         BCC     _102
                       2940 ; rs232par.c  659                                       {
                       2941 ; rs232par.c  660                                               Cmd[CmdNdx] = c;
001067 B910            2943         MOVS.W  R1,#00H
001069 964842rr        2944         MOV.B   ES,#SEG( _Cmd )
00106D 85A8rrrr        2945         MOV.B   [R0+SOF( _Cmd )],R5L
                       2946 ; rs232par.c  661                                               State = StateD3;
001071 964842rr        2948         MOV.B   ES,#SEG( _State )
001075 9908rrrr        2949         MOV.W   R0,#SOF( _State )
001079 92080D          2950         MOV.B   [R0],#0DH
                       2951 ; rs232par.c  662                                               break;
                       2953         BR      _329
00107C D5091E         +2953         JMP.L   _329
                       2954 ; rs232par.c  663                                       }
001080                 2956 _102:
                       2957 ; rs232par.c  664                                       SCPIError = TooManyDigits;
001080 964842rr        2959         MOV.B   ES,#SEG( _SCPIError )
001084 9908rrrr        2960         MOV.W   R0,#SOF( _SCPIError )
001088 9A080010        2961         MOV.W   [R0],#010H
                       2962 ; rs232par.c  665                                       State = StateERROR;
00108C 964842rr        2964         MOV.B   ES,#SEG( _State )
001090 9908rrrr        2965         MOV.W   R0,#SOF( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  39

ADDR   CODE            LINE SOURCELINE
001094 92081E          2966         MOV.B   [R0],#01EH
                       2967 ; rs232par.c  666                                       break;
                       2969         BR      _329
001097 D50910         +2969         JMP.L   _329
                       2970 ; rs232par.c  667                               }
00109A                 2972 _103:
                       2973 ; rs232par.c  668       
                       2974 ; rs232par.c  669                               if ( iscomma(c))
00109A 91A42C          2976         CMP.B   R5L,#02CH
00109D F225            2977         BNE     _104
                       2978 ; rs232par.c  670                               {
                       2979 ; rs232par.c  671                                       Cmd[++CmdNdx] = c;
00109F 964842rr        2981         MOV.B   ES,#SEG( _CmdNdx )
0010A3 9908rrrr        2982         MOV.W   R0,#SOF( _CmdNdx )
0010A7 8A00            2983         MOV.W   R0,[R0]
0010A9 A901            2984         ADDS.W  R0,#01H
0010AB 8920            2985         MOV.W   R2,R0
0010AD B930            2986         MOVS.W  R3,#00H
0010AF 964842rr        2987         MOV.B   ES,#SEG( _CmdNdx )
0010B3 9918rrrr        2988         MOV.W   R1,#SOF( _CmdNdx )
0010B7 8A09            2989         MOV.W   [R1],R0
0010B9 964842rr        2990         MOV.B   ES,#SEG( _Cmd )
0010BD 85AArrrr        2991         MOV.B   [R2+SOF( _Cmd )],R5L
                       2992 ; rs232par.c  672                                       State = StateP8;
0010C1 964842rr        2994         MOV.B   ES,#SEG( _State )
0010C5 9908rrrr        2995         MOV.W   R0,#SOF( _State )
0010C9 920808          2996         MOV.B   [R0],#08H
                       2997 ; rs232par.c  673                                       ParType[ParCnt] = P_DecNum;
0010CC 964842rr        2999         MOV.B   ES,#SEG( _ParCnt )
0010D0 9908rrrr        3000         MOV.W   R0,#SOF( _ParCnt )
0010D4 8200            3001         MOV.B   R0L,[R0]
0010D6 B110            3002         MOVS.B  R0H,#00H
0010D8 B910            3003         MOVS.W  R1,#00H
0010DA 964842rr        3004         MOV.B   ES,#SEG( _ParType )
0010DE B502rrrr        3005         MOV.B   [R0+SOF( _ParType )],#02H
                       3006 ; rs232par.c  674                                       return( Ready);
0010E2 910802          3008         MOV.B   R0L,#02H
                       3009         BR      _384
0010E5 D508F5         +3009         JMP.L   _384
                       3010 ; rs232par.c  675                               }
0010E8                 3012 _104:
                       3013 ; rs232par.c  676       
                       3014 ; rs232par.c  677                               if ( (c) == 'E')
0010E8 91A445          3016         CMP.B   R5L,#045H
0010EB F229            3017         BNE     _106
                       3018 ; rs232par.c  678                               {
                       3019 ; rs232par.c  679                                       if ( CmdNdx < 255)
0010ED 964842rr        3021         MOV.B   ES,#SEG( _CmdNdx )
0010F1 9908rrrr        3022         MOV.W   R0,#SOF( _CmdNdx )
0010F5 8A00            3023         MOV.W   R0,[R0]
0010F7 990400FF        3024         CMP.W   R0,#0FFH
0010FB F014            3025         BCC     _105
                       3026 ; rs232par.c  680                                       {
                       3027 ; rs232par.c  681                                               Cmd[++CmdNdx] = c;
0010FD A901            3029         ADDS.W  R0,#01H
0010FF 8920            3030         MOV.W   R2,R0
001101 B930            3031         MOVS.W  R3,#00H
001103 964842rr        3032         MOV.B   ES,#SEG( _CmdNdx )
001107 9918rrrr        3033         MOV.W   R1,#SOF( _CmdNdx )
00110B 8A09            3034         MOV.W   [R1],R0
00110D 964842rr        3035         MOV.B   ES,#SEG( _Cmd )
001111 85AArrrr        3036         MOV.B   [R2+SOF( _Cmd )],R5L
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  40

ADDR   CODE            LINE SOURCELINE
                       3037 ; rs232par.c  682                                               State = StateD5;
001115 964842rr        3039         MOV.B   ES,#SEG( _State )
001119 9908rrrr        3040         MOV.W   R0,#SOF( _State )
00111D 92080F          3041         MOV.B   [R0],#0FH
                       3042 ; rs232par.c  683                                               break;
                       3044         BR      _329
001120 D508CC         +3044         JMP.L   _329
                       3045 ; rs232par.c  684                                       }
001124                 3047 _105:
                       3048 ; rs232par.c  685                                       SCPIError = TooManyDigits;               
                                                    // TBD
001124 964842rr        3050         MOV.B   ES,#SEG( _SCPIError )
001128 9908rrrr        3051         MOV.W   R0,#SOF( _SCPIError )
00112C 9A080010        3052         MOV.W   [R0],#010H
                       3053 ; rs232par.c  686                                       State = StateERROR;
001130 964842rr        3055         MOV.B   ES,#SEG( _State )
001134 9908rrrr        3056         MOV.W   R0,#SOF( _State )
001138 92081E          3057         MOV.B   [R0],#01EH
                       3058 ; rs232par.c  687                                       break;
                       3060         BR      _329
00113B D508BE         +3060         JMP.L   _329
                       3061 ; rs232par.c  688                               }
00113E                 3063 _106:
                       3064 ; rs232par.c  689       
                       3065 ; rs232par.c  690                               if ( isnewline(c))
00113E 91A40A          3067         CMP.B   R5L,#0AH
001141 F225            3068         BNE     _107
                       3069 ; rs232par.c  691                               {
                       3070 ; rs232par.c  692                                       Cmd[++CmdNdx] = 0;
001143 964842rr        3072         MOV.B   ES,#SEG( _CmdNdx )
001147 9908rrrr        3073         MOV.W   R0,#SOF( _CmdNdx )
00114B 8A00            3074         MOV.W   R0,[R0]
00114D A901            3075         ADDS.W  R0,#01H
00114F 8920            3076         MOV.W   R2,R0
001151 B930            3077         MOVS.W  R3,#00H
001153 964842rr        3078         MOV.B   ES,#SEG( _CmdNdx )
001157 9918rrrr        3079         MOV.W   R1,#SOF( _CmdNdx )
00115B 8A09            3080         MOV.W   [R1],R0
00115D 964842rr        3081         MOV.B   ES,#SEG( _Cmd )
001161 B520rrrr        3082         MOV.B   [R2+SOF( _Cmd )],#00H
                       3083 ; rs232par.c  693                                       State = StateP0;
001165 964842rr        3085         MOV.B   ES,#SEG( _State )
001169 9908rrrr        3086         MOV.W   R0,#SOF( _State )
00116D B200            3087         MOV.B   [R0],#00H
                       3088 ; rs232par.c  694                                       ParType[ParCnt] = P_DecNum;
00116F 964842rr        3090         MOV.B   ES,#SEG( _ParCnt )
001173 9908rrrr        3091         MOV.W   R0,#SOF( _ParCnt )
001177 8200            3092         MOV.B   R0L,[R0]
001179 B110            3093         MOVS.B  R0H,#00H
00117B B910            3094         MOVS.W  R1,#00H
00117D 964842rr        3095         MOV.B   ES,#SEG( _ParType )
001181 B502rrrr        3096         MOV.B   [R0+SOF( _ParType )],#02H
                       3097 ; rs232par.c  695                                       return( PMT);
001185 910804          3099         MOV.B   R0L,#04H
                       3100         BR      _384
001188 D508A4         +3100         JMP.L   _384
                       3101 ; rs232par.c  696                               }
00118C                 3103 _107:
                       3104 ; rs232par.c  697       
                       3105 ; rs232par.c  698                               SCPIError = InvalidChar;
00118C 964842rr        3107         MOV.B   ES,#SEG( _SCPIError )
001190 9908rrrr        3108         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  41

ADDR   CODE            LINE SOURCELINE
001194 BA02            3109         MOV.W   [R0],#02H
                       3110 ; rs232par.c  699                               State = StateERROR;
001196 964842rr        3112         MOV.B   ES,#SEG( _State )
00119A 9908rrrr        3113         MOV.W   R0,#SOF( _State )
00119E 92081E          3114         MOV.B   [R0],#01EH
                       3115 ; rs232par.c  700                               break;
                       3117         BR      _329
0011A1 D5088B         +3117         JMP.L   _329
                       3118 ; rs232par.c  701       
                       3119 ; rs232par.c  702                       case StateD3:
0011A4                 3121 _108:
                       3122 ; rs232par.c  703                               if ( iswhitespace(c))
0011A4 91A40A          3124         CMP.B   R5L,#0AH
0011A7 F315            3125         BEQ     _110
0011A9 91A420          3126         CMP.B   R5L,#020H
0011AC FC12            3127         BGT     _110
                       3128 ; rs232par.c  704                               {
                       3129 ; rs232par.c  705                                       State = StateD4;
0011AE 964842rr        3131         MOV.B   ES,#SEG( _State )
0011B2 9908rrrr        3132         MOV.W   R0,#SOF( _State )
0011B6 92080E          3133         MOV.B   [R0],#0EH
                       3134 ; rs232par.c  706                                       ParType[ParCnt] = P_DecNum;
0011B9 964842rr        3136         MOV.B   ES,#SEG( _ParCnt )
0011BD 9908rrrr        3137         MOV.W   R0,#SOF( _ParCnt )
0011C1 8200            3138         MOV.B   R0L,[R0]
0011C3 B110            3139         MOVS.B  R0H,#00H
0011C5 B910            3140         MOVS.W  R1,#00H
0011C7 964842rr        3141         MOV.B   ES,#SEG( _ParType )
0011CB B502rrrr        3142         MOV.B   [R0+SOF( _ParType )],#02H
                       3143 ; rs232par.c  707                                       break;
                       3145         BR      _329
0011CF D50874         +3145         JMP.L   _329
                       3146 ; rs232par.c  708                               }
0011D2                 3148 _110:
                       3149 ; rs232par.c  709       
                       3150 ; rs232par.c  710                               if ( isdigit(c))
0011D2 810A            3152         MOV.B   R0L,R5L
0011D4 9019            3153         SEXT.B  R0H
0011D6 9819            3154         SEXT.W  R1
0011D8 964842rr        3155         MOV.B   ES,#SEG( __ctype_+1 )
0011DC 8500rrrr        3156         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
0011E0 9019            3157         SEXT.B  R0H
0011E2 99050004        3158         AND.W   R0,#04H
0011E6 F328            3159         BEQ     _112
                       3160 ; rs232par.c  711                               {
                       3161 ; rs232par.c  712                                       if ( CmdNdx < 255)
0011E8 964842rr        3163         MOV.B   ES,#SEG( _CmdNdx )
0011EC 9908rrrr        3164         MOV.W   R0,#SOF( _CmdNdx )
0011F0 8A00            3165         MOV.W   R0,[R0]
0011F2 990400FF        3166         CMP.W   R0,#0FFH
0011F6 F013            3167         BCC     _111
                       3168 ; rs232par.c  713                                       {
                       3169 ; rs232par.c  714                                               Cmd[++CmdNdx] = c;
0011F8 A901            3171         ADDS.W  R0,#01H
0011FA 8920            3172         MOV.W   R2,R0
0011FC B930            3173         MOVS.W  R3,#00H
0011FE 964842rr        3174         MOV.B   ES,#SEG( _CmdNdx )
001202 9918rrrr        3175         MOV.W   R1,#SOF( _CmdNdx )
001206 8A09            3176         MOV.W   [R1],R0
001208 964842rr        3177         MOV.B   ES,#SEG( _Cmd )
00120C 85AArrrr        3178         MOV.B   [R2+SOF( _Cmd )],R5L
                       3179 ; rs232par.c  715                                               State = StateD3;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  42

ADDR   CODE            LINE SOURCELINE
001210 964842rr        3181         MOV.B   ES,#SEG( _State )
001214 9908rrrr        3182         MOV.W   R0,#SOF( _State )
001218 92080D          3183         MOV.B   [R0],#0DH
                       3184 ; rs232par.c  716                                               break;
                       3186         BR      _329
00121B D5084E         +3186         JMP.L   _329
                       3187 ; rs232par.c  717                                       }
00121E                 3189 _111:
                       3190 ; rs232par.c  718                                       SCPIError = TooManyDigits;
00121E 964842rr        3192         MOV.B   ES,#SEG( _SCPIError )
001222 9908rrrr        3193         MOV.W   R0,#SOF( _SCPIError )
001226 9A080010        3194         MOV.W   [R0],#010H
                       3195 ; rs232par.c  719                                       State = StateERROR;
00122A 964842rr        3197         MOV.B   ES,#SEG( _State )
00122E 9908rrrr        3198         MOV.W   R0,#SOF( _State )
001232 92081E          3199         MOV.B   [R0],#01EH
                       3200 ; rs232par.c  720                                       break;
                       3202         BR      _329
001235 D50841         +3202         JMP.L   _329
                       3203 ; rs232par.c  721                               }
001238                 3205 _112:
                       3206 ; rs232par.c  722       
                       3207 ; rs232par.c  723                               if ( issemicolon(c))
001238 91A43B          3209         CMP.B   R5L,#03BH
00123B F225            3210         BNE     _113
                       3211 ; rs232par.c  724                               {
                       3212 ; rs232par.c  725                                       Cmd[++CmdNdx] = 0;
00123D 964842rr        3214         MOV.B   ES,#SEG( _CmdNdx )
001241 9908rrrr        3215         MOV.W   R0,#SOF( _CmdNdx )
001245 8A00            3216         MOV.W   R0,[R0]
001247 A901            3217         ADDS.W  R0,#01H
001249 8920            3218         MOV.W   R2,R0
00124B B930            3219         MOVS.W  R3,#00H
00124D 964842rr        3220         MOV.B   ES,#SEG( _CmdNdx )
001251 9918rrrr        3221         MOV.W   R1,#SOF( _CmdNdx )
001255 8A09            3222         MOV.W   [R1],R0
001257 964842rr        3223         MOV.B   ES,#SEG( _Cmd )
00125B B520rrrr        3224         MOV.B   [R2+SOF( _Cmd )],#00H
                       3225 ; rs232par.c  726                                       State = StateP0;
00125F 964842rr        3227         MOV.B   ES,#SEG( _State )
001263 9908rrrr        3228         MOV.W   R0,#SOF( _State )
001267 B200            3229         MOV.B   [R0],#00H
                       3230 ; rs232par.c  727                                       ParType[ParCnt] = P_DecNum;
001269 964842rr        3232         MOV.B   ES,#SEG( _ParCnt )
00126D 9908rrrr        3233         MOV.W   R0,#SOF( _ParCnt )
001271 8200            3234         MOV.B   R0L,[R0]
001273 B110            3235         MOVS.B  R0H,#00H
001275 B910            3236         MOVS.W  R1,#00H
001277 964842rr        3237         MOV.B   ES,#SEG( _ParType )
00127B B502rrrr        3238         MOV.B   [R0+SOF( _ParType )],#02H
                       3239 ; rs232par.c  728                                       return( PMUS);
00127F 910803          3241         MOV.B   R0L,#03H
                       3242         BR      _384
001282 D50827         +3242         JMP.L   _384
                       3243 ; rs232par.c  729                               }
001286                 3245 _113:
                       3246 ; rs232par.c  730       
                       3247 ; rs232par.c  731                               if ( iscomma(c))
001286 91A42C          3249         CMP.B   R5L,#02CH
001289 F225            3250         BNE     _114
                       3251 ; rs232par.c  732                               {
                       3252 ; rs232par.c  733                                       Cmd[++CmdNdx] = c;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  43

ADDR   CODE            LINE SOURCELINE
00128B 964842rr        3254         MOV.B   ES,#SEG( _CmdNdx )
00128F 9908rrrr        3255         MOV.W   R0,#SOF( _CmdNdx )
001293 8A00            3256         MOV.W   R0,[R0]
001295 A901            3257         ADDS.W  R0,#01H
001297 8920            3258         MOV.W   R2,R0
001299 B930            3259         MOVS.W  R3,#00H
00129B 964842rr        3260         MOV.B   ES,#SEG( _CmdNdx )
00129F 9918rrrr        3261         MOV.W   R1,#SOF( _CmdNdx )
0012A3 8A09            3262         MOV.W   [R1],R0
0012A5 964842rr        3263         MOV.B   ES,#SEG( _Cmd )
0012A9 85AArrrr        3264         MOV.B   [R2+SOF( _Cmd )],R5L
                       3265 ; rs232par.c  734                                       State = StateP8;
0012AD 964842rr        3267         MOV.B   ES,#SEG( _State )
0012B1 9908rrrr        3268         MOV.W   R0,#SOF( _State )
0012B5 920808          3269         MOV.B   [R0],#08H
                       3270 ; rs232par.c  735                                       ParType[ParCnt] = P_DecNum;
0012B8 964842rr        3272         MOV.B   ES,#SEG( _ParCnt )
0012BC 9908rrrr        3273         MOV.W   R0,#SOF( _ParCnt )
0012C0 8200            3274         MOV.B   R0L,[R0]
0012C2 B110            3275         MOVS.B  R0H,#00H
0012C4 B910            3276         MOVS.W  R1,#00H
0012C6 964842rr        3277         MOV.B   ES,#SEG( _ParType )
0012CA B502rrrr        3278         MOV.B   [R0+SOF( _ParType )],#02H
                       3279 ; rs232par.c  736                                       return( Ready);
0012CE 910802          3281         MOV.B   R0L,#02H
                       3282         BR      _384
0012D1 D507FF         +3282         JMP.L   _384
                       3283 ; rs232par.c  737                               }
0012D4                 3285 _114:
                       3286 ; rs232par.c  738       
                       3287 ; rs232par.c  739                               if ( (c) == 'E')
0012D4 91A445          3289         CMP.B   R5L,#045H
0012D7 F229            3290         BNE     _116
                       3291 ; rs232par.c  740                               {
                       3292 ; rs232par.c  741                                       if ( CmdNdx < 255)
0012D9 964842rr        3294         MOV.B   ES,#SEG( _CmdNdx )
0012DD 9908rrrr        3295         MOV.W   R0,#SOF( _CmdNdx )
0012E1 8A00            3296         MOV.W   R0,[R0]
0012E3 990400FF        3297         CMP.W   R0,#0FFH
0012E7 F014            3298         BCC     _115
                       3299 ; rs232par.c  742                                       {
                       3300 ; rs232par.c  743                                               Cmd[++CmdNdx] = c;
0012E9 A901            3302         ADDS.W  R0,#01H
0012EB 8920            3303         MOV.W   R2,R0
0012ED B930            3304         MOVS.W  R3,#00H
0012EF 964842rr        3305         MOV.B   ES,#SEG( _CmdNdx )
0012F3 9918rrrr        3306         MOV.W   R1,#SOF( _CmdNdx )
0012F7 8A09            3307         MOV.W   [R1],R0
0012F9 964842rr        3308         MOV.B   ES,#SEG( _Cmd )
0012FD 85AArrrr        3309         MOV.B   [R2+SOF( _Cmd )],R5L
                       3310 ; rs232par.c  744                                               State = StateD5;
001301 964842rr        3312         MOV.B   ES,#SEG( _State )
001305 9908rrrr        3313         MOV.W   R0,#SOF( _State )
001309 92080F          3314         MOV.B   [R0],#0FH
                       3315 ; rs232par.c  745                                               break;
                       3317         BR      _329
00130C D507D6         +3317         JMP.L   _329
                       3318 ; rs232par.c  746                                       }
001310                 3320 _115:
                       3321 ; rs232par.c  747                                       SCPIError = TooManyDigits;               
                                    // TBD
001310 964842rr        3323         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  44

ADDR   CODE            LINE SOURCELINE
001314 9908rrrr        3324         MOV.W   R0,#SOF( _SCPIError )
001318 9A080010        3325         MOV.W   [R0],#010H
                       3326 ; rs232par.c  748                                       State = StateERROR;
00131C 964842rr        3328         MOV.B   ES,#SEG( _State )
001320 9908rrrr        3329         MOV.W   R0,#SOF( _State )
001324 92081E          3330         MOV.B   [R0],#01EH
                       3331 ; rs232par.c  749                                       break;
                       3333         BR      _329
001327 D507C8         +3333         JMP.L   _329
                       3334 ; rs232par.c  750                               }
00132A                 3336 _116:
                       3337 ; rs232par.c  751       
                       3338 ; rs232par.c  752                               if ( isnewline(c))
00132A 91A40A          3340         CMP.B   R5L,#0AH
00132D F225            3341         BNE     _117
                       3342 ; rs232par.c  753                               {
                       3343 ; rs232par.c  754                                       Cmd[++CmdNdx] = 0;
00132F 964842rr        3345         MOV.B   ES,#SEG( _CmdNdx )
001333 9908rrrr        3346         MOV.W   R0,#SOF( _CmdNdx )
001337 8A00            3347         MOV.W   R0,[R0]
001339 A901            3348         ADDS.W  R0,#01H
00133B 8920            3349         MOV.W   R2,R0
00133D B930            3350         MOVS.W  R3,#00H
00133F 964842rr        3351         MOV.B   ES,#SEG( _CmdNdx )
001343 9918rrrr        3352         MOV.W   R1,#SOF( _CmdNdx )
001347 8A09            3353         MOV.W   [R1],R0
001349 964842rr        3354         MOV.B   ES,#SEG( _Cmd )
00134D B520rrrr        3355         MOV.B   [R2+SOF( _Cmd )],#00H
                       3356 ; rs232par.c  755                                       State = StateP0;
001351 964842rr        3358         MOV.B   ES,#SEG( _State )
001355 9908rrrr        3359         MOV.W   R0,#SOF( _State )
001359 B200            3360         MOV.B   [R0],#00H
                       3361 ; rs232par.c  756                                       ParType[ParCnt] = P_DecNum;
00135B 964842rr        3363         MOV.B   ES,#SEG( _ParCnt )
00135F 9908rrrr        3364         MOV.W   R0,#SOF( _ParCnt )
001363 8200            3365         MOV.B   R0L,[R0]
001365 B110            3366         MOVS.B  R0H,#00H
001367 B910            3367         MOVS.W  R1,#00H
001369 964842rr        3368         MOV.B   ES,#SEG( _ParType )
00136D B502rrrr        3369         MOV.B   [R0+SOF( _ParType )],#02H
                       3370 ; rs232par.c  757                                       return( PMT);
001371 910804          3372         MOV.B   R0L,#04H
                       3373         BR      _384
001374 D507AE         +3373         JMP.L   _384
                       3374 ; rs232par.c  758                               }
001378                 3376 _117:
                       3377 ; rs232par.c  759       
                       3378 ; rs232par.c  760                               SCPIError = InvalidChar;
001378 964842rr        3380         MOV.B   ES,#SEG( _SCPIError )
00137C 9908rrrr        3381         MOV.W   R0,#SOF( _SCPIError )
001380 BA02            3382         MOV.W   [R0],#02H
                       3383 ; rs232par.c  761                               State = StateERROR;
001382 964842rr        3385         MOV.B   ES,#SEG( _State )
001386 9908rrrr        3386         MOV.W   R0,#SOF( _State )
00138A 92081E          3387         MOV.B   [R0],#01EH
                       3388 ; rs232par.c  762                               break;
                       3390         BR      _329
00138D D50795         +3390         JMP.L   _329
                       3391 ; rs232par.c  763       
                       3392 ; rs232par.c  764                       case StateD4:
001390                 3394 _118:
                       3395 ; rs232par.c  765                               if ( iswhitespace(c))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  45

ADDR   CODE            LINE SOURCELINE
001390 91A40A          3397         CMP.B   R5L,#0AH
001393 F30A            3398         BEQ     _120
001395 91A420          3399         CMP.B   R5L,#020H
001398 FC07            3400         BGT     _120
                       3401 ; rs232par.c  766                               {
                       3402 ; rs232par.c  767                                       State = StateD4;
00139A 964842rr        3404         MOV.B   ES,#SEG( _State )
00139E 9908rrrr        3405         MOV.W   R0,#SOF( _State )
0013A2 92080E          3406         MOV.B   [R0],#0EH
                       3407 ; rs232par.c  768                                       break;
                       3409         BR      _329
0013A5 D50789         +3409         JMP.L   _329
                       3410 ; rs232par.c  769                               }
0013A8                 3412 _120:
                       3413 ; rs232par.c  770       
                       3414 ; rs232par.c  771                               if ( issemicolon(c))
0013A8 91A43B          3416         CMP.B   R5L,#03BH
0013AB F225            3417         BNE     _121
                       3418 ; rs232par.c  772                               {
                       3419 ; rs232par.c  773                                       Cmd[++CmdNdx] = 0;
0013AD 964842rr        3421         MOV.B   ES,#SEG( _CmdNdx )
0013B1 9908rrrr        3422         MOV.W   R0,#SOF( _CmdNdx )
0013B5 8A00            3423         MOV.W   R0,[R0]
0013B7 A901            3424         ADDS.W  R0,#01H
0013B9 8920            3425         MOV.W   R2,R0
0013BB B930            3426         MOVS.W  R3,#00H
0013BD 964842rr        3427         MOV.B   ES,#SEG( _CmdNdx )
0013C1 9918rrrr        3428         MOV.W   R1,#SOF( _CmdNdx )
0013C5 8A09            3429         MOV.W   [R1],R0
0013C7 964842rr        3430         MOV.B   ES,#SEG( _Cmd )
0013CB B520rrrr        3431         MOV.B   [R2+SOF( _Cmd )],#00H
                       3432 ; rs232par.c  774                                       State = StateP0;
0013CF 964842rr        3434         MOV.B   ES,#SEG( _State )
0013D3 9908rrrr        3435         MOV.W   R0,#SOF( _State )
0013D7 B200            3436         MOV.B   [R0],#00H
                       3437 ; rs232par.c  775                                       ParType[ParCnt] = P_DecNum;
0013D9 964842rr        3439         MOV.B   ES,#SEG( _ParCnt )
0013DD 9908rrrr        3440         MOV.W   R0,#SOF( _ParCnt )
0013E1 8200            3441         MOV.B   R0L,[R0]
0013E3 B110            3442         MOVS.B  R0H,#00H
0013E5 B910            3443         MOVS.W  R1,#00H
0013E7 964842rr        3444         MOV.B   ES,#SEG( _ParType )
0013EB B502rrrr        3445         MOV.B   [R0+SOF( _ParType )],#02H
                       3446 ; rs232par.c  776                                       return( PMUS);
0013EF 910803          3448         MOV.B   R0L,#03H
                       3449         BR      _384
0013F2 D5076F         +3449         JMP.L   _384
                       3450 ; rs232par.c  777                               }
0013F6                 3452 _121:
                       3453 ; rs232par.c  778       
                       3454 ; rs232par.c  779                               if ( iscomma(c))
0013F6 91A42C          3456         CMP.B   R5L,#02CH
0013F9 F225            3457         BNE     _122
                       3458 ; rs232par.c  780                               {
                       3459 ; rs232par.c  781                                       Cmd[++CmdNdx] = c;
0013FB 964842rr        3461         MOV.B   ES,#SEG( _CmdNdx )
0013FF 9908rrrr        3462         MOV.W   R0,#SOF( _CmdNdx )
001403 8A00            3463         MOV.W   R0,[R0]
001405 A901            3464         ADDS.W  R0,#01H
001407 8920            3465         MOV.W   R2,R0
001409 B930            3466         MOVS.W  R3,#00H
00140B 964842rr        3467         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  46

ADDR   CODE            LINE SOURCELINE
00140F 9918rrrr        3468         MOV.W   R1,#SOF( _CmdNdx )
001413 8A09            3469         MOV.W   [R1],R0
001415 964842rr        3470         MOV.B   ES,#SEG( _Cmd )
001419 85AArrrr        3471         MOV.B   [R2+SOF( _Cmd )],R5L
                       3472 ; rs232par.c  782                                       State = StateP8;
00141D 964842rr        3474         MOV.B   ES,#SEG( _State )
001421 9908rrrr        3475         MOV.W   R0,#SOF( _State )
001425 920808          3476         MOV.B   [R0],#08H
                       3477 ; rs232par.c  783                                       ParType[ParCnt] = P_DecNum;
001428 964842rr        3479         MOV.B   ES,#SEG( _ParCnt )
00142C 9908rrrr        3480         MOV.W   R0,#SOF( _ParCnt )
001430 8200            3481         MOV.B   R0L,[R0]
001432 B110            3482         MOVS.B  R0H,#00H
001434 B910            3483         MOVS.W  R1,#00H
001436 964842rr        3484         MOV.B   ES,#SEG( _ParType )
00143A B502rrrr        3485         MOV.B   [R0+SOF( _ParType )],#02H
                       3486 ; rs232par.c  784                                       return( Ready);
00143E 910802          3488         MOV.B   R0L,#02H
                       3489         BR      _384
001441 D50747         +3489         JMP.L   _384
                       3490 ; rs232par.c  785                               }
001444                 3492 _122:
                       3493 ; rs232par.c  786       
                       3494 ; rs232par.c  787                               if ( (c) == 'E')
001444 91A445          3496         CMP.B   R5L,#045H
001447 F229            3497         BNE     _124
                       3498 ; rs232par.c  788                               {
                       3499 ; rs232par.c  789                                       if ( CmdNdx < 255)
001449 964842rr        3501         MOV.B   ES,#SEG( _CmdNdx )
00144D 9908rrrr        3502         MOV.W   R0,#SOF( _CmdNdx )
001451 8A00            3503         MOV.W   R0,[R0]
001453 990400FF        3504         CMP.W   R0,#0FFH
001457 F014            3505         BCC     _123
                       3506 ; rs232par.c  790                                       {
                       3507 ; rs232par.c  791                                               Cmd[++CmdNdx] = c;
001459 A901            3509         ADDS.W  R0,#01H
00145B 8920            3510         MOV.W   R2,R0
00145D B930            3511         MOVS.W  R3,#00H
00145F 964842rr        3512         MOV.B   ES,#SEG( _CmdNdx )
001463 9918rrrr        3513         MOV.W   R1,#SOF( _CmdNdx )
001467 8A09            3514         MOV.W   [R1],R0
001469 964842rr        3515         MOV.B   ES,#SEG( _Cmd )
00146D 85AArrrr        3516         MOV.B   [R2+SOF( _Cmd )],R5L
                       3517 ; rs232par.c  792                                               State = StateD5;
001471 964842rr        3519         MOV.B   ES,#SEG( _State )
001475 9908rrrr        3520         MOV.W   R0,#SOF( _State )
001479 92080F          3521         MOV.B   [R0],#0FH
                       3522 ; rs232par.c  793                                               break;
                       3524         BR      _329
00147C D5071E         +3524         JMP.L   _329
                       3525 ; rs232par.c  794                                       }
001480                 3527 _123:
                       3528 ; rs232par.c  795                                       SCPIError = TooManyDigits;               
                                    // TBD
001480 964842rr        3530         MOV.B   ES,#SEG( _SCPIError )
001484 9908rrrr        3531         MOV.W   R0,#SOF( _SCPIError )
001488 9A080010        3532         MOV.W   [R0],#010H
                       3533 ; rs232par.c  796                                       State = StateERROR;
00148C 964842rr        3535         MOV.B   ES,#SEG( _State )
001490 9908rrrr        3536         MOV.W   R0,#SOF( _State )
001494 92081E          3537         MOV.B   [R0],#01EH
                       3538 ; rs232par.c  797                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  47

ADDR   CODE            LINE SOURCELINE
                       3540         BR      _329
001497 D50710         +3540         JMP.L   _329
                       3541 ; rs232par.c  798                               }
00149A                 3543 _124:
                       3544 ; rs232par.c  799       
                       3545 ; rs232par.c  800                               if ( isnewline(c))
00149A 91A40A          3547         CMP.B   R5L,#0AH
00149D F225            3548         BNE     _125
                       3549 ; rs232par.c  801                               {
                       3550 ; rs232par.c  802                                       Cmd[++CmdNdx] = 0;
00149F 964842rr        3552         MOV.B   ES,#SEG( _CmdNdx )
0014A3 9908rrrr        3553         MOV.W   R0,#SOF( _CmdNdx )
0014A7 8A00            3554         MOV.W   R0,[R0]
0014A9 A901            3555         ADDS.W  R0,#01H
0014AB 8920            3556         MOV.W   R2,R0
0014AD B930            3557         MOVS.W  R3,#00H
0014AF 964842rr        3558         MOV.B   ES,#SEG( _CmdNdx )
0014B3 9918rrrr        3559         MOV.W   R1,#SOF( _CmdNdx )
0014B7 8A09            3560         MOV.W   [R1],R0
0014B9 964842rr        3561         MOV.B   ES,#SEG( _Cmd )
0014BD B520rrrr        3562         MOV.B   [R2+SOF( _Cmd )],#00H
                       3563 ; rs232par.c  803                                       State = StateP0;
0014C1 964842rr        3565         MOV.B   ES,#SEG( _State )
0014C5 9908rrrr        3566         MOV.W   R0,#SOF( _State )
0014C9 B200            3567         MOV.B   [R0],#00H
                       3568 ; rs232par.c  804                                       ParType[ParCnt] = P_DecNum;
0014CB 964842rr        3570         MOV.B   ES,#SEG( _ParCnt )
0014CF 9908rrrr        3571         MOV.W   R0,#SOF( _ParCnt )
0014D3 8200            3572         MOV.B   R0L,[R0]
0014D5 B110            3573         MOVS.B  R0H,#00H
0014D7 B910            3574         MOVS.W  R1,#00H
0014D9 964842rr        3575         MOV.B   ES,#SEG( _ParType )
0014DD B502rrrr        3576         MOV.B   [R0+SOF( _ParType )],#02H
                       3577 ; rs232par.c  805                                       return( PMT);
0014E1 910804          3579         MOV.B   R0L,#04H
                       3580         BR      _384
0014E4 D506F6         +3580         JMP.L   _384
                       3581 ; rs232par.c  806                               }
0014E8                 3583 _125:
                       3584 ; rs232par.c  807       
                       3585 ; rs232par.c  808                               SCPIError = InvalidChar;
0014E8 964842rr        3587         MOV.B   ES,#SEG( _SCPIError )
0014EC 9908rrrr        3588         MOV.W   R0,#SOF( _SCPIError )
0014F0 BA02            3589         MOV.W   [R0],#02H
                       3590 ; rs232par.c  809                               State = StateERROR;
0014F2 964842rr        3592         MOV.B   ES,#SEG( _State )
0014F6 9908rrrr        3593         MOV.W   R0,#SOF( _State )
0014FA 92081E          3594         MOV.B   [R0],#01EH
                       3595 ; rs232par.c  810                               break;
                       3597         BR      _329
0014FD D506DD         +3597         JMP.L   _329
                       3598 ; rs232par.c  811       
                       3599 ; rs232par.c  812                       case StateD5:
001500                 3601 _126:
                       3602 ; rs232par.c  813                               if ( iswhitespace(c))
001500 91A40A          3604         CMP.B   R5L,#0AH
001503 F30A            3605         BEQ     _128
001505 91A420          3606         CMP.B   R5L,#020H
001508 FC07            3607         BGT     _128
                       3608 ; rs232par.c  814                               {
                       3609 ; rs232par.c  815                                       State = StateD5;
00150A 964842rr        3611         MOV.B   ES,#SEG( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  48

ADDR   CODE            LINE SOURCELINE
00150E 9908rrrr        3612         MOV.W   R0,#SOF( _State )
001512 92080F          3613         MOV.B   [R0],#0FH
                       3614 ; rs232par.c  816                                       break;
                       3616         BR      _329
001515 D506D1         +3616         JMP.L   _329
                       3617 ; rs232par.c  817                               }
001518                 3619 _128:
                       3620 ; rs232par.c  818       
                       3621 ; rs232par.c  819                               if ( isdigit(c))
001518 810A            3623         MOV.B   R0L,R5L
00151A 9019            3624         SEXT.B  R0H
00151C 9819            3625         SEXT.W  R1
00151E 964842rr        3626         MOV.B   ES,#SEG( __ctype_+1 )
001522 8500rrrr        3627         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
001526 9019            3628         SEXT.B  R0H
001528 99050004        3629         AND.W   R0,#04H
00152C F328            3630         BEQ     _130
                       3631 ; rs232par.c  820                               {
                       3632 ; rs232par.c  821                                       if ( CmdNdx < 255)
00152E 964842rr        3634         MOV.B   ES,#SEG( _CmdNdx )
001532 9908rrrr        3635         MOV.W   R0,#SOF( _CmdNdx )
001536 8A00            3636         MOV.W   R0,[R0]
001538 990400FF        3637         CMP.W   R0,#0FFH
00153C F013            3638         BCC     _129
                       3639 ; rs232par.c  822                                       {
                       3640 ; rs232par.c  823                                               Cmd[++CmdNdx] = c;
00153E A901            3642         ADDS.W  R0,#01H
001540 8920            3643         MOV.W   R2,R0
001542 B930            3644         MOVS.W  R3,#00H
001544 964842rr        3645         MOV.B   ES,#SEG( _CmdNdx )
001548 9918rrrr        3646         MOV.W   R1,#SOF( _CmdNdx )
00154C 8A09            3647         MOV.W   [R1],R0
00154E 964842rr        3648         MOV.B   ES,#SEG( _Cmd )
001552 85AArrrr        3649         MOV.B   [R2+SOF( _Cmd )],R5L
                       3650 ; rs232par.c  824                                               State = StateD7;
001556 964842rr        3652         MOV.B   ES,#SEG( _State )
00155A 9908rrrr        3653         MOV.W   R0,#SOF( _State )
00155E 920811          3654         MOV.B   [R0],#011H
                       3655 ; rs232par.c  825                                               break;
                       3657         BR      _329
001561 D506AB         +3657         JMP.L   _329
                       3658 ; rs232par.c  826                                       }
001564                 3660 _129:
                       3661 ; rs232par.c  827                                       SCPIError = TooManyDigits;               
                                    // TBD
001564 964842rr        3663         MOV.B   ES,#SEG( _SCPIError )
001568 9908rrrr        3664         MOV.W   R0,#SOF( _SCPIError )
00156C 9A080010        3665         MOV.W   [R0],#010H
                       3666 ; rs232par.c  828                                       State = StateERROR;
001570 964842rr        3668         MOV.B   ES,#SEG( _State )
001574 9908rrrr        3669         MOV.W   R0,#SOF( _State )
001578 92081E          3670         MOV.B   [R0],#01EH
                       3671 ; rs232par.c  829                                       break;
                       3673         BR      _329
00157B D5069E         +3673         JMP.L   _329
                       3674 ; rs232par.c  830                               }
00157E                 3676 _130:
                       3677 ; rs232par.c  831       
                       3678 ; rs232par.c  832                               if ( isplussign(c) || isminussign(c))
00157E 91A42B          3680         CMP.B   R5L,#02BH
001581 F303            3681         BEQ     _131
001583 91A42D          3682         CMP.B   R5L,#02DH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  49

ADDR   CODE            LINE SOURCELINE
001586 F228            3683         BNE     _133
001586 F228            3683         BNE     _133
001588                 3684 _131:
                       3685 ; rs232par.c  833                               {
                       3686 ; rs232par.c  834                                       if ( CmdNdx < 255)
001588 964842rr        3688         MOV.B   ES,#SEG( _CmdNdx )
00158C 9908rrrr        3689         MOV.W   R0,#SOF( _CmdNdx )
001590 8A00            3690         MOV.W   R0,[R0]
001592 990400FF        3691         CMP.W   R0,#0FFH
001596 F013            3692         BCC     _132
                       3693 ; rs232par.c  835                                       {
                       3694 ; rs232par.c  836                                               Cmd[++CmdNdx] = c;
001598 A901            3696         ADDS.W  R0,#01H
00159A 8920            3697         MOV.W   R2,R0
00159C B930            3698         MOVS.W  R3,#00H
00159E 964842rr        3699         MOV.B   ES,#SEG( _CmdNdx )
0015A2 9918rrrr        3700         MOV.W   R1,#SOF( _CmdNdx )
0015A6 8A09            3701         MOV.W   [R1],R0
0015A8 964842rr        3702         MOV.B   ES,#SEG( _Cmd )
0015AC 85AArrrr        3703         MOV.B   [R2+SOF( _Cmd )],R5L
                       3704 ; rs232par.c  837                                               State = StateD6;
0015B0 964842rr        3706         MOV.B   ES,#SEG( _State )
0015B4 9908rrrr        3707         MOV.W   R0,#SOF( _State )
0015B8 920810          3708         MOV.B   [R0],#010H
                       3709 ; rs232par.c  838                                               break;
                       3711         BR      _329
0015BB D5067E         +3711         JMP.L   _329
                       3712 ; rs232par.c  839                                       }
0015BE                 3714 _132:
                       3715 ; rs232par.c  840                                       SCPIError = TooManyDigits;               
                                    // TBD
0015BE 964842rr        3717         MOV.B   ES,#SEG( _SCPIError )
0015C2 9908rrrr        3718         MOV.W   R0,#SOF( _SCPIError )
0015C6 9A080010        3719         MOV.W   [R0],#010H
                       3720 ; rs232par.c  841                                       State = StateERROR;
0015CA 964842rr        3722         MOV.B   ES,#SEG( _State )
0015CE 9908rrrr        3723         MOV.W   R0,#SOF( _State )
0015D2 92081E          3724         MOV.B   [R0],#01EH
                       3725 ; rs232par.c  842                                       break;
                       3727         BR      _329
0015D5 D50671         +3727         JMP.L   _329
                       3728 ; rs232par.c  843                               }
0015D8                 3730 _133:
                       3731 ; rs232par.c  844       
                       3732 ; rs232par.c  845                               SCPIError = InvalidChar;
0015D8 964842rr        3734         MOV.B   ES,#SEG( _SCPIError )
0015DC 9908rrrr        3735         MOV.W   R0,#SOF( _SCPIError )
0015E0 BA02            3736         MOV.W   [R0],#02H
                       3737 ; rs232par.c  846                               State = StateERROR;
0015E2 964842rr        3739         MOV.B   ES,#SEG( _State )
0015E6 9908rrrr        3740         MOV.W   R0,#SOF( _State )
0015EA 92081E          3741         MOV.B   [R0],#01EH
                       3742 ; rs232par.c  847                               break;
                       3744         BR      _329
0015ED D50665         +3744         JMP.L   _329
                       3745 ; rs232par.c  848       
                       3746 ; rs232par.c  849                       case StateD6:
0015F0                 3748 _134:
                       3749 ; rs232par.c  850                               if ( isdigit(c))
0015F0 810A            3751         MOV.B   R0L,R5L
0015F2 9019            3752         SEXT.B  R0H
0015F4 9819            3753         SEXT.W  R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  50

ADDR   CODE            LINE SOURCELINE
0015F6 964842rr        3754         MOV.B   ES,#SEG( __ctype_+1 )
0015FA 8500rrrr        3755         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
0015FE 9019            3756         SEXT.B  R0H
001600 99050004        3757         AND.W   R0,#04H
001604 F328            3758         BEQ     _136
                       3759 ; rs232par.c  851                               {
                       3760 ; rs232par.c  852                                       if ( CmdNdx < 255)
001606 964842rr        3762         MOV.B   ES,#SEG( _CmdNdx )
00160A 9908rrrr        3763         MOV.W   R0,#SOF( _CmdNdx )
00160E 8A00            3764         MOV.W   R0,[R0]
001610 990400FF        3765         CMP.W   R0,#0FFH
001614 F013            3766         BCC     _135
                       3767 ; rs232par.c  853                                       {
                       3768 ; rs232par.c  854                                               Cmd[++CmdNdx] = c;
001616 A901            3770         ADDS.W  R0,#01H
001618 8920            3771         MOV.W   R2,R0
00161A B930            3772         MOVS.W  R3,#00H
00161C 964842rr        3773         MOV.B   ES,#SEG( _CmdNdx )
001620 9918rrrr        3774         MOV.W   R1,#SOF( _CmdNdx )
001624 8A09            3775         MOV.W   [R1],R0
001626 964842rr        3776         MOV.B   ES,#SEG( _Cmd )
00162A 85AArrrr        3777         MOV.B   [R2+SOF( _Cmd )],R5L
                       3778 ; rs232par.c  855                                               State = StateD7;
00162E 964842rr        3780         MOV.B   ES,#SEG( _State )
001632 9908rrrr        3781         MOV.W   R0,#SOF( _State )
001636 920811          3782         MOV.B   [R0],#011H
                       3783 ; rs232par.c  856                                               break;
                       3785         BR      _329
001639 D5063F         +3785         JMP.L   _329
                       3786 ; rs232par.c  857                                       }
00163C                 3788 _135:
                       3789 ; rs232par.c  858                                       SCPIError = TooManyDigits;               
                                    // TBD
00163C 964842rr        3791         MOV.B   ES,#SEG( _SCPIError )
001640 9908rrrr        3792         MOV.W   R0,#SOF( _SCPIError )
001644 9A080010        3793         MOV.W   [R0],#010H
                       3794 ; rs232par.c  859                                       State = StateERROR;
001648 964842rr        3796         MOV.B   ES,#SEG( _State )
00164C 9908rrrr        3797         MOV.W   R0,#SOF( _State )
001650 92081E          3798         MOV.B   [R0],#01EH
                       3799 ; rs232par.c  860                                       break;
                       3801         BR      _329
001653 D50632         +3801         JMP.L   _329
                       3802 ; rs232par.c  861                               }
001656                 3804 _136:
                       3805 ; rs232par.c  862       
                       3806 ; rs232par.c  863                               SCPIError = InvalidChar;
001656 964842rr        3808         MOV.B   ES,#SEG( _SCPIError )
00165A 9908rrrr        3809         MOV.W   R0,#SOF( _SCPIError )
00165E BA02            3810         MOV.W   [R0],#02H
                       3811 ; rs232par.c  864                               State = StateERROR;
001660 964842rr        3813         MOV.B   ES,#SEG( _State )
001664 9908rrrr        3814         MOV.W   R0,#SOF( _State )
001668 92081E          3815         MOV.B   [R0],#01EH
                       3816 ; rs232par.c  865                               break;
                       3818         BR      _329
00166B D50626         +3818         JMP.L   _329
                       3819 ; rs232par.c  866       
                       3820 ; rs232par.c  867                       case StateD7:
00166E                 3822 _137:
                       3823 ; rs232par.c  868                               if ( iswhitespace(c))
00166E 91A40A          3825         CMP.B   R5L,#0AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  51

ADDR   CODE            LINE SOURCELINE
001671 F315            3826         BEQ     _139
001673 91A420          3827         CMP.B   R5L,#020H
001676 FC12            3828         BGT     _139
                       3829 ; rs232par.c  869                               {
                       3830 ; rs232par.c  870                                       State = StateP7;
001678 964842rr        3832         MOV.B   ES,#SEG( _State )
00167C 9908rrrr        3833         MOV.W   R0,#SOF( _State )
001680 B207            3834         MOV.B   [R0],#07H
                       3835 ; rs232par.c  871                                       ParType[ParCnt] = P_DecNum;
001682 964842rr        3837         MOV.B   ES,#SEG( _ParCnt )
001686 9908rrrr        3838         MOV.W   R0,#SOF( _ParCnt )
00168A 8200            3839         MOV.B   R0L,[R0]
00168C B110            3840         MOVS.B  R0H,#00H
00168E B910            3841         MOVS.W  R1,#00H
001690 964842rr        3842         MOV.B   ES,#SEG( _ParType )
001694 B502rrrr        3843         MOV.B   [R0+SOF( _ParType )],#02H
                       3844 ; rs232par.c  872                                       break;
                       3846         BR      _329
001698 D50610         +3846         JMP.L   _329
                       3847 ; rs232par.c  873                               }
00169C                 3849 _139:
                       3850 ; rs232par.c  874       
                       3851 ; rs232par.c  875                               if ( isdigit(c))
00169C 810A            3853         MOV.B   R0L,R5L
00169E 9019            3854         SEXT.B  R0H
0016A0 9819            3855         SEXT.W  R1
0016A2 964842rr        3856         MOV.B   ES,#SEG( __ctype_+1 )
0016A6 8500rrrr        3857         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
0016AA 9019            3858         SEXT.B  R0H
0016AC 99050004        3859         AND.W   R0,#04H
0016B0 F323            3860         BEQ     _141
                       3861 ; rs232par.c  876                               {
                       3862 ; rs232par.c  877                                       if ( CmdNdx < 255)
0016B2 964842rr        3864         MOV.B   ES,#SEG( _CmdNdx )
0016B6 9908rrrr        3865         MOV.W   R0,#SOF( _CmdNdx )
0016BA 8A00            3866         MOV.W   R0,[R0]
0016BC 990400FF        3867         CMP.W   R0,#0FFH
0016C0 F00E            3868         BCC     _140
                       3869 ; rs232par.c  878                                       {
                       3870 ; rs232par.c  879                                               Cmd[++CmdNdx] = c;
0016C2 A901            3872         ADDS.W  R0,#01H
0016C4 8920            3873         MOV.W   R2,R0
0016C6 B930            3874         MOVS.W  R3,#00H
0016C8 964842rr        3875         MOV.B   ES,#SEG( _CmdNdx )
0016CC 9918rrrr        3876         MOV.W   R1,#SOF( _CmdNdx )
0016D0 8A09            3877         MOV.W   [R1],R0
0016D2 964842rr        3878         MOV.B   ES,#SEG( _Cmd )
0016D6 85AArrrr        3879         MOV.B   [R2+SOF( _Cmd )],R5L
                       3880 ; rs232par.c  880                                               break;
                       3882         BR      _329
0016DA D505EF         +3882         JMP.L   _329
                       3883 ; rs232par.c  881                                       }
0016DE                 3885 _140:
                       3886 ; rs232par.c  882                                       SCPIError = TooManyDigits;               
                                    // TBD
0016DE 964842rr        3888         MOV.B   ES,#SEG( _SCPIError )
0016E2 9908rrrr        3889         MOV.W   R0,#SOF( _SCPIError )
0016E6 9A080010        3890         MOV.W   [R0],#010H
                       3891 ; rs232par.c  883                                       State = StateERROR;
0016EA 964842rr        3893         MOV.B   ES,#SEG( _State )
0016EE 9908rrrr        3894         MOV.W   R0,#SOF( _State )
0016F2 92081E          3895         MOV.B   [R0],#01EH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  52

ADDR   CODE            LINE SOURCELINE
                       3896 ; rs232par.c  884                                       break;
                       3898         BR      _329
0016F5 D505E1         +3898         JMP.L   _329
                       3899 ; rs232par.c  885                               }
0016F8                 3901 _141:
                       3902 ; rs232par.c  886       
                       3903 ; rs232par.c  887                               if ( issemicolon(c))
0016F8 91A43B          3905         CMP.B   R5L,#03BH
0016FB F225            3906         BNE     _142
                       3907 ; rs232par.c  888                               {
                       3908 ; rs232par.c  889                                       Cmd[++CmdNdx] = 0;
0016FD 964842rr        3910         MOV.B   ES,#SEG( _CmdNdx )
001701 9908rrrr        3911         MOV.W   R0,#SOF( _CmdNdx )
001705 8A00            3912         MOV.W   R0,[R0]
001707 A901            3913         ADDS.W  R0,#01H
001709 8920            3914         MOV.W   R2,R0
00170B B930            3915         MOVS.W  R3,#00H
00170D 964842rr        3916         MOV.B   ES,#SEG( _CmdNdx )
001711 9918rrrr        3917         MOV.W   R1,#SOF( _CmdNdx )
001715 8A09            3918         MOV.W   [R1],R0
001717 964842rr        3919         MOV.B   ES,#SEG( _Cmd )
00171B B520rrrr        3920         MOV.B   [R2+SOF( _Cmd )],#00H
                       3921 ; rs232par.c  890                                       State = StateP0;
00171F 964842rr        3923         MOV.B   ES,#SEG( _State )
001723 9908rrrr        3924         MOV.W   R0,#SOF( _State )
001727 B200            3925         MOV.B   [R0],#00H
                       3926 ; rs232par.c  891                                       ParType[ParCnt] = P_DecNum;
001729 964842rr        3928         MOV.B   ES,#SEG( _ParCnt )
00172D 9908rrrr        3929         MOV.W   R0,#SOF( _ParCnt )
001731 8200            3930         MOV.B   R0L,[R0]
001733 B110            3931         MOVS.B  R0H,#00H
001735 B910            3932         MOVS.W  R1,#00H
001737 964842rr        3933         MOV.B   ES,#SEG( _ParType )
00173B B502rrrr        3934         MOV.B   [R0+SOF( _ParType )],#02H
                       3935 ; rs232par.c  892                                       return( PMUS);
00173F 910803          3937         MOV.B   R0L,#03H
                       3938         BR      _384
001742 D505C7         +3938         JMP.L   _384
                       3939 ; rs232par.c  893                               }
001746                 3941 _142:
                       3942 ; rs232par.c  894       
                       3943 ; rs232par.c  895                               if ( iscomma(c))
001746 91A42C          3945         CMP.B   R5L,#02CH
001749 F22C            3946         BNE     _143
                       3947 ; rs232par.c  896                               {
                       3948 ; rs232par.c  897                                       Cmd[++CmdNdx] = c;
00174B 964842rr        3950         MOV.B   ES,#SEG( _CmdNdx )
00174F 9908rrrr        3951         MOV.W   R0,#SOF( _CmdNdx )
001753 8A00            3952         MOV.W   R0,[R0]
001755 A901            3953         ADDS.W  R0,#01H
001757 8920            3954         MOV.W   R2,R0
001759 B930            3955         MOVS.W  R3,#00H
00175B 964842rr        3956         MOV.B   ES,#SEG( _CmdNdx )
00175F 9918rrrr        3957         MOV.W   R1,#SOF( _CmdNdx )
001763 8A09            3958         MOV.W   [R1],R0
001765 964842rr        3959         MOV.B   ES,#SEG( _Cmd )
001769 85AArrrr        3960         MOV.B   [R2+SOF( _Cmd )],R5L
                       3961 ; rs232par.c  898                                       State = StateP8;
00176D 964842rr        3963         MOV.B   ES,#SEG( _State )
001771 9908rrrr        3964         MOV.W   R0,#SOF( _State )
001775 920808          3965         MOV.B   [R0],#08H
                       3966 ; rs232par.c  899                                       ParType[ParCnt] = P_DecNum;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  53

ADDR   CODE            LINE SOURCELINE
001778 964842rr        3968         MOV.B   ES,#SEG( _ParCnt )
00177C 9908rrrr        3969         MOV.W   R0,#SOF( _ParCnt )
001780 8200            3970         MOV.B   R0L,[R0]
001782 8140            3971         MOV.B   R2L,R0L
001784 B150            3972         MOVS.B  R2H,#00H
001786 B930            3973         MOVS.W  R3,#00H
001788 964842rr        3974         MOV.B   ES,#SEG( _ParType )
00178C B522rrrr        3975         MOV.B   [R2+SOF( _ParType )],#02H
                       3976 ; rs232par.c  900                                       ParCnt++;
001790 A101            3978         ADDS.B  R0L,#01H
001792 964842rr        3979         MOV.B   ES,#SEG( _ParCnt )
001796 9918rrrr        3980         MOV.W   R1,#SOF( _ParCnt )
00179A 8209            3981         MOV.B   [R1],R0L
                       3982 ; rs232par.c  901                                       return( Ready);
00179C 910802          3984         MOV.B   R0L,#02H
                       3985         BR      _384
00179F D50598         +3985         JMP.L   _384
                       3986 ; rs232par.c  902                               }
0017A2                 3988 _143:
                       3989 ; rs232par.c  903       
                       3990 ; rs232par.c  904                               if ( isnewline(c))
0017A2 91A40A          3992         CMP.B   R5L,#0AH
0017A5 F225            3993         BNE     _144
                       3994 ; rs232par.c  905                               {
                       3995 ; rs232par.c  906                                       Cmd[++CmdNdx] = 0;
0017A7 964842rr        3997         MOV.B   ES,#SEG( _CmdNdx )
0017AB 9908rrrr        3998         MOV.W   R0,#SOF( _CmdNdx )
0017AF 8A00            3999         MOV.W   R0,[R0]
0017B1 A901            4000         ADDS.W  R0,#01H
0017B3 8920            4001         MOV.W   R2,R0
0017B5 B930            4002         MOVS.W  R3,#00H
0017B7 964842rr        4003         MOV.B   ES,#SEG( _CmdNdx )
0017BB 9918rrrr        4004         MOV.W   R1,#SOF( _CmdNdx )
0017BF 8A09            4005         MOV.W   [R1],R0
0017C1 964842rr        4006         MOV.B   ES,#SEG( _Cmd )
0017C5 B520rrrr        4007         MOV.B   [R2+SOF( _Cmd )],#00H
                       4008 ; rs232par.c  907                                       State = StateP0;
0017C9 964842rr        4010         MOV.B   ES,#SEG( _State )
0017CD 9908rrrr        4011         MOV.W   R0,#SOF( _State )
0017D1 B200            4012         MOV.B   [R0],#00H
                       4013 ; rs232par.c  908                                       ParType[ParCnt] = P_DecNum;
0017D3 964842rr        4015         MOV.B   ES,#SEG( _ParCnt )
0017D7 9908rrrr        4016         MOV.W   R0,#SOF( _ParCnt )
0017DB 8200            4017         MOV.B   R0L,[R0]
0017DD B110            4018         MOVS.B  R0H,#00H
0017DF B910            4019         MOVS.W  R1,#00H
0017E1 964842rr        4020         MOV.B   ES,#SEG( _ParType )
0017E5 B502rrrr        4021         MOV.B   [R0+SOF( _ParType )],#02H
                       4022 ; rs232par.c  909                                       return( PMT);
0017E9 910804          4024         MOV.B   R0L,#04H
                       4025         BR      _384
0017EC D50572         +4025         JMP.L   _384
                       4026 ; rs232par.c  910                               }
0017F0                 4028 _144:
                       4029 ; rs232par.c  911       
                       4030 ; rs232par.c  912                               SCPIError = InvalidChar;
0017F0 964842rr        4032         MOV.B   ES,#SEG( _SCPIError )
0017F4 9908rrrr        4033         MOV.W   R0,#SOF( _SCPIError )
0017F8 BA02            4034         MOV.W   [R0],#02H
                       4035 ; rs232par.c  913                               State = StateERROR;
0017FA 964842rr        4037         MOV.B   ES,#SEG( _State )
0017FE 9908rrrr        4038         MOV.W   R0,#SOF( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  54

ADDR   CODE            LINE SOURCELINE
001802 92081E          4039         MOV.B   [R0],#01EH
                       4040 ; rs232par.c  914                               break;
                       4042         BR      _329
001805 D50559         +4042         JMP.L   _329
                       4043 ; rs232par.c  915       
                       4044 ; rs232par.c  916                       case StateS0:                                            
                                     // STRING PROGRAM DATA
001808                 4046 _145:
                       4048 ; rs232par.c  917                               if ( isquote(c))
001808 91A427          4050         CMP.B   R5L,#027H
00180B F208            4051         BNE     _146
                       4052 ; rs232par.c  918                               {
                       4053 ; rs232par.c  919                                       State = StateS1;
00180D 964842rr        4055         MOV.B   ES,#SEG( _State )
001811 9908rrrr        4056         MOV.W   R0,#SOF( _State )
001815 920813          4057         MOV.B   [R0],#013H
                       4058 ; rs232par.c  920                                       break;
                       4060         BR      _329
001818 D50550         +4060         JMP.L   _329
                       4061 ; rs232par.c  921                               }
00181C                 4063 _146:
                       4066 ; rs232par.c  922       
                       4067 ; rs232par.c  923                               Cmd[CmdNdx++] = c_str;
00181C 964842rr        4069         MOV.B   ES,#SEG( _CmdNdx )
001820 9908rrrr        4070         MOV.W   R0,#SOF( _CmdNdx )
001824 8A00            4071         MOV.W   R0,[R0]
001826 8920            4072         MOV.W   R2,R0
001828 B930            4073         MOVS.W  R3,#00H
00182A 964842rr        4074         MOV.B   ES,#SEG( _Cmd )
00182E 859Arrrr        4075         MOV.B   [R2+SOF( _Cmd )],R4H
001832 A901            4076         ADDS.W  R0,#01H
001834 964842rr        4077         MOV.B   ES,#SEG( _CmdNdx )
001838 9918rrrr        4078         MOV.W   R1,#SOF( _CmdNdx )
00183C 8A09            4079         MOV.W   [R1],R0
                       4080 ; rs232par.c  924                               break;
                       4082         BR      _329
00183E D5053D         +4082         JMP.L   _329
                       4083 ; rs232par.c  925       
                       4084 ; rs232par.c  926                       case StateS1:
001842                 4086 _147:
                       4087 ; rs232par.c  927                               if ( iswhitespace(c))
001842 91A40A          4089         CMP.B   R5L,#0AH
001845 F31F            4090         BEQ     _149
001847 91A420          4091         CMP.B   R5L,#020H
00184A FC1C            4092         BGT     _149
                       4093 ; rs232par.c  928                               {
                       4094 ; rs232par.c  929                                       Cmd[CmdNdx] = 0;
00184C 964842rr        4096         MOV.B   ES,#SEG( _CmdNdx )
001850 9908rrrr        4097         MOV.W   R0,#SOF( _CmdNdx )
001854 8A00            4098         MOV.W   R0,[R0]
001856 B910            4099         MOVS.W  R1,#00H
001858 964842rr        4100         MOV.B   ES,#SEG( _Cmd )
00185C B500rrrr        4101         MOV.B   [R0+SOF( _Cmd )],#00H
                       4102 ; rs232par.c  930                                       State = StateP7;
001860 964842rr        4104         MOV.B   ES,#SEG( _State )
001864 9908rrrr        4105         MOV.W   R0,#SOF( _State )
001868 B207            4106         MOV.B   [R0],#07H
                       4107 ; rs232par.c  931                                       ParType[ParCnt] = P_String;
00186A 964842rr        4109         MOV.B   ES,#SEG( _ParCnt )
00186E 9908rrrr        4110         MOV.W   R0,#SOF( _ParCnt )
001872 8200            4111         MOV.B   R0L,[R0]
001874 B110            4112         MOVS.B  R0H,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  55

ADDR   CODE            LINE SOURCELINE
001876 B910            4113         MOVS.W  R1,#00H
001878 964842rr        4114         MOV.B   ES,#SEG( _ParType )
00187C B506rrrr        4115         MOV.B   [R0+SOF( _ParType )],#06H
                       4116 ; rs232par.c  932                                       break;
                       4118         BR      _329
001880 D5051C         +4118         JMP.L   _329
                       4119 ; rs232par.c  933                               }
001884                 4121 _149:
                       4122 ; rs232par.c  934       
                       4123 ; rs232par.c  935                               if ( issemicolon(c))
001884 91A43B          4125         CMP.B   R5L,#03BH
001887 F21E            4126         BNE     _150
                       4127 ; rs232par.c  936                               {
                       4128 ; rs232par.c  937                                       Cmd[CmdNdx] = 0;
001889 964842rr        4130         MOV.B   ES,#SEG( _CmdNdx )
00188D 9908rrrr        4131         MOV.W   R0,#SOF( _CmdNdx )
001891 8A00            4132         MOV.W   R0,[R0]
001893 B910            4133         MOVS.W  R1,#00H
001895 964842rr        4134         MOV.B   ES,#SEG( _Cmd )
001899 B500rrrr        4135         MOV.B   [R0+SOF( _Cmd )],#00H
                       4136 ; rs232par.c  938                                       State = StateP0;
00189D 964842rr        4138         MOV.B   ES,#SEG( _State )
0018A1 9908rrrr        4139         MOV.W   R0,#SOF( _State )
0018A5 B200            4140         MOV.B   [R0],#00H
                       4141 ; rs232par.c  939                                       ParType[ParCnt] = P_String;
0018A7 964842rr        4143         MOV.B   ES,#SEG( _ParCnt )
0018AB 9908rrrr        4144         MOV.W   R0,#SOF( _ParCnt )
0018AF 8200            4145         MOV.B   R0L,[R0]
0018B1 B110            4146         MOVS.B  R0H,#00H
0018B3 B910            4147         MOVS.W  R1,#00H
0018B5 964842rr        4148         MOV.B   ES,#SEG( _ParType )
0018B9 B506rrrr        4149         MOV.B   [R0+SOF( _ParType )],#06H
                       4150 ; rs232par.c  940                                       return( PMUS);
0018BD 910803          4152         MOV.B   R0L,#03H
                       4153         BR      _384
0018C0 D50508         +4153         JMP.L   _384
                       4154 ; rs232par.c  941                               }
0018C4                 4156 _150:
                       4157 ; rs232par.c  942       
                       4158 ; rs232par.c  943                               if ( isquote(c))
0018C4 91A427          4160         CMP.B   R5L,#027H
0018C7 F219            4161         BNE     _151
                       4162 ; rs232par.c  944                               {
                       4163 ; rs232par.c  945                                       Cmd[CmdNdx++] = c;
0018C9 964842rr        4165         MOV.B   ES,#SEG( _CmdNdx )
0018CD 9908rrrr        4166         MOV.W   R0,#SOF( _CmdNdx )
0018D1 8A00            4167         MOV.W   R0,[R0]
0018D3 8920            4168         MOV.W   R2,R0
0018D5 B930            4169         MOVS.W  R3,#00H
0018D7 964842rr        4170         MOV.B   ES,#SEG( _Cmd )
0018DB 85AArrrr        4171         MOV.B   [R2+SOF( _Cmd )],R5L
0018DF A901            4172         ADDS.W  R0,#01H
0018E1 964842rr        4173         MOV.B   ES,#SEG( _CmdNdx )
0018E5 9918rrrr        4174         MOV.W   R1,#SOF( _CmdNdx )
0018E9 8A09            4175         MOV.W   [R1],R0
                       4176 ; rs232par.c  946                                       State = StateS0;
0018EB 964842rr        4178         MOV.B   ES,#SEG( _State )
0018EF 9908rrrr        4179         MOV.W   R0,#SOF( _State )
0018F3 920812          4180         MOV.B   [R0],#012H
                       4181 ; rs232par.c  947                                       break;
                       4183         BR      _329
0018F6 D504E1         +4183         JMP.L   _329
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  56

ADDR   CODE            LINE SOURCELINE
                       4184 ; rs232par.c  948                               }
0018FA                 4186 _151:
                       4187 ; rs232par.c  949       
                       4188 ; rs232par.c  950                               if ( iscomma(c))
0018FA 91A42C          4190         CMP.B   R5L,#02CH
0018FD F21E            4191         BNE     _152
                       4192 ; rs232par.c  951                               {
                       4193 ; rs232par.c  952       //                              Cmd[++CmdNdx] = c;
                       4194 ; rs232par.c  953                                       Cmd[CmdNdx] = c;                         
                                                                    // Chang. KEn 000615
0018FF 964842rr        4196         MOV.B   ES,#SEG( _CmdNdx )
001903 9908rrrr        4197         MOV.W   R0,#SOF( _CmdNdx )
001907 8A00            4198         MOV.W   R0,[R0]
001909 B910            4199         MOVS.W  R1,#00H
00190B 964842rr        4200         MOV.B   ES,#SEG( _Cmd )
00190F 85A8rrrr        4201         MOV.B   [R0+SOF( _Cmd )],R5L
                       4202 ; rs232par.c  954                                       State = StateP8;
001913 964842rr        4204         MOV.B   ES,#SEG( _State )
001917 9908rrrr        4205         MOV.W   R0,#SOF( _State )
00191B 920808          4206         MOV.B   [R0],#08H
                       4207 ; rs232par.c  955                                       ParType[ParCnt] = P_String;
00191E 964842rr        4209         MOV.B   ES,#SEG( _ParCnt )
001922 9908rrrr        4210         MOV.W   R0,#SOF( _ParCnt )
001926 8200            4211         MOV.B   R0L,[R0]
001928 B110            4212         MOVS.B  R0H,#00H
00192A B910            4213         MOVS.W  R1,#00H
00192C 964842rr        4214         MOV.B   ES,#SEG( _ParType )
001930 B506rrrr        4215         MOV.B   [R0+SOF( _ParType )],#06H
                       4216 ; rs232par.c  956                                       return( Ready);
001934 910802          4218         MOV.B   R0L,#02H
                       4219         BR      _384
001937 D504CC         +4219         JMP.L   _384
                       4220 ; rs232par.c  957                               }
00193A                 4222 _152:
                       4223 ; rs232par.c  958       
                       4224 ; rs232par.c  959                               if ( isnewline(c))
00193A 91A40A          4226         CMP.B   R5L,#0AH
00193D F21E            4227         BNE     _153
                       4228 ; rs232par.c  960                               {
                       4229 ; rs232par.c  961                                       Cmd[CmdNdx] = 0;
00193F 964842rr        4231         MOV.B   ES,#SEG( _CmdNdx )
001943 9908rrrr        4232         MOV.W   R0,#SOF( _CmdNdx )
001947 8A00            4233         MOV.W   R0,[R0]
001949 B910            4234         MOVS.W  R1,#00H
00194B 964842rr        4235         MOV.B   ES,#SEG( _Cmd )
00194F B500rrrr        4236         MOV.B   [R0+SOF( _Cmd )],#00H
                       4237 ; rs232par.c  962                                       State = StateP0;
001953 964842rr        4239         MOV.B   ES,#SEG( _State )
001957 9908rrrr        4240         MOV.W   R0,#SOF( _State )
00195B B200            4241         MOV.B   [R0],#00H
                       4242 ; rs232par.c  963                                       ParType[ParCnt] = P_String;
00195D 964842rr        4244         MOV.B   ES,#SEG( _ParCnt )
001961 9908rrrr        4245         MOV.W   R0,#SOF( _ParCnt )
001965 8200            4246         MOV.B   R0L,[R0]
001967 B110            4247         MOVS.B  R0H,#00H
001969 B910            4248         MOVS.W  R1,#00H
00196B 964842rr        4249         MOV.B   ES,#SEG( _ParType )
00196F B506rrrr        4250         MOV.B   [R0+SOF( _ParType )],#06H
                       4251 ; rs232par.c  964                                       return( PMT);
001973 910804          4253         MOV.B   R0L,#04H
                       4254         BR      _384
001976 D504AD         +4254         JMP.L   _384
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  57

ADDR   CODE            LINE SOURCELINE
                       4255 ; rs232par.c  965                               }
00197A                 4257 _153:
                       4258 ; rs232par.c  966       
                       4259 ; rs232par.c  967                               SCPIError = InvalidChar;
00197A 964842rr        4261         MOV.B   ES,#SEG( _SCPIError )
00197E 9908rrrr        4262         MOV.W   R0,#SOF( _SCPIError )
001982 BA02            4263         MOV.W   [R0],#02H
                       4264 ; rs232par.c  968                               State = StateERROR;
001984 964842rr        4266         MOV.B   ES,#SEG( _State )
001988 9908rrrr        4267         MOV.W   R0,#SOF( _State )
00198C 92081E          4268         MOV.B   [R0],#01EH
                       4269 ; rs232par.c  969                               break;
                       4271         BR      _329
00198F D50494         +4271         JMP.L   _329
                       4272 ; rs232par.c  970       
                       4273 ; rs232par.c  971                       case StateS2:
001992                 4275 _154:
                       4278 ; rs232par.c  972                               if ( isdoublequote(c))
001992 91A422          4280         CMP.B   R5L,#022H
001995 F208            4281         BNE     _155
                       4282 ; rs232par.c  973                               {
                       4283 ; rs232par.c  974                                       State = StateS3;
001997 964842rr        4285         MOV.B   ES,#SEG( _State )
00199B 9908rrrr        4286         MOV.W   R0,#SOF( _State )
00199F 920815          4287         MOV.B   [R0],#015H
                       4288 ; rs232par.c  975                                       break;
                       4290         BR      _329
0019A2 D5048B         +4290         JMP.L   _329
                       4291 ; rs232par.c  976                               }
0019A6                 4293 _155:
                       4296 ; rs232par.c  977       
                       4297 ; rs232par.c  978                               Cmd[CmdNdx++] = c_str;
0019A6 964842rr        4299         MOV.B   ES,#SEG( _CmdNdx )
0019AA 9908rrrr        4300         MOV.W   R0,#SOF( _CmdNdx )
0019AE 8A00            4301         MOV.W   R0,[R0]
0019B0 8920            4302         MOV.W   R2,R0
0019B2 B930            4303         MOVS.W  R3,#00H
0019B4 964842rr        4304         MOV.B   ES,#SEG( _Cmd )
0019B8 859Arrrr        4305         MOV.B   [R2+SOF( _Cmd )],R4H
0019BC A901            4306         ADDS.W  R0,#01H
0019BE 964842rr        4307         MOV.B   ES,#SEG( _CmdNdx )
0019C2 9918rrrr        4308         MOV.W   R1,#SOF( _CmdNdx )
0019C6 8A09            4309         MOV.W   [R1],R0
                       4310 ; rs232par.c  979                               break;
                       4312         BR      _329
0019C8 D50478         +4312         JMP.L   _329
                       4313 ; rs232par.c  980       
                       4314 ; rs232par.c  981                       case StateS3:
0019CC                 4316 _156:
                       4317 ; rs232par.c  982                               if ( iswhitespace(c))
0019CC 91A40A          4319         CMP.B   R5L,#0AH
0019CF F31F            4320         BEQ     _158
0019D1 91A420          4321         CMP.B   R5L,#020H
0019D4 FC1C            4322         BGT     _158
                       4323 ; rs232par.c  983                               {
                       4324 ; rs232par.c  984                                       Cmd[CmdNdx] = 0;
0019D6 964842rr        4326         MOV.B   ES,#SEG( _CmdNdx )
0019DA 9908rrrr        4327         MOV.W   R0,#SOF( _CmdNdx )
0019DE 8A00            4328         MOV.W   R0,[R0]
0019E0 B910            4329         MOVS.W  R1,#00H
0019E2 964842rr        4330         MOV.B   ES,#SEG( _Cmd )
0019E6 B500rrrr        4331         MOV.B   [R0+SOF( _Cmd )],#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  58

ADDR   CODE            LINE SOURCELINE
                       4332 ; rs232par.c  985                                       State = StateP7;
0019EA 964842rr        4334         MOV.B   ES,#SEG( _State )
0019EE 9908rrrr        4335         MOV.W   R0,#SOF( _State )
0019F2 B207            4336         MOV.B   [R0],#07H
                       4337 ; rs232par.c  986                                       ParType[ParCnt] = P_String;
0019F4 964842rr        4339         MOV.B   ES,#SEG( _ParCnt )
0019F8 9908rrrr        4340         MOV.W   R0,#SOF( _ParCnt )
0019FC 8200            4341         MOV.B   R0L,[R0]
0019FE B110            4342         MOVS.B  R0H,#00H
001A00 B910            4343         MOVS.W  R1,#00H
001A02 964842rr        4344         MOV.B   ES,#SEG( _ParType )
001A06 B506rrrr        4345         MOV.B   [R0+SOF( _ParType )],#06H
                       4346 ; rs232par.c  987                                       break;
                       4348         BR      _329
001A0A D50457         +4348         JMP.L   _329
                       4349 ; rs232par.c  988                               }
001A0E                 4351 _158:
                       4352 ; rs232par.c  989       
                       4353 ; rs232par.c  990                               if ( issemicolon(c))
001A0E 91A43B          4355         CMP.B   R5L,#03BH
001A11 F21E            4356         BNE     _159
                       4357 ; rs232par.c  991                               {
                       4358 ; rs232par.c  992                                       Cmd[CmdNdx] = 0;
001A13 964842rr        4360         MOV.B   ES,#SEG( _CmdNdx )
001A17 9908rrrr        4361         MOV.W   R0,#SOF( _CmdNdx )
001A1B 8A00            4362         MOV.W   R0,[R0]
001A1D B910            4363         MOVS.W  R1,#00H
001A1F 964842rr        4364         MOV.B   ES,#SEG( _Cmd )
001A23 B500rrrr        4365         MOV.B   [R0+SOF( _Cmd )],#00H
                       4366 ; rs232par.c  993                                       State = StateP0;
001A27 964842rr        4368         MOV.B   ES,#SEG( _State )
001A2B 9908rrrr        4369         MOV.W   R0,#SOF( _State )
001A2F B200            4370         MOV.B   [R0],#00H
                       4371 ; rs232par.c  994                                       ParType[ParCnt] = P_String;
001A31 964842rr        4373         MOV.B   ES,#SEG( _ParCnt )
001A35 9908rrrr        4374         MOV.W   R0,#SOF( _ParCnt )
001A39 8200            4375         MOV.B   R0L,[R0]
001A3B B110            4376         MOVS.B  R0H,#00H
001A3D B910            4377         MOVS.W  R1,#00H
001A3F 964842rr        4378         MOV.B   ES,#SEG( _ParType )
001A43 B506rrrr        4379         MOV.B   [R0+SOF( _ParType )],#06H
                       4380 ; rs232par.c  995                                       return( PMUS);
001A47 910803          4382         MOV.B   R0L,#03H
                       4383         BR      _384
001A4A D50443         +4383         JMP.L   _384
                       4384 ; rs232par.c  996                               }
001A4E                 4386 _159:
                       4387 ; rs232par.c  997       
                       4388 ; rs232par.c  998                               if ( isdoublequote(c))
001A4E 91A422          4390         CMP.B   R5L,#022H
001A51 F219            4391         BNE     _160
                       4392 ; rs232par.c  999                               {
                       4393 ; rs232par.c 1000                                       Cmd[CmdNdx++] = c;
001A53 964842rr        4395         MOV.B   ES,#SEG( _CmdNdx )
001A57 9908rrrr        4396         MOV.W   R0,#SOF( _CmdNdx )
001A5B 8A00            4397         MOV.W   R0,[R0]
001A5D 8920            4398         MOV.W   R2,R0
001A5F B930            4399         MOVS.W  R3,#00H
001A61 964842rr        4400         MOV.B   ES,#SEG( _Cmd )
001A65 85AArrrr        4401         MOV.B   [R2+SOF( _Cmd )],R5L
001A69 A901            4402         ADDS.W  R0,#01H
001A6B 964842rr        4403         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  59

ADDR   CODE            LINE SOURCELINE
001A6F 9918rrrr        4404         MOV.W   R1,#SOF( _CmdNdx )
001A73 8A09            4405         MOV.W   [R1],R0
                       4406 ; rs232par.c 1001                                       State = StateS2;
001A75 964842rr        4408         MOV.B   ES,#SEG( _State )
001A79 9908rrrr        4409         MOV.W   R0,#SOF( _State )
001A7D 920814          4410         MOV.B   [R0],#014H
                       4411 ; rs232par.c 1002                                       break;
                       4413         BR      _329
001A80 D5041C         +4413         JMP.L   _329
                       4414 ; rs232par.c 1003                               }
001A84                 4416 _160:
                       4417 ; rs232par.c 1004       
                       4418 ; rs232par.c 1005                               if ( iscomma(c))
001A84 91A42C          4420         CMP.B   R5L,#02CH
001A87 F21E            4421         BNE     _161
                       4422 ; rs232par.c 1006                               {
                       4423 ; rs232par.c 1007       //                              Cmd[++CmdNdx] = c;
                       4424 ; rs232par.c 1008                                       Cmd[CmdNdx] = c;                         
                                                                    // Chang. KEn 000615
001A89 964842rr        4426         MOV.B   ES,#SEG( _CmdNdx )
001A8D 9908rrrr        4427         MOV.W   R0,#SOF( _CmdNdx )
001A91 8A00            4428         MOV.W   R0,[R0]
001A93 B910            4429         MOVS.W  R1,#00H
001A95 964842rr        4430         MOV.B   ES,#SEG( _Cmd )
001A99 85A8rrrr        4431         MOV.B   [R0+SOF( _Cmd )],R5L
                       4432 ; rs232par.c 1009                                       State = StateP8;
001A9D 964842rr        4434         MOV.B   ES,#SEG( _State )
001AA1 9908rrrr        4435         MOV.W   R0,#SOF( _State )
001AA5 920808          4436         MOV.B   [R0],#08H
                       4437 ; rs232par.c 1010                                       ParType[ParCnt] = P_String;
001AA8 964842rr        4439         MOV.B   ES,#SEG( _ParCnt )
001AAC 9908rrrr        4440         MOV.W   R0,#SOF( _ParCnt )
001AB0 8200            4441         MOV.B   R0L,[R0]
001AB2 B110            4442         MOVS.B  R0H,#00H
001AB4 B910            4443         MOVS.W  R1,#00H
001AB6 964842rr        4444         MOV.B   ES,#SEG( _ParType )
001ABA B506rrrr        4445         MOV.B   [R0+SOF( _ParType )],#06H
                       4446 ; rs232par.c 1011                                       return( Ready);
001ABE 910802          4448         MOV.B   R0L,#02H
                       4449         BR      _384
001AC1 D50407         +4449         JMP.L   _384
                       4450 ; rs232par.c 1012                               }
001AC4                 4452 _161:
                       4453 ; rs232par.c 1013       
                       4454 ; rs232par.c 1014                               if ( isnewline(c))
001AC4 91A40A          4456         CMP.B   R5L,#0AH
001AC7 F21E            4457         BNE     _162
                       4458 ; rs232par.c 1015                               {
                       4459 ; rs232par.c 1016                                       Cmd[CmdNdx] = 0;
001AC9 964842rr        4461         MOV.B   ES,#SEG( _CmdNdx )
001ACD 9908rrrr        4462         MOV.W   R0,#SOF( _CmdNdx )
001AD1 8A00            4463         MOV.W   R0,[R0]
001AD3 B910            4464         MOVS.W  R1,#00H
001AD5 964842rr        4465         MOV.B   ES,#SEG( _Cmd )
001AD9 B500rrrr        4466         MOV.B   [R0+SOF( _Cmd )],#00H
                       4467 ; rs232par.c 1017                                       State = StateP0;
001ADD 964842rr        4469         MOV.B   ES,#SEG( _State )
001AE1 9908rrrr        4470         MOV.W   R0,#SOF( _State )
001AE5 B200            4471         MOV.B   [R0],#00H
                       4472 ; rs232par.c 1018                                       ParType[ParCnt] = P_String;
001AE7 964842rr        4474         MOV.B   ES,#SEG( _ParCnt )
001AEB 9908rrrr        4475         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  60

ADDR   CODE            LINE SOURCELINE
001AEF 8200            4476         MOV.B   R0L,[R0]
001AF1 B110            4477         MOVS.B  R0H,#00H
001AF3 B910            4478         MOVS.W  R1,#00H
001AF5 964842rr        4479         MOV.B   ES,#SEG( _ParType )
001AF9 B506rrrr        4480         MOV.B   [R0+SOF( _ParType )],#06H
                       4481 ; rs232par.c 1019                                       return( PMT);
001AFD 910804          4483         MOV.B   R0L,#04H
                       4484         BR      _384
001B00 D503E8         +4484         JMP.L   _384
                       4485 ; rs232par.c 1020                               }
001B04                 4487 _162:
                       4488 ; rs232par.c 1021       
                       4489 ; rs232par.c 1022                               SCPIError = InvalidChar;
001B04 964842rr        4491         MOV.B   ES,#SEG( _SCPIError )
001B08 9908rrrr        4492         MOV.W   R0,#SOF( _SCPIError )
001B0C BA02            4493         MOV.W   [R0],#02H
                       4494 ; rs232par.c 1023                               State = StateERROR;
001B0E 964842rr        4496         MOV.B   ES,#SEG( _State )
001B12 9908rrrr        4497         MOV.W   R0,#SOF( _State )
001B16 92081E          4498         MOV.B   [R0],#01EH
                       4499 ; rs232par.c 1024                               break;
                       4501         BR      _329
001B19 D503CF         +4501         JMP.L   _329
                       4502 ; rs232par.c 1025       
                       4503 ; rs232par.c 1026                       case StateDA0:                                           
                                     // NON-DECIMAL/ARBITRARY PROGRAM DATA
001B1C                 4505 _163:
                       4506 ; rs232par.c 1027                               if ( (c) == 'B')
001B1C 91A442          4508         CMP.B   R5L,#042H
001B1F F20D            4509         BNE     _164
                       4510 ; rs232par.c 1028                               {
                       4511 ; rs232par.c 1029                                       CmdNdx = 0;
001B21 964842rr        4513         MOV.B   ES,#SEG( _CmdNdx )
001B25 9908rrrr        4514         MOV.W   R0,#SOF( _CmdNdx )
001B29 BA00            4515         MOV.W   [R0],#00H
                       4516 ; rs232par.c 1030                                       State = StateDA3;
001B2B 964842rr        4518         MOV.B   ES,#SEG( _State )
001B2F 9908rrrr        4519         MOV.W   R0,#SOF( _State )
001B33 920819          4520         MOV.B   [R0],#019H
                       4521 ; rs232par.c 1031                                       break;
                       4523         BR      _329
001B36 D503C1         +4523         JMP.L   _329
                       4524 ; rs232par.c 1032                               }
001B3A                 4526 _164:
                       4527 ; rs232par.c 1033       
                       4528 ; rs232par.c 1034                               if ( (c) == 'Q')
001B3A 91A451          4530         CMP.B   R5L,#051H
001B3D F20D            4531         BNE     _165
                       4532 ; rs232par.c 1035                               {
                       4533 ; rs232par.c 1036                                       CmdNdx = 0;
001B3F 964842rr        4535         MOV.B   ES,#SEG( _CmdNdx )
001B43 9908rrrr        4536         MOV.W   R0,#SOF( _CmdNdx )
001B47 BA00            4537         MOV.W   [R0],#00H
                       4538 ; rs232par.c 1037                                       State = StateDA2;
001B49 964842rr        4540         MOV.B   ES,#SEG( _State )
001B4D 9908rrrr        4541         MOV.W   R0,#SOF( _State )
001B51 920818          4542         MOV.B   [R0],#018H
                       4543 ; rs232par.c 1038                                       break;
                       4545         BR      _329
001B54 D503B2         +4545         JMP.L   _329
                       4546 ; rs232par.c 1039                               }
001B58                 4548 _165:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  61

ADDR   CODE            LINE SOURCELINE
                       4549 ; rs232par.c 1040       
                       4550 ; rs232par.c 1041                               if ( (c) == 'H')
001B58 91A448          4552         CMP.B   R5L,#048H
001B5B F20D            4553         BNE     _166
                       4554 ; rs232par.c 1042                               {
                       4555 ; rs232par.c 1043                                       CmdNdx = 0;
001B5D 964842rr        4557         MOV.B   ES,#SEG( _CmdNdx )
001B61 9908rrrr        4558         MOV.W   R0,#SOF( _CmdNdx )
001B65 BA00            4559         MOV.W   [R0],#00H
                       4560 ; rs232par.c 1044                                       State = StateDA1;
001B67 964842rr        4562         MOV.B   ES,#SEG( _State )
001B6B 9908rrrr        4563         MOV.W   R0,#SOF( _State )
001B6F 920817          4564         MOV.B   [R0],#017H
                       4565 ; rs232par.c 1045                                       break;
                       4567         BR      _329
001B72 D503A3         +4567         JMP.L   _329
                       4568 ; rs232par.c 1046                               }
001B76                 4570 _166:
                       4571 ; rs232par.c 1047       
                       4572 ; rs232par.c 1048                               if ( (c) == '0')
001B76 91A430          4574         CMP.B   R5L,#030H
001B79 F20D            4575         BNE     _167
                       4576 ; rs232par.c 1049                               {
                       4577 ; rs232par.c 1050                                       CmdNdx = 0;
001B7B 964842rr        4579         MOV.B   ES,#SEG( _CmdNdx )
001B7F 9908rrrr        4580         MOV.W   R0,#SOF( _CmdNdx )
001B83 BA00            4581         MOV.W   [R0],#00H
                       4582 ; rs232par.c 1051                                       State = StateDA5;
001B85 964842rr        4584         MOV.B   ES,#SEG( _State )
001B89 9908rrrr        4585         MOV.W   R0,#SOF( _State )
001B8D 92081B          4586         MOV.B   [R0],#01BH
                       4587 ; rs232par.c 1052                                       break;
                       4589         BR      _329
001B90 D50394         +4589         JMP.L   _329
                       4590 ; rs232par.c 1053                               }
001B94                 4592 _167:
                       4593 ; rs232par.c 1054       
                       4594 ; rs232par.c 1055                               if ( isdigit(c))
001B94 810A            4596         MOV.B   R0L,R5L
001B96 9019            4597         SEXT.B  R0H
001B98 9819            4598         SEXT.W  R1
001B9A 964842rr        4599         MOV.B   ES,#SEG( __ctype_+1 )
001B9E 8500rrrr        4600         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
001BA2 9019            4601         SEXT.B  R0H
001BA4 99050004        4602         AND.W   R0,#04H
001BA8 F318            4603         BEQ     _168
                       4604 ; rs232par.c 1056                               {
                       4605 ; rs232par.c 1057                                       NoOfDigits = c - '0';
001BAA 91A230          4607         SUB.B   R5L,#030H
001BAD 964842rr        4608         MOV.B   ES,#SEG( _NoOfDigits )
001BB1 9908rrrr        4609         MOV.W   R0,#SOF( _NoOfDigits )
001BB5 82A8            4610         MOV.B   [R0],R5L
                       4611 ; rs232par.c 1058                                       NoOfBytes = 0;
001BB7 964842rr        4613         MOV.B   ES,#SEG( _NoOfBytes )
001BBB 9908rrrr        4614         MOV.W   R0,#SOF( _NoOfBytes )
001BBF BA00            4615         MOV.W   [R0],#00H
                       4616 ; rs232par.c 1059                                       CmdNdx = 0;
001BC1 964842rr        4618         MOV.B   ES,#SEG( _CmdNdx )
001BC5 9908rrrr        4619         MOV.W   R0,#SOF( _CmdNdx )
001BC9 BA00            4620         MOV.W   [R0],#00H
                       4621 ; rs232par.c 1060                                       State = StateDA4;
001BCB 964842rr        4623         MOV.B   ES,#SEG( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  62

ADDR   CODE            LINE SOURCELINE
001BCF 9908rrrr        4624         MOV.W   R0,#SOF( _State )
001BD3 92081A          4625         MOV.B   [R0],#01AH
                       4626 ; rs232par.c 1061                                       break;
                       4628         BR      _329
001BD6 D50371         +4628         JMP.L   _329
                       4629 ; rs232par.c 1062                               }
001BDA                 4631 _168:
                       4632 ; rs232par.c 1063       
                       4633 ; rs232par.c 1064                               SCPIError = InvalidChar;
001BDA 964842rr        4635         MOV.B   ES,#SEG( _SCPIError )
001BDE 9908rrrr        4636         MOV.W   R0,#SOF( _SCPIError )
001BE2 BA02            4637         MOV.W   [R0],#02H
                       4638 ; rs232par.c 1065                               State = StateERROR;
001BE4 964842rr        4640         MOV.B   ES,#SEG( _State )
001BE8 9908rrrr        4641         MOV.W   R0,#SOF( _State )
001BEC 92081E          4642         MOV.B   [R0],#01EH
                       4643 ; rs232par.c 1066                               break;
                       4645         BR      _329
001BEF D50364         +4645         JMP.L   _329
                       4646 ; rs232par.c 1067       
                       4647 ; rs232par.c 1068                       case StateDA1:
001BF2                 4649 _169:
                       4650 ; rs232par.c 1069                               if ( isxdigit(c))
001BF2 810A            4652         MOV.B   R0L,R5L
001BF4 9019            4653         SEXT.B  R0H
001BF6 9819            4654         SEXT.W  R1
001BF8 964842rr        4655         MOV.B   ES,#SEG( __ctype_+1 )
001BFC 8500rrrr        4656         MOV.B   R0L,[R0+SOF( __ctype_+1 )]
001C00 9019            4657         SEXT.B  R0H
001C02 99050044        4658         AND.W   R0,#044H
001C06 F318            4659         BEQ     _170
                       4660 ; rs232par.c 1070                               {
                       4661 ; rs232par.c 1071                                       if ( CmdNdx < 255)                       
                                                    // TBD SHOULD NOT GENERATE AN ERR
001C08 964842rr        4663         MOV.B   ES,#SEG( _CmdNdx )
001C0C 9908rrrr        4664         MOV.W   R0,#SOF( _CmdNdx )
001C10 8A00            4665         MOV.W   R0,[R0]
001C12 990400FF        4666         CMP.W   R0,#0FFH
                       4667         BCC     _329
001C16 F102           +4667 ;       BCS     _LG_286
001C18 D50350         +4667 ;       JMP.L   _329
001C18 D5035000       +4667 ;       JMP.L   _329
001C1C                +4667 _LG_286:
                       4668 ; rs232par.c 1072                                       {                                        
                                                                    
                       4669 ; rs232par.c 1073                                               Cmd[CmdNdx++] = c;
001C1C 8920            4671         MOV.W   R2,R0
001C1E B930            4672         MOVS.W  R3,#00H
001C20 964842rr        4673         MOV.B   ES,#SEG( _Cmd )
001C24 85AArrrr        4674         MOV.B   [R2+SOF( _Cmd )],R5L
001C28 A901            4675         ADDS.W  R0,#01H
001C2A 964842rr        4676         MOV.B   ES,#SEG( _CmdNdx )
001C2E 9918rrrr        4677         MOV.W   R1,#SOF( _CmdNdx )
001C32 8A09            4678         MOV.W   [R1],R0
                       4679 ; rs232par.c 1074                                               break;
                       4681         BR      _329
001C34 D50342         +4681         JMP.L   _329
                       4682 ; rs232par.c 1075                                       }
                       4683 ; rs232par.c 1076       //                              SCPIError = TooManyDigits;
                       4684 ; rs232par.c 1077       //                              State = StateERROR;
                       4685 ; rs232par.c 1078                                       break;
                       4686 ; rs232par.c 1079                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  63

ADDR   CODE            LINE SOURCELINE
001C38                 4688 _170:
                       4689 ; rs232par.c 1080       
                       4690 ; rs232par.c 1081                               if ( issemicolon(c))
001C38 91A43B          4692         CMP.B   R5L,#03BH
001C3B F21E            4693         BNE     _171
                       4694 ; rs232par.c 1082                               {
                       4695 ; rs232par.c 1083                                       Cmd[CmdNdx] = 0;
001C3D 964842rr        4697         MOV.B   ES,#SEG( _CmdNdx )
001C41 9908rrrr        4698         MOV.W   R0,#SOF( _CmdNdx )
001C45 8A00            4699         MOV.W   R0,[R0]
001C47 B910            4700         MOVS.W  R1,#00H
001C49 964842rr        4701         MOV.B   ES,#SEG( _Cmd )
001C4D B500rrrr        4702         MOV.B   [R0+SOF( _Cmd )],#00H
                       4703 ; rs232par.c 1084                                       State = StateP0;
001C51 964842rr        4705         MOV.B   ES,#SEG( _State )
001C55 9908rrrr        4706         MOV.W   R0,#SOF( _State )
001C59 B200            4707         MOV.B   [R0],#00H
                       4708 ; rs232par.c 1085                                       ParType[ParCnt] = P_HexDecNum;
001C5B 964842rr        4710         MOV.B   ES,#SEG( _ParCnt )
001C5F 9908rrrr        4711         MOV.W   R0,#SOF( _ParCnt )
001C63 8200            4712         MOV.B   R0L,[R0]
001C65 B110            4713         MOVS.B  R0H,#00H
001C67 B910            4714         MOVS.W  R1,#00H
001C69 964842rr        4715         MOV.B   ES,#SEG( _ParType )
001C6D B503rrrr        4716         MOV.B   [R0+SOF( _ParType )],#03H
                       4717 ; rs232par.c 1086                                       return( PMUS);
001C71 910803          4719         MOV.B   R0L,#03H
                       4720         BR      _384
001C74 D5032E         +4720         JMP.L   _384
                       4721 ; rs232par.c 1087                               }
001C78                 4723 _171:
                       4724 ; rs232par.c 1088       
                       4725 ; rs232par.c 1089                               if ( iswhitespace(c))
001C78 91A40A          4727         CMP.B   R5L,#0AH
001C7B F315            4728         BEQ     _173
001C7D 91A420          4729         CMP.B   R5L,#020H
001C80 FC12            4730         BGT     _173
                       4731 ; rs232par.c 1090                               {
                       4732 ; rs232par.c 1091                                       State = StateP7;
001C82 964842rr        4734         MOV.B   ES,#SEG( _State )
001C86 9908rrrr        4735         MOV.W   R0,#SOF( _State )
001C8A B207            4736         MOV.B   [R0],#07H
                       4737 ; rs232par.c 1092                                       ParType[ParCnt] = P_HexDecNum;
001C8C 964842rr        4739         MOV.B   ES,#SEG( _ParCnt )
001C90 9908rrrr        4740         MOV.W   R0,#SOF( _ParCnt )
001C94 8200            4741         MOV.B   R0L,[R0]
001C96 B110            4742         MOVS.B  R0H,#00H
001C98 B910            4743         MOVS.W  R1,#00H
001C9A 964842rr        4744         MOV.B   ES,#SEG( _ParType )
001C9E B503rrrr        4745         MOV.B   [R0+SOF( _ParType )],#03H
                       4746 ; rs232par.c 1093                                       break;
                       4748         BR      _329
001CA2 D5030B         +4748         JMP.L   _329
                       4749 ; rs232par.c 1094                               }
001CA6                 4751 _173:
                       4752 ; rs232par.c 1095       
                       4753 ; rs232par.c 1096                               if ( iscomma(c))
001CA6 91A42C          4755         CMP.B   R5L,#02CH
001CA9 F225            4756         BNE     _174
                       4757 ; rs232par.c 1097                               {
                       4758 ; rs232par.c 1098                                       Cmd[++CmdNdx] = c;
001CAB 964842rr        4760         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  64

ADDR   CODE            LINE SOURCELINE
001CAF 9908rrrr        4761         MOV.W   R0,#SOF( _CmdNdx )
001CB3 8A00            4762         MOV.W   R0,[R0]
001CB5 A901            4763         ADDS.W  R0,#01H
001CB7 8920            4764         MOV.W   R2,R0
001CB9 B930            4765         MOVS.W  R3,#00H
001CBB 964842rr        4766         MOV.B   ES,#SEG( _CmdNdx )
001CBF 9918rrrr        4767         MOV.W   R1,#SOF( _CmdNdx )
001CC3 8A09            4768         MOV.W   [R1],R0
001CC5 964842rr        4769         MOV.B   ES,#SEG( _Cmd )
001CC9 85AArrrr        4770         MOV.B   [R2+SOF( _Cmd )],R5L
                       4771 ; rs232par.c 1099                                       State = StateP8;
001CCD 964842rr        4773         MOV.B   ES,#SEG( _State )
001CD1 9908rrrr        4774         MOV.W   R0,#SOF( _State )
001CD5 920808          4775         MOV.B   [R0],#08H
                       4776 ; rs232par.c 1100                                       ParType[ParCnt] = P_HexDecNum;
001CD8 964842rr        4778         MOV.B   ES,#SEG( _ParCnt )
001CDC 9908rrrr        4779         MOV.W   R0,#SOF( _ParCnt )
001CE0 8200            4780         MOV.B   R0L,[R0]
001CE2 B110            4781         MOVS.B  R0H,#00H
001CE4 B910            4782         MOVS.W  R1,#00H
001CE6 964842rr        4783         MOV.B   ES,#SEG( _ParType )
001CEA B503rrrr        4784         MOV.B   [R0+SOF( _ParType )],#03H
                       4785 ; rs232par.c 1101                                       return( Ready);
001CEE 910802          4787         MOV.B   R0L,#02H
                       4788         BR      _384
001CF1 D502EF         +4788         JMP.L   _384
                       4789 ; rs232par.c 1102                               }
001CF4                 4791 _174:
                       4792 ; rs232par.c 1103       
                       4793 ; rs232par.c 1104                               if ( isnewline(c))
001CF4 91A40A          4795         CMP.B   R5L,#0AH
001CF7 F21E            4796         BNE     _175
                       4797 ; rs232par.c 1105                               {
                       4798 ; rs232par.c 1106                                       Cmd[CmdNdx] = 0;
001CF9 964842rr        4800         MOV.B   ES,#SEG( _CmdNdx )
001CFD 9908rrrr        4801         MOV.W   R0,#SOF( _CmdNdx )
001D01 8A00            4802         MOV.W   R0,[R0]
001D03 B910            4803         MOVS.W  R1,#00H
001D05 964842rr        4804         MOV.B   ES,#SEG( _Cmd )
001D09 B500rrrr        4805         MOV.B   [R0+SOF( _Cmd )],#00H
                       4806 ; rs232par.c 1107                                       State = StateP0;
001D0D 964842rr        4808         MOV.B   ES,#SEG( _State )
001D11 9908rrrr        4809         MOV.W   R0,#SOF( _State )
001D15 B200            4810         MOV.B   [R0],#00H
                       4811 ; rs232par.c 1108                                       ParType[ParCnt] = P_HexDecNum;
001D17 964842rr        4813         MOV.B   ES,#SEG( _ParCnt )
001D1B 9908rrrr        4814         MOV.W   R0,#SOF( _ParCnt )
001D1F 8200            4815         MOV.B   R0L,[R0]
001D21 B110            4816         MOVS.B  R0H,#00H
001D23 B910            4817         MOVS.W  R1,#00H
001D25 964842rr        4818         MOV.B   ES,#SEG( _ParType )
001D29 B503rrrr        4819         MOV.B   [R0+SOF( _ParType )],#03H
                       4820 ; rs232par.c 1109                                       return( PMT);
001D2D 910804          4822         MOV.B   R0L,#04H
                       4823         BR      _384
001D30 D502D0         +4823         JMP.L   _384
                       4824 ; rs232par.c 1110                               }
001D34                 4826 _175:
                       4827 ; rs232par.c 1111       
                       4828 ; rs232par.c 1112                               SCPIError = InvalidCharInNumber;
001D34 964842rr        4830         MOV.B   ES,#SEG( _SCPIError )
001D38 9908rrrr        4831         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  65

ADDR   CODE            LINE SOURCELINE
001D3C 9A08000E        4832         MOV.W   [R0],#0EH
                       4833 ; rs232par.c 1113                               State = StateERROR;
001D40 964842rr        4835         MOV.B   ES,#SEG( _State )
001D44 9908rrrr        4836         MOV.W   R0,#SOF( _State )
001D48 92081E          4837         MOV.B   [R0],#01EH
                       4838 ; rs232par.c 1114                               break;
                       4840         BR      _329
001D4B D502B6         +4840         JMP.L   _329
                       4841 ; rs232par.c 1115       
                       4842 ; rs232par.c 1116                       case StateDA2:
001D4E                 4844 _176:
                       4845 ; rs232par.c 1117                               if ( isoctaldigit(c))
001D4E 91A430          4847         CMP.B   R5L,#030H
001D51 FB1B            4848         BLT     _178
001D53 91A437          4849         CMP.B   R5L,#037H
001D56 FC18            4850         BGT     _178
                       4851 ; rs232par.c 1118                               {
                       4852 ; rs232par.c 1119                                       if ( CmdNdx < 255)                       
                                            // TBD NOT ERROR CODES
001D58 964842rr        4854         MOV.B   ES,#SEG( _CmdNdx )
001D5C 9908rrrr        4855         MOV.W   R0,#SOF( _CmdNdx )
001D60 8A00            4856         MOV.W   R0,[R0]
001D62 990400FF        4857         CMP.W   R0,#0FFH
                       4858         BCC     _329
001D66 F102           +4858 ;       BCS     _LG_302
001D68 D502A8         +4858 ;       JMP.L   _329
001D68 D502A800       +4858 ;       JMP.L   _329
001D6C                +4858 _LG_302:
                       4859 ; rs232par.c 1120                                       {
                       4860 ; rs232par.c 1121                                               Cmd[CmdNdx++] = c;
001D6C 8920            4862         MOV.W   R2,R0
001D6E B930            4863         MOVS.W  R3,#00H
001D70 964842rr        4864         MOV.B   ES,#SEG( _Cmd )
001D74 85AArrrr        4865         MOV.B   [R2+SOF( _Cmd )],R5L
001D78 A901            4866         ADDS.W  R0,#01H
001D7A 964842rr        4867         MOV.B   ES,#SEG( _CmdNdx )
001D7E 9918rrrr        4868         MOV.W   R1,#SOF( _CmdNdx )
001D82 8A09            4869         MOV.W   [R1],R0
                       4870 ; rs232par.c 1122                                               break;
                       4872         BR      _329
001D84 D5029A         +4872         JMP.L   _329
                       4873 ; rs232par.c 1123                                       }
                       4874 ; rs232par.c 1124       //                              SCPIError = ParameterOverflowErr;
                       4875 ; rs232par.c 1125         //                            State = StateERROR;
                       4876 ; rs232par.c 1126                                       break;
                       4877 ; rs232par.c 1127                               }
001D88                 4879 _178:
                       4880 ; rs232par.c 1128       
                       4881 ; rs232par.c 1129                               if ( issemicolon(c))
001D88 91A43B          4883         CMP.B   R5L,#03BH
001D8B F21E            4884         BNE     _179
                       4885 ; rs232par.c 1130                               {
                       4886 ; rs232par.c 1131                                       Cmd[CmdNdx] = 0;
001D8D 964842rr        4888         MOV.B   ES,#SEG( _CmdNdx )
001D91 9908rrrr        4889         MOV.W   R0,#SOF( _CmdNdx )
001D95 8A00            4890         MOV.W   R0,[R0]
001D97 B910            4891         MOVS.W  R1,#00H
001D99 964842rr        4892         MOV.B   ES,#SEG( _Cmd )
001D9D B500rrrr        4893         MOV.B   [R0+SOF( _Cmd )],#00H
                       4894 ; rs232par.c 1132                                       State = StateP0;
001DA1 964842rr        4896         MOV.B   ES,#SEG( _State )
001DA5 9908rrrr        4897         MOV.W   R0,#SOF( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  66

ADDR   CODE            LINE SOURCELINE
001DA9 B200            4898         MOV.B   [R0],#00H
                       4899 ; rs232par.c 1133                                       ParType[ParCnt] = P_OctDecNum;
001DAB 964842rr        4901         MOV.B   ES,#SEG( _ParCnt )
001DAF 9908rrrr        4902         MOV.W   R0,#SOF( _ParCnt )
001DB3 8200            4903         MOV.B   R0L,[R0]
001DB5 B110            4904         MOVS.B  R0H,#00H
001DB7 B910            4905         MOVS.W  R1,#00H
001DB9 964842rr        4906         MOV.B   ES,#SEG( _ParType )
001DBD B504rrrr        4907         MOV.B   [R0+SOF( _ParType )],#04H
                       4908 ; rs232par.c 1134                                       return( PMUS);
001DC1 910803          4910         MOV.B   R0L,#03H
                       4911         BR      _384
001DC4 D50286         +4911         JMP.L   _384
                       4912 ; rs232par.c 1135                               }
001DC8                 4914 _179:
                       4915 ; rs232par.c 1136       
                       4916 ; rs232par.c 1137                               if ( iswhitespace(c))
001DC8 91A40A          4918         CMP.B   R5L,#0AH
001DCB F315            4919         BEQ     _181
001DCD 91A420          4920         CMP.B   R5L,#020H
001DD0 FC12            4921         BGT     _181
                       4922 ; rs232par.c 1138                               {
                       4923 ; rs232par.c 1139                                       State = StateP7;
001DD2 964842rr        4925         MOV.B   ES,#SEG( _State )
001DD6 9908rrrr        4926         MOV.W   R0,#SOF( _State )
001DDA B207            4927         MOV.B   [R0],#07H
                       4928 ; rs232par.c 1140                                       ParType[ParCnt] = P_OctDecNum;
001DDC 964842rr        4930         MOV.B   ES,#SEG( _ParCnt )
001DE0 9908rrrr        4931         MOV.W   R0,#SOF( _ParCnt )
001DE4 8200            4932         MOV.B   R0L,[R0]
001DE6 B110            4933         MOVS.B  R0H,#00H
001DE8 B910            4934         MOVS.W  R1,#00H
001DEA 964842rr        4935         MOV.B   ES,#SEG( _ParType )
001DEE B504rrrr        4936         MOV.B   [R0+SOF( _ParType )],#04H
                       4937 ; rs232par.c 1141                                       break;
                       4939         BR      _329
001DF2 D50263         +4939         JMP.L   _329
                       4940 ; rs232par.c 1142                               }
001DF6                 4942 _181:
                       4943 ; rs232par.c 1143       
                       4944 ; rs232par.c 1144                               if ( iscomma(c))
001DF6 91A42C          4946         CMP.B   R5L,#02CH
001DF9 F225            4947         BNE     _182
                       4948 ; rs232par.c 1145                               {
                       4949 ; rs232par.c 1146                                       Cmd[++CmdNdx] = c;
001DFB 964842rr        4951         MOV.B   ES,#SEG( _CmdNdx )
001DFF 9908rrrr        4952         MOV.W   R0,#SOF( _CmdNdx )
001E03 8A00            4953         MOV.W   R0,[R0]
001E05 A901            4954         ADDS.W  R0,#01H
001E07 8920            4955         MOV.W   R2,R0
001E09 B930            4956         MOVS.W  R3,#00H
001E0B 964842rr        4957         MOV.B   ES,#SEG( _CmdNdx )
001E0F 9918rrrr        4958         MOV.W   R1,#SOF( _CmdNdx )
001E13 8A09            4959         MOV.W   [R1],R0
001E15 964842rr        4960         MOV.B   ES,#SEG( _Cmd )
001E19 85AArrrr        4961         MOV.B   [R2+SOF( _Cmd )],R5L
                       4962 ; rs232par.c 1147                                       State = StateP8;
001E1D 964842rr        4964         MOV.B   ES,#SEG( _State )
001E21 9908rrrr        4965         MOV.W   R0,#SOF( _State )
001E25 920808          4966         MOV.B   [R0],#08H
                       4967 ; rs232par.c 1148                                       ParType[ParCnt] = P_OctDecNum;
001E28 964842rr        4969         MOV.B   ES,#SEG( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  67

ADDR   CODE            LINE SOURCELINE
001E2C 9908rrrr        4970         MOV.W   R0,#SOF( _ParCnt )
001E30 8200            4971         MOV.B   R0L,[R0]
001E32 B110            4972         MOVS.B  R0H,#00H
001E34 B910            4973         MOVS.W  R1,#00H
001E36 964842rr        4974         MOV.B   ES,#SEG( _ParType )
001E3A B504rrrr        4975         MOV.B   [R0+SOF( _ParType )],#04H
                       4976 ; rs232par.c 1149                                       return( Ready);
001E3E 910802          4978         MOV.B   R0L,#02H
                       4979         BR      _384
001E41 D50247         +4979         JMP.L   _384
                       4980 ; rs232par.c 1150                               }
001E44                 4982 _182:
                       4983 ; rs232par.c 1151       
                       4984 ; rs232par.c 1152                               if ( isnewline(c))
001E44 91A40A          4986         CMP.B   R5L,#0AH
001E47 F21E            4987         BNE     _183
                       4988 ; rs232par.c 1153                               {
                       4989 ; rs232par.c 1154                                       Cmd[CmdNdx] = 0;
001E49 964842rr        4991         MOV.B   ES,#SEG( _CmdNdx )
001E4D 9908rrrr        4992         MOV.W   R0,#SOF( _CmdNdx )
001E51 8A00            4993         MOV.W   R0,[R0]
001E53 B910            4994         MOVS.W  R1,#00H
001E55 964842rr        4995         MOV.B   ES,#SEG( _Cmd )
001E59 B500rrrr        4996         MOV.B   [R0+SOF( _Cmd )],#00H
                       4997 ; rs232par.c 1155                                       State = StateP0;
001E5D 964842rr        4999         MOV.B   ES,#SEG( _State )
001E61 9908rrrr        5000         MOV.W   R0,#SOF( _State )
001E65 B200            5001         MOV.B   [R0],#00H
                       5002 ; rs232par.c 1156                                       ParType[ParCnt] = P_OctDecNum;
001E67 964842rr        5004         MOV.B   ES,#SEG( _ParCnt )
001E6B 9908rrrr        5005         MOV.W   R0,#SOF( _ParCnt )
001E6F 8200            5006         MOV.B   R0L,[R0]
001E71 B110            5007         MOVS.B  R0H,#00H
001E73 B910            5008         MOVS.W  R1,#00H
001E75 964842rr        5009         MOV.B   ES,#SEG( _ParType )
001E79 B504rrrr        5010         MOV.B   [R0+SOF( _ParType )],#04H
                       5011 ; rs232par.c 1157                                       return( PMT);
001E7D 910804          5013         MOV.B   R0L,#04H
                       5014         BR      _384
001E80 D50228         +5014         JMP.L   _384
                       5015 ; rs232par.c 1158                               }
001E84                 5017 _183:
                       5018 ; rs232par.c 1159       
                       5019 ; rs232par.c 1160                               SCPIError = InvalidCharInNumber;
001E84 964842rr        5021         MOV.B   ES,#SEG( _SCPIError )
001E88 9908rrrr        5022         MOV.W   R0,#SOF( _SCPIError )
001E8C 9A08000E        5023         MOV.W   [R0],#0EH
                       5024 ; rs232par.c 1161                               State = StateERROR;
001E90 964842rr        5026         MOV.B   ES,#SEG( _State )
001E94 9908rrrr        5027         MOV.W   R0,#SOF( _State )
001E98 92081E          5028         MOV.B   [R0],#01EH
                       5029 ; rs232par.c 1162                               break;
                       5031         BR      _329
001E9B D5020E         +5031         JMP.L   _329
                       5032 ; rs232par.c 1163       
                       5033 ; rs232par.c 1164                       case StateDA3:
001E9E                 5035 _184:
                       5036 ; rs232par.c 1165                               if ( isbinarydigit(c))
001E9E 91A430          5038         CMP.B   R5L,#030H
001EA1 F303            5039         BEQ     _185
001EA3 91A431          5040         CMP.B   R5L,#031H
001EA6 F218            5041         BNE     _186
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  68

ADDR   CODE            LINE SOURCELINE
001EA6 F218            5041         BNE     _186
001EA8                 5042 _185:
                       5043 ; rs232par.c 1166                               {
                       5044 ; rs232par.c 1167                                       if ( CmdNdx < 255)                       
                                                            // TBD NOT ERROR CODES
001EA8 964842rr        5046         MOV.B   ES,#SEG( _CmdNdx )
001EAC 9908rrrr        5047         MOV.W   R0,#SOF( _CmdNdx )
001EB0 8A00            5048         MOV.W   R0,[R0]
001EB2 990400FF        5049         CMP.W   R0,#0FFH
                       5050         BCC     _329
001EB6 F102           +5050 ;       BCS     _LG_318
001EB8 D50200         +5050 ;       JMP.L   _329
001EB8 D5020000       +5050 ;       JMP.L   _329
001EBC                +5050 _LG_318:
                       5051 ; rs232par.c 1168                                       {
                       5052 ; rs232par.c 1169                                               Cmd[CmdNdx++] = c;
001EBC 8920            5054         MOV.W   R2,R0
001EBE B930            5055         MOVS.W  R3,#00H
001EC0 964842rr        5056         MOV.B   ES,#SEG( _Cmd )
001EC4 85AArrrr        5057         MOV.B   [R2+SOF( _Cmd )],R5L
001EC8 A901            5058         ADDS.W  R0,#01H
001ECA 964842rr        5059         MOV.B   ES,#SEG( _CmdNdx )
001ECE 9918rrrr        5060         MOV.W   R1,#SOF( _CmdNdx )
001ED2 8A09            5061         MOV.W   [R1],R0
                       5062 ; rs232par.c 1170                                               break;
                       5064         BR      _329
001ED4 D501F2         +5064         JMP.L   _329
                       5065 ; rs232par.c 1171                                       }
                       5066 ; rs232par.c 1172       //                              SCPIError = ParameterOverflowErr;
                       5067 ; rs232par.c 1173       //                              State = StateERROR;
                       5068 ; rs232par.c 1174                                       break;
                       5069 ; rs232par.c 1175                               }
001ED8                 5071 _186:
                       5072 ; rs232par.c 1176       
                       5073 ; rs232par.c 1177                               if ( issemicolon(c))
001ED8 91A43B          5075         CMP.B   R5L,#03BH
001EDB F21E            5076         BNE     _187
                       5077 ; rs232par.c 1178                               {
                       5078 ; rs232par.c 1179                                       Cmd[CmdNdx] = 0;
001EDD 964842rr        5080         MOV.B   ES,#SEG( _CmdNdx )
001EE1 9908rrrr        5081         MOV.W   R0,#SOF( _CmdNdx )
001EE5 8A00            5082         MOV.W   R0,[R0]
001EE7 B910            5083         MOVS.W  R1,#00H
001EE9 964842rr        5084         MOV.B   ES,#SEG( _Cmd )
001EED B500rrrr        5085         MOV.B   [R0+SOF( _Cmd )],#00H
                       5086 ; rs232par.c 1180                                       State = StateP0;
001EF1 964842rr        5088         MOV.B   ES,#SEG( _State )
001EF5 9908rrrr        5089         MOV.W   R0,#SOF( _State )
001EF9 B200            5090         MOV.B   [R0],#00H
                       5091 ; rs232par.c 1181                                       ParType[ParCnt] = P_BinDecNum;
001EFB 964842rr        5093         MOV.B   ES,#SEG( _ParCnt )
001EFF 9908rrrr        5094         MOV.W   R0,#SOF( _ParCnt )
001F03 8200            5095         MOV.B   R0L,[R0]
001F05 B110            5096         MOVS.B  R0H,#00H
001F07 B910            5097         MOVS.W  R1,#00H
001F09 964842rr        5098         MOV.B   ES,#SEG( _ParType )
001F0D B505rrrr        5099         MOV.B   [R0+SOF( _ParType )],#05H
                       5100 ; rs232par.c 1182                                       return( PMUS);
001F11 910803          5102         MOV.B   R0L,#03H
                       5103         BR      _384
001F14 D501DE         +5103         JMP.L   _384
                       5104 ; rs232par.c 1183                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  69

ADDR   CODE            LINE SOURCELINE
001F18                 5106 _187:
                       5107 ; rs232par.c 1184       
                       5108 ; rs232par.c 1185                               if ( iswhitespace(c))
001F18 91A40A          5110         CMP.B   R5L,#0AH
001F1B F315            5111         BEQ     _189
001F1D 91A420          5112         CMP.B   R5L,#020H
001F20 FC12            5113         BGT     _189
                       5114 ; rs232par.c 1186                               {
                       5115 ; rs232par.c 1187                                       State = StateP7;
001F22 964842rr        5117         MOV.B   ES,#SEG( _State )
001F26 9908rrrr        5118         MOV.W   R0,#SOF( _State )
001F2A B207            5119         MOV.B   [R0],#07H
                       5120 ; rs232par.c 1188                                       ParType[ParCnt] = P_BinDecNum;
001F2C 964842rr        5122         MOV.B   ES,#SEG( _ParCnt )
001F30 9908rrrr        5123         MOV.W   R0,#SOF( _ParCnt )
001F34 8200            5124         MOV.B   R0L,[R0]
001F36 B110            5125         MOVS.B  R0H,#00H
001F38 B910            5126         MOVS.W  R1,#00H
001F3A 964842rr        5127         MOV.B   ES,#SEG( _ParType )
001F3E B505rrrr        5128         MOV.B   [R0+SOF( _ParType )],#05H
                       5129 ; rs232par.c 1189                                       break;
                       5131         BR      _329
001F42 D501BB         +5131         JMP.L   _329
                       5132 ; rs232par.c 1190                               }
001F46                 5134 _189:
                       5135 ; rs232par.c 1191       
                       5136 ; rs232par.c 1192                               if ( iscomma(c))
001F46 91A42C          5138         CMP.B   R5L,#02CH
001F49 F225            5139         BNE     _190
                       5140 ; rs232par.c 1193                               {
                       5141 ; rs232par.c 1194                                       Cmd[++CmdNdx] = c;
001F4B 964842rr        5143         MOV.B   ES,#SEG( _CmdNdx )
001F4F 9908rrrr        5144         MOV.W   R0,#SOF( _CmdNdx )
001F53 8A00            5145         MOV.W   R0,[R0]
001F55 A901            5146         ADDS.W  R0,#01H
001F57 8920            5147         MOV.W   R2,R0
001F59 B930            5148         MOVS.W  R3,#00H
001F5B 964842rr        5149         MOV.B   ES,#SEG( _CmdNdx )
001F5F 9918rrrr        5150         MOV.W   R1,#SOF( _CmdNdx )
001F63 8A09            5151         MOV.W   [R1],R0
001F65 964842rr        5152         MOV.B   ES,#SEG( _Cmd )
001F69 85AArrrr        5153         MOV.B   [R2+SOF( _Cmd )],R5L
                       5154 ; rs232par.c 1195                                       State = StateP8;
001F6D 964842rr        5156         MOV.B   ES,#SEG( _State )
001F71 9908rrrr        5157         MOV.W   R0,#SOF( _State )
001F75 920808          5158         MOV.B   [R0],#08H
                       5159 ; rs232par.c 1196                                       ParType[ParCnt] = P_BinDecNum;
001F78 964842rr        5161         MOV.B   ES,#SEG( _ParCnt )
001F7C 9908rrrr        5162         MOV.W   R0,#SOF( _ParCnt )
001F80 8200            5163         MOV.B   R0L,[R0]
001F82 B110            5164         MOVS.B  R0H,#00H
001F84 B910            5165         MOVS.W  R1,#00H
001F86 964842rr        5166         MOV.B   ES,#SEG( _ParType )
001F8A B505rrrr        5167         MOV.B   [R0+SOF( _ParType )],#05H
                       5168 ; rs232par.c 1197                                       return( Ready);
001F8E 910802          5170         MOV.B   R0L,#02H
                       5171         BR      _384
001F91 D5019F         +5171         JMP.L   _384
                       5172 ; rs232par.c 1198                               }
001F94                 5174 _190:
                       5175 ; rs232par.c 1199       
                       5176 ; rs232par.c 1200                               if ( isnewline(c))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  70

ADDR   CODE            LINE SOURCELINE
001F94 91A40A          5178         CMP.B   R5L,#0AH
001F97 F21E            5179         BNE     _191
                       5180 ; rs232par.c 1201                               {
                       5181 ; rs232par.c 1202                                       Cmd[CmdNdx] = 0;
001F99 964842rr        5183         MOV.B   ES,#SEG( _CmdNdx )
001F9D 9908rrrr        5184         MOV.W   R0,#SOF( _CmdNdx )
001FA1 8A00            5185         MOV.W   R0,[R0]
001FA3 B910            5186         MOVS.W  R1,#00H
001FA5 964842rr        5187         MOV.B   ES,#SEG( _Cmd )
001FA9 B500rrrr        5188         MOV.B   [R0+SOF( _Cmd )],#00H
                       5189 ; rs232par.c 1203                                       State = StateP0;
001FAD 964842rr        5191         MOV.B   ES,#SEG( _State )
001FB1 9908rrrr        5192         MOV.W   R0,#SOF( _State )
001FB5 B200            5193         MOV.B   [R0],#00H
                       5194 ; rs232par.c 1204                                       ParType[ParCnt] = P_BinDecNum;
001FB7 964842rr        5196         MOV.B   ES,#SEG( _ParCnt )
001FBB 9908rrrr        5197         MOV.W   R0,#SOF( _ParCnt )
001FBF 8200            5198         MOV.B   R0L,[R0]
001FC1 B110            5199         MOVS.B  R0H,#00H
001FC3 B910            5200         MOVS.W  R1,#00H
001FC5 964842rr        5201         MOV.B   ES,#SEG( _ParType )
001FC9 B505rrrr        5202         MOV.B   [R0+SOF( _ParType )],#05H
                       5203 ; rs232par.c 1205                                       return( PMT);
001FCD 910804          5205         MOV.B   R0L,#04H
                       5206         BR      _384
001FD0 D50180         +5206         JMP.L   _384
                       5207 ; rs232par.c 1206                               }
001FD4                 5209 _191:
                       5210 ; rs232par.c 1207       
                       5211 ; rs232par.c 1208                               SCPIError = InvalidCharInNumber;
001FD4 964842rr        5213         MOV.B   ES,#SEG( _SCPIError )
001FD8 9908rrrr        5214         MOV.W   R0,#SOF( _SCPIError )
001FDC 9A08000E        5215         MOV.W   [R0],#0EH
                       5216 ; rs232par.c 1209                               State = StateERROR;
001FE0 964842rr        5218         MOV.B   ES,#SEG( _State )
001FE4 9908rrrr        5219         MOV.W   R0,#SOF( _State )
001FE8 92081E          5220         MOV.B   [R0],#01EH
                       5221 ; rs232par.c 1210                               break;
                       5223         BR      _329
001FEB D50166         +5223         JMP.L   _329
                       5224 ; rs232par.c 1211       
                       5225 ; rs232par.c 1212                       case StateDA4:
001FEE                 5227 _192:
                       5230 ; rs232par.c 1213                               if ( NoOfDigits)
001FEE 964842rr        5232         MOV.B   ES,#SEG( _NoOfDigits )
001FF2 9908rrrr        5233         MOV.W   R0,#SOF( _NoOfDigits )
001FF6 8200            5234         MOV.B   R0L,[R0]
001FF8 F332            5235         BEQ     _194
                       5236 ; rs232par.c 1214                               {
                       5237 ; rs232par.c 1215                                       if ( isdigit(c))
001FFA 814A            5239         MOV.B   R2L,R5L
001FFC 9059            5240         SEXT.B  R2H
001FFE 9839            5241         SEXT.W  R3
002000 964842rr        5242         MOV.B   ES,#SEG( __ctype_+1 )
002004 8512rrrr        5243         MOV.B   R0H,[R2+SOF( __ctype_+1 )]
002008 8121            5244         MOV.B   R1L,R0H
00200A 9039            5245         SEXT.B  R1H
00200C 99150004        5246         AND.W   R1,#04H
002010 F319            5247         BEQ     _193
                       5248 ; rs232par.c 1216                                       {
                       5249 ; rs232par.c 1217                                               NoOfDigits--;
002012 A10F            5251         ADDS.B  R0L,#0FH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  71

ADDR   CODE            LINE SOURCELINE
002014 964842rr        5252         MOV.B   ES,#SEG( _NoOfDigits )
002018 9918rrrr        5253         MOV.W   R1,#SOF( _NoOfDigits )
00201C 8209            5254         MOV.B   [R1],R0L
                       5255 ; rs232par.c 1218                                               NoOfBytes = 10*NoOfBytes + ( c - 
                            '0');
00201E 964842rr        5257         MOV.B   ES,#SEG( _NoOfBytes )
002022 9908rrrr        5258         MOV.W   R0,#SOF( _NoOfBytes )
002026 8A00            5259         MOV.W   R0,[R0]
002028 E900000A        5260         MULU.W  R0,#0AH
00202C 81AA            5261         MOV.B   R5L,R5L
00202E 90B9            5262         SEXT.B  R5H
002030 99520030        5263         SUB.W   R5,#030H
002034 0905            5264         ADD.W   R0,R5
002036 964842rr        5265         MOV.B   ES,#SEG( _NoOfBytes )
00203A 9918rrrr        5266         MOV.W   R1,#SOF( _NoOfBytes )
00203E 8A09            5267         MOV.W   [R1],R0
                       5268 ; rs232par.c 1219                                               break;
                       5270         BR      _329
002040 D5013C         +5270         JMP.L   _329
                       5271 ; rs232par.c 1220                                       }
002044                 5273 _193:
                       5274 ; rs232par.c 1221                                       SCPIError = InvalidBlockData;
002044 964842rr        5276         MOV.B   ES,#SEG( _SCPIError )
002048 9908rrrr        5277         MOV.W   R0,#SOF( _SCPIError )
00204C 9A08001B        5278         MOV.W   [R0],#01BH
                       5279 ; rs232par.c 1222                                       State = StateERROR;
002050 964842rr        5281         MOV.B   ES,#SEG( _State )
002054 9908rrrr        5282         MOV.W   R0,#SOF( _State )
002058 92081E          5283         MOV.B   [R0],#01EH
                       5284 ; rs232par.c 1223                                       break;
                       5286         BR      _329
00205B D5012E         +5286         JMP.L   _329
                       5287 ; rs232par.c 1224                               }
00205E                 5289 _194:
                       5292 ; rs232par.c 1225       
                       5293 ; rs232par.c 1226                               if ( CmdNdx < NoOfBytes)
00205E 964842rr        5295         MOV.B   ES,#SEG( _CmdNdx )
002062 9908rrrr        5296         MOV.W   R0,#SOF( _CmdNdx )
002066 8A00            5297         MOV.W   R0,[R0]
002068 964842rr        5298         MOV.B   ES,#SEG( _NoOfBytes )
00206C 9918rrrr        5299         MOV.W   R1,#SOF( _NoOfBytes )
002070 8A11            5300         MOV.W   R1,[R1]
002072 4901            5301         CMP.W   R0,R1
                       5302         BCS     _200
002074 F002           +5302 ;       BCC     _LG_334
002076 D50083         +5302 ;       JMP.L   _200
002076 D5008300       +5302 ;       JMP.L   _200
00207A                +5302 _LG_334:
                       5303 ; rs232par.c 1227                               {
                       5304 ; rs232par.c 1228                                       Cmd[CmdNdx++] = c_str;
                       5305 ; rs232par.c 1229                               }
                       5306 ; rs232par.c 1230                               else {
                       5307 ; rs232par.c 1231                                       if ( issemicolon(c))
00207A 91A43B          5309         CMP.B   R5L,#03BH
00207D F219            5310         BNE     _195
                       5311 ; rs232par.c 1232                                       {
                       5312 ; rs232par.c 1233                                               Cmd[CmdNdx] = 0;
00207F B910            5314         MOVS.W  R1,#00H
002081 964842rr        5315         MOV.B   ES,#SEG( _Cmd )
002085 B500rrrr        5316         MOV.B   [R0+SOF( _Cmd )],#00H
                       5317 ; rs232par.c 1234                                               State = StateP0;
002089 964842rr        5319         MOV.B   ES,#SEG( _State )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  72

ADDR   CODE            LINE SOURCELINE
00208D 9908rrrr        5320         MOV.W   R0,#SOF( _State )
002091 B200            5321         MOV.B   [R0],#00H
                       5322 ; rs232par.c 1235                                               ParType[ParCnt] = P_Blockn;
002093 964842rr        5324         MOV.B   ES,#SEG( _ParCnt )
002097 9908rrrr        5325         MOV.W   R0,#SOF( _ParCnt )
00209B 8200            5326         MOV.B   R0L,[R0]
00209D B110            5327         MOVS.B  R0H,#00H
00209F B910            5328         MOVS.W  R1,#00H
0020A1 964842rr        5329         MOV.B   ES,#SEG( _ParType )
0020A5 9508rrrr08      5330         MOV.B   [R0+SOF( _ParType )],#08H
                       5331 ; rs232par.c 1236                                               return( PMUS);
0020AA 910803          5333         MOV.B   R0L,#03H
                       5334         BR      _384
0020AD D50111         +5334         JMP.L   _384
                       5335 ; rs232par.c 1237                                       }
0020B0                 5337 _195:
                       5338 ; rs232par.c 1238       
                       5339 ; rs232par.c 1239                                       if ( iswhitespace(c))
0020B0 91A40A          5341         CMP.B   R5L,#0AH
0020B3 F315            5342         BEQ     _197
0020B5 91A420          5343         CMP.B   R5L,#020H
0020B8 FC12            5344         BGT     _197
                       5345 ; rs232par.c 1240                                       {
                       5346 ; rs232par.c 1241                                               State = StateP7;
0020BA 964842rr        5348         MOV.B   ES,#SEG( _State )
0020BE 9908rrrr        5349         MOV.W   R0,#SOF( _State )
0020C2 B207            5350         MOV.B   [R0],#07H
                       5351 ; rs232par.c 1242                                               ParType[ParCnt] = P_Blockn;
0020C4 964842rr        5353         MOV.B   ES,#SEG( _ParCnt )
0020C8 9908rrrr        5354         MOV.W   R0,#SOF( _ParCnt )
0020CC 8200            5355         MOV.B   R0L,[R0]
0020CE B110            5356         MOVS.B  R0H,#00H
0020D0 B910            5357         MOVS.W  R1,#00H
0020D2 964842rr        5358         MOV.B   ES,#SEG( _ParType )
0020D6 9508rrrr08      5359         MOV.B   [R0+SOF( _ParType )],#08H
                       5360 ; rs232par.c 1243                                               break;
                       5362         BR      _329
0020DB D500EE         +5362         JMP.L   _329
                       5363 ; rs232par.c 1244                                       }
0020DE                 5365 _197:
                       5366 ; rs232par.c 1245       
                       5367 ; rs232par.c 1246                                       if ( iscomma(c))
0020DE 91A42C          5369         CMP.B   R5L,#02CH
0020E1 F221            5370         BNE     _198
                       5371 ; rs232par.c 1247                                       {
                       5372 ; rs232par.c 1248                                               Cmd[++CmdNdx] = c;
0020E3 A901            5374         ADDS.W  R0,#01H
0020E5 8920            5375         MOV.W   R2,R0
0020E7 B930            5376         MOVS.W  R3,#00H
0020E9 964842rr        5377         MOV.B   ES,#SEG( _CmdNdx )
0020ED 9918rrrr        5378         MOV.W   R1,#SOF( _CmdNdx )
0020F1 8A09            5379         MOV.W   [R1],R0
0020F3 964842rr        5380         MOV.B   ES,#SEG( _Cmd )
0020F7 85AArrrr        5381         MOV.B   [R2+SOF( _Cmd )],R5L
                       5382 ; rs232par.c 1249                                               State = StateP8;
0020FB 964842rr        5384         MOV.B   ES,#SEG( _State )
0020FF 9908rrrr        5385         MOV.W   R0,#SOF( _State )
002103 920808          5386         MOV.B   [R0],#08H
                       5387 ; rs232par.c 1250                                               ParType[ParCnt] = P_Blockn;
002106 964842rr        5389         MOV.B   ES,#SEG( _ParCnt )
00210A 9908rrrr        5390         MOV.W   R0,#SOF( _ParCnt )
00210E 8200            5391         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  73

ADDR   CODE            LINE SOURCELINE
002110 B110            5392         MOVS.B  R0H,#00H
002112 B910            5393         MOVS.W  R1,#00H
002114 964842rr        5394         MOV.B   ES,#SEG( _ParType )
002118 9508rrrr08      5395         MOV.B   [R0+SOF( _ParType )],#08H
                       5396 ; rs232par.c 1251                                               return( Ready);
00211D 910802          5398         MOV.B   R0L,#02H
                       5399         BR      _384
002120 D500D8         +5399         JMP.L   _384
                       5400 ; rs232par.c 1252                                       }
002124                 5402 _198:
                       5403 ; rs232par.c 1253       
                       5404 ; rs232par.c 1254                                       if ( isnewline(c))
002124 91A40A          5406         CMP.B   R5L,#0AH
002127 F21E            5407         BNE     _199
                       5408 ; rs232par.c 1255                                       {
                       5409 ; rs232par.c 1256                                               Cmd[CmdNdx] = 0;
002129 964842rr        5411         MOV.B   ES,#SEG( _CmdNdx )
00212D 9908rrrr        5412         MOV.W   R0,#SOF( _CmdNdx )
002131 8A00            5413         MOV.W   R0,[R0]
002133 B910            5414         MOVS.W  R1,#00H
002135 964842rr        5415         MOV.B   ES,#SEG( _Cmd )
002139 B500rrrr        5416         MOV.B   [R0+SOF( _Cmd )],#00H
                       5417 ; rs232par.c 1257                                               State = StateP0;
00213D 964842rr        5419         MOV.B   ES,#SEG( _State )
002141 9908rrrr        5420         MOV.W   R0,#SOF( _State )
002145 B200            5421         MOV.B   [R0],#00H
                       5422 ; rs232par.c 1258                                               ParType[ParCnt] = P_Blockn;
002147 964842rr        5424         MOV.B   ES,#SEG( _ParCnt )
00214B 9908rrrr        5425         MOV.W   R0,#SOF( _ParCnt )
00214F 8200            5426         MOV.B   R0L,[R0]
002151 B110            5427         MOVS.B  R0H,#00H
002153 B910            5428         MOVS.W  R1,#00H
002155 964842rr        5429         MOV.B   ES,#SEG( _ParType )
002159 9508rrrr08      5430         MOV.B   [R0+SOF( _ParType )],#08H
                       5431 ; rs232par.c 1259                                               return( PMT);
00215E 910804          5433         MOV.B   R0L,#04H
                       5434         BR      _384
002161 D500B7         +5434         JMP.L   _384
                       5435 ; rs232par.c 1260                                       }
002164                 5437 _199:
                       5438 ; rs232par.c 1261       
                       5439 ; rs232par.c 1262                                       SCPIError = InvalidBlockData;
002164 964842rr        5441         MOV.B   ES,#SEG( _SCPIError )
002168 9908rrrr        5442         MOV.W   R0,#SOF( _SCPIError )
00216C 9A08001B        5443         MOV.W   [R0],#01BH
                       5444 ; rs232par.c 1263                                       State = StateERROR;
002170 964842rr        5446         MOV.B   ES,#SEG( _State )
002174 9908rrrr        5447         MOV.W   R0,#SOF( _State )
002178 92081E          5448         MOV.B   [R0],#01EH
                       5449 ; rs232par.c 1264                                       break;
                       5451         BR      _329
00217B D5009E         +5451         JMP.L   _329
00217E                 5453 _200:
00217E 964842rr        5456         MOV.B   ES,#SEG( _CmdNdx )
002182 9908rrrr        5457         MOV.W   R0,#SOF( _CmdNdx )
002186 8A00            5458         MOV.W   R0,[R0]
002188 8920            5459         MOV.W   R2,R0
00218A B930            5460         MOVS.W  R3,#00H
00218C 964842rr        5461         MOV.B   ES,#SEG( _Cmd )
002190 859Arrrr        5462         MOV.B   [R2+SOF( _Cmd )],R4H
002194 A901            5463         ADDS.W  R0,#01H
002196 964842rr        5464         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  74

ADDR   CODE            LINE SOURCELINE
00219A 9918rrrr        5465         MOV.W   R1,#SOF( _CmdNdx )
00219E 8A09            5466         MOV.W   [R1],R0
                       5467 ; rs232par.c 1265                               }
                       5468 ; rs232par.c 1266                               break;
                       5470         BR      _329
0021A0 D5008C         +5470         JMP.L   _329
                       5471 ; rs232par.c 1267       
                       5472 ; rs232par.c 1268                       case StateDA5:
0021A4                 5474 _201:
                       5477 ; rs232par.c 1269                               if ( isnewline(c))
0021A4 91A40A          5479         CMP.B   R5L,#0AH
0021A7 F21D            5480         BNE     _202
                       5481 ; rs232par.c 1270                               {
                       5482 ; rs232par.c 1271                                       Cmd[CmdNdx] = 0;
0021A9 964842rr        5484         MOV.B   ES,#SEG( _CmdNdx )
0021AD 9908rrrr        5485         MOV.W   R0,#SOF( _CmdNdx )
0021B1 8A00            5486         MOV.W   R0,[R0]
0021B3 B910            5487         MOVS.W  R1,#00H
0021B5 964842rr        5488         MOV.B   ES,#SEG( _Cmd )
0021B9 B500rrrr        5489         MOV.B   [R0+SOF( _Cmd )],#00H
                       5490 ; rs232par.c 1272                                       State = StateP0;
0021BD 964842rr        5492         MOV.B   ES,#SEG( _State )
0021C1 9908rrrr        5493         MOV.W   R0,#SOF( _State )
0021C5 B200            5494         MOV.B   [R0],#00H
                       5495 ; rs232par.c 1273                                       ParType[ParCnt] = P_Block0;
0021C7 964842rr        5497         MOV.B   ES,#SEG( _ParCnt )
0021CB 9908rrrr        5498         MOV.W   R0,#SOF( _ParCnt )
0021CF 8200            5499         MOV.B   R0L,[R0]
0021D1 B110            5500         MOVS.B  R0H,#00H
0021D3 B910            5501         MOVS.W  R1,#00H
0021D5 964842rr        5502         MOV.B   ES,#SEG( _ParType )
0021D9 B507rrrr        5503         MOV.B   [R0+SOF( _ParType )],#07H
                       5504 ; rs232par.c 1274                                       return( PMT);
0021DD 910804          5506         MOV.B   R0L,#04H
0021E0 FE78            5507         BR      _384
                       5508 ; rs232par.c 1275                               }
0021E2                 5510 _202:
                       5513 ; rs232par.c 1276       
                       5514 ; rs232par.c 1277                               Cmd[CmdNdx++] = c_str;
0021E2 964842rr        5516         MOV.B   ES,#SEG( _CmdNdx )
0021E6 9908rrrr        5517         MOV.W   R0,#SOF( _CmdNdx )
0021EA 8A00            5518         MOV.W   R0,[R0]
0021EC 8920            5519         MOV.W   R2,R0
0021EE B930            5520         MOVS.W  R3,#00H
0021F0 964842rr        5521         MOV.B   ES,#SEG( _Cmd )
0021F4 859Arrrr        5522         MOV.B   [R2+SOF( _Cmd )],R4H
0021F8 A901            5523         ADDS.W  R0,#01H
0021FA 964842rr        5524         MOV.B   ES,#SEG( _CmdNdx )
0021FE 9918rrrr        5525         MOV.W   R1,#SOF( _CmdNdx )
002202 8A09            5526         MOV.W   [R1],R0
                       5527 ; rs232par.c 1278                               break;
002204 FE5A            5529         BR      _329
                       5530 ; rs232par.c 1279       
                       5531 ; rs232par.c 1280                       case StateA0:                                            
                                     // ASCII DATA ONLY FOR A RESPONSE
002206                 5533 _203:
                       5536 ; rs232par.c 1281                               if ( isnewline( c))
002206 91A40A          5538         CMP.B   R5L,#0AH
002209 F212            5539         BNE     _204
                       5540 ; rs232par.c 1282                               {
                       5541 ; rs232par.c 1283                                       Cmd[CmdNdx] = 0;
00220B 964842rr        5543         MOV.B   ES,#SEG( _CmdNdx )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  75

ADDR   CODE            LINE SOURCELINE
00220F 9908rrrr        5544         MOV.W   R0,#SOF( _CmdNdx )
002213 8A00            5545         MOV.W   R0,[R0]
002215 B910            5546         MOVS.W  R1,#00H
002217 964842rr        5547         MOV.B   ES,#SEG( _Cmd )
00221B B500rrrr        5548         MOV.B   [R0+SOF( _Cmd )],#00H
                       5549 ; rs232par.c 1284                                       State = StateP0;
00221F 964842rr        5551         MOV.B   ES,#SEG( _State )
002223 9908rrrr        5552         MOV.W   R0,#SOF( _State )
002227 B200            5553         MOV.B   [R0],#00H
                       5554 ; rs232par.c 1285                                       return( PMT);
002229 910804          5556         MOV.B   R0L,#04H
00222C FE52            5557         BR      _384
                       5558 ; rs232par.c 1286                               }
00222E                 5560 _204:
                       5563 ; rs232par.c 1287       
                       5564 ; rs232par.c 1288                               Cmd[CmdNdx++] = c_str;
00222E 964842rr        5566         MOV.B   ES,#SEG( _CmdNdx )
002232 9908rrrr        5567         MOV.W   R0,#SOF( _CmdNdx )
002236 8A00            5568         MOV.W   R0,[R0]
002238 8920            5569         MOV.W   R2,R0
00223A B930            5570         MOVS.W  R3,#00H
00223C 964842rr        5571         MOV.B   ES,#SEG( _Cmd )
002240 859Arrrr        5572         MOV.B   [R2+SOF( _Cmd )],R4H
002244 A901            5573         ADDS.W  R0,#01H
002246 964842rr        5574         MOV.B   ES,#SEG( _CmdNdx )
00224A 9918rrrr        5575         MOV.W   R1,#SOF( _CmdNdx )
00224E 8A09            5576         MOV.W   [R1],R0
                       5577 ; rs232par.c 1289                               ParType[ParCnt] = P_ASCII;
002250 964842rr        5579         MOV.B   ES,#SEG( _ParCnt )
002254 9908rrrr        5580         MOV.W   R0,#SOF( _ParCnt )
002258 8200            5581         MOV.B   R0L,[R0]
00225A B110            5582         MOVS.B  R0H,#00H
00225C B910            5583         MOVS.W  R1,#00H
00225E 964842rr        5584         MOV.B   ES,#SEG( _ParType )
002262 9508rrrr0A      5585         MOV.B   [R0+SOF( _ParType )],#0AH
                       5586 ; rs232par.c 1290                               break;
002267 FE29            5588         BR      _329
                       5589 ; rs232par.c 1291       
                       5590 ; rs232par.c 1292                       case StateE0:
00226A                 5592 _205:
                       5593 ; rs232par.c 1293                               if ( (c) == ')')
00226A 91A429          5595         CMP.B   R5L,#029H
00226D F226            5596         BNE     _329
                       5597 ; rs232par.c 1294                               {
                       5598 ; rs232par.c 1295                                       State = StateP7;
00226F 964842rr        5600         MOV.B   ES,#SEG( _State )
002273 9908rrrr        5601         MOV.W   R0,#SOF( _State )
002277 B207            5602         MOV.B   [R0],#07H
                       5603 ; rs232par.c 1296                                       ParType[ParCnt] = P_Block0;
002279 964842rr        5605         MOV.B   ES,#SEG( _ParCnt )
00227D 9908rrrr        5606         MOV.W   R0,#SOF( _ParCnt )
002281 8200            5607         MOV.B   R0L,[R0]
002283 B110            5608         MOVS.B  R0H,#00H
002285 B910            5609         MOVS.W  R1,#00H
002287 964842rr        5610         MOV.B   ES,#SEG( _ParType )
00228B B507rrrr        5611         MOV.B   [R0+SOF( _ParType )],#07H
                       5612 ; rs232par.c 1297                               }
                       5613 ; rs232par.c 1298                               break;
00228F FE15            5615         BR      _329
                       5616 ; rs232par.c 1299       
                       5617 ; rs232par.c 1300                       case StateERROR:                                         
                                     // ERROR
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  76

ADDR   CODE            LINE SOURCELINE
002292                 5619 _206:
                       5620 ; rs232par.c 1301                               if ( issemicolon(c))
002292 91A43B          5622         CMP.B   R5L,#03BH
002295 F208            5623         BNE     _207
                       5624 ; rs232par.c 1302                               {
                       5625 ; rs232par.c 1303                                       State = StateP0;
002297 964842rr        5627         MOV.B   ES,#SEG( _State )
00229B 9908rrrr        5628         MOV.W   R0,#SOF( _State )
00229F B200            5629         MOV.B   [R0],#00H
                       5630 ; rs232par.c 1304                                       return( PMUS);
0022A1 910803          5632         MOV.B   R0L,#03H
0022A4 FE16            5633         BR      _384
                       5634 ; rs232par.c 1305                               }
0022A6                 5636 _207:
                       5637 ; rs232par.c 1306       
                       5638 ; rs232par.c 1307                               if ( isnewline(c))
0022A6 91A40A          5640         CMP.B   R5L,#0AH
0022A9 F208            5641         BNE     _329
                       5642 ; rs232par.c 1308                               {
                       5643 ; rs232par.c 1309                                       State = StateP0;
0022AB 964842rr        5645         MOV.B   ES,#SEG( _State )
0022AF 9908rrrr        5646         MOV.W   R0,#SOF( _State )
0022B3 B200            5647         MOV.B   [R0],#00H
                       5648 ; rs232par.c 1310                                       return( PMT);
0022B5 910804          5650         MOV.B   R0L,#04H
0022B8 FE0C            5651         BR      _384
                       5652 ; rs232par.c 1311                               }
                       5653 ; rs232par.c 1312                               break;
                       5654 ; rs232par.c 1313               }
0022BA                 5656 _329:
                       5657 ; rs232par.c 1314       
                       5658 ; rs232par.c 1315               if ( State == StateERROR)
0022BA 964842rr        5660         MOV.B   ES,#SEG( _State )
0022BE 9908rrrr        5661         MOV.W   R0,#SOF( _State )
0022C2 8200            5662         MOV.B   R0L,[R0]
0022C4 91041E          5663         CMP.B   R0L,#01EH
0022C7 F203            5664         BNE     _330
                       5665 ; rs232par.c 1316                       return( Error);
0022C9 910805          5667         MOV.B   R0L,#05H
0022CC FE02            5668         BR      _384
0022CC FE02            5668         BR      _384
0022CE                 5669 _330:
                       5670 ; rs232par.c 1317       
                       5671 ; rs232par.c 1318               return( Idle);
0022CE 910800          5673         MOV.B   R0L,#00H
                       5674 ; rs232par.c 1319       }
0022D2                 5676 _384:
0022D2 A974            5677         ADDS.W  R7,#04H
0022D4 2F30            5679         POP.W   R4, R5
0022D6 D680            5681         RET
                       5684 ; rs232par.c 1320       
                       5685 ; rs232par.c 1321       /************************************************************************
                            **/
                       5686 ; rs232par.c 1322       /* CmdHandler                                                            
                                                                                                                             
                                                         RS232PAR.C */
                       5687 ; rs232par.c 1323       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  77

ADDR   CODE            LINE SOURCELINE
                       5688 ; rs232par.c 1324       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                    */
                       5689 ; rs232par.c 1325       /* Revised:             000414                                           
                                                                                                                             
                                                                                    */
                       5690 ; rs232par.c 1326       /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                       5691 ; rs232par.c 1327       /* Function:                                                             
                                                                                                                             
                                                                                                                    */
                       5692 ; rs232par.c 1328       /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                       5693 ; rs232par.c 1329       /* Returns:             --                                               
                                                                                                                             
                                                                                                                    */
                       5694 ; rs232par.c 1330       /* Updates:             TBD                                              
                                                                                                                             
                                                                                                                    */
                       5695 ; rs232par.c 1331       /************************************************************************
                            **/
                       5696 ; rs232par.c 1332       void CmdHandler( char c)
                       5697 ; rs232par.c 1333       {
                       5698         ALIGN   1
                       5700         PUBLIC  _CmdHandler
0022D8                 5701 _CmdHandler:
0022D8 0F70            5705         PUSH.W  R4, R5, R6
                       5711 ; rs232par.c 1334       
                       5712 ; rs232par.c 1335               UC CmdState;
                       5713 ; rs232par.c 1336       //      UL DecVar;
                       5714 ; rs232par.c 1337       
                       5715 ; rs232par.c 1338               switch ( CmdState = CmdSyntax( c))
0022DA C5EE92          5717         CALL    _CmdSyntax
0022DD 81C0            5719         MOV.B   R6L,R0L
0022DF 91C400          5721         CMP.B   R6L,#00H
                       5722         BEQ     _562
0022E2 F202           +5722 ;       BNE     _LG_358
0022E4 D5012C         +5722 ;       JMP.L   _562
0022E4 D5012C00       +5722 ;       JMP.L   _562
0022E8                +5722 _LG_358:
0022E8 91C405          5723         CMP.B   R6L,#05H
                       5724         BEQ     _562
0022EB F202           +5724 ;       BNE     _LG_360
0022ED D50127         +5724 ;       JMP.L   _562
0022ED D50127         +5724 ;       JMP.L   _562
0022F0                +5724 _LG_360:
0022F0 FE00            5725         BR      _535
                       5726 ; rs232par.c 1339               {
                       5727 ; rs232par.c 1340                       case Idle:
                       5728 ; rs232par.c 1341                               break;
                       5729 ; rs232par.c 1342       
                       5730 ; rs232par.c 1343                       case Error:
                       5731 ; rs232par.c 1344                               break;
                       5732 ; rs232par.c 1345       
                       5733 ; rs232par.c 1346                       default:                                                 
                                                    // ie. NextLevel, Ready, PMUS and PMT
0022F2                 5735 _535:
                       5736 ; rs232par.c 1347                               if ( ParType[ParCnt] == P_NoParameter)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  78

ADDR   CODE            LINE SOURCELINE
0022F2 964842rr        5738         MOV.B   ES,#SEG( _ParCnt )
0022F6 9908rrrr        5739         MOV.W   R0,#SOF( _ParCnt )
0022FA 8200            5740         MOV.B   R0L,[R0]
0022FC B110            5741         MOVS.B  R0H,#00H
0022FE B910            5742         MOVS.W  R1,#00H
002300 964842rr        5743         MOV.B   ES,#SEG( _ParType )
002304 8500rrrr        5744         MOV.B   R0L,[R0+SOF( _ParType )]
                       5745         BNE     _548
002308 F302           +5745 ;       BEQ     _LG_362
00230A D500B0         +5745 ;       JMP.L   _548
00230A D500B000       +5745 ;       JMP.L   _548
00230E                +5745 _LG_362:
                       5746 ; rs232par.c 1348                               {
                       5747 ; rs232par.c 1349                                       if ( NumSuffix)
00230E 964842rr        5749         MOV.B   ES,#SEG( _NumSuffix )
002312 9908rrrr        5750         MOV.W   R0,#SOF( _NumSuffix )
002316 8A00            5751         MOV.W   R0,[R0]
002318 F30C            5752         BEQ     _536
                       5753 ; rs232par.c 1350                                               Cmd[NoOfDigits] = 0;
00231A 964842rr        5755         MOV.B   ES,#SEG( _NoOfDigits )
00231E 9908rrrr        5756         MOV.W   R0,#SOF( _NoOfDigits )
002322 8200            5757         MOV.B   R0L,[R0]
002324 B110            5758         MOVS.B  R0H,#00H
002326 B910            5759         MOVS.W  R1,#00H
002328 964842rr        5760         MOV.B   ES,#SEG( _Cmd )
00232C B500rrrr        5761         MOV.B   [R0+SOF( _Cmd )],#00H
002330 FE05            5762         BR      _537
002330 FE05            5762         BR      _537
002332                 5763 _536:
                       5764 ; rs232par.c 1351                                       else
                       5765 ; rs232par.c 1352                                               NumSuffix = 1;
002332 964842rr        5767         MOV.B   ES,#SEG( _NumSuffix )
002336 9908rrrr        5768         MOV.W   R0,#SOF( _NumSuffix )
00233A BA01            5769         MOV.W   [R0],#01H
00233A BA01            5769         MOV.W   [R0],#01H
00233C                 5770 _537:
                       5771 ; rs232par.c 1353       
                       5772 ; rs232par.c 1354                                       while ( CmdPtr)
00233C 964842rr        5774         MOV.B   ES,#SEG( _CmdPtr )
002340 9918rrrr        5775         MOV.W   R1,#SOF( _CmdPtr )
002344 8B01            5776         MOV.W   R0,[R1+]
002346 8A11            5777         MOV.W   R1,[R1]
002348 6910            5778         OR.W    R1,R0
                       5779         BEQ     _548
00234A F202           +5779 ;       BNE     _LG_366
00234C D5008F         +5779 ;       JMP.L   _548
00234C D5008F00       +5779 ;       JMP.L   _548
002350                +5779 _LG_366:
002350                +5779 _LG_366:
002350                 5780 _538:
                       5781 ; rs232par.c 1355                                       {
                       5782 ; rs232par.c 1356                                               if (( !Cstrcmp( Cmd, CmdPtr->Long
                            Name)) ||
                       5783 ; rs232par.c 1357                                                        ( !Cstrcmp( Cmd, CmdPtr-
                            >ShortName)))
002350 964842rr        5785         MOV.B   ES,#SEG( _CmdPtr )
002354 9918rrrr        5786         MOV.W   R1,#SOF( _CmdPtr )
002358 8B01            5787         MOV.W   R0,[R1+]
00235A 8A11            5788         MOV.W   R1,[R1]
00235C 862C43          5789         MOV.B   CS,R1L
00235F 8820            5790         MOVC.W  R2,[R0+]
002361 99040000        5791         CMP.W   R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  79

ADDR   CODE            LINE SOURCELINE
002365 F202            5792         BNE     _563
002367 A64143          5793         ADDS.B  CS,#01H
002367 A64143          5793         ADDS.B  CS,#01H
00236A                 5794 _563:
00236A 8830            5795         MOVC.W  R3,[R0+]
00236C 9918rrrr        5796         MOV.W   R1,#SEG( _Cmd )
002370 9908rrrr        5797         MOV.W   R0,#SOF( _Cmd )
                       5798         CALL    _Cstrcmp
002374 C4rrrrrr       +5798 ;       FCALL   _Cstrcmp
002378 6900            5799         OR.W    R0,R0
00237A F31A            5800         BEQ     _539
00237C 964842rr        5801         MOV.B   ES,#SEG( _CmdPtr )
002380 9918rrrr        5802         MOV.W   R1,#SOF( _CmdPtr )
002384 8B01            5803         MOV.W   R0,[R1+]
002386 8A11            5804         MOV.W   R1,[R1]
002388 99000004        5805         ADD.W   R0,#04H
00238C 99110000        5806         ADDC.W  R1,#00H
002390 862C43          5807         MOV.B   CS,R1L
002393 8820            5808         MOVC.W  R2,[R0+]
002395 99040000        5809         CMP.W   R0,#00H
002399 F202            5810         BNE     _564
00239B A64143          5811         ADDS.B  CS,#01H
00239B A64143          5811         ADDS.B  CS,#01H
00239E                 5812 _564:
00239E 8830            5813         MOVC.W  R3,[R0+]
0023A0 9918rrrr        5814         MOV.W   R1,#SEG( _Cmd )
0023A4 9908rrrr        5815         MOV.W   R0,#SOF( _Cmd )
                       5816         CALL    _Cstrcmp
0023A8 C4rrrrrr       +5816 ;       FCALL   _Cstrcmp
0023AC 6900            5817         OR.W    R0,R0
0023AE F22B            5818         BNE     _543
0023AE F22B            5818         BNE     _543
0023B0                 5819 _539:
                       5820 ; rs232par.c 1358                                               {
                       5821 ; rs232par.c 1359       
                       5822 ; rs232par.c 1360                                                       if ( CmdPtr->Suffix != NO
                            NE)
0023B0 964842rr        5824         MOV.B   ES,#SEG( _CmdPtr )
0023B4 9918rrrr        5825         MOV.W   R1,#SOF( _CmdPtr )
0023B8 8B01            5826         MOV.W   R0,[R1+]
0023BA 8A11            5827         MOV.W   R1,[R1]
0023BC 99000010        5828         ADD.W   R0,#010H
0023C0 99110000        5829         ADDC.W  R1,#00H
0023C4 862C43          5830         MOV.B   CS,R1L
0023C7 8820            5831         MOVC.W  R2,[R0+]
0023C9 99040000        5832         CMP.W   R0,#00H
0023CD F202            5833         BNE     _565
0023CF A64143          5834         ADDS.B  CS,#01H
0023CF A64143          5834         ADDS.B  CS,#01H
0023D2                 5835 _565:
0023D2 8830            5836         MOVC.W  R3,[R0+]
0023D4 8953            5837         MOV.W   R5,R3
0023D6 8942            5838         MOV.W   R4,R2
0023D8 6932            5839         OR.W    R3,R2
0023DA F303            5840         BEQ     _540
                       5841 ; rs232par.c 1361                                                               CmdPtr->Suffix();
                            
0023DC C4rrrrrr        5843         FCALL   __ICALL
0023E0 FE0E            5844         BR      _542
0023E0 FE0E            5844         BR      _542
0023E2                 5845 _540:
                       5846 ; rs232par.c 1362                                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  80

ADDR   CODE            LINE SOURCELINE
                       5847 ; rs232par.c 1363                                                       {
                       5848 ; rs232par.c 1364                                                               if ( NumSuffix > 
                            1)
0023E2 964842rr        5850         MOV.B   ES,#SEG( _NumSuffix )
0023E6 9908rrrr        5851         MOV.W   R0,#SOF( _NumSuffix )
0023EA 8A00            5852         MOV.W   R0,[R0]
0023EC 99040001        5853         CMP.W   R0,#01H
0023F0 F906            5854         BL      _542
                       5855 ; rs232par.c 1365                                                                       SCPIError
                             = HdrSuffixOutOfRange;
0023F2 964842rr        5857         MOV.B   ES,#SEG( _SCPIError )
0023F6 9908rrrr        5858         MOV.W   R0,#SOF( _SCPIError )
0023FA 9A08000C        5859         MOV.W   [R0],#0CH
                       5860 ; rs232par.c 1366                                                       }
0023FE                 5862 _542:
                       5863 ; rs232par.c 1367       
                       5864 ; rs232par.c 1368                                                       if ( CmdState == NextLeve
                            l)
0023FE 91C401          5866         CMP.B   R6L,#01H
002401 F235            5867         BNE     _548
                       5868 ; rs232par.c 1369                                                               CmdPtr = CmdPtr->
                            NextLevel;
                       5869 ; rs232par.c 1370                                                       break;
002403 FE1C            5871         BR      _544
                       5872 ; rs232par.c 1371                                               }
002406                 5874 _543:
                       5875 ; rs232par.c 1372                                               CmdPtr = CmdPtr->SameLevel;
002406 964842rr        5877         MOV.B   ES,#SEG( _CmdPtr )
00240A 9938rrrr        5878         MOV.W   R3,#SOF( _CmdPtr )
00240E 8B23            5879         MOV.W   R2,[R3+]
002410 8A33            5880         MOV.W   R3,[R3]
002412 99200008        5881         ADD.W   R2,#08H
002416 99310000        5882         ADDC.W  R3,#00H
00241A 866C43          5883         MOV.B   CS,R3L
00241D 8802            5884         MOVC.W  R0,[R2+]
00241F 99240000        5885         CMP.W   R2,#00H
002423 F202            5886         BNE     _568
002425 A64143          5887         ADDS.B  CS,#01H
002425 A64143          5887         ADDS.B  CS,#01H
002428                 5888 _568:
002428 8812            5889         MOVC.W  R1,[R2+]
00242A 964842rr        5890         MOV.B   ES,#SEG( _CmdPtr )
00242E 9928rrrr        5891         MOV.W   R2,#SOF( _CmdPtr )
002432 8B0A            5892         MOV.W   [R2+],R0
002434 8A1A            5893         MOV.W   [R2],R1
002436 6910            5895         OR.W    R1,R0
002438 F28B            5896         BNE     _538
                       5897 ; rs232par.c 1373                                       }
                       5898 ; rs232par.c 1374                               }
00243A FE18            5900         BR      _548
00243C                 5902 _544:
00243C 964842rr        5903         MOV.B   ES,#SEG( _CmdPtr )
002440 9918rrrr        5904         MOV.W   R1,#SOF( _CmdPtr )
002444 8B01            5905         MOV.W   R0,[R1+]
002446 8A11            5906         MOV.W   R1,[R1]
002448 9900000C        5907         ADD.W   R0,#0CH
00244C 99110000        5908         ADDC.W  R1,#00H
002450 862C43          5909         MOV.B   CS,R1L
002453 8820            5910         MOVC.W  R2,[R0+]
002455 99040000        5911         CMP.W   R0,#00H
002459 F202            5912         BNE     _569
00245B A64143          5913         ADDS.B  CS,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  81

ADDR   CODE            LINE SOURCELINE
00245B A64143          5913         ADDS.B  CS,#01H
00245E                 5914 _569:
00245E 8830            5915         MOVC.W  R3,[R0+]
002460 964842rr        5916         MOV.B   ES,#SEG( _CmdPtr )
002464 9908rrrr        5917         MOV.W   R0,#SOF( _CmdPtr )
002468 8B28            5918         MOV.W   [R0+],R2
00246A 8A38            5919         MOV.W   [R0],R3
                       5920 ; rs232par.c 1375                               else
                       5921 ; rs232par.c 1376                               {
                       5922 ; rs232par.c 1377       
                       5923 ; rs232par.c 1378       /*                              switch ( ParameterType) {
                       5924 ; rs232par.c 1379                                               case P_BinDecNum:
                       5925 ; rs232par.c 1380                                                       btol( Cmd, &DecVar);
                       5926 ; rs232par.c 1381                                                       _ultoa( DecVar, Cmd);
                       5927 ; rs232par.c 1382                                                       ParameterType = P_DecNum;
                            
                       5928 ; rs232par.c 1383                                                       break;
                       5929 ; rs232par.c 1384       
                       5930 ; rs232par.c 1385                                               case P_OctDecNum:
                       5931 ; rs232par.c 1386                                                       otol( Cmd, &DecVar);
                       5932 ; rs232par.c 1387                                                       _ultoa( DecVar, Cmd);
                       5933 ; rs232par.c 1388                                                       ParameterType = P_DecNum;
                            
                       5934 ; rs232par.c 1389                                                       break;
                       5935 ; rs232par.c 1390       
                       5936 ; rs232par.c 1391                                               case P_HexDecNum:
                       5937 ; rs232par.c 1392                                                       htol( Cmd, &DecVar);
                       5938 ; rs232par.c 1393                                                       _ultoa( DecVar, Cmd);
                       5939 ; rs232par.c 1394                                                       ParameterType = P_DecNum;
                            
                       5940 ; rs232par.c 1395                                                       break;
                       5941 ; rs232par.c 1396                                       }
                       5942 ; rs232par.c 1397       */                      }
00246C                 5944 _548:
                       5945 ; rs232par.c 1398       
                       5946 ; rs232par.c 1399                               if ( CmdState != NextLevel)                      
                                                    // ie. Ready, PMUS and PMT
00246C 91C401          5948         CMP.B   R6L,#01H
00246F F367            5949         BEQ     _562
                       5950 ; rs232par.c 1400                               {
                       5951 ; rs232par.c 1401       
                       5952 ; rs232par.c 1402       /*                              if ( SCPIError == NoErr) {
                       5953 ; rs232par.c 1403       
                       5954 ; rs232par.c 1404                                               if ( CmdState != Ready)
                       5955 ; rs232par.c 1405                                                       CmdExecute = TRUE;
                       5956 ; rs232par.c 1406                                               else
                       5957 ; rs232par.c 1407                                                       CmdExecute = FALSE;
                       5958 ; rs232par.c 1408       
                       5959 ; rs232par.c 1409                                               if (( CmdPtr->Function != NONE) &
                            & CmdPtr)
                       5960 ; rs232par.c 1410                                                       CmdPtr->Function();
                       5961 ; rs232par.c 1411                                               else {
                       5962 ; rs232par.c 1412                                                       if ( Cmd[0] != '\x0')
                       5963 ; rs232par.c 1413                                                               SCPIError = Synta
                            xErr;
                       5964 ; rs232par.c 1414                                               }
                       5965 ; rs232par.c 1415                                       }*/
                       5966 ; rs232par.c 1416       
                       5967 ; rs232par.c 1417       // Rewritten by TK 991110 to not execute function before delimiter.
                       5968 ; rs232par.c 1418       
                       5969 ; rs232par.c 1419                                       if ( SCPIError == NoErr)
002471 964842rr        5971         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  82

ADDR   CODE            LINE SOURCELINE
002475 9908rrrr        5972         MOV.W   R0,#SOF( _SCPIError )
002479 8A00            5973         MOV.W   R0,[R0]
00247B F237            5974         BNE     _555
                       5975 ; rs232par.c 1420                                       {
                       5976 ; rs232par.c 1421                                               if ( CmdState != Ready)
00247D 91C402          5978         CMP.B   R6L,#02H
002480 F32F            5979         BEQ     _551
                       5980 ; rs232par.c 1422                                               {
                       5981 ; rs232par.c 1423                                                       CmdExecute = TRUE;      
002482 964842rr        5983         MOV.B   ES,#SEG( _CmdExecute )
002486 9908rrrr        5984         MOV.W   R0,#SOF( _CmdExecute )
00248A 9208FF          5985         MOV.B   [R0],#0FFH
                       5986 ; rs232par.c 1424       
                       5987 ; rs232par.c 1425                                                       if (( CmdPtr->Function !=
                             NONE) && CmdPtr)
00248D 964842rr        5989         MOV.B   ES,#SEG( _CmdPtr )
002491 9938rrrr        5990         MOV.W   R3,#SOF( _CmdPtr )
002495 8B23            5991         MOV.W   R2,[R3+]
002497 8A33            5992         MOV.W   R3,[R3]
002499 8953            5993         MOV.W   R5,R3
00249B 8942            5994         MOV.W   R4,R2
00249D 99400014        5995         ADD.W   R4,#014H
0024A1 99510000        5996         ADDC.W  R5,#00H
0024A5 86AC43          5997         MOV.B   CS,R5L
0024A8 8804            5998         MOVC.W  R0,[R4+]
0024AA 99440000        5999         CMP.W   R4,#00H
0024AE F202            6000         BNE     _572
0024B0 A64143          6001         ADDS.B  CS,#01H
0024B0 A6414300        6001         ADDS.B  CS,#01H
0024B4                 6002 _572:
0024B4 8814            6003         MOVC.W  R1,[R4+]
0024B6 8951            6004         MOV.W   R5,R1
0024B8 8940            6005         MOV.W   R4,R0
0024BA 6910            6006         OR.W    R1,R0
0024BC F305            6007         BEQ     _550
0024BE 6932            6008         OR.W    R3,R2
0024C0 F303            6009         BEQ     _550
                       6010 ; rs232par.c 1426                                                               CmdPtr->Function(
                            );
0024C2 C4rrrrrr        6012         FCALL   __ICALL
0024C6 FE11            6013         BR      _555
0024C6 FE11            6013         BR      _555
0024C8                 6014 _550:
                       6015 ; rs232par.c 1427                                                       else
                       6016 ; rs232par.c 1428                                                       {
                       6017 ; rs232par.c 1429                                                               if ( Cmd[0] != '\
                            x0')
0024C8 964842rr        6019         MOV.B   ES,#SEG( _Cmd )
0024CC 9908rrrr        6020         MOV.W   R0,#SOF( _Cmd )
0024D0 8200            6021         MOV.B   R0L,[R0]
0024D2 F30B            6022         BEQ     _555
                       6023 ; rs232par.c 1430                                                                       SCPIError
                             = SyntaxErr;
0024D4 964842rr        6025         MOV.B   ES,#SEG( _SCPIError )
0024D8 9908rrrr        6026         MOV.W   R0,#SOF( _SCPIError )
0024DC BA03            6027         MOV.W   [R0],#03H
                       6028 ; rs232par.c 1431                                                       }
                       6029 ; rs232par.c 1432                                               }
0024DE FE05            6031         BR      _555
0024DE FE05            6031         BR      _555
0024E0                 6032 _551:
                       6033 ; rs232par.c 1433                                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  83

ADDR   CODE            LINE SOURCELINE
                       6034 ; rs232par.c 1434                                                       CmdExecute = FALSE;
0024E0 964842rr        6036         MOV.B   ES,#SEG( _CmdExecute )
0024E4 9908rrrr        6037         MOV.W   R0,#SOF( _CmdExecute )
0024E8 B200            6038         MOV.B   [R0],#00H
                       6039 ; rs232par.c 1435       
                       6040 ; rs232par.c 1436                                       }
0024EA                 6042 _555:
                       6043 ; rs232par.c 1437       
                       6044 ; rs232par.c 1438                                       if ( CmdState == PMT)
0024EA 91C404          6046         CMP.B   R6L,#04H
0024ED F211            6047         BNE     _556
                       6048 ; rs232par.c 1439                                               CmdPtr = CmdLevelPtr = &Subsystem
                            [0];    // Reset level pointers
0024EF 964842rr        6050         MOV.B   ES,#SEG( _CmdLevelPtr )
0024F3 9908rrrr        6051         MOV.W   R0,#SOF( _CmdLevelPtr )
0024F7 9B08rrrr        6052         MOV.W   [R0+],#SOF( _Subsystem )
0024FB 9A08rrrr        6053         MOV.W   [R0],#SEG( _Subsystem )
0024FF 964842rr        6054         MOV.B   ES,#SEG( _CmdPtr )
002503 9908rrrr        6055         MOV.W   R0,#SOF( _CmdPtr )
002507 9B08rrrr        6056         MOV.W   [R0+],#SOF( _Subsystem )
00250B 9A08rrrr        6057         MOV.W   [R0],#SEG( _Subsystem )
00250B 9A08rrrr00      6057         MOV.W   [R0],#SEG( _Subsystem )
002510                 6058 _556:
                       6059 ; rs232par.c 1440       
                       6060 ; rs232par.c 1441                                       if ( CmdState != Ready)                  
                                                                            // ie. PMUS and PMT
002510 91C402          6062         CMP.B   R6L,#02H
002513 F315            6063         BEQ     _562
                       6064 ; rs232par.c 1442                                       {
                       6065 ; rs232par.c 1443                                               if ( SCPIError)                  
                                                                                                    // If any errors has occu
                            red
002515 964842rr        6067         MOV.B   ES,#SEG( _SCPIError )
002519 9908rrrr        6068         MOV.W   R0,#SOF( _SCPIError )
00251D 8A00            6069         MOV.W   R0,[R0]
00251F F309            6070         BEQ     _557
                       6071 ; rs232par.c 1444                                               {
                       6072 ; rs232par.c 1445                                                       SaveErrorEventQueue( SCPI
                            Error);         //  save the error
                       6074         CALL    _SaveErrorEventQueue
002521 C4rrrrrr       +6074 ;       FCALL   _SaveErrorEventQueue
                       6075 ; rs232par.c 1446                                                       SCPIError = NoErr;
002525 964842rr        6077         MOV.B   ES,#SEG( _SCPIError )
002529 9908rrrr        6078         MOV.W   R0,#SOF( _SCPIError )
00252D BA00            6079         MOV.W   [R0],#00H
                       6080 ; rs232par.c 1447                                               }
00252F FE07            6082         BR      _562
00252F FE0700          6082         BR      _562
002532                 6083 _557:
                       6084 ; rs232par.c 1448                                               else
                       6085 ; rs232par.c 1449                                                       NewCmdExecuted = TRUE;   
                                                    // Command has succesfully
002532 964842rr        6087         MOV.B   ES,#SEG( _NewCmdExecuted )
002536 9908rrrr        6088         MOV.W   R0,#SOF( _NewCmdExecuted )
00253A 9208FF          6089         MOV.B   [R0],#0FFH
                       6090 ; rs232par.c 1450                                       }                                        
                                                                                            //  been executed
                       6091 ; rs232par.c 1451                               }
                       6092 ; rs232par.c 1452                               break;
                       6093 ; rs232par.c 1453               }
00253E                 6095 _562:
                       6096 ; rs232par.c 1454       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  84

ADDR   CODE            LINE SOURCELINE
00253E 2F70            6098         POP.W   R4, R5, R6
002540 D680            6100         RET
000000                 6107 RS232PAR_CLR_FA SEGMENT HDATA INSEGMENT CLEAR
000000                 6108         RSEG    RS232PAR_CLR_FA
                       6109         PUBLIC  _CmdExecute
000000 RESERVED        6110 _CmdExecute:    DS      1
000000
                       6113         PUBLIC  _NewCmdExecuted
000001 RESERVED        6114 _NewCmdExecuted:        DS      1
000001
                       6118         PUBLIC  _ParType
000002                 6119 _ParType:       DS      10
   |  RESERVED             
00000B
                       6122         EXTRN   HCODE(_Cstrcmp)
                       6125         EXTRN   HCODE(_toupper)
                       6128         EXTRN   HCODE(_SaveErrorEventQueue)
                       6131         PUBLIC  _CmdNdx
                       6132         ALIGN   1
00000C                 6133 _CmdNdx:        DS      2
   |  RESERVED             
00000D
                       6135         ALIGN   1
00000E                 6136 _NoOfBytes:     DS      2
   |  RESERVED             
00000F
                       6140         PUBLIC  _Cmd
000010                 6141 _Cmd:   DS      512
   |  RESERVED             
00020F
                       6144         PUBLIC  _ParCnt
000210 RESERVED        6145 _ParCnt:        DS      1
000210
                       6148         PUBLIC  _NumSuffix
000211 RESERVED        6149         ALIGN   1
000211
000212                 6150 _NumSuffix:     DS      2
   |  RESERVED             
000213
                       6153         PUBLIC  _CmdRequest
000214 RESERVED        6154 _CmdRequest:    DS      1
000214
                       6157         EXTRN   HCODE(_rs232GetLastError)
                       6160         EXTRN   HDATA(__ctype_)
                       6163         EXTRN   HCODE(_Mandated)
000215 RESERVED        6165 _NoOfDigits:    DS      1
000215
                       6166         EXTRN   HCODE(__ICALL)
                       6169         EXTRN   HCODE(_Subsystem)
                       6172         PUBLIC  _ResponseReceived
000216 RESERVED        6173 _ResponseReceived:      DS      1
000216
                       6175         EXTRN   HDATA(_SCPIError)
                       6176         EXTRN   DATA(__lc_ub_xvwbuffer)
                       6177         EXTRN   DATA(__lc_ue_xvwbuffer)
                       6178         CALLS   'CmdSyntax', 'toupper'
                       6179         CALLS   'CmdSyntax', 'rs232GetLastError'
                       6180         CALLS   'CmdHandler', 'CmdSyntax'
                       6181         CALLS   'CmdHandler', 'Cstrcmp'
                       6182         CALLS   'CmdHandler', 'SaveErrorEventQueue'
