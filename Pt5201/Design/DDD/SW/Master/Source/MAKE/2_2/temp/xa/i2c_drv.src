; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -I..\..\rtxcdef\xa
;          -I..\..\rtxc\xa\include -I..\..\code\include\1_0 -I..\..\app_spec\xa
;          -Ml -O2 -s
$CASE
$NOZPAGE
	NAME	I2C_DRV
	SYMB	TOOL, "XA C compiler v2.0", 1
	SYMB	TYPE, 256, "bit", 'g', 0, 1
	SYMB	FILE, "..\\..\\code\\chndrv\\xa\\iic\\1_1\\i2c_drv.c"
; i2c_drv.c    1	/* Generic iic module */
; i2c_drv.c    2	
; i2c_drv.c    3	/* History Rev 0_1 introduced in PT5765 pilot production */
; i2c_drv.c    4	
; i2c_drv.c    5	/* Rev 1_1 has changes required for PT5765 production and for use in PT5201 project     */
; i2c_drv.c    6	/* Rev 1_1 Modify 15. Jan 2000 SAA                                                      */
; i2c_drv.c    7	/* Rev 1_1 Remove access to eventlog from this level                                    */
; i2c_drv.c    8	/* Rev 1_1 Add support for more busses                                                  */
; i2c_drv.c    9	/* Rev 1_1 Add support for enable/disable support for each individual bus               */
; i2c_drv.c   10	
; i2c_drv.c   11	
; i2c_drv.c   12	#include <stdio.h>       /* Using sprintf() */
	SYMB	FILE, "c:\\cxa\\include\\stdio.h"
	SYMB	FILE, "c:\\cxa\\include\\stdarg.h"
	SYMB	ENDF
	SYMB	TYPE, 257, 'n', #2, 130
	SYMB	TYPE, 258, 'P', #257
	SYMB	TYPE, 259, "_iobuf", 'S', 14,\
		 "_ptr", #258, 0,\
		 "_cnt", #16, 4,\
		 "_base", #258, 6,\
		 "_flag", #2, 10,\
		 "_file", #2, 11,\
		 "_bufsiz", #16, 12
	SYMB	TYPE, 260, "FILE", 'T', #259
	SYMB	TYPE, 261, 'n', #1, 130
	SYMB	TYPE, 262, 'P', #261
	SYMB	TYPE, 263, 'Z', #262, 0
	SYMB	TYPE, 265, "va_list", 'T', #263
	SYMB	TYPE, 266, "size_t", 'T', #18
	SYMB	TYPE, 267, "fpos_t", 'T', #7
	SYMB	ENDF
; i2c_drv.c   13	
; i2c_drv.c   14	#include "define.h"     /* Standard PTV definitions */
	SYMB	FILE, "..\\..\\code\\include\\1_0\\define.h"
	SYMB	ENDF
; i2c_drv.c   15	#include "rtxcobj.h"    /* Kernal objects */
	SYMB	FILE, "..\\..\\code\\include\\1_0\\rtxcobj.h"
	SYMB	FILE, "..\\..\\rtxc\\xa\\include\\rtxcapi.h"
	SYMB	FILE, "..\\..\\rtxc\\xa\\include\\typedef.h"
	SYMB	FILE, "..\\..\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 268, "KOBJNUM", 'T', #3
	SYMB	TYPE, 269, "TASK", 'T', #2
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxc\\xa\\include\\rtxstruc.h"
	SYMB	FILE, "..\\..\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 270, "KSNUM", 'T', #3
	SYMB	TYPE, 271, "PRIORITY", 'T', #269
	SYMB	TYPE, 272, "TSTATE", 'T', #5
	SYMB	TYPE, 273, "TSLICE", 'T', #3
	SYMB	TYPE, 275, 'n', #274, 130
	SYMB	TYPE, 276, 'P', #275
	SYMB	TYPE, 278, 'n', #277, 130
	SYMB	TYPE, 279, 'P', #278
	SYMB	TYPE, 280, 'n', #270, 130
	SYMB	TYPE, 281, 'P', #280
	SYMB	TYPE, 282, 'X', 12, #1, 30, 0
	SYMB	TYPE, 283, 'n', #282, 129
	SYMB	TYPE, 284, 'P', #283
	SYMB	TYPE, 285, "frame", 'S', 24,\
		 "es", #3, 0,\
		 "cs", #3, 1,\
		 "ssel", #3, 2,\
		 "ds", #3, 3,\
		 "pksnum", #281, 4,\
		 "R2", #18, 8,\
		 "R3", #18, 10,\
		 "R4", #18, 12,\
		 "R5", #18, 14,\
		 "R6", #18, 16,\
		 "psw", #18, 18,\
		 "pc", #284, 20
	SYMB	TYPE, 286, 'n', #285, 130
	SYMB	TYPE, 287, 'P', #286
	SYMB	TYPE, 288, 'X', 12, #1, 30, 0
	SYMB	TYPE, 289, 'n', #288, 129
	SYMB	TYPE, 290, 'P', #289
	SYMB	TYPE, 274, "tcb", 'S', 36,\
		 "flink", #276, 0,\
		 "blink", #276, 4,\
		 "pclkblk", #279, 8,\
		 "task", #269, 12,\
		 "priority", #271, 13,\
		 "sp", #287, 14,\
		 "status", #272, 18,\
		 "pc_t0", #290, 20,\
		 "stackbase", #258, 24,\
		 "stacksize", #266, 28,\
		 "tslice", #273, 30,\
		 "newslice", #273, 31,\
		 "arg", #262, 32
	SYMB	TYPE, 291, "TCB", 'T', #274
	SYMB	TYPE, 292, "SEMA", 'T', #268
	SYMB	TYPE, 293, "MAP", 'T', #268
	SYMB	TYPE, 295, 'n', #294, 130
	SYMB	TYPE, 296, 'P', #295
	SYMB	TYPE, 294, "rtxcmsg", 'S', 8,\
		 "link", #296, 0,\
		 "task", #269, 4,\
		 "priority", #271, 5,\
		 "sema", #292, 6
	SYMB	TYPE, 297, "RTXCMSG", 'T', #294
	SYMB	TYPE, 298, "TICKS", 'T', #16
	SYMB	TYPE, 299, 'N',\
		 "DELAY_OBJ", 0,\
		 "SEMAPHORE_OBJ", 1,\
		 "PARTITION_OBJ", 2,\
		 "QUEUE_OBJ", 3,\
		 "RESOURCE_OBJ", 4,\
		 "MAILBOX_OBJ", 5,\
		 "TIMER_OBJ", 6
	SYMB	TYPE, 300, "OBJTYPE", 'T', #299
	SYMB	TYPE, 277, "clkblk", 'S', 18,\
		 "flink", #279, 0,\
		 "blink", #279, 4,\
		 "remain", #298, 8,\
		 "recycle", #298, 10,\
		 "task", #269, 12,\
		 "state", #2, 13,\
		 "objtype", #300, 14,\
		 "objid", #268, 16
	SYMB	TYPE, 301, 'N',\
		 "PRIORITY_INVERSION_OFF", 0,\
		 "PRIORITY_INVERSION_ON", 1
	SYMB	TYPE, 302, "RESATTR", 'T', #301
	SYMB	ENDF
	SYMB	TYPE, 303, 'N',\
		 "RC_GOOD", 0,\
		 "RC_WAIT_CONFLICT", 1,\
		 "RC_NO_TIMERS", 2,\
		 "RC_TIMER_INACTIVE", 3,\
		 "RC_TIMER_ILLEGAL", 4,\
		 "RC_TIMEOUT", 5,\
		 "RC_QUEUE_FULL", 6,\
		 "RC_QUEUE_EMPTY", 7,\
		 "RC_ILLEGAL_QUEUE_SIZE", 8,\
		 "RC_BUSY", 9,\
		 "RC_NESTED", 10,\
		 "RC_ILLEGAL_TASK", 11,\
		 "RC_ACTIVE_TASK", 12,\
		 "RC_NO_YIELD", 13,\
		 "RC_MISSED_EVENT", 14
	SYMB	TYPE, 304, "KSRC", 'T', #303
	SYMB	TYPE, 305, "SSTATE", 'T', #269
	SYMB	TYPE, 306, "MBOX", 'T', #268
	SYMB	TYPE, 307, "QUEUE", 'T', #268
	SYMB	TYPE, 308, 'N',\
		 "QNE", 0,\
		 "QNF", 1,\
		 "QF", 2,\
		 "QE", 3
	SYMB	TYPE, 309, "QCOND", 'T', #308
	SYMB	TYPE, 310, "RESOURCE", 'T', #268
	SYMB	TYPE, 311, "CLKBLK", 'T', #277
	SYMB	TYPE, 312, "time_t", 'T', #6
	SYMB	TYPE, 313, "FRAME", 'T', #285
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\ctask.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\csema.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\cres.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\cqueue.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\cpart.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\cmbox.h"
	SYMB	ENDF
	SYMB	FILE, "..\\..\\rtxcdef\\xa\\cclock.h"
	SYMB	ENDF
	SYMB	TYPE, 315, 'n', #314, 130
	SYMB	TYPE, 316, 'P', #315
	SYMB	TYPE, 314, 'X', 12, #1, 30, 2, #316, #258
	SYMB	TYPE, 318, 'n', #317, 129
	SYMB	TYPE, 319, 'P', #318
	SYMB	TYPE, 320, 'X', 12, #1, 30, 1, #316
	SYMB	TYPE, 321, 'n', #320, 129
	SYMB	TYPE, 322, 'P', #321
	SYMB	TYPE, 323, 'n', #6, 130
	SYMB	TYPE, 324, 'P', #323
	SYMB	TYPE, 323, 'X', 12, #16, 30, 2, #316, #324
	SYMB	TYPE, 326, 'n', #325, 129
	SYMB	TYPE, 327, 'P', #326
	SYMB	TYPE, 328, 'X', 12, #1, 30, 1, #316
	SYMB	TYPE, 329, 'n', #328, 129
	SYMB	TYPE, 330, 'P', #329
	SYMB	TYPE, 331, 'X', 12, #1, 30, 1, #316
	SYMB	TYPE, 332, 'n', #331, 129
	SYMB	TYPE, 333, 'P', #332
	SYMB	TYPE, 334, 'X', 12, #16, 30, 1, #316
	SYMB	TYPE, 335, 'n', #334, 129
	SYMB	TYPE, 336, 'P', #335
	SYMB	TYPE, 314, "TEvent", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TEvent", #319, 2,\
		 "_TEvent", #322, 6,\
		 "Wait", #327, 10,\
		 "Set", #330, 14,\
		 "Clear", #333, 18,\
		 "IsSet", #336, 22,\
		 "ID", #292, 26,\
		 "Name", #258, 28
	SYMB	TYPE, 337, "TEvent", 'T', #314
	SYMB	TYPE, 339, 'n', #338, 130
	SYMB	TYPE, 340, 'P', #339
	SYMB	TYPE, 338, 'X', 12, #1, 30, 1, #340
	SYMB	TYPE, 342, 'n', #341, 129
	SYMB	TYPE, 343, 'P', #342
	SYMB	TYPE, 344, 'X', 12, #1, 30, 1, #340
	SYMB	TYPE, 345, 'n', #344, 129
	SYMB	TYPE, 346, 'P', #345
	SYMB	TYPE, 347, 'n', #337, 130
	SYMB	TYPE, 348, 'P', #347
	SYMB	TYPE, 347, 'X', 12, #16, 30, 2, #340, #348
	SYMB	TYPE, 350, 'n', #349, 129
	SYMB	TYPE, 351, 'P', #350
	SYMB	TYPE, 352, 'X', 12, #1, 30, 2, #340, #348
	SYMB	TYPE, 353, 'n', #352, 129
	SYMB	TYPE, 354, 'P', #353
	SYMB	TYPE, 355, 'X', 12, #16, 30, 2, #340, #348
	SYMB	TYPE, 356, 'n', #355, 129
	SYMB	TYPE, 357, 'P', #356
	SYMB	TYPE, 358, 'X', 12, #348, 30, 2, #340, #324
	SYMB	TYPE, 359, 'n', #358, 129
	SYMB	TYPE, 360, 'P', #359
	SYMB	TYPE, 361, 'Z', #2, 95
	SYMB	TYPE, 338, "TEventList", 'S', 122,\
		 "ObjectID", #16, 0,\
		 "TEventList", #343, 2,\
		 "_TEventList", #346, 6,\
		 "Append", #351, 10,\
		 "Clear", #354, 14,\
		 "InList", #357, 18,\
		 "Wait", #360, 22,\
		 "Align", #361, 26
	SYMB	TYPE, 363, "TEventList", 'T', #338
	SYMB	TYPE, 365, 'n', #364, 130
	SYMB	TYPE, 366, 'P', #365
	SYMB	TYPE, 364, 'X', 12, #1, 30, 2, #366, #258
	SYMB	TYPE, 368, 'n', #367, 129
	SYMB	TYPE, 369, 'P', #368
	SYMB	TYPE, 370, 'X', 12, #1, 30, 1, #366
	SYMB	TYPE, 371, 'n', #370, 129
	SYMB	TYPE, 372, 'P', #371
	SYMB	TYPE, 373, 'X', 12, #1, 30, 1, #366
	SYMB	TYPE, 374, 'n', #373, 129
	SYMB	TYPE, 375, 'P', #374
	SYMB	TYPE, 376, 'X', 12, #1, 30, 1, #366
	SYMB	TYPE, 377, 'n', #376, 129
	SYMB	TYPE, 378, 'P', #377
	SYMB	TYPE, 379, 'X', 12, #16, 30, 1, #366
	SYMB	TYPE, 380, 'n', #379, 129
	SYMB	TYPE, 381, 'P', #380
	SYMB	TYPE, 364, "TResource", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TResource", #369, 2,\
		 "_TResource", #372, 6,\
		 "Lock", #375, 10,\
		 "Unlock", #378, 14,\
		 "Owner", #381, 18,\
		 "ID", #310, 22,\
		 "Name", #258, 24
	SYMB	TYPE, 382, "TResource", 'T', #364
	SYMB	TYPE, 383, 'X', 12, #1, 30, 0
	SYMB	TYPE, 384, 'n', #383, 129
	SYMB	TYPE, 385, 'P', #384
	SYMB	TYPE, 387, 'n', #386, 130
	SYMB	TYPE, 388, 'P', #387
	SYMB	TYPE, 383, 'X', 12, #1, 30, 3, #388, #16, #385
	SYMB	TYPE, 390, 'n', #389, 129
	SYMB	TYPE, 391, 'P', #390
	SYMB	TYPE, 392, 'X', 12, #1, 30, 1, #388
	SYMB	TYPE, 393, 'n', #392, 129
	SYMB	TYPE, 394, 'P', #393
	SYMB	TYPE, 395, 'X', 12, #1, 30, 1, #388
	SYMB	TYPE, 396, 'n', #395, 129
	SYMB	TYPE, 397, 'P', #396
	SYMB	TYPE, 398, 'X', 12, #1, 30, 2, #388, #16
	SYMB	TYPE, 399, 'n', #398, 129
	SYMB	TYPE, 400, 'P', #399
	SYMB	TYPE, 401, 'X', 12, #1, 30, 1, #388
	SYMB	TYPE, 402, 'n', #401, 129
	SYMB	TYPE, 403, 'P', #402
	SYMB	TYPE, 404, 'X', 12, #16, 30, 1, #388
	SYMB	TYPE, 405, 'n', #404, 129
	SYMB	TYPE, 406, 'P', #405
	SYMB	TYPE, 407, 'X', 12, #1, 30, 2, #388, #16
	SYMB	TYPE, 408, 'n', #407, 129
	SYMB	TYPE, 409, 'P', #408
	SYMB	TYPE, 386, "TThread", 'S', 36,\
		 "ObjectID", #16, 0,\
		 "TThread", #391, 2,\
		 "Execute", #394, 6,\
		 "Terminate", #397, 10,\
		 "Suspend", #400, 14,\
		 "Resume", #403, 18,\
		 "GetPriority", #406, 22,\
		 "SetPriority", #409, 26,\
		 "ID", #269, 30,\
		 "Status", #2, 31,\
		 "Stack", #258, 32
	SYMB	TYPE, 410, "TThread", 'T', #386
	SYMB	TYPE, 412, 'n', #411, 130
	SYMB	TYPE, 413, 'P', #412
	SYMB	TYPE, 411, 'X', 12, #1, 30, 1, #413
	SYMB	TYPE, 415, 'n', #414, 129
	SYMB	TYPE, 416, 'P', #415
	SYMB	TYPE, 417, 'X', 12, #1, 30, 1, #413
	SYMB	TYPE, 418, 'n', #417, 129
	SYMB	TYPE, 419, 'P', #418
	SYMB	TYPE, 420, 'X', 12, #1, 30, 2, #413, #16
	SYMB	TYPE, 421, 'n', #420, 129
	SYMB	TYPE, 422, 'P', #421
	SYMB	TYPE, 423, 'X', 12, #16, 30, 1, #413
	SYMB	TYPE, 424, 'n', #423, 129
	SYMB	TYPE, 425, 'P', #424
	SYMB	TYPE, 426, 'X', 12, #1, 30, 2, #413, #16
	SYMB	TYPE, 427, 'n', #426, 129
	SYMB	TYPE, 428, 'P', #427
	SYMB	TYPE, 429, 'n', #311, 130
	SYMB	TYPE, 430, 'P', #429
	SYMB	TYPE, 411, "TTimer", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TTimer", #416, 2,\
		 "_TTimer", #419, 6,\
		 "SetPeriod", #422, 10,\
		 "GetPeriod", #425, 14,\
		 "Tick", #428, 18,\
		 "TimeOut", #348, 22,\
		 "Period", #4, 26,\
		 "Handle", #430, 28
	SYMB	TYPE, 431, "TTimer", 'T', #411
	SYMB	TYPE, 433, 'n', #432, 130
	SYMB	TYPE, 434, 'P', #433
	SYMB	TYPE, 432, 'X', 12, #1, 30, 3, #434, #16, #16
	SYMB	TYPE, 436, 'n', #435, 129
	SYMB	TYPE, 437, 'P', #436
	SYMB	TYPE, 438, 'X', 12, #1, 30, 1, #434
	SYMB	TYPE, 439, 'n', #438, 129
	SYMB	TYPE, 440, 'P', #439
	SYMB	TYPE, 441, 'X', 12, #258, 30, 2, #434, #262
	SYMB	TYPE, 442, 'n', #441, 129
	SYMB	TYPE, 443, 'P', #442
	SYMB	TYPE, 444, 'X', 12, #1, 30, 2, #434, #262
	SYMB	TYPE, 445, 'n', #444, 129
	SYMB	TYPE, 446, 'P', #445
	SYMB	TYPE, 432, "TStream", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TStream", #437, 2,\
		 "_TStream", #440, 6,\
		 "Get", #443, 10,\
		 "Put", #446, 14,\
		 "ID", #307, 18,\
		 "Width", #16, 20,\
		 "Depth", #16, 22,\
		 "Handle", #258, 24
	SYMB	TYPE, 447, "TStream", 'T', #432
	SYMB	ENDF
; i2c_drv.c   16	
; i2c_drv.c   17	#include "config.h"     /* Include project specifics , Number of IIC-busses */
	SYMB	FILE, "..\\..\\code\\include\\1_0\\config.h"
	SYMB	ENDF
; i2c_drv.c   18	
; i2c_drv.c   19	#include "i2c_drv.h"    /* Own h file */
	SYMB	FILE, "..\\..\\code\\include\\1_0\\i2c_drv.h"
	SYMB	ENDF
; i2c_drv.c   20	
; i2c_drv.c   21	// In file 'config.h' the specific project can define the number of busses supported
; i2c_drv.c   22	// By using only #define NiicBus either 1 (system) 4 or 7 busses are define
; i2c_drv.c   23	// if only a few selected busses should be included, then add a #define IicBusX for each bus
; i2c_drv.c   24	
; i2c_drv.c   25	
; i2c_drv.c   26	#if (NiicBus==0)
; i2c_drv.c   27	#compiletime error : This module should not be included if iic-busses not are used
; i2c_drv.c   28	
; i2c_drv.c   29	#elif (NiicBus==1) //Include only system bus
; i2c_drv.c   30	
; i2c_drv.c   31	#elif (NiicBus<=4) //Include 3 instrument busses
; i2c_drv.c   32	#define IicBus1
; i2c_drv.c   33	#define IicBus2
; i2c_drv.c   34	#define IicBus3
; i2c_drv.c   35	
; i2c_drv.c   36	#else              // Include all supported busses
; i2c_drv.c   37	
; i2c_drv.c   38	#define IicBus1
; i2c_drv.c   39	#define IicBus2
; i2c_drv.c   40	#define IicBus3
; i2c_drv.c   41	#define IicBus4
; i2c_drv.c   42	#define IicBus5
; i2c_drv.c   43	#define IicBus6
; i2c_drv.c   44	
; i2c_drv.c   45	#endif
; i2c_drv.c   46	
; i2c_drv.c   47	
; i2c_drv.c   48	
; i2c_drv.c   49	
; i2c_drv.c   50	
; i2c_drv.c   51	// Rev 1_1 Remove eventlog reference
; i2c_drv.c   52	// #include "EvLog.h"      /* Event (error) reporting funtions */
; i2c_drv.c   53	
; i2c_drv.c   54	#include "EventDef.h"   /* Defines event IDs, used for error / status reporting */
	SYMB	FILE, "..\\..\\code\\include\\1_0\\EventDef.h"
	SYMB	ENDF
; i2c_drv.c   55	
; i2c_drv.c   56	/*  Module supports 4 busses : _ptv , _1, _2 and _3
; i2c_drv.c   57	    bus _ptv is the  local iic bus on the controller
; i2c_drv.c   58	    while busses _1, _2 and _3 are available for use on
; i2c_drv.c   59	    any instrument connector */
; i2c_drv.c   60	
; i2c_drv.c   61	
; i2c_drv.c   62	/* Define local PTV bus as direct pin or via FPGA */
; i2c_drv.c   63	#define FPGA 1
; i2c_drv.c   64	#define Direct 2
; i2c_drv.c   65	#define BusPTV Direct
; i2c_drv.c   66	
; i2c_drv.c   67	
; i2c_drv.c   68	/* Functions to support external :
; i2c_drv.c   69	   InitBus(UC bus)
; i2c_drv.c   70	   TransmitIIC(UC Address ,UC num ,UC *data ,UC bus )
; i2c_drv.c   71	   ReceiveIIC(UC Address ,UC num ,UC *data ,UC bus )
; i2c_drv.c   72	   */
; i2c_drv.c   73	
; i2c_drv.c   74	/* Hardware dependent definitions for the BIT version */
; i2c_drv.c   75	/* Includes functions : */
; i2c_drv.c   76	/* Read SDA */
; i2c_drv.c   77	/* Read SCL */
; i2c_drv.c   78	/* Set SDA high or low */
; i2c_drv.c   79	/* Set SCL high or low */
; i2c_drv.c   80	
; i2c_drv.c   81	/* Prototypes of local procedures */
; i2c_drv.c   82	//static void Delay(int usec);
; i2c_drv.c   83	static int SDA_get(UC bus);
; i2c_drv.c   84	static int SCL_get(UC bus);
; i2c_drv.c   85	static int SCL_set(UC level, UC bus);
; i2c_drv.c   86	static int SCL_set_wait(UC bus);
; i2c_drv.c   87	static int SDA_set(UC level, UC bus);
; i2c_drv.c   88	static int Start_IIC(UC bus);
; i2c_drv.c   89	static int Stop_IIC(UC bus);
; i2c_drv.c   90	static UC RxByte(int Last,UC bus);
; i2c_drv.c   91	static int TxByte(UC X,UC bus);
; i2c_drv.c   92	
; i2c_drv.c   93	
; i2c_drv.c   94	/* Delay of 1 to 5 microseconds */
; i2c_drv.c   95	/* Processor dependent delay of 5 usec */
; i2c_drv.c   96	/* XA controller running at 29.xx MHz  */
; i2c_drv.c   97	#define lopru 7        /* Number of loops executed each microsecond */
; i2c_drv.c   98	
; i2c_drv.c   99	#define Delay(x)
; i2c_drv.c  100	
; i2c_drv.c  101	//static void Delay(int usec)
; i2c_drv.c  102	//{
; i2c_drv.c  103	//    usec *= lopru;
; i2c_drv.c  104	//    while ( usec-- > 0 );
; i2c_drv.c  105	//}
; i2c_drv.c  106	
; i2c_drv.c  107	/* Local defines */
; i2c_drv.c  108	
; i2c_drv.c  109	#define High 1
; i2c_drv.c  110	#define Low  0
; i2c_drv.c  111	#define Bit7 0x80
; i2c_drv.c  112	
; i2c_drv.c  113	#define IICtimeout 10    // Timeout in usec
; i2c_drv.c  114	
; i2c_drv.c  115	
; i2c_drv.c  116	/* Define 1+6 busses for IIC ports in FPGA  */
; i2c_drv.c  117	
; i2c_drv.c  118	#if (BusPTV==FPGA)
; i2c_drv.c  119	volatile UC IICbit_0 _at(0x90012); /* For controller if via FPGA */
; i2c_drv.c  120	static UC   IICmir0;
; i2c_drv.c  121	#endif
; i2c_drv.c  122	
; i2c_drv.c  123	#ifdef IicBus1
; i2c_drv.c  124	volatile UC IICbit_1 _at(0x90312); /* Instrument busses */
; i2c_drv.c  125	static UC   IICmir1;
; i2c_drv.c  126	#endif
; i2c_drv.c  127	
; i2c_drv.c  128	#ifdef IicBus2
; i2c_drv.c  129	volatile UC IICbit_2 _at(0x90322);
; i2c_drv.c  130	static UC   IICmir2;
; i2c_drv.c  131	#endif
; i2c_drv.c  132	
; i2c_drv.c  133	#ifdef IicBus3
; i2c_drv.c  134	volatile UC IICbit_3 _at(0x90332);
; i2c_drv.c  135	static UC   IICmir3;
; i2c_drv.c  136	#endif
; i2c_drv.c  137	
; i2c_drv.c  138	#ifdef IicBus4
; i2c_drv.c  139	volatile UC IICbit_4 _at(0x90342);
; i2c_drv.c  140	static UC   IICmir4;
; i2c_drv.c  141	#endif
; i2c_drv.c  142	
; i2c_drv.c  143	#ifdef IicBus5
; i2c_drv.c  144	volatile UC IICbit_5 _at(0x90352);
; i2c_drv.c  145	static UC   IICmir5;
; i2c_drv.c  146	#endif
; i2c_drv.c  147	
; i2c_drv.c  148	#ifdef IicBus6
; i2c_drv.c  149	volatile UC IICbit_6 _at(0x90362);
; i2c_drv.c  150	static UC   IICmir6;
; i2c_drv.c  151	#endif
; i2c_drv.c  152	
; i2c_drv.c  153	
; i2c_drv.c  154	#define SDA_mask 0x02
; i2c_drv.c  155	#define SCL_mask 0x01
; i2c_drv.c  156	
; i2c_drv.c  157	/* Define direct pins used for local (PTV) IIC */
; i2c_drv.c  158	_sfrbit    SCLpin  _atbit(P1,7);   // P1^7
; i2c_drv.c  159	_sfrbit    SDApin  _atbit(P1,6);   // P1^6
; i2c_drv.c  160	
; i2c_drv.c  161	/* Functions for Reading SDA line */
; i2c_drv.c  162	/* Internal use only              */
; i2c_drv.c  163	
; i2c_drv.c  164	static int SDA_get(UC bus)
; i2c_drv.c  165	{
I2C_DRV_PR	SEGMENT	HCODE
	RSEG	I2C_DRV_PR
	ALIGN	1
	SYMB	LINE, 165
_SDA_get:
	SYMB	TYPE, 448, 'X', 12, #16, 30, 1, #3
	SYMB	LFUN, "SDA_get", _SDA_get, #448, 0, 0, 0
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
	SYMB	IDEN, "locvar", -1, #3, 130, 5
	SYMB	LTIM, "locvar", -1, 0, 69
; i2c_drv.c  166	   UC locvar;
; i2c_drv.c  167	   switch (bus)
; i2c_drv.c  168	   {
; i2c_drv.c  169	   default:
; i2c_drv.c  170	   case 0:
; i2c_drv.c  171	
; i2c_drv.c  172	#if (BusPTV==FPGA)
; i2c_drv.c  173	      locvar = ( (IICbit_0 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  174	#elif (BusPTV==Direct)
; i2c_drv.c  175	      locvar = (SDApin == 0 ? Low : High);    /*pin reading on XA*/
	SYMB	LINE, 175
	MOV	C,0431H.6
	BCS	_3
	MOV.B	R0L,#00H
	SYMB	LTIM, "bus", 0, 0, 2125
	BR	_4
_3:
	MOV.B	R0L,#01H
_4:
	SYMB	LTIM, "locvar", 0, 0, 205
; i2c_drv.c  176	#else /* Error : local bus not defined */
; i2c_drv.c  177	#compiletime error : Local bus not defined
; i2c_drv.c  178	#endif
; i2c_drv.c  179	
; i2c_drv.c  180	   break;
; i2c_drv.c  181	
; i2c_drv.c  182	#ifdef IicBus1
; i2c_drv.c  183	   case 1:
; i2c_drv.c  184	      locvar = ( (IICbit_1 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  185	   break;
; i2c_drv.c  186	#endif
; i2c_drv.c  187	
; i2c_drv.c  188	#ifdef IicBus2
; i2c_drv.c  189	   case 2:
; i2c_drv.c  190	      locvar = ( (IICbit_2 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  191	   break;
; i2c_drv.c  192	#endif
; i2c_drv.c  193	
; i2c_drv.c  194	#ifdef IicBus3
; i2c_drv.c  195	   case 3:
; i2c_drv.c  196	      locvar = ( (IICbit_3 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  197	   break;
; i2c_drv.c  198	#endif
; i2c_drv.c  199	
; i2c_drv.c  200	#ifdef IicBus4
; i2c_drv.c  201	   case 4:
; i2c_drv.c  202	      locvar = ( (IICbit_4 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  203	   break;
; i2c_drv.c  204	#endif
; i2c_drv.c  205	
; i2c_drv.c  206	#ifdef IicBus5
; i2c_drv.c  207	   case 5:
; i2c_drv.c  208	      locvar = ( (IICbit_5 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  209	   break;
; i2c_drv.c  210	#endif
; i2c_drv.c  211	
; i2c_drv.c  212	#ifdef IicBus6
; i2c_drv.c  213	   case 6:
; i2c_drv.c  214	      locvar = ( (IICbit_6 & SDA_mask) == 0 ? Low : High);
; i2c_drv.c  215	   break;
; i2c_drv.c  216	#endif
; i2c_drv.c  217	
; i2c_drv.c  218	
; i2c_drv.c  219	   }
; i2c_drv.c  220	   return(locvar);
	SYMB	LINE, 220
	MOVS.B	R0H,#00H
	SYMB	LTIM, "locvar", 0, 0, 77
; i2c_drv.c  221	}
	SYMB	LINE, 221
	RET
	SYMB	EFUN
; i2c_drv.c  222	
; i2c_drv.c  223	static int SCL_get(UC bus)
; i2c_drv.c  224	{
	ALIGN	1
	SYMB	LINE, 224
_SCL_get:
	SYMB	TYPE, 449, 'X', 12, #16, 30, 1, #3
	SYMB	LFUN, "SCL_get", _SCL_get, #449, 0, 0, 0
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
	SYMB	IDEN, "locvar", -1, #3, 130, 5
	SYMB	LTIM, "locvar", -1, 0, 69
; i2c_drv.c  225	   UC locvar;
; i2c_drv.c  226	   switch (bus)
; i2c_drv.c  227	   {
; i2c_drv.c  228	   default:
; i2c_drv.c  229	   case 0:
; i2c_drv.c  230	
; i2c_drv.c  231	#if (BusPTV==FPGA)
; i2c_drv.c  232	      locvar = ( (IICbit_0 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  233	#elif (BusPTV==Direct)
; i2c_drv.c  234	      locvar = (SCLpin == 0 ? Low : High);    /*pin reading on XA*/
	SYMB	LINE, 234
	MOV	C,0431H.7
	BCS	_5
	MOV.B	R0L,#00H
	SYMB	LTIM, "bus", 0, 0, 2125
	BR	_6
_5:
	MOV.B	R0L,#01H
_6:
	SYMB	LTIM, "locvar", 0, 0, 205
; i2c_drv.c  235	#else /* Error : local bus not defined */
; i2c_drv.c  236	#compiletime error : Local bus not defined
; i2c_drv.c  237	#endif
; i2c_drv.c  238	
; i2c_drv.c  239	   break;
; i2c_drv.c  240	
; i2c_drv.c  241	#ifdef IicBus1
; i2c_drv.c  242	   case 1:
; i2c_drv.c  243	      locvar = ( (IICbit_1 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  244	   break;
; i2c_drv.c  245	#endif
; i2c_drv.c  246	#ifdef IicBus2
; i2c_drv.c  247	   case 2:
; i2c_drv.c  248	      locvar = ( (IICbit_2 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  249	   break;
; i2c_drv.c  250	#endif
; i2c_drv.c  251	#ifdef IicBus3
; i2c_drv.c  252	   case 3:
; i2c_drv.c  253	      locvar = ( (IICbit_3 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  254	   break;
; i2c_drv.c  255	#endif
; i2c_drv.c  256	#ifdef IicBus4
; i2c_drv.c  257	   case 4:
; i2c_drv.c  258	      locvar = ( (IICbit_4 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  259	   break;
; i2c_drv.c  260	#endif
; i2c_drv.c  261	#ifdef IicBus5
; i2c_drv.c  262	   case 5:
; i2c_drv.c  263	      locvar = ( (IICbit_5 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  264	   break;
; i2c_drv.c  265	#endif
; i2c_drv.c  266	#ifdef IicBus6
; i2c_drv.c  267	   case 6:
; i2c_drv.c  268	      locvar = ( (IICbit_6 & SCL_mask) == 0 ? Low : High);
; i2c_drv.c  269	   break;
; i2c_drv.c  270	#endif
; i2c_drv.c  271	
; i2c_drv.c  272	   }
; i2c_drv.c  273	   return(locvar);
	SYMB	LINE, 273
	MOVS.B	R0H,#00H
	SYMB	LTIM, "locvar", 0, 0, 77
; i2c_drv.c  274	}
	SYMB	LINE, 274
	RET
	SYMB	EFUN
; i2c_drv.c  275	
; i2c_drv.c  276	
; i2c_drv.c  277	
; i2c_drv.c  278	
; i2c_drv.c  279	static int SCL_set(UC level, UC bus)
; i2c_drv.c  280	{
	ALIGN	1
	SYMB	LINE, 280
_SCL_set:
	SYMB	TYPE, 450, 'X', 12, #16, 30, 2, #3, #3
	SYMB	LFUN, "SCL_set", _SCL_set, #450, 0, 0, 0
	SYMB	LTIM, "level", 0, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	IDEN, "level", 0, #3, 0, 2061
	SYMB	IDEN, "bus", 1, #3, 0, 2061
; i2c_drv.c  281	   switch (bus)
; i2c_drv.c  282	   {
; i2c_drv.c  283	   default:
; i2c_drv.c  284	   case 0:
; i2c_drv.c  285	
; i2c_drv.c  286	#if (BusPTV==FPGA)
; i2c_drv.c  287	      if (level == High)
; i2c_drv.c  288	      {
; i2c_drv.c  289	         IICmir0   |=  SCL_mask;
; i2c_drv.c  290	         IICbit_0     = IICmir0;
; i2c_drv.c  291	      }
; i2c_drv.c  292	      else
; i2c_drv.c  293	      {
; i2c_drv.c  294	         IICmir0   &= ~SCL_mask;
; i2c_drv.c  295	         IICbit_0     = IICmir0;
; i2c_drv.c  296	      }
; i2c_drv.c  297	
; i2c_drv.c  298	#elif (BusPTV==Direct)
; i2c_drv.c  299	      if (level == High)
	SYMB	LINE, 299
	CMP.B	R0L,#01H
	BNE	_7
; i2c_drv.c  300	          SCLpin = 1;
	SYMB	LINE, 300
	SETB	0431H.7
	BR	_8
_7:
; i2c_drv.c  301	      else
; i2c_drv.c  302	          SCLpin = 0;
	SYMB	LINE, 302
	CLR	0431H.7
; i2c_drv.c  303	#else /* Error : local bus not defined */
; i2c_drv.c  304	#compiletime error : Local bus not defined
; i2c_drv.c  305	#endif
; i2c_drv.c  306	
; i2c_drv.c  307	   break;
; i2c_drv.c  308	
; i2c_drv.c  309	#ifdef IicBus1
; i2c_drv.c  310	   case 1:
; i2c_drv.c  311	      if (level == High)
; i2c_drv.c  312	      {
; i2c_drv.c  313	         IICmir1   |=  SCL_mask;
; i2c_drv.c  314	         IICbit_1     = IICmir1;
; i2c_drv.c  315	      }
; i2c_drv.c  316	      else
; i2c_drv.c  317	      {
; i2c_drv.c  318	         IICmir1   &= ~SCL_mask;
; i2c_drv.c  319	         IICbit_1     = IICmir1;
; i2c_drv.c  320	      }
; i2c_drv.c  321	   break;
; i2c_drv.c  322	#endif
; i2c_drv.c  323	#ifdef IicBus2
; i2c_drv.c  324	   case 2:
; i2c_drv.c  325	      if (level == High)
; i2c_drv.c  326	      {
; i2c_drv.c  327	         IICmir2   |=  SCL_mask;
; i2c_drv.c  328	         IICbit_2     = IICmir2;
; i2c_drv.c  329	      }
; i2c_drv.c  330	      else
; i2c_drv.c  331	      {
; i2c_drv.c  332	         IICmir2   &= ~SCL_mask;
; i2c_drv.c  333	         IICbit_2     = IICmir2;
; i2c_drv.c  334	      }
; i2c_drv.c  335	   break;
; i2c_drv.c  336	#endif
; i2c_drv.c  337	#ifdef IicBus3
; i2c_drv.c  338	   case 3:
; i2c_drv.c  339	      if (level == High)
; i2c_drv.c  340	      {
; i2c_drv.c  341	         IICmir3   |=  SCL_mask;
; i2c_drv.c  342	         IICbit_3     = IICmir3;
; i2c_drv.c  343	      }
; i2c_drv.c  344	      else
; i2c_drv.c  345	      {
; i2c_drv.c  346	         IICmir3   &= ~SCL_mask;
; i2c_drv.c  347	         IICbit_3     = IICmir3;
; i2c_drv.c  348	      }
; i2c_drv.c  349	   break;
; i2c_drv.c  350	#endif
; i2c_drv.c  351	#ifdef IicBus4
; i2c_drv.c  352	   case 4:
; i2c_drv.c  353	      if (level == High)
; i2c_drv.c  354	      {
; i2c_drv.c  355	         IICmir4   |=  SCL_mask;
; i2c_drv.c  356	         IICbit_4     = IICmir4;
; i2c_drv.c  357	      }
; i2c_drv.c  358	      else
; i2c_drv.c  359	      {
; i2c_drv.c  360	         IICmir4   &= ~SCL_mask;
; i2c_drv.c  361	         IICbit_4     = IICmir4;
; i2c_drv.c  362	      }
; i2c_drv.c  363	   break;
; i2c_drv.c  364	#endif
; i2c_drv.c  365	#ifdef IicBus5
; i2c_drv.c  366	   case 5:
; i2c_drv.c  367	      if (level == High)
; i2c_drv.c  368	      {
; i2c_drv.c  369	         IICmir5   |=  SCL_mask;
; i2c_drv.c  370	         IICbit_5     = IICmir5;
; i2c_drv.c  371	      }
; i2c_drv.c  372	      else
; i2c_drv.c  373	      {
; i2c_drv.c  374	         IICmir5   &= ~SCL_mask;
; i2c_drv.c  375	         IICbit_5     = IICmir5;
; i2c_drv.c  376	      }
; i2c_drv.c  377	   break;
; i2c_drv.c  378	#endif
; i2c_drv.c  379	#ifdef IicBus6
; i2c_drv.c  380	   case 6:
; i2c_drv.c  381	      if (level == High)
; i2c_drv.c  382	      {
; i2c_drv.c  383	         IICmir6   |=  SCL_mask;
; i2c_drv.c  384	         IICbit_6     = IICmir6;
; i2c_drv.c  385	      }
; i2c_drv.c  386	      else
; i2c_drv.c  387	      {
; i2c_drv.c  388	         IICmir6   &= ~SCL_mask;
; i2c_drv.c  389	         IICbit_6     = IICmir6;
; i2c_drv.c  390	      }
; i2c_drv.c  391	   break;
; i2c_drv.c  392	#endif
; i2c_drv.c  393	   }
	SYMB	LINE, 393
_8:
; i2c_drv.c  394	   return(OK);  /* No errors possible */
	SYMB	LINE, 394
	MOV.W	R0,#0FFFFH
	SYMB	LTIM, "level", 0, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  395	}
	SYMB	LINE, 395
	RET
	SYMB	EFUN
; i2c_drv.c  396	
; i2c_drv.c  397	static int SCL_set_wait(UC bus)
; i2c_drv.c  398	{
	ALIGN	1
	SYMB	LINE, 398
_SCL_set_wait:
	SYMB	TYPE, 451, 'X', 12, #16, 30, 1, #3
	SYMB	LFUN, "SCL_set_wait", _SCL_set_wait, #451, 0, 0, 48
	PUSH.W	R4, R5
	SYMB	SOFF, 4
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
	SYMB	IDEN, "i", -1, #18, 130, 5
	SYMB	LTIM, "i", -1, 0, 69
; i2c_drv.c  399		UI i;
; i2c_drv.c  400		SCL_set(High,bus);      /* Release clockline and */
	SYMB	LINE, 400
	MOV.B	R5L,R0L
	MOV.B	R0H,R0L
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
; i2c_drv.c  401		i = 0;              /* wait for physical line to go high */
	SYMB	LINE, 401
	MOV.W	R4,#00H
	SYMB	LTIM, "i", 18, 0, 205
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  402	
; i2c_drv.c  403		while ( (SCL_get(bus) == Low) && (i++ < IICtimeout) );
	SYMB	LINE, 403
	CALL	_SCL_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	OR.W	R0,R0
	BNE	_13
	MOV.W	R4,#01H
	SYMB	LTIM, "i", 18, 0, 77
	SYMB	LTIM, "i", 18, 0, 205
	MOV.W	R0,#00H
	CMP.W	R0,#0AH
	BCC	_13
_10:
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
	CALL	_SCL_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	OR.W	R0,R0
	BNE	_13
	MOV.W	R0,R4
	SYMB	LTIM, "i", 18, 0, 77
	SYMB	LTIM, "i", 2, 0, 205
	ADDS.W	R4,#01H
	SYMB	LTIM, "i", 2, 0, 77
	SYMB	LTIM, "i", 18, 0, 205
	CMP.W	R0,#0AH
	BCS	_10
_13:
; i2c_drv.c  404	
; i2c_drv.c  405		if(i < IICtimeout)
	SYMB	LINE, 405
	CMP.W	R4,#0AH
	BCC	_14
; i2c_drv.c  406			return(OK);
	SYMB	LINE, 406
	MOV.W	R0,#0FFFFH
	BR	_15
_14:
; i2c_drv.c  407		else
; i2c_drv.c  408			return(EventIICTimeout);
	SYMB	LINE, 408
	MOV.W	R0,#0CE6H
; i2c_drv.c  409	}
	SYMB	LINE, 409
_15:
	POP.W	R4, R5
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "i", 18, 0, 77
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	EFUN
; i2c_drv.c  410	
; i2c_drv.c  411	
; i2c_drv.c  412	
; i2c_drv.c  413	
; i2c_drv.c  414	
; i2c_drv.c  415	
; i2c_drv.c  416	
; i2c_drv.c  417	
; i2c_drv.c  418	static int SDA_set(UC level, UC bus)
; i2c_drv.c  419	{
	ALIGN	1
	SYMB	LINE, 419
_SDA_set:
	SYMB	TYPE, 452, 'X', 12, #16, 30, 2, #3, #3
	SYMB	LFUN, "SDA_set", _SDA_set, #452, 0, 0, 0
	SYMB	LTIM, "level", 0, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	IDEN, "level", 0, #3, 0, 2061
	SYMB	IDEN, "bus", 1, #3, 0, 2061
; i2c_drv.c  420	   switch (bus)
; i2c_drv.c  421	   {
; i2c_drv.c  422	   default:
; i2c_drv.c  423	   case 0:
; i2c_drv.c  424	
; i2c_drv.c  425	#if (BusPTV==FPGA)
; i2c_drv.c  426	      if (level == High)
; i2c_drv.c  427	      {
; i2c_drv.c  428	         IICmir0   |=  SDA_mask;
; i2c_drv.c  429	         IICbit_0     = IICmir0;
; i2c_drv.c  430	      }
; i2c_drv.c  431	      else
; i2c_drv.c  432	      {
; i2c_drv.c  433	         IICmir0   &= ~SDA_mask;
; i2c_drv.c  434	         IICbit_0     = IICmir0;
; i2c_drv.c  435	      }
; i2c_drv.c  436	
; i2c_drv.c  437	#elif (BusPTV==Direct)
; i2c_drv.c  438	      if (level == High)
	SYMB	LINE, 438
	CMP.B	R0L,#01H
	BNE	_19
; i2c_drv.c  439	          SDApin = 1;
	SYMB	LINE, 439
	SETB	0431H.6
	BR	_20
_19:
; i2c_drv.c  440	      else
; i2c_drv.c  441	          SDApin = 0;
	SYMB	LINE, 441
	CLR	0431H.6
; i2c_drv.c  442	#else /* Error : local bus not defined */
; i2c_drv.c  443	#compiletime error : Local bus not defined
; i2c_drv.c  444	#endif
; i2c_drv.c  445	
; i2c_drv.c  446	
; i2c_drv.c  447	
; i2c_drv.c  448	   break;
; i2c_drv.c  449	
; i2c_drv.c  450	#ifdef IicBus6
; i2c_drv.c  451	   case 1:
; i2c_drv.c  452	      if (level == High)
; i2c_drv.c  453	      {
; i2c_drv.c  454	         IICmir1   |=  SDA_mask;
; i2c_drv.c  455	         IICbit_1     = IICmir1;
; i2c_drv.c  456	      }
; i2c_drv.c  457	      else
; i2c_drv.c  458	      {
; i2c_drv.c  459	         IICmir1   &= ~SDA_mask;
; i2c_drv.c  460	         IICbit_1     = IICmir1;
; i2c_drv.c  461	      }
; i2c_drv.c  462	   break;
; i2c_drv.c  463	#endif
; i2c_drv.c  464	#ifdef IicBus2
; i2c_drv.c  465	   case 2:
; i2c_drv.c  466	      if (level == High)
; i2c_drv.c  467	      {
; i2c_drv.c  468	         IICmir2   |=  SDA_mask;
; i2c_drv.c  469	         IICbit_2     = IICmir2;
; i2c_drv.c  470	      }
; i2c_drv.c  471	      else
; i2c_drv.c  472	      {
; i2c_drv.c  473	         IICmir2   &= ~SDA_mask;
; i2c_drv.c  474	         IICbit_2     = IICmir2;
; i2c_drv.c  475	      }
; i2c_drv.c  476	   break;
; i2c_drv.c  477	#endif
; i2c_drv.c  478	#ifdef IicBus3
; i2c_drv.c  479	   case 3:
; i2c_drv.c  480	      if (level == High)
; i2c_drv.c  481	      {
; i2c_drv.c  482	         IICmir3   |=  SDA_mask;
; i2c_drv.c  483	         IICbit_3     = IICmir3;
; i2c_drv.c  484	      }
; i2c_drv.c  485	      else
; i2c_drv.c  486	      {
; i2c_drv.c  487	         IICmir3   &= ~SDA_mask;
; i2c_drv.c  488	         IICbit_3     = IICmir3;
; i2c_drv.c  489	      }
; i2c_drv.c  490	   break;
; i2c_drv.c  491	#endif
; i2c_drv.c  492	#ifdef IicBus4
; i2c_drv.c  493	   case 4:
; i2c_drv.c  494	      if (level == High)
; i2c_drv.c  495	      {
; i2c_drv.c  496	         IICmir4   |=  SDA_mask;
; i2c_drv.c  497	         IICbit_4     = IICmir4;
; i2c_drv.c  498	      }
; i2c_drv.c  499	      else
; i2c_drv.c  500	      {
; i2c_drv.c  501	         IICmir4   &= ~SDA_mask;
; i2c_drv.c  502	         IICbit_4     = IICmir4;
; i2c_drv.c  503	      }
; i2c_drv.c  504	   break;
; i2c_drv.c  505	#endif
; i2c_drv.c  506	#ifdef IicBus5
; i2c_drv.c  507	   case 5:
; i2c_drv.c  508	      if (level == High)
; i2c_drv.c  509	      {
; i2c_drv.c  510	         IICmir5   |=  SDA_mask;
; i2c_drv.c  511	         IICbit_5     = IICmir5;
; i2c_drv.c  512	      }
; i2c_drv.c  513	      else
; i2c_drv.c  514	      {
; i2c_drv.c  515	         IICmir5   &= ~SDA_mask;
; i2c_drv.c  516	         IICbit_5     = IICmir5;
; i2c_drv.c  517	      }
; i2c_drv.c  518	   break;
; i2c_drv.c  519	#endif
; i2c_drv.c  520	#ifdef IicBus6
; i2c_drv.c  521	   case 6:
; i2c_drv.c  522	      if (level == High)
; i2c_drv.c  523	      {
; i2c_drv.c  524	         IICmir6   |=  SDA_mask;
; i2c_drv.c  525	         IICbit_6     = IICmir6;
; i2c_drv.c  526	      }
; i2c_drv.c  527	      else
; i2c_drv.c  528	      {
; i2c_drv.c  529	         IICmir6   &= ~SDA_mask;
; i2c_drv.c  530	         IICbit_6     = IICmir6;
; i2c_drv.c  531	      }
; i2c_drv.c  532	   break;
; i2c_drv.c  533	#endif
; i2c_drv.c  534	   }
	SYMB	LINE, 534
_20:
; i2c_drv.c  535	   return(OK);  /* No errors possible */
	SYMB	LINE, 535
	MOV.W	R0,#0FFFFH
	SYMB	LTIM, "level", 0, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  536	
; i2c_drv.c  537	}
	SYMB	LINE, 537
	RET
	SYMB	EFUN
; i2c_drv.c  538	
; i2c_drv.c  539	
; i2c_drv.c  540	static int Start_IIC(UC bus)
; i2c_drv.c  541	{
	ALIGN	1
	SYMB	LINE, 541
_Start_IIC:
	SYMB	TYPE, 453, 'X', 12, #16, 30, 1, #3
	SYMB	LFUN, "Start_IIC", _Start_IIC, #453, 0, 0, 16
	PUSH.W	R4
	SYMB	SOFF, 2
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
	MOV.B	R4L,R0L
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  542	   /* Test for bus ready ( both lines high ) */
; i2c_drv.c  543	   if ((SCL_get(bus) == High) && (SDA_get(bus) == High))
	SYMB	LINE, 543
	CALL	_SCL_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	CMP.W	R0,#01H
	BNE	_22
	MOV.B	R0L,R4L
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	CMP.W	R0,#01H
	BEQ	_23
; i2c_drv.c  544	   {
; i2c_drv.c  545	      SDA_set(Low,bus);
; i2c_drv.c  546	      Delay(5);
; i2c_drv.c  547	      SCL_set(Low,bus);
; i2c_drv.c  548	   }
	SYMB	LINE, 548
_22:
; i2c_drv.c  549	   else /* Bus not ready => Start condition not generated */
; i2c_drv.c  550	   {
; i2c_drv.c  551	      return(EventIICBusError);
	SYMB	LINE, 551
	MOV.W	R0,#0CE7H
	BR	_24
	SYMB	LINE, 545
_23:
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	MOV.B	R0H,R4L
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	SYMB	LINE, 547
	MOV.B	R0H,R4L
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  552	   }
; i2c_drv.c  553	   return(OK);
	SYMB	LINE, 553
	MOV.W	R0,#0FFFFH
; i2c_drv.c  554	}
	SYMB	LINE, 554
_24:
	POP.W	R4
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
; i2c_drv.c  555	
; i2c_drv.c  556	static int Stop_IIC(UC bus)
; i2c_drv.c  557	{
	ALIGN	1
	SYMB	LINE, 557
_Stop_IIC:
	SYMB	TYPE, 454, 'X', 12, #16, 30, 1, #3
	SYMB	LFUN, "Stop_IIC", _Stop_IIC, #454, 0, 0, 16
	PUSH.W	R4
	SYMB	SOFF, 2
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
; i2c_drv.c  558	   Delay(2);                      /* prepare by setting dataline low */
; i2c_drv.c  559	   SDA_set(Low,bus);
	SYMB	LINE, 559
	MOV.B	R4L,R0L
	MOV.B	R0H,R0L
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
	MOV.B	R0L,R4L
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  560	   Delay(3);
; i2c_drv.c  561	
; i2c_drv.c  562	   SCL_set_wait(bus);
	SYMB	LINE, 562
	CALL	_SCL_set_wait
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 16, 0, 2253
; i2c_drv.c  563	
; i2c_drv.c  564	   Delay(5);                     /* Setup time to stopcondition */
; i2c_drv.c  565	
; i2c_drv.c  566	   SDA_set(High,bus);
	SYMB	LINE, 566
	MOV.B	R0L,#01H
	MOV.B	R0H,R4L
	CALL	_SDA_set
	SYMB	LTIM, "bus", 16, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  567	   return(OK);
	SYMB	LINE, 567
	MOV.W	R0,#0FFFFH
; i2c_drv.c  568	}
	SYMB	LINE, 568
	POP.W	R4
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
; i2c_drv.c  569	
; i2c_drv.c  570	static int TxByte(UC X,UC bus) {
	ALIGN	1
	SYMB	LINE, 570
_TxByte:
	SYMB	TYPE, 455, 'X', 12, #16, 30, 2, #3, #3
	SYMB	LFUN, "TxByte", _TxByte, #455, 0, 0, 112
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R5L,R0H
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	MOV.B	R6L,R0L
	SYMB	IDEN, "X", -1, #3, 130, 2053
	SYMB	LTIM, "X", -1, 0, 2117
	SYMB	IDEN, "bus", 20, #3, 0, 2061
	SYMB	IDEN, "locvar", -1, #16, 130, 5
	SYMB	LTIM, "locvar", -1, 0, 69
; i2c_drv.c  571	
; i2c_drv.c  572	   int locvar;
; i2c_drv.c  573	   for (locvar = 8;locvar != 0; locvar-- )
	SYMB	LINE, 573
	MOV.W	R4,#08H
	SYMB	LTIM, "locvar", 18, 0, 205
_33:
; i2c_drv.c  574	   {
; i2c_drv.c  575	      SCL_set(Low,bus);            /* Clock line low */
	SYMB	LINE, 575
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
; i2c_drv.c  576	      Delay(2);                   /* Small delay before changing data */
; i2c_drv.c  577	
; i2c_drv.c  578	      if ((X & Bit7) == 0 )       /* Output databit */
	SYMB	LINE, 578
	MOV.B	R5H,R6L
	AND.B	R5H,#080H
	BNE	_34
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  579	         SDA_set(Low,bus);
	SYMB	LINE, 579
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	BR	_35
_34:
; i2c_drv.c  580	      else
; i2c_drv.c  581	         SDA_set(High,bus);
	SYMB	LINE, 581
	MOV.B	R0L,#01H
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
_35:
; i2c_drv.c  582	
; i2c_drv.c  583	      X += X;                     /* Get next databit in position   */
	SYMB	LINE, 583
	ADD.B	R6L,R6L
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  584	                                  /* Rotate left by adding to itself*/
; i2c_drv.c  585	
; i2c_drv.c  586	      Delay(3);                   /* Data setup time to clock high */
; i2c_drv.c  587	
; i2c_drv.c  588	      SCL_set_wait(bus);
	SYMB	LINE, 588
	CALL	_SCL_set_wait
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	SYMB	LINE, 573
	ADDS.W	R4,#0FH
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	LTIM, "locvar", 18, 0, 205
	BNE	_33
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  589	
; i2c_drv.c  590	      Delay(5);                   /* 5 usec clock high time */
; i2c_drv.c  591	
; i2c_drv.c  592	   }
; i2c_drv.c  593	                        /* 8 bits are now out , get ready for acknowledge */
; i2c_drv.c  594	
; i2c_drv.c  595	   SCL_set(Low,bus);            /* Clock line low */
	SYMB	LINE, 595
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
; i2c_drv.c  596	   Delay(2);                   /* Small delay before changing data */
; i2c_drv.c  597	   SDA_set(High,bus);           /* Data line high : ready for input */
	SYMB	LINE, 597
	MOV.B	R0L,#01H
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  598	   Delay(3);                   /* Data setup time to clock high */
; i2c_drv.c  599	
; i2c_drv.c  600	   SCL_set_wait(bus);
	SYMB	LINE, 600
	CALL	_SCL_set_wait
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  601	
; i2c_drv.c  602	   if (SDA_get(bus) == Low)
	SYMB	LINE, 602
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	OR.W	R0,R0
	BNE	_36
; i2c_drv.c  603	   {                          /* Acknowledge OK */
; i2c_drv.c  604	      locvar = OK;
	SYMB	LINE, 604
	MOV.W	R4,#0FFFFH
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	LTIM, "locvar", 18, 0, 205
; i2c_drv.c  605	   }
	SYMB	LINE, 605
	BR	_37
_36:
; i2c_drv.c  606	   else
; i2c_drv.c  607	   {                          /* Acknowledge FAIL */
; i2c_drv.c  608	      locvar = FAIL;
	SYMB	LINE, 608
	MOV.W	R4,#00H
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	LTIM, "locvar", 18, 0, 205
; i2c_drv.c  609	   }
	SYMB	LINE, 609
_37:
; i2c_drv.c  610	
; i2c_drv.c  611	   Delay(5);                   /* 5 usec clock high time */
; i2c_drv.c  612	   SCL_set(Low,bus);            /* Clock line low */
	SYMB	LINE, 612
	MOV.B	R0H,R5L
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  613	
; i2c_drv.c  614	   return(locvar);
	SYMB	LINE, 614
	MOV.W	R0,R4
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	LTIM, "locvar", 2, 0, 205
; i2c_drv.c  615	
; i2c_drv.c  616	}
	SYMB	LINE, 616
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "locvar", 2, 0, 77
	SYMB	EFUN
; i2c_drv.c  617	
; i2c_drv.c  618	static UC RxByte(int Last,UC bus) {
	ALIGN	1
	SYMB	LINE, 618
_RxByte:
	SYMB	TYPE, 456, 'X', 12, #3, 30, 2, #16, #3
	SYMB	LFUN, "RxByte", _RxByte, #456, 0, 0, 112
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	SYMB	LTIM, "Last", 2, 0, 2253
	SYMB	LTIM, "bus", 4, 0, 2253
	MOV.B	R5L,R1L
	SYMB	LTIM, "bus", 4, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	MOV.W	R6,R0
	SYMB	LTIM, "Last", 2, 0, 2125
	SYMB	LTIM, "Last", 26, 0, 2253
	SYMB	IDEN, "Last", 26, #16, 0, 2061
	SYMB	IDEN, "bus", 20, #3, 0, 2061
	SYMB	IDEN, "locvar", -1, #16, 130, 5
	SYMB	LTIM, "locvar", -1, 0, 69
	SYMB	IDEN, "datarx", -1, #3, 130, 5
	SYMB	LTIM, "datarx", -1, 0, 69
; i2c_drv.c  619	
; i2c_drv.c  620	   int locvar;
; i2c_drv.c  621	   UC  datarx = 0;   /* Initialise datashifter */
	SYMB	LINE, 621
	MOV.B	R5H,#00H
	SYMB	LTIM, "datarx", 21, 0, 205
; i2c_drv.c  622	
; i2c_drv.c  623	   for (locvar = 8;locvar != 0; locvar-- )
	SYMB	LINE, 623
	MOV.W	R4,#08H
	SYMB	LTIM, "locvar", 18, 0, 205
_42:
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  624	   {
; i2c_drv.c  625	      Delay(5);
; i2c_drv.c  626	
; i2c_drv.c  627	      SCL_set_wait(bus);
	SYMB	LINE, 627
	CALL	_SCL_set_wait
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
; i2c_drv.c  628	
; i2c_drv.c  629	      datarx += datarx + SDA_get(bus);    /* Shift and input databit  */
	SYMB	LINE, 629
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	ADD.B	R0L,R5H
	ADD.B	R5H,R0L
	SYMB	LTIM, "datarx", 21, 0, 77
	SYMB	LTIM, "datarx", 21, 0, 205
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  630	      Delay(5);                      /* Clock high >= 5 microseconds */
; i2c_drv.c  631	
; i2c_drv.c  632	      SCL_set(Low,bus);            /* Clock line low */
	SYMB	LINE, 632
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	SYMB	LINE, 623
	ADDS.W	R4,#0FH
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	LTIM, "locvar", 18, 0, 205
	BNE	_42
; i2c_drv.c  633	   }
; i2c_drv.c  634	   Delay(2);
; i2c_drv.c  635	   /* Acknowledge bit has to be set low if NOT last byte */
; i2c_drv.c  636	   /* and high if last byte */
; i2c_drv.c  637	   if(Last == TRUE)
	SYMB	LINE, 637
	CMP.W	R6,#0FFFFH
	BNE	_43
; i2c_drv.c  638	      SDA_set(High,bus);
	SYMB	LINE, 638
	MOV.B	R0L,#01H
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	BR	_44
_43:
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  639	   else
; i2c_drv.c  640	      SDA_set(Low,bus);
	SYMB	LINE, 640
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
_44:
	MOV.B	R0L,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  641	
; i2c_drv.c  642	   Delay(3);
; i2c_drv.c  643	
; i2c_drv.c  644	   SCL_set_wait(bus);
	SYMB	LINE, 644
	CALL	_SCL_set_wait
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
	MOV.B	R0H,R5L
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
; i2c_drv.c  645	
; i2c_drv.c  646	   Delay(5);                   /* 5 usec clock high time */
; i2c_drv.c  647	   SCL_set(Low,bus);            /* Clock line low */
	SYMB	LINE, 647
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 20, 0, 2253
; i2c_drv.c  648	
; i2c_drv.c  649	   Delay(2);                   /* Allways leave dataline high */
; i2c_drv.c  650	   SDA_set(High,bus);
	SYMB	LINE, 650
	MOV.B	R0L,#01H
	MOV.B	R0H,R5L
	CALL	_SDA_set
	SYMB	LTIM, "bus", 20, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	SYMB	LTIM, "bus", 1, 0, 2125
; i2c_drv.c  651	
; i2c_drv.c  652	   return(datarx);             /* Return the received byte */
	SYMB	LINE, 652
	MOV.B	R0L,R5H
	SYMB	LTIM, "datarx", 21, 0, 77
	SYMB	LTIM, "datarx", 0, 0, 205
; i2c_drv.c  653	}
	SYMB	LINE, 653
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "datarx", 0, 0, 77
	SYMB	LTIM, "Last", 26, 0, 2125
	SYMB	LTIM, "locvar", 18, 0, 77
	SYMB	EFUN
; i2c_drv.c  654	
; i2c_drv.c  655	/**********************/
; i2c_drv.c  656	/* External functions */
; i2c_drv.c  657	/* Bus initialisation */
; i2c_drv.c  658	/* Required before access to other functions */
; i2c_drv.c  659	// Arrays need to be sized after the highest number active
; i2c_drv.c  660	
; i2c_drv.c  661	#define HighestBus 0
; i2c_drv.c  662	#define b0i FALSE
; i2c_drv.c  663	
; i2c_drv.c  664	#ifdef IicBus1
; i2c_drv.c  665	#define b1i FALSE
; i2c_drv.c  666	#undef  HighestBus
; i2c_drv.c  667	#define HighestBus 1
; i2c_drv.c  668	#else
; i2c_drv.c  669	#define b1i EventIICNoBus
; i2c_drv.c  670	#endif
; i2c_drv.c  671	
; i2c_drv.c  672	#ifdef IicBus2
; i2c_drv.c  673	#define b2i FALSE
; i2c_drv.c  674	#undef  HighestBus
; i2c_drv.c  675	#define HighestBus 2
; i2c_drv.c  676	#else
; i2c_drv.c  677	#define b2i EventIICNoBus
; i2c_drv.c  678	#endif
; i2c_drv.c  679	
; i2c_drv.c  680	#ifdef IicBus3
; i2c_drv.c  681	#define b3i FALSE
; i2c_drv.c  682	#undef  HighestBus
; i2c_drv.c  683	#define HighestBus 3
; i2c_drv.c  684	#else
; i2c_drv.c  685	#define b3i EventIICNoBus
; i2c_drv.c  686	#endif
; i2c_drv.c  687	
; i2c_drv.c  688	#ifdef IicBus4
; i2c_drv.c  689	#define b4i FALSE
; i2c_drv.c  690	#undef  HighestBus
; i2c_drv.c  691	#define HighestBus 4
; i2c_drv.c  692	#else
; i2c_drv.c  693	#define b4i EventIICNoBus
; i2c_drv.c  694	#endif
; i2c_drv.c  695	
; i2c_drv.c  696	#ifdef IicBus5
; i2c_drv.c  697	#define b5i FALSE
; i2c_drv.c  698	#undef  HighestBus
; i2c_drv.c  699	#define HighestBus 5
; i2c_drv.c  700	#else
; i2c_drv.c  701	#define b5i EventIICNoBus
; i2c_drv.c  702	#endif
; i2c_drv.c  703	
; i2c_drv.c  704	#ifdef IicBus6
; i2c_drv.c  705	#define b6i FALSE
; i2c_drv.c  706	#undef  HighestBus
; i2c_drv.c  707	#define HighestBus 6
; i2c_drv.c  708	#else
; i2c_drv.c  709	#define b6i EventIICNoBus
; i2c_drv.c  710	#endif
; i2c_drv.c  711	
; i2c_drv.c  712	
; i2c_drv.c  713	static int BusInitialised[7] = 
I2C_DRV_INI_FA	SEGMENT	HDATA INSEGMENT INIT
	RSEG	I2C_DRV_INI_FA
	SYMB	TYPE, 457, 'Z', #16, 6
	SYMB	IDEN, "BusInitialised", _BusInitialised, #457, 130, 4
	ALIGN	1
_BusInitialised:
; i2c_drv.c  714	{b0i,b1i,b2i,b3i,b4i,b5i,b6i};
; i2c_drv.c  715	
; i2c_drv.c  716	static   TResource *Res[HighestBus+1];
; i2c_drv.c  717	
; i2c_drv.c  718	int InitBus(UC bus)
; i2c_drv.c  719	{
	DW	00000H,00CEDH,00CEDH,00CEDH,00CEDH,00CEDH,00CEDH
	RSEG	I2C_DRV_PR
	ALIGN	1
	SYMB	LINE, 719
	PUBLIC	_InitBus
_InitBus:
	SYMB	TYPE, 459, 'X', 12, #16, 30, 1, #3
	SYMB	GFUN, "InitBus", _InitBus, #459, 0, 0, 112
	SYMB	ALAB, _InitBus, #459
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	ADDS.W	R7,#0AH
	SYMB	SOFF, 12
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	IDEN, "bus", 0, #3, 0, 2061
	SYMB	IDEN, "i", -1, #3, 130, 5
	SYMB	LTIM, "i", -1, 0, 69
; i2c_drv.c  720		UC i;
; i2c_drv.c  721	//	char report[16];
; i2c_drv.c  722	
; i2c_drv.c  723	
; i2c_drv.c  724	// Check for valid bus number :
; i2c_drv.c  725	   switch (bus)
	SYMB	LINE, 725
	CMP.B	R0L,#00H
	BEQ	_62
	BR	_61
; i2c_drv.c  726	   {
; i2c_drv.c  727	   case 0: // Bus 0 allways defined
; i2c_drv.c  728	   break;
; i2c_drv.c  729	#ifdef IicBus1
; i2c_drv.c  730	   case 1:
; i2c_drv.c  731	   break;
; i2c_drv.c  732	#endif
; i2c_drv.c  733	#ifdef IicBus2
; i2c_drv.c  734	   case 2:
; i2c_drv.c  735	   break;
; i2c_drv.c  736	#endif
; i2c_drv.c  737	#ifdef IicBus3
; i2c_drv.c  738	   case 3:
; i2c_drv.c  739	   break;
; i2c_drv.c  740	#endif
; i2c_drv.c  741	#ifdef IicBus4
; i2c_drv.c  742	   case 4:
; i2c_drv.c  743	   break;
; i2c_drv.c  744	#endif
; i2c_drv.c  745	#ifdef IicBus5
; i2c_drv.c  746	   case 5:
; i2c_drv.c  747	   break;
; i2c_drv.c  748	#endif
; i2c_drv.c  749	#ifdef IicBus6
; i2c_drv.c  750	   case 6:
; i2c_drv.c  751	   break;
; i2c_drv.c  752	#endif
; i2c_drv.c  753	   default:   // Undefined busses will end here
	SYMB	LINE, 753
_61:
; i2c_drv.c  754	      return(EventIICNoBus+10*bus);
	SYMB	LINE, 754
	MULU.B	R0L,#0AH
	SYMB	LTIM, "bus", 0, 0, 2125
	ADD.W	R0,#0CEDH
	BR	_74
; i2c_drv.c  755	//   break;
; i2c_drv.c  756	   }
	SYMB	LINE, 756
_62:
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  757	
; i2c_drv.c  758	
; i2c_drv.c  759	//Allocate resources for bus locking only first time 
; i2c_drv.c  760	// Try ignoring initial value :
; i2c_drv.c  761	   if (BusInitialised[bus] == FALSE)
	SYMB	LINE, 761
	MOV.B	[R7+4],R0L
	MOV.B	R6L,R0L
	MOVS.B	R6H,#00H
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.W	R0,R6
	ASL.W	R0,#01H
	MOV.W	R4,R0
	MOVS.W	R5,#00H
	MOV.W	R1,#SEG( _BusInitialised )
	MOV.W	R0,#SOF( _BusInitialised )
	ADD.W	R0,R4
	MOV.W	[R7+2],R1
	MOV.W	[R7],R0
	MOV.B	ES,#SEG( _BusInitialised )
	MOV.W	R0,[R4+SOF( _BusInitialised )]
	BNE	_65
; i2c_drv.c  762	//   if (BusInitialised[bus] !=EventNoMoreResources)
; i2c_drv.c  763	   {
; i2c_drv.c  764	      Res[bus] = newTResource(0);
	SYMB	LINE, 764
	MOV.W	R1,#00H
	MOV.W	R0,#00H
	CALL	_newTResource
	ASL.W	R6,#02H
	MOV.W	R2,R6
	MOVS.W	R3,#00H
	MOV.B	ES,#SEG( _Res )
	MOV.W	[R2+SOF( _Res )],R0
	MOV.W	[R2+SOF( _Res+2 )],R1
; i2c_drv.c  765	      if (Res[bus]== NULL)
	SYMB	LINE, 765
	OR.W	R1,R0
	BEQ	_63
; i2c_drv.c  766	      {
; i2c_drv.c  767	         /* Error : No more resources , bus cannot initialise */
; i2c_drv.c  768	//Rev1_1 removed eventlogging from lowest level
; i2c_drv.c  769	//         LogEvent(EventNoMoreResources,NULL);
; i2c_drv.c  770	         BusInitialised[bus] = EventNoMoreResources;
; i2c_drv.c  771	      }
; i2c_drv.c  772	      else
; i2c_drv.c  773	      {
; i2c_drv.c  774	         BusInitialised[bus] = OK;
	SYMB	LINE, 774
	MOV.B	ES,#SEG( _BusInitialised )
	MOV.W	[R4+SOF( _BusInitialised )],#0FFFFH
; i2c_drv.c  775	      }
; i2c_drv.c  776	
; i2c_drv.c  777	   }
	SYMB	LINE, 777
	BR	_65
	SYMB	LINE, 770
_63:
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	[R0],#017DFH
; i2c_drv.c  778	   else
; i2c_drv.c  779	   {  /* Repeated initialising */
; i2c_drv.c  780	//Rev1_1 removed eventlogging from lowest level
; i2c_drv.c  781	//      LogEvent(EventRepeatedInit,NULL);
; i2c_drv.c  782	   }
	SYMB	LINE, 782
_65:
; i2c_drv.c  783	
; i2c_drv.c  784	   if (BusInitialised[bus]==OK)
	SYMB	LINE, 784
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	CMP.W	[R0],#0FFFFH
	BNE	_73
; i2c_drv.c  785	   {
; i2c_drv.c  786	   	 /* Release bus by setting SDA high and toggling SCL */
; i2c_drv.c  787	   	SDA_set(High,bus);
	SYMB	LINE, 787
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
; i2c_drv.c  788	   	Delay(5);
; i2c_drv.c  789	
; i2c_drv.c  790	   	for( i = 9 ; i != 0 ; i--  )
	SYMB	LINE, 790
	MOV.B	R4L,#09H
	SYMB	LTIM, "i", 16, 0, 205
_66:
; i2c_drv.c  791	   	{
; i2c_drv.c  792	   		 SCL_set(Low,bus);
	SYMB	LINE, 792
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
; i2c_drv.c  793	   		 Delay(5);
; i2c_drv.c  794	   		 SCL_set(High,bus);
	SYMB	LINE, 794
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	SYMB	LINE, 790
	ADDS.B	R4L,#0FH
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
	BNE	_66
	MOV.B	R0L,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  795	   		 Delay(5);
; i2c_drv.c  796	   	}
; i2c_drv.c  797	
; i2c_drv.c  798	   /* Test for actual high level on SCL then SDA */
; i2c_drv.c  799	   	 if ( SCL_get(bus) == Low ) {
	SYMB	LINE, 799
	CALL	_SCL_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	OR.W	R0,R0
	BNE	_67
; i2c_drv.c  800	   		  /* SCL Short to gnd */
; i2c_drv.c  801	   		  i |= 0x01;
	SYMB	LINE, 801
	OR.B	R4L,#01H
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
; i2c_drv.c  802	   	 }
	SYMB	LINE, 802
_67:
	MOV.B	R0L,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  803	   	 if ( SDA_get(bus) == Low  ) {
	SYMB	LINE, 803
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	OR.W	R0,R0
	BNE	_68
; i2c_drv.c  804	   		  /* SDA Short to gnd */
; i2c_drv.c  805	   		  i |= 0x02;
	SYMB	LINE, 805
	OR.B	R4L,#02H
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
; i2c_drv.c  806	   	 }
	SYMB	LINE, 806
_68:
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  807	
; i2c_drv.c  808	   /* Set SCL low and test for actual low level on SCL */
; i2c_drv.c  809	   	 SCL_set(Low,bus);
	SYMB	LINE, 809
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0L,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  810	   	 if ( SCL_get(bus) == High ) {
	SYMB	LINE, 810
	CALL	_SCL_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	CMP.W	R0,#01H
	BNE	_69
; i2c_drv.c  811	   		  /* SCL Short to vcc */
; i2c_drv.c  812	   		  i |= 0x04;
	SYMB	LINE, 812
	OR.B	R4L,#04H
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
; i2c_drv.c  813	   	 }
	SYMB	LINE, 813
_69:
	MOV.B	R0L,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  814	   	 /* Test for SDA low after setting SCL low (Short-circ. SDA-SCL) */
; i2c_drv.c  815	   	 if ( SDA_get(bus) == Low  ) {
	SYMB	LINE, 815
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	OR.W	R0,R0
	BNE	_70
; i2c_drv.c  816	   		  /* SDA Short to SCL */
; i2c_drv.c  817	   		  i |= 0x10;
	SYMB	LINE, 817
	OR.B	R4L,#010H
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
; i2c_drv.c  818	   	 }
	SYMB	LINE, 818
_70:
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  819	   	 /* Set SDA low and test for actual low level on SDA */
; i2c_drv.c  820	
; i2c_drv.c  821	   	 SDA_set(Low,bus);
	SYMB	LINE, 821
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
; i2c_drv.c  822	   	 SCL_set(High,bus);
	SYMB	LINE, 822
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0L,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  823	       if ( SDA_get(bus) == High ) {
	SYMB	LINE, 823
	CALL	_SDA_get
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	CMP.W	R0,#01H
	BNE	_71
; i2c_drv.c  824	           /* SDA Short to vcc */
; i2c_drv.c  825	           i |= 0x08;
	SYMB	LINE, 825
	OR.B	R4L,#08H
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	LTIM, "i", 16, 0, 205
; i2c_drv.c  826	   	 }
	SYMB	LINE, 826
_71:
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
; i2c_drv.c  827	
; i2c_drv.c  828	   	 /* Release bus by setting SDA high and toggling SCL */
; i2c_drv.c  829	   	SDA_set(High,bus);
	SYMB	LINE, 829
	CALL	_SDA_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#00H
; i2c_drv.c  830	      Delay(5);
; i2c_drv.c  831	
; i2c_drv.c  832	      SCL_set(Low,bus);
	SYMB	LINE, 832
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,#01H
; i2c_drv.c  833	      Delay(5);
; i2c_drv.c  834	   	SCL_set(High,bus);
	SYMB	LINE, 834
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
; i2c_drv.c  835	      Delay(5);
; i2c_drv.c  836	
; i2c_drv.c  837	      SCL_set(Low,bus);
	SYMB	LINE, 837
	MOV.B	R0L,#00H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
	MOV.B	R0H,[R7+4]
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 1, 0, 2253
; i2c_drv.c  838	      Delay(5);
; i2c_drv.c  839	      SCL_set(High,bus);
	SYMB	LINE, 839
	MOV.B	R0L,#01H
	CALL	_SCL_set
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", -8, 130, 2245
; i2c_drv.c  840	      Delay(5);
; i2c_drv.c  841	
; i2c_drv.c  842	   	Stop_IIC(bus);
	SYMB	LINE, 842
	MOV.B	R0L,[R7+4]
	CALL	_Stop_IIC
	SYMB	LTIM, "bus", -8, 130, 2117
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	LTIM, "bus", 0, 0, 2125
; i2c_drv.c  843	      
; i2c_drv.c  844	      if(i != 0)
	SYMB	LINE, 844
	OR.B	R4L,R4L
	BEQ	_73
; i2c_drv.c  845	      {
; i2c_drv.c  846	//Rev1_1 removed eventlogging from lowest level
; i2c_drv.c  847	//         sprintf(report,"%u,%u",bus,i);
; i2c_drv.c  848	//         LogEvent(EventIICBusError,report);
; i2c_drv.c  849	         BusInitialised[bus] = EventIICBusError;
	SYMB	LINE, 849
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	[R0],#0CE7H
; i2c_drv.c  850	      }
; i2c_drv.c  851	      
; i2c_drv.c  852	   }
	SYMB	LINE, 852
_73:
; i2c_drv.c  853		return(BusInitialised[bus]);
	SYMB	LINE, 853
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	R0,[R0]
; i2c_drv.c  854	}
	SYMB	LINE, 854
_74:
	ADDS.W	R7,#06H
	SYMB	SOFF, 6
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "i", 16, 0, 77
	SYMB	EFUN
; i2c_drv.c  855	
; i2c_drv.c  856	
; i2c_drv.c  857	
; i2c_drv.c  858	
; i2c_drv.c  859	
; i2c_drv.c  860	int InitBusses(void)
; i2c_drv.c  861	{
	ALIGN	1
	SYMB	LINE, 861
	PUBLIC	_InitBusses
_InitBusses:
	SYMB	TYPE, 460, 'X', 12, #16, 30, 0
	SYMB	GFUN, "InitBusses", _InitBusses, #460, 0, 0, 16
	SYMB	ALAB, _InitBusses, #460
	PUSH.W	R4
	SYMB	SOFF, 2
	SYMB	IDEN, "Result", -1, #16, 130, 5
	SYMB	LTIM, "Result", -1, 0, 69
; i2c_drv.c  862	        
; i2c_drv.c  863	   int Result=OK;
	SYMB	LINE, 863
	MOV.W	R4,#0FFFFH
	SYMB	LTIM, "Result", 18, 0, 205
; i2c_drv.c  864	
; i2c_drv.c  865	   if (InitBus(IIC_PTV) != OK)
	SYMB	LINE, 865
	MOV.B	R0L,#00H
	CALL	_InitBus
	CMP.W	R0,#0FFFFH
	BEQ	_78
; i2c_drv.c  866	      Result = FAIL;
	SYMB	LINE, 866
	MOV.W	R4,#00H
	SYMB	LTIM, "Result", 18, 0, 77
	SYMB	LTIM, "Result", 18, 0, 205
_78:
; i2c_drv.c  867	
; i2c_drv.c  868	// Instrument iic busses
; i2c_drv.c  869	
; i2c_drv.c  870	#ifdef IicBus1
; i2c_drv.c  871	   if (InitBus(IIC_1)!= OK)
; i2c_drv.c  872	      Result = FAIL;
; i2c_drv.c  873	#endif
; i2c_drv.c  874	#ifdef IicBus2
; i2c_drv.c  875	   if (InitBus(IIC_2)!= OK)
; i2c_drv.c  876	      Result = FAIL;
; i2c_drv.c  877	#endif
; i2c_drv.c  878	#ifdef IicBus3
; i2c_drv.c  879	   if (InitBus(IIC_3)!= OK)
; i2c_drv.c  880	      Result = FAIL;
; i2c_drv.c  881	#endif
; i2c_drv.c  882	#ifdef IicBus4
; i2c_drv.c  883	   if (InitBus(IIC_4)!= OK)
; i2c_drv.c  884	      Result = FAIL;
; i2c_drv.c  885	#endif
; i2c_drv.c  886	#ifdef IicBus5
; i2c_drv.c  887	   if (InitBus(IIC_5)!= OK)
; i2c_drv.c  888	      Result = FAIL;
; i2c_drv.c  889	#endif
; i2c_drv.c  890	#ifdef IicBus6
; i2c_drv.c  891	   if (InitBus(IIC_6)!= OK)
; i2c_drv.c  892	      Result = FAIL;
; i2c_drv.c  893	#endif
; i2c_drv.c  894	
; i2c_drv.c  895	   return(Result);
	SYMB	LINE, 895
	MOV.W	R0,R4
	SYMB	LTIM, "Result", 18, 0, 77
	SYMB	LTIM, "Result", 2, 0, 205
; i2c_drv.c  896	}   
	SYMB	LINE, 896
	POP.W	R4
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "Result", 2, 0, 77
	SYMB	EFUN
; i2c_drv.c  897	
; i2c_drv.c  898	
; i2c_drv.c  899	
; i2c_drv.c  900	
; i2c_drv.c  901	
; i2c_drv.c  902	
; i2c_drv.c  903	
; i2c_drv.c  904	
; i2c_drv.c  905	
; i2c_drv.c  906	int TransmitIIC(UC Address ,UC num ,UC *data ,UC bus )
; i2c_drv.c  907	{
	ALIGN	1
	SYMB	LINE, 907
	PUBLIC	_TransmitIIC
_TransmitIIC:
	SYMB	TYPE, 462, 'n', #3, 130
	SYMB	TYPE, 463, 'P', #462
	SYMB	TYPE, 461, 'X', 12, #16, 30, 4, #3, #3, #463, #3
	SYMB	GFUN, "TransmitIIC", _TransmitIIC, #461, 0, 0, 112
	SYMB	ALAB, _TransmitIIC, #461
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	SUB.W	R7,#0CH
	SYMB	SOFF, 18
	SYMB	LTIM, "Address", 0, 0, 2253
	SYMB	LTIM, "num", 1, 0, 2253
	SYMB	LTIM, "data", 11, 0, 2253
	SYMB	LTIM, "bus", 4, 0, 2253
	MOV.W	[R7+8],R3
	MOV.W	[R7+6],R2
	SYMB	LTIM, "data", 11, 0, 2125
	SYMB	LTIM, "data", -12, 130, 2245
	MOV.B	[R7+10],R0H
	SYMB	LTIM, "num", 1, 0, 2125
	SYMB	LTIM, "num", -8, 130, 2245
	MOV.B	R6L,R0L
	SYMB	LTIM, "Address", 0, 0, 2125
	SYMB	LTIM, "Address", 24, 0, 2253
	SYMB	IDEN, "Address", 24, #3, 0, 2061
	SYMB	IDEN, "num", -7, #3, 130, 2053
	SYMB	IDEN, "data", -7, #463, 130, 2053
	SYMB	IDEN, "bus", 4, #3, 0, 2061
	SYMB	IDEN, "i", -1, #3, 130, 5
	SYMB	LTIM, "i", -1, 0, 69
	SYMB	IDEN, "status", -1, #16, 130, 5
	SYMB	LTIM, "status", -1, 0, 69
	SYMB	IDEN, "__#STR0005S", -1, #463, 130, 5
	SYMB	LTIM, "__#STR0005S", -1, 0, 69
; i2c_drv.c  908	UC i;
; i2c_drv.c  909	int status=EventNotInitialised;
	SYMB	LINE, 909
	MOV.W	[R7+4],#017D5H
	SYMB	LTIM, "status", -14, 130, 197
; i2c_drv.c  910		if (BusInitialised[bus] == OK) 
	SYMB	LINE, 910
	MOV.B	R6H,R1L
	MOV.B	R0L,R6H
	MOVS.B	R0H,#00H
	SYMB	LTIM, "bus", 4, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.W	R1,R0
	ASL.W	R1,#01H
	MOV.W	R2,R1
	MOVS.W	R3,#00H
	MOV.B	ES,#SEG( _BusInitialised )
	MOV.W	R1,[R2+SOF( _BusInitialised )]
	CMP.W	R1,#0FFFFH
	BNE	_86
; i2c_drv.c  911		{
; i2c_drv.c  912	      Res[bus]->Lock(Res[bus]);
	SYMB	LINE, 912
	ASL.W	R0,#02H
	MOV.W	R2,R0
	MOVS.W	R3,#00H
	MOV.W	R1,#SEG( _Res )
	MOV.W	R0,#SOF( _Res )
	ADD.W	R0,R2
	MOV.W	[R7+2],R1
	MOV.W	[R7],R0
	MOV.B	ES,#SEG( _Res )
	MOV.W	R0,[R2+SOF( _Res )]
	MOV.W	R1,[R2+SOF( _Res+2 )]
	MOV.B	ES,R1L
	MOV.W	R4,[R0+10]
	MOV.W	R5,[R0+12]
	FCALL	__ICALL
	MOV.B	R0L,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  913	    	if( status = Start_IIC(bus) )
	SYMB	LINE, 913
	CALL	_Start_IIC
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	SYMB	LTIM, "status", -14, 130, 69
	SYMB	LTIM, "status", 2, 0, 205
	MOV.W	[R7+4],R0
	OR.W	R0,R0
	SYMB	LTIM, "status", 2, 0, 77
	SYMB	LTIM, "status", -14, 130, 197
	BEQ	_85
; i2c_drv.c  914	    	{
; i2c_drv.c  915	       	status = TxByte(Address & ~0x01,bus);
	SYMB	LINE, 915
	AND.B	R6L,#0FEH
	SYMB	LTIM, "Address", 24, 0, 2125
	MOV.B	R0H,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,R6L
	CALL	_TxByte
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.W	[R7+4],R0
	SYMB	LTIM, "status", -14, 130, 69
	SYMB	LTIM, "status", -14, 130, 197
; i2c_drv.c  916	
; i2c_drv.c  917	         if (status == EventIICNoAck )
	SYMB	LINE, 917
	CMP.W	R0,#0CE5H
	BNE	_80
; i2c_drv.c  918	            status = EventIICNoAdrAck;
	SYMB	LINE, 918
	MOV.W	[R7+4],#0CE8H
	SYMB	LTIM, "status", -14, 130, 69
	SYMB	LTIM, "status", -14, 130, 197
_80:
; i2c_drv.c  919	     
; i2c_drv.c  920	       	for (i=0;i<num;i++)
	SYMB	LINE, 920
	MOV.B	R6L,#00H
	SYMB	LTIM, "i", 24, 0, 205
	MOV.W	R5,[R7+8]
	MOV.W	R4,[R7+6]
	SYMB	LTIM, "data", -12, 130, 2117
	SYMB	LTIM, "data", 19, 0, 2253
	SYMB	LTIM, "data", 19, 0, 2125
	SYMB	LTIM, "__#STR0005S", 19, 0, 205
	CMP.B	[R7+10],#00H
	BL	_84
_81:
; i2c_drv.c  921	       	{
; i2c_drv.c  922	         if (status == OK)
	SYMB	LINE, 922
	CMP.W	[R7+4],#0FFFFH
	BNE	_82
; i2c_drv.c  923	         	 status = TxByte(data[i],bus);
	SYMB	LINE, 923
	MOV.B	ES,R5L
	MOV.B	R0L,[R4]
	MOV.B	R0H,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	CALL	_TxByte
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.W	[R7+4],R0
	SYMB	LTIM, "status", -14, 130, 69
	SYMB	LTIM, "status", -14, 130, 197
	BR	_83
_82:
; i2c_drv.c  924	         else
; i2c_drv.c  925	             TxByte(data[i],bus);
	SYMB	LINE, 925
	MOV.B	ES,R5L
	MOV.B	R0L,[R4]
	MOV.B	R0H,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	CALL	_TxByte
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
_83:
	SYMB	LINE, 920
	ADD.W	R4,#01H
	SYMB	LTIM, "__#STR0005S", 19, 0, 77
	SYMB	LTIM, "__#STR0005S", 19, 0, 205
	ADDS.B	R6L,#01H
	SYMB	LTIM, "i", 24, 0, 77
	SYMB	LTIM, "i", 24, 0, 205
	CMP.B	R6L,[R7+10]
	BCS	_81
; i2c_drv.c  926	       	}
	SYMB	LINE, 926
_84:
; i2c_drv.c  927	       	Stop_IIC(bus);
	SYMB	LINE, 927
	MOV.B	R0L,R6H
	CALL	_Stop_IIC
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	LTIM, "bus", 0, 0, 2125
; i2c_drv.c  928	    	}
; i2c_drv.c  929	      else
; i2c_drv.c  930	      {
; i2c_drv.c  931	//Rev1_1 removed eventlogging from lowest level
; i2c_drv.c  932	//          LogEvent(status,NULL);
; i2c_drv.c  933	      }
	SYMB	LINE, 933
_85:
; i2c_drv.c  934	      Res[bus]->Unlock(Res[bus]);
	SYMB	LINE, 934
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	R1,[R0+2]
	MOV.W	R0,[R0]
	MOV.B	ES,R1L
	MOV.W	R4,[R0+14]
	MOV.W	R5,[R0+16]
	SYMB	LTIM, "__#STR0005S", 19, 0, 77
	FCALL	__ICALL
; i2c_drv.c  935		}
	SYMB	LINE, 935
_86:
; i2c_drv.c  936	   return(status);
	SYMB	LINE, 936
	MOV.W	R0,[R7+4]
	SYMB	LTIM, "status", -14, 130, 69
	SYMB	LTIM, "status", 2, 0, 205
; i2c_drv.c  937	}
	SYMB	LINE, 937
	ADD.W	R7,#0CH
	SYMB	SOFF, 6
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "status", 2, 0, 77
	SYMB	LTIM, "i", 24, 0, 77
	SYMB	LTIM, "num", -8, 130, 2117
	SYMB	EFUN
; i2c_drv.c  938	
; i2c_drv.c  939	
; i2c_drv.c  940	int ReceiveIIC(UC Address ,UC num ,UC *data ,UC bus )
; i2c_drv.c  941	{
	ALIGN	1
	SYMB	LINE, 941
	PUBLIC	_ReceiveIIC
_ReceiveIIC:
	SYMB	TYPE, 464, 'X', 12, #16, 30, 4, #3, #3, #463, #3
	SYMB	GFUN, "ReceiveIIC", _ReceiveIIC, #464, 0, 0, 112
	SYMB	ALAB, _ReceiveIIC, #464
	PUSH.W	R4, R5, R6
	SYMB	SOFF, 6
	SUB.W	R7,#0EH
	SYMB	SOFF, 20
	SYMB	LTIM, "Address", 0, 0, 2253
	SYMB	LTIM, "num", 1, 0, 2253
	SYMB	LTIM, "data", 11, 0, 2253
	SYMB	LTIM, "bus", 4, 0, 2253
	MOV.W	[R7+10],R3
	MOV.W	[R7+8],R2
	SYMB	LTIM, "data", 11, 0, 2125
	SYMB	LTIM, "data", -12, 130, 2245
	MOV.B	[R7+12],R0H
	SYMB	LTIM, "num", 1, 0, 2125
	SYMB	LTIM, "num", -8, 130, 2245
	MOV.B	R6L,R0L
	SYMB	LTIM, "Address", 0, 0, 2125
	SYMB	LTIM, "Address", 24, 0, 2253
	SYMB	IDEN, "Address", 24, #3, 0, 2061
	SYMB	IDEN, "num", -7, #3, 130, 2053
	SYMB	IDEN, "data", -7, #463, 130, 2053
	SYMB	IDEN, "bus", 4, #3, 0, 2061
	SYMB	IDEN, "i", -1, #3, 130, 5
	SYMB	LTIM, "i", -1, 0, 69
	SYMB	IDEN, "__#STR0019S", -1, #463, 130, 5
	SYMB	LTIM, "__#STR0019S", -1, 0, 69
; i2c_drv.c  942	UC i;
; i2c_drv.c  943		if (BusInitialised[bus] == OK) 
	SYMB	LINE, 943
	MOV.B	R6H,R1L
	MOV.B	R0L,R6H
	MOVS.B	R0H,#00H
	SYMB	LTIM, "bus", 4, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.W	R1,R0
	ASL.W	R1,#01H
	MOV.W	R4,R1
	MOVS.W	R5,#00H
	MOV.W	R3,#SEG( _BusInitialised )
	MOV.W	R2,#SOF( _BusInitialised )
	ADD.W	R2,R4
	MOV.W	[R7+6],R3
	MOV.W	[R7+4],R2
	MOV.B	ES,#SEG( _BusInitialised )
	MOV.W	R1,[R4+SOF( _BusInitialised )]
	CMP.W	R1,#0FFFFH
	BNE	_94
; i2c_drv.c  944		{
; i2c_drv.c  945	      Res[bus]->Lock(Res[bus]);
	SYMB	LINE, 945
	ASL.W	R0,#02H
	MOV.W	R2,R0
	MOVS.W	R3,#00H
	MOV.W	R1,#SEG( _Res )
	MOV.W	R0,#SOF( _Res )
	ADD.W	R0,R2
	MOV.W	[R7+2],R1
	MOV.W	[R7],R0
	MOV.B	ES,#SEG( _Res )
	MOV.W	R0,[R2+SOF( _Res )]
	MOV.W	R1,[R2+SOF( _Res+2 )]
	MOV.B	ES,R1L
	MOV.W	R4,[R0+10]
	MOV.W	R5,[R0+12]
	FCALL	__ICALL
	MOV.B	R0L,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
; i2c_drv.c  946	   	Start_IIC(bus);
	SYMB	LINE, 946
	CALL	_Start_IIC
	SYMB	LTIM, "bus", 0, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
; i2c_drv.c  947	   	TxByte(Address | 0x01,bus);
	SYMB	LINE, 947
	OR.B	R6L,#01H
	SYMB	LTIM, "Address", 24, 0, 2125
	MOV.B	R0H,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 1, 0, 2253
	MOV.B	R0L,R6L
	CALL	_TxByte
	SYMB	LTIM, "bus", 1, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
; i2c_drv.c  948	   	for (i=0;i<num-1;i++)
	SYMB	LINE, 948
	MOV.B	R6L,#00H
	SYMB	LTIM, "i", 24, 0, 205
	MOV.W	R5,[R7+10]
	MOV.W	R4,[R7+8]
	SYMB	LTIM, "__#STR0019S", 19, 0, 205
	MOV.B	R0L,[R7+12]
	MOVS.B	R0H,#00H
	SYMB	LTIM, "num", -8, 130, 2117
	SYMB	LTIM, "num", 0, 0, 2253
	SYMB	LTIM, "num", 0, 0, 2125
	ADDS.W	R0,#0FH
	MOV.W	[R7+12],R0
	CMP.W	R0,#00H
	BLE	_93
_92:
; i2c_drv.c  949	   	{
; i2c_drv.c  950	   		data[i] = RxByte(FALSE,bus);
	SYMB	LINE, 950
	MOV.W	R0,#00H
	MOV.B	R1L,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 4, 0, 2253
	CALL	_RxByte
	SYMB	LTIM, "bus", 4, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.B	ES,R5L
	MOV.B	[R4],R0L
	SYMB	LINE, 948
	ADD.W	R4,#01H
	SYMB	LTIM, "__#STR0019S", 19, 0, 77
	SYMB	LTIM, "__#STR0019S", 19, 0, 205
	ADDS.B	R6L,#01H
	SYMB	LTIM, "i", 24, 0, 77
	SYMB	LTIM, "i", 24, 0, 205
	MOV.B	R0L,R6L
	MOVS.B	R0H,#00H
	CMP.W	R0,[R7+12]
	BLT	_92
; i2c_drv.c  951	   	}
	SYMB	LINE, 951
_93:
; i2c_drv.c  952	   	data[i] = RxByte(TRUE,bus);
	SYMB	LINE, 952
	MOV.W	R0,#0FFFFH
	MOV.B	R1L,R6H
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 4, 0, 2253
	CALL	_RxByte
	SYMB	LTIM, "bus", 4, 0, 2125
	SYMB	LTIM, "bus", 25, 0, 2253
	MOV.B	R2L,R6L
	MOVS.B	R2H,#00H
	MOVS.W	R3,#00H
	MOV.W	R5,[R7+10]
	MOV.W	R4,[R7+8]
	ADD.W	R4,R2
	SYMB	LTIM, "__#STR0019S", 19, 0, 77
	SYMB	LTIM, "data", -12, 130, 2117
	SYMB	LTIM, "data", 19, 0, 2253
	SYMB	LTIM, "data", 19, 0, 2125
	MOV.B	ES,R5L
	MOV.B	[R4],R0L
; i2c_drv.c  953	   	Stop_IIC(bus);
	SYMB	LINE, 953
	MOV.B	R0L,R6H
	CALL	_Stop_IIC
	SYMB	LTIM, "bus", 25, 0, 2125
	SYMB	LTIM, "bus", 0, 0, 2253
	SYMB	LTIM, "bus", 0, 0, 2125
; i2c_drv.c  954	      Res[bus]->Unlock(Res[bus]);
	SYMB	LINE, 954
	MOV.W	R1,[R7+2]
	MOV.W	R0,[R7]
	MOV.B	ES,R1L
	MOV.W	R1,[R0+2]
	MOV.W	R0,[R0]
	MOV.B	ES,R1L
	MOV.W	R4,[R0+14]
	MOV.W	R5,[R0+16]
	FCALL	__ICALL
; i2c_drv.c  955		}
	SYMB	LINE, 955
_94:
; i2c_drv.c  956	   return(BusInitialised[bus]);
	SYMB	LINE, 956
	MOV.W	R1,[R7+6]
	MOV.W	R0,[R7+4]
	MOV.B	ES,R1L
	MOV.W	R0,[R0]
; i2c_drv.c  957	}
	SYMB	LINE, 957
	ADD.W	R7,#0EH
	SYMB	SOFF, 6
	POP.W	R4, R5, R6
	SYMB	SOFF, 0
	RET
	SYMB	LTIM, "i", 24, 0, 77
	SYMB	EFUN
; i2c_drv.c  958	
; i2c_drv.c  959	//  If uninterrupted writing / reading is required on the IIC bus
; i2c_drv.c  960	//  then the following functions could be implemented.
; i2c_drv.c  961	//  Normally this is done by the devicedriver by protecting each
; i2c_drv.c  962	//  device with the required resources.
; i2c_drv.c  963	//   TxAndRx(UC Address,UC rxnum, UC *rxdat,UC txnum, UC *txdat, UC bus)
; i2c_drv.c  964	//   RxAndTx(UC Address,UC rxnum, UC *rxdat,UC txnum, UC *txdat, UC bus)
	SYMB	ENDF

	SYMB	TYPE, 465, 'n', #382, 130
	SYMB	TYPE, 466, 'P', #465
	SYMB	TYPE, 467, 'X', 12, #466, 30, 1, #258
	SYMB	ALAB, _newTResource, #467
	EXTRN	HCODE(_newTResource)
	SYMB	TYPE, 468, 'Z', #466, 0
	SYMB	IDEN, "Res", _Res, #468, 130, 4
I2C_DRV_CLR_FA	SEGMENT	HDATA INSEGMENT CLEAR
	RSEG	I2C_DRV_CLR_FA
	ALIGN	1
_Res:	DS	4
	EXTRN	HCODE(__ICALL)
	EXTRN	DATA(__lc_ub_xvwbuffer)
	EXTRN	DATA(__lc_ue_xvwbuffer)
	CALLS	'I2C_DRV?SCL_set_wait', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?SCL_set_wait', 'I2C_DRV?SCL_get'
	CALLS	'I2C_DRV?Start_IIC', 'I2C_DRV?SCL_get'
	CALLS	'I2C_DRV?Start_IIC', 'I2C_DRV?SDA_get'
	CALLS	'I2C_DRV?Start_IIC', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?Start_IIC', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?Stop_IIC', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?Stop_IIC', 'I2C_DRV?SCL_set_wait'
	CALLS	'I2C_DRV?Stop_IIC', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SCL_set_wait'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SCL_set_wait'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SDA_get'
	CALLS	'I2C_DRV?TxByte', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SCL_set_wait'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SDA_get'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SDA_set'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SCL_set_wait'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SCL_set'
	CALLS	'I2C_DRV?RxByte', 'I2C_DRV?SDA_set'
	CALLS	'InitBus', 'newTResource'
	CALLS	'InitBus', 'I2C_DRV?SDA_set'
	CALLS	'InitBus', 'I2C_DRV?SCL_set'
	CALLS	'InitBus', 'I2C_DRV?SCL_get'
	CALLS	'InitBus', 'I2C_DRV?SDA_get'
	CALLS	'InitBus', 'I2C_DRV?SCL_set'
	CALLS	'InitBus', 'I2C_DRV?SCL_get'
	CALLS	'InitBus', 'I2C_DRV?SDA_get'
	CALLS	'InitBus', 'I2C_DRV?SDA_set'
	CALLS	'InitBus', 'I2C_DRV?SCL_set'
	CALLS	'InitBus', 'I2C_DRV?SDA_get'
	CALLS	'InitBus', 'I2C_DRV?SDA_set'
	CALLS	'InitBus', 'I2C_DRV?SCL_set'
	CALLS	'InitBus', 'I2C_DRV?Stop_IIC'
	CALLS	'InitBusses', 'InitBus'
	CALLS	'TransmitIIC', 'I2C_DRV?Start_IIC'
	CALLS	'TransmitIIC', 'I2C_DRV?TxByte'
	CALLS	'TransmitIIC', 'I2C_DRV?Stop_IIC'
	CALLS	'ReceiveIIC', 'I2C_DRV?Start_IIC'
	CALLS	'ReceiveIIC', 'I2C_DRV?TxByte'
	CALLS	'ReceiveIIC', 'I2C_DRV?RxByte'
	CALLS	'ReceiveIIC', 'I2C_DRV?Stop_IIC'
	END
