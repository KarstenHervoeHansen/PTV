XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
U:\Pt5201\Design\DDD\SW\Master\Source\MAKE\work\temp\xa\front.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -I..\..\rtxcdef\xa
                          3 ;          -I..\..\rtxc\xa\include -I..\..\code\include\1_0 -I..\..\app_spec\xa
                          4 ;          -Ml -O2 -s
                          6 $NOZPAGE
                          7         NAME    FRONT
                         11 ; front.c     1 /****************************************************************************/
                         12 ; front.c     2 /* MODULE:                                                                  */
                         13 ; front.c     3 /*  front.c -                                                                    
                                                                                          */
                         14 ; front.c     4 /****************************************************************************/
                         15 ; front.c     5 /* FUNCTIONS:                                                               */
                         16 ; front.c     6 /*                                                                          */
                         17 ; front.c     7 /*                                                                          */
                         18 ; front.c     8 /* TASKS:                                                                   */
                         19 ; front.c     9     void front(void);
                         20 ; front.c    10 /*                                                                          */
                         21 ; front.c    11 /* NOTES:                                                                   */
                         22 ; front.c    12 /****************************************************************************/
                         23 ; front.c    13 /*
                         24 ; front.c    14  *   PTV software for PT5201    
                         25 ; front.c    15  *   Copyright (c) 
                         26 ; front.c    16   *   ProTeleVision Technologies A/S.
                         27 ; front.c    17  *   ALL RIGHTS RESERVED
                         28 ; front.c    18 */
                         29 ; front.c    19 /****************************************************************************/
                         30 ; front.c    20 
                         31 ; front.c    21 #include "rtxcobj.h"
                        361 ; front.c    22 
                        362 ; front.c    23 #include "define.h"
                        365 ; front.c    24 #include "instru.h"
                        468 ; front.c    25 #include "KeyScan.h"
                        471 ; front.c    26 #include "KeyCodes.h"                                   // defines codes used for
                             key queue
                        474 ; front.c    27 #include "Key_hw.h"                             // Hardware interface to keyboard
                             
                        477 ; front.c    28 #include "led_hw.h"                             // Hardware interface to LEDs
                        484 ; front.c    29 
                        485 ; front.c    30 enum KeyStates                  { StateNone = 0, StateDisplay, StateSelect, State
                            Reset };
                        486 ; front.c    31 
                        487 ; front.c    32 static RepeatCnt;
                        488 ; front.c    33 static KeyState;
                        489 ; front.c    34 
                        490 ; front.c    35 /**************************************************************************/
                        491 ; front.c    36 /* front                                                                         
                                                                                                                             
                                                                               FRONT.C      */
                        492 ; front.c    37 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
                        493 ; front.c    38 /* Author:       Kim Engedahl, DEV, 000609                                       
                                                                                                                             
                                    */
                        494 ; front.c    39 /* Revised:      000620, KEn, DEV                                                
                                                                                                                             
                                            */
                        495 ; front.c    40 /*                                                                               
                                                                                                                             
                                                                                                                             
                                            */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        496 ; front.c    41 /* Function:                                                                     
                                                                                                                             
                                                                                                    */
                        497 ; front.c    42 /* Remarks:                                                                      
                                                                                                                             
                                                                                                                    */
                        498 ; front.c    43 /* Returns:                                                                      
                                                                                                                             
                                                                                                                    */
                        499 ; front.c    44 /* Updates:                                                                      
                                                                                                                             
                                                                                                                    */
                        500 ; front.c    45 /**************************************************************************/
                        501 ; front.c    46 void front( void)
                        502 ; front.c    47 {
000000                  503 FRONT_PR        SEGMENT HCODE
000000                  504         RSEG    FRONT_PR
                        505         ALIGN   1
                        511         PUBLIC  _front
000000                  512 _front:
000000 0F30             516         PUSH.W  R4, R5
000002 A97E             518         ADDS.W  R7,#0EH
                        521 ; front.c    48         KeyPress key;
                        522 ; front.c    49 
                        523 ; front.c    50         key.Code = KeyNone;
000004 9278FF           525         MOV.B   [R7],#0FFH
                        526 ; front.c    51                 
                        527 ; front.c    52         for ( ;;)
000008                  529 _4:
000008                  529 _4:
000008                  530 _5:
000008                  530 _5:
000008                  531 _6:
000008                  531 _6:
000008                  532 _7:
000008                  532 _7:
000008                  533 _8:
                        534 ; front.c    53         {
                        535 ; front.c    54                 KeyScanStream->Get( KeyScanStream, &key);
000008 964842rr         537         MOV.B   ES,#SEG( _KeyScanStream )
00000C 9918rrrr         538         MOV.W   R1,#SOF( _KeyScanStream )
000010 8B01             539         MOV.W   R0,[R1+]
000012 8A11             540         MOV.W   R1,[R1]
000014 862C42           541         MOV.B   ES,R1L
000017 8C400A           542         MOV.W   R4,[R0+10]
00001A 8C500C           543         MOV.W   R5,[R0+12]
00001D 9168rr           544         MOV.B   R3L,#SEG( __lc_bs )
000020 7177             545         XOR.B   R3H,R3H
000022 8927             546         MOV.W   R2,R7
000024 C4rrrrrr         547         FCALL   __ICALL
                        548 ; front.c    55 
                        549 ; front.c    56                 switch ( key.Code)
000028 9274FF           551         CMP.B   [R7],#0FFH
00002B F304             552         BEQ     _9
00002D 9274CF           553         CMP.B   [R7],#0CFH
000030 F327             554         BEQ     _15
000032 FEEA             555         BR      _4
                        556 ; front.c    57                 {
                        557 ; front.c    58                         case KeyNone:
000034                  559 _9:
                        560 ; front.c    59                                         switch ( KeyState)
000034 964842rr         562         MOV.B   ES,#SEG( _KeyState )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
000038 9908rrrr         563         MOV.W   R0,#SOF( _KeyState )
00003C 8A00             564         MOV.W   R0,[R0]
00003E 99040003         565         CMP.W   R0,#03H
000042 F304             566         BEQ     _10
000044 99040002         567         CMP.W   R0,#02H
000048 F304             568         BEQ     _11
00004A FE0B             569         BR      _14
                        570 ; front.c    60                                         {
                        571 ; front.c    61                                                 case StateReset:
00004C                  573 _10:
                        574 ; front.c    62                                                         ResetInstrument();
                        576         CALL    _ResetInstrument
00004C C4rrrrrr        +576 ;       FCALL   _ResetInstrument
                        577 ; front.c    63                                                         break;
000050 FE08             579         BR      _14
                        580 ; front.c    64 
                        581 ; front.c    65                                                 case StateSelect:
000052                  583 _11:
                        584 ; front.c    66                                                         if ( Settings.ActivePrese
                            t)
000052 964842rr         586         MOV.B   ES,#SEG( _Settings )
000056 9908rrrr         587         MOV.W   R0,#SOF( _Settings )
00005A 8A00             588         MOV.W   R0,[R0]
00005C F302             589         BEQ     _14
                        590 ; front.c    67                                                                 RecallPreset( Set
                            tings.ActivePreset);
                        592         CALL    _RecallPreset
00005E C4rrrrrr        +592 ;       FCALL   _RecallPreset
                        593 ; front.c    68                                                         break;
                        594 ; front.c    69                                         }
000062                  596 _14:
                        597 ; front.c    70 
                        598 ; front.c    71                                         KeyState = StateNone;
000062 964842rr         600         MOV.B   ES,#SEG( _KeyState )
000066 9908rrrr         601         MOV.W   R0,#SOF( _KeyState )
00006A BA00             602         MOV.W   [R0],#00H
                        603 ; front.c    72 
                        604 ; front.c    73                                         Sleep( 100);                             
                                                                    // Display LEDs for 100ms before returning to normal
00006C 99080064         606         MOV.W   R0,#064H
                        607         CALL    _Sleep
000070 C4rrrrrr        +607 ;       FCALL   _Sleep
                        608 ; front.c    74 
                        609 ; front.c    75                                         SystemsLEDSet( NormLEDs, 0);
000074 911800           611         MOV.B   R0H,#00H
000077 8101             612         MOV.B   R0L,R0H
                        613         CALL    _SystemsLEDSet
000079 C4rrrrrr        +613 ;       FCALL   _SystemsLEDSet
                        614 ; front.c    76                                         break;
00007D FEC5             616         BR      _8
                        617 ; front.c    77 
                        618 ; front.c    78                                 case KeyExecute:
000080                  620 _15:
                        621 ; front.c    79                                         switch ( key.Repeat)
000080 94740100         623         CMP.B   [R7+1],#00H
000084 F307             624         BEQ     _16
000086 94740102         625         CMP.B   [R7+1],#02H
00008A F319             626         BEQ     _17
00008C 94740103         627         CMP.B   [R7+1],#03H
000090 F34D             628         BEQ     _20
000092 FEBA             629         BR      _4
                        630 ; front.c    80                                         {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
                        631 ; front.c    81                                                 case RepeatOff:                  
                                                            // Display active preset, (if any)
000094                  633 _16:
                        634 ; front.c    82                                                         SystemsLEDSet( PresetLEDs
                            , Settings.ActivePreset);
000094 910801           636         MOV.B   R0L,#01H
000097 964842rr         637         MOV.B   ES,#SEG( _Settings )
00009B 9918rrrr         638         MOV.W   R1,#SOF( _Settings )
00009F 8A11             639         MOV.W   R1,[R1]
0000A1 8112             640         MOV.B   R0H,R1L
                        641         CALL    _SystemsLEDSet
0000A3 C4rrrrrr        +641 ;       FCALL   _SystemsLEDSet
                        642 ; front.c    83 
                        643 ; front.c    84                                                         RepeatCnt = 0;
0000A7 964842rr         645         MOV.B   ES,#SEG( _RepeatCnt )
0000AB 9908rrrr         646         MOV.W   R0,#SOF( _RepeatCnt )
0000AF BA00             647         MOV.W   [R0],#00H
                        648 ; front.c    85 
                        649 ; front.c    86                                                         KeyState = StateDisplay;
0000B1 964842rr         651         MOV.B   ES,#SEG( _KeyState )
0000B5 9908rrrr         652         MOV.W   R0,#SOF( _KeyState )
0000B9 BA01             653         MOV.W   [R0],#01H
                        654 ; front.c    87                                                         break;
0000BB FEA6             656         BR      _7
                        657 ; front.c    88 
                        658 ; front.c    89                                                 case Repeat2:                    
                                                                    // Display/select next preset when releasing button
0000BE                  660 _17:
                        661 ; front.c    90                                                         if ( RepeatCnt-- == 0)
0000BE 964842rr         663         MOV.B   ES,#SEG( _RepeatCnt )
0000C2 9908rrrr         664         MOV.W   R0,#SOF( _RepeatCnt )
0000C6 8A00             665         MOV.W   R0,[R0]
0000C8 8910             666         MOV.W   R1,R0
0000CA A90F             667         ADDS.W  R0,#0FH
0000CC 964842rr         668         MOV.B   ES,#SEG( _RepeatCnt )
0000D0 9928rrrr         669         MOV.W   R2,#SOF( _RepeatCnt )
0000D4 8A0A             670         MOV.W   [R2],R0
0000D6 6911             671         OR.W    R1,R1
0000D8 F222             672         BNE     _19
                        673 ; front.c    91                                                         {
                        674 ; front.c    92                                                                 RepeatCnt = 2;
0000DA 964842rr         676         MOV.B   ES,#SEG( _RepeatCnt )
0000DE 9908rrrr         677         MOV.W   R0,#SOF( _RepeatCnt )
0000E2 BA02             678         MOV.W   [R0],#02H
                        679 ; front.c    93 
                        680 ; front.c    94                                                                 if ( ++Settings.A
                            ctivePreset > NoOfPresets)
0000E4 964842rr         682         MOV.B   ES,#SEG( _Settings )
0000E8 9908rrrr         683         MOV.W   R0,#SOF( _Settings )
0000EC 8A00             684         MOV.W   R0,[R0]
0000EE A901             685         ADDS.W  R0,#01H
0000F0 964842rr         686         MOV.B   ES,#SEG( _Settings )
0000F4 9918rrrr         687         MOV.W   R1,#SOF( _Settings )
0000F8 8A09             688         MOV.W   [R1],R0
0000FA 99040004         689         CMP.W   R0,#04H
0000FE FD05             690         BLE     _18
                        691 ; front.c    95                                                                         Settings.
                            ActivePreset = 0;
000100 964842rr         693         MOV.B   ES,#SEG( _Settings )
000104 9908rrrr         694         MOV.W   R0,#SOF( _Settings )
000108 BA00             695         MOV.W   [R0],#00H
000108 BA00             695         MOV.W   [R0],#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
00010A                  696 _18:
                        697 ; front.c    96 
                        698 ; front.c    97                                                                 SystemsLEDSet( Pr
                            esetLEDs, Settings.ActivePreset);
00010A 910801           700         MOV.B   R0L,#01H
00010D 964842rr         701         MOV.B   ES,#SEG( _Settings )
000111 9918rrrr         702         MOV.W   R1,#SOF( _Settings )
000115 8A11             703         MOV.W   R1,[R1]
000117 8112             704         MOV.B   R0H,R1L
                        705         CALL    _SystemsLEDSet
000119 C4rrrrrr        +705 ;       FCALL   _SystemsLEDSet
                        706 ; front.c    98                                                         }
00011E                  708 _19:
                        709 ; front.c    99 
                        710 ; front.c   100                                                         KeyState = StateSelect;
00011E 964842rr         712         MOV.B   ES,#SEG( _KeyState )
000122 9908rrrr         713         MOV.W   R0,#SOF( _KeyState )
000126 BA02             714         MOV.W   [R0],#02H
                        715 ; front.c   101                                                         break;
                        717         BR      _6
000128 D5FF6F          +717         JMP.L   _6
                        718 ; front.c   102 
                        719 ; front.c   103                                                 case Repeat3:                    
                                                                    // Reset the unit when releasing button
00012C                  721 _20:
                        722 ; front.c   104                                                         KeyState = StateReset;
00012C 964842rr         724         MOV.B   ES,#SEG( _KeyState )
000130 9908rrrr         725         MOV.W   R0,#SOF( _KeyState )
000134 BA03             726         MOV.W   [R0],#03H
                        727 ; front.c   105 
                        728 ; front.c   106                                                         SystemsLEDSet( ResetLEDs,
                             0);
000136 910802           730         MOV.B   R0L,#02H
000139 911800           731         MOV.B   R0H,#00H
                        732         CALL    _SystemsLEDSet
00013C C4rrrrrr        +732 ;       FCALL   _SystemsLEDSet
                        734         BR      _5
000140 D5FF63          +734         JMP.L   _5
                        735 ; front.c   107                                                         break;
                        736 ; front.c   108                                         }
                        737 ; front.c   109                                         break;
                        738 ; front.c   110                 }
                        739 ; front.c   111         }
                        740 ; front.c   112 }
000143 A972             742         ADDS.W  R7,#02H
000145 2F30             744         POP.W   R4, R5
000147 D680             746         RET
000000                  751 FRONT_CLR_FA    SEGMENT HDATA INSEGMENT CLEAR
000000                  752         RSEG    FRONT_CLR_FA
                        753         ALIGN   1
000000                  754 _RepeatCnt:     DS      2
   |  RESERVED             
000001
                        758         EXTRN   HDATA(_KeyScanStream)
                        760         EXTRN   HDATA(_Settings)
                        763         EXTRN   HCODE(_SystemsLEDSet)
                        764         EXTRN   HCODE(__ICALL)
                        767         EXTRN   HCODE(_RecallPreset)
                        768         EXTRN   IDATA(__lc_bs)
                        771         EXTRN   HCODE(_ResetInstrument)
                        774         EXTRN   HCODE(_Sleep)
                        776         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
000002                  777 _KeyState:      DS      2
   |  RESERVED             
000003
                        778         EXTRN   DATA(__lc_ub_xvwbuffer)
                        779         EXTRN   DATA(__lc_ue_xvwbuffer)
                        780         CALLS   'front', 'ResetInstrument'
                        781         CALLS   'front', 'RecallPreset'
                        782         CALLS   'front', 'Sleep'
                        783         CALLS   'front', 'SystemsLEDSet'
