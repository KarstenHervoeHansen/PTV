HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	btri.gdf
	{
		btri [] [];
	}
	74374.gdf
	{
		74374 [] []
		{
			15 [] [];
		}
	}
	74138.gdf
	{
		74138 [] []
		{
			14 [] [];
		}
	}
	total01.gdf
	{
		total01 [] []
		{
			10 [] [];
		}
	}
	extsel01.tdf
	{
		extsel01 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			21 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [FRAME,NOSYNC,FREQ_FAIL,FRAME_VIDEO,FREQ_SEL,NS_VIDEO];
		}
	}
	freqcheck.tdf
	{
		freqcheck [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK27M,FREQ,FREQ_FAIL];
		}
	}
	div100.tdf
	{
		div100 [USE_LPM_FOR_AHDL_OPERATORS] [];
	}
	div135.tdf
	{
		div135 [USE_LPM_FOR_AHDL_OPERATORS] [];
	}
	spg_flash_sel.gdf
	{
		spg_flash_sel [] []
		{
			22 [] [];
		}
	}
	locdet01.tdf
	{
		locdet01 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			17 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLOCK,WINDOW,ELINE,V1OUT,LOCK];
		}
	}
	tcxo_chk.tdf
	{
		tcxo_chk [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			16 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [clk,10M,TCXO_OK];
		}
	}
	uproc01.gdf
	{
		uproc01 [] []
		{
			13 [] [];
		}
	}
	spglog01.tdf
	{
		spglog01 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			12 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLOCK,G,ADD_in,SUBTR_in,SAMP_in,FRAMEREF,V8REF,H10,H9,H8,H7,H6,H5,H4,H3,H2,H1,H0,HREFOUT,SPGINT,SAMP_EN,FH_G,F8_G,FH_M,FF_M,F4_M];
		}
	}
	div44aa20.tdf
	{
		div44aa20 [USE_LPM_FOR_AHDL_OPERATORS] [];
	}
	div6_50duty.gdf
	{
		div6_50duty [] [];
	}
	div3.tdf
	{
		div3 [USE_LPM_FOR_AHDL_OPERATORS] [];
	}
	extlog01.tdf
	{
		extlog01 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			11 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLOCK,I7,I6,I5,I4,I3,I2,I1,I0,INTERN,LEVEL,FREQLOCK,G,H0,CLP,NS,V1OUT,ELINE];
		}
	}
	clamp.tdf
	{
		clamp [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			1 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [ADC7,ADC6,ADC5,ADC4,ADC3,ADC2,ADC1,ADC0,OUT];
		}
	}
	aes5201.gdf
	{
		aes5201 [] []
		{
			2 [] [];
		}
	}
	ioport.tdf
	{
		ioport [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			9 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [DM9,DM8,DM7,DM6,DM5,DM4,DM3,DM2,DM1,DM0,VIDEO_LOCK,AUDIO_LOCK,TCXO_LOCK,TCXO_MOUNTED,RELAYTYPE,AM18,AM17,AM16,AM15,AM14,AM2,AM1,AM0,RDM,WRLM,FLASHPRG,TIMING9,TIMING8,TIMING7,TIMING6,TIMING5,TIMING4,TIMING3,TIMING2,TIMING1,TIMING0,AUDIO_SELECT8,AUDIO_SELECT7,AUDIO_SELECT6,AUDIO_SELECT5,AUDIO_SELECT4,AUDIO_SELECT3,AUDIO_SELECT2,AUDIO_SELECT1,AUDIO_SELECT0,AUDIO_LEVEL4,AUDIO_LEVEL3,AUDIO_LEVEL2,AUDIO_LEVEL1,AUDIO_LEVEL0,BB_45MHZ,POT_CLK,POT_SDI,POT_CSAU,POT_CSCB,SEL_AES,SEL_ANALOG,NTSC_PHASE];
		}
	}
	select.tdf
	{
		select [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			8 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [AESCOUNT14,AESCOUNT13,AESCOUNT12,AESCOUNT11,AESCOUNT10,AESCOUNT9,AESCOUNT8,AESCOUNT7,AESCOUNT6,AESCOUNT5,AESCOUNT4,AESCOUNT3,AESCOUNT2,AESCOUNT1,AESCOUNT0,ANCOUNT9,ANCOUNT8,ANCOUNT7,ANCOUNT6,ANCOUNT5,ANCOUNT4,ANCOUNT3,ANCOUNT2,ANCOUNT1,ANCOUNT0,AUDIO_SELECT8,AUDIO_SELECT7,AUDIO_SELECT6,AUDIO_SELECT5,AUDIO_SELECT4,AUDIO_SELECT3,AUDIO_SELECT2,AUDIO_SELECT1,AUDIO_SELECT0,AUDIO_LEVEL4,AUDIO_LEVEL3,AUDIO_LEVEL2,AUDIO_LEVEL1,AUDIO_LEVEL0,GL1,ANGL1,PS1,PS0,GL_PER_1SEC,SYNC_OFF,AU_ADDR19,AU_ADDR18,AU_ADDR17,AU_ADDR16,AU_ADDR15,AU_ADDR14,AU_ADDR13,AU_ADDR12,AU_ADDR11,AU_ADDR10,AU_ADDR9,AU_ADDR8,AU_ADDR7,AU_ADDR6,AU_ADDR5,AU_ADDR4,AU_ADDR3,AU_ADDR2,AU_ADDR1,AU_ADDR0,FLA_CS1,FLA_CS2,SEL441,BLOCK1,BLOCK0,AES_ON,AN_ON];
		}
	}
	analog.tdf
	{
		analog [USE_LPM_FOR_AHDL_OPERATORS] [par2ser.inc]
		{
			7 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK6144,AU_D7,AU_D6,AU_D5,AU_D4,AU_D3,AU_D2,AU_D1,AU_D0,GL_PER_1SEC,AN_ON,ANCOUNT9,ANCOUNT8,ANCOUNT7,ANCOUNT6,ANCOUNT5,ANCOUNT4,ANCOUNT3,ANCOUNT2,ANCOUNT1,ANCOUNT0,LRCK,AN_SDATA,ANGL1];
		}
	}
	par2ser.tdf
	{
		par2ser [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			6 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [din0,din1,din2,din3,din4,din5,din6,din7,on,pload,clk,qq];
		}
	}
	aes.tdf
	{
		aes [USE_LPM_FOR_AHDL_OPERATORS] [par2ser.inc]
		{
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK6144,CLK56448,SEL441,BLOCK1,BLOCK0,AUD_RESET,AU_D7,AU_D6,AU_D5,AU_D4,AU_D3,AU_D2,AU_D1,AU_D0,GL_PER_1SEC,AES_ON,AESCOUNT14,AESCOUNT13,AESCOUNT12,AESCOUNT11,AESCOUNT10,AESCOUNT9,AESCOUNT8,AESCOUNT7,AESCOUNT6,AESCOUNT5,AESCOUNT4,AESCOUNT3,AESCOUNT2,AESCOUNT1,AESCOUNT0,WCLK,XZPRE,AESDATA,GL1];
		}
	}
	avsync.tdf
	{
		avsync [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK27M,F8_G,FF_M,XZPRE,NTSC_PHASE,TIMING9,TIMING8,TIMING7,TIMING6,TIMING5,TIMING4,TIMING3,TIMING2,TIMING1,TIMING0,SYNC_OFF,AUD_RESET,VIDLOCK];
		}
	}
	div270.tdf
	{
		div270 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK27,CLK/4];
		}
	}
	div130.tdf
	{
		div130 [USE_LPM_FOR_AHDL_OPERATORS] []
		{
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF] [CLK13M,CLK100K];
		}
	}
	aes_spg.gdf
	{
		aes_spg [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	aes_spg::(0,0):(0): aes_spg.gdf
	{
		total01::(0,0):(146): total01.gdf
		{
			extlog01:11:(0,0):(119): extlog01.tdf;
			spglog01:12:(0,0):(210): spglog01.tdf;
			uproc01:13:(0,0):(214): uproc01.gdf
			{
				74138:14:(0,0):(13): 74138.gdf;
				74138:14:(0,0):(1): 74138.gdf;
				74374:15:(0,0):(24): 74374.gdf;
				74374:15:(0,0):(81): 74374.gdf;
				74374:15:(0,0):(72): 74374.gdf;
				74374:15:(0,0):(57): 74374.gdf;
				74374:15:(0,0):(58): 74374.gdf;
				74374:15:(0,0):(27): 74374.gdf;
			}
			tcxo_chk:16:(0,0):(215): tcxo_chk.tdf;
			locdet01:17:(0,0):(217): locdet01.tdf;
			div270:18:(0,0):(243): div270.tdf;
			div130:19:(0,0):(244): div130.tdf;
			freqcheck:20:(0,0):(245): freqcheck.tdf;
			extsel01:21:(0,0):(246): extsel01.tdf;
			spg_flash_sel:22:(0,0):(248): spg_flash_sel.gdf
			{
				btri::(0,0):(4): btri.gdf;
			}
		}
		clamp:0:(0,0):(130): clamp.tdf;
		aes5201::(0,0):(137): aes5201.gdf
		{
			pll::(0,0):(56): pll.tdf;
			avsync:4:(0,0):(89): avsync.tdf;
			aes:5:(0,0):(107): aes.tdf
			{
				par2ser:6:(37,1):(62,shreg): par2ser.tdf;
			}
			analog:7:(0,0):(108): analog.tdf
			{
				par2ser:6:(33,1):(51,shreg): par2ser.tdf;
			}
			select:8:(0,0):(109): select.tdf;
			ioport:9:(0,0):(115): ioport.tdf;
		}
	}
}
