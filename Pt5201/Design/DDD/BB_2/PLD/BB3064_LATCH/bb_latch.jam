' Copyright (C) 1988-1999 Altera Corporation
' Any megafunction design, and related net list (encrypted or decrypted),
' support information, device programming or simulation file, and any other
' associated documentation or information provided by Altera or a partner
' under Altera's Megafunction Partnership Program may be used only to
' program PLD devices (but not masked PLD devices) from Altera.  Any other
' use of such megafunction design, net list, support information, device
' programming or simulation file, or any other related documentation or
' information is prohibited for any other purpose, including, but not
' limited to modification, reverse engineering, de-compiling, or use with
' any other silicon devices, unless such use is explicitly licensed under
' a separate agreement with Altera or a megafunction partner.  Title to
' the intellectual property, including patents, copyrights, trademarks,
' trade secrets, or maskworks, embodied in any such megafunction design,
' net list, support information, device programming or simulation file, or
' any other related documentation or information provided by Altera or a
' megafunction partner, remains with Altera, the megafunction partner, or
' their respective licensors.  No other licenses, including any licenses
' needed under any third party's intellectual property, are provided herein.

'Device #1: EPM3064A - u:\pt5201\work\tsc\pt5201_bb\detail_design_doc\pgadesign\bb3064\bb3064_latch\bb_latch.pof Mon Feb 07 12:20:04 2000

NOTE "CREATOR" "Altera Jam/STAPL Composer Version 9.4 12/16/1999";
NOTE "DATE" "2000/02/07";
NOTE "DEVICE" "EPM3064A";
NOTE "FILE" "bb_latch.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "170640DD";
NOTE "USERCODE" "FFFFFFFF";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A25, A43, A50";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "3";
ACTION PROGRAM = PR_INIT_PROGRAM, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED, DO_SECURE OPTIONAL, PR_EXECUTE;
ACTION BLANKCHECK = PR_INIT_BLANKCHECK, PR_EXECUTE;
ACTION VERIFY = PR_INIT_VERIFY, PR_EXECUTE;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
INTEGER A12[1] = 20;
INTEGER A13[1] = 260;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
BOOLEAN A50[33480] = @
P1100u@@_N@t@l@@@VNhrQQjMhfrQjgM@@t@l@l@rUDlNhzqUlsLRzUPltxbzMld
thz@j9uUjMRh1gr@@yk@yhVjNRB3qxzUPltxbzUldtxz@jOGhbQDjMhLbw@@_@@@
zlshvrQjVh4OltRfzU@lMIeM@@tt@@lzrUjQvHQDGj_Vjw_@1shzQQlMxVO2itRz
yUh@dM9Kh@vJ@SstRQlMj8Hj_@gV@@V@gzQ373itxrUeAKh@@x@@lttQlM7kXxrQ
9jMhraIjMLh@@tX6CSai5jKBjeM@VJ@@@@3v4rwt@_@l@zlohzzUmxz_REK2Kwxr
__VzzlshuzAjdsxrkUlt9xyUlvm7ShMhjoImSzV4rrUDlNhzqUls_UUeM@@r@x_h
QrUjxq9yr@@zdsh5jEnx@tVXpZLM5qUhMBSXuV@x_LdG7AXxK5gr@@z_V@dMUWzQ
lt_j2KwJl_P@xzjoh4jCOI62x@@@nE3shzUVrmGj_@zHbAgr@nazlkOSjNx2y1ls
R@nXIWIV_t@zlFVLUbqYJgoqo@@pVld1qUjsJu2nxx@lhrUj27FaIjMteQWVz@V@
fyAVF9yNkXQz@J@@@z_NxrASI87o3zz@@1j9eNxzAE49LwNOq_d7ikshvzQjdswr
kUlshprDGhl@x__t7@QlMzR5Q@_@@BnWMxrkUltBRzUlPdEvzQjbsxrkUlrBxzUj
Dgse@R@@SL2@hrQHu6etxjoQltRGhJUlMhNpJWzUjNzxCg@_@z@@@xUjKJhrQDjM
BLro@@foEvUfMJhrQDjMhbkQIOlrxbrUlNNjb_Bn0RzUl8SRuVbNPDNBUhKxt9Q0
zUlNqxzU5x42j_@l@@@V@BzQUlMw9zUjFs9XTYLeIV_Vw73NWImxz_h@@h@fVQf@
h@@GO5MlMxfzUfhtxroUjMBxrQDlth@X33HltRbzMhLsRjMUlt_t96YMltBxzMli
txziUl@NPi8@hzIUlKxfzUfgshzoQltBhzUFjMx@99zWsxrcMlrBRzUlirxziMh@
Fga4xzQlzB@HhrI9jMgrOdO4jWa0jCu@@sV1Q5_NRbsscWzUlLsxzUUht@BZsY@@
hVrVz@fVV8xa1QjMhfrQjhNxrwX03Q@s@lQomSL3ylsgPjQjbsQrkUhthvglfrQi
c6hrgQy@@0jEvUj63hrQDj6ZHnw@@rS3nzOic6ZrOOjMhFUFyXmXhcjnxrO@TY3X
zUjhtxzOYjJ_7xrwndWzUldUy6mxzJtfVwjzUlNV_@@_@@@z@@@x@V@t@@@l@@pV
vy@d_pvVSEdpxvSEtdpviSEdNG8402W08842XW0AbYIfKAAbI9fqu@_@@@zF5G00
4A05080000G2000A0000008wSEdZpvS_2W2g0OWvSEN@@@@_@@pd18XSVzNUltVU
z_hzrVlM1W1kth@y@@@x@@VrlU@btVzUtxrVUzNljtVzw_xzoVd@f@@@7@@@yU_d
@zv@@xdp@tSE@VV19K1W2Z6O00;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[28] =
96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[28] =
32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[28] =
512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[15] =
294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 27] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
BOOLEAN A45[2];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[5];
BOOLEAN A28[95];
BOOLEAN A29[360];
BOOLEAN A30[360];
BOOLEAN A31[360];
BOOLEAN A57[360];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
INTEGER V3 = 0;
INTEGER V4 = 32;
BOOLEAN b;
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A18[21];
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
BOOLEAN USE_REV0_PROG_ALG = 0;
ENDDATA;
PROCEDURE PR_INIT_PROGRAM USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
PROCEDURE PR_INIT_BLANKCHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE PR_INIT_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE PR_EXECUTE USES DEVICE_DATA, TEMP_DATA, L6, L26,
L97,
L111, L77, L57, L83, L60,
L257,
L42, L35, L21;
CALL L6;
V3 = 0;
V4 = 256;
CALL L26;
IF (V2 == 0) THEN GOTO L3;
IF (V42 == 0) THEN CALL L111;
IF ((V42 == 0) && V102) THEN CALL L77;
IF ((V42 == 0) && V100) THEN CALL L97;
IF ((V42 == 0) && V103) THEN CALL L57;
IF ((V42 == 0) && V108) THEN CALL L83;
IF ((V42 == 0) && V107) THEN CALL L257;
IF ((V42 == 0) && V103) THEN CALL L60;
L3:
IF ((V42 == 0) && V104) THEN CALL L42;
IF ((V42 == 0) && V105) THEN CALL L35;
CALL L21;
EXIT V42;
ENDPROC;
PROCEDURE L6 USES DEVICE_DATA, TEMP_DATA, L30, L276, L32;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L16;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L7;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L7:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L8;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L9;
L8:
l = l + 1;
L9:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L10;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 == 23) || (V2 == 24) || (V2 == 25) || (V2 == 26) || (V2 == 27)) THEN V96 = 95;
L10:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L11;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L11:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L12;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L12:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L13;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L14;
L13:
l = l + 1;
L14:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L15;
V2 = A12[i];
j = A0[V2];
L15:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L16;
V2 = A12[i];
j = A0[V2];
L16:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L17;
V2 = A12[i];
j = A0[V2];
L17:
V17 = V17 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L18;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L18:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L19;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L19:
NEXT i;
CALL L30;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF (V101) THEN CALL L32;
IF (V42 != 0) THEN GOTO L20;
A18[9..0] = $071;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $332;
V4 = 256;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $044;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
L20:
ENDPROC;
PROCEDURE L21 USES DEVICE_DATA, TEMP_DATA, L31, L276, L32;
IF (V42 == 1) THEN GOTO L25;
CALL L31;
IF (!V76) THEN GOTO L22;
A18[9..0] = $003;
V4 = 32;
CALL L276;
L22:
A18[9..0] = $079;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
IF (V105) THEN GOTO L23;
A18[9..0] = $006;
V4 = 256;
CALL L276;
WAIT 10000 USEC;
L23:
A18[9..0] = $04A;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
IF (!V76) THEN GOTO L24;
V80 = 0;
CALL L32;
IF (V42 != 0) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L22;
L24:
A18[9..0] = $3FF;
CALL L276;
L25:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF (V42 == 10) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF (V42 == 10) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
ENDPROC;
PROCEDURE L26 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L27;
V2 = 0;
V3 = 0;
GOTO L29;
L27:
V2 = A12[j - 1];
V3 = j;
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512))
THEN GOTO L29;
IF (V58) THEN GOTO L28;
A41[9..0] = $066;
GOTO L29;
L28:
A41[9..0] = $006;
L29:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L30 USES DEVICE_DATA, TEMP_DATA, L31
, L272
;
CALL L31;
IF (V32 == 0) THEN CALL L272;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L31 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L32 USES DEVICE_DATA, TEMP_DATA, L31;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
CALL L31;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[9..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 256) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 32) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L33;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L34;
L33:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << (k - 0));
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L34:
V27 = V27 + 1;
NEXT i;
ENDPROC;
PROCEDURE L35 USES DEVICE_DATA, TEMP_DATA, L31, L276, L39;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L37;
IF ((V84 < 0) || (V84 > V1) ||
((A17[V1 - V84] & 256) == 0)) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L38;
L36:
j = V84;
k = V84;
L37:
V4 = 256;
CALL L31;
A18[9..0] = $006;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $3FF;
CALL L276;
STATE IDLE;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L39;
POP k; POP j; POP i;
NEXT i;
L38:
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA, L276, L287, L41;
V4 = 256;
A18[9..0] = $007;
CALL L276;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] | 8;
NEXT i;
CALL L287;
L40:
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L41;
ENDPROC;
PROCEDURE L41 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L42 USES DEVICE_DATA, TEMP_DATA, L31
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L44;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L45;
L43:
j = V84;
k = V84;
L44:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
POP k; POP j; POP i;
NEXT i;
L45:
ENDPROC;
PROCEDURE L51 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "USERCODE", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L57 USES DEVICE_DATA, TEMP_DATA, L30, L218, L276, L243;
PRINT "programming 7KAE/3KA/7KB device(s)...";
CALL L30;
V11 = 2;
CALL L218;
IF (USE_REV0_PROG_ALG) THEN GOTO L58;
A18[9..0] = $016;
CALL L276;
GOTO L59;
L58:
A18[9..0] = $012;
V91 = 1;
CALL L276;
V91 = 0;
L59:
FOR V10 = 2 TO V96;
CALL L243;
NEXT V10;
ENDPROC;
PROCEDURE L60 USES DEVICE_DATA, TEMP_DATA, L30, L218, L276, L243;
CALL L30;
V11 = 0;
CALL L218;
IF (USE_REV0_PROG_ALG) THEN GOTO L61;
A18[9..0] = $016;
CALL L276;
GOTO L62;
L61:
A18[9..0] = $012;
V91 = 1;
CALL L276;
V91 = 0;
L62:
V75 = 1;
CALL L243;
V75 = 0;
ENDPROC;
PROCEDURE L77 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = $00A;
CALL L276;
WAIT (V38 * 1000) USEC;
ENDPROC;
PROCEDURE L83 USES DEVICE_DATA, TEMP_DATA, L30, L218, L276, L173;
INTEGER V92 = 0;
IF (V74) THEN PRINT "blank checking 7KAE/3KA/7KB device(s)...";
IF (!V74) THEN PRINT "verifying 7KAE/3KA/7KB device(s)...";
L84:
CALL L30;
IF (V92 == 1) THEN V29 = 2;
V11 = 2;
CALL L218;
IF (V29 != 0) THEN GOTO L85;
A18[9..0] = $01E;
L85:
IF (V29 != 1) THEN GOTO L86;
A18[9..0] = $016;
L86:
IF (V29 != 2) THEN GOTO L87;
A18[9..0] = $01A;
L87:
CALL L276;
V45 = 1;
FOR V10 = 2 TO 6;
CALL L173;
NEXT V10;
IF (V42 != 0) THEN GOTO L88;
V45 = 0;
FOR V10 = 7 TO V96;
CALL L173;
NEXT V10;
IF (!V103 || (V29 != 0)) THEN
GOTO L88;
V92 = 1;
GOTO L84;
L88:
ENDPROC;
PROCEDURE L97 USES DEVICE_DATA, TEMP_DATA
, L83
;
V74 = 1;
IF (V4 == 256) THEN CALL L83;
V74 = 0;
ENDPROC;
PROCEDURE L111 USES DEVICE_DATA, TEMP_DATA, L30, L218, L276, L173, L311;
CALL L30;
V37 = 300;
V38 = 100;
V29 = 1;
V11 = 1;
CALL L218;
A18[9..0] = $016;
CALL L276;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L112;
CALL L173;
GOTO L113;
L112:
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L113:
FOR i = V1 TO 0 STEP -1;
A48[i] = 0;
IF (((A17[i] & 256) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L122;
V68 = 0;
FOR j = 0 TO i;
V26 = 0;
V2 = A12[j];
IF (i == j) THEN GOTO L114;
V26 = 1;
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L114;
V26 = A5[V2];
L114:
V68 = V68 + V26;
NEXT j;
FOR j = 0 TO 14;
A16[j] = 0;
V46 = A6[V2];
V47 = j / (V46 << 1);
V48 = (j % (V46 << 1)) >> 1;
V69 = 1;
CALL L311;
IF (V48 < (V46 >> 1)) THEN GOTO L115;
V69 = 0;
V48 = V46 - V48 - 1;
L115:
V27 = V68 +
(V69 * ((80 * (V46 >> 1)) + A52[i])) +
(80 * V48) + (40 * (~j & 1)) + (4 - V47);
FOR k = 0 TO 7;
IF (USE_FIXED_ALGORITHM) THEN GOTO L116;
IF (A31[V27 + (5 * k)]) THEN
A16[j] = A16[j] | (1 << k);
GOTO L117;
L116:
IF ((A54[j << 1] & (1 << k)) != 0) THEN
A31[V27 + (5 * k)] = 1;
IF ((A54[(j << 1) + 1] & (1 << k)) != 0) THEN
A57[V27 + (5 * k)] = 1;
L117:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A54[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L118;
PUSH i;
CALL L173;
POP i;
IF (V39) THEN V42 = 6;
L118:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L122;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[9] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 300;
V73 = 100;
IF ((V36 & 24) == 16) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1])) THEN
GOTO L121;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L119;
V72 = A14[A16[8] & 31];
V73 = A15[(A16[8] >> 5) & 7];
L119:
IF ((A11[V27 + 2] & 2) != 2) THEN
GOTO L120;
k = 14;
IF ((V2 == 14) || (V2 == 20)) THEN k = 11;
V72 = A14[((A16[k] >> 3) & 31) + 32];
V73 = A15[(A16[k] & 7) + 8];
L120:
IF ((A11[V27 + 2] & 4) != 4) THEN
GOTO L121;
V72 = 500;
V73 = 500;
L121:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L122:
NEXT i;
ENDPROC;
PROCEDURE L169 USES DEVICE_DATA, TEMP_DATA;
IF (V34 == 0) THEN GOTO L170;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L172;
L170:
IF (V74) THEN GOTO L171;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A50[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L172;
L171:
DRSCAN V24, A30[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L172:
IF (!V40) THEN V39 = 1;
ENDPROC;
PROCEDURE L173 USES DEVICE_DATA, TEMP_DATA, L287, L303, L169;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L287;
IF (V34 == 1) THEN GOTO L174;
V30 = V89;
V31 = V30 + (V24 - 1);
GOTO L175;
L174:
V30 = 0;
V31 = V24 - 1;
L175:
IF (!V45) THEN GOTO L176;
b = 0;
CALL L303;
L176:
CALL L169;
IF (!V45) THEN GOTO L177;
b = 1;
CALL L303;
L177:
V89 = V89 + V24;
IF (!V39 || (V34 == 1)) THEN
GOTO L178;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L178:
ENDPROC;
PROCEDURE L218 USES DEVICE_DATA, TEMP_DATA, L276;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L220;
V2 = A12[j];
IF (V11 >= A0[V2]) THEN GOTO L219;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 1;
GOTO L220;
L219:
IF ((A17[j] & 8) == 0) THEN V49 = 1;
A17[j] = A17[j] | 8;
L220:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $00E;
CALL L276;
DRSCAN V30, A28[(V30 - 1)..0];
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
V2 = A12[j];
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L221;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 0;
L221:
V30 = V31 + 1;
NEXT j;
V10 = V11;
ENDPROC;
PROCEDURE L243 USES DEVICE_DATA, TEMP_DATA, L287, L276, L218;
V30 = V89;
IF (V49) THEN CALL L287;
V31 = V30 + (V23 - 1);
IF (V75) THEN GOTO L244;
DRSCAN V23, A50[V31..V30];
GOTO L245;
L244:
IF (V44) THEN DRSCAN V23, A30[(V23 - 1)..0];
IF (!V44) THEN DRSCAN V23, A29[(V23 - 1)..0];
L245:
IF ((V10 > 2) || USE_REV0_PROG_ALG) THEN
GOTO L246;
V11 = V10;
CALL L218;
A18[9..0] = $012;
CALL L276;
L246:
WAIT (V37 * 100) USEC;
V89 = V89 + V23;
ENDPROC;
PROCEDURE L257 USES DEVICE_DATA, TEMP_DATA, L30, L287, L276
, L218, L303, L243
;
IF (V107 == 0) THEN GOTO L271;
CALL L30;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L258;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L258:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L271;
IF (V106 && (V75 == 0)) THEN
GOTO L263;
IF (V4 != 256) THEN GOTO L262;
CALL L287;
V11 = 1;
CALL L218;
b = 0;
CALL L303;
IF (USE_REV0_PROG_ALG) THEN GOTO L260;
A18[9..0] = $016;
CALL L276;
GOTO L261;
L260:
A18[9..0] = $012;
V91 = 1;
CALL L276;
V91 = 0;
L261:
V44 = 1;
CALL L243;
b = 1;
CALL L303;
GOTO L263;
L262:
V11 = 0;
L263:
IF (!V106) THEN GOTO L271;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L276;
CALL L30;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L266;
IF ((A17[i] & 16) != 0) THEN GOTO L264;
A17[i] = A17[i] | 16;
GOTO L265;
L264:
A17[i] = A17[i] & ~16;
L265:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L266:
NEXT i;
IF (V75 == 0) THEN GOTO L271;
IF (V4 != 256) THEN GOTO L270;
CALL L287;
V11 = 1;
CALL L218;
b = 0;
CALL L303;
IF (USE_REV0_PROG_ALG) THEN GOTO L268;
A18[9..0] = $016;
CALL L276;
GOTO L269;
L268:
A18[9..0] = $012;
V91 = 1;
CALL L276;
V91 = 0;
L269:
V44 = 1;
CALL L243;
b = 1;
CALL L303;
GOTO L271;
L270:
V11 = 0;
L271:
V75 = 0;
ENDPROC;
PROCEDURE L272 USES DEVICE_DATA, TEMP_DATA
, L274
;
IF (V4 == 256) THEN CALL L274;
ENDPROC;
PROCEDURE L274 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0)) THEN
IF (A0[V2] > V32) THEN
V32 = A0[V2];
NEXT i;
ENDPROC;
PROCEDURE L276 USES DEVICE_DATA, TEMP_DATA;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L277;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L277;
V27 = 50;
A32[49..0] = A30[49..0];
L277:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L278;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L280;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L281;
L278:
IF ((A17[i] & 2) != 0) THEN GOTO L279;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L281;
L279:
IF (!V57) THEN GOTO L280;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L281;
L280:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
L281:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L282;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L282:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L283;
STATE IDLE;
WAIT 3 CYCLES;
L283:
ENDPROC;
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L288;
V2 = A12[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L289;
L288:
IF (V74) THEN A30[V24] = 0;
L289:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L303 USES DEVICE_DATA, TEMP_DATA;
j = 0;
l = 0;
IF (V75) THEN l = 1;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 256) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L304;
V2 = A12[i];
k = k + (A5[V2] - 1);
V27 = (80 * (A6[V2] >> 1)) + A52[i] -
A51[V2 - 13] - 1 + l;
IF (V75 && ((V2 == 13) || (V2 == 19) || (V2 == 23))) THEN V27 = V27 - 2;
A30[V27 + j] = b;
L304:
j = k + 1;
NEXT i;
ENDPROC;
PROCEDURE L311 USES DEVICE_DATA, TEMP_DATA;
INTEGER V93 = V48;
IF ((V2 != 16) && (V2 != 18) && (V2 != 22) && (V2 != 26) && (V2 != 27)) THEN GOTO L312;
V93 = V93 >> 1;
IF (((V48 & 3) % 3) != 0) THEN
V93 = V93 | (A6[V2] >> 2);
L312:
V48 = V93;
ENDPROC;
' END OF FILE
CRC A72A;
