%/* FILE NAME        adrdkdd1.TDF                                           */%
% * PURPOSE          Subdesign file for 8633 V54 address decoder.           */%
% *                                                                         */%
% * TEST                                                                    */%
% * LAST UPDT:       26.09.2002                                             */%
% * NOTES:                                                                  */%
%          ldstatus: 0x8000 - 0x87FF  V73 StatusPort                          %
%          ldlsbph:  0x8800 - 0x8FFF  V71 LineOffsetReg low /* OffsetPortL */ %
%          ldmsbph:  0x9000 - 0x97FF  V72 LineOffsetReg hi  /* OffsetPortH */ %
%          ldpage:   0x9800 - 0x9FFF  unused                                  %
%          enprom:   0x8000 - 0xFFFF  V53 PROM Enable                         %
%          lnrlsb:   0xA000 - 0xA7FF  V65 LineTypeReg low   /* LinePortL */   %
%          lnrmsb:   0xA800 - 0xAFFF  V66 LineTypeReg hi    /* LinePortH */   %
%          ldtxtram: 0xB000 - 0xBFFF  TextPort[512]                           %
%          dualram:  0xC000 - 0xC7FF  TextStatusPort                          %
%                                                                             %
%          Modified for 2 x 64 k Sound RAM:                                   %
%          New chip select constructed: csram1_1, csram2_2, wrram1_1          %
%          and wrram2_2.  Chip select select now as follows:                  %
%          csram1:     0x00000 - 0x07FFF  V56   SoundRam read low             %
%          csram2:     0x08000 - 0x0FFFF  v57   SoundRam read hi              %
%          wrram1:     0x00000 - 0x07FFF  V56   SoundRam write low            %
%          wrram2:     0x08000 - 0x0FFFF  v57   SoundRam write hi             %
%          csram3:     0x10000 - 0x17FFF  V56_2 SoundRam read low             %
%          csram4:     0x18000 - 0x1FFFF  v57_2 SoundRam read hi              %
%          wrram3:     0x10000 - 0x17FFF  V56_2 SoundRam write low            %
%          wrram4:     0x18000 - 0x1FFFF  v57_2 SoundRam write hi             %
%                                                                             %
%          New pins introduced:                                               %
%          csram3 pin 46                                                      %
%          csram4 pin 41                                                      %
%          wrram3 pin 39                                                      %
%          wrram4 pin 79                                                      %
% */                                                                        */%


SUBDESIGN adrdkdd1
(
	f8_g,f4_m,fh_g,fh_m,rdcb,wrcb,ps:					input;
	syssel,a11,a12,a13,a14,a15,psen,a16,a17,a18,a19:	input;

  window:                                           input;

	sys_h,vint,ldlsbph,ldmsbph,ldtxtram:				output;
	ldstatus,enprom,csram1,csram2,wrram1,wrram2:		output;
	lnrlsb,lnrmsb,csram,wrram,page1,ldpage:				output;
	psbuf,dualram:										output;

  csram3,csram4,wrram3,wrram4:                      output;

)

BEGIN
	sys_h = (fh_g & !syssel) # (fh_m & syssel);	
	vint = (f8_g & !syssel) # (f4_m & syssel);
	ldstatus = !(!ps & !a11 & !a12 & !a13 & !a14 & a15 & !wrcb);
	ldlsbph = !(!ps & a11 & !a12 & !a13 & !a14 & a15 & !wrcb);
	ldmsbph = !(!ps & !a11 & a12 & !a13 & !a14 & a15 & !wrcb);

%	ldpage = !(a11 & a12 & !a13 & !a14 & a15 & !wrcb); %

	enprom = psen & (rdcb # (a15 & !a16 & !a17 & !a18));
	page1 = !ps;
	lnrlsb = !(!ps & !a11 & !a12 & a13 & !a14 & a15 & !wrcb);
	lnrmsb = !(!ps & a11 & !a12 & a13 & !a14 & a15 & !wrcb);
	ldtxtram = !(!ps & !a11 & a12 & a13 & !a14 & a15 & (wrcb XOR rdcb));

  wrram1   = (wrcb # !ps #  a15 # a16 # !psen);
  wrram2   = (wrcb # !ps # !a15 # a16 # !psen);

  wrram3   = (wrcb # !ps #  a15 # !a16 # !psen);
  wrram4   = (wrcb # !ps # !a15 # !a16 # !psen);

  IF ps == 1 THEN
    csram1   = ps & !(ps & !a15 & !a16 & psen);
    csram2   = ps & !(ps &  a15 & !a16 & psen);  
    csram3   = ps & !(ps & !a15 &  a16 & psen);
    csram4   = ps & !(ps &  a15 &  a16 & psen);  
  ELSE
    IF window == 1 THEN   
      csram1   = VCC;
      csram2   = VCC;
      csram3   = GND;
      csram3   = GND;
    ELSE
      csram1   = GND;
      csram2   = GND;
      csram3   = VCC;
      csram4   = VCC;
    END IF;
  END IF;

	csram = ps & !(ps & !a15 & psen);
	wrram = (wrcb # !ps # !a15 # !psen);
	psbuf = ps;
	dualram = !(!ps & !a11 & !a12 & !a13 & a14 & a15 & !wrcb);
END;

