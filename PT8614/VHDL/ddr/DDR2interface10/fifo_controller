library ieee; 
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

-- pragma translate_off
library UNISIM;use UNISIM.VCOMPONENTS.ALL;
-- pragma translate_on
--

entity fifo_controller is
port(    
	reset	            : in std_logic;
	clk	                : in std_logic;
	
	data_in 			: in  std_logic_vector(31 downto 0);
	output_enable		: in  std_logic;
	
	data_out			: out std_logic_vector(19 downto 0);
	ram_req				: out std_logic;
	
	
fifo2_reg: process(clk, reset)
begin
    if reset = '0' then	
       
    elsif clk'event and clk = '1' then
    end if;
end process;


fifo2_combi: process(current_fifo2_state, output_en, )
begin
	if output_en then
		case current_fifo2_state is
		when S0 =>
			next_data_out <= fifo2_data(0)(19 downto 0);
			next_fifo2_state <= S1;
			next_read <= '0';
		when S1 =>
			next_data_out <= fifo2_data(0)(32 downto 20) & fifo2_data(1)(7 downto 0);
			next_fifo2_state <= S2;
			next_read <= '1';
		when S2 =>