Usage: 
     cxa [ [option] ... [file] ... ] ...

Summary of options:
     -?                  display options
     -A[a...z|0|1]       control language extensions
                         lower case enables, upper case disables
                           c - character arithmetic
                           d - define storage for uninitialized constant rom
                               data, instead of implicit zero initialization
                           k - keyword language extensions (_far, _huge, _bit, ..)
                           l - 500 significant characters in an identifier
                           p - C++ style comments
                           s - define __STDC__ macro as 0
                           t - don't promote old-style function parameters
                           u - use type 'unsigned char' for 0x80-0xff
                           v - type cast of lvalue with incomplete type
                           x - don't check assignment of constant string to
                               non constant string pointer
                           0 - same as -ACDKLPSTUVX or -A (strict ANSI-C)
                           1 - same as -Acdklpstuvx (default)
     -C<cpu>             use special function register definitions for cpu
     -Dmac[=def]         define preprocessor macro
     -E[ml]              preprocess only
                           m - or generate dependencies for make
                           l - and enable multi-line macros
     -F                  treat 'double' as 'float'
     -Fc                 enable 'float' constants
     -H<file>            add extra include file
     -I<dir>             add search path for include files
     -M{tsml}            select data memory model:
                           t - tiny (default)
                           s - small
                           m - medium
                           l - large
     -O[a...z|0|1|2]     control optimization
                         lower case enables, upper case disables
                           a - relax alias checking
                           b - no clearing of non-initialized static and
                               public variables
                           c - common subexpression elimination
                           d - data flow, constant/copy propagation
                           e - expression propagation
                           f - code flow order rearranging
                           h - peephole optimizations
                           i - move invariant code outside a loop
                           l - fast loops (increases code size)
                           s - small code size
                           t - force jump table for switch statements
                           u - loop unrolling
                           v - subscript strength reduction
                           w - smart switch code selection (table or chain)
                           0 - same as -OABCDEFHILSTUVW (no optimization)
                           1 - same as -OaBcdefhiLsTUvw (default, size)
                           2 - same as -OaBcdefhilSTUvw (speed)
     -R<mem>=<new>       change section name
     -S{o|d|c}           string and const allocation
                           o - in ROM and copy to RAM (default)
                           d - in ROM data space only
                           c - strings in ROM code space only
                               const in ROM and copy to RAM
     -U<mac>             remove preprocessor macro
     -V                  display version header only
     -e                  remove output files after errors
     -err                redirect stderr to <input-file>.err
     -f<file>            read options from <file>
     -g[fln]             enable symbolic debug information (unless -gn used)
                           f - force type info for non referenced types
                           l - disable lifetime info for all types
                           n - disable all debug, including type checking
     -n                  output to stdout
     -o<file>            specify output filename
     -s                  merge source code with assembly output
     -t                  display lines/min
     -u                  treat 'char' unsigned
     -v                  do not generate interrupt vectors
     -w[n]               suppress one or all warning messages
