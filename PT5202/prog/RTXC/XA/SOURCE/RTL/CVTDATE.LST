XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
D:\PROJECT\pt5201\master\source\RTXC\XA\SOURCE\RTL\cc713f6b.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -e -gn -O2 -err -Ic:\cxa\\include -I..\..\include -s -Cxag3 -Ml
                          4 $NOZPAGE
                          5         NAME    CVTDATE
                          6 ; cvtdate.c    1        /* cvtdate.c - date/time functions */
                          7 ; cvtdate.c    2        
                          8 ; cvtdate.c    3        /*
                          9 ; cvtdate.c    4         *   RTXCio    
                         10 ; cvtdate.c    5         *   Copyright (c) 
                         11 ; cvtdate.c    6         *   Embedded System Products, Inc.
                         12 ; cvtdate.c    7         *   ALL RIGHTS RESERVED
                         13 ; cvtdate.c    8        */
                         14 ; cvtdate.c    9        
                         15 ; cvtdate.c   10        
                         16 ; cvtdate.c   11        // Corrected by TK 990901 from  "  25202L; "  to  "  25203L; "  Basetime 
                            offset.
                         17 ; cvtdate.c   12        
                         18 ; cvtdate.c   13        
                         19 ; cvtdate.c   14        #include "typedef.h"
                         20 ; cvtdate.c   15        
                         21 ; cvtdate.c   16        struct time_tm
                         22 ; cvtdate.c   17        {
                         23 ; cvtdate.c   18           int tm_yr;
                         24 ; cvtdate.c   19           int tm_mon;
                         25 ; cvtdate.c   20           int tm_day;
                         26 ; cvtdate.c   21           int tm_wday;
                         27 ; cvtdate.c   22           int tm_sec;
                         28 ; cvtdate.c   23           int tm_min;
                         29 ; cvtdate.c   24           int tm_hr;
                         30 ; cvtdate.c   25           int tm_isdst;
                         31 ; cvtdate.c   26        };
                         32 ; cvtdate.c   27        
                         33 ; cvtdate.c   28        #define SECS_PER_MIN  (60L)
                         34 ; cvtdate.c   29        #define MINS_PER_HOUR (60L)
                         35 ; cvtdate.c   30        #define SECS_PER_HOUR (MINS_PER_HOUR * SECS_PER_MIN)
                         36 ; cvtdate.c   31        #define HOURS_PER_DAY (24L)
                         37 ; cvtdate.c   32        #define SECS_PER_DAY  (HOURS_PER_DAY * SECS_PER_HOUR)
                         38 ; cvtdate.c   33        #define DAYS_PER_YEAR (365L)
                         39 ; cvtdate.c   34        
                         40 ; cvtdate.c   35        /*
                         41 ; cvtdate.c   36        
                         42 ; cvtdate.c   37             Function to compute a time_t value when given the calendar time in
                         43 ; cvtdate.c   38             a  time structure.  The pointer to the time structure is passed as
                         44 ; cvtdate.c   39             the argument to the function.
                         45 ; cvtdate.c   40        
                         46 ; cvtdate.c   41        */
                         47 ; cvtdate.c   42        
                         48 ; cvtdate.c   43        time_t date2systime(struct time_tm *p)
                         49 ; cvtdate.c   44        {
                         50         PUBLIC  _date2systime
000000                   51 CVTDATE_PR      SEGMENT HCODE
000000                   52         RSEG    CVTDATE_PR
000000                   52         RSEG    CVTDATE_PR
000000                   53 _date2systime:
000000 0F30              54         PUSH.W  R4, R5
000002 9972000C          55         SUB.W   R7,#0CH
                         56 ; cvtdate.c   45           long j;
                         57 ; cvtdate.c   46        
                         58 ; cvtdate.c   47           j = (long)(p->tm_yr - 1901) * DAYS_PER_YEAR + (p->tm_yr - 1901) / 4 +
                         59 ; cvtdate.c   48               ((p->tm_mon * 30L) + (p->tm_mon * 145L) / 256) + p->tm_day - 30;
000006 8C1F0A            60         MOV.W   [R7+10],R1
000009 8C0F08            61         MOV.W   [R7+8],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
00000C 862C42            62         MOV.B   ES,R1L
00000F 8A40              63         MOV.W   R4,[R0]
000011 8954              64         MOV.W   R5,R4
000013 9952076D          65         SUB.W   R5,#076DH
000017 8925              66         MOV.W   R2,R5
000019 9839              67         SEXT.W  R3
00001B 8913              68         MOV.W   R1,R3
00001D 8902              69         MOV.W   R0,R2
00001F DD02              70         ASL.D   R0,#02H
000021 2902              71         SUB.W   R0,R2
000023 3913              72         SUBB.W  R1,R3
000025 DD03              73         ASL.D   R0,#03H
000027 2902              74         SUB.W   R0,R2
000029 3913              75         SUBB.W  R1,R3
00002B DD02              76         ASL.D   R0,#02H
00002D 2902              77         SUB.W   R0,R2
00002F 3913              78         SUBB.W  R1,R3
000031 DD02              79         ASL.D   R0,#02H
000033 0902              80         ADD.W   R0,R2
000035 1913              81         ADDC.W  R1,R3
000037 8925              82         MOV.W   R2,R5
000039 8932              83         MOV.W   R3,R2
00003B 9839              84         SEXT.W  R3
00003D E9290004          85         DIV.D   R2,#04H
000041 8922              86         MOV.W   R2,R2
000043 9839              87         SEXT.W  R3
000045 0902              88         ADD.W   R0,R2
000047 1913              89         ADDC.W  R1,R3
000049 8C1F06            90         MOV.W   [R7+6],R1
00004C 8C0F04            91         MOV.W   [R7+4],R0
00004F 8C170A            92         MOV.W   R1,[R7+10]
000052 8C0708            93         MOV.W   R0,[R7+8]
000055 862C42            94         MOV.B   ES,R1L
000058 8C0002            95         MOV.W   R0,[R0+2]
00005B 9819              96         SEXT.W  R1
00005D 8931              97         MOV.W   R3,R1
00005F 8920              98         MOV.W   R2,R0
000061 DD24              99         ASL.D   R2,#04H
000063 2920             100         SUB.W   R2,R0
000065 3931             101         SUBB.W  R3,R1
000067 DD21             102         ASL.D   R2,#01H
000069 8C3F02           103         MOV.W   [R7+2],R3
00006C 8A2F             104         MOV.W   [R7],R2
00006E 8931             105         MOV.W   R3,R1
000070 8920             106         MOV.W   R2,R0
000072 DD23             107         ASL.D   R2,#03H
000074 0920             108         ADD.W   R2,R0
000076 1931             109         ADDC.W  R3,R1
000078 DD24             110         ASL.D   R2,#04H
00007A 0920             111         ADD.W   R2,R0
00007C 1931             112         ADDC.W  R3,R1
00007E 8913             113         MOV.W   R1,R3
000080 8902             114         MOV.W   R0,R2
000082 B930             115         MOV.W   R3,#00H
000084 99280100         116         MOV.W   R2,#0100H
000088 C4rrrrrr         117         FCALL   __SDIVL
00008C 8C3702           118         MOV.W   R3,[R7+2]
00008F 8A27             119         MOV.W   R2,[R7]
000091 0902             120         ADD.W   R0,R2
000093 1913             121         ADDC.W  R1,R3
000095 8C3706           122         MOV.W   R3,[R7+6]
000098 8C2704           123         MOV.W   R2,[R7+4]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
00009B 0920             124         ADD.W   R2,R0
00009D 1931             125         ADDC.W  R3,R1
00009F 8C170A           126         MOV.W   R1,[R7+10]
0000A2 8C0708           127         MOV.W   R0,[R7+8]
0000A5 862C42           128         MOV.B   ES,R1L
0000A8 8C0004           129         MOV.W   R0,[R0+4]
0000AB 9819             130         SEXT.W  R1
0000AD 0920             131         ADD.W   R2,R0
0000AF 1931             132         ADDC.W  R3,R1
0000B1 9922001E         133         SUB.W   R2,#01EH
0000B5 99330000         134         SUBB.W  R3,#00H
0000B9 8C3F06           135         MOV.W   [R7+6],R3
0000BC 8C2F04           136         MOV.W   [R7+4],R2
0000BF 8913             137         MOV.W   R1,R3
0000C1 8902             138         MOV.W   R0,R2
                        139 ; cvtdate.c   49        
                        140 ; cvtdate.c   50           if (p->tm_mon >= 3) /* february */
0000C3 8C370A           141         MOV.W   R3,[R7+10]
0000C6 8C2708           142         MOV.W   R2,[R7+8]
0000C9 866C42           143         MOV.B   ES,R3L
0000CC 9C24020003       144         CMP.W   [R2+2],#03H
0000D1 FB0F             145         BLT     _4
                        146 ; cvtdate.c   51           {
                        147 ; cvtdate.c   52              j--;
0000D3 8C1706           148         MOV.W   R1,[R7+6]
0000D6 8C0704           149         MOV.W   R0,[R7+4]
0000D9 99020001         150         SUB.W   R0,#01H
0000DD 99130000         151         SUBB.W  R1,#00H
                        152 ; cvtdate.c   53              if (p->tm_yr & 0x0003)
0000E1 99450003         153         AND.W   R4,#03H
0000E5 F305             154         BEQ     _4
                        155 ; cvtdate.c   54                 j--;
0000E7 99020001         156         SUB.W   R0,#01H
0000EB 99130000         157         SUBB.W  R1,#00H
0000EB 9913000000       157         SUBB.W  R1,#00H
                        158 ; cvtdate.c   55           }
0000F0                  159 _4:
                        160 ; cvtdate.c   56           j -= 25203L; /* adjust for base date of 1-Jan-1970 */
0000F0 99026273         161         SUB.W   R0,#06273H
0000F4 99130000         162         SUBB.W  R1,#00H
0000F8 8931             163         MOV.W   R3,R1
0000FA 8920             164         MOV.W   R2,R0
                        165 ; cvtdate.c   57        
                        166 ; cvtdate.c   58           if (p->tm_isdst)
0000FC 8C170A           167         MOV.W   R1,[R7+10]
0000FF 8C0708           168         MOV.W   R0,[R7+8]
000102 862C42           169         MOV.B   ES,R1L
000105 8C000E           170         MOV.W   R0,[R0+14]
000108 F306             171         BEQ     _5
                        172 ; cvtdate.c   59              p->tm_hr--;
00010A 8C170A           173         MOV.W   R1,[R7+10]
00010D 8C0708           174         MOV.W   R0,[R7+8]
000110 862C42           175         MOV.B   ES,R1L
000113 AC0F0C           176         ADDS.W  [R0+12],#0FH
000113 AC0F0C           176         ADDS.W  [R0+12],#0FH
000116                  177 _5:
                        178 ; cvtdate.c   60        
                        179 ; cvtdate.c   61           j = ((((long)j * HOURS_PER_DAY) + (long)p->tm_hr) * 60L +
                        180 ; cvtdate.c   62                   (long)p->tm_min) * 60L + (long)p->tm_sec;
000116 8913             181         MOV.W   R1,R3
000118 8902             182         MOV.W   R0,R2
00011A DD02             183         ASL.D   R0,#02H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00011C 2902             184         SUB.W   R0,R2
00011E 3913             185         SUBB.W  R1,R3
000120 DD03             186         ASL.D   R0,#03H
000122 8C370A           187         MOV.W   R3,[R7+10]
000125 8C2708           188         MOV.W   R2,[R7+8]
000128 866C42           189         MOV.B   ES,R3L
00012B 8C220C           190         MOV.W   R2,[R2+12]
00012E 9839             191         SEXT.W  R3
000130 0902             192         ADD.W   R0,R2
000132 1913             193         ADDC.W  R1,R3
000134 8931             194         MOV.W   R3,R1
000136 8920             195         MOV.W   R2,R0
000138 DD24             196         ASL.D   R2,#04H
00013A 2920             197         SUB.W   R2,R0
00013C 3931             198         SUBB.W  R3,R1
00013E DD22             199         ASL.D   R2,#02H
000140 8C170A           200         MOV.W   R1,[R7+10]
000143 8C0708           201         MOV.W   R0,[R7+8]
000146 862C42           202         MOV.B   ES,R1L
000149 8C000A           203         MOV.W   R0,[R0+10]
00014C 9819             204         SEXT.W  R1
00014E 0920             205         ADD.W   R2,R0
000150 1931             206         ADDC.W  R3,R1
000152 8913             207         MOV.W   R1,R3
000154 8902             208         MOV.W   R0,R2
000156 DD04             209         ASL.D   R0,#04H
000158 2902             210         SUB.W   R0,R2
00015A 3913             211         SUBB.W  R1,R3
00015C DD02             212         ASL.D   R0,#02H
00015E 8C370A           213         MOV.W   R3,[R7+10]
000161 8C2708           214         MOV.W   R2,[R7+8]
000164 866C42           215         MOV.B   ES,R3L
000167 8C2208           216         MOV.W   R2,[R2+8]
00016A 9839             217         SEXT.W  R3
00016C 0902             218         ADD.W   R0,R2
00016E 1913             219         ADDC.W  R1,R3
                        220 ; cvtdate.c   63        
                        221 ; cvtdate.c   64           return(j);
                        222 ; cvtdate.c   65        }
000170 9970000C         223         ADD.W   R7,#0CH
000174 2F30             224         POP.W   R4, R5
000176 D680             225         RET
000176 D680             225         RET
                        226 ; cvtdate.c   66        
                        227 ; cvtdate.c   67        /*
                        228 ; cvtdate.c   68         
                        229 ; cvtdate.c   69             Function  to compute  the members  of the  time structure  given a
                        230 ; cvtdate.c   70             time_t.  The function fills in the members of the structure except
                        231 ; cvtdate.c   71             for  the isdst  flag indicating  if the  current time  is Daylight
                        232 ; cvtdate.c   72             Savings Time  (DST) which  must be  supplied by  the caller.   The
                        233 ; cvtdate.c   73             calendar is accurate until Monday, 18-Jan-2038 at 3:14:07.
                        234 ; cvtdate.c   74         
                        235 ; cvtdate.c   75        */
                        236 ; cvtdate.c   76        
                        237 ; cvtdate.c   77        void systime2date(time_t n, struct time_tm *p)
                        238 ; cvtdate.c   78        {
                        239         PUBLIC  _systime2date
000178                  240 _systime2date:
000178 0F70             241         PUSH.W  R4, R5, R6
00017A A978             242         ADDS.W  R7,#08H
                        243 ; cvtdate.c   79           time_t systime;
                        244 ; cvtdate.c   80        
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
                        245 ; cvtdate.c   81           if (p->tm_isdst)
00017C 8C3F06           246         MOV.W   [R7+6],R3
00017F 8C2F04           247         MOV.W   [R7+4],R2
000182 866C42           248         MOV.B   ES,R3L
000185 8C220E           249         MOV.W   R2,[R2+14]
000188 F304             250         BEQ     _7
                        251 ; cvtdate.c   82              n += SECS_PER_HOUR;
00018A 99000E10         252         ADD.W   R0,#0E10H
00018E 99110000         253         ADDC.W  R1,#00H
00018E 99110000         253         ADDC.W  R1,#00H
000192                  254 _7:
                        255 ; cvtdate.c   83        
                        256 ; cvtdate.c   84           systime = n / SECS_PER_DAY;  /* divide time by 86400 to get day number
                             */
000192 B931             257         MOV.W   R3,#01H
000194 99285180         258         MOV.W   R2,#05180H
000198 8951             259         MOV.W   R5,R1
00019A 8940             260         MOV.W   R4,R0
00019C C4rrrrrr         261         FCALL   __SDIVL
0001A0 8931             262         MOV.W   R3,R1
0001A2 8920             263         MOV.W   R2,R0
                        264 ; cvtdate.c   85           n -= systime * SECS_PER_DAY; /* leaves the time-of-day in number of se
                            conds */
0001A4 8C3F02           265         MOV.W   [R7+2],R3
0001A7 8A2F             266         MOV.W   [R7],R2
0001A9 8913             267         MOV.W   R1,R3
0001AB 8902             268         MOV.W   R0,R2
0001AD DD02             269         ASL.D   R0,#02H
0001AF 0902             270         ADD.W   R0,R2
0001B1 1913             271         ADDC.W  R1,R3
0001B3 DD02             272         ASL.D   R0,#02H
0001B5 0902             273         ADD.W   R0,R2
0001B7 1913             274         ADDC.W  R1,R3
0001B9 DD03             275         ASL.D   R0,#03H
0001BB 0902             276         ADD.W   R0,R2
0001BD 1913             277         ADDC.W  R1,R3
0001BF DD02             278         ASL.D   R0,#02H
0001C1 2902             279         SUB.W   R0,R2
0001C3 3913             280         SUBB.W  R1,R3
0001C5 DD07             281         ASL.D   R0,#07H
0001C7 2940             282         SUB.W   R4,R0
0001C9 3951             283         SUBB.W  R5,R1
0001CB 8915             284         MOV.W   R1,R5
0001CD 8904             285         MOV.W   R0,R4
                        286 ; cvtdate.c   86        
                        287 ; cvtdate.c   87           p->tm_hr = (int)(n / SECS_PER_HOUR);
0001CF B930             288         MOV.W   R3,#00H
0001D1 99280E10         289         MOV.W   R2,#0E10H
0001D5 8951             290         MOV.W   R5,R1
0001D7 8940             291         MOV.W   R4,R0
0001D9 C4rrrrrr         292         FCALL   __SDIVL
0001DD 8C3706           293         MOV.W   R3,[R7+6]
0001E0 8C2704           294         MOV.W   R2,[R7+4]
0001E3 866C42           295         MOV.B   ES,R3L
0001E6 8C0A0C           296         MOV.W   [R2+12],R0
                        297 ; cvtdate.c   88        
                        298 ; cvtdate.c   89           n -= (long)p->tm_hr * SECS_PER_HOUR;
0001E9 8920             299         MOV.W   R2,R0
0001EB 9839             300         SEXT.W  R3
0001ED 8913             301         MOV.W   R1,R3
0001EF 8902             302         MOV.W   R0,R2
0001F1 DD03             303         ASL.D   R0,#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
0001F3 2902             304         SUB.W   R0,R2
0001F5 3913             305         SUBB.W  R1,R3
0001F7 DD05             306         ASL.D   R0,#05H
0001F9 0902             307         ADD.W   R0,R2
0001FB 1913             308         ADDC.W  R1,R3
0001FD DD04             309         ASL.D   R0,#04H
0001FF 2940             310         SUB.W   R4,R0
000201 3951             311         SUBB.W  R5,R1
000203 8915             312         MOV.W   R1,R5
000205 8904             313         MOV.W   R0,R4
                        314 ; cvtdate.c   90           p->tm_min = (int)(n / MINS_PER_HOUR);
000207 B930             315         MOV.W   R3,#00H
000209 9928003C         316         MOV.W   R2,#03CH
00020D 8951             317         MOV.W   R5,R1
00020F 8940             318         MOV.W   R4,R0
000211 C4rrrrrr         319         FCALL   __SDIVL
000215 8C3706           320         MOV.W   R3,[R7+6]
000218 8C2704           321         MOV.W   R2,[R7+4]
00021B 866C42           322         MOV.B   ES,R3L
00021E 8C0A0A           323         MOV.W   [R2+10],R0
                        324 ; cvtdate.c   91        
                        325 ; cvtdate.c   92           p->tm_sec = (int)(n - (long)p->tm_min * MINS_PER_HOUR);
000221 E900003C         326         MULU.W  R0,#03CH
000225 2940             327         SUB.W   R4,R0
000227 8913             328         MOV.W   R1,R3
000229 8902             329         MOV.W   R0,R2
00022B 862C42           330         MOV.B   ES,R1L
00022E 8C4808           331         MOV.W   [R0+8],R4
                        332 ; cvtdate.c   93        
                        333 ; cvtdate.c   94           systime += 25203L; /* adjust for base date of 1-Jan-1970 */
000231 8C3702           334         MOV.W   R3,[R7+2]
000234 8A27             335         MOV.W   R2,[R7]
000236 99206273         336         ADD.W   R2,#06273H
00023A 99310000         337         ADDC.W  R3,#00H
                        338 ; cvtdate.c   95           n = (systime * 1000L) / 365251L; /* 365.251 days/year - the hard way *
                            /
00023E 8C3F02           339         MOV.W   [R7+2],R3
000241 8A2F             340         MOV.W   [R7],R2
000243 8913             341         MOV.W   R1,R3
000245 8902             342         MOV.W   R0,R2
000247 DD05             343         ASL.D   R0,#05H
000249 2902             344         SUB.W   R0,R2
00024B 3913             345         SUBB.W  R1,R3
00024D DD02             346         ASL.D   R0,#02H
00024F 0902             347         ADD.W   R0,R2
000251 1913             348         ADDC.W  R1,R3
000253 DD03             349         ASL.D   R0,#03H
000255 B935             350         MOV.W   R3,#05H
000257 992892C3         351         MOV.W   R2,#092C3H
00025B C4rrrrrr         352         FCALL   __SDIVL
                        353 ; cvtdate.c   96        
                        354 ; cvtdate.c   97           p->tm_yr = 1901 + (int)n;
00025F 8931             355         MOV.W   R3,R1
000261 8920             356         MOV.W   R2,R0
000263 8962             357         MOV.W   R6,R2
000265 9960076D         358         ADD.W   R6,#076DH
000269 8C3706           359         MOV.W   R3,[R7+6]
00026C 8C2704           360         MOV.W   R2,[R7+4]
00026F 866C42           361         MOV.B   ES,R3L
000272 8A6A             362         MOV.W   [R2],R6
                        363 ; cvtdate.c   98           if ((n = systime - n * 36525L / 100L + 30) >= 90)
000274 B930             364         MOV.W   R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
000276 99288EAD         365         MOV.W   R2,#08EADH
00027A C4rrrrrr         366         FCALL   __MULL
00027E B930             367         MOV.W   R3,#00H
000280 99280064         368         MOV.W   R2,#064H
000284 C4rrrrrr         369         FCALL   __SDIVL
000288 8C3702           370         MOV.W   R3,[R7+2]
00028B 8A27             371         MOV.W   R2,[R7]
00028D 2920             372         SUB.W   R2,R0
00028F 3931             373         SUBB.W  R3,R1
000291 8913             374         MOV.W   R1,R3
000293 8902             375         MOV.W   R0,R2
000295 9900001E         376         ADD.W   R0,#01EH
000299 99110000         377         ADDC.W  R1,#00H
00029D 8951             378         MOV.W   R5,R1
00029F 8940             379         MOV.W   R4,R0
0002A1 99540000         380         CMP.W   R5,#00H
0002A5 FB19             381         BLT     _11
0002A7 FC04             382         BGT     _14
0002A9 9944005A         383         CMP.W   R4,#05AH
0002AD F115             384         BCS     _11
0002AD F11500           384         BCS     _11
0002B0                  385 _14:
                        386 ; cvtdate.c   99           {
                        387 ; cvtdate.c  100              if ((p->tm_yr & 0x0003) != 0)
0002B0 99650003         388         AND.W   R6,#03H
0002B4 F307             389         BEQ     _8
                        390 ; cvtdate.c  101                 n = n + 2;
0002B6 99000002         391         ADD.W   R0,#02H
0002BA 99110000         392         ADDC.W  R1,#00H
0002BE 8951             393         MOV.W   R5,R1
0002C0 8940             394         MOV.W   R4,R0
0002C2 FE0A             395         BR      _11
0002C2 FE0A             395         BR      _11
0002C4                  396 _8:
                        397 ; cvtdate.c  102              else if (n != 90)
0002C4 99540000         398         CMP.W   R5,#00H
0002C8 F202             399         BNE     _15
0002CA 9944005A         400         CMP.W   R4,#05AH
0002CA 9944005A         400         CMP.W   R4,#05AH
0002CE                  401 _15:
0002CE F304             402         BEQ     _11
                        403 ; cvtdate.c  103                 n++;
0002D0 99400001         404         ADD.W   R4,#01H
0002D4 99510000         405         ADDC.W  R5,#00H
0002D4 99510000         405         ADDC.W  R5,#00H
                        406 ; cvtdate.c  104           }
0002D8                  407 _11:
                        408 ; cvtdate.c  105        
                        409 ; cvtdate.c  106           p->tm_mon = (int)(n * 100L / 3057L); /* 30.57 days/mo - the hard way *
                            /
0002D8 8915             410         MOV.W   R1,R5
0002DA 8904             411         MOV.W   R0,R4
0002DC DD02             412         ASL.D   R0,#02H
0002DE 2904             413         SUB.W   R0,R4
0002E0 3915             414         SUBB.W  R1,R5
0002E2 DD03             415         ASL.D   R0,#03H
0002E4 0904             416         ADD.W   R0,R4
0002E6 1915             417         ADDC.W  R1,R5
0002E8 DD02             418         ASL.D   R0,#02H
0002EA B930             419         MOV.W   R3,#00H
0002EC 99280BF1         420         MOV.W   R2,#0BF1H
0002F0 C4rrrrrr         421         FCALL   __SDIVL
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
0002F4 8C3706           422         MOV.W   R3,[R7+6]
0002F7 8C2704           423         MOV.W   R2,[R7+4]
0002FA 866C42           424         MOV.B   ES,R3L
0002FD 8C0A02           425         MOV.W   [R2+2],R0
                        426 ; cvtdate.c  107        
                        427 ; cvtdate.c  108           p->tm_day = (int)(n - (p->tm_mon * 3057L) / 100L);
000300 8920             428         MOV.W   R2,R0
000302 9839             429         SEXT.W  R3
000304 8913             430         MOV.W   R1,R3
000306 8902             431         MOV.W   R0,R2
000308 DD02             432         ASL.D   R0,#02H
00030A 2902             433         SUB.W   R0,R2
00030C 3913             434         SUBB.W  R1,R3
00030E DD06             435         ASL.D   R0,#06H
000310 2902             436         SUB.W   R0,R2
000312 3913             437         SUBB.W  R1,R3
000314 DD04             438         ASL.D   R0,#04H
000316 0902             439         ADD.W   R0,R2
000318 1913             440         ADDC.W  R1,R3
00031A B930             441         MOV.W   R3,#00H
00031C 99280064         442         MOV.W   R2,#064H
000320 C4rrrrrr         443         FCALL   __SDIVL
000324 2940             444         SUB.W   R4,R0
000326 8C1706           445         MOV.W   R1,[R7+6]
000329 8C0704           446         MOV.W   R0,[R7+4]
00032C 862C42           447         MOV.B   ES,R1L
00032F 8C4804           448         MOV.W   [R0+4],R4
                        449 ; cvtdate.c  109        
                        450 ; cvtdate.c  110           if ((p->tm_wday = (int)(systime - ((systime / 7) * 7))) == 0)
000332 8C5702           451         MOV.W   R5,[R7+2]
000335 8A47             452         MOV.W   R4,[R7]
000337 B930             453         MOV.W   R3,#00H
000339 B927             454         MOV.W   R2,#07H
00033B 8C1702           455         MOV.W   R1,[R7+2]
00033E 8A07             456         MOV.W   R0,[R7]
000340 C4rrrrrr         457         FCALL   __SDIVL
000344 8910             458         MOV.W   R1,R0
000346 D913             459         ASL.W   R1,#03H
000348 2910             460         SUB.W   R1,R0
00034A 2941             461         SUB.W   R4,R1
00034C 8C3706           462         MOV.W   R3,[R7+6]
00034F 8C2704           463         MOV.W   R2,[R7+4]
000352 99200006         464         ADD.W   R2,#06H
000356 8C1706           465         MOV.W   R1,[R7+6]
000359 8C0704           466         MOV.W   R0,[R7+4]
00035C 862C42           467         MOV.B   ES,R1L
00035F 8C4806           468         MOV.W   [R0+6],R4
000362 6944             469         OR.W    R4,R4
000364 F203             470         BNE     _12
                        471 ; cvtdate.c  111              p->tm_wday = 7;
000366 862C42           472         MOV.B   ES,R1L
000369 BC0706           473         MOV.W   [R0+6],#07H
000369 BC0706           473         MOV.W   [R0+6],#07H
00036C                  474 _12:
                        475 ; cvtdate.c  112        
                        476 ; cvtdate.c  113           if ((p->tm_wday = p->tm_wday + 2) > 7)
00036C 866C42           477         MOV.B   ES,R3L
00036F 8A02             478         MOV.W   R0,[R2]
000371 A902             479         ADDS.W  R0,#02H
000373 866C42           480         MOV.B   ES,R3L
000376 AA22             481         ADDS.W  [R2],#02H
000378 99040007         482         CMP.W   R0,#07H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
00037C FD04             483         BLE     _13
                        484 ; cvtdate.c  114              p->tm_wday -= 7;
00037E A909             485         ADDS.W  R0,#09H
000380 866C42           486         MOV.B   ES,R3L
000383 8A0A             487         MOV.W   [R2],R0
000383 8A0A00           487         MOV.W   [R2],R0
000386                  488 _13:
                        489 ; cvtdate.c  115        }
000386 99700008         490         ADD.W   R7,#08H
00038A 2F70             491         POP.W   R4, R5, R6
00038C D680             492         RET
                        494         EXTRN   HCODE(__MULL)
                        495         EXTRN   HCODE(__SDIVL)
