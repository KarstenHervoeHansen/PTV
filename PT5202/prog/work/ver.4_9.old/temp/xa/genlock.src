; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\LT428\rtxc\xa\include -I. -Ml
;          -O2 -s
$CASE
$NOZPAGE
	NAME	GENLOCK
	SYMB	TOOL, "XA C compiler v2.0", 1
	SYMB	TYPE, 256, "bit", 'g', 0, 1
	SYMB	FILE, "genlock.c"
; genlock.c    1	/****************************************************************************/
; genlock.c    2	/* MODULE:                                                                  */
; genlock.c    3	/*  genlock.c - Genlock generator                                           */
; genlock.c    4	/****************************************************************************/
; genlock.c    5	/* FUNCTIONS:                                                               */
; genlock.c    6	/*                                                                          */
; genlock.c    7	/*	int GenlockInit( void)																									*/
; genlock.c    8	/*	int GenlockVersion( char* result)																				*/
; genlock.c    9	/*	int GenlockUpdate( void)																								*/
; genlock.c   10	/*	int SetGenlockSystem( int system)																				*/
; genlock.c   11	/*	int SetGenlockDelay( UL delay)																					*/	
; genlock.c   12	/*                                                                          */
; genlock.c   13	/* TASKS:                                                                   */
; genlock.c   14	/*                                                                          */
; genlock.c   15	/* NOTES: 20.11.01 - GenlockInit() MODIFIED: JK                             */
; genlock.c   16	/*                                                                          */
; genlock.c   17	/****************************************************************************/
; genlock.c   18	/*
; genlock.c   19	 *   PTV software for PT5201    
; genlock.c   20	 *   Copyright (c) 
; genlock.c   21	 *   ProTeleVision Technologies A/S.
; genlock.c   22	 *   ALL RIGHTS RESERVED
; genlock.c   23	*/
; genlock.c   24	/****************************************************************************/
; genlock.c   25	#include <string.h>
	SYMB	FILE, "c:\\LT428\\include\\string.h"
	SYMB	TYPE, 257, "size_t", 'T', #18
	SYMB	ENDF
; genlock.c   26	
; genlock.c   27	#include "define.h"        // Standard PTV defines
	SYMB	FILE, "define.h"
	SYMB	ENDF
; genlock.c   28	#include "genlock.h"
	SYMB	FILE, "genlock.h"
	SYMB	TYPE, 258, 'S', 6,\
		 "System", #3, 0,\
		 "Delay", #7, 2
	SYMB	TYPE, 259, "GenlockObject", 'T', #258
	SYMB	ENDF
; genlock.c   29	#include "tables.h"
	SYMB	FILE, "tables.h"
	SYMB	ENDF
; genlock.c   30	#include "led_hw.h"
	SYMB	FILE, "led_hw.h"
	SYMB	TYPE, 260, 'N',\
		 "true", -1,\
		 "false", 0
	SYMB	TYPE, 261, "bool", 'T', #260
	SYMB	ENDF
; genlock.c   31	#include "sio0drv.h"
	SYMB	FILE, "sio0drv.h"
	SYMB	FILE, "define.h"
	SYMB	ENDF
	SYMB	FILE, "rtxcobj.h"
	SYMB	FILE, "c:\\LT428\\rtxc\\xa\\include\\rtxcapi.h"
	SYMB	FILE, "c:\\LT428\\rtxc\\xa\\include\\typedef.h"
	SYMB	FILE, "c:\\LT428\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 262, "KOBJNUM", 'T', #3
	SYMB	TYPE, 263, "TASK", 'T', #2
	SYMB	ENDF
	SYMB	FILE, "c:\\LT428\\rtxc\\xa\\include\\rtxstruc.h"
	SYMB	FILE, "c:\\LT428\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 264, "KSNUM", 'T', #3
	SYMB	TYPE, 265, "PRIORITY", 'T', #263
	SYMB	TYPE, 266, "TSTATE", 'T', #5
	SYMB	TYPE, 267, "TSLICE", 'T', #3
	SYMB	TYPE, 269, 'n', #268, 130
	SYMB	TYPE, 270, 'P', #269
	SYMB	TYPE, 272, 'n', #271, 130
	SYMB	TYPE, 273, 'P', #272
	SYMB	TYPE, 274, 'n', #264, 130
	SYMB	TYPE, 275, 'P', #274
	SYMB	TYPE, 276, 'X', 12, #1, 30, 0
	SYMB	TYPE, 277, 'n', #276, 129
	SYMB	TYPE, 278, 'P', #277
	SYMB	TYPE, 279, "frame", 'S', 24,\
		 "es", #3, 0,\
		 "cs", #3, 1,\
		 "ssel", #3, 2,\
		 "ds", #3, 3,\
		 "pksnum", #275, 4,\
		 "R2", #18, 8,\
		 "R3", #18, 10,\
		 "R4", #18, 12,\
		 "R5", #18, 14,\
		 "R6", #18, 16,\
		 "psw", #18, 18,\
		 "pc", #278, 20
	SYMB	TYPE, 280, 'n', #279, 130
	SYMB	TYPE, 281, 'P', #280
	SYMB	TYPE, 282, 'X', 12, #1, 30, 0
	SYMB	TYPE, 283, 'n', #282, 129
	SYMB	TYPE, 284, 'P', #283
	SYMB	TYPE, 285, 'n', #2, 130
	SYMB	TYPE, 286, 'P', #285
	SYMB	TYPE, 287, 'n', #1, 130
	SYMB	TYPE, 288, 'P', #287
	SYMB	TYPE, 268, "tcb", 'S', 36,\
		 "flink", #270, 0,\
		 "blink", #270, 4,\
		 "pclkblk", #273, 8,\
		 "task", #263, 12,\
		 "priority", #265, 13,\
		 "sp", #281, 14,\
		 "status", #266, 18,\
		 "pc_t0", #284, 20,\
		 "stackbase", #286, 24,\
		 "stacksize", #257, 28,\
		 "tslice", #267, 30,\
		 "newslice", #267, 31,\
		 "arg", #288, 32
	SYMB	TYPE, 289, "TCB", 'T', #268
	SYMB	TYPE, 290, "SEMA", 'T', #262
	SYMB	TYPE, 291, "MAP", 'T', #262
	SYMB	TYPE, 293, 'n', #292, 130
	SYMB	TYPE, 294, 'P', #293
	SYMB	TYPE, 292, "rtxcmsg", 'S', 8,\
		 "link", #294, 0,\
		 "task", #263, 4,\
		 "priority", #265, 5,\
		 "sema", #290, 6
	SYMB	TYPE, 295, "RTXCMSG", 'T', #292
	SYMB	TYPE, 296, "TICKS", 'T', #16
	SYMB	TYPE, 297, 'N',\
		 "DELAY_OBJ", 0,\
		 "SEMAPHORE_OBJ", 1,\
		 "PARTITION_OBJ", 2,\
		 "QUEUE_OBJ", 3,\
		 "RESOURCE_OBJ", 4,\
		 "MAILBOX_OBJ", 5,\
		 "TIMER_OBJ", 6
	SYMB	TYPE, 298, "OBJTYPE", 'T', #297
	SYMB	TYPE, 271, "clkblk", 'S', 18,\
		 "flink", #273, 0,\
		 "blink", #273, 4,\
		 "remain", #296, 8,\
		 "recycle", #296, 10,\
		 "task", #263, 12,\
		 "state", #2, 13,\
		 "objtype", #298, 14,\
		 "objid", #262, 16
	SYMB	TYPE, 299, 'N',\
		 "PRIORITY_INVERSION_OFF", 0,\
		 "PRIORITY_INVERSION_ON", 1
	SYMB	TYPE, 300, "RESATTR", 'T', #299
	SYMB	ENDF
	SYMB	TYPE, 301, 'N',\
		 "RC_GOOD", 0,\
		 "RC_WAIT_CONFLICT", 1,\
		 "RC_NO_TIMERS", 2,\
		 "RC_TIMER_INACTIVE", 3,\
		 "RC_TIMER_ILLEGAL", 4,\
		 "RC_TIMEOUT", 5,\
		 "RC_QUEUE_FULL", 6,\
		 "RC_QUEUE_EMPTY", 7,\
		 "RC_ILLEGAL_QUEUE_SIZE", 8,\
		 "RC_BUSY", 9,\
		 "RC_NESTED", 10,\
		 "RC_ILLEGAL_TASK", 11,\
		 "RC_ACTIVE_TASK", 12,\
		 "RC_NO_YIELD", 13,\
		 "RC_MISSED_EVENT", 14
	SYMB	TYPE, 302, "KSRC", 'T', #301
	SYMB	TYPE, 303, "SSTATE", 'T', #263
	SYMB	TYPE, 304, "MBOX", 'T', #262
	SYMB	TYPE, 305, "QUEUE", 'T', #262
	SYMB	TYPE, 306, 'N',\
		 "QNE", 0,\
		 "QNF", 1,\
		 "QF", 2,\
		 "QE", 3
	SYMB	TYPE, 307, "QCOND", 'T', #306
	SYMB	TYPE, 308, "RESOURCE", 'T', #262
	SYMB	TYPE, 309, "CLKBLK", 'T', #271
	SYMB	TYPE, 310, "time_t", 'T', #6
	SYMB	TYPE, 311, "FRAME", 'T', #279
	SYMB	ENDF
	SYMB	FILE, "ctask.h"
	SYMB	ENDF
	SYMB	FILE, "csema.h"
	SYMB	ENDF
	SYMB	FILE, "cres.h"
	SYMB	ENDF
	SYMB	FILE, "cqueue.h"
	SYMB	ENDF
	SYMB	FILE, "cpart.h"
	SYMB	ENDF
	SYMB	FILE, "cmbox.h"
	SYMB	ENDF
	SYMB	FILE, "cclock.h"
	SYMB	ENDF
	SYMB	TYPE, 313, 'n', #312, 130
	SYMB	TYPE, 314, 'P', #313
	SYMB	TYPE, 312, 'X', 12, #1, 30, 2, #314, #286
	SYMB	TYPE, 316, 'n', #315, 129
	SYMB	TYPE, 317, 'P', #316
	SYMB	TYPE, 318, 'X', 12, #1, 30, 1, #314
	SYMB	TYPE, 319, 'n', #318, 129
	SYMB	TYPE, 320, 'P', #319
	SYMB	TYPE, 321, 'n', #6, 130
	SYMB	TYPE, 322, 'P', #321
	SYMB	TYPE, 321, 'X', 12, #16, 30, 2, #314, #322
	SYMB	TYPE, 324, 'n', #323, 129
	SYMB	TYPE, 325, 'P', #324
	SYMB	TYPE, 326, 'X', 12, #1, 30, 1, #314
	SYMB	TYPE, 327, 'n', #326, 129
	SYMB	TYPE, 328, 'P', #327
	SYMB	TYPE, 329, 'X', 12, #1, 30, 1, #314
	SYMB	TYPE, 330, 'n', #329, 129
	SYMB	TYPE, 331, 'P', #330
	SYMB	TYPE, 332, 'X', 12, #16, 30, 1, #314
	SYMB	TYPE, 333, 'n', #332, 129
	SYMB	TYPE, 334, 'P', #333
	SYMB	TYPE, 312, "TEvent", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TEvent", #317, 2,\
		 "_TEvent", #320, 6,\
		 "Wait", #325, 10,\
		 "Set", #328, 14,\
		 "Clear", #331, 18,\
		 "IsSet", #334, 22,\
		 "ID", #290, 26,\
		 "Name", #286, 28
	SYMB	TYPE, 335, "TEvent", 'T', #312
	SYMB	TYPE, 337, 'n', #336, 130
	SYMB	TYPE, 338, 'P', #337
	SYMB	TYPE, 336, 'X', 12, #1, 30, 1, #338
	SYMB	TYPE, 340, 'n', #339, 129
	SYMB	TYPE, 341, 'P', #340
	SYMB	TYPE, 342, 'X', 12, #1, 30, 1, #338
	SYMB	TYPE, 343, 'n', #342, 129
	SYMB	TYPE, 344, 'P', #343
	SYMB	TYPE, 345, 'n', #335, 130
	SYMB	TYPE, 346, 'P', #345
	SYMB	TYPE, 345, 'X', 12, #16, 30, 2, #338, #346
	SYMB	TYPE, 348, 'n', #347, 129
	SYMB	TYPE, 349, 'P', #348
	SYMB	TYPE, 350, 'X', 12, #1, 30, 2, #338, #346
	SYMB	TYPE, 351, 'n', #350, 129
	SYMB	TYPE, 352, 'P', #351
	SYMB	TYPE, 353, 'X', 12, #16, 30, 2, #338, #346
	SYMB	TYPE, 354, 'n', #353, 129
	SYMB	TYPE, 355, 'P', #354
	SYMB	TYPE, 356, 'X', 12, #346, 30, 2, #338, #322
	SYMB	TYPE, 357, 'n', #356, 129
	SYMB	TYPE, 358, 'P', #357
	SYMB	TYPE, 359, 'Z', #2, 95
	SYMB	TYPE, 336, "TEventList", 'S', 122,\
		 "ObjectID", #16, 0,\
		 "TEventList", #341, 2,\
		 "_TEventList", #344, 6,\
		 "Append", #349, 10,\
		 "Clear", #352, 14,\
		 "InList", #355, 18,\
		 "Wait", #358, 22,\
		 "Align", #359, 26
	SYMB	TYPE, 361, "TEventList", 'T', #336
	SYMB	TYPE, 363, 'n', #362, 130
	SYMB	TYPE, 364, 'P', #363
	SYMB	TYPE, 362, 'X', 12, #1, 30, 2, #364, #286
	SYMB	TYPE, 366, 'n', #365, 129
	SYMB	TYPE, 367, 'P', #366
	SYMB	TYPE, 368, 'X', 12, #1, 30, 1, #364
	SYMB	TYPE, 369, 'n', #368, 129
	SYMB	TYPE, 370, 'P', #369
	SYMB	TYPE, 371, 'X', 12, #1, 30, 1, #364
	SYMB	TYPE, 372, 'n', #371, 129
	SYMB	TYPE, 373, 'P', #372
	SYMB	TYPE, 374, 'X', 12, #1, 30, 1, #364
	SYMB	TYPE, 375, 'n', #374, 129
	SYMB	TYPE, 376, 'P', #375
	SYMB	TYPE, 377, 'X', 12, #16, 30, 1, #364
	SYMB	TYPE, 378, 'n', #377, 129
	SYMB	TYPE, 379, 'P', #378
	SYMB	TYPE, 362, "TResource", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TResource", #367, 2,\
		 "_TResource", #370, 6,\
		 "Lock", #373, 10,\
		 "Unlock", #376, 14,\
		 "Owner", #379, 18,\
		 "ID", #308, 22,\
		 "Name", #286, 24
	SYMB	TYPE, 380, "TResource", 'T', #362
	SYMB	TYPE, 381, 'X', 12, #1, 30, 0
	SYMB	TYPE, 382, 'n', #381, 129
	SYMB	TYPE, 383, 'P', #382
	SYMB	TYPE, 385, 'n', #384, 130
	SYMB	TYPE, 386, 'P', #385
	SYMB	TYPE, 381, 'X', 12, #1, 30, 3, #386, #16, #383
	SYMB	TYPE, 388, 'n', #387, 129
	SYMB	TYPE, 389, 'P', #388
	SYMB	TYPE, 390, 'X', 12, #1, 30, 1, #386
	SYMB	TYPE, 391, 'n', #390, 129
	SYMB	TYPE, 392, 'P', #391
	SYMB	TYPE, 393, 'X', 12, #1, 30, 1, #386
	SYMB	TYPE, 394, 'n', #393, 129
	SYMB	TYPE, 395, 'P', #394
	SYMB	TYPE, 396, 'X', 12, #1, 30, 2, #386, #16
	SYMB	TYPE, 397, 'n', #396, 129
	SYMB	TYPE, 398, 'P', #397
	SYMB	TYPE, 399, 'X', 12, #1, 30, 1, #386
	SYMB	TYPE, 400, 'n', #399, 129
	SYMB	TYPE, 401, 'P', #400
	SYMB	TYPE, 402, 'X', 12, #16, 30, 1, #386
	SYMB	TYPE, 403, 'n', #402, 129
	SYMB	TYPE, 404, 'P', #403
	SYMB	TYPE, 405, 'X', 12, #1, 30, 2, #386, #16
	SYMB	TYPE, 406, 'n', #405, 129
	SYMB	TYPE, 407, 'P', #406
	SYMB	TYPE, 384, "TThread", 'S', 36,\
		 "ObjectID", #16, 0,\
		 "TThread", #389, 2,\
		 "Execute", #392, 6,\
		 "Terminate", #395, 10,\
		 "Suspend", #398, 14,\
		 "Resume", #401, 18,\
		 "GetPriority", #404, 22,\
		 "SetPriority", #407, 26,\
		 "ID", #263, 30,\
		 "Status", #2, 31,\
		 "Stack", #286, 32
	SYMB	TYPE, 408, "TThread", 'T', #384
	SYMB	TYPE, 410, 'n', #409, 130
	SYMB	TYPE, 411, 'P', #410
	SYMB	TYPE, 409, 'X', 12, #1, 30, 1, #411
	SYMB	TYPE, 413, 'n', #412, 129
	SYMB	TYPE, 414, 'P', #413
	SYMB	TYPE, 415, 'X', 12, #1, 30, 1, #411
	SYMB	TYPE, 416, 'n', #415, 129
	SYMB	TYPE, 417, 'P', #416
	SYMB	TYPE, 418, 'X', 12, #1, 30, 2, #411, #16
	SYMB	TYPE, 419, 'n', #418, 129
	SYMB	TYPE, 420, 'P', #419
	SYMB	TYPE, 421, 'X', 12, #16, 30, 1, #411
	SYMB	TYPE, 422, 'n', #421, 129
	SYMB	TYPE, 423, 'P', #422
	SYMB	TYPE, 424, 'X', 12, #1, 30, 2, #411, #16
	SYMB	TYPE, 425, 'n', #424, 129
	SYMB	TYPE, 426, 'P', #425
	SYMB	TYPE, 427, 'n', #309, 130
	SYMB	TYPE, 428, 'P', #427
	SYMB	TYPE, 409, "TTimer", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TTimer", #414, 2,\
		 "_TTimer", #417, 6,\
		 "SetPeriod", #420, 10,\
		 "GetPeriod", #423, 14,\
		 "Tick", #426, 18,\
		 "TimeOut", #346, 22,\
		 "Period", #4, 26,\
		 "Handle", #428, 28
	SYMB	TYPE, 429, "TTimer", 'T', #409
	SYMB	TYPE, 431, 'n', #430, 130
	SYMB	TYPE, 432, 'P', #431
	SYMB	TYPE, 430, 'X', 12, #1, 30, 3, #432, #16, #16
	SYMB	TYPE, 434, 'n', #433, 129
	SYMB	TYPE, 435, 'P', #434
	SYMB	TYPE, 436, 'X', 12, #1, 30, 1, #432
	SYMB	TYPE, 437, 'n', #436, 129
	SYMB	TYPE, 438, 'P', #437
	SYMB	TYPE, 439, 'X', 12, #286, 30, 2, #432, #288
	SYMB	TYPE, 440, 'n', #439, 129
	SYMB	TYPE, 441, 'P', #440
	SYMB	TYPE, 442, 'X', 12, #1, 30, 2, #432, #288
	SYMB	TYPE, 443, 'n', #442, 129
	SYMB	TYPE, 444, 'P', #443
	SYMB	TYPE, 430, "TStream", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TStream", #435, 2,\
		 "_TStream", #438, 6,\
		 "Get", #441, 10,\
		 "Put", #444, 14,\
		 "ID", #305, 18,\
		 "Width", #16, 20,\
		 "Depth", #16, 22,\
		 "Handle", #286, 24
	SYMB	TYPE, 445, "TStream", 'T', #430
	SYMB	ENDF
	SYMB	ENDF
; genlock.c   32	#include "instru.h"
	SYMB	FILE, "instru.h"
	SYMB	FILE, "nv_drv.h"
	SYMB	TYPE, 446, "NvPointer", 'T', #18
	SYMB	ENDF
	SYMB	FILE, "genlock.h"
	SYMB	ENDF
	SYMB	FILE, "bb.h"
	SYMB	TYPE, 447, 'S', 8,\
		 "System", #3, 0,\
		 "Delay", #7, 2,\
		 "ScHPhase", #16, 6
	SYMB	TYPE, 448, "BBObject", 'T', #447
	SYMB	ENDF
	SYMB	FILE, "cbar.h"
	SYMB	TYPE, 449, 'S', 12,\
		 "System", #3, 0,\
		 "Pattern", #18, 2,\
		 "Delay", #7, 4,\
		 "ScHPhase", #16, 8,\
		 "EmbAudioSignal", #3, 10
	SYMB	TYPE, 450, "CBObject", 'T', #449
	SYMB	ENDF
	SYMB	FILE, "audio.h"
	SYMB	TYPE, 451, 'S', 14,\
		 "System", #16, 0,\
		 "Signal", #16, 2,\
		 "Level", #16, 4,\
		 "Timing", #10, 6,\
		 "Frequency", #16, 10,\
		 "Click", #16, 12
	SYMB	TYPE, 452, "AudioObject", 'T', #451
	SYMB	ENDF
	SYMB	TYPE, 453, 'S', 34,\
		 "Date", #7, 0,\
		 "DACFactDate", #7, 4,\
		 "DACUserDate", #7, 8,\
		 "DACFactValue", #18, 12,\
		 "DACUserValue", #18, 14,\
		 "HPHZeroG", #7, 16,\
		 "PhaseG", #7, 20,\
		 "HPHZeroM", #7, 24,\
		 "PhaseM", #7, 28,\
		 "DACOffset", #16, 32
	SYMB	TYPE, 454, "GenlockCalibrationObject", 'T', #453
	SYMB	TYPE, 455, 'S', 20,\
		 "Date", #7, 0,\
		 "PhaseG", #7, 4,\
		 "ScHPhaseG", #18, 8,\
		 "PhaseM", #7, 10,\
		 "ScHPhaseM", #18, 14,\
		 "DACGain", #3, 16,\
		 "DACOffset", #3, 17,\
		 "DACLevel", #3, 18
	SYMB	TYPE, 456, "BBCalibrationObject", 'T', #455
	SYMB	TYPE, 457, 'S', 20,\
		 "Date", #7, 0,\
		 "PhaseG", #7, 4,\
		 "ScHPhaseG", #3, 8,\
		 "PhaseM", #7, 10,\
		 "ScHPhaseM", #3, 14,\
		 "GainG", #3, 15,\
		 "ChromaGainG", #3, 16,\
		 "GainM", #3, 17,\
		 "ChromaGainM", #3, 18
	SYMB	TYPE, 458, "CBCalibrationObject", 'T', #457
	SYMB	TYPE, 459, 'S', 6,\
		 "Date", #7, 0,\
		 "AnalogLeftChannel", #3, 4,\
		 "AnalogRightChannel", #3, 5
	SYMB	TYPE, 460, "AudioCalibrationObject", 'T', #459
	SYMB	TYPE, 461, 'Z', #448, 2
	SYMB	TYPE, 463, 'Z', #452, 1
	SYMB	TYPE, 465, 'S', 74,\
		 "ActivePreset", #16, 0,\
		 "GenlockSetup", #259, 2,\
		 "BBSetup", #461, 8,\
		 "CBSetup", #450, 32,\
		 "AudioOutput", #16, 44,\
		 "AudioSetup", #463, 46
	SYMB	TYPE, 466, "SettingsObject", 'T', #465
	SYMB	TYPE, 467, 'Z', #2, 32
	SYMB	TYPE, 469, 'Z', #2, 8
	SYMB	TYPE, 471, 'Z', #2, 12
	SYMB	TYPE, 473, 'Z', #456, 2
	SYMB	TYPE, 475, 'S', 226,\
		 "Company", #467, 0,\
		 "Type", #467, 33,\
		 "KUNumber", #469, 66,\
		 "SWRevision", #469, 75,\
		 "NC12", #471, 84,\
		 "ResetSystem", #3, 97,\
		 "ProdDate", #7, 98,\
		 "UpdateDate", #7, 102,\
		 "GenlockCalibration", #454, 106,\
		 "BBCalibration", #473, 140,\
		 "CBCalibration", #458, 200,\
		 "AudioCalibration", #460, 220
	SYMB	TYPE, 476, "CalibrationObject", 'T', #475
	SYMB	ENDF
; genlock.c   33	#include "cbar.h"
	SYMB	FILE, "cbar.h"
	SYMB	ENDF
; genlock.c   34	
; genlock.c   35	GenlockObject GenlockSetup;
; genlock.c   36	
; genlock.c   37	/**************************************************************************/
; genlock.c   38	/* GenlockDefaults																							GENLOCK.C	*/
; genlock.c   39	/*																																				*/
; genlock.c   40	/* Author:	 Kim Engedahl, DEV, 000607																		*/
; genlock.c   41	/* Revised:	 000607, KEn, DEV     																				*/
; genlock.c   42	/*																																				*/
; genlock.c   43	/* Function:   																														*/
; genlock.c   44	/* Remarks:																																*/
; genlock.c   45	/* Returns:																																*/
; genlock.c   46	/* Updates:																																*/
; genlock.c   47	/**************************************************************************/
; genlock.c   48	void GenlockDefaults( void)
; genlock.c   49	{
GENLOCK_PR	SEGMENT	HCODE
	RSEG	GENLOCK_PR
	ALIGN	1
	SYMB	LINE, 49
	PUBLIC	_GenlockDefaults
_GenlockDefaults:
	SYMB	TYPE, 477, 'X', 12, #1, 30, 0
	SYMB	GFUN, "GenlockDefaults", _GenlockDefaults, #477, 0, 0, 0
	SYMB	ALAB, _GenlockDefaults, #477
; genlock.c   50		Settings.GenlockSetup.System = GenlockSetup.System = Internal;
	SYMB	LINE, 50
	MOV.B	ES,#SEG( _GenlockSetup )
	MOV.W	R0,#SOF( _GenlockSetup )
	MOV.B	[R0],#00H
	MOV.B	ES,#SEG( _Settings+2 )
	MOV.W	R0,#SOF( _Settings+2 )
	MOV.B	[R0],#00H
; genlock.c   51		Settings.GenlockSetup.Delay = GenlockSetup.Delay = 0;
	SYMB	LINE, 51
	MOV.B	ES,#SEG( _GenlockSetup+2 )
	MOV.W	R0,#SOF( _GenlockSetup+2 )
	MOV.W	[R0+],#00H
	MOV.W	[R0],#00H
	MOV.B	ES,#SEG( _Settings+4 )
	MOV.W	R0,#SOF( _Settings+4 )
	MOV.W	[R0+],#00H
	MOV.W	[R0],#00H
; genlock.c   52	
; genlock.c   53		NV_Store( &Settings, SettingsPtr, sizeof( Settings));
	SYMB	LINE, 53
	MOV.W	R1,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.B	ES,#SEG( _SettingsPtr )
	MOV.W	R2,#SOF( _SettingsPtr )
	MOV.W	R2,[R2]
	MOV.W	R3,#04AH
	CALL	_NV_Store
; genlock.c   54	}
	SYMB	LINE, 54
	RET
	SYMB	EFUN
; genlock.c   55	
; genlock.c   56	/**************************************************************************/
; genlock.c   57	/* GenlockInit					 																			  GENLOCK.C	*/
; genlock.c   58	/*																																				*/
; genlock.c   59	/* Author:	 Kim Engedahl, DEV, 000331																		*/
; genlock.c   60	/* Revised:	 000914, KEn, DEV     																				*/
; genlock.c   61	/*																																				*/
; genlock.c   62	/* Function:   																														*/
; genlock.c   63	/* Remarks:																																*/
; genlock.c   64	/* Returns:																																*/
; genlock.c   65	/* Updates:	Added DACFactHoffset transmission 15.11.01: JK  							*/
; genlock.c   66	/**************************************************************************/
; genlock.c   67	int GenlockInit( void)
; genlock.c   68	{
	ALIGN	1
	SYMB	LINE, 68
	PUBLIC	_GenlockInit
_GenlockInit:
	SYMB	TYPE, 478, 'X', 12, #16, 30, 0
	SYMB	GFUN, "GenlockInit", _GenlockInit, #478, 0, 0, 0
	SYMB	ALAB, _GenlockInit, #478
; genlock.c   69		sio0SndCommand( 12, SPG_V24_address, "GZ;");
	SYMB	LINE, 69
	MOV.W	R0,#0CH
	MOV.W	R3,#SEG( _3 )
	MOV.W	R2,#SOF( _3 )
	PUSH.W	R2, R3
	SYMB	SOFF, 4
	MOV.W	R1,#015H
	CALL	_sio0SndCommand
	ADDS.W	R7,#04H
	SYMB	SOFF, 0
; genlock.c   70	
; genlock.c   71		sio0SndCommand( 20, SPG_V24_address, "GV%lu;", Calibration.GenlockCalibration.HPHZeroG);
	SYMB	LINE, 71
	MOV.B	ES,#SEG( _Calibration+122 )
	MOV.W	R1,#SOF( _Calibration+122 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	PUSH.W	R0, R1
	SYMB	SOFF, 4
	MOV.W	R1,#SEG( _4 )
	MOV.W	R0,#SOF( _4 )
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	MOV.W	R1,#015H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 0
; genlock.c   72		sio0SndCommand( 20, SPG_V24_address, "GF%lu;", Calibration.GenlockCalibration.PhaseG);
	SYMB	LINE, 72
	MOV.B	ES,#SEG( _Calibration+126 )
	MOV.W	R1,#SOF( _Calibration+126 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	PUSH.W	R0, R1
	SYMB	SOFF, 4
	MOV.W	R1,#SEG( _5 )
	MOV.W	R0,#SOF( _5 )
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	MOV.W	R1,#015H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 0
; genlock.c   73	
; genlock.c   74		sio0SndCommand( 20, SPG_V24_address, "GY%lu;", Calibration.GenlockCalibration.HPHZeroM);
	SYMB	LINE, 74
	MOV.B	ES,#SEG( _Calibration+130 )
	MOV.W	R1,#SOF( _Calibration+130 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	PUSH.W	R0, R1
	SYMB	SOFF, 4
	MOV.W	R1,#SEG( _6 )
	MOV.W	R0,#SOF( _6 )
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	MOV.W	R1,#015H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 0
; genlock.c   75		sio0SndCommand( 20, SPG_V24_address, "GG%lu;", Calibration.GenlockCalibration.PhaseM);
	SYMB	LINE, 75
	MOV.B	ES,#SEG( _Calibration+134 )
	MOV.W	R1,#SOF( _Calibration+134 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	PUSH.W	R0, R1
	SYMB	SOFF, 4
	MOV.W	R1,#SEG( _7 )
	MOV.W	R0,#SOF( _7 )
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	MOV.W	R1,#015H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 0
; genlock.c   76	
; genlock.c   77		sio0SndCommand( 20, SPG_V24_address, "GB%u;", (unsigned int)Calibration.GenlockCalibration.DACOffset);// JK
	SYMB	LINE, 77
	MOV.B	ES,#SEG( _Calibration+138 )
	MOV.W	R0,#SOF( _Calibration+138 )
	MOV.W	R0,[R0]
	PUSH.W	R0
	SYMB	SOFF, 2
	MOV.W	R1,#SEG( _8 )
	MOV.W	R0,#SOF( _8 )
	PUSH.W	R0, R1
	SYMB	SOFF, 6
	MOV.W	R1,#015H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADDS.W	R7,#06H
	SYMB	SOFF, 0
; genlock.c   78		sio0SndCommand( 20, SPG_V24_address, "GX%u;", Calibration.GenlockCalibration.DACUserValue);
	SYMB	LINE, 78
	MOV.B	ES,#SEG( _Calibration+120 )
	MOV.W	R0,#SOF( _Calibration+120 )
	MOV.W	R0,[R0]
	PUSH.W	R0
	SYMB	SOFF, 2
	MOV.W	R1,#SEG( _9 )
	MOV.W	R0,#SOF( _9 )
	PUSH.W	R0, R1
	SYMB	SOFF, 6
	MOV.W	R0,#014H
	MOV.W	R1,#015H
	CALL	_sio0SndCommand
	ADDS.W	R7,#06H
	SYMB	SOFF, 0
; genlock.c   79	
; genlock.c   80		GenlockSetup.System = Settings.GenlockSetup.System;
	SYMB	LINE, 80
	MOV.B	ES,#SEG( _Settings+2 )
	MOV.W	R0,#SOF( _Settings+2 )
	MOV.B	R0L,[R0]
	MOV.B	ES,#SEG( _GenlockSetup )
	MOV.W	R1,#SOF( _GenlockSetup )
	MOV.B	[R1],R0L
; genlock.c   81		GenlockSetup.Delay  = Settings.GenlockSetup.Delay;
	SYMB	LINE, 81
	MOV.B	ES,#SEG( _Settings+4 )
	MOV.W	R1,#SOF( _Settings+4 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	MOV.B	ES,#SEG( _GenlockSetup+2 )
	MOV.W	R2,#SOF( _GenlockSetup+2 )
	MOV.W	[R2+],R0
	MOV.W	[R2],R1
; genlock.c   82	
; genlock.c   83		return( 0);
	SYMB	LINE, 83
	MOV.W	R0,#00H
; genlock.c   84	}
	SYMB	LINE, 84
	RET
	SYMB	EFUN
; genlock.c   85	
; genlock.c   86	/**************************************************************************/
; genlock.c   87	/* GenlockVersion				 																			  GENLOCK.C	*/
; genlock.c   88	/*																																				*/
; genlock.c   89	/* Author:	 Kim Engedahl, DEV, 000504																		*/
; genlock.c   90	/* Revised:	 000603, KEn, DEV     																				*/
; genlock.c   91	/*																																				*/
; genlock.c   92	/* Function:   																														*/
; genlock.c   93	/* Remarks:																																*/
; genlock.c   94	/* Returns:																																*/
; genlock.c   95	/* Updates:																																*/
; genlock.c   96	/**************************************************************************/
; genlock.c   97	int GenlockVersion( char* result)
; genlock.c   98	{
	ALIGN	1
	SYMB	LINE, 98
	PUBLIC	_GenlockVersion
_GenlockVersion:
	SYMB	TYPE, 479, 'X', 12, #16, 30, 1, #286
	SYMB	GFUN, "GenlockVersion", _GenlockVersion, #479, 0, 0, 0
	SYMB	ALAB, _GenlockVersion, #479
	SYMB	LTIM, "result", 3, 0, 2253
	SYMB	IDEN, "result", 3, #286, 0, 2061
; genlock.c   99		return( sio0SndRequest( 12, SPG_V24_address, result, "GI?"));
	SYMB	LINE, 99
	MOV.W	R3,#SEG( _10 )
	MOV.W	R2,#SOF( _10 )
	PUSH.W	R2, R3
	SYMB	SOFF, 4
	MOV.W	R3,R1
	MOV.W	R2,R0
	MOV.W	R0,#0CH
	MOV.W	R1,#015H
	CALL	_sio0SndRequest
	ADDS.W	R7,#04H
	SYMB	SOFF, 0
	SYMB	LTIM, "result", 3, 0, 2125
	SYMB	LTIM, "result", 11, 0, 2253
	SYMB	LTIM, "result", 11, 0, 2125
; genlock.c  100	}
	SYMB	LINE, 100
	RET
	SYMB	EFUN
; genlock.c  101	
; genlock.c  102	/**************************************************************************/
; genlock.c  103	/* GenlockUpdate				 																			  GENLOCK.C	*/
; genlock.c  104	/*																																				*/
; genlock.c  105	/* Author:	 Kim Engedahl, DEV, 000413																		*/
; genlock.c  106	/* Revised:	 000509, KEn, DEV     																				*/
; genlock.c  107	/*																																				*/
; genlock.c  108	/* Function:   																														*/
; genlock.c  109	/* Remarks:																																*/
; genlock.c  110	/* Returns:																																*/
; genlock.c  111	/* Updates:																																*/
; genlock.c  112	/**************************************************************************/
; genlock.c  113	int GenlockUpdate( void)
; genlock.c  114	{
	ALIGN	1
	SYMB	LINE, 114
	PUBLIC	_GenlockUpdate
_GenlockUpdate:
	SYMB	TYPE, 480, 'X', 12, #16, 30, 0
	SYMB	GFUN, "GenlockUpdate", _GenlockUpdate, #480, 0, 0, 0
	SYMB	ALAB, _GenlockUpdate, #480
; genlock.c  115		SetGenlockSystem( GenlockSetup.System);
	SYMB	LINE, 115
	MOV.B	ES,#SEG( _GenlockSetup )
	MOV.W	R0,#SOF( _GenlockSetup )
	MOV.B	R0L,[R0]
	MOVS.B	R0H,#00H
	CALL	_SetGenlockSystem
; genlock.c  116	  SetGenlockDelay( GenlockSetup.Delay);
	SYMB	LINE, 116
	MOV.B	ES,#SEG( _GenlockSetup+2 )
	MOV.W	R1,#SOF( _GenlockSetup+2 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	CALL	_SetGenlockDelay
; genlock.c  117	
; genlock.c  118		return( OK);
	SYMB	LINE, 118
	MOV.W	R0,#0FFFFH
; genlock.c  119	}
	SYMB	LINE, 119
	RET
	SYMB	EFUN
; genlock.c  120	
; genlock.c  121	/**************************************************************************/
; genlock.c  122	/* SetGenlockSystem			 																			  GENLOCK.C	*/
; genlock.c  123	/*																																				*/
; genlock.c  124	/* Author:	 Kim Engedahl, DEV, 000331																		*/
; genlock.c  125	/* Revised:	 000619, KEn, DEV     																				*/
; genlock.c  126	/*																																				*/
; genlock.c  127	/* Function:   																														*/
; genlock.c  128	/* Remarks:																																*/
; genlock.c  129	/* Returns:																																*/
; genlock.c  130	/* Updates:																																*/
; genlock.c  131	/**************************************************************************/
; genlock.c  132	int SetGenlockSystem( int system)
; genlock.c  133	{
	ALIGN	1
	SYMB	LINE, 133
	PUBLIC	_SetGenlockSystem
_SetGenlockSystem:
	SYMB	TYPE, 481, 'X', 12, #16, 30, 1, #16
	SYMB	GFUN, "SetGenlockSystem", _SetGenlockSystem, #481, 0, 0, 16
	SYMB	ALAB, _SetGenlockSystem, #481
	PUSH.W	R4
	SYMB	SOFF, 2
	ADDS.W	R7,#08H
	SYMB	SOFF, 10
	SYMB	LTIM, "system", 2, 0, 2253
	SYMB	IDEN, "system", 2, #16, 0, 2061
	SYMB	TYPE, 482, 'Z', #2, 6
	SYMB	IDEN, "cmd", -10, #482, 130, 5
; genlock.c  134		char cmd[7];
; genlock.c  135	
; genlock.c  136		switch ( system)
	SYMB	LINE, 136
	MOV.W	R4,R0
	CMP.W	R4,#00H
	BEQ	_20
	CMP.W	R4,#03H
	BEQ	_16
	CMP.W	R4,#01H
	BEQ	_17
	CMP.W	R4,#02H
	BEQ	_18
	BR	_19
	SYMB	LTIM, "system", 2, 0, 2125
	SYMB	LTIM, "system", 18, 0, 2253
; genlock.c  137		{
; genlock.c  138			case Internal:
; genlock.c  139				strcpy( cmd, "GM0;");
; genlock.c  140				break;
; genlock.c  141	
; genlock.c  142			case MHzLock10:
	SYMB	LINE, 142
_16:
; genlock.c  143				strcpy( cmd, "GM2;");
	SYMB	LINE, 143
	MOV.B	R1L,#SEG( __lc_bs )
	XOR.B	R1H,R1H
	MOV.W	R0,R7
	MOV.W	R3,#SEG( _12 )
	MOV.W	R2,#SOF( _12 )
	CALL	_strcpy
; genlock.c  144				break;
	SYMB	LINE, 144
	BR	_23
; genlock.c  145	
; genlock.c  146			case BurstLockPAL:
	SYMB	LINE, 146
_17:
; genlock.c  147				strcpy( cmd, "GM8;");
	SYMB	LINE, 147
	MOV.B	R1L,#SEG( __lc_bs )
	XOR.B	R1H,R1H
	MOV.W	R0,R7
	MOV.W	R3,#SEG( _13 )
	MOV.W	R2,#SOF( _13 )
	CALL	_strcpy
; genlock.c  148				break;
	SYMB	LINE, 148
	BR	_23
; genlock.c  149	
; genlock.c  150			case BurstLockNTSC:
	SYMB	LINE, 150
_18:
; genlock.c  151				strcpy( cmd, "GM10;");
	SYMB	LINE, 151
	MOV.B	R1L,#SEG( __lc_bs )
	XOR.B	R1H,R1H
	MOV.W	R0,R7
	MOV.W	R3,#SEG( _14 )
	MOV.W	R2,#SOF( _14 )
	CALL	_strcpy
; genlock.c  152				break;
	SYMB	LINE, 152
	BR	_23
; genlock.c  153	
; genlock.c  154			default:
	SYMB	LINE, 154
_19:
; genlock.c  155				return( FAIL);
	SYMB	LINE, 155
	MOV.W	R0,#00H
	BR	_24
	SYMB	LINE, 138
_20:
	SYMB	LTIM, "system", 18, 0, 2125
	SYMB	LTIM, "system", 18, 0, 2253
	SYMB	LINE, 139
	MOV.B	R1L,#SEG( __lc_bs )
	XOR.B	R1H,R1H
	MOV.W	R0,R7
	MOV.W	R3,#SEG( _11 )
	MOV.W	R2,#SOF( _11 )
	CALL	_strcpy
; genlock.c  156		}
	SYMB	LINE, 156
_23:
; genlock.c  157	
; genlock.c  158		Settings.ActivePreset = 0;
	SYMB	LINE, 158
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.W	[R0],#00H
	SYMB	LTIM, "system", 18, 0, 2125
; genlock.c  159	
; genlock.c  160		Settings.GenlockSetup.System = GenlockSetup.System = system;
	SYMB	LINE, 160
	MOV.B	ES,#SEG( _GenlockSetup )
	MOV.W	R0,#SOF( _GenlockSetup )
	MOV.B	[R0],R4L
	MOV.B	ES,#SEG( _Settings+2 )
	MOV.W	R0,#SOF( _Settings+2 )
	MOV.B	[R0],R4L
; genlock.c  161		NV_Store( &Settings, SettingsPtr, sizeof( Settings));
	SYMB	LINE, 161
	MOV.W	R1,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.B	ES,#SEG( _SettingsPtr )
	MOV.W	R2,#SOF( _SettingsPtr )
	MOV.W	R2,[R2]
	MOV.W	R3,#04AH
	CALL	_NV_Store
; genlock.c  162	
; genlock.c  163		LEDSet( GenlockLED, false);
	SYMB	LINE, 163
	MOV.W	R0,#04000H
	MOV.W	R1,#00H
	CALL	_LEDSet
; genlock.c  164		
; genlock.c  165		return( sio0SndCommand( 12, SPG_V24_address, "%s", cmd));
	SYMB	LINE, 165
	MOV.W	R0,#0CH
	MOV.W	R1,#015H
	MOV.B	R3L,#SEG( __lc_bs )
	XOR.B	R3H,R3H
	MOV.W	R2,R7
	PUSH.W	R2, R3
	SYMB	SOFF, 14
	MOV.W	R3,#SEG( _15 )
	MOV.W	R2,#SOF( _15 )
	PUSH.W	R2, R3
	SYMB	SOFF, 18
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 10
; genlock.c  166	}
	SYMB	LINE, 166
_24:
	ADD.W	R7,#08H
	SYMB	SOFF, 2
	POP.W	R4
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
; genlock.c  167	
; genlock.c  168	/**************************************************************************/
; genlock.c  169	/* SetGenlockDelay				 																			GENLOCK.C	*/
; genlock.c  170	/*																																				*/
; genlock.c  171	/* Author:	 Kim Engedahl, DEV, 000331																		*/
; genlock.c  172	/* Revised:	 000731, KEn, DEV     																				*/
; genlock.c  173	/*																																				*/
; genlock.c  174	/* Function: Broadcast common delay to BB and CBar												*/
; genlock.c  175	/* Remarks:	 																															*/
; genlock.c  176	/* Returns:																																*/
; genlock.c  177	/* Updates:																																*/
; genlock.c  178	/**************************************************************************/
; genlock.c  179	int SetGenlockDelay( UL delay)
; genlock.c  180	{
	ALIGN	1
	SYMB	LINE, 180
	PUBLIC	_SetGenlockDelay
_SetGenlockDelay:
	SYMB	TYPE, 484, 'X', 12, #16, 30, 1, #7
	SYMB	GFUN, "SetGenlockDelay", _SetGenlockDelay, #484, 0, 0, 48
	SYMB	ALAB, _SetGenlockDelay, #484
	PUSH.W	R4, R5
	SYMB	SOFF, 4
	SYMB	LTIM, "delay", 3, 0, 2253
	SYMB	IDEN, "delay", 3, #7, 0, 2061
; genlock.c  181		Settings.ActivePreset = 0;
	SYMB	LINE, 181
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R2,#SOF( _Settings )
	MOV.W	[R2],#00H
; genlock.c  182	
; genlock.c  183		Settings.GenlockSetup.Delay = GenlockSetup.Delay = delay;
	SYMB	LINE, 183
	MOV.W	R5,R1
	MOV.W	R4,R0
	MOV.B	ES,#SEG( _GenlockSetup+2 )
	MOV.W	R0,#SOF( _GenlockSetup+2 )
	MOV.W	[R0+],R4
	MOV.W	[R0],R5
	SYMB	LTIM, "delay", 3, 0, 2125
	SYMB	LTIM, "delay", 19, 0, 2253
	MOV.B	ES,#SEG( _Settings+4 )
	MOV.W	R0,#SOF( _Settings+4 )
	MOV.W	[R0+],R4
	MOV.W	[R0],R5
; genlock.c  184		NV_Store( &Settings, SettingsPtr, sizeof( Settings));
	SYMB	LINE, 184
	MOV.W	R1,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.B	ES,#SEG( _SettingsPtr )
	MOV.W	R2,#SOF( _SettingsPtr )
	MOV.W	R2,[R2]
	MOV.W	R3,#04AH
	CALL	_NV_Store
; genlock.c  185	
; genlock.c  186		sio0SndCommand( 20, BB_V24_address, "HO%lu;", delay);
	SYMB	LINE, 186
	MOV.W	R1,R5
	MOV.W	R0,R4
	SYMB	LTIM, "delay", 19, 0, 2125
	SYMB	LTIM, "delay", 3, 0, 2253
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	SYMB	LTIM, "delay", 3, 0, 2125
	MOV.W	R1,#SEG( _25 )
	MOV.W	R0,#SOF( _25 )
	PUSH.W	R0, R1
	SYMB	SOFF, 12
	MOV.W	R1,#034H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 4
; genlock.c  187		sio0SndCommand( 20, BB_V24_address, "JO%lu;", delay);
	SYMB	LINE, 187
	MOV.W	R1,R5
	MOV.W	R0,R4
	SYMB	LTIM, "delay", 3, 0, 2253
	PUSH.W	R0, R1
	SYMB	SOFF, 8
	SYMB	LTIM, "delay", 3, 0, 2125
	MOV.W	R1,#SEG( _26 )
	MOV.W	R0,#SOF( _26 )
	PUSH.W	R0, R1
	SYMB	SOFF, 12
	MOV.W	R1,#034H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 4
; genlock.c  188		sio0SndCommand( 20, BB_V24_address, "KO%lu;", delay);
	SYMB	LINE, 188
	PUSH.W	R4, R5
	SYMB	SOFF, 8
	MOV.W	R1,#SEG( _27 )
	MOV.W	R0,#SOF( _27 )
	PUSH.W	R0, R1
	SYMB	SOFF, 12
	MOV.W	R1,#034H
	MOV.W	R0,#014H
	CALL	_sio0SndCommand
	ADD.W	R7,#08H
	SYMB	SOFF, 4
; genlock.c  189	
; genlock.c  190		SetCBDelay( CBSetup.Delay);	// The delay routine also takes the genlock
	SYMB	LINE, 190
	MOV.B	ES,#SEG( _CBSetup+4 )
	MOV.W	R1,#SOF( _CBSetup+4 )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	CALL	_SetCBDelay
; genlock.c  191																//  offset into account.																			
; genlock.c  192		return( OK);
	SYMB	LINE, 192
	MOV.W	R0,#0FFFFH
; genlock.c  193	}
	SYMB	LINE, 193
	POP.W	R4, R5
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
	SYMB	ENDF

GENLOCK_INI_FA	SEGMENT	HDATA INSEGMENT INIT
	RSEG	GENLOCK_INI_FA
_8:	DB	047H,042H,025H,075H,03BH,000H
	SYMB	TYPE, 485, 'X', 12, #16, 30, 1, #7
	SYMB	ALAB, _SetCBDelay, #485
	EXTRN	HCODE(_SetCBDelay)
_13:	DB	047H,04DH,038H,03BH,000H
_7:	DB	047H,047H,025H,06CH,075H,03BH,000H
	SYMB	TYPE, 486, 'X', 12, #16, 30, 4, #16, #16, #286, #1
	SYMB	ALAB, _sio0SndCommand, #486
	EXTRN	HCODE(_sio0SndCommand)
_27:	DB	04BH,04FH,025H,06CH,075H,03BH,000H
_5:	DB	047H,046H,025H,06CH,075H,03BH,000H
_25:	DB	048H,04FH,025H,06CH,075H,03BH,000H
_10:	DB	047H,049H,03FH,000H
	SYMB	ALAB, _CBSetup, #450
	EXTRN	HDATA(_CBSetup)
_15:	DB	025H,073H,000H
	SYMB	TYPE, 487, 'X', 12, #16, 30, 2, #18, #261
	SYMB	ALAB, _LEDSet, #487
	EXTRN	HCODE(_LEDSet)
	SYMB	TYPE, 488, 'X', 12, #286, 30, 2, #286, #286
	SYMB	ALAB, _strcpy, #488
	EXTRN	HCODE(_strcpy)
_11:	DB	047H,04DH,030H,03BH,000H
	SYMB	ALAB, _SettingsPtr, #446
	EXTRN	HDATA(_SettingsPtr)
_3:	DB	047H,05AH,03BH,000H
_9:	DB	047H,058H,025H,075H,03BH,000H
	SYMB	IDEN, "GenlockSetup", _GenlockSetup, #259, 130, 0
	SYMB	ALAB, _GenlockSetup, #259
GENLOCK_CLR_FA	SEGMENT	HDATA INSEGMENT CLEAR
	RSEG	GENLOCK_CLR_FA
	PUBLIC	_GenlockSetup
	ALIGN	1
_GenlockSetup:	DS	6
	SYMB	ALAB, _Settings, #466
	EXTRN	HDATA(_Settings)
	SYMB	TYPE, 489, 'X', 12, #16, 30, 3, #288, #446, #16
	SYMB	ALAB, _NV_Store, #489
	EXTRN	HCODE(_NV_Store)
	RSEG	GENLOCK_INI_FA
_12:	DB	047H,04DH,032H,03BH,000H
_26:	DB	04AH,04FH,025H,06CH,075H,03BH,000H
	SYMB	ALAB, _Calibration, #476
	EXTRN	HDATA(_Calibration)
_4:	DB	047H,056H,025H,06CH,075H,03BH,000H
	EXTRN	IDATA(__lc_bs)
_6:	DB	047H,059H,025H,06CH,075H,03BH,000H
_14:	DB	047H,04DH,031H,030H,03BH,000H
	SYMB	TYPE, 490, 'X', 12, #16, 30, 5, #16, #16, #286, #286, #1
	SYMB	ALAB, _sio0SndRequest, #490
	EXTRN	HCODE(_sio0SndRequest)
	EXTRN	DATA(__lc_ub_xvwbuffer)
	EXTRN	DATA(__lc_ue_xvwbuffer)
	CALLS	'GenlockDefaults', 'NV_Store'
	CALLS	'GenlockInit', 'sio0SndCommand'
	CALLS	'GenlockVersion', 'sio0SndRequest'
	CALLS	'GenlockUpdate', 'SetGenlockSystem'
	CALLS	'GenlockUpdate', 'SetGenlockDelay'
	CALLS	'SetGenlockSystem', 'strcpy'
	CALLS	'SetGenlockSystem', 'NV_Store'
	CALLS	'SetGenlockSystem', 'LEDSet'
	CALLS	'SetGenlockSystem', 'sio0SndCommand'
	CALLS	'SetGenlockDelay', 'NV_Store'
	CALLS	'SetGenlockDelay', 'sio0SndCommand'
	CALLS	'SetGenlockDelay', 'SetCBDelay'
	END
