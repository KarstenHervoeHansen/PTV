XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
C:\LT428\work\ver.4_9\temp\xa\unitprg.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\LT428\rtxc\xa\include -I. -Ml
                          3 ;          -O2 -s
                          5 $NOZPAGE
                          6         NAME    UNITPRG
                         10 ; unitprg.c    1        /************************************************************************
                            ****/
                         11 ; unitprg.c    2        /* MODULE:                                                               
                               */
                         12 ; unitprg.c    3        /*  unitprg.c -                                                          
                                                                         */
                         13 ; unitprg.c    4        /************************************************************************
                            ****/
                         14 ; unitprg.c    5        /* FUNCTIONS:                                                            
                               */
                         15 ; unitprg.c    6        /*                                                                       
                               */
                         16 ; unitprg.c    7        /*                                                                       
                               */
                         17 ; unitprg.c    8        /* TASKS:                                                                
                               */
                         18 ; unitprg.c    9        /*                                                                       
                               */
                         19 ; unitprg.c   10        /* NOTES:                                                                
                               */
                         20 ; unitprg.c   11        /*                                                                       
                               */
                         21 ; unitprg.c   12        /************************************************************************
                            ****/
                         22 ; unitprg.c   13        /*
                         23 ; unitprg.c   14         *   PTV software for PT5201    
                         24 ; unitprg.c   15         *   Copyright (c) 
                         25 ; unitprg.c   16         *   ProTeleVision Technologies A/S.
                         26 ; unitprg.c   17         *   ALL RIGHTS RESERVED
                         27 ; unitprg.c   18        */
                         28 ; unitprg.c   19        /************************************************************************
                            ****/
                         29 ; unitprg.c   20        #include <stdlib.h>
                         44 ; unitprg.c   21        #include <string.h>
                         47 ; unitprg.c   22        
                         48 ; unitprg.c   23        #include "reg8051.h"
                         51 ; unitprg.c   24        #include "define.h"        // Standard PTV defines
                         54 ; unitprg.c   25        #include "nv_drv.h"
                         58 ; unitprg.c   26        #include "unitprg.h"
                         65 ; unitprg.c   27        #include "led_hw.h"
                         68 ; unitprg.c   28        #include "rs232.h"
                        401 ; unitprg.c   29        
                        402 ; unitprg.c   30        volatile UI BBSPGResetPort _at( 0x6a018);               // Port defined i
                            n PLD
                        403 ; unitprg.c   31        
                        404 ; unitprg.c   32        _bit UnitPgmMode;
                        405 ; unitprg.c   33        _bit JKflag;
                        406 ; unitprg.c   34        
                        407 ; unitprg.c   35        /************************************************************************
                            **/
                        408 ; unitprg.c   36        /* BBSPGReset                                                            
                                                                                                                             
                                                                      UNITPRG.C     */
                        409 ; unitprg.c   37        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        410 ; unitprg.c   38        /* Author:       Kim Engedahl, DEV, 000330                               
                                                                                                                             
                                            */
                        411 ; unitprg.c   39        /* Revised:      000330, KEn, DEV                                        
                                                                                                                             
                                                    */
                        412 ; unitprg.c   40        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        413 ; unitprg.c   41        /* Function:                                                             
                                                                                                                             
                                                                                                            */
                        414 ; unitprg.c   42        /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        415 ; unitprg.c   43        /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        416 ; unitprg.c   44        /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        417 ; unitprg.c   45        /************************************************************************
                            **/
                        418 ; unitprg.c   46        void BBSPGReset( bool SPGReset, bool BBReset, bool SPGPrg)
                        419 ; unitprg.c   47        {
000000                  420 UNITPRG_PR      SEGMENT HCODE
000000                  421         RSEG    UNITPRG_PR
                        422         ALIGN   1
                        424         PUBLIC  _BBSPGReset
000000                  425 _BBSPGReset:
                        437 ; unitprg.c   48                UI tmp = 3;
000000 B933             439         MOV.W   R3,#03H
                        441 ; unitprg.c   49        
                        442 ; unitprg.c   50                if ( SPGReset)
000002 6900             444         OR.W    R0,R0
000004 F301             445         BEQ     _3
                        446 ; unitprg.c   51                        tmp &= 0xFE;
000006 B932             448         MOV.W   R3,#02H
000008                  451 _3:
                        452 ; unitprg.c   52        
                        453 ; unitprg.c   53                if ( BBReset)
000008 6911             455         OR.W    R1,R1
00000A F302             456         BEQ     _4
                        457 ; unitprg.c   54                        tmp &= 0xFD;
00000C 993500FD         459         AND.W   R3,#0FDH
000010                  462 _4:
                        463 ; unitprg.c   55        
                        464 ; unitprg.c   56                if ( SPGPrg)
000010 6922             466         OR.W    R2,R2
000012 F302             467         BEQ     _5
                        468 ; unitprg.c   57                        tmp |= 0x04;
000014 99360004         470         OR.W    R3,#04H
000018                  473 _5:
                        474 ; unitprg.c   58        
                        475 ; unitprg.c   59                BBSPGResetPort = tmp;
000018 96484206         477         MOV.B   ES,#SEG( _BBSPGResetPort )
00001C 9908A018         478         MOV.W   R0,#SOF( _BBSPGResetPort )
000020 8A38             479         MOV.W   [R0],R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        480 ; unitprg.c   60        }
000022 D680             482         RET
                        488 ; unitprg.c   61        
                        489 ; unitprg.c   62        /************************************************************************
                            **/
                        490 ; unitprg.c   63        /* BBSPGCommunication                                                    
                                                                                                                             
                                              UNITPRG.C     */
                        491 ; unitprg.c   64        /*                                                                       
                                                                                                                             
                                                                                                                             
                                                    */
                        492 ; unitprg.c   65        /* Author:       Kim Engedahl, DEV, 000407                               
                                                                                                                             
                                            */
                        493 ; unitprg.c   66        /* Revised:      000607, KEn DEV                                         
                                                                                                                             
                                                            */
                        494 ; unitprg.c   67        /*                                                                       
                                                                                                                             
                                                                                                                            *
                            /
                        495 ; unitprg.c   68        /* Function:                                                             
                                                                                                                             
                                                                                                            */
                        496 ; unitprg.c   69        /* Remarks:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        497 ; unitprg.c   70        /* Returns:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        498 ; unitprg.c   71        /* Updates:                                                              
                                                                                                                             
                                                                                                                            *
                            /
                        499 ; unitprg.c   72        /************************************************************************
                            **/
                        500 ; unitprg.c   73        void BBSPGCommunication( int unit)
                        501 ; unitprg.c   74        {
                        502         ALIGN   1
                        504         PUBLIC  _BBSPGCommunication
000024                  505 _BBSPGCommunication:
000024 0F30             509         PUSH.W  R4, R5
000026 8950             512         MOV.W   R5,R0
                        520 ; unitprg.c   75                UI i;
                        521 ; unitprg.c   76                bool Test1LEDFlag = FALSE;
000028 B940             523         MOV.W   R4,#00H
                        525 ; unitprg.c   77        
                        526 ; unitprg.c   78                EA = 0;
00002A 080337           528         CLR     0337H
                        529 ; unitprg.c   79        
                        530 ; unitprg.c   80                BBSPGReset( true, true, true);                  // Set program bi
                            t and reset units
00002D 9908FFFF         532         MOV.W   R0,#0FFFFH
000031 9918FFFF         533         MOV.W   R1,#0FFFFH
000035 9928FFFF         534         MOV.W   R2,#0FFFFH
000039 C5FFE2           535         CALL    _BBSPGReset
                        536 ; unitprg.c   81        
                        537 ; unitprg.c   82                for ( i = 0; i < 60000; i++)                            //  Wait
00003C B900             539         MOV.W   R0,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00003E                  541 _6:
00003E A901             542         ADDS.W  R0,#01H
000040 9904EA60         545         CMP.W   R0,#0EA60H
000044 F1FC             546         BCS     _6
                        547 ; unitprg.c   83                        ;
                        548 ; unitprg.c   84        
                        549 ; unitprg.c   85                if ( unit == 0)
000046 6955             551         OR.W    R5,R5
000048 F208             552         BNE     _7
                        553 ; unitprg.c   86                        BBSPGReset( true, false, true);         // Release reset 
                            for unit to be programmed
00004A 9908FFFF         555         MOV.W   R0,#0FFFFH
00004E B910             557         MOV.W   R1,#00H
000050 9928FFFF         558         MOV.W   R2,#0FFFFH
000054 C5FFD5           559         CALL    _BBSPGReset
000057 FE08             560         BR      _8
000057 FE0800           560         BR      _8
00005A                  561 _7:
                        562 ; unitprg.c   87                else
                        563 ; unitprg.c   88                        BBSPGReset( false, true, true);         // Release reset 
                            for unit to be programmed
00005A 9918FFFF         565         MOV.W   R1,#0FFFFH
00005E B900             566         MOV.W   R0,#00H
000060 9928FFFF         567         MOV.W   R2,#0FFFFH
000064 C5FFCD           568         CALL    _BBSPGReset
000064 C5FFCD00         568         CALL    _BBSPGReset
000068                  569 _8:
                        570 ; unitprg.c   89        
                        571 ; unitprg.c   90                IEH = 0;                                                         
                                                    // Disable ALL interrupts
000068 B64027           573         MOV.B   0427H,#00H
                        574 ; unitprg.c   91                IEL = 0;
00006B B64026           576         MOV.B   0426H,#00H
                        577 ; unitprg.c   92        
                        578 ; unitprg.c   93                UnitPgmMode = 1;
00006E 081rrr           580         SETB    _UnitPgmMode
                        581 ; unitprg.c   94        
                        582 ; unitprg.c   95                TR2 = 0;                                                         
                                                    // Stop timer 2
000071 0802C2           584         CLR     02C2H
                        585 ; unitprg.c   96                T2CON &= 0xCF;                                                  /
                            / Use timer 1 as baud rate generator for both
000074 964518CF         587         AND.B   0418H,#0CFH
                        588 ; unitprg.c   97                T2MOD &= 0xCF;                                                  /
                            /  serial ports.
000078 964519CF         590         AND.B   0419H,#0CFH
                        591 ; unitprg.c   98        
                        592 ; unitprg.c   99                S0CON = 0xD8;                                                    
                                    // UART mode 1: 1 start, 9 data, 1 stop,
00007C 964820D8         594         MOV.B   0420H,#0D8H
                        595 ; unitprg.c  100                                                                                 
                                                                            //  (9th bit used as stop bit)
                        596 ; unitprg.c  101        
                        597 ; unitprg.c  102                S1CON = 0xD8;                                                    
                                    // UART mode 1: 1 start, 9 data, 1 stop,
000080 964824D8         599         MOV.B   0424H,#0D8H
                        600 ; unitprg.c  103                                                                                 
                                                                            //  (9th bit used as stop bit)
                        601 ; unitprg.c  104        
                        602 ; unitprg.c  105                TR1 = 0;                                                         
                                                    // Stop Timer 1, just in case you know
000084 080286           604         CLR     0286H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
                        605 ; unitprg.c  106        
                        606 ; unitprg.c  107                TMOD &= 0x0F;                                                    
                                    // Timer 1: 16-bit auto-reload timer
000087 96455C0F         608         AND.B   045CH,#0FH
                        609 ; unitprg.c  108        
                        610 ; unitprg.c  109                TH1 = RTH1 = 0xFF;                                      // 115200
                             baud
00008B 964857FF         612         MOV.B   0457H,#0FFH
00008F 97445357         613         MOV.B   0453H,0457H
                        614 ; unitprg.c  110                TL1 = RTL1 = 0xFC;
000093 964856FC         616         MOV.B   0456H,#0FCH
000097 97445256         617         MOV.B   0452H,0456H
                        618 ; unitprg.c  111        
                        619 ; unitprg.c  112                TR1 = 1;                                                         
                                                    // Start Timer 1
00009B 081286           621         SETB    0286H
                        622 ; unitprg.c  113        
                        623 ; unitprg.c  114                RI_0 = 0;                                                        
                                                    // Clear possible Interrupt flag RI_0
00009E 080300           625         CLR     0300H
                        626 ; unitprg.c  115                TI_0 = 0;                                                        
                                                    // Clear possible Interrupt flag TI_0
0000A1 080301           628         CLR     0301H
                        629 ; unitprg.c  116        
                        630 ; unitprg.c  117                RI_1 = 0;                                                        
                                                    // Clear possible Interrupt flag RI_1
0000A4 080320           632         CLR     0320H
                        633 ; unitprg.c  118                TI_1 = 0;                                                        
                                                    // Clear possible Interrupt flag TI_1
0000A7 080321           635         CLR     0321H
                        636 ; unitprg.c  119        
                        637 ; unitprg.c  120                ERI0 = 1;                                                        
                                                    // Enable SIO0 Rx-interrupt
0000AA 081338           639         SETB    0338H
                        640 ; unitprg.c  121                ETI0 = 1;                                                        
                                                    // Enable SIO0 Tx-interrupt
0000AD 081339           642         SETB    0339H
                        643 ; unitprg.c  122        
                        644 ; unitprg.c  123                ERI1 = 1;                                                        
                                                    // Enable SIO1 Rx-interrupt
0000B0 08133A           646         SETB    033AH
                        647 ; unitprg.c  124                ETI1 = 1;                                                        
                                                    // Enable SIO1 Tx-interrupt
0000B3 08133B           649         SETB    033BH
                        650 ; unitprg.c  125        
                        651 ; unitprg.c  126                EA = 1;
0000B6 081337           653         SETB    0337H
                        654 ; unitprg.c  127        
                        655 ; unitprg.c  128                while ( true)
0000BA                  657 _9:
                        658 ; unitprg.c  129                {
                        659 ; unitprg.c  130                        for ( i = 0; i < 60000; i++)
0000BA B900             661         MOV.W   R0,#00H
0000BC                  663 _10:
0000BC A901             664         ADDS.W  R0,#01H
0000BE 9904EA60         667         CMP.W   R0,#0EA60H
0000C2 F1FC             668         BCS     _10
                        669 ; unitprg.c  131                                ;
                        670 ; unitprg.c  132        
                        671 ; unitprg.c  133                        Test1LEDFlag ^= 1;
0000C4 99470001         673         XOR.W   R4,#01H
                        676 ; unitprg.c  134                        TestLEDSet( Test1LED, Test1LEDFlag);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
0000C8 B901             678         MOV.W   R0,#01H
0000CA 8914             680         MOV.W   R1,R4
                        683         CALL    _TestLEDSet
0000CC C4rrrrrr        +683 ;       FCALL   _TestLEDSet
0000D0 FEF4             687         BR      _9
                        688 ; unitprg.c  135                }
                        689 ; unitprg.c  136        }
0000D2 2F30             691         POP.W   R4, R5
0000D4 D680             693         RET
                        697 ; unitprg.c  137        
06A018                  702         HSEG AT 06A018H
                        703         PUBLIC  _BBSPGResetPort
                        704         ALIGN   1
06A018                  705 _BBSPGResetPort:        DS      2
   |  RESERVED             
06A019
                        708         EXTRN   HCODE(_TestLEDSet)
000000                  711 UNITPRG_CLR_BI@DS       SEGMENT BIT JOIN
000000                  712         RSEG    UNITPRG_CLR_BI@DS
                        713         PUBLIC  _JKflag
000000 RESERVED         714 _JKflag:        DBIT    1
000000
                        717         PUBLIC  _UnitPgmMode
000001 RESERVED         718 _UnitPgmMode:   DBIT    1
000001
                        719         EXTRN   DATA(__lc_ub_xvwbuffer)
                        720         EXTRN   DATA(__lc_ue_xvwbuffer)
                        721         CALLS   'BBSPGCommunication', 'BBSPGReset'
                        722         CALLS   'BBSPGCommunication', 'TestLEDSet'
