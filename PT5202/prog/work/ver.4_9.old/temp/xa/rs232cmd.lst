XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   1
C:\LT428\work\ver.4_9\temp\xa\rs232cmd.src
ADDR   CODE            LINE SOURCELINE
                          1 ; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
                          2 ; options: -A1 -Cxag3 -e -g -Ic:\cxa\include -Ic:\LT428\rtxc\xa\include -I. -Ml
                          3 ;          -O2 -s
                          5 $NOZPAGE
                          6         NAME    RS232CMD
                         10 ; rs232cmd.c    1       /* MODULE:                                                               
                               */
                         11 ; rs232cmd.c    2       /*   r232cmd.c - RS232 remote commands.                                  
                                            */
                         12 ; rs232cmd.c    3       /************************************************************************
                            ****/
                         13 ; rs232cmd.c    4       /* FUNCTIONS:                                                            
                               */
                         14 ; rs232cmd.c    5       /*                                                                       
                               */
                         15 ; rs232cmd.c    6       /* TASKS:                                                                
                               */
                         16 ; rs232cmd.c    7       /*                                                                       
                               */
                         17 ; rs232cmd.c    8       /* NOTES:  20.11.01 - FactGenlockGenUOffDAC() FUNCTION ADDED: JK         
                               */
                         18 ; rs232cmd.c    9       /*                                                                       
                               */
                         19 ; rs232cmd.c   10       /************************************************************************
                            ****/
                         20 ; rs232cmd.c   11       /*
                         21 ; rs232cmd.c   12        *   PTV software for PT5201
                         22 ; rs232cmd.c   13        *   Copyright (c) 
                         23 ; rs232cmd.c   14        *   ProTeleVision Technologies A/S.
                         24 ; rs232cmd.c   15        *   ALL RIGHTS RESERVED
                         25 ; rs232cmd.c   16       */
                         26 ; rs232cmd.c   17       /************************************************************************
                            ****/
                         27 ; rs232cmd.c   18       
                         28 ; rs232cmd.c   19       /************************************************************************
                            ****/
                         29 ; rs232cmd.c   20       /* Include files:                                                        
                                                                                                                             
                                   */
                         30 ; rs232cmd.c   21       
                         31 ; rs232cmd.c   22       #include <string.h>
                         35 ; rs232cmd.c   23       #include <ctype.h>
                         38 ; rs232cmd.c   24       #include <stdio.h>
                         58 ; rs232cmd.c   25       #include <stdlib.h>
                         72 ; rs232cmd.c   26       #include <math.h>
                         75 ; rs232cmd.c   27       
                         76 ; rs232cmd.c   28       #include "config.h"
                         79 ; rs232cmd.c   29       #include "define.h"
                         82 ; rs232cmd.c   30       #include "rtxcobj.h"
                        407 ; rs232cmd.c   31       #include "rs232par.h"
                        410 ; rs232cmd.c   32       #include "rs232err.h"
                        413 ; rs232cmd.c   33       #include "rs232cmd.h"
                        418 ; rs232cmd.c   34       #include "util.h"
                        421 ; rs232cmd.c   35       #include "rs232.h"
                        428 ; rs232cmd.c   36       #include "i2c_drv.h"
                        431 ; rs232cmd.c   37       #include "sio0drv.h"
                        438 ; rs232cmd.c   38       #include "instru.h"
                        542 ; rs232cmd.c   39       #include "tables.h"
                        545 ; rs232cmd.c   40       #include "genlock.h"
                        548 ; rs232cmd.c   41       #include "bb.h"
                        551 ; rs232cmd.c   42       #include "cbar.h"
                        554 ; rs232cmd.c   43       #include "audio.h"
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   2

ADDR   CODE            LINE SOURCELINE
                        557 ; rs232cmd.c   44       #include "plddrv.h"
                        560 ; rs232cmd.c   45       #include "unitprg.h"
                        567 ; rs232cmd.c   46       
                        568 ; rs232cmd.c   47       
                        569 ; rs232cmd.c   48       UC code MasterSWVersion                 = 49;
000000                  570 RS232CMD_RO     SEGMENT HCODE ROMDATA
000000                  571         RSEG    RS232CMD_RO
                        574         PUBLIC  _MasterSWVersion
000000                  575 _MasterSWVersion:
                        576 ; rs232cmd.c   49       
                        577 ; rs232cmd.c   50       char code SystemVersionTxt[]            = "1995.0";
000000 31               578         DB      031H
                        582         PUBLIC  _SystemVersionTxt
000001                  583 _SystemVersionTxt:
                        584 ; rs232cmd.c   51       char code PasswordText[]                = "PASS5201";
000001 313939352E3000   585         DB      031H,039H,039H,035H,02EH,030H,000H
                        588         PUBLIC  _PasswordText
000008                  589 _PasswordText:
                        590 ; rs232cmd.c   52       
                        591 ; rs232cmd.c   53       char code CLSCmdTxt[]                   = "CLS";
000008 50415353353230   592         DB      050H,041H,053H,053H,035H,032H,030H,031H,000H
       3100                 
                        595         PUBLIC  _CLSCmdTxt
000011                  596 _CLSCmdTxt:
                        597 ; rs232cmd.c   54       char code ESECmdTxt[]                   = "ESE";
000011 434C5300         598         DB      043H,04CH,053H,000H
                        601         PUBLIC  _ESECmdTxt
000015                  602 _ESECmdTxt:
                        603 ; rs232cmd.c   55       char code ESRCmdTxt[]                   = "ESR";
000015 45534500         604         DB      045H,053H,045H,000H
                        607         PUBLIC  _ESRCmdTxt
000019                  608 _ESRCmdTxt:
                        609 ; rs232cmd.c   56       char code OPCCmdTxt[]                   = "OPC";
000019 45535200         610         DB      045H,053H,052H,000H
                        613         PUBLIC  _OPCCmdTxt
00001D                  614 _OPCCmdTxt:
                        615 ; rs232cmd.c   57       char code SRECmdTxt[]                   = "SRE";
00001D 4F504300         616         DB      04FH,050H,043H,000H
                        619         PUBLIC  _SRECmdTxt
000021                  620 _SRECmdTxt:
                        621 ; rs232cmd.c   58       char code STBCmdTxt[]                   = "STB";
000021 53524500         622         DB      053H,052H,045H,000H
                        625         PUBLIC  _STBCmdTxt
000025                  626 _STBCmdTxt:
                        627 ; rs232cmd.c   59       char code TSTCmdTxt[]                   = "TST";
000025 53544200         628         DB      053H,054H,042H,000H
                        631         PUBLIC  _TSTCmdTxt
000029                  632 _TSTCmdTxt:
                        633 ; rs232cmd.c   60       char code WAICmdTxt[]                   = "WAI";
000029 54535400         634         DB      054H,053H,054H,000H
                        637         PUBLIC  _WAICmdTxt
00002D                  638 _WAICmdTxt:
                        639 ; rs232cmd.c   61       char code RSTCmdTxt[]                   = "RST";
00002D 57414900         640         DB      057H,041H,049H,000H
                        643         PUBLIC  _RSTCmdTxt
000031                  644 _RSTCmdTxt:
                        645 ; rs232cmd.c   62       char code IDNCmdTxt[]                   = "IDN";
000031 52535400         646         DB      052H,053H,054H,000H
                        649         PUBLIC  _IDNCmdTxt
000035                  650 _IDNCmdTxt:
                        651 ; rs232cmd.c   63       char code RCLCmdTxt[]                   = "RCL";
000035 49444E00         652         DB      049H,044H,04EH,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   3

ADDR   CODE            LINE SOURCELINE
                        655         PUBLIC  _RCLCmdTxt
000039                  656 _RCLCmdTxt:
                        657 ; rs232cmd.c   64       char code SAVCmdTxt[]                   = "SAV";
000039 52434C00         658         DB      052H,043H,04CH,000H
                        661         PUBLIC  _SAVCmdTxt
00003D                  662 _SAVCmdTxt:
                        663 ; rs232cmd.c   65       
                        664 ; rs232cmd.c   66       char code SYSTEMCmdTxt[]                = "SYSTEM";
00003D 53415600         665         DB      053H,041H,056H,000H
                        668         PUBLIC  _SYSTEMCmdTxt
000041                  669 _SYSTEMCmdTxt:
                        670 ; rs232cmd.c   67       char code SYSTCmdTxt[]                  = "SYST";
000041 53595354454D00   671         DB      053H,059H,053H,054H,045H,04DH,000H
                        674         PUBLIC  _SYSTCmdTxt
000048                  675 _SYSTCmdTxt:
                        676 ; rs232cmd.c   68       char code STATUSCmdTxt[]                = "STATUS";
000048 5359535400       677         DB      053H,059H,053H,054H,000H
                        680         PUBLIC  _STATUSCmdTxt
00004D                  681 _STATUSCmdTxt:
                        682 ; rs232cmd.c   69       char code STATCmdTxt[]                  = "STAT";
00004D 53544154555300   683         DB      053H,054H,041H,054H,055H,053H,000H
                        686         PUBLIC  _STATCmdTxt
000054                  687 _STATCmdTxt:
                        688 ; rs232cmd.c   70       char code DIAGNOSTICCmdTxt[]            = "DIAGNOSTIC";
000054 5354415400       689         DB      053H,054H,041H,054H,000H
                        692         PUBLIC  _DIAGNOSTICCmdTxt
000059                  693 _DIAGNOSTICCmdTxt:
                        694 ; rs232cmd.c   71       char code DIAGCmdTxt[]                  = "DIAG";
000059 444941474E4F53   695         DB      044H,049H,041H,047H,04EH,04FH,053H,054H,049H,043H,000H
       54494300             
                        698         PUBLIC  _DIAGCmdTxt
000064                  699 _DIAGCmdTxt:
                        700 ; rs232cmd.c   72       char code MONITORCmdTxt[]               = "MONITOR";
000064 4449414700       701         DB      044H,049H,041H,047H,000H
                        704         PUBLIC  _MONITORCmdTxt
000069                  705 _MONITORCmdTxt:
                        706 ; rs232cmd.c   73       char code MONCmdTxt[]                   = "MON";
000069 4D4F4E49544F52   707         DB      04DH,04FH,04EH,049H,054H,04FH,052H,000H
       00                   
                        710         PUBLIC  _MONCmdTxt
000071                  711 _MONCmdTxt:
                        712 ; rs232cmd.c   74       char code INPUTCmdTxt[]                 = "INPUT";
000071 4D4F4E00         713         DB      04DH,04FH,04EH,000H
                        716         PUBLIC  _INPUTCmdTxt
000075                  717 _INPUTCmdTxt:
                        718 ; rs232cmd.c   75       char code INPCmdTxt[]                   = "INP";
000075 494E50555400     719         DB      049H,04EH,050H,055H,054H,000H
                        722         PUBLIC  _INPCmdTxt
00007B                  723 _INPCmdTxt:
                        724 ; rs232cmd.c   76       char code OUTPUTCmdTxt[]                = "OUTPUT";
00007B 494E5000         725         DB      049H,04EH,050H,000H
                        728         PUBLIC  _OUTPUTCmdTxt
00007F                  729 _OUTPUTCmdTxt:
                        730 ; rs232cmd.c   77       char code OUTPCmdTxt[]                  = "OUTP";
00007F 4F555450555400   731         DB      04FH,055H,054H,050H,055H,054H,000H
                        734         PUBLIC  _OUTPCmdTxt
000086                  735 _OUTPCmdTxt:
                        736 ; rs232cmd.c   78       char code USERCmdTxt[]                  = "USER";
000086 4F55545000       737         DB      04FH,055H,054H,050H,000H
                        740         PUBLIC  _USERCmdTxt
00008B                  741 _USERCmdTxt:
                        742 ; rs232cmd.c   79       char code MEASURECmdTxt[]               = "MEASURE";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   4

ADDR   CODE            LINE SOURCELINE
00008B 5553455200       743         DB      055H,053H,045H,052H,000H
                        746         PUBLIC  _MEASURECmdTxt
000090                  747 _MEASURECmdTxt:
                        748 ; rs232cmd.c   80       char code MEASCmdTxt[]                  = "MEAS";
000090 4D454153555245   749         DB      04DH,045H,041H,053H,055H,052H,045H,000H
       00                   
                        752         PUBLIC  _MEASCmdTxt
000098                  753 _MEASCmdTxt:
                        754 ; rs232cmd.c   81       char code FACTORYCmdTxt[]               = "FACTORY";
000098 4D45415300       755         DB      04DH,045H,041H,053H,000H
                        758         PUBLIC  _FACTORYCmdTxt
00009D                  759 _FACTORYCmdTxt:
                        760 ; rs232cmd.c   82       char code FACTCmdTxt[]                  = "FACT";
00009D 464143544F5259   761         DB      046H,041H,043H,054H,04FH,052H,059H,000H
       00                   
                        764         PUBLIC  _FACTCmdTxt
0000A5                  765 _FACTCmdTxt:
                        766 ; rs232cmd.c   83       
                        767 ; rs232cmd.c   84       char code ERRORCmdTxt[]                 = "ERROR";
0000A5 4641435400       768         DB      046H,041H,043H,054H,000H
                        771         PUBLIC  _ERRORCmdTxt
0000AA                  772 _ERRORCmdTxt:
                        773 ; rs232cmd.c   85       char code ERRCmdTxt[]                   = "ERR";
0000AA 4552524F5200     774         DB      045H,052H,052H,04FH,052H,000H
                        777         PUBLIC  _ERRCmdTxt
0000B0                  778 _ERRCmdTxt:
                        779 ; rs232cmd.c   86       char code VERSIONCmdTxt[]               = "VERSION";
0000B0 45525200         780         DB      045H,052H,052H,000H
                        783         PUBLIC  _VERSIONCmdTxt
0000B4                  784 _VERSIONCmdTxt:
                        785 ; rs232cmd.c   87       char code VERSCmdTxt[]                  = "VERS";
0000B4 56455253494F4E   786         DB      056H,045H,052H,053H,049H,04FH,04EH,000H
       00                   
                        789         PUBLIC  _VERSCmdTxt
0000BC                  790 _VERSCmdTxt:
                        791 ; rs232cmd.c   88       char code PRESETCmdTxt[]                                = "PRESET";
0000BC 5645525300       792         DB      056H,045H,052H,053H,000H
                        795         PUBLIC  _PRESETCmdTxt
0000C1                  796 _PRESETCmdTxt:
                        797 ; rs232cmd.c   89       char code PRESCmdTxt[]                                  = "PRES";
0000C1 50524553455400   798         DB      050H,052H,045H,053H,045H,054H,000H
                        801         PUBLIC  _PRESCmdTxt
0000C8                  802 _PRESCmdTxt:
                        803 ; rs232cmd.c   90       char code EVENTLOGCmdTxt[]                              = "EVENTLOG";
0000C8 5052455300       804         DB      050H,052H,045H,053H,000H
                        807         PUBLIC  _EVENTLOGCmdTxt
0000CD                  808 _EVENTLOGCmdTxt:
                        809 ; rs232cmd.c   91       char code DATECmdTxt[]                                  = "DATE";
0000CD 4556454E544C4F   810         DB      045H,056H,045H,04EH,054H,04CH,04FH,047H,000H
       4700                 
                        813         PUBLIC  _DATECmdTxt
0000D6                  814 _DATECmdTxt:
                        815 ; rs232cmd.c   92       char code TIMECmdTxt[]                                  = "TIME";
0000D6 4441544500       816         DB      044H,041H,054H,045H,000H
                        819         PUBLIC  _TIMECmdTxt
0000DB                  820 _TIMECmdTxt:
                        821 ; rs232cmd.c   93       
                        822 ; rs232cmd.c   94       char code RECALLCmdTxt[]                                = "RECALL";
0000DB 54494D4500       823         DB      054H,049H,04DH,045H,000H
                        826         PUBLIC  _RECALLCmdTxt
0000E0                  827 _RECALLCmdTxt:
                        828 ; rs232cmd.c   95       char code RECCmdTxt[]                                   = "REC";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   5

ADDR   CODE            LINE SOURCELINE
0000E0 524543414C4C00   829         DB      052H,045H,043H,041H,04CH,04CH,000H
                        832         PUBLIC  _RECCmdTxt
0000E7                  833 _RECCmdTxt:
                        834 ; rs232cmd.c   96       char code STORECmdTxt[]                                 = "STORE";
0000E7 52454300         835         DB      052H,045H,043H,000H
                        838         PUBLIC  _STORECmdTxt
0000EB                  839 _STORECmdTxt:
                        840 ; rs232cmd.c   97       char code STORCmdTxt[]                                  = "STOR";
0000EB 53544F524500     841         DB      053H,054H,04FH,052H,045H,000H
                        844         PUBLIC  _STORCmdTxt
0000F1                  845 _STORCmdTxt:
                        846 ; rs232cmd.c   98       char code NAMECmdTxt[]                                  = "NAME";
0000F1 53544F5200       847         DB      053H,054H,04FH,052H,000H
                        850         PUBLIC  _NAMECmdTxt
0000F6                  851 _NAMECmdTxt:
                        852 ; rs232cmd.c   99       char code AUTHORCmdTxt[]                                = "AUTHOR";
0000F6 4E414D4500       853         DB      04EH,041H,04DH,045H,000H
                        856         PUBLIC  _AUTHORCmdTxt
0000FB                  857 _AUTHORCmdTxt:
                        858 ; rs232cmd.c  100       char code AUTHCmdTxt[]                                  = "AUTH";
0000FB 415554484F5200   859         DB      041H,055H,054H,048H,04FH,052H,000H
                        862         PUBLIC  _AUTHCmdTxt
000102                  863 _AUTHCmdTxt:
                        864 ; rs232cmd.c  101       char code DOWNLOADCmdTxt[]                      = "DOWNLOAD";
000102 4155544800       865         DB      041H,055H,054H,048H,000H
                        868         PUBLIC  _DOWNLOADCmdTxt
000107                  869 _DOWNLOADCmdTxt:
                        870 ; rs232cmd.c  102       char code DOWNCmdTxt[]                                  = "DOWN";
000107 444F574E4C4F41   871         DB      044H,04FH,057H,04EH,04CH,04FH,041H,044H,000H
       4400                 
                        874         PUBLIC  _DOWNCmdTxt
000110                  875 _DOWNCmdTxt:
                        876 ; rs232cmd.c  103       char code UPLOADCmdTxt[]                                = "UPLOAd";
000110 444F574E00       877         DB      044H,04FH,057H,04EH,000H
                        880         PUBLIC  _UPLOADCmdTxt
000115                  881 _UPLOADCmdTxt:
                        882 ; rs232cmd.c  104       char code UPLCmdTxt[]                                   = "UPL";
000115 55504C4F416400   883         DB      055H,050H,04CH,04FH,041H,064H,000H
                        886         PUBLIC  _UPLCmdTxt
00011C                  887 _UPLCmdTxt:
                        888 ; rs232cmd.c  105       
                        889 ; rs232cmd.c  106       char code OPERATIONCmdTxt[]                     = "OPERATION";
00011C 55504C00         890         DB      055H,050H,04CH,000H
                        893         PUBLIC  _OPERATIONCmdTxt
000120                  894 _OPERATIONCmdTxt:
                        895 ; rs232cmd.c  107       char code OPERCmdTxt[]                          = "OPER";
000120 4F504552415449   896         DB      04FH,050H,045H,052H,041H,054H,049H,04FH,04EH,000H
       4F4E00               
                        899         PUBLIC  _OPERCmdTxt
00012A                  900 _OPERCmdTxt:
                        901 ; rs232cmd.c  108       char code QUESTIONABLECmdTxt[]          = "QUESTIONABLE";
00012A 4F50455200       902         DB      04FH,050H,045H,052H,000H
                        905         PUBLIC  _QUESTIONABLECmdTxt
00012F                  906 _QUESTIONABLECmdTxt:
00012F 5155455354494F   907         DB      051H,055H,045H,053H,054H,049H,04FH,04EH,041H,042H,04CH,045H
       4E41424C45           
                        908 ; rs232cmd.c  109       char code QUESCmdTxt[]                                  = "QUES";
00013B 00               909         DB      000H
                        912         PUBLIC  _QUESCmdTxt
00013C                  913 _QUESCmdTxt:
                        914 ; rs232cmd.c  110       
                        915 ; rs232cmd.c  111       char code EVENTCmdTxt[]                                 = "EVENT";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   6

ADDR   CODE            LINE SOURCELINE
00013C 5155455300       916         DB      051H,055H,045H,053H,000H
                        919         PUBLIC  _EVENTCmdTxt
000141                  920 _EVENTCmdTxt:
                        921 ; rs232cmd.c  112       char code EVENCmdTxt[]                                  = "EVEN";
000141 4556454E5400     922         DB      045H,056H,045H,04EH,054H,000H
                        925         PUBLIC  _EVENCmdTxt
000147                  926 _EVENCmdTxt:
                        927 ; rs232cmd.c  113       char code CONDITIONCmdTxt[]                     = "CONDITION";
000147 4556454E00       928         DB      045H,056H,045H,04EH,000H
                        931         PUBLIC  _CONDITIONCmdTxt
00014C                  932 _CONDITIONCmdTxt:
                        933 ; rs232cmd.c  114       char code CONDCmdTxt[]                                  = "COND";
00014C 434F4E44495449   934         DB      043H,04FH,04EH,044H,049H,054H,049H,04FH,04EH,000H
       4F4E00               
                        937         PUBLIC  _CONDCmdTxt
000156                  938 _CONDCmdTxt:
                        939 ; rs232cmd.c  115       char code ENABLECmdTxt[]                                = "ENABLE";
000156 434F4E4400       940         DB      043H,04FH,04EH,044H,000H
                        943         PUBLIC  _ENABLECmdTxt
00015B                  944 _ENABLECmdTxt:
                        945 ; rs232cmd.c  116       char code ENABCmdTxt[]                                  = "ENAB";
00015B 454E41424C4500   946         DB      045H,04EH,041H,042H,04CH,045H,000H
                        949         PUBLIC  _ENABCmdTxt
000162                  950 _ENABCmdTxt:
                        951 ; rs232cmd.c  117       
                        952 ; rs232cmd.c  118       char code DISPLAYCmdTxt[]                               = "DISPLAY";
000162 454E414200       953         DB      045H,04EH,041H,042H,000H
                        956         PUBLIC  _DISPLAYCmdTxt
000167                  957 _DISPLAYCmdTxt:
                        958 ; rs232cmd.c  119       char code DISPCmdTxt[]                                  = "DISP";
000167 444953504C4159   959         DB      044H,049H,053H,050H,04CH,041H,059H,000H
       00                   
                        962         PUBLIC  _DISPCmdTxt
00016F                  963 _DISPCmdTxt:
                        964 ; rs232cmd.c  120       char code ERRORQUEUECmdTxt[]            = "ERRORQUEUE";
00016F 4449535000       965         DB      044H,049H,053H,050H,000H
                        968         PUBLIC  _ERRORQUEUECmdTxt
000174                  969 _ERRORQUEUECmdTxt:
                        970 ; rs232cmd.c  121       char code RESETCmdTxt[]                                 = "RESET";
000174 4552524F525155   971         DB      045H,052H,052H,04FH,052H,051H,055H,045H,055H,045H,000H
       45554500             
                        974         PUBLIC  _RESETCmdTxt
00017F                  975 _RESETCmdTxt:
                        976 ; rs232cmd.c  122       char code RESCmdTxt[]                                   = "RES";
00017F 524553455400     977         DB      052H,045H,053H,045H,054H,000H
                        980         PUBLIC  _RESCmdTxt
000185                  981 _RESCmdTxt:
                        982 ; rs232cmd.c  123       
                        983 ; rs232cmd.c  124       char code DEFAULTCmdTxt[]                               = "DEFAULT";
000185 52455300         984         DB      052H,045H,053H,000H
                        987         PUBLIC  _DEFAULTCmdTxt
000189                  988 _DEFAULTCmdTxt:
                        989 ; rs232cmd.c  125       char code DEFCmdTxt[]                                   = "DEF";
000189 44454641554C54   990         DB      044H,045H,046H,041H,055H,04CH,054H,000H
       00                   
                        993         PUBLIC  _DEFCmdTxt
000191                  994 _DEFCmdTxt:
                        995 ; rs232cmd.c  126       
                        996 ; rs232cmd.c  127       char code GENLOCKCmdTxt[]                               = "GENLOCK";
000191 44454600         997         DB      044H,045H,046H,000H
                       1000         PUBLIC  _GENLOCKCmdTxt
000195                 1001 _GENLOCKCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   7

ADDR   CODE            LINE SOURCELINE
                       1002 ; rs232cmd.c  128       char code GENLCmdTxt[]                                  = "GENL";
000195 47454E4C4F434B  1003         DB      047H,045H,04EH,04CH,04FH,043H,04BH,000H
       00                   
                       1006         PUBLIC  _GENLCmdTxt
00019D                 1007 _GENLCmdTxt:
                       1008 ; rs232cmd.c  129       
                       1009 ; rs232cmd.c  130       char code DELAYCmdTxt[]                                 = "DELAY";
00019D 47454E4C00      1010         DB      047H,045H,04EH,04CH,000H
                       1013         PUBLIC  _DELAYCmdTxt
0001A2                 1014 _DELAYCmdTxt:
                       1015 ; rs232cmd.c  131       char code DELCmdTxt[]                                   = "DEL";
0001A2 44454C415900    1016         DB      044H,045H,04CH,041H,059H,000H
                       1019         PUBLIC  _DELCmdTxt
0001A8                 1020 _DELCmdTxt:
                       1021 ; rs232cmd.c  132       
                       1022 ; rs232cmd.c  133       char code CALIBRATECmdTxt[]                     = "CALIBRATE";
0001A8 44454C00        1023         DB      044H,045H,04CH,000H
                       1026         PUBLIC  _CALIBRATECmdTxt
0001AC                 1027 _CALIBRATECmdTxt:
                       1028 ; rs232cmd.c  134       char code CALCmdTxt[]                                   = "CAL";
0001AC 43414C49425241  1029         DB      043H,041H,04CH,049H,042H,052H,041H,054H,045H,000H
       544500               
                       1032         PUBLIC  _CALCmdTxt
0001B6                 1033 _CALCmdTxt:
                       1034 ; rs232cmd.c  135       
                       1035 ; rs232cmd.c  136       char code ADJUSTCmdTxt[]                                = "ADJUST";
0001B6 43414C00        1036         DB      043H,041H,04CH,000H
                       1039         PUBLIC  _ADJUSTCmdTxt
0001BA                 1040 _ADJUSTCmdTxt:
                       1041 ; rs232cmd.c  137       char code ADJCmdTxt[]                                   = "ADJ";
0001BA 41444A55535400  1042         DB      041H,044H,04AH,055H,053H,054H,000H
                       1045         PUBLIC  _ADJCmdTxt
0001C1                 1046 _ADJCmdTxt:
                       1047 ; rs232cmd.c  138       
                       1048 ; rs232cmd.c  139       char code BBCmdTxt[]                                    = "BB";
0001C1 41444A00        1049         DB      041H,044H,04AH,000H
                       1052         PUBLIC  _BBCmdTxt
0001C5                 1053 _BBCmdTxt:
                       1054 ; rs232cmd.c  140       char code TSGENERATORCmdTxt[]           = "TSGENERATOR";
0001C5 424200          1055         DB      042H,042H,000H
                       1058         PUBLIC  _TSGENERATORCmdTxt
0001C8                 1059 _TSGENERATORCmdTxt:
                       1060 ; rs232cmd.c  141       char code TSGCmdTxt[]                                   = "TSG";
0001C8 545347454E4552  1061         DB      054H,053H,047H,045H,04EH,045H,052H,041H,054H,04FH,052H,000H
       41544F5200           
                       1064         PUBLIC  _TSGCmdTxt
0001D4                 1065 _TSGCmdTxt:
                       1066 ; rs232cmd.c  142       char code AUDIOCmdTxt[]                                 = "AUDIO";
0001D4 54534700        1067         DB      054H,053H,047H,000H
                       1070         PUBLIC  _AUDIOCmdTxt
0001D8                 1071 _AUDIOCmdTxt:
                       1072 ; rs232cmd.c  143       char code AUDCmdTxt[]                                   = "AUD";
0001D8 415544494F00    1073         DB      041H,055H,044H,049H,04FH,000H
                       1076         PUBLIC  _AUDCmdTxt
0001DE                 1077 _AUDCmdTxt:
                       1078 ; rs232cmd.c  144       
                       1079 ; rs232cmd.c  145       char code ANALOGCmdTxt[]                                = "ANALOG";
0001DE 41554400        1080         DB      041H,055H,044H,000H
                       1083         PUBLIC  _ANALOGCmdTxt
0001E2                 1084 _ANALOGCmdTxt:
                       1085 ; rs232cmd.c  146       char code ANALCmdTxt[]                                  = "ANAL";
0001E2 414E414C4F4700  1086         DB      041H,04EH,041H,04CH,04FH,047H,000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   8

ADDR   CODE            LINE SOURCELINE
                       1089         PUBLIC  _ANALCmdTxt
0001E9                 1090 _ANALCmdTxt:
                       1091 ; rs232cmd.c  147       
                       1092 ; rs232cmd.c  148       char code PATTERNCmdTxt[]                               = "PATTERN";
0001E9 414E414C00      1093         DB      041H,04EH,041H,04CH,000H
                       1096         PUBLIC  _PATTERNCmdTxt
0001EE                 1097 _PATTERNCmdTxt:
                       1098 ; rs232cmd.c  149       char code PATTCmdTxt[]                                  = "PATT";
0001EE 5041545445524E  1099         DB      050H,041H,054H,054H,045H,052H,04EH,000H
       00                   
                       1102         PUBLIC  _PATTCmdTxt
0001F6                 1103 _PATTCmdTxt:
                       1104 ; rs232cmd.c  150       char code EMBAUDIOCmdTxt[]                      = "EMBAUDIO";
0001F6 5041545400      1105         DB      050H,041H,054H,054H,000H
                       1108         PUBLIC  _EMBAUDIOCmdTxt
0001FB                 1109 _EMBAUDIOCmdTxt:
                       1110 ; rs232cmd.c  151       char code EMBCmdTxt[]                                   = "EMB";
0001FB 454D4241554449  1111         DB      045H,04DH,042H,041H,055H,044H,049H,04FH,000H
       4F00                 
                       1114         PUBLIC  _EMBCmdTxt
000204                 1115 _EMBCmdTxt:
                       1116 ; rs232cmd.c  152       
                       1117 ; rs232cmd.c  153       char code AESEBUCmdTxt[]                                = "AESEBU";
000204 454D4200        1118         DB      045H,04DH,042H,000H
                       1121         PUBLIC  _AESEBUCmdTxt
000208                 1122 _AESEBUCmdTxt:
                       1123 ; rs232cmd.c  154       char code AESCmdTxt[]                                   = "AES";
000208 41455345425500  1124         DB      041H,045H,053H,045H,042H,055H,000H
                       1127         PUBLIC  _AESCmdTxt
00020F                 1128 _AESCmdTxt:
                       1129 ; rs232cmd.c  155       
                       1130 ; rs232cmd.c  156       char code SCHPHASECmdTxt[]                      = "SCHPHASE";
00020F 41455300        1131         DB      041H,045H,053H,000H
                       1134         PUBLIC  _SCHPHASECmdTxt
000213                 1135 _SCHPHASECmdTxt:
                       1136 ; rs232cmd.c  157       char code SCHPCmdTxt[]                                  = "SCHP";
000213 53434850484153  1137         DB      053H,043H,048H,050H,048H,041H,053H,045H,000H
       4500                 
                       1140         PUBLIC  _SCHPCmdTxt
00021C                 1141 _SCHPCmdTxt:
                       1142 ; rs232cmd.c  158       
                       1143 ; rs232cmd.c  159       char code SIGNALCmdTxt[]                                = "SIGNAL";
00021C 5343485000      1144         DB      053H,043H,048H,050H,000H
                       1147         PUBLIC  _SIGNALCmdTxt
000221                 1148 _SIGNALCmdTxt:
                       1149 ; rs232cmd.c  160       char code SIGNCmdTxt[]                                  = "SIGN";
000221 5349474E414C00  1150         DB      053H,049H,047H,04EH,041H,04CH,000H
                       1153         PUBLIC  _SIGNCmdTxt
000228                 1154 _SIGNCmdTxt:
                       1155 ; rs232cmd.c  161       char code LEVELCmdTxt[]                                 = "LEVEL";
000228 5349474E00      1156         DB      053H,049H,047H,04EH,000H
                       1159         PUBLIC  _LEVELCmdTxt
00022D                 1160 _LEVELCmdTxt:
                       1161 ; rs232cmd.c  162       char code LEVCmdTxt[]                                   = "LEV";
00022D 4C4556454C00    1162         DB      04CH,045H,056H,045H,04CH,000H
                       1165         PUBLIC  _LEVCmdTxt
000233                 1166 _LEVCmdTxt:
                       1167 ; rs232cmd.c  163       char code EDHINSERTCmdTxt[]                     = "EDHINSERT";
000233 4C455600        1168         DB      04CH,045H,056H,000H
                       1171         PUBLIC  _EDHINSERTCmdTxt
000237                 1172 _EDHINSERTCmdTxt:
                       1173 ; rs232cmd.c  164       char code EDHCmdTxt[]                                   = "EDH";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page   9

ADDR   CODE            LINE SOURCELINE
000237 454448494E5345  1174         DB      045H,044H,048H,049H,04EH,053H,045H,052H,054H,000H
       525400               
                       1177         PUBLIC  _EDHCmdTxt
000241                 1178 _EDHCmdTxt:
                       1179 ; rs232cmd.c  165       
                       1180 ; rs232cmd.c  166       char code TIMINGCmdTxt[]                                = "TIMING";
000241 45444800        1181         DB      045H,044H,048H,000H
                       1184         PUBLIC  _TIMINGCmdTxt
000245                 1185 _TIMINGCmdTxt:
                       1186 ; rs232cmd.c  167       char code TIMCmdTxt[]                                   = "TIM";
000245 54494D494E4700  1187         DB      054H,049H,04DH,049H,04EH,047H,000H
                       1190         PUBLIC  _TIMCmdTxt
00024C                 1191 _TIMCmdTxt:
                       1192 ; rs232cmd.c  168       
                       1193 ; rs232cmd.c  169       char code WORDCLOCKCmdTxt[]                     = "WORDCLOCK";
00024C 54494D00        1194         DB      054H,049H,04DH,000H
                       1197         PUBLIC  _WORDCLOCKCmdTxt
000250                 1198 _WORDCLOCKCmdTxt:
                       1199 ; rs232cmd.c  170       char code WORDCmdTxt[]                                  = "WORD";
000250 574F5244434C4F  1200         DB      057H,04FH,052H,044H,043H,04CH,04FH,043H,04BH,000H
       434B00               
                       1203         PUBLIC  _WORDCmdTxt
00025A                 1204 _WORDCmdTxt:
                       1205 ; rs232cmd.c  171       
                       1206 ; rs232cmd.c  172       char code CLICKCmdTxt[]                                 = "CLICK";
00025A 574F524400      1207         DB      057H,04FH,052H,044H,000H
                       1210         PUBLIC  _CLICKCmdTxt
00025F                 1211 _CLICKCmdTxt:
                       1212 ; rs232cmd.c  173       char code CLICCmdTxt[]                                  = "CLIC";
00025F 434C49434B00    1213         DB      043H,04CH,049H,043H,04BH,000H
                       1216         PUBLIC  _CLICCmdTxt
000265                 1217 _CLICCmdTxt:
                       1218 ; rs232cmd.c  174       
                       1219 ; rs232cmd.c  175       char code PASSWORDCmdTxt[]                      = "PASSWORD";
000265 434C494300      1220         DB      043H,04CH,049H,043H,000H
                       1223         PUBLIC  _PASSWORDCmdTxt
00026A                 1224 _PASSWORDCmdTxt:
                       1225 ; rs232cmd.c  176       char code PASSCmdTxt[]                                  = "PASS";
00026A 50415353574F52  1226         DB      050H,041H,053H,053H,057H,04FH,052H,044H,000H
       4400                 
                       1229         PUBLIC  _PASSCmdTxt
000273                 1230 _PASSCmdTxt:
                       1231 ; rs232cmd.c  177       char code V24CIRCUITCmdTxt[]                    = "V24CIRCUIT";
000273 5041535300      1232         DB      050H,041H,053H,053H,000H
                       1235         PUBLIC  _V24CIRCUITCmdTxt
000278                 1236 _V24CIRCUITCmdTxt:
                       1237 ; rs232cmd.c  178       char code V24CCmdTxt[]                                  = "V24C";
000278 56323443495243  1238         DB      056H,032H,034H,043H,049H,052H,043H,055H,049H,054H,000H
       55495400             
                       1241         PUBLIC  _V24CCmdTxt
000283                 1242 _V24CCmdTxt:
                       1243 ; rs232cmd.c  179       char code CHECKSUMCmdTxt[]                      = "CHECKSUM";
000283 5632344300      1244         DB      056H,032H,034H,043H,000H
                       1247         PUBLIC  _CHECKSUMCmdTxt
000288                 1248 _CHECKSUMCmdTxt:
                       1249 ; rs232cmd.c  180       char code CHECCmdTxt[]                                  = "CHEC";
000288 434845434B5355  1250         DB      043H,048H,045H,043H,04BH,053H,055H,04DH,000H
       4D00                 
                       1253         PUBLIC  _CHECCmdTxt
000291                 1254 _CHECCmdTxt:
                       1255 ; rs232cmd.c  181       
                       1256 ; rs232cmd.c  182       char code CODECmdTxt[]                                  = "CODE";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  10

ADDR   CODE            LINE SOURCELINE
000291 4348454300      1257         DB      043H,048H,045H,043H,000H
                       1260         PUBLIC  _CODECmdTxt
000296                 1261 _CODECmdTxt:
                       1262 ; rs232cmd.c  183       char code RANGECmdTxt[]                                 = "RANGE";
000296 434F444500      1263         DB      043H,04FH,044H,045H,000H
                       1266         PUBLIC  _RANGECmdTxt
00029B                 1267 _RANGECmdTxt:
                       1268 ; rs232cmd.c  184       char code RANGCmdTxt[]                                  = "RANG";
00029B 52414E474500    1269         DB      052H,041H,04EH,047H,045H,000H
                       1272         PUBLIC  _RANGCmdTxt
0002A1                 1273 _RANGCmdTxt:
                       1274 ; rs232cmd.c  185       char code COMMANDCmdTxt[]                               = "COMMAND";
0002A1 52414E4700      1275         DB      052H,041H,04EH,047H,000H
                       1278         PUBLIC  _COMMANDCmdTxt
0002A6                 1279 _COMMANDCmdTxt:
                       1280 ; rs232cmd.c  186       char code COMMCmdTxt[]                                  = "COMM";
0002A6 434F4D4D414E44  1281         DB      043H,04FH,04DH,04DH,041H,04EH,044H,000H
       00                   
                       1284         PUBLIC  _COMMCmdTxt
0002AE                 1285 _COMMCmdTxt:
                       1286 ; rs232cmd.c  187       char code TRANSPARENTCmdTxt[]           = "TRANSPARENT";
0002AE 434F4D4D00      1287         DB      043H,04FH,04DH,04DH,000H
                       1290         PUBLIC  _TRANSPARENTCmdTxt
0002B3                 1291 _TRANSPARENTCmdTxt:
                       1292 ; rs232cmd.c  188       char code TRANCmdTxt[]                                  = "TRAN";
0002B3 5452414E535041  1293         DB      054H,052H,041H,04EH,053H,050H,041H,052H,045H,04EH,054H,000H
       52454E5400           
                       1296         PUBLIC  _TRANCmdTxt
0002BF                 1297 _TRANCmdTxt:
                       1298 ; rs232cmd.c  189       
                       1299 ; rs232cmd.c  190       char code MAINBOARDCmdTxt[]                     = "MAINBOARD";
0002BF 5452414E00      1300         DB      054H,052H,041H,04EH,000H
                       1303         PUBLIC  _MAINBOARDCmdTxt
0002C4                 1304 _MAINBOARDCmdTxt:
                       1305 ; rs232cmd.c  191       char code MAINCmdTxt[]                                  = "MAIN";
0002C4 4D41494E424F41  1306         DB      04DH,041H,049H,04EH,042H,04FH,041H,052H,044H,000H
       524400               
                       1309         PUBLIC  _MAINCmdTxt
0002CE                 1310 _MAINCmdTxt:
                       1311 ; rs232cmd.c  192       char code COMPANYCmdTxt[]                               = "COMPANY";
0002CE 4D41494E00      1312         DB      04DH,041H,049H,04EH,000H
                       1315         PUBLIC  _COMPANYCmdTxt
0002D3                 1316 _COMPANYCmdTxt:
                       1317 ; rs232cmd.c  193       char code COMPCmdTxt[]                                  = "COMP";
0002D3 434F4D50414E59  1318         DB      043H,04FH,04DH,050H,041H,04EH,059H,000H
       00                   
                       1321         PUBLIC  _COMPCmdTxt
0002DB                 1322 _COMPCmdTxt:
                       1323 ; rs232cmd.c  194       char code TYPECmdTxt[]                                  = "TYPE";
0002DB 434F4D5000      1324         DB      043H,04FH,04DH,050H,000H
                       1327         PUBLIC  _TYPECmdTxt
0002E0                 1328 _TYPECmdTxt:
                       1329 ; rs232cmd.c  195       char code KUNUMBERCmdTxt[]                      = "KUNUMBER";
0002E0 5459504500      1330         DB      054H,059H,050H,045H,000H
                       1333         PUBLIC  _KUNUMBERCmdTxt
0002E5                 1334 _KUNUMBERCmdTxt:
                       1335 ; rs232cmd.c  196       char code KUNCmdTxt[]                                   = "KUN";
0002E5 4B554E554D4245  1336         DB      04BH,055H,04EH,055H,04DH,042H,045H,052H,000H
       5200                 
                       1339         PUBLIC  _KUNCmdTxt
0002EE                 1340 _KUNCmdTxt:
                       1341 ; rs232cmd.c  197       char code SWREVISIONCmdTxt[]                    = "SWREVISION";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  11

ADDR   CODE            LINE SOURCELINE
0002EE 4B554E00        1342         DB      04BH,055H,04EH,000H
                       1345         PUBLIC  _SWREVISIONCmdTxt
0002F2                 1346 _SWREVISIONCmdTxt:
                       1347 ; rs232cmd.c  198       char code SWRCmdTxt[]                                   = "SWR";
0002F2 53575245564953  1348         DB      053H,057H,052H,045H,056H,049H,053H,049H,04FH,04EH,000H
       494F4E00             
                       1351         PUBLIC  _SWRCmdTxt
0002FD                 1352 _SWRCmdTxt:
                       1353 ; rs232cmd.c  199       
                       1354 ; rs232cmd.c  200       char code NCCmdTxt[]                                    = "NC";
0002FD 53575200        1355         DB      053H,057H,052H,000H
                       1358         PUBLIC  _NCCmdTxt
000301                 1359 _NCCmdTxt:
                       1360 ; rs232cmd.c  201       char code FMSDATECmdTxt[]                               = "FMSDATE";
000301 4E4300          1361         DB      04EH,043H,000H
                       1364         PUBLIC  _FMSDATECmdTxt
000304                 1365 _FMSDATECmdTxt:
                       1366 ; rs232cmd.c  202       char code FMSDCmdTxt[]                                  = "FMSD";
000304 464D5344415445  1367         DB      046H,04DH,053H,044H,041H,054H,045H,000H
       00                   
                       1370         PUBLIC  _FMSDCmdTxt
00030C                 1371 _FMSDCmdTxt:
                       1372 ; rs232cmd.c  203       char code PRODUCTIONCmdTxt[]                    = "PRODUCTION";
00030C 464D534400      1373         DB      046H,04DH,053H,044H,000H
                       1376         PUBLIC  _PRODUCTIONCmdTxt
000311                 1377 _PRODUCTIONCmdTxt:
                       1378 ; rs232cmd.c  204       char code PRODCmdTxt[]                                  = "PROD";
000311 50524F44554354  1379         DB      050H,052H,04FH,044H,055H,043H,054H,049H,04FH,04EH,000H
       494F4E00             
                       1382         PUBLIC  _PRODCmdTxt
00031C                 1383 _PRODCmdTxt:
                       1384 ; rs232cmd.c  205       char code UPDATECmdTxt[]                                = "UPDATE";
00031C 50524F4400      1385         DB      050H,052H,04FH,044H,000H
                       1388         PUBLIC  _UPDATECmdTxt
000321                 1389 _UPDATECmdTxt:
                       1390 ; rs232cmd.c  206       char code UPDCmdTxt[]                                   = "UPD";
000321 55504441544500  1391         DB      055H,050H,044H,041H,054H,045H,000H
                       1394         PUBLIC  _UPDCmdTxt
000328                 1395 _UPDCmdTxt:
                       1396 ; rs232cmd.c  207       
                       1397 ; rs232cmd.c  208       char code FREFERENCECmdTxt[]                    = "FREFERENCE";
000328 55504400        1398         DB      055H,050H,044H,000H
                       1401         PUBLIC  _FREFERENCECmdTxt
00032C                 1402 _FREFERENCECmdTxt:
                       1403 ; rs232cmd.c  209       char code FREFCmdTxt[]                                  = "FREF";
00032C 46524546455245  1404         DB      046H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1407         PUBLIC  _FREFCmdTxt
000337                 1408 _FREFCmdTxt:
                       1409 ; rs232cmd.c  210       char code DACCmdTxt[]                                   = "DAC";
000337 4652454600      1410         DB      046H,052H,045H,046H,000H
                       1413         PUBLIC  _DACCmdTxt
00033C                 1414 _DACCmdTxt:
                       1415 ; rs232cmd.c  211       char code UREFERENCECmdTxt[]                    = "UREFERENCE";
00033C 44414300        1416         DB      044H,041H,043H,000H
                       1419         PUBLIC  _UREFERENCECmdTxt
000340                 1420 _UREFERENCECmdTxt:
                       1421 ; rs232cmd.c  212       char code UREFCmdTxt[]                                  = "UREF";
000340 55524546455245  1422         DB      055H,052H,045H,046H,045H,052H,045H,04EH,043H,045H,000H
       4E434500             
                       1425         PUBLIC  _UREFCmdTxt
00034B                 1426 _UREFCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  12

ADDR   CODE            LINE SOURCELINE
                       1427 ; rs232cmd.c  213       
                       1428 ; rs232cmd.c  214       char code UDACOFFCmdTxt[]                = "DOFF";                  //JK
00034B 5552454600      1429         DB      055H,052H,045H,046H,000H
                       1432         PUBLIC  _UDACOFFCmdTxt
000350                 1433 _UDACOFFCmdTxt:
                       1434 ; rs232cmd.c  215       char code UDACOFFSETCmdTxt[]             = "DOFFSET";               //JK
000350 444F464600      1435         DB      044H,04FH,046H,046H,000H
                       1438         PUBLIC  _UDACOFFSETCmdTxt
000355                 1439 _UDACOFFSETCmdTxt:
                       1440 ; rs232cmd.c  216       
                       1441 ; rs232cmd.c  217       char code HPHZEROCmdTxt[]                               = "HPHZERO";
000355 444F4646534554  1442         DB      044H,04FH,046H,046H,053H,045H,054H,000H
       00                   
                       1445         PUBLIC  _HPHZEROCmdTxt
00035D                 1446 _HPHZEROCmdTxt:
                       1447 ; rs232cmd.c  218       char code HPHZCmdTxt[]                                  = "HPHZ";
00035D 4850485A45524F  1448         DB      048H,050H,048H,05AH,045H,052H,04FH,000H
       00                   
                       1451         PUBLIC  _HPHZCmdTxt
000365                 1452 _HPHZCmdTxt:
                       1453 ; rs232cmd.c  219       char code PHASECmdTxt[]                                 = "PHASE";
000365 4850485A00      1454         DB      048H,050H,048H,05AH,000H
                       1457         PUBLIC  _PHASECmdTxt
00036A                 1458 _PHASECmdTxt:
                       1459 ; rs232cmd.c  220       char code PHASCmdTxt[]                                  = "PHAS";
00036A 504841534500    1460         DB      050H,048H,041H,053H,045H,000H
                       1463         PUBLIC  _PHASCmdTxt
000370                 1464 _PHASCmdTxt:
                       1465 ; rs232cmd.c  221       
                       1466 ; rs232cmd.c  222       char code AGAINCmdTxt[]                                 = "AGAIN";
000370 5048415300      1467         DB      050H,048H,041H,053H,000H
                       1470         PUBLIC  _AGAINCmdTxt
000375                 1471 _AGAINCmdTxt:
                       1472 ; rs232cmd.c  223       char code AGACmdTxt[]                                   = "AGA";
000375 414741494E00    1473         DB      041H,047H,041H,049H,04EH,000H
                       1476         PUBLIC  _AGACmdTxt
00037B                 1477 _AGACmdTxt:
                       1478 ; rs232cmd.c  224       char code CGAINCmdTxt[]                                 = "CGAIN";
00037B 41474100        1479         DB      041H,047H,041H,000H
                       1482         PUBLIC  _CGAINCmdTxt
00037F                 1483 _CGAINCmdTxt:
                       1484 ; rs232cmd.c  225       char code CGACmdTxt[]                                   = "CGA";
00037F 434741494E00    1485         DB      043H,047H,041H,049H,04EH,000H
                       1488         PUBLIC  _CGACmdTxt
000385                 1489 _CGACmdTxt:
                       1490 ; rs232cmd.c  226       char code ALEVELCmdTxt[]                                = "ALEVEL";
000385 43474100        1491         DB      043H,047H,041H,000H
                       1494         PUBLIC  _ALEVELCmdTxt
000389                 1495 _ALEVELCmdTxt:
                       1496 ; rs232cmd.c  227       char code ALEVCmdTxt[]                                  = "ALEV";
000389 414C4556454C00  1497         DB      041H,04CH,045H,056H,045H,04CH,000H
                       1500         PUBLIC  _ALEVCmdTxt
000390                 1501 _ALEVCmdTxt:
                       1502 ; rs232cmd.c  228       
                       1503 ; rs232cmd.c  229       char code PLDCmdTxt[]                                   = "PLD";
000390 414C455600      1504         DB      041H,04CH,045H,056H,000H
                       1507         PUBLIC  _PLDCmdTxt
000395                 1508 _PLDCmdTxt:
                       1509 ; rs232cmd.c  230       char code TCXOCmdTxt[]                                  = "TCXO";
000395 504C4400        1510         DB      050H,04CH,044H,000H
                       1513         PUBLIC  _TCXOCmdTxt
000399                 1514 _TCXOCmdTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  13

ADDR   CODE            LINE SOURCELINE
                       1515 ; rs232cmd.c  231       char code MMCHIPCmdTxt[]                                = "MMCHIP";
000399 5443584F00      1516         DB      054H,043H,058H,04FH,000H
                       1519         PUBLIC  _MMCHIPCmdTxt
00039E                 1520 _MMCHIPCmdTxt:
                       1521 ; rs232cmd.c  232       char code MMCHCmdTxt[]                                  = "MMCH";
00039E 4D4D4348495000  1522         DB      04DH,04DH,043H,048H,049H,050H,000H
                       1525         PUBLIC  _MMCHCmdTxt
0003A5                 1526 _MMCHCmdTxt:
                       1527 ; rs232cmd.c  233       
                       1528 ; rs232cmd.c  234       char code SAVEParTxt[]                                  = "SAVE";
0003A5 4D4D434800      1529         DB      04DH,04DH,043H,048H,000H
                       1532         PUBLIC  _SAVEParTxt
0003AA                 1533 _SAVEParTxt:
                       1534 ; rs232cmd.c  235       
                       1535 ; rs232cmd.c  236       char code INTERNALParTxt[]                      = "INTERNAL";
0003AA 5341564500      1536         DB      053H,041H,056H,045H,000H
                       1539         PUBLIC  _INTERNALParTxt
0003AF                 1540 _INTERNALParTxt:
                       1541 ; rs232cmd.c  237       char code INTParTxt[]                                   = "INT";
0003AF 494E5445524E41  1542         DB      049H,04EH,054H,045H,052H,04EH,041H,04CH,000H
       4C00                 
                       1545         PUBLIC  _INTParTxt
0003B8                 1546 _INTParTxt:
                       1547 ; rs232cmd.c  238       char code PALBURSTParTxt[]                      = "PALBURST";
0003B8 494E5400        1548         DB      049H,04EH,054H,000H
                       1551         PUBLIC  _PALBURSTParTxt
0003BC                 1552 _PALBURSTParTxt:
                       1553 ; rs232cmd.c  239       char code PALBParTxt[]                                  = "PALB";
0003BC 50414C42555253  1554         DB      050H,041H,04CH,042H,055H,052H,053H,054H,000H
       5400                 
                       1557         PUBLIC  _PALBParTxt
0003C5                 1558 _PALBParTxt:
                       1559 ; rs232cmd.c  240       char code NTSCBURSTParTxt[]                     = "NTSCBURST";
0003C5 50414C4200      1560         DB      050H,041H,04CH,042H,000H
                       1563         PUBLIC  _NTSCBURSTParTxt
0003CA                 1564 _NTSCBURSTParTxt:
                       1565 ; rs232cmd.c  241       char code NTSCParTxt[]                                  = "NTSC";
0003CA 4E545343425552  1566         DB      04EH,054H,053H,043H,042H,055H,052H,053H,054H,000H
       535400               
                       1569         PUBLIC  _NTSCParTxt
0003D4                 1570 _NTSCParTxt:
                       1571 ; rs232cmd.c  242       char code JNTSCParTxt[]                                 = "JNTSC";
0003D4 4E54534300      1572         DB      04EH,054H,053H,043H,000H
                       1575         PUBLIC  _JNTSCParTxt
0003D9                 1576 _JNTSCParTxt:
                       1577 ; rs232cmd.c  243       
                       1578 ; rs232cmd.c  244       char code F10MHzParTxt[]                                = "F10MHZ";
0003D9 4A4E54534300    1579         DB      04AH,04EH,054H,053H,043H,000H
                       1582         PUBLIC  _F10MHzParTxt
0003DF                 1583 _F10MHzParTxt:
                       1584 ; rs232cmd.c  245       
                       1585 ; rs232cmd.c  246       char code PALParTxt[]                                   = "PAL";
0003DF 4631304D485A00  1586         DB      046H,031H,030H,04DH,048H,05AH,000H
                       1589         PUBLIC  _PALParTxt
0003E6                 1590 _PALParTxt:
                       1591 ; rs232cmd.c  247       char code PAL_IDParTxt[]                                = "PAL_ID";
0003E6 50414C00        1592         DB      050H,041H,04CH,000H
                       1595         PUBLIC  _PAL_IDParTxt
0003EA                 1596 _PAL_IDParTxt:
                       1597 ; rs232cmd.c  248       
                       1598 ; rs232cmd.c  249       char code CBSMPTEParTxt[]                               = "CBSMPTE";     
                                           // SMPTE Colorbar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  14

ADDR   CODE            LINE SOURCELINE
0003EA 50414C5F494400  1599         DB      050H,041H,04CH,05FH,049H,044H,000H
                       1602         PUBLIC  _CBSMPTEParTxt
0003F1                 1603 _CBSMPTEParTxt:
                       1604 ; rs232cmd.c  250       char code CBSMParTxt[]                                  = "CBSM";        
                                                           
0003F1 4342534D505445  1605         DB      043H,042H,053H,04DH,050H,054H,045H,000H
       00                   
                       1608         PUBLIC  _CBSMParTxt
0003F9                 1609 _CBSMParTxt:
                       1610 ; rs232cmd.c  251       char code CBEBUParTxt[]                                 = "CBEBU";       
                                   // EBU Colorbar
0003F9 4342534D00      1611         DB      043H,042H,053H,04DH,000H
                       1614         PUBLIC  _CBEBUParTxt
0003FE                 1615 _CBEBUParTxt:
                       1616 ; rs232cmd.c  252       char code CBEBParTxt[]                                  = "CBEB";
0003FE 434245425500    1617         DB      043H,042H,045H,042H,055H,000H
                       1620         PUBLIC  _CBEBParTxt
000404                 1621 _CBEBParTxt:
                       1622 ; rs232cmd.c  253       char code CBFCCParTxt[]                                 = "CBFCC";       
                                                   // FCC Colorbar
000404 4342454200      1623         DB      043H,042H,045H,042H,000H
                       1626         PUBLIC  _CBFCCParTxt
000409                 1627 _CBFCCParTxt:
                       1628 ; rs232cmd.c  254       char code CBFCParTxt[]                                  = "CBFC";
000409 434246434300    1629         DB      043H,042H,046H,043H,043H,000H
                       1632         PUBLIC  _CBFCParTxt
00040F                 1633 _CBFCParTxt:
                       1634 ; rs232cmd.c  255       char code CBEBU8ParTxt[]                                = "CBEBU8";      
                                                   // Colorbar ITU801
00040F 4342464300      1635         DB      043H,042H,046H,043H,000H
                       1638         PUBLIC  _CBEBU8ParTxt
000414                 1639 _CBEBU8ParTxt:
                       1640 ; rs232cmd.c  256       char code CBEB8ParTxt[]                                 = "CBEB8";
000414 43424542553800  1641         DB      043H,042H,045H,042H,055H,038H,000H
                       1644         PUBLIC  _CBEB8ParTxt
00041B                 1645 _CBEB8ParTxt:
                       1646 ; rs232cmd.c  257       char code CB100ParTxt[]                                 = "CB100";       
                                                   // 100% Colorbar
00041B 434245423800    1647         DB      043H,042H,045H,042H,038H,000H
                       1650         PUBLIC  _CB100ParTxt
000421                 1651 _CB100ParTxt:
                       1652 ; rs232cmd.c  258       char code CBGREY75ParTxt[]                      = "CBGREY75";            
                                   // Colorbar + 75% Grey
000421 434231303000    1653         DB      043H,042H,031H,030H,030H,000H
                       1656         PUBLIC  _CBGREY75ParTxt
000427                 1657 _CBGREY75ParTxt:
                       1658 ; rs232cmd.c  259       char code CBGR75ParTxt[]                                = "CBGR75";
000427 43424752455937  1659         DB      043H,042H,047H,052H,045H,059H,037H,035H,000H
       3500                 
                       1662         PUBLIC  _CBGR75ParTxt
000430                 1663 _CBGR75ParTxt:
                       1664 ; rs232cmd.c  260       char code CBRED75ParTxt[]                       = "CBRED75";             
                                   // Colorbar + 75% Red
000430 43424752373500  1665         DB      043H,042H,047H,052H,037H,035H,000H
                       1668         PUBLIC  _CBRED75ParTxt
000437                 1669 _CBRED75ParTxt:
                       1670 ; rs232cmd.c  261       char code CBR75ParTxt[]                                 = "CBR75";
000437 43425245443735  1671         DB      043H,042H,052H,045H,044H,037H,035H,000H
       00                   
                       1674         PUBLIC  _CBR75ParTxt
00043F                 1675 _CBR75ParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  15

ADDR   CODE            LINE SOURCELINE
                       1676 ; rs232cmd.c  262       char code RED75ParTxt[]                                 = "RED75";       
                                                   // 75% Red
00043F 434252373500    1677         DB      043H,042H,052H,037H,035H,000H
                       1680         PUBLIC  _RED75ParTxt
000445                 1681 _RED75ParTxt:
                       1682 ; rs232cmd.c  263       
                       1683 ; rs232cmd.c  264       char code MULTIBURSTParTxt[]                    = "MULTIBURST";         /
                            / Multi burst
000445 524544373500    1684         DB      052H,045H,044H,037H,035H,000H
                       1687         PUBLIC  _MULTIBURSTParTxt
00044B                 1688 _MULTIBURSTParTxt:
                       1689 ; rs232cmd.c  265       char code MULTParTxt[]                                  = "MULT";
00044B 4D554C54494255  1690         DB      04DH,055H,04CH,054H,049H,042H,055H,052H,053H,054H,000H
       52535400             
                       1693         PUBLIC  _MULTParTxt
000456                 1694 _MULTParTxt:
                       1695 ; rs232cmd.c  266       char code CCIR18ParTxt[]                                = "CCIR18";
000456 4D554C5400      1696         DB      04DH,055H,04CH,054H,000H
                       1699         PUBLIC  _CCIR18ParTxt
00045B                 1700 _CCIR18ParTxt:
                       1701 ; rs232cmd.c  267       char code WIN10ParTxt[]                                 = "WIN10";       
                                                   // Window 10%
00045B 43434952313800  1702         DB      043H,043H,049H,052H,031H,038H,000H
                       1705         PUBLIC  _WIN10ParTxt
000462                 1706 _WIN10ParTxt:
                       1707 ; rs232cmd.c  268       char code WIN15ParTxt[]                                 = "WIN15";       
                                                   // Window 15%
000462 57494E313000    1708         DB      057H,049H,04EH,031H,030H,000H
                       1711         PUBLIC  _WIN15ParTxt
000468                 1712 _WIN15ParTxt:
                       1713 ; rs232cmd.c  269       char code WIN20ParTxt[]                                 = "WIN20";       
                                                   // Window 20%
000468 57494E313500    1714         DB      057H,049H,04EH,031H,035H,000H
                       1717         PUBLIC  _WIN20ParTxt
00046E                 1718 _WIN20ParTxt:
                       1719 ; rs232cmd.c  270       char code WIN100ParTxt[]                                = "WIN100";      
                                                   // Window 100%
00046E 57494E323000    1720         DB      057H,049H,04EH,032H,030H,000H
                       1723         PUBLIC  _WIN100ParTxt
000474                 1724 _WIN100ParTxt:
                       1725 ; rs232cmd.c  271       char code BLWH15ParTxt[]                                = "BLWH15KHZ";   
                                           // 15kHz Bl/Wh
000474 57494E31303000  1726         DB      057H,049H,04EH,031H,030H,030H,000H
                       1729         PUBLIC  _BLWH15ParTxt
00047B                 1730 _BLWH15ParTxt:
                       1731 ; rs232cmd.c  272       char code WHITE100ParTxt[]                      = "WHITE100";            
                                   // White 100%
00047B 424C574831354B  1732         DB      042H,04CH,057H,048H,031H,035H,04BH,048H,05AH,000H
       485A00               
                       1735         PUBLIC  _WHITE100ParTxt
000485                 1736 _WHITE100ParTxt:
                       1737 ; rs232cmd.c  273       char code WHIT100ParTxt[]                               = "WHIT100";
000485 57484954453130  1738         DB      057H,048H,049H,054H,045H,031H,030H,030H,000H
       3000                 
                       1741         PUBLIC  _WHIT100ParTxt
00048E                 1742 _WHIT100ParTxt:
                       1743 ; rs232cmd.c  274       char code BLACKParTxt[]                                 = "BLACK";       
                                                   // Black
00048E 57484954313030  1744         DB      057H,048H,049H,054H,031H,030H,030H,000H
       00                   
                       1747         PUBLIC  _BLACKParTxt
000496                 1748 _BLACKParTxt:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  16

ADDR   CODE            LINE SOURCELINE
                       1749 ; rs232cmd.c  275       char code BLACParTxt[]                                  = "BLAC";
000496 424C41434B00    1750         DB      042H,04CH,041H,043H,04BH,000H
                       1753         PUBLIC  _BLACParTxt
00049C                 1754 _BLACParTxt:
                       1755 ; rs232cmd.c  276       
                       1756 ; rs232cmd.c  277       char code SDICHECKParTxt[]                      = "SDICHECK";            
                                   // Check field
00049C 424C414300      1757         DB      042H,04CH,041H,043H,000H
                       1760         PUBLIC  _SDICHECKParTxt
0004A1                 1761 _SDICHECKParTxt:
                       1762 ; rs232cmd.c  278       char code SDICParTxt[]                                  = "SDIC";
0004A1 53444943484543  1763         DB      053H,044H,049H,043H,048H,045H,043H,04BH,000H
       4B00                 
                       1766         PUBLIC  _SDICParTxt
0004AA                 1767 _SDICParTxt:
                       1768 ; rs232cmd.c  279       char code DGREYParTxt[]                                 = "DGREY";       
                                                   // Digital grey
0004AA 5344494300      1769         DB      053H,044H,049H,043H,000H
                       1772         PUBLIC  _DGREYParTxt
0004AF                 1773 _DGREYParTxt:
                       1774 ; rs232cmd.c  280       char code DGRParTxt[]                                   = "DGR";
0004AF 444752455900    1775         DB      044H,047H,052H,045H,059H,000H
                       1778         PUBLIC  _DGRParTxt
0004B5                 1779 _DGRParTxt:
                       1780 ; rs232cmd.c  281       char code STAIRCASE5ParTxt[]                    = "STAIRCASE5";         /
                            / 5-step staircase
0004B5 44475200        1781         DB      044H,047H,052H,000H
                       1784         PUBLIC  _STAIRCASE5ParTxt
0004B9                 1785 _STAIRCASE5ParTxt:
                       1786 ; rs232cmd.c  282       char code STA5ParTxt[]                                  = "STA5";
0004B9 53544149524341  1787         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,035H,000H
       53453500             
                       1790         PUBLIC  _STA5ParTxt
0004C4                 1791 _STA5ParTxt:
                       1792 ; rs232cmd.c  283       char code STAIRCASE10ParTxt[]           = "STAIRCASE10";                /
                            / 10-step staircase
0004C4 5354413500      1793         DB      053H,054H,041H,035H,000H
                       1796         PUBLIC  _STAIRCASE10ParTxt
0004C9                 1797 _STAIRCASE10ParTxt:
                       1798 ; rs232cmd.c  284       char code STA10ParTxt[]                                 = "STA10";
0004C9 53544149524341  1799         DB      053H,054H,041H,049H,052H,043H,041H,053H,045H,031H,030H,000H
       5345313000           
                       1802         PUBLIC  _STA10ParTxt
0004D5                 1803 _STA10ParTxt:
                       1804 ; rs232cmd.c  285       char code CROSSHATCHParTxt[]                    = "CROSSHATCH";         /
                            / Cross hatch
0004D5 535441313000    1805         DB      053H,054H,041H,031H,030H,000H
                       1808         PUBLIC  _CROSSHATCHParTxt
0004DB                 1809 _CROSSHATCHParTxt:
                       1810 ; rs232cmd.c  286       char code CROSParTxt[]                                  = "CROS";
0004DB 43524F53534841  1811         DB      043H,052H,04FH,053H,053H,048H,041H,054H,043H,048H,000H
       54434800             
                       1814         PUBLIC  _CROSParTxt
0004E6                 1815 _CROSParTxt:
                       1816 ; rs232cmd.c  287       char code PLUGEParTxt[]                                 = "PLUGE";       
                                                   // PLUGE
0004E6 43524F5300      1817         DB      043H,052H,04FH,053H,000H
                       1820         PUBLIC  _PLUGEParTxt
0004EB                 1821 _PLUGEParTxt:
                       1822 ; rs232cmd.c  288       char code PLUGParTxt[]                                  = "PLUG";
0004EB 504C55474500    1823         DB      050H,04CH,055H,047H,045H,000H
                       1826         PUBLIC  _PLUGParTxt
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  17

ADDR   CODE            LINE SOURCELINE
0004F1                 1827 _PLUGParTxt:
                       1828 ; rs232cmd.c  289       
                       1829 ; rs232cmd.c  290       char code ANALOGParTxt[]                                = "ANALOG";
0004F1 504C554700      1830         DB      050H,04CH,055H,047H,000H
                       1833         PUBLIC  _ANALOGParTxt
0004F6                 1834 _ANALOGParTxt:
                       1835 ; rs232cmd.c  291       char code ANALParTxt[]                                  = "ANAL";
0004F6 414E414C4F4700  1836         DB      041H,04EH,041H,04CH,04FH,047H,000H
                       1839         PUBLIC  _ANALParTxt
0004FD                 1840 _ANALParTxt:
                       1841 ; rs232cmd.c  292       char code AESEBUParTxt[]                                = "AESEBU";
0004FD 414E414C00      1842         DB      041H,04EH,041H,04CH,000H
                       1845         PUBLIC  _AESEBUParTxt
000502                 1846 _AESEBUParTxt:
                       1847 ; rs232cmd.c  293       char code AESParTxt[]                                   = "AES";
000502 41455345425500  1848         DB      041H,045H,053H,045H,042H,055H,000H
                       1851         PUBLIC  _AESParTxt
000509                 1852 _AESParTxt:
                       1853 ; rs232cmd.c  294       
                       1854 ; rs232cmd.c  295       char code F441KHZParTxt[]                               = "F441KHZ";
000509 41455300        1855         DB      041H,045H,053H,000H
                       1858         PUBLIC  _F441KHZParTxt
00050D                 1859 _F441KHZParTxt:
                       1860 ; rs232cmd.c  296       char code F48KHZParTxt[]                                = "F48KHZ";
00050D 463434314B485A  1861         DB      046H,034H,034H,031H,04BH,048H,05AH,000H
       00                   
                       1864         PUBLIC  _F48KHZParTxt
000515                 1865 _F48KHZParTxt:
                       1866 ; rs232cmd.c  297       char code F45MHZParTxt[]                                = "F45MHZ";
000515 4634384B485A00  1867         DB      046H,034H,038H,04BH,048H,05AH,000H
                       1870         PUBLIC  _F45MHZParTxt
00051C                 1871 _F45MHZParTxt:
                       1872 ; rs232cmd.c  298       
                       1873 ; rs232cmd.c  299       char code S500HZParTxt[]                                = "S500HZ";      
                                                   // Stereo 500 Hz
00051C 4634354D485A00  1874         DB      046H,034H,035H,04DH,048H,05AH,000H
                       1877         PUBLIC  _S500HZParTxt
000523                 1878 _S500HZParTxt:
                       1879 ; rs232cmd.c  300       char code S1KHZParTxt[]                                 = "S1KHZ";       
                                           // Stereo 1 kHz
000523 53353030485A00  1880         DB      053H,035H,030H,030H,048H,05AH,000H
                       1883         PUBLIC  _S1KHZParTxt
00052A                 1884 _S1KHZParTxt:
                       1885 ; rs232cmd.c  301       char code SEBU1KHZParTxt[]                              = "SEBU1KHZ";    
                                           // Stereo EBU 1 kHz
00052A 53314B485A00    1886         DB      053H,031H,04BH,048H,05AH,000H
                       1889         PUBLIC  _SEBU1KHZParTxt
000530                 1890 _SEBU1KHZParTxt:
                       1891 ; rs232cmd.c  302       char code S8KHZParTxt[]                                 = "S8KHZ";       
                                                   // Stereo 8 kHz
000530 53454255314B48  1892         DB      053H,045H,042H,055H,031H,04BH,048H,05AH,000H
       5A00                 
                       1895         PUBLIC  _S8KHZParTxt
000539                 1896 _S8KHZParTxt:
                       1897 ; rs232cmd.c  303       
                       1898 ; rs232cmd.c  304       char code SILENCEParTxt[]                               = "SILENCE";
000539 53384B485A00    1899         DB      053H,038H,04BH,048H,05AH,000H
                       1902         PUBLIC  _SILENCEParTxt
00053F                 1903 _SILENCEParTxt:
                       1904 ; rs232cmd.c  305       char code SILParTxt[]                                   = "SIL";
00053F 53494C454E4345  1905         DB      053H,049H,04CH,045H,04EH,043H,045H,000H
       00                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  18

ADDR   CODE            LINE SOURCELINE
                       1908         PUBLIC  _SILParTxt
000547                 1909 _SILParTxt:
                       1910 ; rs232cmd.c  306       
                       1911 ; rs232cmd.c  307       char code DMYParTxt[]                                   = "DMY";
000547 53494C00        1912         DB      053H,049H,04CH,000H
                       1915         PUBLIC  _DMYParTxt
00054B                 1916 _DMYParTxt:
                       1917 ; rs232cmd.c  308       char code MDYParTxt[]                                   = "MDY";
00054B 444D5900        1918         DB      044H,04DH,059H,000H
                       1921         PUBLIC  _MDYParTxt
00054F                 1922 _MDYParTxt:
                       1923 ; rs232cmd.c  309       char code YMDParTxt[]                                   = "YMD";
00054F 4D445900        1924         DB      04DH,044H,059H,000H
                       1927         PUBLIC  _YMDParTxt
000553                 1928 _YMDParTxt:
                       1929 ; rs232cmd.c  310       
                       1930 ; rs232cmd.c  311       char code BBParTxt[]                                    = "BB";
000553 594D4400        1931         DB      059H,04DH,044H,000H
                       1934         PUBLIC  _BBParTxt
000557                 1935 _BBParTxt:
                       1936 ; rs232cmd.c  312       char code SPGParTxt[]                                   = "SPG";
000557 424200          1937         DB      042H,042H,000H
                       1940         PUBLIC  _SPGParTxt
00055A                 1941 _SPGParTxt:
                       1942 ; rs232cmd.c  313       
                       1943 ; rs232cmd.c  314       char code OFFParTxt[]                                   = "OFF";
00055A 53504700        1944         DB      053H,050H,047H,000H
                       1947         PUBLIC  _OFFParTxt
00055E                 1948 _OFFParTxt:
                       1949 ; rs232cmd.c  315       char code ONParTxt[]                                    = "ON";
00055E 4F464600        1950         DB      04FH,046H,046H,000H
                       1953         PUBLIC  _ONParTxt
000562                 1954 _ONParTxt:
                       1955 ; rs232cmd.c  316       
                       1956 ; rs232cmd.c  317       char code UPParTxt[]                                    = "UP";
000562 4F4E00          1957         DB      04FH,04EH,000H
                       1960         PUBLIC  _UPParTxt
000565                 1961 _UPParTxt:
                       1962 ; rs232cmd.c  318       char code DOWNParTxt[]                                  = "DOWN";
000565 555000          1963         DB      055H,050H,000H
                       1966         PUBLIC  _DOWNParTxt
000568                 1967 _DOWNParTxt:
                       1968 ; rs232cmd.c  319       
                       1969 ; rs232cmd.c  320       char code NORMALParTxt[]                                = "NORMAL";
000568 444F574E00      1970         DB      044H,04FH,057H,04EH,000H
                       1973         PUBLIC  _NORMALParTxt
00056D                 1974 _NORMALParTxt:
                       1975 ; rs232cmd.c  321       char code NORMParTxt[]                                  = "NORM";
00056D 4E4F524D414C00  1976         DB      04EH,04FH,052H,04DH,041H,04CH,000H
                       1979         PUBLIC  _NORMParTxt
000574                 1980 _NORMParTxt:
                       1981 ; rs232cmd.c  322       
                       1982 ; rs232cmd.c  323       char code MINParTxt[]                                   = "MIN";
000574 4E4F524D00      1983         DB      04EH,04FH,052H,04DH,000H
                       1986         PUBLIC  _MINParTxt
000579                 1987 _MINParTxt:
                       1988 ; rs232cmd.c  324       char code MAXParTxt[]                                   = "MAX";
000579 4D494E00        1989         DB      04DH,049H,04EH,000H
                       1992         PUBLIC  _MAXParTxt
00057D                 1993 _MAXParTxt:
                       1994 ; rs232cmd.c  325       
                       1995 ; rs232cmd.c  326       char code UNLOCKEDParTxt[]                      = "UNLOCKED";
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  19

ADDR   CODE            LINE SOURCELINE
00057D 4D415800        1996         DB      04DH,041H,058H,000H
                       1999         PUBLIC  _UNLOCKEDParTxt
000581                 2000 _UNLOCKEDParTxt:
                       2001 ; rs232cmd.c  327       char code GENLOCKEDParTxt[]                     = "GENLOCKED";
000581 554E4C4F434B45  2002         DB      055H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       4400                 
                       2005         PUBLIC  _GENLOCKEDParTxt
00058A                 2006 _GENLOCKEDParTxt:
                       2007 ; rs232cmd.c  328       
                       2008 ; rs232cmd.c  329       
                       2009 ; rs232cmd.c  330       void CLSCommand( void);
                       2010 ; rs232cmd.c  331       void ESECommand( void);
                       2011 ; rs232cmd.c  332       void ESRCommand( void);
                       2012 ; rs232cmd.c  333       void OPCCommand( void);
                       2013 ; rs232cmd.c  334       void SRECommand( void);
                       2014 ; rs232cmd.c  335       void STBCommand( void);
                       2015 ; rs232cmd.c  336       void TSTCommand( void);
                       2016 ; rs232cmd.c  337       void WAICommand( void);
                       2017 ; rs232cmd.c  338       void RSTCommand( void);
                       2018 ; rs232cmd.c  339       void IDNCommand( void);
                       2019 ; rs232cmd.c  340       void RCLCommand( void);
                       2020 ; rs232cmd.c  341       void SAVCommand( void);
                       2021 ; rs232cmd.c  342       
                       2022 ; rs232cmd.c  343       void SystemError( void);
                       2023 ; rs232cmd.c  344       void SystemVersion( void);
                       2024 ; rs232cmd.c  345       void SystemTime( void);
                       2025 ; rs232cmd.c  346       void SystemDate( void);
                       2026 ; rs232cmd.c  347       
                       2027 ; rs232cmd.c  348       void SystemPresetName( void);
                       2028 ; rs232cmd.c  349       void SystemPresetAuthor( void);
                       2029 ; rs232cmd.c  350       void SystemPresetDate( void);
                       2030 ; rs232cmd.c  351       void SystemPresetDownload( void);
                       2031 ; rs232cmd.c  352       void SystemPresetUpload( void);
                       2032 ; rs232cmd.c  353       
                       2033 ; rs232cmd.c  354       void StatusOperEvent( void);
                       2034 ; rs232cmd.c  355       void StatusOperCondition( void);
                       2035 ; rs232cmd.c  356       void StatusOperEnable( void);
                       2036 ; rs232cmd.c  357       void StatusQuestEvent( void);
                       2037 ; rs232cmd.c  358       void StatusQuestCondition( void);
                       2038 ; rs232cmd.c  359       void StatusQuestEnable( void);
                       2039 ; rs232cmd.c  360       void StatusPreset( void);
                       2040 ; rs232cmd.c  361       
                       2041 ; rs232cmd.c  362       void GenlockGen( void);
                       2042 ; rs232cmd.c  363       void GenlockGenSystem( void);
                       2043 ; rs232cmd.c  364       void GenlockGenDelay( void);
                       2044 ; rs232cmd.c  365       void GenlockGenCalibrateEnable( void);
                       2045 ; rs232cmd.c  366       void GenlockGenCalibrateAdjust( void);
                       2046 ; rs232cmd.c  367       void GenlockGenCalibrateStore( void);
                       2047 ; rs232cmd.c  368       
                       2048 ; rs232cmd.c  369       void BBGenSuffix( void);
                       2049 ; rs232cmd.c  370       void BBGen( void);
                       2050 ; rs232cmd.c  371       void BBGenSystem( void);
                       2051 ; rs232cmd.c  372       void BBGenDelay( void);
                       2052 ; rs232cmd.c  373       void BBGenScHPhase( void);
                       2053 ; rs232cmd.c  374       
                       2054 ; rs232cmd.c  375       void TSGen( void);
                       2055 ; rs232cmd.c  376       void TSGenPattern( void);
                       2056 ; rs232cmd.c  377       void TSGenSystem( void);
                       2057 ; rs232cmd.c  378       void TSGenDelay( void);
                       2058 ; rs232cmd.c  379       void TSGenScHPhase( void);
                       2059 ; rs232cmd.c  380       void TSGenEmbAudioSignal( void);
                       2060 ; rs232cmd.c  381       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  20

ADDR   CODE            LINE SOURCELINE
                       2061 ; rs232cmd.c  382       void AudioGenOutput( void);
                       2062 ; rs232cmd.c  383       
                       2063 ; rs232cmd.c  384       void AudioGenAnalog( void);
                       2064 ; rs232cmd.c  385       void AudioGenAnalogSignal( void);
                       2065 ; rs232cmd.c  386       void AudioGenAnalogLevel( void);
                       2066 ; rs232cmd.c  387       void AudioGenAnalogClick( void);
                       2067 ; rs232cmd.c  388       
                       2068 ; rs232cmd.c  389       void AudioGenAESEBU( void);
                       2069 ; rs232cmd.c  390       void AudioGenAESEBUSystem( void);
                       2070 ; rs232cmd.c  391       void AudioGenAESEBUSignal( void);
                       2071 ; rs232cmd.c  392       void AudioGenAESEBULevel( void);
                       2072 ; rs232cmd.c  393       void AudioGenAESEBUTiming( void);
                       2073 ; rs232cmd.c  394       void AudioGenAESEBUWordClock( void);
                       2074 ; rs232cmd.c  395       void AudioGenAESEBUClick( void);
                       2075 ; rs232cmd.c  396       
                       2076 ; rs232cmd.c  397       void FactPassword( void);
                       2077 ; rs232cmd.c  398       void FactReset( void);
                       2078 ; rs232cmd.c  399       void FactV24Command( void);
                       2079 ; rs232cmd.c  400       void FactV24Transparent( void);
                       2080 ; rs232cmd.c  401       
                       2081 ; rs232cmd.c  402       void FactChecksumCode( void);
                       2082 ; rs232cmd.c  403       void FactChecksumPLD( void);
                       2083 ; rs232cmd.c  404       void FactChecksumEmbAudio( void);
                       2084 ; rs232cmd.c  405       void FactChecksumPattern( void);
                       2085 ; rs232cmd.c  406       void FactChecksumRange( void);
                       2086 ; rs232cmd.c  407       
                       2087 ; rs232cmd.c  408       void FactMainVersion( void);
                       2088 ; rs232cmd.c  409       void FactMainIDNCompany( void);
                       2089 ; rs232cmd.c  410       void FactMainIDNType( void);
                       2090 ; rs232cmd.c  411       void FactMainIDNKUNumber( void);
                       2091 ; rs232cmd.c  412       void FactMainIDNSWRevision( void);
                       2092 ; rs232cmd.c  413       
                       2093 ; rs232cmd.c  414       void FactMainSystem( void);
                       2094 ; rs232cmd.c  415       void FactMainFMSDateProd( void);
                       2095 ; rs232cmd.c  416       void FactMainFMSDateUpd( void);
                       2096 ; rs232cmd.c  417       
                       2097 ; rs232cmd.c  418       void FactGenlockGenDate( void);
                       2098 ; rs232cmd.c  419       void FactGenlockGenVersion( void);
                       2099 ; rs232cmd.c  420       void FactGenlockGenFRefDate( void);
                       2100 ; rs232cmd.c  421       void FactGenlockGenFRefDAC( void);
                       2101 ; rs232cmd.c  422       void FactGenlockGenURefDate( void);
                       2102 ; rs232cmd.c  423       void FactGenlockGenURefDAC( void);
                       2103 ; rs232cmd.c  424       void FactGenlockGenHPHZero( void);
                       2104 ; rs232cmd.c  425       void FactGenlockGenPhase( void);
                       2105 ; rs232cmd.c  426       void FactGenlockGenUOffDAC( void); // JK
                       2106 ; rs232cmd.c  427       
                       2107 ; rs232cmd.c  428       
                       2108 ; rs232cmd.c  429       void FactBBGenDate( void);
                       2109 ; rs232cmd.c  430       void FactBBGenVersion( void);
                       2110 ; rs232cmd.c  431       void FactBBGenSignal( void);
                       2111 ; rs232cmd.c  432       void FactBBGenPhase( void);
                       2112 ; rs232cmd.c  433       void FactBBGenScHPhase( void);
                       2113 ; rs232cmd.c  434       void FactBBGenDAC( void);
                       2114 ; rs232cmd.c  435       
                       2115 ; rs232cmd.c  436       void FactTSGenDate( void);
                       2116 ; rs232cmd.c  437       void FactTSGenAGain( void);
                       2117 ; rs232cmd.c  438       void FactTSGenCGain( void);
                       2118 ; rs232cmd.c  439       void FactTSGenPhase( void);
                       2119 ; rs232cmd.c  440       void FactTSGenScHPhase( void);
                       2120 ; rs232cmd.c  441       
                       2121 ; rs232cmd.c  442       void FactAudioGenStatus( void);
                       2122 ; rs232cmd.c  443       void FactAudioGenDate( void);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  21

ADDR   CODE            LINE SOURCELINE
                       2123 ; rs232cmd.c  444       void FactAudioGenLevel( void);
                       2124 ; rs232cmd.c  445       
                       2125 ; rs232cmd.c  446       void FactPLDVersion( void);
                       2126 ; rs232cmd.c  447       void FactTCXOStatus( void);
                       2127 ; rs232cmd.c  448       void FactMultiMediaChip( void);
                       2128 ; rs232cmd.c  449       
                       2129 ; rs232cmd.c  450       int FindParameter( char* par, struct PAR_STRUCT code* TmpPtr);
                       2130 ; rs232cmd.c  451       
                       2131 ; rs232cmd.c  452       long FLTToSamples( UC system, int F, int L, float T);
                       2132 ; rs232cmd.c  453       void PrintSamplesToFLT( UC system, long samples);
                       2133 ; rs232cmd.c  454       
                       2134 ; rs232cmd.c  455       // **********************************************************************
                            ****
                       2135 ; rs232cmd.c  456       struct CMD_STRUCT code Mandated[12] = {
00058A 47454E4C4F434B  2136         DB      047H,045H,04EH,04CH,04FH,043H,04BH,045H,044H,000H
       454400               
                       2157         PUBLIC  _Mandated
                       2158         ALIGN   1
000594                 2159 _Mandated:
000594 rrrrrrrrrrrrrr  2160         DD      _CLSCmdTxt
       rr                   
000598 00000000        2161         DD      000000000H
00059C rrrrrrrrrrrrrr  2162         DD      _Mandated+24
       rr                   
0005A0 00000000000000  2163         DD      000000000H,000000000H
       00                   
0005A8 rrrrrrrrrrrrrr  2164         DD      _CLSCommand,_ESECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005B0 00000000        2165         DD      000000000H
0005B4 rrrrrrrrrrrrrr  2166         DD      _Mandated+48
       rr                   
0005B8 00000000000000  2167         DD      000000000H,000000000H
       00                   
0005C0 rrrrrrrrrrrrrr  2168         DD      _ESECommand,_ESRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005C8 00000000        2169         DD      000000000H
0005CC rrrrrrrrrrrrrr  2170         DD      _Mandated+72
       rr                   
0005D0 00000000000000  2171         DD      000000000H,000000000H
       00                   
0005D8 rrrrrrrrrrrrrr  2172         DD      _ESRCommand,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005E0 00000000        2173         DD      000000000H
0005E4 rrrrrrrrrrrrrr  2174         DD      _Mandated+96
       rr                   
0005E8 00000000000000  2175         DD      000000000H,000000000H
       00                   
0005F0 rrrrrrrrrrrrrr  2176         DD      _IDNCommand,_OPCCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0005F8 00000000        2177         DD      000000000H
0005FC rrrrrrrrrrrrrr  2178         DD      _Mandated+120
       rr                   
000600 00000000000000  2179         DD      000000000H,000000000H
       00                   
000608 rrrrrrrrrrrrrr  2180         DD      _OPCCommand,_RSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000610 00000000        2181         DD      000000000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  22

ADDR   CODE            LINE SOURCELINE
000614 rrrrrrrrrrrrrr  2182         DD      _Mandated+144
       rr                   
000618 00000000000000  2183         DD      000000000H,000000000H
       00                   
000620 rrrrrrrrrrrrrr  2184         DD      _RSTCommand,_SRECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000628 00000000        2185         DD      000000000H
00062C rrrrrrrrrrrrrr  2186         DD      _Mandated+168
       rr                   
000630 00000000000000  2187         DD      000000000H,000000000H
       00                   
000638 rrrrrrrrrrrrrr  2188         DD      _SRECommand,_STBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000640 00000000        2189         DD      000000000H
000644 rrrrrrrrrrrrrr  2190         DD      _Mandated+192
       rr                   
000648 00000000000000  2191         DD      000000000H,000000000H
       00                   
000650 rrrrrrrrrrrrrr  2192         DD      _STBCommand,_TSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000658 00000000        2193         DD      000000000H
00065C rrrrrrrrrrrrrr  2194         DD      _Mandated+216
       rr                   
000660 00000000000000  2195         DD      000000000H,000000000H
       00                   
000668 rrrrrrrrrrrrrr  2196         DD      _TSTCommand,_RCLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000670 00000000        2197         DD      000000000H
000674 rrrrrrrrrrrrrr  2198         DD      _Mandated+240
       rr                   
000678 00000000000000  2199         DD      000000000H,000000000H
       00                   
000680 rrrrrrrrrrrrrr  2200         DD      _RCLCommand,_SAVCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000688 00000000        2201         DD      000000000H
00068C rrrrrrrrrrrrrr  2202         DD      _Mandated+264
       rr                   
000690 00000000000000  2203         DD      000000000H,000000000H
       00                   
000698 rrrrrrrrrrrrrr  2204         DD      _SAVCommand,_WAICmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006A0 00000000000000  2205         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2206 ; rs232cmd.c  457               { CLSCmdTxt, NULL, &Mandated[1],  NULL, NONE, CLSCommand},
                       2207 ; rs232cmd.c  458               { ESECmdTxt, NULL, &Mandated[2],  NULL, NONE, ESECommand},
                       2208 ; rs232cmd.c  459               { ESRCmdTxt, NULL, &Mandated[3],  NULL, NONE, ESRCommand},
                       2209 ; rs232cmd.c  460               { IDNCmdTxt, NULL, &Mandated[4],  NULL, NONE, IDNCommand},
                       2210 ; rs232cmd.c  461               { OPCCmdTxt, NULL, &Mandated[5],  NULL, NONE, OPCCommand},
                       2211 ; rs232cmd.c  462               { RSTCmdTxt, NULL, &Mandated[6],  NULL, NONE, RSTCommand},
                       2212 ; rs232cmd.c  463               { SRECmdTxt, NULL, &Mandated[7],  NULL, NONE, SRECommand},
                       2213 ; rs232cmd.c  464               { STBCmdTxt, NULL, &Mandated[8],  NULL, NONE, STBCommand},
                       2214 ; rs232cmd.c  465               { TSTCmdTxt, NULL, &Mandated[9],  NULL, NONE, TSTCommand},
                       2215 ; rs232cmd.c  466               { RCLCmdTxt, NULL, &Mandated[10], NULL, NONE, RCLCommand},
                       2216 ; rs232cmd.c  467               { SAVCmdTxt, NULL, &Mandated[11], NULL, NONE, SAVCommand},
                       2217 ; rs232cmd.c  468               { WAICmdTxt, NULL, NULL         , NULL, NONE, WAICommand}
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  23

ADDR   CODE            LINE SOURCELINE
                       2218 ; rs232cmd.c  469       };
                       2219 ; rs232cmd.c  470       
                       2220 ; rs232cmd.c  471       struct CMD_STRUCT code Subsystem[9] = {
0006B0 rrrrrrrrrrrrrr  2221         DD      _WAICommand
       rr                   
                       2225         PUBLIC  _Subsystem
                       2226         ALIGN   1
0006B4                 2227 _Subsystem:
0006B4 rrrrrrrrrrrrrr  2228         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006BC rrrrrrrrrrrrrr  2229         DD      _Subsystem+24
       rr                   
0006C0 rrrrrrrrrrrrrr  2230         DD      _System
       rr                   
0006C4 00000000000000  2231         DD      000000000H,000000000H
       00                   
0006CC rrrrrrrrrrrrrr  2232         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006D4 rrrrrrrrrrrrrr  2233         DD      _Subsystem+48
       rr                   
0006D8 rrrrrrrrrrrrrr  2234         DD      _Status
       rr                   
0006DC 00000000000000  2235         DD      000000000H,000000000H
       00                   
0006E4 rrrrrrrrrrrrrr  2236         DD      _DIAGNOSTICCmdTxt,_DIAGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0006EC rrrrrrrrrrrrrr  2237         DD      _Subsystem+72
       rr                   
0006F0 00000000000000  2238         DD      000000000H,000000000H,000000000H
       0000000000           
0006FC rrrrrrrrrrrrrr  2239         DD      _MONITORCmdTxt,_MONCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000704 rrrrrrrrrrrrrr  2240         DD      _Subsystem+96
       rr                   
000708 00000000000000  2241         DD      000000000H,000000000H,000000000H
       0000000000           
000714 rrrrrrrrrrrrrr  2242         DD      _INPUTCmdTxt,_INPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00071C rrrrrrrrrrrrrr  2243         DD      _Subsystem+120
       rr                   
000720 rrrrrrrrrrrrrr  2244         DD      _Input
       rr                   
000724 00000000000000  2245         DD      000000000H,000000000H
       00                   
00072C rrrrrrrrrrrrrr  2246         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000734 rrrrrrrrrrrrrr  2247         DD      _Subsystem+144
       rr                   
000738 rrrrrrrrrrrrrr  2248         DD      _Output
       rr                   
00073C 00000000000000  2249         DD      000000000H,000000000H
       00                   
000744 rrrrrrrrrrrrrr  2250         DD      _USERCmdTxt,_USERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  24

ADDR   CODE            LINE SOURCELINE
00074C rrrrrrrrrrrrrr  2251         DD      _Subsystem+168
       rr                   
000750 00000000000000  2252         DD      000000000H,000000000H,000000000H
       0000000000           
00075C rrrrrrrrrrrrrr  2253         DD      _MEASURECmdTxt,_MEASCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000764 rrrrrrrrrrrrrr  2254         DD      _Subsystem+192
       rr                   
000768 00000000000000  2255         DD      000000000H,000000000H,000000000H
       0000000000           
000774 rrrrrrrrrrrrrr  2256         DD      _FACTORYCmdTxt,_FACTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00077C 00000000        2257         DD      000000000H
000780 rrrrrrrrrrrrrr  2258         DD      _Factory
       rr                   
                       2259 ; rs232cmd.c  472               { SYSTEMCmdTxt,   SYSTCmdTxt, &Subsystem[1], &System[0],  NONE, N
                            ONE},
                       2260 ; rs232cmd.c  473               { STATUSCmdTxt,           STATCmdTxt, &Subsystem[2], &Status[0], 
                             NONE, NONE},
                       2261 ; rs232cmd.c  474               { DIAGNOSTICCmdTxt, DIAGCmdTxt, &Subsystem[3], NULL,             
                              NONE, NONE},
                       2262 ; rs232cmd.c  475               { MONITORCmdTxt,          MONCmdTxt,  &Subsystem[4], NULL,       
                                      NONE, NONE},
                       2263 ; rs232cmd.c  476               { INPUTCmdTxt,    INPCmdTxt,  &Subsystem[5], &Input[0],   NONE, N
                            ONE},
                       2264 ; rs232cmd.c  477               { OUTPUTCmdTxt,           OUTPCmdTxt, &Subsystem[6], &Output[0], 
                             NONE, NONE},
                       2265 ; rs232cmd.c  478               { USERCmdTxt,             USERCmdTxt, &Subsystem[7], NULL,       
                                      NONE, NONE},
                       2266 ; rs232cmd.c  479               { MEASURECmdTxt,          MEASCmdTxt, &Subsystem[8], NULL,       
                                      NONE, NONE},
                       2267 ; rs232cmd.c  480               { FACTORYCmdTxt,          FACTCmdTxt, NULL,                      
                             &Factory[0], NONE, NONE},
                       2268 ; rs232cmd.c  481       };
                       2269 ; rs232cmd.c  482       
                       2270 ; rs232cmd.c  483       // **********************************************************************
                            ****
                       2271 ; rs232cmd.c  484       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2272 ; rs232cmd.c  485                       SYSTem
                       2273 ; rs232cmd.c  486                               :ERRor?
                       2274 ; rs232cmd.c  487               :VERSion?
                       2275 ; rs232cmd.c  488                   :PRESet<?>
                       2276 ; rs232cmd.c  489                       [:ACTIVE?]
                       2277 ; rs232cmd.c  490                       :RECall<?>      1 .. 4
                       2278 ; rs232cmd.c  491                 :STORe                        1 .. 4
                       2279 ; rs232cmd.c  492               :NAMe<?>                1 .. 4 , <name>
                       2280 ; rs232cmd.c  493               :AUTHor<?>      1 .. 4 , <author name>
                       2281 ; rs232cmd.c  494                     :DATE<?>          1 .. 4[, <year>,<month>,<date>]
                       2282 ; rs232cmd.c  495                                       :DOWNload               1 .. 4
                       2283 ; rs232cmd.c  496                                       :UPLoad                 1 .. 4
                       2284 ; rs232cmd.c  497               :EVENtlog
                       2285 ; rs232cmd.c  498               :DATE
                       2286 ; rs232cmd.c  499               :TIME
                       2287 ; rs232cmd.c  500       */
                       2288 ; rs232cmd.c  501       struct CMD_STRUCT code System[6] = {
000784 00000000000000  2289         DD      000000000H,000000000H
       00                   
                       2293         PUBLIC  _System
                       2294         ALIGN   1
00078C                 2295 _System:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  25

ADDR   CODE            LINE SOURCELINE
00078C rrrrrrrrrrrrrr  2296         DD      _ERRORCmdTxt,_ERRCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000794 rrrrrrrrrrrrrr  2297         DD      _System+24
       rr                   
000798 00000000000000  2298         DD      000000000H,000000000H
       00                   
0007A0 rrrrrrrrrrrrrr  2299         DD      _SystemError,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007AC rrrrrrrrrrrrrr  2300         DD      _System+48
       rr                   
0007B0 00000000000000  2301         DD      000000000H,000000000H
       00                   
0007B8 rrrrrrrrrrrrrr  2302         DD      _SystemVersion,_PRESETCmdTxt,_PRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007C4 rrrrrrrrrrrrrr  2303         DD      _System+72
       rr                   
0007C8 rrrrrrrrrrrrrr  2304         DD      _SystemLevel1
       rr                   
0007CC 00000000        2305         DD      000000000H
0007D0 rrrrrrrrrrrrrr  2306         DD      _RCLCommand,_EVENTLOGCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0007DC rrrrrrrrrrrrrr  2307         DD      _System+96
       rr                   
0007E0 00000000000000  2308         DD      000000000H,000000000H,000000000H
       0000000000           
0007EC rrrrrrrrrrrrrr  2309         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0007F4 rrrrrrrrrrrrrr  2310         DD      _System+120
       rr                   
0007F8 00000000000000  2311         DD      000000000H,000000000H,000000000H
       0000000000           
000804 rrrrrrrrrrrrrr  2312         DD      _TIMECmdTxt,_TIMECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       2313 ; rs232cmd.c  502               { ERRORCmdTxt,  ERRCmdTxt,      &System[1], NULL,                
                                           NONE, SystemError},
                       2314 ; rs232cmd.c  503               { VERSIONCmdTxt,        VERSCmdTxt, &System[2], NULL,            
                                           NONE, SystemVersion},
                       2315 ; rs232cmd.c  504               { PRESETCmdTxt,         PRESCmdTxt, &System[3], &SystemLevel1[0],
                             NONE, RCLCommand},
                       2316 ; rs232cmd.c  505               { EVENTLOGCmdTxt, EVENCmdTxt, &System[4], NULL,                  
                                           NONE, NONE},
                       2317 ; rs232cmd.c  506               { DATECmdTxt,           DATECmdTxt, &System[5], NULL,            
                                           NONE, NONE},
                       2318 ; rs232cmd.c  507               { TIMECmdTxt,           TIMECmdTxt, NULL,               NULL,    
                                                   NONE, NONE}
                       2319 ; rs232cmd.c  508       };
                       2320 ; rs232cmd.c  509       
                       2321 ; rs232cmd.c  510       struct CMD_STRUCT code SystemLevel1[7] = {
00080C 00000000000000  2322         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2326         PUBLIC  _SystemLevel1
                       2327         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  26

ADDR   CODE            LINE SOURCELINE
00081C                 2328 _SystemLevel1:
00081C rrrrrrrrrrrrrr  2329         DD      _RECALLCmdTxt,_RECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000824 rrrrrrrrrrrrrr  2330         DD      _SystemLevel1+24
       rr                   
000828 00000000000000  2331         DD      000000000H,000000000H
       00                   
000830 rrrrrrrrrrrrrr  2332         DD      _RCLCommand,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00083C rrrrrrrrrrrrrr  2333         DD      _SystemLevel1+48
       rr                   
000840 00000000000000  2334         DD      000000000H,000000000H
       00                   
000848 rrrrrrrrrrrrrr  2335         DD      _SAVCommand,_NAMECmdTxt,_NAMECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000854 rrrrrrrrrrrrrr  2336         DD      _SystemLevel1+72
       rr                   
000858 00000000000000  2337         DD      000000000H,000000000H
       00                   
000860 rrrrrrrrrrrrrr  2338         DD      _SystemPresetName,_AUTHORCmdTxt,_AUTHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00086C rrrrrrrrrrrrrr  2339         DD      _SystemLevel1+96
       rr                   
000870 00000000000000  2340         DD      000000000H,000000000H
       00                   
000878 rrrrrrrrrrrrrr  2341         DD      _SystemPresetAuthor,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000884 rrrrrrrrrrrrrr  2342         DD      _SystemLevel1+120
       rr                   
000888 00000000000000  2343         DD      000000000H,000000000H
       00                   
000890 rrrrrrrrrrrrrr  2344         DD      _SystemPresetDate,_DOWNLOADCmdTxt,_DOWNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00089C rrrrrrrrrrrrrr  2345         DD      _SystemLevel1+144
       rr                   
0008A0 00000000000000  2346         DD      000000000H,000000000H
       00                   
0008A8 rrrrrrrrrrrrrr  2347         DD      _SystemPresetDownload,_UPLOADCmdTxt,_UPLCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008B4 00000000000000  2348         DD      000000000H,000000000H,000000000H
       0000000000           
                       2349 ; rs232cmd.c  511               { RECALLCmdTxt,   RECCmdTxt,    &SystemLevel1[1], NULL, NONE, RCL
                            Command},
                       2350 ; rs232cmd.c  512               { STORECmdTxt,    STORCmdTxt, &SystemLevel1[2], NULL, NONE, SAVCo
                            mmand},
                       2351 ; rs232cmd.c  513               { NAMECmdTxt,      NAMECmdTxt, &SystemLevel1[3],        NULL, NON
                            E, SystemPresetName},
                       2352 ; rs232cmd.c  514               { AUTHORCmdTxt,   AUTHCmdTxt, &SystemLevel1[4], NULL, NONE, Syste
                            mPresetAuthor},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  27

ADDR   CODE            LINE SOURCELINE
                       2353 ; rs232cmd.c  515               { DATECmdTxt,      DATECmdTxt, &SystemLevel1[5],        NULL, NON
                            E, SystemPresetDate},
                       2354 ; rs232cmd.c  516               { DOWNLOADCmdTxt, DOWNCmdTxt,   &SystemLevel1[6],       NULL, NON
                            E, SystemPresetDownload},
                       2355 ; rs232cmd.c  517               { UPLOADCmdTxt,         UPLCmdTxt,      NULL,                    
                                   NULL, NONE, SystemPresetUpload},
                       2356 ; rs232cmd.c  518       };
                       2357 ; rs232cmd.c  519       
                       2358 ; rs232cmd.c  520       // **********************************************************************
                            ****
                       2359 ; rs232cmd.c  521       /*      CMD:    SUB1:   SUB2:   SUB3:   PARM:
                       2360 ; rs232cmd.c  522                       STATus
                       2361 ; rs232cmd.c  523                               :OPERation
                       2362 ; rs232cmd.c  524                               :EVENt?
                       2363 ; rs232cmd.c  525                     :CONDition?
                       2364 ; rs232cmd.c  526                   :ENABle<?>  0 .. 65535
                       2365 ; rs232cmd.c  527                       :QUEStionable
                       2366 ; rs232cmd.c  528                       :EVENt?
                       2367 ; rs232cmd.c  529                     :CONDition?
                       2368 ; rs232cmd.c  530                   :ENABle<?>  0 .. 65535
                       2369 ; rs232cmd.c  531                               :PRESet                         TBD
                       2370 ; rs232cmd.c  532                   :PT5201?
                       2371 ; rs232cmd.c  533       */
                       2372 ; rs232cmd.c  534       struct CMD_STRUCT code Status[3] = {
0008C0 rrrrrrrrrrrrrr  2373         DD      _SystemPresetUpload
       rr                   
                       2377         PUBLIC  _Status
                       2378         ALIGN   1
0008C4                 2379 _Status:
0008C4 rrrrrrrrrrrrrr  2380         DD      _OPERATIONCmdTxt,_OPERCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0008CC rrrrrrrrrrrrrr  2381         DD      _Status+24
       rr                   
0008D0 rrrrrrrrrrrrrr  2382         DD      _StatusLevel1_1
       rr                   
0008D4 00000000        2383         DD      000000000H
0008D8 rrrrrrrrrrrrrr  2384         DD      _StatusOperEvent,_QUESTIONABLECmdTxt,_QUESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008E4 rrrrrrrrrrrrrr  2385         DD      _Status+48
       rr                   
0008E8 rrrrrrrrrrrrrr  2386         DD      _StatusLevel1_2
       rr                   
0008EC 00000000        2387         DD      000000000H
0008F0 rrrrrrrrrrrrrr  2388         DD      _StatusQuestEvent,_PRESETCmdTxt,_PRESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0008FC 00000000000000  2389         DD      000000000H,000000000H,000000000H
       0000000000           
                       2390 ; rs232cmd.c  535               { OPERATIONCmdTxt,       OPERCmdTxt, &Status[1], &StatusLevel1_1[
                            0], NONE, StatusOperEvent},
                       2391 ; rs232cmd.c  536               { QUESTIONABLECmdTxt, QUESCmdTxt, &Status[2], &StatusLevel1_2[0],
                             NONE, StatusQuestEvent},
                       2392 ; rs232cmd.c  537               { PRESETCmdTxt,                  PRESCmdTxt, NULL,               
                            NULL,                                  NONE, StatusPreset},
                       2393 ; rs232cmd.c  538       };
                       2394 ; rs232cmd.c  539       
                       2395 ; rs232cmd.c  540       struct CMD_STRUCT code StatusLevel1_1[3] = {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  28

ADDR   CODE            LINE SOURCELINE
000908 rrrrrrrrrrrrrr  2396         DD      _StatusPreset
       rr                   
                       2399         PUBLIC  _StatusLevel1_1
                       2400         ALIGN   1
00090C                 2401 _StatusLevel1_1:
00090C rrrrrrrrrrrrrr  2402         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000914 rrrrrrrrrrrrrr  2403         DD      _StatusLevel1_1+24
       rr                   
000918 00000000000000  2404         DD      000000000H,000000000H
       00                   
000920 rrrrrrrrrrrrrr  2405         DD      _StatusOperEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00092C rrrrrrrrrrrrrr  2406         DD      _StatusLevel1_1+48
       rr                   
000930 00000000000000  2407         DD      000000000H,000000000H
       00                   
000938 rrrrrrrrrrrrrr  2408         DD      _StatusOperCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000944 00000000000000  2409         DD      000000000H,000000000H,000000000H
       0000000000           
                       2410 ; rs232cmd.c  541               { EVENTCmdTxt,   EVENCmdTxt, &StatusLevel1_1[1], NULL, NONE, Stat
                            usOperEvent},
                       2411 ; rs232cmd.c  542               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_1[2], NULL, NONE, St
                            atusOperCondition},
                       2412 ; rs232cmd.c  543               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                      NULL, NONE, StatusOperEnable},
                       2413 ; rs232cmd.c  544       };
                       2414 ; rs232cmd.c  545       
                       2415 ; rs232cmd.c  546       struct CMD_STRUCT code StatusLevel1_2[3] = {
000950 rrrrrrrrrrrrrr  2416         DD      _StatusOperEnable
       rr                   
                       2419         PUBLIC  _StatusLevel1_2
                       2420         ALIGN   1
000954                 2421 _StatusLevel1_2:
000954 rrrrrrrrrrrrrr  2422         DD      _EVENTCmdTxt,_EVENCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00095C rrrrrrrrrrrrrr  2423         DD      _StatusLevel1_2+24
       rr                   
000960 00000000000000  2424         DD      000000000H,000000000H
       00                   
000968 rrrrrrrrrrrrrr  2425         DD      _StatusQuestEvent,_CONDITIONCmdTxt,_CONDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000974 rrrrrrrrrrrrrr  2426         DD      _StatusLevel1_2+48
       rr                   
000978 00000000000000  2427         DD      000000000H,000000000H
       00                   
000980 rrrrrrrrrrrrrr  2428         DD      _StatusQuestCondition,_ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00098C 00000000000000  2429         DD      000000000H,000000000H,000000000H
       0000000000           
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  29

ADDR   CODE            LINE SOURCELINE
                       2430 ; rs232cmd.c  547               { EVENTCmdTxt,           EVENCmdTxt, &StatusLevel1_2[1], NULL, NO
                            NE, StatusQuestEvent},
                       2431 ; rs232cmd.c  548               { CONDITIONCmdTxt, CONDCmdTxt, &StatusLevel1_2[2], NULL, NONE, St
                            atusQuestCondition},
                       2432 ; rs232cmd.c  549               { ENABLECmdTxt,          ENABCmdTxt, NULL,                       
                                           NULL, NONE, StatusQuestEnable},
                       2433 ; rs232cmd.c  550       };
                       2434 ; rs232cmd.c  551       
                       2435 ; rs232cmd.c  552       
                       2436 ; rs232cmd.c  553       // **********************************************************************
                            ****
                       2437 ; rs232cmd.c  554       /*      CMD:    SUB1:   SUB2:           PARM:
                       2438 ; rs232cmd.c  555                       INPut
                       2439 ; rs232cmd.c  556                               :GENLOCK<?>
                       2440 ; rs232cmd.c  557                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2441 ; rs232cmd.c  558                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2442 ; rs232cmd.c  559                                       :CALibrate
                       2443 ; rs232cmd.c  560                                               :ENABle         OFF|ON
                       2444 ; rs232cmd.c  561                                               :ADJust         UP|DOWN|MIN|MAX
                       2445 ; rs232cmd.c  562                                               :STORe
                       2446 ; rs232cmd.c  563                                                                                
                                   
                       2447 ; rs232cmd.c  564       */
                       2448 ; rs232cmd.c  565       //***********************************************************************
                            ***
                       2449 ; rs232cmd.c  566       struct CMD_STRUCT code Input[1] = {
000998 rrrrrrrrrrrrrr  2450         DD      _StatusQuestEnable
       rr                   
                       2454         PUBLIC  _Input
                       2455         ALIGN   1
00099C rrrrrrrrrrrrrr  2456 _Input: DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009A4 00000000        2457         DD      000000000H
0009A8 rrrrrrrrrrrrrr  2458         DD      _GenlockLevel1
       rr                   
0009AC 00000000        2459         DD      000000000H
                       2460 ; rs232cmd.c  567               { GENLOCKCmdTxt, GENLCmdTxt, NULL, &GenlockLevel1[0], NONE, Genlo
                            ckGen},
                       2461 ; rs232cmd.c  568       };
                       2462 ; rs232cmd.c  569       
                       2463 ; rs232cmd.c  570       struct CMD_STRUCT code GenlockLevel1[3] = {
0009B0 rrrrrrrrrrrrrr  2464         DD      _GenlockGen
       rr                   
                       2467         PUBLIC  _GenlockLevel1
                       2468         ALIGN   1
0009B4                 2469 _GenlockLevel1:
0009B4 rrrrrrrrrrrrrr  2470         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0009BC rrrrrrrrrrrrrr  2471         DD      _GenlockLevel1+24
       rr                   
0009C0 00000000000000  2472         DD      000000000H,000000000H
       00                   
0009C8 rrrrrrrrrrrrrr  2473         DD      _GenlockGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009D4 rrrrrrrrrrrrrr  2474         DD      _GenlockLevel1+48
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  30

ADDR   CODE            LINE SOURCELINE
0009D8 00000000000000  2475         DD      000000000H,000000000H
       00                   
0009E0 rrrrrrrrrrrrrr  2476         DD      _GenlockGenDelay,_CALIBRATECmdTxt,_CALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0009EC 00000000        2477         DD      000000000H
0009F0 rrrrrrrrrrrrrr  2478         DD      _GenlockLevel1_1
       rr                   
                       2479 ; rs232cmd.c  571               { SYSTEMCmdTxt,          SYSTCmdTxt, &GenlockLevel1[1], NULL,    
                                                             NONE, GenlockGenSystem},
                       2480 ; rs232cmd.c  572               { DELAYCmdTxt,   DELCmdTxt,  &GenlockLevel1[2], NULL,            
                                                     NONE, GenlockGenDelay},
                       2481 ; rs232cmd.c  573               { CALIBRATECmdTxt, CALCmdTxt,  NULL,                             
                             &GenlockLevel1_1[0], NONE, NONE},
                       2482 ; rs232cmd.c  574       };
                       2483 ; rs232cmd.c  575       
                       2484 ; rs232cmd.c  576       struct CMD_STRUCT code GenlockLevel1_1[3] = {
0009F4 00000000000000  2485         DD      000000000H,000000000H
       00                   
                       2488         PUBLIC  _GenlockLevel1_1
                       2489         ALIGN   1
0009FC                 2490 _GenlockLevel1_1:
0009FC rrrrrrrrrrrrrr  2491         DD      _ENABLECmdTxt,_ENABCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A04 rrrrrrrrrrrrrr  2492         DD      _GenlockLevel1_1+24
       rr                   
000A08 00000000000000  2493         DD      000000000H,000000000H
       00                   
000A10 rrrrrrrrrrrrrr  2494         DD      _GenlockGenCalibrateEnable,_ADJUSTCmdTxt,_ADJCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A1C rrrrrrrrrrrrrr  2495         DD      _GenlockLevel1_1+48
       rr                   
000A20 00000000000000  2496         DD      000000000H,000000000H
       00                   
000A28 rrrrrrrrrrrrrr  2497         DD      _GenlockGenCalibrateAdjust,_STORECmdTxt,_STORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A34 00000000000000  2498         DD      000000000H,000000000H,000000000H
       0000000000           
                       2499 ; rs232cmd.c  577               { ENABLECmdTxt, ENABCmdTxt, &GenlockLevel1_1[1], NULL, NONE, Genl
                            ockGenCalibrateEnable},
                       2500 ; rs232cmd.c  578               { ADJUSTCmdTxt, ADJCmdTxt,  &GenlockLevel1_1[2], NULL, NONE, Genl
                            ockGenCalibrateAdjust},
                       2501 ; rs232cmd.c  579               { STORECmdTxt,  STORCmdTxt, NULL,                                
                                    NULL, NONE, GenlockGenCalibrateStore},
                       2502 ; rs232cmd.c  580       };
                       2503 ; rs232cmd.c  581       // **********************************************************************
                            ****
                       2504 ; rs232cmd.c  582       /*      CMD:    SUB1:   SUB2:           PARM:
                       2505 ; rs232cmd.c  583                       OUTPut
                       2506 ; rs232cmd.c  584                               :BB1-3<?>
                       2507 ; rs232cmd.c  585                                       :SYSTem                 INTernal | PALBur
                            st | NTSCburst |F10MHZ
                       2508 ; rs232cmd.c  586                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2509 ; rs232cmd.c  587                                       :SCHPhase               <-179to 180>
                       2510 ; rs232cmd.c  588       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  31

ADDR   CODE            LINE SOURCELINE
                       2511 ; rs232cmd.c  589                               :TSGenerator<?>
                       2512 ; rs232cmd.c  590                                       :PATTern          <pattern name>
                       2513 ; rs232cmd.c  591                                       :SYSTem                 PAL|NTSC
                       2514 ; rs232cmd.c  592                                       :DELay                  <Field>,<Line>,<T
                            ime>
                       2515 ; rs232cmd.c  593                                       :SCHPhase               <-179to 180>
                       2516 ; rs232cmd.c  594                                       :EMBaudio<?>
                       2517 ; rs232cmd.c  595                                               [:SIGNal]       OFF | SILence | F
                            1KHZ
                       2518 ; rs232cmd.c  596                                               :LEVel
                       2519 ; rs232cmd.c  597       
                       2520 ; rs232cmd.c  598                               :AUDio
                       2521 ; rs232cmd.c  599                                       :OUTPut
                       2522 ; rs232cmd.c  600                                       :ANALog<?>
                       2523 ; rs232cmd.c  601                                               :SIGNal
                       2524 ; rs232cmd.c  602                                               :LEVel
                       2525 ; rs232cmd.c  603                                               :CLICk
                       2526 ; rs232cmd.c  604                                       :AESebu<?>
                       2527 ; rs232cmd.c  605                                               :SYSTem
                       2528 ; rs232cmd.c  606                                               :SIGNal
                       2529 ; rs232cmd.c  607                                               :LEVel
                       2530 ; rs232cmd.c  608                                               :TIMing
                       2531 ; rs232cmd.c  609                                               :WORDclock
                       2532 ; rs232cmd.c  610                                               :CLICkperiod
                       2533 ; rs232cmd.c  611       */
                       2534 ; rs232cmd.c  612       struct CMD_STRUCT code Output[3] = {
000A40 rrrrrrrrrrrrrr  2535         DD      _GenlockGenCalibrateStore
       rr                   
                       2538         PUBLIC  _Output
                       2539         ALIGN   1
000A44                 2540 _Output:
000A44 rrrrrrrrrrrrrr  2541         DD      _BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A4C rrrrrrrrrrrrrr  2542         DD      _Output+24
       rr                   
000A50 rrrrrrrrrrrrrr  2543         DD      _BBGenLevel1,_BBGenSuffix,_BBGen,_TSGENERATORCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrrrr             
000A60 rrrrrrrrrrrrrr  2544         DD      _TSGCmdTxt
       rr                   
000A64 rrrrrrrrrrrrrr  2545         DD      _Output+48
       rr                   
000A68 rrrrrrrrrrrrrr  2546         DD      _TSGenLevel1
       rr                   
000A6C 00000000        2547         DD      000000000H
000A70 rrrrrrrrrrrrrr  2548         DD      _TSGen,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000A7C 00000000        2549         DD      000000000H
000A80 rrrrrrrrrrrrrr  2550         DD      _AudioGenLevel1
       rr                   
000A84 00000000        2551         DD      000000000H
                       2552 ; rs232cmd.c  613               { BBCmdTxt,                     BBCmdTxt,  &Output[1], &BBGenLeve
                            l1[0],  BBGenSuffix, BBGen},
                       2553 ; rs232cmd.c  614               { TSGENERATORCmdTxt, TSGCmdTxt, &Output[2], &TSGenLevel1[0],     
                            NONE,            TSGen},
                       2554 ; rs232cmd.c  615               { AUDIOCmdTxt,          AUDCmdTxt, NULL,                  &AudioG
                            enLevel1[0], NONE,               AudioGenOutput},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  32

ADDR   CODE            LINE SOURCELINE
                       2555 ; rs232cmd.c  616       };
                       2556 ; rs232cmd.c  617       
                       2557 ; rs232cmd.c  618       struct CMD_STRUCT code BBGenLevel1[3] = {
000A88 rrrrrrrrrrrrrr  2558         DD      _AudioGenOutput
       rr                   
                       2561         PUBLIC  _BBGenLevel1
                       2562         ALIGN   1
000A8C                 2563 _BBGenLevel1:
000A8C rrrrrrrrrrrrrr  2564         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000A94 rrrrrrrrrrrrrr  2565         DD      _BBGenLevel1+24
       rr                   
000A98 00000000000000  2566         DD      000000000H,000000000H
       00                   
000AA0 rrrrrrrrrrrrrr  2567         DD      _BBGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AAC rrrrrrrrrrrrrr  2568         DD      _BBGenLevel1+48
       rr                   
000AB0 00000000000000  2569         DD      000000000H,000000000H
       00                   
000AB8 rrrrrrrrrrrrrr  2570         DD      _BBGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AC4 00000000000000  2571         DD      000000000H,000000000H,000000000H
       0000000000           
                       2572 ; rs232cmd.c  619               { SYSTEMCmdTxt,         SYSTCmdTxt, &BBGenLevel1[1], NULL, NONE, 
                            BBGenSystem},
                       2573 ; rs232cmd.c  620               { DELAYCmdTxt,     DELCmdTxt,  &BBGenLevel1[2], NULL, NONE, BBGen
                            Delay},
                       2574 ; rs232cmd.c  621               { SCHPHASECmdTxt, SCHPCmdTxt, NULL,                       NULL, N
                            ONE, BBGenScHPhase},
                       2575 ; rs232cmd.c  622       };
                       2576 ; rs232cmd.c  623       
                       2577 ; rs232cmd.c  624       struct CMD_STRUCT code TSGenLevel1[5] = {
000AD0 rrrrrrrrrrrrrr  2578         DD      _BBGenScHPhase
       rr                   
                       2582         PUBLIC  _TSGenLevel1
                       2583         ALIGN   1
000AD4                 2584 _TSGenLevel1:
000AD4 rrrrrrrrrrrrrr  2585         DD      _PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000ADC rrrrrrrrrrrrrr  2586         DD      _TSGenLevel1+24
       rr                   
000AE0 00000000000000  2587         DD      000000000H,000000000H
       00                   
000AE8 rrrrrrrrrrrrrr  2588         DD      _TSGenPattern,_SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000AF4 rrrrrrrrrrrrrr  2589         DD      _TSGenLevel1+48
       rr                   
000AF8 00000000000000  2590         DD      000000000H,000000000H
       00                   
000B00 rrrrrrrrrrrrrr  2591         DD      _TSGenSystem,_DELAYCmdTxt,_DELCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  33

ADDR   CODE            LINE SOURCELINE
000B0C rrrrrrrrrrrrrr  2592         DD      _TSGenLevel1+72
       rr                   
000B10 00000000000000  2593         DD      000000000H,000000000H
       00                   
000B18 rrrrrrrrrrrrrr  2594         DD      _TSGenDelay,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B24 rrrrrrrrrrrrrr  2595         DD      _TSGenLevel1+96
       rr                   
000B28 00000000000000  2596         DD      000000000H,000000000H
       00                   
000B30 rrrrrrrrrrrrrr  2597         DD      _TSGenScHPhase,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B3C 00000000        2598         DD      000000000H
000B40 rrrrrrrrrrrrrr  2599         DD      _TSGenLevel1_1
       rr                   
000B44 00000000        2600         DD      000000000H
                       2601 ; rs232cmd.c  625               { PATTERNCmdTxt,        PATTCmdTxt, &TSGenLevel1[1], NULL,       
                                                           NONE, TSGenPattern},
                       2602 ; rs232cmd.c  626               { SYSTEMCmdTxt,         SYSTCmdTxt, &TSGenLevel1[2], NULL,       
                                                           NONE, TSGenSystem},
                       2603 ; rs232cmd.c  627               { DELAYCmdTxt,     DELCmdTxt,  &TSGenLevel1[3], NULL,            
                                                   NONE, TSGenDelay},
                       2604 ; rs232cmd.c  628               { SCHPHASECmdTxt, SCHPCmdTxt, &TSGenLevel1[4], NULL,             
                                                   NONE, TSGenScHPhase},
                       2605 ; rs232cmd.c  629               { EMBAUDIOCmdTxt, EMBCmdTxt,    NULL,                     &TSGenL
                            evel1_1[0], NONE, TSGenEmbAudioSignal},
                       2606 ; rs232cmd.c  630       };
                       2607 ; rs232cmd.c  631       
                       2608 ; rs232cmd.c  632       struct CMD_STRUCT code TSGenLevel1_1[2] = {
000B48 rrrrrrrrrrrrrr  2609         DD      _TSGenEmbAudioSignal
       rr                   
                       2613         PUBLIC  _TSGenLevel1_1
                       2614         ALIGN   1
000B4C                 2615 _TSGenLevel1_1:
000B4C rrrrrrrrrrrrrr  2616         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B54 rrrrrrrrrrrrrr  2617         DD      _TSGenLevel1_1+24
       rr                   
000B58 00000000000000  2618         DD      000000000H,000000000H
       00                   
000B60 rrrrrrrrrrrrrr  2619         DD      _TSGenEmbAudioSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
                       2620 ; rs232cmd.c  633               { SIGNALCmdTxt, SIGNCmdTxt, &TSGenLevel1_1[1], NULL, NONE, TSGenE
                            mbAudioSignal},
                       2621 ; rs232cmd.c  634               { LEVELCmdTxt,  LEVCmdTxt,  NULL,                                
                             NULL, NONE, NONE},
                       2622 ; rs232cmd.c  635       };
                       2623 ; rs232cmd.c  636       
                       2624 ; rs232cmd.c  637       struct CMD_STRUCT code AudioGenLevel1[3] = {
000B6C 00000000000000  2625         DD      000000000H,000000000H,000000000H,000000000H
       00000000000000       
       0000                 
                       2628         PUBLIC  _AudioGenLevel1
                       2629         ALIGN   1
000B7C                 2630 _AudioGenLevel1:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  34

ADDR   CODE            LINE SOURCELINE
000B7C rrrrrrrrrrrrrr  2631         DD      _OUTPUTCmdTxt,_OUTPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000B84 rrrrrrrrrrrrrr  2632         DD      _AudioGenLevel1+24
       rr                   
000B88 00000000000000  2633         DD      000000000H,000000000H
       00                   
000B90 rrrrrrrrrrrrrr  2634         DD      _AudioGenOutput,_ANALOGCmdTxt,_ANALCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000B9C rrrrrrrrrrrrrr  2635         DD      _AudioGenLevel1+48
       rr                   
000BA0 rrrrrrrrrrrrrr  2636         DD      _AudioGenLevel1_1
       rr                   
000BA4 00000000        2637         DD      000000000H
000BA8 rrrrrrrrrrrrrr  2638         DD      _AudioGenAnalog,_AESEBUCmdTxt,_AESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BB4 00000000        2639         DD      000000000H
000BB8 rrrrrrrrrrrrrr  2640         DD      _AudioGenLevel1_2
       rr                   
000BBC 00000000        2641         DD      000000000H
                       2642 ; rs232cmd.c  638               { OUTPUTCmdTxt, OUTPCmdTxt, &AudioGenLevel1[1], NULL,            
                                                    NONE, AudioGenOutput},
                       2643 ; rs232cmd.c  639               { ANALOGCmdTxt, ANALCmdTxt, &AudioGenLevel1[2], &AudioGenLevel1_1
                            [0], NONE, AudioGenAnalog},
                       2644 ; rs232cmd.c  640               { AESEBUCmdTxt, AESCmdTxt,  NULL,                                
                              &AudioGenLevel1_2[0], NONE, AudioGenAESEBU},
                       2645 ; rs232cmd.c  641       };
                       2646 ; rs232cmd.c  642       
                       2647 ; rs232cmd.c  643       struct CMD_STRUCT code AudioGenLevel1_1[3] = {
000BC0 rrrrrrrrrrrrrr  2648         DD      _AudioGenAESEBU
       rr                   
                       2651         PUBLIC  _AudioGenLevel1_1
                       2652         ALIGN   1
000BC4                 2653 _AudioGenLevel1_1:
000BC4 rrrrrrrrrrrrrr  2654         DD      _SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000BCC rrrrrrrrrrrrrr  2655         DD      _AudioGenLevel1_1+24
       rr                   
000BD0 00000000000000  2656         DD      000000000H,000000000H
       00                   
000BD8 rrrrrrrrrrrrrr  2657         DD      _AudioGenAnalogSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BE4 rrrrrrrrrrrrrr  2658         DD      _AudioGenLevel1_1+48
       rr                   
000BE8 00000000000000  2659         DD      000000000H,000000000H
       00                   
000BF0 rrrrrrrrrrrrrr  2660         DD      _AudioGenAnalogLevel,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000BFC 00000000000000  2661         DD      000000000H,000000000H,000000000H
       0000000000           
                       2662 ; rs232cmd.c  644               { SIGNALCmdTxt, SIGNCmdTxt, &AudioGenLevel1_1[1], NULL, NONE, Aud
                            ioGenAnalogSignal},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  35

ADDR   CODE            LINE SOURCELINE
                       2663 ; rs232cmd.c  645               { LEVELCmdTxt,  LEVCmdTxt,  &AudioGenLevel1_1[2], NULL, NONE, Aud
                            ioGenAnalogLevel},
                       2664 ; rs232cmd.c  646               { CLICKCmdTxt,  CLICCmdTxt, NULL,                                
                                     NULL, NONE, AudioGenAnalogClick},
                       2665 ; rs232cmd.c  647       };
                       2666 ; rs232cmd.c  648       
                       2667 ; rs232cmd.c  649       struct CMD_STRUCT code AudioGenLevel1_2[6] = {
000C08 rrrrrrrrrrrrrr  2668         DD      _AudioGenAnalogClick
       rr                   
                       2671         PUBLIC  _AudioGenLevel1_2
                       2672         ALIGN   1
000C0C                 2673 _AudioGenLevel1_2:
000C0C rrrrrrrrrrrrrr  2674         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000C14 rrrrrrrrrrrrrr  2675         DD      _AudioGenLevel1_2+24
       rr                   
000C18 00000000000000  2676         DD      000000000H,000000000H
       00                   
000C20 rrrrrrrrrrrrrr  2677         DD      _AudioGenAESEBUSystem,_SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C2C rrrrrrrrrrrrrr  2678         DD      _AudioGenLevel1_2+48
       rr                   
000C30 00000000000000  2679         DD      000000000H,000000000H
       00                   
000C38 rrrrrrrrrrrrrr  2680         DD      _AudioGenAESEBUSignal,_LEVELCmdTxt,_LEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C44 rrrrrrrrrrrrrr  2681         DD      _AudioGenLevel1_2+72
       rr                   
000C48 00000000000000  2682         DD      000000000H,000000000H
       00                   
000C50 rrrrrrrrrrrrrr  2683         DD      _AudioGenAESEBULevel,_TIMINGCmdTxt,_TIMCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C5C rrrrrrrrrrrrrr  2684         DD      _AudioGenLevel1_2+96
       rr                   
000C60 00000000000000  2685         DD      000000000H,000000000H
       00                   
000C68 rrrrrrrrrrrrrr  2686         DD      _AudioGenAESEBUTiming,_WORDCLOCKCmdTxt,_WORDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C74 rrrrrrrrrrrrrr  2687         DD      _AudioGenLevel1_2+120
       rr                   
000C78 00000000000000  2688         DD      000000000H,000000000H
       00                   
000C80 rrrrrrrrrrrrrr  2689         DD      _AudioGenAESEBUWordClock,_CLICKCmdTxt,_CLICCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000C8C 00000000000000  2690         DD      000000000H,000000000H,000000000H
       0000000000           
                       2691 ; rs232cmd.c  650               { SYSTEMCmdTxt,          SYSTCmdTxt, &AudioGenLevel1_2[1], NULL, 
                            NONE, AudioGenAESEBUSystem},
                       2692 ; rs232cmd.c  651               { SIGNALCmdTxt,          SIGNCmdTxt, &AudioGenLevel1_2[2], NULL, 
                            NONE, AudioGenAESEBUSignal},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  36

ADDR   CODE            LINE SOURCELINE
                       2693 ; rs232cmd.c  652               { LEVELCmdTxt,   LEVCmdTxt,  &AudioGenLevel1_2[3], NULL, NONE, Au
                            dioGenAESEBULevel},
                       2694 ; rs232cmd.c  653               { TIMINGCmdTxt,  TIMCmdTxt,  &AudioGenLevel1_2[4], NULL, NONE, Au
                            dioGenAESEBUTiming},
                       2695 ; rs232cmd.c  654               { WORDCLOCKCmdTxt, WORDCmdTxt, &AudioGenLevel1_2[5], NULL, NONE, 
                            AudioGenAESEBUWordClock},
                       2696 ; rs232cmd.c  655               { CLICKCmdTxt,   CLICCmdTxt, NULL,                               
                                     NULL, NONE, AudioGenAESEBUClick},
                       2697 ; rs232cmd.c  656       };
                       2698 ; rs232cmd.c  657       
                       2699 ; rs232cmd.c  658       // **********************************************************************
                            ****
                       2700 ; rs232cmd.c  659       /*      CMD:    SUB1:   SUB2:           PARM:
                       2701 ; rs232cmd.c  660       FACTORY
                       2702 ; rs232cmd.c  661         :PASSword
                       2703 ; rs232cmd.c  662       
                       2704 ; rs232cmd.c  663         :RESet
                       2705 ; rs232cmd.c  664       
                       2706 ; rs232cmd.c  665         :V24Circuit
                       2707 ; rs232cmd.c  666           :COMMand
                       2708 ; rs232cmd.c  667           :TRANsparent
                       2709 ; rs232cmd.c  668       
                       2710 ; rs232cmd.c  669         :CHECksum
                       2711 ; rs232cmd.c  670           :CODE
                       2712 ; rs232cmd.c  671           :PLD
                       2713 ; rs232cmd.c  672           :EMBaudio
                       2714 ; rs232cmd.c  673           :PATTern
                       2715 ; rs232cmd.c  674       
                       2716 ; rs232cmd.c  675         :MAINboard
                       2717 ; rs232cmd.c  676           :VERSion
                       2718 ; rs232cmd.c  677           :IDN
                       2719 ; rs232cmd.c  678           :COMPany
                       2720 ; rs232cmd.c  679           :TYPE
                       2721 ; rs232cmd.c  680           :KUNumber
                       2722 ; rs232cmd.c  681           :SWRevision
                       2723 ; rs232cmd.c  682           :SYSTem         PAL|NTSC
                       2724 ; rs232cmd.c  683           :FMSDate
                       2725 ; rs232cmd.c  684           :PRODuction     <year>,<month>,<day>
                       2726 ; rs232cmd.c  685           :UPDate         <year>,<month>,<day>
                       2727 ; rs232cmd.c  686       
                       2728 ; rs232cmd.c  687         :GENLock
                       2729 ; rs232cmd.c  688           [:DATE]         <year>,<month>,<day>
                       2730 ; rs232cmd.c  689           :VERSion
                       2731 ; rs232cmd.c  690           :FREFerence
                       2732 ; rs232cmd.c  691           [:DATE]         <year>,<month>,<day>
                       2733 ; rs232cmd.c  692           :DAC
                       2734 ; rs232cmd.c  693           :UREFerence
                       2735 ; rs232cmd.c  694           [:DATE]         <year>,<month>,<day>
                       2736 ; rs232cmd.c  695           :DAC
                       2737 ; rs232cmd.c  696           :HPHZero        <pal>,<ntsc>
                       2738 ; rs232cmd.c  697           :PHASe          <pal>,<ntsc>
                       2739 ; rs232cmd.c  698       
                       2740 ; rs232cmd.c  699         :BB 1
                       2741 ; rs232cmd.c  700           [:DATE]         <year>,<month>,<day>
                       2742 ; rs232cmd.c  701           :VERSion
                       2743 ; rs232cmd.c  702           :SIGNAL         NORMAL|F45MHZ
                       2744 ; rs232cmd.c  703           :PHASe          <pal>,<ntsc>
                       2745 ; rs232cmd.c  704           :SCHPhase       <pal>,<ntsc>
                       2746 ; rs232cmd.c  705           :DAC            <gain>,<offset>,<level>
                       2747 ; rs232cmd.c  706       
                       2748 ; rs232cmd.c  707         :BB 2-3
                       2749 ; rs232cmd.c  708           [:DATE]         <year>,<month>,<day>
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  37

ADDR   CODE            LINE SOURCELINE
                       2750 ; rs232cmd.c  709           :PHASe          <pal>,<ntsc>
                       2751 ; rs232cmd.c  710           :SCHPhase       <pal>,<ntsc>
                       2752 ; rs232cmd.c  711           :DAC            <gain>,<offset>,<level>
                       2753 ; rs232cmd.c  712       
                       2754 ; rs232cmd.c  713         :TSGenerator
                       2755 ; rs232cmd.c  714           [:DATE]         <year>,<month>,<day>
                       2756 ; rs232cmd.c  715           :AGAin          <pal>,<ntsc>
                       2757 ; rs232cmd.c  716           :CGAin          <pal>,<ntsc>
                       2758 ; rs232cmd.c  717           :PHASE          <pal>,<ntsc>
                       2759 ; rs232cmd.c  718           :SCHPhase       <pal>,<ntsc>
                       2760 ; rs232cmd.c  719       
                       2761 ; rs232cmd.c  720         :AUDio
                       2762 ; rs232cmd.c  721           [:STATus]
                       2763 ; rs232cmd.c  722           :DATE           <year>,<month>,<day>
                       2764 ; rs232cmd.c  723           :ALEVel         <left>,<right>
                       2765 ; rs232cmd.c  724       
                       2766 ; rs232cmd.c  725         :PLD
                       2767 ; rs232cmd.c  726           :VERSion        <video>,<audio>
                       2768 ; rs232cmd.c  727       
                       2769 ; rs232cmd.c  728         :TCXO
                       2770 ; rs232cmd.c  729           [:STATus]
                       2771 ; rs232cmd.c  730       
                       2772 ; rs232cmd.c  731         :MMCH             <subaddress>[,<data>]
                       2773 ; rs232cmd.c  732       
                       2774 ; rs232cmd.c  733       */                                                                      
                       2775 ; rs232cmd.c  734       
                       2776 ; rs232cmd.c  735       struct CMD_STRUCT code Factory[12] = {
000C98 rrrrrrrrrrrrrr  2777         DD      _AudioGenAESEBUClick
       rr                   
                       2780         PUBLIC  _Factory
                       2781         ALIGN   1
000C9C                 2782 _Factory:
000C9C rrrrrrrrrrrrrr  2783         DD      _PASSWORDCmdTxt,_PASSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000CA4 rrrrrrrrrrrrrr  2784         DD      _Factory+24
       rr                   
000CA8 00000000000000  2785         DD      000000000H,000000000H
       00                   
000CB0 rrrrrrrrrrrrrr  2786         DD      _FactPassword,_RESETCmdTxt,_RESCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000CBC rrrrrrrrrrrrrr  2787         DD      _Factory+48
       rr                   
000CC0 00000000000000  2788         DD      000000000H,000000000H
       00                   
000CC8 rrrrrrrrrrrrrr  2789         DD      _FactReset,_V24CIRCUITCmdTxt,_V24CCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000CD4 rrrrrrrrrrrrrr  2790         DD      _Factory+72
       rr                   
000CD8 rrrrrrrrrrrrrr  2791         DD      _FactoryLevel1
       rr                   
000CDC 00000000000000  2792         DD      000000000H,000000000H
       00                   
000CE4 rrrrrrrrrrrrrr  2793         DD      _CHECKSUMCmdTxt,_CHECCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000CEC rrrrrrrrrrrrrr  2794         DD      _Factory+96
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  38

ADDR   CODE            LINE SOURCELINE
000CF0 rrrrrrrrrrrrrr  2795         DD      _FactoryLevel9
       rr                   
000CF4 00000000000000  2796         DD      000000000H,000000000H
       00                   
000CFC rrrrrrrrrrrrrr  2797         DD      _MAINBOARDCmdTxt,_MAINCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D04 rrrrrrrrrrrrrr  2798         DD      _Factory+120
       rr                   
000D08 rrrrrrrrrrrrrr  2799         DD      _FactoryLevel2
       rr                   
000D0C 00000000000000  2800         DD      000000000H,000000000H
       00                   
000D14 rrrrrrrrrrrrrr  2801         DD      _GENLOCKCmdTxt,_GENLCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D1C rrrrrrrrrrrrrr  2802         DD      _Factory+144
       rr                   
000D20 rrrrrrrrrrrrrr  2803         DD      _FactoryLevel3
       rr                   
000D24 00000000        2804         DD      000000000H
000D28 rrrrrrrrrrrrrr  2805         DD      _FactGenlockGenDate,_BBCmdTxt,_BBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D34 rrrrrrrrrrrrrr  2806         DD      _Factory+168
       rr                   
000D38 rrrrrrrrrrrrrr  2807         DD      _FactoryLevel4,_BBGenSuffix,_FactBBGenDate
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D44 rrrrrrrrrrrrrr  2808         DD      _TSGENERATORCmdTxt,_TSGCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000D4C rrrrrrrrrrrrrr  2809         DD      _Factory+192
       rr                   
000D50 rrrrrrrrrrrrrr  2810         DD      _FactoryLevel5
       rr                   
000D54 00000000        2811         DD      000000000H
000D58 rrrrrrrrrrrrrr  2812         DD      _FactTSGenDate,_AUDIOCmdTxt,_AUDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D64 rrrrrrrrrrrrrr  2813         DD      _Factory+216
       rr                   
000D68 rrrrrrrrrrrrrr  2814         DD      _FactoryLevel6
       rr                   
000D6C 00000000        2815         DD      000000000H
000D70 rrrrrrrrrrrrrr  2816         DD      _FactAudioGenStatus,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000D7C rrrrrrrrrrrrrr  2817         DD      _Factory+240
       rr                   
000D80 rrrrrrrrrrrrrr  2818         DD      _FactoryLevel7
       rr                   
000D84 00000000        2819         DD      000000000H
000D88 rrrrrrrrrrrrrr  2820         DD      _FactPLDVersion,_TCXOCmdTxt,_TCXOCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  39

ADDR   CODE            LINE SOURCELINE
000D94 rrrrrrrrrrrrrr  2821         DD      _Factory+264
       rr                   
000D98 rrrrrrrrrrrrrr  2822         DD      _FactoryLevel8
       rr                   
000D9C 00000000        2823         DD      000000000H
000DA0 rrrrrrrrrrrrrr  2824         DD      _FactTCXOStatus,_MMCHIPCmdTxt,_MMCHCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000DAC 00000000000000  2825         DD      000000000H,000000000H,000000000H
       0000000000           
                       2826 ; rs232cmd.c  736               { PASSWORDCmdTxt,       PASSCmdTxt, &Factory[1],  NULL, NONE,    
                                    FactPassword},
                       2827 ; rs232cmd.c  737               { RESETCmdTxt,          RESCmdTxt,  &Factory[2],  NULL, NONE,    
                                    FactReset},
                       2828 ; rs232cmd.c  738               { V24CIRCUITCmdTxt,     V24CCmdTxt, &Factory[3],  &FactoryLevel1[
                            0], NONE, NONE},
                       2829 ; rs232cmd.c  739               { CHECKSUMCmdTxt,       CHECCmdTxt, &Factory[4],  &FactoryLevel9[
                            0], NONE, NONE},
                       2830 ; rs232cmd.c  740               { MAINBOARDCmdTxt,      MAINCmdTxt, &Factory[5],  &FactoryLevel2[
                            0], NONE, NONE},
                       2831 ; rs232cmd.c  741               { GENLOCKCmdTxt,                GENLCmdTxt,     &Factory[6],  &Fa
                            ctoryLevel3[0], NONE, FactGenlockGenDate},
                       2832 ; rs232cmd.c  742               { BBCmdTxt,                     BBCmdTxt,       &Factory[7],  &Fa
                            ctoryLevel4[0], BBGenSuffix, FactBBGenDate},
                       2833 ; rs232cmd.c  743               { TSGENERATORCmdTxt, TSGCmdTxt,         &Factory[8],  &FactoryLev
                            el5[0], NONE, FactTSGenDate},
                       2834 ; rs232cmd.c  744               { AUDIOCmdTxt,          AUDCmdTxt,      &Factory[9],  &FactoryLev
                            el6[0], NONE, FactAudioGenStatus},
                       2835 ; rs232cmd.c  745               { PLDCmdTxt,                    PLDCmdTxt,      &Factory[10], &Fa
                            ctoryLevel7[0], NONE,                   FactPLDVersion},
                       2836 ; rs232cmd.c  746               { TCXOCmdTxt,                   TCXOCmdTxt,     &Factory[11], &Fa
                            ctoryLevel8[0], NONE,                   FactTCXOStatus},
                       2837 ; rs232cmd.c  747               { MMCHIPCmdTxt,                 MMCHCmdTxt, NULL,                
                                     NULL,                                 NONE,                    FactMultiMediaChip},
                       2838 ; rs232cmd.c  748       };
                       2839 ; rs232cmd.c  749       
                       2840 ; rs232cmd.c  750       struct CMD_STRUCT code FactoryLevel1[2] = {
000DB8 rrrrrrrrrrrrrr  2841         DD      _FactMultiMediaChip
       rr                   
                       2844         PUBLIC  _FactoryLevel1
                       2845         ALIGN   1
000DBC                 2846 _FactoryLevel1:
000DBC rrrrrrrrrrrrrr  2847         DD      _COMMANDCmdTxt,_COMMCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DC4 rrrrrrrrrrrrrr  2848         DD      _FactoryLevel1+24
       rr                   
000DC8 00000000000000  2849         DD      000000000H,000000000H
       00                   
000DD0 rrrrrrrrrrrrrr  2850         DD      _FactV24Command,_TRANSPARENTCmdTxt,_TRANCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000DDC 00000000000000  2851         DD      000000000H,000000000H,000000000H
       0000000000           
                       2852 ; rs232cmd.c  751               { COMMANDCmdTxt, COMMCmdTxt, &FactoryLevel1[1], NULL, NONE, FactV
                            24Command},
                       2853 ; rs232cmd.c  752               { TRANSPARENTCmdTxt, TRANCmdTxt, NULL,                           
                                             NULL, NONE, FactV24Transparent},
                       2854 ; rs232cmd.c  753       };
                       2855 ; rs232cmd.c  754       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  40

ADDR   CODE            LINE SOURCELINE
                       2856 ; rs232cmd.c  755       struct CMD_STRUCT code FactoryLevel9[5] = {
000DE8 rrrrrrrrrrrrrr  2857         DD      _FactV24Transparent
       rr                   
                       2860         PUBLIC  _FactoryLevel9
                       2861         ALIGN   1
000DEC                 2862 _FactoryLevel9:
000DEC rrrrrrrrrrrrrr  2863         DD      _CODECmdTxt,_CODECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000DF4 rrrrrrrrrrrrrr  2864         DD      _FactoryLevel9+24
       rr                   
000DF8 00000000000000  2865         DD      000000000H,000000000H
       00                   
000E00 rrrrrrrrrrrrrr  2866         DD      _FactChecksumCode,_PLDCmdTxt,_PLDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E0C rrrrrrrrrrrrrr  2867         DD      _FactoryLevel9+48
       rr                   
000E10 00000000000000  2868         DD      000000000H,000000000H
       00                   
000E18 rrrrrrrrrrrrrr  2869         DD      _FactChecksumPLD,_EMBAUDIOCmdTxt,_EMBCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E24 rrrrrrrrrrrrrr  2870         DD      _FactoryLevel9+72
       rr                   
000E28 00000000000000  2871         DD      000000000H,000000000H
       00                   
000E30 rrrrrrrrrrrrrr  2872         DD      _FactChecksumEmbAudio,_PATTERNCmdTxt,_PATTCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E3C rrrrrrrrrrrrrr  2873         DD      _FactoryLevel9+96
       rr                   
000E40 00000000000000  2874         DD      000000000H,000000000H
       00                   
000E48 rrrrrrrrrrrrrr  2875         DD      _FactChecksumPattern,_RANGECmdTxt,_RANGCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E54 00000000000000  2876         DD      000000000H,000000000H,000000000H
       0000000000           
                       2877 ; rs232cmd.c  756               { CODECmdTxt,           CODECmdTxt, &FactoryLevel9[1], NULL, NONE
                            , FactChecksumCode},
                       2878 ; rs232cmd.c  757               { PLDCmdTxt,            PLDCmdTxt,  &FactoryLevel9[2], NULL, NONE
                            , FactChecksumPLD},
                       2879 ; rs232cmd.c  758               { EMBAUDIOCmdTxt, EMBCmdTxt,  &FactoryLevel9[3], NULL, NONE, Fact
                            ChecksumEmbAudio},
                       2880 ; rs232cmd.c  759               { PATTERNCmdTxt,        PATTCmdTxt, &FactoryLevel9[4], NULL, NONE
                            , FactChecksumPattern},
                       2881 ; rs232cmd.c  760               { RANGECmdTxt,  RANGCmdTxt, NULL,                                
                            NULL, NONE, FactChecksumRange},
                       2882 ; rs232cmd.c  761       };
                       2883 ; rs232cmd.c  762       
                       2884 ; rs232cmd.c  763       struct CMD_STRUCT code FactoryLevel2[4] = {
000E60 rrrrrrrrrrrrrr  2885         DD      _FactChecksumRange
       rr                   
                       2889         PUBLIC  _FactoryLevel2
                       2890         ALIGN   1
000E64                 2891 _FactoryLevel2:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  41

ADDR   CODE            LINE SOURCELINE
000E64 rrrrrrrrrrrrrr  2892         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E6C rrrrrrrrrrrrrr  2893         DD      _FactoryLevel2+24
       rr                   
000E70 00000000000000  2894         DD      000000000H,000000000H
       00                   
000E78 rrrrrrrrrrrrrr  2895         DD      _FactMainVersion,_IDNCmdTxt,_IDNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000E84 rrrrrrrrrrrrrr  2896         DD      _FactoryLevel2+48
       rr                   
000E88 rrrrrrrrrrrrrr  2897         DD      _FactoryLevel2_2
       rr                   
000E8C 00000000000000  2898         DD      000000000H,000000000H
       00                   
000E94 rrrrrrrrrrrrrr  2899         DD      _SYSTEMCmdTxt,_SYSTCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000E9C rrrrrrrrrrrrrr  2900         DD      _FactoryLevel2+72
       rr                   
000EA0 00000000000000  2901         DD      000000000H,000000000H
       00                   
000EA8 rrrrrrrrrrrrrr  2902         DD      _FactMainSystem,_FMSDATECmdTxt,_FMSDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000EB4 00000000        2903         DD      000000000H
000EB8 rrrrrrrrrrrrrr  2904         DD      _FactoryLevel2_1
       rr                   
                       2905 ; rs232cmd.c  764               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel2[1], NULL,     
                                                            NONE, FactMainVersion},
                       2906 ; rs232cmd.c  765               { IDNCmdTxt,            IDNCmdTxt,  &FactoryLevel2[2], &FactoryLe
                            vel2_2[0], NONE, NONE},
                       2907 ; rs232cmd.c  766               { SYSTEMCmdTxt,         SYSTCmdTxt, &FactoryLevel2[3], NULL,     
                                                            NONE, FactMainSystem},
                       2908 ; rs232cmd.c  767               { FMSDATECmdTxt,        FMSDCmdTxt, NULL,                        
                                    &FactoryLevel2_1[0], NONE, NONE},
                       2909 ; rs232cmd.c  768       };
                       2910 ; rs232cmd.c  769       
                       2911 ; rs232cmd.c  770       struct CMD_STRUCT code FactoryLevel2_1[2] = {
000EBC 00000000000000  2912         DD      000000000H,000000000H
       00                   
                       2915         PUBLIC  _FactoryLevel2_1
                       2916         ALIGN   1
000EC4                 2917 _FactoryLevel2_1:
000EC4 rrrrrrrrrrrrrr  2918         DD      _PRODUCTIONCmdTxt,_PRODCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000ECC rrrrrrrrrrrrrr  2919         DD      _FactoryLevel2_1+24
       rr                   
000ED0 00000000000000  2920         DD      000000000H,000000000H
       00                   
000ED8 rrrrrrrrrrrrrr  2921         DD      _FactMainFMSDateProd,_UPDATECmdTxt,_UPDCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000EE4 00000000000000  2922         DD      000000000H,000000000H,000000000H
       0000000000           
                       2923 ; rs232cmd.c  771               { PRODUCTIONCmdTxt, PRODCmdTxt, &FactoryLevel2_1[1], NULL, NONE, 
                            FactMainFMSDateProd},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  42

ADDR   CODE            LINE SOURCELINE
                       2924 ; rs232cmd.c  772               { UPDATECmdTxt,           UPDCmdTxt,  NULL,                      
                                             NULL, NONE, FactMainFMSDateUpd},
                       2925 ; rs232cmd.c  773       };
                       2926 ; rs232cmd.c  774       
                       2927 ; rs232cmd.c  775       struct CMD_STRUCT code FactoryLevel2_2[4] = {
000EF0 rrrrrrrrrrrrrr  2928         DD      _FactMainFMSDateUpd
       rr                   
                       2931         PUBLIC  _FactoryLevel2_2
                       2932         ALIGN   1
000EF4                 2933 _FactoryLevel2_2:
000EF4 rrrrrrrrrrrrrr  2934         DD      _COMPANYCmdTxt,_COMPCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000EFC rrrrrrrrrrrrrr  2935         DD      _FactoryLevel2_2+24
       rr                   
000F00 00000000000000  2936         DD      000000000H,000000000H
       00                   
000F08 rrrrrrrrrrrrrr  2937         DD      _FactMainIDNCompany,_TYPECmdTxt,_TYPECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F14 rrrrrrrrrrrrrr  2938         DD      _FactoryLevel2_2+48
       rr                   
000F18 00000000000000  2939         DD      000000000H,000000000H
       00                   
000F20 rrrrrrrrrrrrrr  2940         DD      _FactMainIDNType,_KUNUMBERCmdTxt,_KUNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F2C rrrrrrrrrrrrrr  2941         DD      _FactoryLevel2_2+72
       rr                   
000F30 00000000000000  2942         DD      000000000H,000000000H
       00                   
000F38 rrrrrrrrrrrrrr  2943         DD      _FactMainIDNKUNumber,_SWREVISIONCmdTxt,_SWRCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F44 00000000000000  2944         DD      000000000H,000000000H,000000000H
       0000000000           
                       2945 ; rs232cmd.c  776               { COMPANYCmdTxt,    COMPCmdTxt, &FactoryLevel2_2[1], NULL, NONE, 
                            FactMainIDNCompany},
                       2946 ; rs232cmd.c  777               { TYPECmdTxt,     TYPECmdTxt, &FactoryLevel2_2[2], NULL, NONE, Fa
                            ctMainIDNType},
                       2947 ; rs232cmd.c  778               { KUNUMBERCmdTxt,   KUNCmdTxt,  &FactoryLevel2_2[3], NULL, NONE, 
                            FactMainIDNKUNumber},
                       2948 ; rs232cmd.c  779               { SWREVISIONCmdTxt, SWRCmdTxt,  NULL,                            
                                     NULL, NONE, FactMainIDNSWRevision},
                       2949 ; rs232cmd.c  780       };
                       2950 ; rs232cmd.c  781       
                       2951 ; rs232cmd.c  782       
                       2952 ; rs232cmd.c  783       // JK
                       2953 ; rs232cmd.c  784       struct CMD_STRUCT code FactoryLevel3[7] =
000F50 rrrrrrrrrrrrrr  2954         DD      _FactMainIDNSWRevision
       rr                   
                       2957         PUBLIC  _FactoryLevel3
                       2958         ALIGN   1
000F54                 2959 _FactoryLevel3:
000F54 rrrrrrrrrrrrrr  2960         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
000F5C rrrrrrrrrrrrrr  2961         DD      _FactoryLevel3+24
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  43

ADDR   CODE            LINE SOURCELINE
000F60 00000000000000  2962         DD      000000000H,000000000H
       00                   
000F68 rrrrrrrrrrrrrr  2963         DD      _FactGenlockGenDate,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F74 rrrrrrrrrrrrrr  2964         DD      _FactoryLevel3+48
       rr                   
000F78 00000000000000  2965         DD      000000000H,000000000H
       00                   
000F80 rrrrrrrrrrrrrr  2966         DD      _FactGenlockGenVersion,_FREFERENCECmdTxt,_FREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000F8C rrrrrrrrrrrrrr  2967         DD      _FactoryLevel3+72
       rr                   
000F90 rrrrrrrrrrrrrr  2968         DD      _FactoryLevel3_1
       rr                   
000F94 00000000        2969         DD      000000000H
000F98 rrrrrrrrrrrrrr  2970         DD      _FactGenlockGenFRefDate,_UREFERENCECmdTxt,_UREFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FA4 rrrrrrrrrrrrrr  2971         DD      _FactoryLevel3+96
       rr                   
000FA8 rrrrrrrrrrrrrr  2972         DD      _FactoryLevel3_2
       rr                   
000FAC 00000000        2973         DD      000000000H
000FB0 rrrrrrrrrrrrrr  2974         DD      _FactGenlockGenURefDate,_HPHZEROCmdTxt,_HPHZCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FBC rrrrrrrrrrrrrr  2975         DD      _FactoryLevel3+120
       rr                   
000FC0 00000000000000  2976         DD      000000000H,000000000H
       00                   
000FC8 rrrrrrrrrrrrrr  2977         DD      _FactGenlockGenHPHZero,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FD4 rrrrrrrrrrrrrr  2978         DD      _FactoryLevel3+144
       rr                   
000FD8 00000000000000  2979         DD      000000000H,000000000H
       00                   
000FE0 rrrrrrrrrrrrrr  2980         DD      _FactGenlockGenPhase,_UDACOFFSETCmdTxt,_UDACOFFCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
000FEC 00000000000000  2981         DD      000000000H,000000000H,000000000H
       0000000000           
                       2982 ; rs232cmd.c  785         {
                       2983 ; rs232cmd.c  786         { DATECmdTxt,       DATECmdTxt, &FactoryLevel3[1], NULL,               
                             NONE, FactGenlockGenDate},
                       2984 ; rs232cmd.c  787         { VERSIONCmdTxt,    VERSCmdTxt, &FactoryLevel3[2], NULL,               
                             NONE, FactGenlockGenVersion},
                       2985 ; rs232cmd.c  788         { FREFERENCECmdTxt, FREFCmdTxt, &FactoryLevel3[3], &FactoryLevel3_1[0],
                             NONE, FactGenlockGenFRefDate},
                       2986 ; rs232cmd.c  789         { UREFERENCECmdTxt, UREFCmdTxt, &FactoryLevel3[4], &FactoryLevel3_2[0],
                             NONE, FactGenlockGenURefDate},
                       2987 ; rs232cmd.c  790         { HPHZEROCmdTxt,    HPHZCmdTxt, &FactoryLevel3[5], NULL,               
                             NONE, FactGenlockGenHPHZero},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  44

ADDR   CODE            LINE SOURCELINE
                       2988 ; rs232cmd.c  791         { PHASECmdTxt,      PHASCmdTxt, &FactoryLevel3[6], NULL,               
                             NONE, FactGenlockGenPhase},
                       2989 ; rs232cmd.c  792         { UDACOFFSETCmdTxt, UDACOFFCmdTxt, NULL,           NULL,               
                             NONE, FactGenlockGenUOffDAC},
                       2990 ; rs232cmd.c  793       };
                       2991 ; rs232cmd.c  794       
                       2992 ; rs232cmd.c  795       struct CMD_STRUCT code FactoryLevel3_1[2] = {
000FF8 rrrrrrrrrrrrrr  2993         DD      _FactGenlockGenUOffDAC
       rr                   
                       2996         PUBLIC  _FactoryLevel3_1
                       2997         ALIGN   1
000FFC                 2998 _FactoryLevel3_1:
000FFC rrrrrrrrrrrrrr  2999         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001004 rrrrrrrrrrrrrr  3000         DD      _FactoryLevel3_1+24
       rr                   
001008 00000000000000  3001         DD      000000000H,000000000H
       00                   
001010 rrrrrrrrrrrrrr  3002         DD      _FactGenlockGenFRefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00101C 00000000000000  3003         DD      000000000H,000000000H,000000000H
       0000000000           
                       3004 ; rs232cmd.c  796               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_1[1], NULL, NONE, FactGe
                            nlockGenFRefDate},
                       3005 ; rs232cmd.c  797               { DACCmdTxt,  DACCmdTxt,  NULL, NULL, NONE, FactGenlockGenFRefDAC
                            },
                       3006 ; rs232cmd.c  798       };
                       3007 ; rs232cmd.c  799       
                       3008 ; rs232cmd.c  800       struct CMD_STRUCT code FactoryLevel3_2[2] = {
001028 rrrrrrrrrrrrrr  3009         DD      _FactGenlockGenFRefDAC
       rr                   
                       3012         PUBLIC  _FactoryLevel3_2
                       3013         ALIGN   1
00102C                 3014 _FactoryLevel3_2:
00102C rrrrrrrrrrrrrr  3015         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001034 rrrrrrrrrrrrrr  3016         DD      _FactoryLevel3_2+24
       rr                   
001038 00000000000000  3017         DD      000000000H,000000000H
       00                   
001040 rrrrrrrrrrrrrr  3018         DD      _FactGenlockGenURefDate,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00104C 00000000000000  3019         DD      000000000H,000000000H,000000000H
       0000000000           
                       3020 ; rs232cmd.c  801               { DATECmdTxt, DATECmdTxt, &FactoryLevel3_2[1], NULL, NONE, FactGe
                            nlockGenURefDate},
                       3021 ; rs232cmd.c  802               { DACCmdTxt,  DACCmdTxt,  NULL, NULL, NONE, FactGenlockGenURefDAC
                            },
                       3022 ; rs232cmd.c  803       };
                       3023 ; rs232cmd.c  804       
                       3024 ; rs232cmd.c  805       struct CMD_STRUCT code FactoryLevel4[6] = {
001058 rrrrrrrrrrrrrr  3025         DD      _FactGenlockGenURefDAC
       rr                   
                       3028         PUBLIC  _FactoryLevel4
                       3029         ALIGN   1
00105C                 3030 _FactoryLevel4:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  45

ADDR   CODE            LINE SOURCELINE
00105C rrrrrrrrrrrrrr  3031         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001064 rrrrrrrrrrrrrr  3032         DD      _FactoryLevel4+24
       rr                   
001068 00000000000000  3033         DD      000000000H,000000000H
       00                   
001070 rrrrrrrrrrrrrr  3034         DD      _FactBBGenDate,_VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00107C rrrrrrrrrrrrrr  3035         DD      _FactoryLevel4+48
       rr                   
001080 00000000000000  3036         DD      000000000H,000000000H
       00                   
001088 rrrrrrrrrrrrrr  3037         DD      _FactBBGenVersion,_SIGNALCmdTxt,_SIGNCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001094 rrrrrrrrrrrrrr  3038         DD      _FactoryLevel4+72
       rr                   
001098 00000000000000  3039         DD      000000000H,000000000H
       00                   
0010A0 rrrrrrrrrrrrrr  3040         DD      _FactBBGenSignal,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010AC rrrrrrrrrrrrrr  3041         DD      _FactoryLevel4+96
       rr                   
0010B0 00000000000000  3042         DD      000000000H,000000000H
       00                   
0010B8 rrrrrrrrrrrrrr  3043         DD      _FactBBGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010C4 rrrrrrrrrrrrrr  3044         DD      _FactoryLevel4+120
       rr                   
0010C8 00000000000000  3045         DD      000000000H,000000000H
       00                   
0010D0 rrrrrrrrrrrrrr  3046         DD      _FactBBGenScHPhase,_DACCmdTxt,_DACCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
0010DC 00000000000000  3047         DD      000000000H,000000000H,000000000H
       0000000000           
                       3048 ; rs232cmd.c  806               { DATECmdTxt,   DATECmdTxt, &FactoryLevel4[1], NULL, NONE, FactBB
                            GenDate},
                       3049 ; rs232cmd.c  807               { VERSIONCmdTxt,        VERSCmdTxt, &FactoryLevel4[2], NULL, NONE
                            , FactBBGenVersion},
                       3050 ; rs232cmd.c  808               { SIGNALCmdTxt,         SIGNCmdTxt, &FactoryLevel4[3], NULL, NONE
                            , FactBBGenSignal},
                       3051 ; rs232cmd.c  809               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel4[4], NULL, NONE, FactBB
                            GenPhase},
                       3052 ; rs232cmd.c  810               { SCHPHASECmdTxt,       SCHPCmdTxt, &FactoryLevel4[5], NULL, NONE
                            , FactBBGenScHPhase},
                       3053 ; rs232cmd.c  811               { DACCmdTxt,            DACCmdTxt,  NULL,                        
                                    NULL, NONE, FactBBGenDAC},
                       3054 ; rs232cmd.c  812       };
                       3055 ; rs232cmd.c  813       
                       3056 ; rs232cmd.c  814       struct CMD_STRUCT code FactoryLevel5[5] = {
0010E8 rrrrrrrrrrrrrr  3057         DD      _FactBBGenDAC
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  46

ADDR   CODE            LINE SOURCELINE
                       3060         PUBLIC  _FactoryLevel5
                       3061         ALIGN   1
0010EC                 3062 _FactoryLevel5:
0010EC rrrrrrrrrrrrrr  3063         DD      _DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0010F4 rrrrrrrrrrrrrr  3064         DD      _FactoryLevel5+24
       rr                   
0010F8 00000000000000  3065         DD      000000000H,000000000H
       00                   
001100 rrrrrrrrrrrrrr  3066         DD      _FactTSGenDate,_AGAINCmdTxt,_AGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00110C rrrrrrrrrrrrrr  3067         DD      _FactoryLevel5+48
       rr                   
001110 00000000000000  3068         DD      000000000H,000000000H
       00                   
001118 rrrrrrrrrrrrrr  3069         DD      _FactTSGenAGain,_CGAINCmdTxt,_CGACmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001124 rrrrrrrrrrrrrr  3070         DD      _FactoryLevel5+72
       rr                   
001128 00000000000000  3071         DD      000000000H,000000000H
       00                   
001130 rrrrrrrrrrrrrr  3072         DD      _FactTSGenCGain,_PHASECmdTxt,_PHASCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00113C rrrrrrrrrrrrrr  3073         DD      _FactoryLevel5+96
       rr                   
001140 00000000000000  3074         DD      000000000H,000000000H
       00                   
001148 rrrrrrrrrrrrrr  3075         DD      _FactTSGenPhase,_SCHPHASECmdTxt,_SCHPCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001154 00000000000000  3076         DD      000000000H,000000000H,000000000H
       0000000000           
                       3077 ; rs232cmd.c  815               { DATECmdTxt,   DATECmdTxt, &FactoryLevel5[1], NULL, NONE, FactTS
                            GenDate},
                       3078 ; rs232cmd.c  816               { AGAINCmdTxt,  AGACmdTxt,      &FactoryLevel5[2], NULL, NONE, Fa
                            ctTSGenAGain},
                       3079 ; rs232cmd.c  817               { CGAINCmdTxt,  CGACmdTxt,      &FactoryLevel5[3], NULL, NONE, Fa
                            ctTSGenCGain},
                       3080 ; rs232cmd.c  818               { PHASECmdTxt,  PHASCmdTxt, &FactoryLevel5[4], NULL, NONE, FactTS
                            GenPhase},
                       3081 ; rs232cmd.c  819               { SCHPHASECmdTxt,       SCHPCmdTxt, NULL,                        
                                    NULL, NONE, FactTSGenScHPhase},
                       3082 ; rs232cmd.c  820       };
                       3083 ; rs232cmd.c  821       
                       3084 ; rs232cmd.c  822       struct CMD_STRUCT code FactoryLevel6[3] = {
001160 rrrrrrrrrrrrrr  3085         DD      _FactTSGenScHPhase
       rr                   
                       3088         PUBLIC  _FactoryLevel6
                       3089         ALIGN   1
001164                 3090 _FactoryLevel6:
001164 rrrrrrrrrrrrrr  3091         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  47

ADDR   CODE            LINE SOURCELINE
00116C rrrrrrrrrrrrrr  3092         DD      _FactoryLevel6+24
       rr                   
001170 00000000000000  3093         DD      000000000H,000000000H
       00                   
001178 rrrrrrrrrrrrrr  3094         DD      _FactAudioGenStatus,_DATECmdTxt,_DATECmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
001184 rrrrrrrrrrrrrr  3095         DD      _FactoryLevel6+48
       rr                   
001188 00000000000000  3096         DD      000000000H,000000000H
       00                   
001190 rrrrrrrrrrrrrr  3097         DD      _FactAudioGenDate,_ALEVELCmdTxt,_ALEVCmdTxt
       rrrrrrrrrrrrrr       
       rrrrrrrrrrrrrr       
       rrrrrr               
00119C 00000000000000  3098         DD      000000000H,000000000H,000000000H
       0000000000           
                       3099 ; rs232cmd.c  823               { STATUSCmdTxt, STATCmdTxt, &FactoryLevel6[1], NULL, NONE, FactAu
                            dioGenStatus},
                       3100 ; rs232cmd.c  824               { DATECmdTxt,   DATECmdTxt, &FactoryLevel6[2], NULL, NONE, FactAu
                            dioGenDate},
                       3101 ; rs232cmd.c  825               { ALEVELCmdTxt, ALEVCmdTxt, NULL,                                
                             NULL, NONE, FactAudioGenLevel},
                       3102 ; rs232cmd.c  826       };
                       3103 ; rs232cmd.c  827       
                       3104 ; rs232cmd.c  828       struct CMD_STRUCT code FactoryLevel7[1] = {
0011A8 rrrrrrrrrrrrrr  3105         DD      _FactAudioGenLevel
       rr                   
                       3108         PUBLIC  _FactoryLevel7
                       3109         ALIGN   1
0011AC                 3110 _FactoryLevel7:
0011AC rrrrrrrrrrrrrr  3111         DD      _VERSIONCmdTxt,_VERSCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011B4 00000000000000  3112         DD      000000000H,000000000H,000000000H
       0000000000           
                       3113 ; rs232cmd.c  829               { VERSIONCmdTxt,        VERSCmdTxt, NULL, NULL, NONE, FactPLDVers
                            ion},
                       3114 ; rs232cmd.c  830       };
                       3115 ; rs232cmd.c  831       
                       3116 ; rs232cmd.c  832       struct CMD_STRUCT code FactoryLevel8[1] = {
0011C0 rrrrrrrrrrrrrr  3117         DD      _FactPLDVersion
       rr                   
                       3120         PUBLIC  _FactoryLevel8
                       3121         ALIGN   1
0011C4                 3122 _FactoryLevel8:
0011C4 rrrrrrrrrrrrrr  3123         DD      _STATUSCmdTxt,_STATCmdTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011CC 00000000000000  3124         DD      000000000H,000000000H,000000000H
       0000000000           
                       3125 ; rs232cmd.c  833               { STATUSCmdTxt, STATCmdTxt, NULL, NULL, NONE, FactTCXOStatus},
                       3126 ; rs232cmd.c  834       };
                       3127 ; rs232cmd.c  835       
                       3128 ; rs232cmd.c  836       //***********************************************************************
                            ***
                       3129 ; rs232cmd.c  837       // The following parameter structures are based on the enumerated types
                       3130 ; rs232cmd.c  838       //  defined in TABLES.H, ie. DO NOT change the order of these names. If
                       3131 ; rs232cmd.c  839       //  the order is changed in TABLES.H it must also be changed here.
                       3132 ; rs232cmd.c  840       
                       3133 ; rs232cmd.c  841       struct PAR_STRUCT code SAVEPar[1] = {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  48

ADDR   CODE            LINE SOURCELINE
0011D8 rrrrrrrrrrrrrr  3134         DD      _FactTCXOStatus
       rr                   
                       3144         PUBLIC  _SAVEPar
                       3145         ALIGN   1
0011DC                 3146 _SAVEPar:
0011DC rrrrrrrrrrrrrr  3147         DD      _SAVEParTxt,_SAVEParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3148 ; rs232cmd.c  842               { SAVEParTxt, SAVEParTxt, NULL}
                       3149 ; rs232cmd.c  843       };
                       3150 ; rs232cmd.c  844       
                       3151 ; rs232cmd.c  845       struct PAR_STRUCT code GenlockSystemPar[4] = {
0011E4 00000000        3152         DD      000000000H
                       3156         PUBLIC  _GenlockSystemPar
                       3157         ALIGN   1
0011E8                 3158 _GenlockSystemPar:
0011E8 rrrrrrrrrrrrrr  3159         DD      _INTERNALParTxt,_INTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011F0 rrrrrrrrrrrrrr  3160         DD      _GenlockSystemPar+12
       rr                   
0011F4 rrrrrrrrrrrrrr  3161         DD      _PALBURSTParTxt,_PALBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0011FC rrrrrrrrrrrrrr  3162         DD      _GenlockSystemPar+24
       rr                   
001200 rrrrrrrrrrrrrr  3163         DD      _NTSCBURSTParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001208 rrrrrrrrrrrrrr  3164         DD      _GenlockSystemPar+36
       rr                   
00120C rrrrrrrrrrrrrr  3165         DD      _F10MHzParTxt,_F10MHzParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3166 ; rs232cmd.c  846               { INTERNALParTxt,  INTParTxt,   &GenlockSystemPar[1]},
                       3167 ; rs232cmd.c  847               { PALBURSTParTxt,  PALBParTxt,  &GenlockSystemPar[2]},
                       3168 ; rs232cmd.c  848               { NTSCBURSTParTxt, NTSCParTxt,  &GenlockSystemPar[3]},
                       3169 ; rs232cmd.c  849               { F10MHzParTxt,          F10MHzParTxt, NULL},
                       3170 ; rs232cmd.c  850       };
                       3171 ; rs232cmd.c  851       
                       3172 ; rs232cmd.c  852       struct PAR_STRUCT code SystemPar[4] = {
001214 00000000        3173         DD      000000000H
                       3176         PUBLIC  _SystemPar
                       3177         ALIGN   1
001218                 3178 _SystemPar:
001218 rrrrrrrrrrrrrr  3179         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001220 rrrrrrrrrrrrrr  3180         DD      _SystemPar+12
       rr                   
001224 rrrrrrrrrrrrrr  3181         DD      _PAL_IDParTxt,_PAL_IDParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00122C rrrrrrrrrrrrrr  3182         DD      _SystemPar+24
       rr                   
001230 rrrrrrrrrrrrrr  3183         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001238 rrrrrrrrrrrrrr  3184         DD      _SystemPar+36
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  49

ADDR   CODE            LINE SOURCELINE
00123C rrrrrrrrrrrrrr  3185         DD      _JNTSCParTxt,_JNTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3186 ; rs232cmd.c  853               { PALParTxt,     PALParTxt, &SystemPar[1]},
                       3187 ; rs232cmd.c  854               { PAL_IDParTxt, PAL_IDParTxt, &SystemPar[2]},
                       3188 ; rs232cmd.c  855               { NTSCParTxt,    NTSCParTxt, &SystemPar[3]},
                       3189 ; rs232cmd.c  856               { JNTSCParTxt,  JNTSCParTxt,     NULL},
                       3190 ; rs232cmd.c  857       };
                       3191 ; rs232cmd.c  858       
                       3192 ; rs232cmd.c  859       struct PAR_STRUCT code CBPatternPar[23] = {
001244 00000000        3193         DD      000000000H
                       3197         PUBLIC  _CBPatternPar
                       3198         ALIGN   1
001248                 3199 _CBPatternPar:
001248 rrrrrrrrrrrrrr  3200         DD      _CBSMPTEParTxt,_CBSMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001250 rrrrrrrrrrrrrr  3201         DD      _CBPatternPar+12
       rr                   
001254 rrrrrrrrrrrrrr  3202         DD      _CBEBUParTxt,_CBEBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00125C rrrrrrrrrrrrrr  3203         DD      _CBPatternPar+24
       rr                   
001260 rrrrrrrrrrrrrr  3204         DD      _CBFCCParTxt,_CBFCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001268 rrrrrrrrrrrrrr  3205         DD      _CBPatternPar+36
       rr                   
00126C rrrrrrrrrrrrrr  3206         DD      _CBEBU8ParTxt,_CBEB8ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001274 rrrrrrrrrrrrrr  3207         DD      _CBPatternPar+48
       rr                   
001278 rrrrrrrrrrrrrr  3208         DD      _CB100ParTxt,_CB100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001280 rrrrrrrrrrrrrr  3209         DD      _CBPatternPar+60
       rr                   
001284 rrrrrrrrrrrrrr  3210         DD      _CBGREY75ParTxt,_CBGR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00128C rrrrrrrrrrrrrr  3211         DD      _CBPatternPar+72
       rr                   
001290 rrrrrrrrrrrrrr  3212         DD      _CBRED75ParTxt,_CBR75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001298 rrrrrrrrrrrrrr  3213         DD      _CBPatternPar+84
       rr                   
00129C rrrrrrrrrrrrrr  3214         DD      _RED75ParTxt,_RED75ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012A4 rrrrrrrrrrrrrr  3215         DD      _CBPatternPar+96
       rr                   
0012A8 rrrrrrrrrrrrrr  3216         DD      _MULTIBURSTParTxt,_MULTParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012B0 rrrrrrrrrrrrrr  3217         DD      _CBPatternPar+108
       rr                   
0012B4 rrrrrrrrrrrrrr  3218         DD      _CCIR18ParTxt,_CCIR18ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  50

ADDR   CODE            LINE SOURCELINE
0012BC rrrrrrrrrrrrrr  3219         DD      _CBPatternPar+120
       rr                   
0012C0 rrrrrrrrrrrrrr  3220         DD      _WIN10ParTxt,_WIN10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012C8 rrrrrrrrrrrrrr  3221         DD      _CBPatternPar+132
       rr                   
0012CC rrrrrrrrrrrrrr  3222         DD      _WIN15ParTxt,_WIN15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012D4 rrrrrrrrrrrrrr  3223         DD      _CBPatternPar+144
       rr                   
0012D8 rrrrrrrrrrrrrr  3224         DD      _WIN20ParTxt,_WIN20ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012E0 rrrrrrrrrrrrrr  3225         DD      _CBPatternPar+156
       rr                   
0012E4 rrrrrrrrrrrrrr  3226         DD      _WIN100ParTxt,_WIN100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012EC rrrrrrrrrrrrrr  3227         DD      _CBPatternPar+168
       rr                   
0012F0 rrrrrrrrrrrrrr  3228         DD      _BLWH15ParTxt,_BLWH15ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0012F8 rrrrrrrrrrrrrr  3229         DD      _CBPatternPar+180
       rr                   
0012FC rrrrrrrrrrrrrr  3230         DD      _WHITE100ParTxt,_WHIT100ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001304 rrrrrrrrrrrrrr  3231         DD      _CBPatternPar+192
       rr                   
001308 rrrrrrrrrrrrrr  3232         DD      _BLACKParTxt,_BLACParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001310 rrrrrrrrrrrrrr  3233         DD      _CBPatternPar+204
       rr                   
001314 rrrrrrrrrrrrrr  3234         DD      _SDICHECKParTxt,_SDICParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00131C rrrrrrrrrrrrrr  3235         DD      _CBPatternPar+216
       rr                   
001320 rrrrrrrrrrrrrr  3236         DD      _DGREYParTxt,_DGRParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001328 rrrrrrrrrrrrrr  3237         DD      _CBPatternPar+228
       rr                   
00132C rrrrrrrrrrrrrr  3238         DD      _STAIRCASE5ParTxt,_STA5ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001334 rrrrrrrrrrrrrr  3239         DD      _CBPatternPar+240
       rr                   
001338 rrrrrrrrrrrrrr  3240         DD      _STAIRCASE10ParTxt,_STA10ParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001340 rrrrrrrrrrrrrr  3241         DD      _CBPatternPar+252
       rr                   
001344 rrrrrrrrrrrrrr  3242         DD      _CROSSHATCHParTxt,_CROSParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
00134C rrrrrrrrrrrrrr  3243         DD      _CBPatternPar+264
       rr                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  51

ADDR   CODE            LINE SOURCELINE
001350 rrrrrrrrrrrrrr  3244         DD      _PLUGEParTxt,_PLUGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3245 ; rs232cmd.c  860               { CBSMPTEParTxt,                CBSMParTxt,     &CBPatternPar[1]}
                            ,
                       3246 ; rs232cmd.c  861               { CBEBUParTxt,          CBEBParTxt,     &CBPatternPar[2]},
                       3247 ; rs232cmd.c  862               { CBFCCParTxt,          CBFCParTxt,     &CBPatternPar[3]},
                       3248 ; rs232cmd.c  863               { CBEBU8ParTxt,                 CBEB8ParTxt,    &CBPatternPar[4]}
                            ,
                       3249 ; rs232cmd.c  864               { CB100ParTxt,          CB100ParTxt,    &CBPatternPar[5]},
                       3250 ; rs232cmd.c  865               { CBGREY75ParTxt,       CBGR75ParTxt,   &CBPatternPar[6]},
                       3251 ; rs232cmd.c  866               { CBRED75ParTxt,                CBR75ParTxt,    &CBPatternPar[7]}
                            ,
                       3252 ; rs232cmd.c  867               { RED75ParTxt,          RED75ParTxt,    &CBPatternPar[8]},
                       3253 ; rs232cmd.c  868       
                       3254 ; rs232cmd.c  869               { MULTIBURSTParTxt,     MULTParTxt,     &CBPatternPar[9]},
                       3255 ; rs232cmd.c  870               { CCIR18ParTxt,         CCIR18ParTxt,   &CBPatternPar[10]},
                       3256 ; rs232cmd.c  871                                                                                
                                                                                                           
                       3257 ; rs232cmd.c  872               { WIN10ParTxt,          WIN10ParTxt,    &CBPatternPar[11]},
                       3258 ; rs232cmd.c  873               { WIN15ParTxt,          WIN15ParTxt,    &CBPatternPar[12]},
                       3259 ; rs232cmd.c  874               { WIN20ParTxt,          WIN20ParTxt,    &CBPatternPar[13]},
                       3260 ; rs232cmd.c  875               { WIN100ParTxt,                 WIN100ParTxt,   &CBPatternPar[14]
                            },
                       3261 ; rs232cmd.c  876               { BLWH15ParTxt,                 BLWH15ParTxt,   &CBPatternPar[15]
                            },
                       3262 ; rs232cmd.c  877               { WHITE100ParTxt,       WHIT100ParTxt, &CBPatternPar[16]},
                       3263 ; rs232cmd.c  878               { BLACKParTxt,          BLACParTxt,     &CBPatternPar[17]},
                       3264 ; rs232cmd.c  879       
                       3265 ; rs232cmd.c  880               { SDICHECKParTxt,       SDICParTxt,     &CBPatternPar[18]},
                       3266 ; rs232cmd.c  881               { DGREYParTxt,          DGRParTxt,              &CBPatternPar[19]
                            },
                       3267 ; rs232cmd.c  882       
                       3268 ; rs232cmd.c  883               { STAIRCASE5ParTxt,     STA5ParTxt,     &CBPatternPar[20]},
                       3269 ; rs232cmd.c  884               { STAIRCASE10ParTxt, STA10ParTxt,       &CBPatternPar[21]},
                       3270 ; rs232cmd.c  885       
                       3271 ; rs232cmd.c  886               { CROSSHATCHParTxt,     CROSParTxt,     &CBPatternPar[22]},
                       3272 ; rs232cmd.c  887               { PLUGEParTxt,          PLUGParTxt,     NULL},
                       3273 ; rs232cmd.c  888       };
                       3274 ; rs232cmd.c  889       
                       3275 ; rs232cmd.c  890       struct PAR_STRUCT code EmbAudioSignalPar[3] = {
001358 00000000        3276         DD      000000000H
                       3280         PUBLIC  _EmbAudioSignalPar
                       3281         ALIGN   1
00135C                 3282 _EmbAudioSignalPar:
00135C rrrrrrrrrrrrrr  3283         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001364 rrrrrrrrrrrrrr  3284         DD      _EmbAudioSignalPar+12
       rr                   
001368 rrrrrrrrrrrrrr  3285         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001370 rrrrrrrrrrrrrr  3286         DD      _EmbAudioSignalPar+24
       rr                   
001374 rrrrrrrrrrrrrr  3287         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3288 ; rs232cmd.c  891               { OFFParTxt,            OFFParTxt,              &EmbAudioSignalPa
                            r[1]},
                       3289 ; rs232cmd.c  892               { SILENCEParTxt,        SILParTxt,              &EmbAudioSignalPa
                            r[2]},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  52

ADDR   CODE            LINE SOURCELINE
                       3290 ; rs232cmd.c  893               { S1KHZParTxt,          S1KHZParTxt,    NULL},
                       3291 ; rs232cmd.c  894       };
                       3292 ; rs232cmd.c  895       
                       3293 ; rs232cmd.c  896       struct PAR_STRUCT code AudioOutputPar[2] = {
00137C 00000000        3294         DD      000000000H
                       3298         PUBLIC  _AudioOutputPar
                       3299         ALIGN   1
001380                 3300 _AudioOutputPar:
001380 rrrrrrrrrrrrrr  3301         DD      _ANALOGParTxt,_ANALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001388 rrrrrrrrrrrrrr  3302         DD      _AudioOutputPar+12
       rr                   
00138C rrrrrrrrrrrrrr  3303         DD      _AESEBUParTxt,_AESParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3304 ; rs232cmd.c  897               { ANALOGParTxt, ANALParTxt, &AudioOutputPar[1]},
                       3305 ; rs232cmd.c  898               { AESEBUParTxt, AESParTxt,  NULL},
                       3306 ; rs232cmd.c  899       };
                       3307 ; rs232cmd.c  900       
                       3308 ; rs232cmd.c  901       struct PAR_STRUCT code AESEBUSystemPar[2] = {
001394 00000000        3309         DD      000000000H
                       3312         PUBLIC  _AESEBUSystemPar
                       3313         ALIGN   1
001398                 3314 _AESEBUSystemPar:
001398 rrrrrrrrrrrrrr  3315         DD      _PALParTxt,_PALParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013A0 rrrrrrrrrrrrrr  3316         DD      _AESEBUSystemPar+12
       rr                   
0013A4 rrrrrrrrrrrrrr  3317         DD      _NTSCParTxt,_NTSCParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3318 ; rs232cmd.c  902               { PALParTxt,  PALParTxt,  &AESEBUSystemPar[1]},
                       3319 ; rs232cmd.c  903               { NTSCParTxt, NTSCParTxt, NULL},
                       3320 ; rs232cmd.c  904       };
                       3321 ; rs232cmd.c  905       
                       3322 ; rs232cmd.c  906       struct PAR_STRUCT code AudioSignalPar[4] = {
0013AC 00000000        3323         DD      000000000H
                       3326         PUBLIC  _AudioSignalPar
                       3327         ALIGN   1
0013B0                 3328 _AudioSignalPar:
0013B0 rrrrrrrrrrrrrr  3329         DD      _S500HZParTxt,_S500HZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013B8 rrrrrrrrrrrrrr  3330         DD      _AudioSignalPar+12
       rr                   
0013BC rrrrrrrrrrrrrr  3331         DD      _S1KHZParTxt,_S1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013C4 rrrrrrrrrrrrrr  3332         DD      _AudioSignalPar+24
       rr                   
0013C8 rrrrrrrrrrrrrr  3333         DD      _SEBU1KHZParTxt,_SEBU1KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
0013D0 rrrrrrrrrrrrrr  3334         DD      _AudioSignalPar+36
       rr                   
0013D4 rrrrrrrrrrrrrr  3335         DD      _S8KHZParTxt,_S8KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3336 ; rs232cmd.c  907               { S500HZParTxt,         S500HZParTxt,    &AudioSignalPar[1]},
                       3337 ; rs232cmd.c  908               { S1KHZParTxt,  S1KHZParTxt,     &AudioSignalPar[2]},
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  53

ADDR   CODE            LINE SOURCELINE
                       3338 ; rs232cmd.c  909               { SEBU1KHZParTxt, SEBU1KHZParTxt, &AudioSignalPar[3]},
                       3339 ; rs232cmd.c  910               { S8KHZParTxt,  S8KHZParTxt,     NULL},
                       3340 ; rs232cmd.c  911       };
                       3341 ; rs232cmd.c  912       
                       3342 ; rs232cmd.c  913       struct PAR_STRUCT code AnalogLevelPar[1] = {
0013DC 00000000        3343         DD      000000000H
                       3346         PUBLIC  _AnalogLevelPar
                       3347         ALIGN   1
0013E0                 3348 _AnalogLevelPar:
0013E0 rrrrrrrrrrrrrr  3349         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3350 ; rs232cmd.c  914               { SILENCEParTxt, SILParTxt, NULL},
                       3351 ; rs232cmd.c  915       };
                       3352 ; rs232cmd.c  916       
                       3353 ; rs232cmd.c  917       struct PAR_STRUCT code AESEBULevelPar[1] = {
0013E8 00000000        3354         DD      000000000H
                       3357         PUBLIC  _AESEBULevelPar
                       3358         ALIGN   1
0013EC                 3359 _AESEBULevelPar:
0013EC rrrrrrrrrrrrrr  3360         DD      _SILENCEParTxt,_SILParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3361 ; rs232cmd.c  918               { SILENCEParTxt, SILParTxt, NULL},
                       3362 ; rs232cmd.c  919       };
                       3363 ; rs232cmd.c  920       
                       3364 ; rs232cmd.c  921       struct PAR_STRUCT code AudioFrequencyPar[2] = {
0013F4 00000000        3365         DD      000000000H
                       3368         PUBLIC  _AudioFrequencyPar
                       3369         ALIGN   1
0013F8                 3370 _AudioFrequencyPar:
0013F8 rrrrrrrrrrrrrr  3371         DD      _F441KHZParTxt,_F441KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001400 rrrrrrrrrrrrrr  3372         DD      _AudioFrequencyPar+12
       rr                   
001404 rrrrrrrrrrrrrr  3373         DD      _F48KHZParTxt,_F48KHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3374 ; rs232cmd.c  922               { F441KHZParTxt, F441KHZParTxt, &AudioFrequencyPar[1]},
                       3375 ; rs232cmd.c  923               { F48KHZParTxt,  F48KHZParTxt,  NULL},
                       3376 ; rs232cmd.c  924       };
                       3377 ; rs232cmd.c  925       
                       3378 ; rs232cmd.c  926       struct PAR_STRUCT code UnitPar[2] = {
00140C 00000000        3379         DD      000000000H
                       3382         PUBLIC  _UnitPar
                       3383         ALIGN   1
001410                 3384 _UnitPar:
001410 rrrrrrrrrrrrrr  3385         DD      _BBParTxt,_BBParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001418 rrrrrrrrrrrrrr  3386         DD      _UnitPar+12
       rr                   
00141C rrrrrrrrrrrrrr  3387         DD      _SPGParTxt,_SPGParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3388 ; rs232cmd.c  927               { BBParTxt,  BBParTxt,  &UnitPar[1]},
                       3389 ; rs232cmd.c  928               { SPGParTxt, SPGParTxt, NULL},
                       3390 ; rs232cmd.c  929       };
                       3391 ; rs232cmd.c  930       
                       3392 ; rs232cmd.c  931       struct PAR_STRUCT code OffOnPar[2] = {
001424 00000000        3393         DD      000000000H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  54

ADDR   CODE            LINE SOURCELINE
                       3396         PUBLIC  _OffOnPar
                       3397         ALIGN   1
001428                 3398 _OffOnPar:
001428 rrrrrrrrrrrrrr  3399         DD      _OFFParTxt,_OFFParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001430 rrrrrrrrrrrrrr  3400         DD      _OffOnPar+12
       rr                   
001434 rrrrrrrrrrrrrr  3401         DD      _ONParTxt,_ONParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3402 ; rs232cmd.c  932               { OFFParTxt, OFFParTxt, &OffOnPar[1]},
                       3403 ; rs232cmd.c  933               { ONParTxt,  ONParTxt,  NULL},
                       3404 ; rs232cmd.c  934       };
                       3405 ; rs232cmd.c  935       
                       3406 ; rs232cmd.c  936       struct PAR_STRUCT code FactBBGenSignalPar[2] = {
00143C 00000000        3407         DD      000000000H
                       3410         PUBLIC  _FactBBGenSignalPar
                       3411         ALIGN   1
001440                 3412 _FactBBGenSignalPar:
001440 rrrrrrrrrrrrrr  3413         DD      _NORMALParTxt,_NORMParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001448 rrrrrrrrrrrrrr  3414         DD      _FactBBGenSignalPar+12
       rr                   
00144C rrrrrrrrrrrrrr  3415         DD      _F45MHZParTxt,_F45MHZParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3416 ; rs232cmd.c  937               { NORMALParTxt, NORMParTxt,     &FactBBGenSignalPar[1]},
                       3417 ; rs232cmd.c  938               { F45MHZParTxt, F45MHZParTxt, NULL},
                       3418 ; rs232cmd.c  939       };
                       3419 ; rs232cmd.c  940       
                       3420 ; rs232cmd.c  941       struct PAR_STRUCT code MinMaxPar[2] = {
001454 00000000        3421         DD      000000000H
                       3424         PUBLIC  _MinMaxPar
                       3425         ALIGN   1
001458                 3426 _MinMaxPar:
001458 rrrrrrrrrrrrrr  3427         DD      _MINParTxt,_MINParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001460 rrrrrrrrrrrrrr  3428         DD      _MinMaxPar+12
       rr                   
001464 rrrrrrrrrrrrrr  3429         DD      _MAXParTxt,_MAXParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
                       3430 ; rs232cmd.c  942               { MINParTxt, MINParTxt, &MinMaxPar[1]},
                       3431 ; rs232cmd.c  943               { MAXParTxt, MAXParTxt, NULL},
                       3432 ; rs232cmd.c  944       };
                       3433 ; rs232cmd.c  945       
                       3434 ; rs232cmd.c  946       struct PAR_STRUCT code UpDownPar[2] = {
00146C 00000000        3435         DD      000000000H
                       3438         PUBLIC  _UpDownPar
                       3439         ALIGN   1
001470                 3440 _UpDownPar:
001470 rrrrrrrrrrrrrr  3441         DD      _UPParTxt,_UPParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
001478 rrrrrrrrrrrrrr  3442         DD      _UpDownPar+12
       rr                   
00147C rrrrrrrrrrrrrr  3443         DD      _DOWNParTxt,_DOWNParTxt
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  55

ADDR   CODE            LINE SOURCELINE
                       3444 ; rs232cmd.c  947               { UPParTxt,   UPParTxt,   &UpDownPar[1]},
                       3445 ; rs232cmd.c  948               { DOWNParTxt, DOWNParTxt, NULL},
                       3446 ; rs232cmd.c  949       };
                       3447 ; rs232cmd.c  950       
                       3448 ; rs232cmd.c  951       /************************************************************************
                            ***/
                       3449 ; rs232cmd.c  952       // Temporary variables PRIVATE NOT overlayable
                       3450 ; rs232cmd.c  953       
                       3451 ; rs232cmd.c  954       static unsigned int Suffix[4]=
001484 00000000        3452         DD      000000000H
000000                 3453 RS232CMD_INI_FA SEGMENT HDATA INSEGMENT INIT
000000                 3454         RSEG    RS232CMD_INI_FA
                       3457         ALIGN   1
000000                 3458 _Suffix:
                       3459 ; rs232cmd.c  955       {
                       3460 ; rs232cmd.c  956               1,1,1,1
                       3461 ; rs232cmd.c  957       };
                       3462 ; rs232cmd.c  958       
                       3463 ; rs232cmd.c  959       static bool PasswordProtected = true;
000000 01000100010001  3464         DW      00001H,00001H,00001H,00001H
       00                   
                       3466         ALIGN   1
000008                 3467 _PasswordProtected:
                       3468 ; rs232cmd.c  960       static UC GenlockCalEnable = 0;
000008 FFFF            3469         DW      0FFFFH
00000A                 3471 _GenlockCalEnable:
                       3472 ; rs232cmd.c  961       static int GenlockCalValue = 0;
00000A 00              3473         DB      000H
00000B RESERVED        3475         ALIGN   1
00000B
00000C                 3476 _GenlockCalValue:
                       3477 ; rs232cmd.c  962       
                       3478 ; rs232cmd.c  963       /************************************************************************
                            **/
                       3479 ; rs232cmd.c  964       /* CLSCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       3480 ; rs232cmd.c  965       
                       3481 ; rs232cmd.c  966       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       3482 ; rs232cmd.c  967       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       3483 ; rs232cmd.c  968       
                       3484 ; rs232cmd.c  969       /* Function:  Clear status command                                       
                                                                                                                             
                                                  */
                       3485 ; rs232cmd.c  970       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       3486 ; rs232cmd.c  971       
                       3487 ; rs232cmd.c  972       
                       3488 ; rs232cmd.c  973       /************************************************************************
                            **/
                       3489 ; rs232cmd.c  974       void CLSCommand( void)
                       3490 ; rs232cmd.c  975       {
00000C 0000            3491         DW      00000H
000000                 3492 RS232CMD_PR     SEGMENT HCODE
000000                 3493         RSEG    RS232CMD_PR
                       3494         ALIGN   1
                       3496         PUBLIC  _CLSCommand
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  56

ADDR   CODE            LINE SOURCELINE
000000                 3497 _CLSCommand:
                       3501 ; rs232cmd.c  976               if ( CmdExecute && !SCPIError)
000000 964842rr        3503         MOV.B   ES,#SEG( _CmdExecute )
000004 9908rrrr        3504         MOV.W   R0,#SOF( _CmdExecute )
000008 8200            3505         MOV.B   R0L,[R0]
00000A F320            3506         BEQ     _8
00000C 964842rr        3507         MOV.B   ES,#SEG( _SCPIError )
000010 9908rrrr        3508         MOV.W   R0,#SOF( _SCPIError )
000014 8A00            3509         MOV.W   R0,[R0]
000016 F21A            3510         BNE     _8
                       3511 ; rs232cmd.c  977               {
                       3512 ; rs232cmd.c  978                       if ( CmdRequest)
000018 964842rr        3514         MOV.B   ES,#SEG( _CmdRequest )
00001C 9908rrrr        3515         MOV.W   R0,#SOF( _CmdRequest )
000020 8200            3516         MOV.B   R0L,[R0]
000022 F306            3517         BEQ     _3
                       3518 ; rs232cmd.c  979                               SCPIError = SyntaxErr;
000024 964842rr        3520         MOV.B   ES,#SEG( _SCPIError )
000028 9908rrrr        3521         MOV.W   R0,#SOF( _SCPIError )
00002C BA03            3522         MOV.W   [R0],#03H
00002E D680            3523         RET
00002E D680            3523         RET
000030                 3524 _3:
                       3525 ; rs232cmd.c  980                       else
                       3526 ; rs232cmd.c  981                       {
                       3527 ; rs232cmd.c  982                               if ( ParCnt)
000030 964842rr        3529         MOV.B   ES,#SEG( _ParCnt )
000034 9908rrrr        3530         MOV.W   R0,#SOF( _ParCnt )
000038 8200            3531         MOV.B   R0L,[R0]
00003A F306            3532         BEQ     _4
                       3533 ; rs232cmd.c  983                                       SCPIError = ParNotAllowed;
00003C 964842rr        3535         MOV.B   ES,#SEG( _SCPIError )
000040 9908rrrr        3536         MOV.W   R0,#SOF( _SCPIError )
000044 BA06            3537         MOV.W   [R0],#06H
000046 D680            3538         RET
000046 D680            3538         RET
000048                 3539 _4:
                       3540 ; rs232cmd.c  984                               else
                       3541 ; rs232cmd.c  985                                       ResetErrorEventQueue();
                       3543         CALL    _ResetErrorEventQueue
000048 C4rrrrrr       +3543 ;       FCALL   _ResetErrorEventQueue
                       3544 ; rs232cmd.c  986                       }
                       3545 ; rs232cmd.c  987               }
00004C                 3547 _8:
                       3548 ; rs232cmd.c  988       }
00004C D680            3550         RET
                       3552 ; rs232cmd.c  989       
                       3553 ; rs232cmd.c  990       /************************************************************************
                            **/
                       3554 ; rs232cmd.c  991       /* ESECommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       3555 ; rs232cmd.c  992       
                       3556 ; rs232cmd.c  993       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                  */
                       3557 ; rs232cmd.c  994       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       3558 ; rs232cmd.c  995       
                       3559 ; rs232cmd.c  996       /* Function:    Set/read the Standard Event Status Enable Register       
                                                           */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  57

ADDR   CODE            LINE SOURCELINE
                       3560 ; rs232cmd.c  997       
                       3561 ; rs232cmd.c  998       
                       3562 ; rs232cmd.c  999       
                       3563 ; rs232cmd.c 1000       /************************************************************************
                            **/
                       3564 ; rs232cmd.c 1001       void ESECommand( void)
                       3565 ; rs232cmd.c 1002       {
                       3566         ALIGN   1
                       3568         PUBLIC  _ESECommand
00004E                 3569 _ESECommand:
00004E A97E            3573         ADDS.W  R7,#0EH
                       3576 ; rs232cmd.c 1003               int Reg;
                       3577 ; rs232cmd.c 1004       
                       3578 ; rs232cmd.c 1005               if ( CmdExecute && !SCPIError)
000050 964842rr        3580         MOV.B   ES,#SEG( _CmdExecute )
000054 9908rrrr        3581         MOV.W   R0,#SOF( _CmdExecute )
000058 8200            3582         MOV.B   R0L,[R0]
00005A F35E            3583         BEQ     _21
00005C 964842rr        3584         MOV.B   ES,#SEG( _SCPIError )
000060 9908rrrr        3585         MOV.W   R0,#SOF( _SCPIError )
000064 8A00            3586         MOV.W   R0,[R0]
000066 F258            3587         BNE     _21
                       3588 ; rs232cmd.c 1006               {
                       3589 ; rs232cmd.c 1007                       if ( CmdRequest)
000068 964842rr        3591         MOV.B   ES,#SEG( _CmdRequest )
00006C 9908rrrr        3592         MOV.W   R0,#SOF( _CmdRequest )
000070 8200            3593         MOV.B   R0L,[R0]
000072 F31E            3594         BEQ     _12
                       3595 ; rs232cmd.c 1008                       {
                       3596 ; rs232cmd.c 1009                               if ( ParCnt)
000074 964842rr        3598         MOV.B   ES,#SEG( _ParCnt )
000078 9908rrrr        3599         MOV.W   R0,#SOF( _ParCnt )
00007C 8200            3600         MOV.B   R0L,[R0]
00007E F306            3601         BEQ     _11
                       3602 ; rs232cmd.c 1010                                       SCPIError = ParNotAllowed;
000080 964842rr        3604         MOV.B   ES,#SEG( _SCPIError )
000084 9908rrrr        3605         MOV.W   R0,#SOF( _SCPIError )
000088 BA06            3606         MOV.W   [R0],#06H
00008A FE46            3607         BR      _21
00008A FE46            3607         BR      _21
00008C                 3608 _11:
                       3609 ; rs232cmd.c 1011                               else
                       3610 ; rs232cmd.c 1012                                       rs232printf( 12, "%d\n", ESEReg);
00008C 9908000C        3612         MOV.W   R0,#0CH
000090 964842rr        3613         MOV.B   ES,#SEG( _ESEReg )
000094 9918rrrr        3614         MOV.W   R1,#SOF( _ESEReg )
000098 8221            3615         MOV.B   R1L,[R1]
00009A B130            3616         MOVS.B  R1H,#00H
00009C 0F02            3617         PUSH.W  R1
00009E 9938rrrr        3619         MOV.W   R3,#SEG( _9 )
0000A2 9928rrrr        3620         MOV.W   R2,#SOF( _9 )
0000A6 0F0C            3621         PUSH.W  R2, R3
                       3623         CALL    _rs232printf
0000A8 C4rrrrrr       +3623 ;       FCALL   _rs232printf
0000AC A976            3624         ADDS.W  R7,#06H
                       3626 ; rs232cmd.c 1013                       }
0000AE FE34            3628         BR      _21
0000AE FE34            3628         BR      _21
0000B0                 3629 _12:
                       3630 ; rs232cmd.c 1014                       else
                       3631 ; rs232cmd.c 1015                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  58

ADDR   CODE            LINE SOURCELINE
                       3632 ; rs232cmd.c 1016                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0000B0 964842rr        3634         MOV.B   ES,#SEG( _ParCnt )
0000B4 9908rrrr        3635         MOV.W   R0,#SOF( _ParCnt )
0000B8 8200            3636         MOV.B   R0L,[R0]
0000BA 910401          3637         CMP.B   R0L,#01H
0000BD F215            3638         BNE     _13
0000BF 9918rrrr        3639         MOV.W   R1,#SEG( _Cmd )
0000C3 9908rrrr        3640         MOV.W   R0,#SOF( _Cmd )
0000C7 9168rr          3641         MOV.B   R3L,#SEG( __lc_bs )
0000CA 7177            3642         XOR.B   R3H,R3H
0000CC 8927            3643         MOV.W   R2,R7
0000CE 0F0C            3644         PUSH.W  R2, R3
0000D0 9938rrrr        3646         MOV.W   R3,#SEG( _10 )
0000D4 9928rrrr        3647         MOV.W   R2,#SOF( _10 )
0000D8 0F0C            3648         PUSH.W  R2, R3
                       3650         CALL    _sscanf
0000DA C4rrrrrr       +3650 ;       FCALL   _sscanf
0000DE 99700008        3651         ADD.W   R7,#08H
0000E2 99040001        3653         CMP.W   R0,#01H
0000E6 F306            3654         BEQ     _14
0000E6 F306            3654         BEQ     _14
0000E8                 3655 _13:
                       3656 ; rs232cmd.c 1017                               {
                       3657 ; rs232cmd.c 1018                                       SCPIError = SyntaxErr;  
0000E8 964842rr        3659         MOV.B   ES,#SEG( _SCPIError )
0000EC 9908rrrr        3660         MOV.W   R0,#SOF( _SCPIError )
0000F0 BA03            3661         MOV.W   [R0],#03H
                       3662 ; rs232cmd.c 1019                                       return;
0000F2 FE12            3664         BR      _21
                       3665 ; rs232cmd.c 1020                               }
0000F4                 3667 _14:
                       3668 ; rs232cmd.c 1021       
                       3669 ; rs232cmd.c 1022                               if ( Reg > 255)
0000F4 9A7400FF        3671         CMP.W   [R7],#0FFH
0000F8 FD07            3672         BLE     _15
                       3673 ; rs232cmd.c 1023                               {
                       3674 ; rs232cmd.c 1024                                       SCPIError = DataOutOfRange;
0000FA 964842rr        3676         MOV.B   ES,#SEG( _SCPIError )
0000FE 9908rrrr        3677         MOV.W   R0,#SOF( _SCPIError )
000102 9A080021        3678         MOV.W   [R0],#021H
                       3679 ; rs232cmd.c 1025                                       return;
000106 FE08            3681         BR      _21
                       3682 ; rs232cmd.c 1026                               }
000108                 3684 _15:
                       3685 ; rs232cmd.c 1027       
                       3686 ; rs232cmd.c 1028                               ESEReg = Reg & 0xFF;
000108 8A07            3688         MOV.W   R0,[R7]
00010A 9105FF          3689         AND.B   R0L,#0FFH
00010D 964842rr        3690         MOV.B   ES,#SEG( _ESEReg )
000111 9918rrrr        3691         MOV.W   R1,#SOF( _ESEReg )
000115 8209            3692         MOV.B   [R1],R0L
                       3693 ; rs232cmd.c 1029                       }
                       3694 ; rs232cmd.c 1030               }
                       3695 ; rs232cmd.c 1031       }
000118                 3697 _21:
000118 A972            3698         ADDS.W  R7,#02H
00011A D680            3700         RET
                       3702 ; rs232cmd.c 1032       
                       3703 ; rs232cmd.c 1033       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  59

ADDR   CODE            LINE SOURCELINE
                       3704 ; rs232cmd.c 1034       /* ESRCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       3705 ; rs232cmd.c 1035       
                       3706 ; rs232cmd.c 1036       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                  */
                       3707 ; rs232cmd.c 1037       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       3708 ; rs232cmd.c 1038       
                       3709 ; rs232cmd.c 1039       /* Function:    Read and clear the Standard Event Status Register        
                                                                   */
                       3710 ; rs232cmd.c 1040       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       3711 ; rs232cmd.c 1041       /*                                              The register will reset t
                            o zero.                                                                                          
                                                  */
                       3712 ; rs232cmd.c 1042       
                       3713 ; rs232cmd.c 1043       
                       3714 ; rs232cmd.c 1044       /************************************************************************
                            **/
                       3715 ; rs232cmd.c 1045       void ESRCommand( void)
                       3716 ; rs232cmd.c 1046       {
                       3717         ALIGN   1
                       3719         PUBLIC  _ESRCommand
00011C                 3720 _ESRCommand:
                       3726 ; rs232cmd.c 1047               int Reg;
                       3727 ; rs232cmd.c 1048       
                       3728 ; rs232cmd.c 1049               if ( CmdExecute && !SCPIError)
00011C 964842rr        3730         MOV.B   ES,#SEG( _CmdExecute )
000120 9908rrrr        3731         MOV.W   R0,#SOF( _CmdExecute )
000124 8200            3732         MOV.B   R0L,[R0]
000126 F332            3733         BEQ     _30
000128 964842rr        3734         MOV.B   ES,#SEG( _SCPIError )
00012C 9908rrrr        3735         MOV.W   R0,#SOF( _SCPIError )
000130 8A00            3736         MOV.W   R0,[R0]
000132 F22C            3737         BNE     _30
                       3738 ; rs232cmd.c 1050               {
                       3739 ; rs232cmd.c 1051                       if ( CmdRequest)
000134 964842rr        3741         MOV.B   ES,#SEG( _CmdRequest )
000138 9908rrrr        3742         MOV.W   R0,#SOF( _CmdRequest )
00013C 8200            3743         MOV.B   R0L,[R0]
00013E F321            3744         BEQ     _26
                       3745 ; rs232cmd.c 1052                       {
                       3746 ; rs232cmd.c 1053                               if ( ParCnt)
000140 964842rr        3748         MOV.B   ES,#SEG( _ParCnt )
000144 9908rrrr        3749         MOV.W   R0,#SOF( _ParCnt )
000148 8200            3750         MOV.B   R0L,[R0]
00014A F306            3751         BEQ     _25
                       3752 ; rs232cmd.c 1054                                       SCPIError = ParNotAllowed;
00014C 964842rr        3754         MOV.B   ES,#SEG( _SCPIError )
000150 9908rrrr        3755         MOV.W   R0,#SOF( _SCPIError )
000154 BA06            3756         MOV.W   [R0],#06H
000156 D680            3757         RET
000156 D680            3757         RET
000158                 3758 _25:
                       3759 ; rs232cmd.c 1055                               else
                       3760 ; rs232cmd.c 1056                               {
                       3761 ; rs232cmd.c 1057                                       rs232printf( 12, "%d\n", UpdateESRRegiste
                            r());
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  60

ADDR   CODE            LINE SOURCELINE
                       3763         CALL    _UpdateESRRegister
000158 C4rrrrrr       +3763 ;       FCALL   _UpdateESRRegister
00015C 8120            3764         MOV.B   R1L,R0L
00015E B130            3765         MOVS.B  R1H,#00H
000160 9908000C        3766         MOV.W   R0,#0CH
000164 0F02            3767         PUSH.W  R1
000166 9938rrrr        3769         MOV.W   R3,#SEG( _9 )
00016A 9928rrrr        3770         MOV.W   R2,#SOF( _9 )
00016E 0F0C            3771         PUSH.W  R2, R3
                       3773         CALL    _rs232printf
000170 C4rrrrrr       +3773 ;       FCALL   _rs232printf
000174 A976            3774         ADDS.W  R7,#06H
                       3776 ; rs232cmd.c 1058       
                       3777 ; rs232cmd.c 1059                                       ESRReg = 0;
000176 964842rr        3779         MOV.B   ES,#SEG( _ESRReg )
00017A 9908rrrr        3780         MOV.W   R0,#SOF( _ESRReg )
00017E B200            3781         MOV.B   [R0],#00H
                       3782 ; rs232cmd.c 1060                               }
                       3783 ; rs232cmd.c 1061                       }
000180 D680            3785         RET
000180 D680            3785         RET
000182                 3786 _26:
                       3787 ; rs232cmd.c 1062                       else
                       3788 ; rs232cmd.c 1063                               SCPIError = SyntaxErr;
000182 964842rr        3790         MOV.B   ES,#SEG( _SCPIError )
000186 9908rrrr        3791         MOV.W   R0,#SOF( _SCPIError )
00018A BA03            3792         MOV.W   [R0],#03H
                       3793 ; rs232cmd.c 1064               }
00018C                 3795 _30:
                       3796 ; rs232cmd.c 1065       }
00018C D680            3798         RET
                       3800 ; rs232cmd.c 1066       
                       3801 ; rs232cmd.c 1067       /************************************************************************
                            **/
                       3802 ; rs232cmd.c 1068       /* OPCCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       3803 ; rs232cmd.c 1069       
                       3804 ; rs232cmd.c 1070       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       3805 ; rs232cmd.c 1071       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       3806 ; rs232cmd.c 1072       
                       3807 ; rs232cmd.c 1073       /* Function:    Operation Complete Command/Query                         
                                                                                                                   */
                       3808 ; rs232cmd.c 1074       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       3809 ; rs232cmd.c 1075       
                       3810 ; rs232cmd.c 1076       
                       3811 ; rs232cmd.c 1077       /************************************************************************
                            **/
                       3812 ; rs232cmd.c 1078       void OPCCommand( void)
                       3813 ; rs232cmd.c 1079       {
                       3814         ALIGN   1
                       3816         PUBLIC  _OPCCommand
00018E                 3817 _OPCCommand:
                       3821 ; rs232cmd.c 1080               if ( CmdExecute && !SCPIError)
00018E 964842rr        3823         MOV.B   ES,#SEG( _CmdExecute )
000192 9908rrrr        3824         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  61

ADDR   CODE            LINE SOURCELINE
000196 8200            3825         MOV.B   R0L,[R0]
000198 F323            3826         BEQ     _36
00019A 964842rr        3827         MOV.B   ES,#SEG( _SCPIError )
00019E 9908rrrr        3828         MOV.W   R0,#SOF( _SCPIError )
0001A2 8A00            3829         MOV.W   R0,[R0]
0001A4 F21D            3830         BNE     _36
                       3831 ; rs232cmd.c 1081               {
                       3832 ; rs232cmd.c 1082                       if ( CmdRequest)
0001A6 964842rr        3834         MOV.B   ES,#SEG( _CmdRequest )
0001AA 9908rrrr        3835         MOV.W   R0,#SOF( _CmdRequest )
0001AE 8200            3836         MOV.B   R0L,[R0]
0001B0 F30C            3837         BEQ     _31
                       3838 ; rs232cmd.c 1083                       {
                       3839 ; rs232cmd.c 1084                               if ( ParCnt)
0001B2 964842rr        3841         MOV.B   ES,#SEG( _ParCnt )
0001B6 9908rrrr        3842         MOV.W   R0,#SOF( _ParCnt )
0001BA 8200            3843         MOV.B   R0L,[R0]
0001BC F311            3844         BEQ     _36
                       3845 ; rs232cmd.c 1085                                       SCPIError = ParNotAllowed;
0001BE 964842rr        3847         MOV.B   ES,#SEG( _SCPIError )
0001C2 9908rrrr        3848         MOV.W   R0,#SOF( _SCPIError )
0001C6 BA06            3849         MOV.W   [R0],#06H
                       3850 ; rs232cmd.c 1086                       }
0001C8 D680            3852         RET
0001C8 D680            3852         RET
0001CA                 3853 _31:
                       3854 ; rs232cmd.c 1087                       else
                       3855 ; rs232cmd.c 1088                       {
                       3856 ; rs232cmd.c 1089                               if ( ParCnt)
0001CA 964842rr        3858         MOV.B   ES,#SEG( _ParCnt )
0001CE 9908rrrr        3859         MOV.W   R0,#SOF( _ParCnt )
0001D2 8200            3860         MOV.B   R0L,[R0]
0001D4 F305            3861         BEQ     _36
                       3862 ; rs232cmd.c 1090                                       SCPIError = ParNotAllowed;
0001D6 964842rr        3864         MOV.B   ES,#SEG( _SCPIError )
0001DA 9908rrrr        3865         MOV.W   R0,#SOF( _SCPIError )
0001DE BA06            3866         MOV.W   [R0],#06H
                       3867 ; rs232cmd.c 1091                       }
                       3868 ; rs232cmd.c 1092               }
0001E0                 3870 _36:
                       3871 ; rs232cmd.c 1093       }
0001E0 D680            3873         RET
                       3875 ; rs232cmd.c 1094       
                       3876 ; rs232cmd.c 1095       /************************************************************************
                            **/
                       3877 ; rs232cmd.c 1096       /* SRECommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       3878 ; rs232cmd.c 1097       
                       3879 ; rs232cmd.c 1098       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                  */
                       3880 ; rs232cmd.c 1099       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       3881 ; rs232cmd.c 1100       
                       3882 ; rs232cmd.c 1101       /* Function:    Set/read the Service Request Enable Register             
                                                                           */
                       3883 ; rs232cmd.c 1102       /* Remarks:             Bit 6 in *SRE? register is always ZERO           
                                                                                                   */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  62

ADDR   CODE            LINE SOURCELINE
                       3884 ; rs232cmd.c 1103       /*                                              Bit 6 in *SRE register is
                             ignored                                                                                         
                                                  */
                       3885 ; rs232cmd.c 1104       
                       3886 ; rs232cmd.c 1105       
                       3887 ; rs232cmd.c 1106       /************************************************************************
                            **/
                       3888 ; rs232cmd.c 1107       void SRECommand( void)
                       3889 ; rs232cmd.c 1108       {
                       3890         ALIGN   1
                       3892         PUBLIC  _SRECommand
0001E2                 3893 _SRECommand:
0001E2 A97E            3897         ADDS.W  R7,#0EH
                       3900 ; rs232cmd.c 1109               int Reg;
                       3901 ; rs232cmd.c 1110       
                       3902 ; rs232cmd.c 1111               if ( CmdExecute && !SCPIError)
0001E4 964842rr        3904         MOV.B   ES,#SEG( _CmdExecute )
0001E8 9908rrrr        3905         MOV.W   R0,#SOF( _CmdExecute )
0001EC 8200            3906         MOV.B   R0L,[R0]
0001EE F35E            3907         BEQ     _47
0001F0 964842rr        3908         MOV.B   ES,#SEG( _SCPIError )
0001F4 9908rrrr        3909         MOV.W   R0,#SOF( _SCPIError )
0001F8 8A00            3910         MOV.W   R0,[R0]
0001FA F258            3911         BNE     _47
                       3912 ; rs232cmd.c 1112               {
                       3913 ; rs232cmd.c 1113                       if ( CmdRequest)
0001FC 964842rr        3915         MOV.B   ES,#SEG( _CmdRequest )
000200 9908rrrr        3916         MOV.W   R0,#SOF( _CmdRequest )
000204 8200            3917         MOV.B   R0L,[R0]
000206 F31E            3918         BEQ     _38
                       3919 ; rs232cmd.c 1114                       {
                       3920 ; rs232cmd.c 1115                               if ( ParCnt)
000208 964842rr        3922         MOV.B   ES,#SEG( _ParCnt )
00020C 9908rrrr        3923         MOV.W   R0,#SOF( _ParCnt )
000210 8200            3924         MOV.B   R0L,[R0]
000212 F306            3925         BEQ     _37
                       3926 ; rs232cmd.c 1116                                       SCPIError = ParNotAllowed;
000214 964842rr        3928         MOV.B   ES,#SEG( _SCPIError )
000218 9908rrrr        3929         MOV.W   R0,#SOF( _SCPIError )
00021C BA06            3930         MOV.W   [R0],#06H
00021E FE46            3931         BR      _47
00021E FE46            3931         BR      _47
000220                 3932 _37:
                       3933 ; rs232cmd.c 1117                               else
                       3934 ; rs232cmd.c 1118                                       rs232printf( 12, "%d\n", SREReg);
000220 9908000C        3936         MOV.W   R0,#0CH
000224 964842rr        3937         MOV.B   ES,#SEG( _SREReg )
000228 9918rrrr        3938         MOV.W   R1,#SOF( _SREReg )
00022C 8221            3939         MOV.B   R1L,[R1]
00022E B130            3940         MOVS.B  R1H,#00H
000230 0F02            3941         PUSH.W  R1
000232 9938rrrr        3943         MOV.W   R3,#SEG( _9 )
000236 9928rrrr        3944         MOV.W   R2,#SOF( _9 )
00023A 0F0C            3945         PUSH.W  R2, R3
                       3947         CALL    _rs232printf
00023C C4rrrrrr       +3947 ;       FCALL   _rs232printf
000240 A976            3948         ADDS.W  R7,#06H
                       3950 ; rs232cmd.c 1119                       }
000242 FE34            3952         BR      _47
000242 FE34            3952         BR      _47
000244                 3953 _38:
                       3954 ; rs232cmd.c 1120                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  63

ADDR   CODE            LINE SOURCELINE
                       3955 ; rs232cmd.c 1121                       {
                       3956 ; rs232cmd.c 1122                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000244 964842rr        3958         MOV.B   ES,#SEG( _ParCnt )
000248 9908rrrr        3959         MOV.W   R0,#SOF( _ParCnt )
00024C 8200            3960         MOV.B   R0L,[R0]
00024E 910401          3961         CMP.B   R0L,#01H
000251 F215            3962         BNE     _39
000253 9918rrrr        3963         MOV.W   R1,#SEG( _Cmd )
000257 9908rrrr        3964         MOV.W   R0,#SOF( _Cmd )
00025B 9168rr          3965         MOV.B   R3L,#SEG( __lc_bs )
00025E 7177            3966         XOR.B   R3H,R3H
000260 8927            3967         MOV.W   R2,R7
000262 0F0C            3968         PUSH.W  R2, R3
000264 9938rrrr        3970         MOV.W   R3,#SEG( _10 )
000268 9928rrrr        3971         MOV.W   R2,#SOF( _10 )
00026C 0F0C            3972         PUSH.W  R2, R3
                       3974         CALL    _sscanf
00026E C4rrrrrr       +3974 ;       FCALL   _sscanf
000272 99700008        3975         ADD.W   R7,#08H
000276 99040001        3977         CMP.W   R0,#01H
00027A F306            3978         BEQ     _40
00027A F306            3978         BEQ     _40
00027C                 3979 _39:
                       3980 ; rs232cmd.c 1123                               {
                       3981 ; rs232cmd.c 1124                                       SCPIError = SyntaxErr;  
00027C 964842rr        3983         MOV.B   ES,#SEG( _SCPIError )
000280 9908rrrr        3984         MOV.W   R0,#SOF( _SCPIError )
000284 BA03            3985         MOV.W   [R0],#03H
                       3986 ; rs232cmd.c 1125                                       return;
000286 FE12            3988         BR      _47
                       3989 ; rs232cmd.c 1126                               }
000288                 3991 _40:
                       3992 ; rs232cmd.c 1127       
                       3993 ; rs232cmd.c 1128                               if ( Reg > 255)
000288 9A7400FF        3995         CMP.W   [R7],#0FFH
00028C FD07            3996         BLE     _41
                       3997 ; rs232cmd.c 1129                               {
                       3998 ; rs232cmd.c 1130                                       SCPIError = DataOutOfRange;
00028E 964842rr        4000         MOV.B   ES,#SEG( _SCPIError )
000292 9908rrrr        4001         MOV.W   R0,#SOF( _SCPIError )
000296 9A080021        4002         MOV.W   [R0],#021H
                       4003 ; rs232cmd.c 1131                                       return;
00029A FE08            4005         BR      _47
                       4006 ; rs232cmd.c 1132                               }
00029C                 4008 _41:
                       4009 ; rs232cmd.c 1133       
                       4010 ; rs232cmd.c 1134                               SREReg = Reg & 0xBF;
00029C 8A07            4012         MOV.W   R0,[R7]
00029E 9105BF          4013         AND.B   R0L,#0BFH
0002A1 964842rr        4014         MOV.B   ES,#SEG( _SREReg )
0002A5 9918rrrr        4015         MOV.W   R1,#SOF( _SREReg )
0002A9 8209            4016         MOV.B   [R1],R0L
                       4017 ; rs232cmd.c 1135                       }
                       4018 ; rs232cmd.c 1136               }
                       4019 ; rs232cmd.c 1137       }
0002AC                 4021 _47:
0002AC A972            4022         ADDS.W  R7,#02H
0002AE D680            4024         RET
                       4026 ; rs232cmd.c 1138       
                       4027 ; rs232cmd.c 1139       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  64

ADDR   CODE            LINE SOURCELINE
                       4028 ; rs232cmd.c 1140       /* STBCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       4029 ; rs232cmd.c 1141       
                       4030 ; rs232cmd.c 1142       /* Author:              Kim Engedahl, DEV, 970627                        
                                                                                                                             
                                  */
                       4031 ; rs232cmd.c 1143       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       4032 ; rs232cmd.c 1144       
                       4033 ; rs232cmd.c 1145       /* Function:    Read the Status Byte Register                            
                                                                                                                           */
                            
                       4034 ; rs232cmd.c 1146       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       4035 ; rs232cmd.c 1147       
                       4036 ; rs232cmd.c 1148       
                       4037 ; rs232cmd.c 1149       /************************************************************************
                            **/
                       4038 ; rs232cmd.c 1150       void STBCommand( void)
                       4039 ; rs232cmd.c 1151       {
                       4040         ALIGN   1
                       4042         PUBLIC  _STBCommand
0002B0                 4043 _STBCommand:
                       4047 ; rs232cmd.c 1152               if ( CmdExecute && !SCPIError)
0002B0 964842rr        4049         MOV.B   ES,#SEG( _CmdExecute )
0002B4 9908rrrr        4050         MOV.W   R0,#SOF( _CmdExecute )
0002B8 8200            4051         MOV.B   R0L,[R0]
0002BA F331            4052         BEQ     _56
0002BC 964842rr        4053         MOV.B   ES,#SEG( _SCPIError )
0002C0 9908rrrr        4054         MOV.W   R0,#SOF( _SCPIError )
0002C4 8A00            4055         MOV.W   R0,[R0]
0002C6 F22B            4056         BNE     _56
                       4057 ; rs232cmd.c 1153               {
                       4058 ; rs232cmd.c 1154                       if ( CmdRequest)
0002C8 964842rr        4060         MOV.B   ES,#SEG( _CmdRequest )
0002CC 9908rrrr        4061         MOV.W   R0,#SOF( _CmdRequest )
0002D0 8200            4062         MOV.B   R0L,[R0]
0002D2 F320            4063         BEQ     _52
                       4064 ; rs232cmd.c 1155                       {
                       4065 ; rs232cmd.c 1156                               if ( ParCnt)
0002D4 964842rr        4067         MOV.B   ES,#SEG( _ParCnt )
0002D8 9908rrrr        4068         MOV.W   R0,#SOF( _ParCnt )
0002DC 8200            4069         MOV.B   R0L,[R0]
0002DE F306            4070         BEQ     _51
                       4071 ; rs232cmd.c 1157                                       SCPIError = ParNotAllowed;
0002E0 964842rr        4073         MOV.B   ES,#SEG( _SCPIError )
0002E4 9908rrrr        4074         MOV.W   R0,#SOF( _SCPIError )
0002E8 BA06            4075         MOV.W   [R0],#06H
0002EA D680            4076         RET
0002EA D680            4076         RET
0002EC                 4077 _51:
                       4078 ; rs232cmd.c 1158                               else
                       4079 ; rs232cmd.c 1159                               {
                       4080 ; rs232cmd.c 1160                                       UpdateSTBRegister();
                       4082         CALL    _UpdateSTBRegister
0002EC C4rrrrrr       +4082 ;       FCALL   _UpdateSTBRegister
                       4083 ; rs232cmd.c 1161       
                       4084 ; rs232cmd.c 1162                                       rs232printf( 12, "%d\n", STBReg);
0002F0 9908000C        4086         MOV.W   R0,#0CH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  65

ADDR   CODE            LINE SOURCELINE
0002F4 964842rr        4087         MOV.B   ES,#SEG( _STBReg )
0002F8 9918rrrr        4088         MOV.W   R1,#SOF( _STBReg )
0002FC 8221            4089         MOV.B   R1L,[R1]
0002FE B130            4090         MOVS.B  R1H,#00H
000300 0F02            4091         PUSH.W  R1
000302 9938rrrr        4093         MOV.W   R3,#SEG( _9 )
000306 9928rrrr        4094         MOV.W   R2,#SOF( _9 )
00030A 0F0C            4095         PUSH.W  R2, R3
                       4097         CALL    _rs232printf
00030C C4rrrrrr       +4097 ;       FCALL   _rs232printf
000310 A976            4098         ADDS.W  R7,#06H
                       4100 ; rs232cmd.c 1163                               }
                       4101 ; rs232cmd.c 1164                       }
000312 D680            4103         RET
000312 D680            4103         RET
000314                 4104 _52:
                       4105 ; rs232cmd.c 1165                       else
                       4106 ; rs232cmd.c 1166                               SCPIError = SyntaxErr;
000314 964842rr        4108         MOV.B   ES,#SEG( _SCPIError )
000318 9908rrrr        4109         MOV.W   R0,#SOF( _SCPIError )
00031C BA03            4110         MOV.W   [R0],#03H
                       4111 ; rs232cmd.c 1167               }
00031E                 4113 _56:
                       4114 ; rs232cmd.c 1168       }
00031E D680            4116         RET
                       4118 ; rs232cmd.c 1169       
                       4119 ; rs232cmd.c 1170       /************************************************************************
                            **/
                       4120 ; rs232cmd.c 1171       /* TSTCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       4121 ; rs232cmd.c 1172       
                       4122 ; rs232cmd.c 1173       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       4123 ; rs232cmd.c 1174       /* Revised:             000505                                           
                                                                                                                             
                                                                                  */
                       4124 ; rs232cmd.c 1175       
                       4125 ; rs232cmd.c 1176       /* Function:    Selftest query                                           
                                                                                                                             
                                                                  */
                       4126 ; rs232cmd.c 1177       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       4127 ; rs232cmd.c 1178       
                       4128 ; rs232cmd.c 1179       
                       4129 ; rs232cmd.c 1180       /************************************************************************
                            **/
                       4130 ; rs232cmd.c 1181       void TSTCommand( void)
                       4131 ; rs232cmd.c 1182       {
                       4132         ALIGN   1
                       4134         PUBLIC  _TSTCommand
000320                 4135 _TSTCommand:
                       4139 ; rs232cmd.c 1183               if ( CmdExecute && !SCPIError)
000320 964842rr        4141         MOV.B   ES,#SEG( _CmdExecute )
000324 9908rrrr        4142         MOV.W   R0,#SOF( _CmdExecute )
000328 8200            4143         MOV.B   R0L,[R0]
00032A F31D            4144         BEQ     _61
00032C 964842rr        4145         MOV.B   ES,#SEG( _SCPIError )
000330 9908rrrr        4146         MOV.W   R0,#SOF( _SCPIError )
000334 8A00            4147         MOV.W   R0,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  66

ADDR   CODE            LINE SOURCELINE
000336 F217            4148         BNE     _61
                       4149 ; rs232cmd.c 1184               {
                       4150 ; rs232cmd.c 1185                       if ( CmdRequest)
000338 964842rr        4152         MOV.B   ES,#SEG( _CmdRequest )
00033C 9908rrrr        4153         MOV.W   R0,#SOF( _CmdRequest )
000340 8200            4154         MOV.B   R0L,[R0]
000342 F30C            4155         BEQ     _57
                       4156 ; rs232cmd.c 1186                       {
                       4157 ; rs232cmd.c 1187                               if ( ParCnt)
000344 964842rr        4159         MOV.B   ES,#SEG( _ParCnt )
000348 9908rrrr        4160         MOV.W   R0,#SOF( _ParCnt )
00034C 8200            4161         MOV.B   R0L,[R0]
00034E F30B            4162         BEQ     _61
                       4163 ; rs232cmd.c 1188                                       SCPIError = ParNotAllowed;
000350 964842rr        4165         MOV.B   ES,#SEG( _SCPIError )
000354 9908rrrr        4166         MOV.W   R0,#SOF( _SCPIError )
000358 BA06            4167         MOV.W   [R0],#06H
                       4168 ; rs232cmd.c 1189                               else
                       4169 ; rs232cmd.c 1190                               {
                       4170 ; rs232cmd.c 1191                                       ;
                       4171 ; rs232cmd.c 1192                               }
                       4172 ; rs232cmd.c 1193                       }
00035A D680            4174         RET
00035A D680            4174         RET
00035C                 4175 _57:
                       4176 ; rs232cmd.c 1194                       else
                       4177 ; rs232cmd.c 1195                               SCPIError = SyntaxErr;
00035C 964842rr        4179         MOV.B   ES,#SEG( _SCPIError )
000360 9908rrrr        4180         MOV.W   R0,#SOF( _SCPIError )
000364 BA03            4181         MOV.W   [R0],#03H
                       4182 ; rs232cmd.c 1196               }
000366                 4184 _61:
                       4185 ; rs232cmd.c 1197       }
000366 D680            4187         RET
                       4189 ; rs232cmd.c 1198       
                       4190 ; rs232cmd.c 1199       /************************************************************************
                            **/
                       4191 ; rs232cmd.c 1200       /* WAICommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       4192 ; rs232cmd.c 1201       
                       4193 ; rs232cmd.c 1202       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       4194 ; rs232cmd.c 1203       /* Revised:             000505                                           
                                                                                                                             
                                                                                  */
                       4195 ; rs232cmd.c 1204       
                       4196 ; rs232cmd.c 1205       /* Function:    Wait-to-continue command                                 
                                                                                                                             
                                          */
                       4197 ; rs232cmd.c 1206       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       4198 ; rs232cmd.c 1207       
                       4199 ; rs232cmd.c 1208       
                       4200 ; rs232cmd.c 1209       /************************************************************************
                            **/
                       4201 ; rs232cmd.c 1210       void WAICommand( void)
                       4202 ; rs232cmd.c 1211       {
                       4203         ALIGN   1
                       4205         PUBLIC  _WAICommand
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  67

ADDR   CODE            LINE SOURCELINE
000368                 4206 _WAICommand:
                       4210 ; rs232cmd.c 1212               if ( CmdExecute && !SCPIError)
000368 964842rr        4212         MOV.B   ES,#SEG( _CmdExecute )
00036C 9908rrrr        4213         MOV.W   R0,#SOF( _CmdExecute )
000370 8200            4214         MOV.B   R0L,[R0]
000372 F31D            4215         BEQ     _66
000374 964842rr        4216         MOV.B   ES,#SEG( _SCPIError )
000378 9908rrrr        4217         MOV.W   R0,#SOF( _SCPIError )
00037C 8A00            4218         MOV.W   R0,[R0]
00037E F217            4219         BNE     _66
                       4220 ; rs232cmd.c 1213               {
                       4221 ; rs232cmd.c 1214                       if ( CmdRequest)
000380 964842rr        4223         MOV.B   ES,#SEG( _CmdRequest )
000384 9908rrrr        4224         MOV.W   R0,#SOF( _CmdRequest )
000388 8200            4225         MOV.B   R0L,[R0]
00038A F306            4226         BEQ     _62
                       4227 ; rs232cmd.c 1215                               SCPIError = SyntaxErr;
00038C 964842rr        4229         MOV.B   ES,#SEG( _SCPIError )
000390 9908rrrr        4230         MOV.W   R0,#SOF( _SCPIError )
000394 BA03            4231         MOV.W   [R0],#03H
000396 D680            4232         RET
000396 D680            4232         RET
000398                 4233 _62:
                       4234 ; rs232cmd.c 1216                       else
                       4235 ; rs232cmd.c 1217                       {
                       4236 ; rs232cmd.c 1218                               if ( ParCnt)
000398 964842rr        4238         MOV.B   ES,#SEG( _ParCnt )
00039C 9908rrrr        4239         MOV.W   R0,#SOF( _ParCnt )
0003A0 8200            4240         MOV.B   R0L,[R0]
0003A2 F305            4241         BEQ     _66
                       4242 ; rs232cmd.c 1219                                       SCPIError = ParNotAllowed;
0003A4 964842rr        4244         MOV.B   ES,#SEG( _SCPIError )
0003A8 9908rrrr        4245         MOV.W   R0,#SOF( _SCPIError )
0003AC BA06            4246         MOV.W   [R0],#06H
                       4247 ; rs232cmd.c 1220                               else
                       4248 ; rs232cmd.c 1221                               {
                       4249 ; rs232cmd.c 1222                                       ;
                       4250 ; rs232cmd.c 1223                               }
                       4251 ; rs232cmd.c 1224                       }
                       4252 ; rs232cmd.c 1225               }
0003AE                 4254 _66:
                       4255 ; rs232cmd.c 1226       }
0003AE D680            4257         RET
                       4259 ; rs232cmd.c 1227       
                       4260 ; rs232cmd.c 1228       /************************************************************************
                            **/
                       4261 ; rs232cmd.c 1229       /* RSTCommand                                                  RS232CMD.C
                             */
                       4262 ; rs232cmd.c 1230       /*                                                                       
                             */
                       4263 ; rs232cmd.c 1231       /* Revised:             000617                                           
                             */
                       4264 ; rs232cmd.c 1232       /* Function:    Reset comamnd                                            
                             */
                       4265 ; rs232cmd.c 1233       /* Remarks:             No parameters                                    
                             */
                       4266 ; rs232cmd.c 1234       /************************************************************************
                            **/
                       4267 ; rs232cmd.c 1235       void RSTCommand( void)
                       4268 ; rs232cmd.c 1236         {
                       4269         ALIGN   1
                       4271         PUBLIC  _RSTCommand
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  68

ADDR   CODE            LINE SOURCELINE
0003B0                 4272 _RSTCommand:
                       4276 ; rs232cmd.c 1237         if ( CmdExecute && !SCPIError)
0003B0 964842rr        4278         MOV.B   ES,#SEG( _CmdExecute )
0003B4 9908rrrr        4279         MOV.W   R0,#SOF( _CmdExecute )
0003B8 8200            4280         MOV.B   R0L,[R0]
0003BA F320            4281         BEQ     _72
0003BC 964842rr        4282         MOV.B   ES,#SEG( _SCPIError )
0003C0 9908rrrr        4283         MOV.W   R0,#SOF( _SCPIError )
0003C4 8A00            4284         MOV.W   R0,[R0]
0003C6 F21A            4285         BNE     _72
                       4286 ; rs232cmd.c 1238           {
                       4287 ; rs232cmd.c 1239           if ( CmdRequest)
0003C8 964842rr        4289         MOV.B   ES,#SEG( _CmdRequest )
0003CC 9908rrrr        4290         MOV.W   R0,#SOF( _CmdRequest )
0003D0 8200            4291         MOV.B   R0L,[R0]
0003D2 F306            4292         BEQ     _67
                       4293 ; rs232cmd.c 1240             SCPIError = SyntaxErr;
0003D4 964842rr        4295         MOV.B   ES,#SEG( _SCPIError )
0003D8 9908rrrr        4296         MOV.W   R0,#SOF( _SCPIError )
0003DC BA03            4297         MOV.W   [R0],#03H
0003DE D680            4298         RET
0003DE D680            4298         RET
0003E0                 4299 _67:
                       4300 ; rs232cmd.c 1241           else
                       4301 ; rs232cmd.c 1242             {
                       4302 ; rs232cmd.c 1243             if ( ParCnt)
0003E0 964842rr        4304         MOV.B   ES,#SEG( _ParCnt )
0003E4 9908rrrr        4305         MOV.W   R0,#SOF( _ParCnt )
0003E8 8200            4306         MOV.B   R0L,[R0]
0003EA F306            4307         BEQ     _68
                       4308 ; rs232cmd.c 1244               SCPIError = ParNotAllowed;
0003EC 964842rr        4310         MOV.B   ES,#SEG( _SCPIError )
0003F0 9908rrrr        4311         MOV.W   R0,#SOF( _SCPIError )
0003F4 BA06            4312         MOV.W   [R0],#06H
0003F6 D680            4313         RET
0003F6 D680            4313         RET
0003F8                 4314 _68:
                       4315 ; rs232cmd.c 1245             else
                       4316 ; rs232cmd.c 1246               ResetInstrument();
                       4318         CALL    _ResetInstrument
0003F8 C4rrrrrr       +4318 ;       FCALL   _ResetInstrument
                       4319 ; rs232cmd.c 1247             }
                       4320 ; rs232cmd.c 1248           }
0003FC                 4322 _72:
                       4323 ; rs232cmd.c 1249         }
0003FC D680            4325         RET
                       4327 ; rs232cmd.c 1250       
                       4328 ; rs232cmd.c 1251       /************************************************************************
                            **/
                       4329 ; rs232cmd.c 1252       /* IDNCommand                                                            
                                                                                                                             
                                                             RS232CMD.C */
                       4330 ; rs232cmd.c 1253       
                       4331 ; rs232cmd.c 1254       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                  */
                       4332 ; rs232cmd.c 1255       /* Revised:             000614                                           
                                                                                                                             
                                                                                  */
                       4333 ; rs232cmd.c 1256       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  69

ADDR   CODE            LINE SOURCELINE
                       4334 ; rs232cmd.c 1257       /* Function:    Identification query                                     
                                                                                                                             
                                                  */
                       4335 ; rs232cmd.c 1258       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                  */
                       4336 ; rs232cmd.c 1259       
                       4337 ; rs232cmd.c 1260       
                       4338 ; rs232cmd.c 1261       /************************************************************************
                            **/
                       4339 ; rs232cmd.c 1262       void IDNCommand( void)
                       4340 ; rs232cmd.c 1263       {
                       4341         ALIGN   1
                       4343         PUBLIC  _IDNCommand
0003FE                 4344 _IDNCommand:
                       4348 ; rs232cmd.c 1264               if ( CmdExecute && !SCPIError)
0003FE 964842rr        4350         MOV.B   ES,#SEG( _CmdExecute )
000402 9908rrrr        4351         MOV.W   R0,#SOF( _CmdExecute )
000406 8200            4352         MOV.B   R0L,[R0]
000408 F344            4353         BEQ     _78
00040A 964842rr        4354         MOV.B   ES,#SEG( _SCPIError )
00040E 9908rrrr        4355         MOV.W   R0,#SOF( _SCPIError )
000412 8A00            4356         MOV.W   R0,[R0]
000414 F23E            4357         BNE     _78
                       4358 ; rs232cmd.c 1265               {
                       4359 ; rs232cmd.c 1266                       if ( CmdRequest)
000416 964842rr        4361         MOV.B   ES,#SEG( _CmdRequest )
00041A 9908rrrr        4362         MOV.W   R0,#SOF( _CmdRequest )
00041E 8200            4363         MOV.B   R0L,[R0]
000420 F333            4364         BEQ     _74
                       4365 ; rs232cmd.c 1267                       {
                       4366 ; rs232cmd.c 1268                               if ( ParCnt)
000422 964842rr        4368         MOV.B   ES,#SEG( _ParCnt )
000426 9908rrrr        4369         MOV.W   R0,#SOF( _ParCnt )
00042A 8200            4370         MOV.B   R0L,[R0]
00042C F306            4371         BEQ     _73
                       4372 ; rs232cmd.c 1269                                       SCPIError = ParNotAllowed;
00042E 964842rr        4374         MOV.B   ES,#SEG( _SCPIError )
000432 9908rrrr        4375         MOV.W   R0,#SOF( _SCPIError )
000436 BA06            4376         MOV.W   [R0],#06H
000438 D680            4377         RET
000438 D680            4377         RET
00043A                 4378 _73:
                       4379 ; rs232cmd.c 1270                               else
                       4380 ; rs232cmd.c 1271                               {
                       4381 ; rs232cmd.c 1272                                       rs232puts( Calibration.Company);
00043A 9918rrrr        4383         MOV.W   R1,#SEG( _Calibration )
00043E 9908rrrr        4384         MOV.W   R0,#SOF( _Calibration )
                       4385         CALL    _rs232puts
000442 C4rrrrrr       +4385 ;       FCALL   _rs232puts
                       4386 ; rs232cmd.c 1273       
                       4387 ; rs232cmd.c 1274                                       rs232putchar( ',');
000446 91082C          4389         MOV.B   R0L,#02CH
                       4390         CALL    _rs232putchar
000449 C4rrrrrr       +4390 ;       FCALL   _rs232putchar
                       4391 ; rs232cmd.c 1275       
                       4392 ; rs232cmd.c 1276                                       rs232puts( Calibration.Type);
00044D 9918rrrr        4394         MOV.W   R1,#SEG( _Calibration+33 )
000451 9908rrrr        4395         MOV.W   R0,#SOF( _Calibration+33 )
                       4396         CALL    _rs232puts
000455 C4rrrrrr       +4396 ;       FCALL   _rs232puts
000459 91082C          4397         MOV.B   R0L,#02CH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  70

ADDR   CODE            LINE SOURCELINE
                       4398 ; rs232cmd.c 1277       
                       4399 ; rs232cmd.c 1278                                       rs232putchar( ',');
                       4401         CALL    _rs232putchar
00045C C4rrrrrr       +4401 ;       FCALL   _rs232putchar
                       4402 ; rs232cmd.c 1279       
                       4403 ; rs232cmd.c 1280                                       rs232puts( Calibration.KUNumber);
000460 9918rrrr        4405         MOV.W   R1,#SEG( _Calibration+66 )
000464 9908rrrr        4406         MOV.W   R0,#SOF( _Calibration+66 )
                       4407         CALL    _rs232puts
000468 C4rrrrrr       +4407 ;       FCALL   _rs232puts
                       4408 ; rs232cmd.c 1281       
                       4409 ; rs232cmd.c 1282                                       rs232putchar( ',');
00046C 91082C          4411         MOV.B   R0L,#02CH
                       4412         CALL    _rs232putchar
00046F C4rrrrrr       +4412 ;       FCALL   _rs232putchar
                       4413 ; rs232cmd.c 1283       
                       4414 ; rs232cmd.c 1284                                       rs232puts( Calibration.SWRevision);
000473 9918rrrr        4416         MOV.W   R1,#SEG( _Calibration+75 )
000477 9908rrrr        4417         MOV.W   R0,#SOF( _Calibration+75 )
                       4418         CALL    _rs232puts
00047B C4rrrrrr       +4418 ;       FCALL   _rs232puts
                       4419 ; rs232cmd.c 1285       
                       4420 ; rs232cmd.c 1286                                       rs232putchar( '\n');
00047F 91080A          4422         MOV.B   R0L,#0AH
                       4423         CALL    _rs232putchar
000482 C4rrrrrr       +4423 ;       FCALL   _rs232putchar
                       4424 ; rs232cmd.c 1287                               }
                       4425 ; rs232cmd.c 1288                       }
000486 D680            4427         RET
000486 D680            4427         RET
000488                 4428 _74:
                       4429 ; rs232cmd.c 1289                       else
                       4430 ; rs232cmd.c 1290                               SCPIError = SyntaxErr;
000488 964842rr        4432         MOV.B   ES,#SEG( _SCPIError )
00048C 9908rrrr        4433         MOV.W   R0,#SOF( _SCPIError )
000490 BA03            4434         MOV.W   [R0],#03H
                       4435 ; rs232cmd.c 1291               }
000492                 4437 _78:
                       4438 ; rs232cmd.c 1292       }
000492 D680            4440         RET
                       4442 ; rs232cmd.c 1293       
                       4443 ; rs232cmd.c 1294       /************************************************************************
                            **/
                       4444 ; rs232cmd.c 1295       /* RCLCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       4445 ; rs232cmd.c 1296       
                       4446 ; rs232cmd.c 1297       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                           */
                       4447 ; rs232cmd.c 1298       /* Revised:             Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                                  */
                       4448 ; rs232cmd.c 1299       
                       4449 ; rs232cmd.c 1300       
                       4450 ; rs232cmd.c 1301       
                       4451 ; rs232cmd.c 1302       
                       4452 ; rs232cmd.c 1303       
                       4453 ; rs232cmd.c 1304       /************************************************************************
                            **/
                       4454 ; rs232cmd.c 1305       void RCLCommand(void) 
                       4455 ; rs232cmd.c 1306       {
                       4456         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  71

ADDR   CODE            LINE SOURCELINE
                       4458         PUBLIC  _RCLCommand
000494                 4459 _RCLCommand:
000494 A97E            4463         ADDS.W  R7,#0EH
                       4466 ; rs232cmd.c 1307               int     Reg = 0;
000496 BA70            4468         MOV.W   [R7],#00H
                       4469 ; rs232cmd.c 1308       
                       4470 ; rs232cmd.c 1309               if ( CmdExecute && !SCPIError)
000498 964842rr        4472         MOV.B   ES,#SEG( _CmdExecute )
00049C 9908rrrr        4473         MOV.W   R0,#SOF( _CmdExecute )
0004A0 8200            4474         MOV.B   R0L,[R0]
0004A2 F34C            4475         BEQ     _89
0004A4 964842rr        4476         MOV.B   ES,#SEG( _SCPIError )
0004A8 9908rrrr        4477         MOV.W   R0,#SOF( _SCPIError )
0004AC 8A00            4478         MOV.W   R0,[R0]
0004AE F246            4479         BNE     _89
                       4480 ; rs232cmd.c 1310               {
                       4481 ; rs232cmd.c 1311                       if ( CmdRequest)
0004B0 964842rr        4483         MOV.B   ES,#SEG( _CmdRequest )
0004B4 9908rrrr        4484         MOV.W   R0,#SOF( _CmdRequest )
0004B8 8200            4485         MOV.B   R0L,[R0]
0004BA F306            4486         BEQ     _79
                       4487 ; rs232cmd.c 1312                       {
                       4488 ; rs232cmd.c 1313                               SCPIError = SyntaxErr;
0004BC 964842rr        4490         MOV.B   ES,#SEG( _SCPIError )
0004C0 9908rrrr        4491         MOV.W   R0,#SOF( _SCPIError )
0004C4 BA03            4492         MOV.W   [R0],#03H
                       4493 ; rs232cmd.c 1314                       }
0004C6 FE3A            4495         BR      _89
0004C6 FE3A            4495         BR      _89
0004C8                 4496 _79:
                       4497 ; rs232cmd.c 1315                       else
                       4498 ; rs232cmd.c 1316                       {
                       4499 ; rs232cmd.c 1317                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
0004C8 964842rr        4501         MOV.B   ES,#SEG( _ParCnt )
0004CC 9908rrrr        4502         MOV.W   R0,#SOF( _ParCnt )
0004D0 8200            4503         MOV.B   R0L,[R0]
0004D2 910401          4504         CMP.B   R0L,#01H
0004D5 F215            4505         BNE     _80
0004D7 9918rrrr        4506         MOV.W   R1,#SEG( _Cmd )
0004DB 9908rrrr        4507         MOV.W   R0,#SOF( _Cmd )
0004DF 9168rr          4508         MOV.B   R3L,#SEG( __lc_bs )
0004E2 7177            4509         XOR.B   R3H,R3H
0004E4 8927            4510         MOV.W   R2,R7
0004E6 0F0C            4511         PUSH.W  R2, R3
0004E8 9938rrrr        4513         MOV.W   R3,#SEG( _10 )
0004EC 9928rrrr        4514         MOV.W   R2,#SOF( _10 )
0004F0 0F0C            4515         PUSH.W  R2, R3
                       4517         CALL    _sscanf
0004F2 C4rrrrrr       +4517 ;       FCALL   _sscanf
0004F6 99700008        4518         ADD.W   R7,#08H
0004FA 99040001        4520         CMP.W   R0,#01H
0004FE F306            4521         BEQ     _81
0004FE F306            4521         BEQ     _81
000500                 4522 _80:
                       4523 ; rs232cmd.c 1318                               {
                       4524 ; rs232cmd.c 1319                                       SCPIError = SyntaxErr;  
000500 964842rr        4526         MOV.B   ES,#SEG( _SCPIError )
000504 9908rrrr        4527         MOV.W   R0,#SOF( _SCPIError )
000508 BA03            4528         MOV.W   [R0],#03H
                       4529 ; rs232cmd.c 1320                                       return;
00050A FE18            4531         BR      _89
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  72

ADDR   CODE            LINE SOURCELINE
                       4532 ; rs232cmd.c 1321                               }
00050C                 4534 _81:
                       4535 ; rs232cmd.c 1322       
                       4536 ; rs232cmd.c 1323                               if (( Reg == 0) || ( Reg > NoOfPresets))
00050C 8A07            4538         MOV.W   R0,[R7]
00050E F303            4539         BEQ     _82
000510 9A740004        4540         CMP.W   [R7],#04H
000514 FD07            4541         BLE     _83
000514 FD07            4541         BLE     _83
000516                 4542 _82:
                       4543 ; rs232cmd.c 1324                                       SCPIError = DataOutOfRange;
000516 964842rr        4545         MOV.B   ES,#SEG( _SCPIError )
00051A 9908rrrr        4546         MOV.W   R0,#SOF( _SCPIError )
00051E 9A080021        4547         MOV.W   [R0],#021H
000522 FE0C            4548         BR      _89
000522 FE0C            4548         BR      _89
000524                 4549 _83:
                       4550 ; rs232cmd.c 1325                               else
                       4551 ; rs232cmd.c 1326                               {
                       4552 ; rs232cmd.c 1327                                       if ( RecallPreset( Reg) != OK)
000524 8A07            4554         MOV.W   R0,[R7]
                       4555         CALL    _RecallPreset
000526 C4rrrrrr       +4555 ;       FCALL   _RecallPreset
00052A 9904FFFF        4556         CMP.W   R0,#0FFFFH
00052E F306            4557         BEQ     _89
                       4558 ; rs232cmd.c 1328                                               SCPIError = ExecErr;
000530 964842rr        4560         MOV.B   ES,#SEG( _SCPIError )
000534 9908rrrr        4561         MOV.W   R0,#SOF( _SCPIError )
000538 9A08001D        4562         MOV.W   [R0],#01DH
                       4563 ; rs232cmd.c 1329                               }
                       4564 ; rs232cmd.c 1330                       }
                       4565 ; rs232cmd.c 1331               }
                       4566 ; rs232cmd.c 1332       }
00053C                 4568 _89:
00053C A972            4569         ADDS.W  R7,#02H
00053E D680            4571         RET
                       4573 ; rs232cmd.c 1333       
                       4574 ; rs232cmd.c 1334       /************************************************************************
                            **/
                       4575 ; rs232cmd.c 1335       /* SAVCommand                                                            
                                                                                                                             
                                                                   RS232CMD.C */
                       4576 ; rs232cmd.c 1336       
                       4577 ; rs232cmd.c 1337       /* Author:              Sten A. Andersen/Thomas Kappelgaard, DEV, xxxxxx 
                                                                           */
                       4578 ; rs232cmd.c 1338       /* Revised:             Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                                  */
                       4579 ; rs232cmd.c 1339       
                       4580 ; rs232cmd.c 1340       
                       4581 ; rs232cmd.c 1341       
                       4582 ; rs232cmd.c 1342       
                       4583 ; rs232cmd.c 1343       
                       4584 ; rs232cmd.c 1344       /************************************************************************
                            **/
                       4585 ; rs232cmd.c 1345       void SAVCommand(void) 
                       4586 ; rs232cmd.c 1346       {
                       4587         ALIGN   1
                       4589         PUBLIC  _SAVCommand
000540                 4590 _SAVCommand:
000540 A97E            4594         ADDS.W  R7,#0EH
                       4597 ; rs232cmd.c 1347               int     Reg = 0;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  73

ADDR   CODE            LINE SOURCELINE
000542 BA70            4599         MOV.W   [R7],#00H
                       4600 ; rs232cmd.c 1348       
                       4601 ; rs232cmd.c 1349               if ( CmdExecute && !SCPIError)
000544 964842rr        4603         MOV.B   ES,#SEG( _CmdExecute )
000548 9908rrrr        4604         MOV.W   R0,#SOF( _CmdExecute )
00054C 8200            4605         MOV.B   R0L,[R0]
00054E F34C            4606         BEQ     _104
000550 964842rr        4607         MOV.B   ES,#SEG( _SCPIError )
000554 9908rrrr        4608         MOV.W   R0,#SOF( _SCPIError )
000558 8A00            4609         MOV.W   R0,[R0]
00055A F246            4610         BNE     _104
                       4611 ; rs232cmd.c 1350               {
                       4612 ; rs232cmd.c 1351                       if ( CmdRequest)
00055C 964842rr        4614         MOV.B   ES,#SEG( _CmdRequest )
000560 9908rrrr        4615         MOV.W   R0,#SOF( _CmdRequest )
000564 8200            4616         MOV.B   R0L,[R0]
000566 F306            4617         BEQ     _94
                       4618 ; rs232cmd.c 1352                               SCPIError = SyntaxErr;
000568 964842rr        4620         MOV.B   ES,#SEG( _SCPIError )
00056C 9908rrrr        4621         MOV.W   R0,#SOF( _SCPIError )
000570 BA03            4622         MOV.W   [R0],#03H
000572 FE3A            4623         BR      _104
000572 FE3A            4623         BR      _104
000574                 4624 _94:
                       4625 ; rs232cmd.c 1353                       else
                       4626 ; rs232cmd.c 1354                       {
                       4627 ; rs232cmd.c 1355                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) 
                            != 1))
000574 964842rr        4629         MOV.B   ES,#SEG( _ParCnt )
000578 9908rrrr        4630         MOV.W   R0,#SOF( _ParCnt )
00057C 8200            4631         MOV.B   R0L,[R0]
00057E 910401          4632         CMP.B   R0L,#01H
000581 F215            4633         BNE     _95
000583 9918rrrr        4634         MOV.W   R1,#SEG( _Cmd )
000587 9908rrrr        4635         MOV.W   R0,#SOF( _Cmd )
00058B 9168rr          4636         MOV.B   R3L,#SEG( __lc_bs )
00058E 7177            4637         XOR.B   R3H,R3H
000590 8927            4638         MOV.W   R2,R7
000592 0F0C            4639         PUSH.W  R2, R3
000594 9938rrrr        4641         MOV.W   R3,#SEG( _10 )
000598 9928rrrr        4642         MOV.W   R2,#SOF( _10 )
00059C 0F0C            4643         PUSH.W  R2, R3
                       4645         CALL    _sscanf
00059E C4rrrrrr       +4645 ;       FCALL   _sscanf
0005A2 99700008        4646         ADD.W   R7,#08H
0005A6 99040001        4648         CMP.W   R0,#01H
0005AA F306            4649         BEQ     _96
0005AA F306            4649         BEQ     _96
0005AC                 4650 _95:
                       4651 ; rs232cmd.c 1356                               {
                       4652 ; rs232cmd.c 1357                                       SCPIError = SyntaxErr;  
0005AC 964842rr        4654         MOV.B   ES,#SEG( _SCPIError )
0005B0 9908rrrr        4655         MOV.W   R0,#SOF( _SCPIError )
0005B4 BA03            4656         MOV.W   [R0],#03H
                       4657 ; rs232cmd.c 1358                                       return;
0005B6 FE18            4659         BR      _104
                       4660 ; rs232cmd.c 1359                               }
0005B8                 4662 _96:
                       4663 ; rs232cmd.c 1360       
                       4664 ; rs232cmd.c 1361                               if (( Reg == 0) || ( Reg > NoOfPresets))
0005B8 8A07            4666         MOV.W   R0,[R7]
0005BA F303            4667         BEQ     _97
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  74

ADDR   CODE            LINE SOURCELINE
0005BC 9A740004        4668         CMP.W   [R7],#04H
0005C0 FD07            4669         BLE     _98
0005C0 FD07            4669         BLE     _98
0005C2                 4670 _97:
                       4671 ; rs232cmd.c 1362                                       SCPIError = DataOutOfRange;
0005C2 964842rr        4673         MOV.B   ES,#SEG( _SCPIError )
0005C6 9908rrrr        4674         MOV.W   R0,#SOF( _SCPIError )
0005CA 9A080021        4675         MOV.W   [R0],#021H
0005CE FE0C            4676         BR      _104
0005CE FE0C            4676         BR      _104
0005D0                 4677 _98:
                       4678 ; rs232cmd.c 1363                               else
                       4679 ; rs232cmd.c 1364                               {
                       4680 ; rs232cmd.c 1365                                       if ( StorePreset( Reg) != OK)
0005D0 8A07            4682         MOV.W   R0,[R7]
                       4683         CALL    _StorePreset
0005D2 C4rrrrrr       +4683 ;       FCALL   _StorePreset
0005D6 9904FFFF        4684         CMP.W   R0,#0FFFFH
0005DA F306            4685         BEQ     _104
                       4686 ; rs232cmd.c 1366                                               SCPIError = ExecErr;
0005DC 964842rr        4688         MOV.B   ES,#SEG( _SCPIError )
0005E0 9908rrrr        4689         MOV.W   R0,#SOF( _SCPIError )
0005E4 9A08001D        4690         MOV.W   [R0],#01DH
                       4691 ; rs232cmd.c 1367                               }
                       4692 ; rs232cmd.c 1368                       }
                       4693 ; rs232cmd.c 1369               }
                       4694 ; rs232cmd.c 1370       }
0005E8                 4696 _104:
0005E8 A972            4697         ADDS.W  R7,#02H
0005EA D680            4699         RET
                       4701 ; rs232cmd.c 1371       
                       4702 ; rs232cmd.c 1372       /************************************************************************
                            **/
                       4703 ; rs232cmd.c 1373       /* SystemError                                                           
                                                                                                                             
                                                           RS232CMD.C */
                       4704 ; rs232cmd.c 1374       
                       4705 ; rs232cmd.c 1375       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       4706 ; rs232cmd.c 1376       /* Revised:             000401                                           
                                                                                                                             
                                                                                  */
                       4707 ; rs232cmd.c 1377       
                       4708 ; rs232cmd.c 1378       /* Function:    Write the next entry in the error queue (FIFO) to RS232  
                                           */
                       4709 ; rs232cmd.c 1379       /* Remarks:             No parameters, Query only                        
                                                                                                                             
                                                  */
                       4710 ; rs232cmd.c 1380       
                       4711 ; rs232cmd.c 1381       
                       4712 ; rs232cmd.c 1382       /************************************************************************
                            **/
                       4713 ; rs232cmd.c 1383       void SystemError( void)
                       4714 ; rs232cmd.c 1384       {
                       4715         ALIGN   1
                       4717         PUBLIC  _SystemError
0005EC                 4718 _SystemError:
0005EC 0F30            4722         PUSH.W  R4, R5
0005EE 9972000C        4724         SUB.W   R7,#0CH
                       4732 ; rs232cmd.c 1385               int i;
                       4733 ; rs232cmd.c 1386               code char *ptr;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  75

ADDR   CODE            LINE SOURCELINE
                       4734 ; rs232cmd.c 1387               char buf[12];
                       4735 ; rs232cmd.c 1388       
                       4736 ; rs232cmd.c 1389               if ( CmdExecute && !SCPIError)
0005F2 964842rr        4738         MOV.B   ES,#SEG( _CmdExecute )
0005F6 9908rrrr        4739         MOV.W   R0,#SOF( _CmdExecute )
0005FA 8200            4740         MOV.B   R0L,[R0]
0005FC F377            4741         BEQ     _119
0005FE 964842rr        4742         MOV.B   ES,#SEG( _SCPIError )
000602 9908rrrr        4743         MOV.W   R0,#SOF( _SCPIError )
000606 8A00            4744         MOV.W   R0,[R0]
000608 F271            4745         BNE     _119
                       4746 ; rs232cmd.c 1390               {
                       4747 ; rs232cmd.c 1391                       if ( CmdRequest)
00060A 964842rr        4749         MOV.B   ES,#SEG( _CmdRequest )
00060E 9908rrrr        4750         MOV.W   R0,#SOF( _CmdRequest )
000612 8200            4751         MOV.B   R0L,[R0]
000614 F366            4752         BEQ     _114
                       4753 ; rs232cmd.c 1392                       {
                       4754 ; rs232cmd.c 1393                               if ( ParCnt > 0)
000616 964842rr        4756         MOV.B   ES,#SEG( _ParCnt )
00061A 9908rrrr        4757         MOV.W   R0,#SOF( _ParCnt )
00061E 8200            4758         MOV.B   R0L,[R0]
000620 910400          4759         CMP.B   R0L,#00H
000623 F907            4760         BL      _111
                       4761 ; rs232cmd.c 1394                                       SCPIError = ParNotAllowed;
000625 964842rr        4763         MOV.B   ES,#SEG( _SCPIError )
000629 9908rrrr        4764         MOV.W   R0,#SOF( _SCPIError )
00062D BA06            4765         MOV.W   [R0],#06H
00062F FE5E            4766         BR      _119
00062F FE5E00          4766         BR      _119
000632                 4767 _111:
                       4768 ; rs232cmd.c 1395                               else
                       4769 ; rs232cmd.c 1396                               {
                       4770 ; rs232cmd.c 1397                                       if (( i = ReadErrorEventQueue()) >= 0)
                       4772         CALL    _ReadErrorEventQueue
000632 C4rrrrrr       +4772 ;       FCALL   _ReadErrorEventQueue
000636 8940            4773         MOV.W   R4,R0
000638 8910            4774         MOV.W   R1,R0
00063A 99140000        4775         CMP.W   R1,#00H
00063E FB56            4776         BLT     _119
                       4777 ; rs232cmd.c 1398                                       {
                       4778 ; rs232cmd.c 1399                                               sprintf( buf, "%d,\"", ErrorTxt_A
                            rray[i].ErrorNo);
000640 9128rr          4780         MOV.B   R1L,#SEG( __lc_bs )
000643 7133            4781         XOR.B   R1H,R1H
000645 8907            4782         MOV.W   R0,R7
000647 E9400006        4783         MULU.W  R4,#06H
00064B 8924            4784         MOV.W   R2,R4
00064D B930            4785         MOVS.W  R3,#00H
00064F 9918rrrr        4786         MOV.W   R1,#SEG( _ErrorTxt_Array )
000653 9908rrrr        4787         MOV.W   R0,#SOF( _ErrorTxt_Array )
000657 0902            4788         ADD.W   R0,R2
000659 1913            4789         ADDC.W  R1,R3
00065B 862C43          4790         MOV.B   CS,R1L
00065E 8810            4791         MOVC.W  R1,[R0+]
000660 0F02            4792         PUSH.W  R1
000662 9918rrrr        4794         MOV.W   R1,#SEG( _109 )
000666 9908rrrr        4795         MOV.W   R0,#SOF( _109 )
00066A 0F03            4796         PUSH.W  R0, R1
00066C 9128rr          4798         MOV.B   R1L,#SEG( __lc_bs )
00066F 7133            4799         XOR.B   R1H,R1H
000671 400706          4800         LEA     R0,R7+6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  76

ADDR   CODE            LINE SOURCELINE
                       4801         CALL    _sprintf
000674 C4rrrrrr       +4801 ;       FCALL   _sprintf
000678 A976            4802         ADDS.W  R7,#06H
                       4804 ; rs232cmd.c 1400                                               rs232puts( buf);
00067A 9128rr          4806         MOV.B   R1L,#SEG( __lc_bs )
00067D 7133            4807         XOR.B   R1H,R1H
00067F 8907            4808         MOV.W   R0,R7
                       4809         CALL    _rs232puts
000681 C4rrrrrr       +4809 ;       FCALL   _rs232puts
                       4810 ; rs232cmd.c 1401       
                       4811 ; rs232cmd.c 1402                                               ptr = ErrorTxt_Array[i].ErrorTxt;
                            
000685 8924            4813         MOV.W   R2,R4
000687 B930            4814         MOVS.W  R3,#00H
000689 9918rrrr        4815         MOV.W   R1,#SEG( _ErrorTxt_Array+2 )
00068D 9908rrrr        4816         MOV.W   R0,#SOF( _ErrorTxt_Array+2 )
000691 0902            4817         ADD.W   R0,R2
000693 1913            4818         ADDC.W  R1,R3
000695 862C43          4819         MOV.B   CS,R1L
000698 8820            4820         MOVC.W  R2,[R0+]
00069A 99040000        4821         CMP.W   R0,#00H
00069E F202            4822         BNE     _122
0006A0 A64143          4823         ADDS.B  CS,#01H
0006A0 A6414300        4823         ADDS.B  CS,#01H
0006A4                 4824 _122:
0006A4 8830            4825         MOVC.W  R3,[R0+]
0006A6 8953            4826         MOV.W   R5,R3
0006A8 8942            4827         MOV.W   R4,R2
                       4829 ; rs232cmd.c 1403       
                       4830 ; rs232cmd.c 1404                                               while ( *ptr)
0006AA 866C43          4832         MOV.B   CS,R3L
0006AD 8062            4833         MOVC.B  R3L,[R2+]
0006AF F312            4834         BEQ     _113
0006AF F31200          4834         BEQ     _113
0006B2                 4835 _112:
                       4836 ; rs232cmd.c 1405                                                       rs232putchar( *ptr++);
0006B2 8915            4838         MOV.W   R1,R5
0006B4 8904            4839         MOV.W   R0,R4
0006B6 862C43          4840         MOV.B   CS,R1L
0006B9 8020            4841         MOVC.B  R1L,[R0+]
0006BB 8102            4842         MOV.B   R0L,R1L
                       4843         CALL    _rs232putchar
0006BD C4rrrrrr       +4843 ;       FCALL   _rs232putchar
0006C1 99400001        4844         ADD.W   R4,#01H
0006C5 99510000        4845         ADDC.W  R5,#00H
0006C9 8915            4849         MOV.W   R1,R5
0006CB 8904            4850         MOV.W   R0,R4
0006CD 862C43          4851         MOV.B   CS,R1L
0006D0 8020            4852         MOVC.B  R1L,[R0+]
0006D2 F2EF            4853         BNE     _112
0006D4                 4855 _113:
                       4856 ; rs232cmd.c 1406       
                       4857 ; rs232cmd.c 1407                                                rs232puts( "\"\n");
0006D4 9918rrrr        4859         MOV.W   R1,#SEG( _110 )
0006D8 9908rrrr        4860         MOV.W   R0,#SOF( _110 )
                       4861         CALL    _rs232puts
0006DC C4rrrrrr       +4861 ;       FCALL   _rs232puts
                       4862 ; rs232cmd.c 1408                                       }
                       4863 ; rs232cmd.c 1409                               }
                       4864 ; rs232cmd.c 1410                       }
0006E0 FE05            4866         BR      _119
0006E0 FE05            4866         BR      _119
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  77

ADDR   CODE            LINE SOURCELINE
0006E2                 4867 _114:
                       4868 ; rs232cmd.c 1411                       else
                       4869 ; rs232cmd.c 1412                               SCPIError = SyntaxErr;
0006E2 964842rr        4871         MOV.B   ES,#SEG( _SCPIError )
0006E6 9908rrrr        4872         MOV.W   R0,#SOF( _SCPIError )
0006EA BA03            4873         MOV.W   [R0],#03H
                       4874 ; rs232cmd.c 1413               }
0006EC                 4876 _119:
                       4877 ; rs232cmd.c 1414       }
0006EC 9970000C        4879         ADD.W   R7,#0CH
0006F0 2F30            4881         POP.W   R4, R5
0006F2 D680            4883         RET
                       4886 ; rs232cmd.c 1415       
                       4887 ; rs232cmd.c 1416       /************************************************************************
                            **/
                       4888 ; rs232cmd.c 1417       /* SystemVersion                                                         
                                                                                                                             
                                                           RS232CMD.C */
                       4889 ; rs232cmd.c 1418       
                       4890 ; rs232cmd.c 1419       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       4891 ; rs232cmd.c 1420       /* Revised:             000401                                           
                                                                                                                             
                                                                                  */
                       4892 ; rs232cmd.c 1421       
                       4893 ; rs232cmd.c 1422       /* Function:    Write the SCPI version to RS232                          
                                                                                                                   */
                       4894 ; rs232cmd.c 1423       /* Remarks:             No parameter, Query only                         
                                                                                                                             
                                                  */
                       4895 ; rs232cmd.c 1424       
                       4896 ; rs232cmd.c 1425       
                       4897 ; rs232cmd.c 1426       /************************************************************************
                            **/
                       4898 ; rs232cmd.c 1427       void SystemVersion( void)
                       4899 ; rs232cmd.c 1428       {
                       4900         ALIGN   1
                       4902         PUBLIC  _SystemVersion
0006F4                 4903 _SystemVersion:
0006F4 0F30            4907         PUSH.W  R4, R5
                       4911 ; rs232cmd.c 1429               char code *str;
                       4912 ; rs232cmd.c 1430       
                       4913 ; rs232cmd.c 1431               if ( CmdExecute && !SCPIError)
0006F6 964842rr        4915         MOV.B   ES,#SEG( _CmdExecute )
0006FA 9908rrrr        4916         MOV.W   R0,#SOF( _CmdExecute )
0006FE 8200            4917         MOV.B   R0L,[R0]
000700 F33D            4918         BEQ     _130
000702 964842rr        4919         MOV.B   ES,#SEG( _SCPIError )
000706 9908rrrr        4920         MOV.W   R0,#SOF( _SCPIError )
00070A 8A00            4921         MOV.W   R0,[R0]
00070C F237            4922         BNE     _130
                       4923 ; rs232cmd.c 1432               {
                       4924 ; rs232cmd.c 1433                       if ( CmdRequest)
00070E 964842rr        4926         MOV.B   ES,#SEG( _CmdRequest )
000712 9908rrrr        4927         MOV.W   R0,#SOF( _CmdRequest )
000716 8200            4928         MOV.B   R0L,[R0]
000718 F32C            4929         BEQ     _126
                       4930 ; rs232cmd.c 1434                       {
                       4931 ; rs232cmd.c 1435                               if ( ParCnt)
00071A 964842rr        4933         MOV.B   ES,#SEG( _ParCnt )
00071E 9908rrrr        4934         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  78

ADDR   CODE            LINE SOURCELINE
000722 8200            4935         MOV.B   R0L,[R0]
000724 F306            4936         BEQ     _123
                       4937 ; rs232cmd.c 1436                                       SCPIError = ParNotAllowed;
000726 964842rr        4939         MOV.B   ES,#SEG( _SCPIError )
00072A 9908rrrr        4940         MOV.W   R0,#SOF( _SCPIError )
00072E BA06            4941         MOV.W   [R0],#06H
000730 FE25            4942         BR      _130
000730 FE25            4942         BR      _130
000732                 4943 _123:
                       4944 ; rs232cmd.c 1437                               else
                       4945 ; rs232cmd.c 1438                               {
                       4946 ; rs232cmd.c 1439                                       str = SystemVersionTxt;
000732 9958rrrr        4948         MOV.W   R5,#SEG( _SystemVersionTxt )
000736 9948rrrr        4949         MOV.W   R4,#SOF( _SystemVersionTxt )
                       4951 ; rs232cmd.c 1440       
                       4952 ; rs232cmd.c 1441                                       while ( *str)
00073A 964843rr        4954         MOV.B   CS,#SEG( _SystemVersionTxt )
00073E 9908rrrr        4955         MOV.W   R0,#SOF( _SystemVersionTxt )
000742 8020            4956         MOVC.B  R1L,[R0+]
000744 F311            4957         BEQ     _125
000744 F311            4957         BEQ     _125
000746                 4958 _124:
                       4959 ; rs232cmd.c 1442                                               rs232putchar( *str++);
000746 8915            4961         MOV.W   R1,R5
000748 8904            4962         MOV.W   R0,R4
00074A 862C43          4963         MOV.B   CS,R1L
00074D 8020            4964         MOVC.B  R1L,[R0+]
00074F 8102            4965         MOV.B   R0L,R1L
                       4966         CALL    _rs232putchar
000751 C4rrrrrr       +4966 ;       FCALL   _rs232putchar
000755 99400001        4967         ADD.W   R4,#01H
000759 99510000        4968         ADDC.W  R5,#00H
00075D 8915            4972         MOV.W   R1,R5
00075F 8904            4973         MOV.W   R0,R4
000761 862C43          4974         MOV.B   CS,R1L
000764 8020            4975         MOVC.B  R1L,[R0+]
000766 F2EF            4976         BNE     _124
000768                 4978 _125:
                       4979 ; rs232cmd.c 1443       
                       4980 ; rs232cmd.c 1444                                       rs232putchar( '\n');
000768 91080A          4982         MOV.B   R0L,#0AH
                       4983         CALL    _rs232putchar
00076B C4rrrrrr       +4983 ;       FCALL   _rs232putchar
                       4984 ; rs232cmd.c 1445                               }
                       4985 ; rs232cmd.c 1446                       }
00076F FE06            4987         BR      _130
00076F FE0600          4987         BR      _130
000772                 4988 _126:
                       4989 ; rs232cmd.c 1447                       else
                       4990 ; rs232cmd.c 1448                               SCPIError = SyntaxErr;
000772 964842rr        4992         MOV.B   ES,#SEG( _SCPIError )
000776 9908rrrr        4993         MOV.W   R0,#SOF( _SCPIError )
00077A BA03            4994         MOV.W   [R0],#03H
                       4995 ; rs232cmd.c 1449               }
00077C                 4997 _130:
                       4998 ; rs232cmd.c 1450       }
00077C 2F30            5000         POP.W   R4, R5
00077E D680            5002         RET
                       5005 ; rs232cmd.c 1451       
                       5006 ; rs232cmd.c 1452       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  79

ADDR   CODE            LINE SOURCELINE
                       5007 ; rs232cmd.c 1453       /* SystemPresetName                                            RS232CMD.C
                             */
                       5008 ; rs232cmd.c 1454       /* Author:              Kim Engedahl, DEV, 970206                        
                             */
                       5009 ; rs232cmd.c 1455       /* Revised:             000503                                           
                             */
                       5010 ; rs232cmd.c 1456       /* Function:    Name a specific preset number.                           
                             */
                       5011 ; rs232cmd.c 1457       /* Remarks:     the scanf function can not used MaxPresetNameLength, i.e.
                             */
                       5012 ; rs232cmd.c 1458       /*              this define should be inserted as a value. The value is  
                             */
                       5013 ; rs232cmd.c 1459       /*              defined in INSTRU.H 
                       5014 ; rs232cmd.c 1460       /*              MaxPresetNameLength changed to 16: JK                    
                             */
                       5015 ; rs232cmd.c 1461       /************************************************************************
                            **/
                       5016 ; rs232cmd.c 1462       void SystemPresetName( void)
                       5017 ; rs232cmd.c 1463         {
                       5018         ALIGN   1
                       5033         PUBLIC  _SystemPresetName
000780                 5034 _SystemPresetName:
000780 0F30            5038         PUSH.W  R4, R5
000782 99720082        5040         SUB.W   R7,#082H
                       5045 ; rs232cmd.c 1464         int Reg;
                       5046 ; rs232cmd.c 1465         char Name[MaxPresetNameLength];
                       5047 ; rs232cmd.c 1466         PresetObject Preset;
                       5048 ; rs232cmd.c 1467       
                       5049 ; rs232cmd.c 1468         if ( CmdExecute && !SCPIError)
000786 964842rr        5051         MOV.B   ES,#SEG( _CmdExecute )
00078A 9908rrrr        5052         MOV.W   R0,#SOF( _CmdExecute )
00078E 8200            5053         MOV.B   R0L,[R0]
                       5054         BEQ     _149
000790 F202           +5054 ;       BNE     _LG_154
000792 D500C8         +5054 ;       JMP.L   _149
000792 D500C800       +5054 ;       JMP.L   _149
000796                +5054 _LG_154:
000796 964842rr        5055         MOV.B   ES,#SEG( _SCPIError )
00079A 9908rrrr        5056         MOV.W   R0,#SOF( _SCPIError )
00079E 8A00            5057         MOV.W   R0,[R0]
                       5058         BNE     _149
0007A0 F302           +5058 ;       BEQ     _LG_156
0007A2 D500C0         +5058 ;       JMP.L   _149
0007A2 D500C000       +5058 ;       JMP.L   _149
0007A6                +5058 _LG_156:
                       5059 ; rs232cmd.c 1469           {
                       5060 ; rs232cmd.c 1470           if ( CmdRequest)
0007A6 964842rr        5062         MOV.B   ES,#SEG( _CmdRequest )
0007AA 9908rrrr        5063         MOV.W   R0,#SOF( _CmdRequest )
0007AE 8200            5064         MOV.B   R0L,[R0]
0007B0 F34B            5065         BEQ     _136
                       5066 ; rs232cmd.c 1471             {
                       5067 ; rs232cmd.c 1472             if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) != 1))
0007B2 964842rr        5069         MOV.B   ES,#SEG( _ParCnt )
0007B6 9908rrrr        5070         MOV.W   R0,#SOF( _ParCnt )
0007BA 8200            5071         MOV.B   R0L,[R0]
0007BC 910401          5072         CMP.B   R0L,#01H
0007BF F215            5073         BNE     _132
0007C1 9918rrrr        5074         MOV.W   R1,#SEG( _Cmd )
0007C5 9908rrrr        5075         MOV.W   R0,#SOF( _Cmd )
0007C9 9168rr          5076         MOV.B   R3L,#SEG( __lc_bs )
0007CC 7177            5077         XOR.B   R3H,R3H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  80

ADDR   CODE            LINE SOURCELINE
0007CE 8927            5078         MOV.W   R2,R7
0007D0 0F0C            5079         PUSH.W  R2, R3
0007D2 9938rrrr        5081         MOV.W   R3,#SEG( _10 )
0007D6 9928rrrr        5082         MOV.W   R2,#SOF( _10 )
0007DA 0F0C            5083         PUSH.W  R2, R3
                       5085         CALL    _sscanf
0007DC C4rrrrrr       +5085 ;       FCALL   _sscanf
0007E0 99700008        5086         ADD.W   R7,#08H
0007E4 99040001        5088         CMP.W   R0,#01H
0007E8 F307            5089         BEQ     _133
0007E8 F307            5089         BEQ     _133
0007EA                 5090 _132:
                       5091 ; rs232cmd.c 1473               SCPIError = SyntaxErr;
0007EA 964842rr        5093         MOV.B   ES,#SEG( _SCPIError )
0007EE 9908rrrr        5094         MOV.W   R0,#SOF( _SCPIError )
0007F2 BA03            5095         MOV.W   [R0],#03H
                       5096         BR      _149
0007F4 D50097         +5096         JMP.L   _149
0007F4 D5009700       +5096         JMP.L   _149
0007F8                 5097 _133:
                       5098 ; rs232cmd.c 1474             else
                       5099 ; rs232cmd.c 1475               {
                       5100 ; rs232cmd.c 1476               if (( Reg == 0) || ( Reg > NoOfPresets))
0007F8 8A07            5102         MOV.W   R0,[R7]
0007FA F303            5103         BEQ     _134
0007FC 9A740004        5104         CMP.W   [R7],#04H
000800 FD08            5105         BLE     _135
000800 FD08            5105         BLE     _135
000802                 5106 _134:
                       5107 ; rs232cmd.c 1477                 SCPIError = DataOutOfRange;
000802 964842rr        5109         MOV.B   ES,#SEG( _SCPIError )
000806 9908rrrr        5110         MOV.W   R0,#SOF( _SCPIError )
00080A 9A080021        5111         MOV.W   [R0],#021H
                       5112         BR      _149
00080E D5008A         +5112         JMP.L   _149
00080E D5008A00       +5112         JMP.L   _149
000812                 5113 _135:
                       5114 ; rs232cmd.c 1478               else
                       5115 ; rs232cmd.c 1479                 {
                       5116 ; rs232cmd.c 1480                 NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000812 91A8rr          5118         MOV.B   R5L,#SEG( __lc_bs )
000815 71BB            5119         XOR.B   R5H,R5H
000817 404714          5120         LEA     R4,R7+20
00081A 8A07            5121         MOV.W   R0,[R7]
00081C D901            5122         ASL.W   R0,#01H
00081E 8920            5123         MOV.W   R2,R0
000820 B930            5124         MOVS.W  R3,#00H
000822 964842rr        5125         MOV.B   ES,#SEG( _PresetPtr+-2 )
000826 8D22rrrr        5126         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
00082A 9938006E        5127         MOV.W   R3,#06EH
00082E 8915            5128         MOV.W   R1,R5
000830 8904            5129         MOV.W   R0,R4
                       5130         CALL    _NV_Recall
000832 C4rrrrrr       +5130 ;       FCALL   _NV_Recall
                       5131 ; rs232cmd.c 1481       
                       5132 ; rs232cmd.c 1482                 rs232puts( Preset.Name);
000836 8915            5134         MOV.W   R1,R5
000838 8904            5135         MOV.W   R0,R4
                       5136         CALL    _rs232puts
00083A C4rrrrrr       +5136 ;       FCALL   _rs232puts
                       5137 ; rs232cmd.c 1483                 rs232putchar( '\n');
00083E 91080A          5139         MOV.B   R0L,#0AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  81

ADDR   CODE            LINE SOURCELINE
                       5140         CALL    _rs232putchar
000841 C4rrrrrr       +5140 ;       FCALL   _rs232putchar
                       5141 ; rs232cmd.c 1484                 }
                       5142 ; rs232cmd.c 1485               }
                       5143 ; rs232cmd.c 1486             }
000845 FE6F            5145         BR      _149
000845 FE6F00          5145         BR      _149
000848                 5146 _136:
                       5147 ; rs232cmd.c 1487           else
                       5148 ; rs232cmd.c 1488             {
                       5149 ; rs232cmd.c 1489             // The second parameter, the string, in scanf
                       5150 ; rs232cmd.c 1490             // should be limited to the definition of
                       5151 ; rs232cmd.c 1491             // MaxPresetNameLength
                       5152 ; rs232cmd.c 1492             if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%17s", &Reg, Name)) != 2)
                            )
000848 964842rr        5154         MOV.B   ES,#SEG( _ParCnt )
00084C 9908rrrr        5155         MOV.W   R0,#SOF( _ParCnt )
000850 8200            5156         MOV.B   R0L,[R0]
000852 910402          5157         CMP.B   R0L,#02H
000855 F220            5158         BNE     _137
000857 9918rrrr        5159         MOV.W   R1,#SEG( _Cmd )
00085B 9908rrrr        5160         MOV.W   R0,#SOF( _Cmd )
00085F 9168rr          5161         MOV.B   R3L,#SEG( __lc_bs )
000862 7177            5162         XOR.B   R3H,R3H
000864 8927            5163         MOV.W   R2,R7
000866 91A8rr          5164         MOV.B   R5L,#SEG( __lc_bs )
000869 71BB            5165         XOR.B   R5H,R5H
00086B 404702          5166         LEA     R4,R7+2
00086E 8935            5167         MOV.W   R3,R5
000870 8924            5168         MOV.W   R2,R4
000872 0F0C            5169         PUSH.W  R2, R3
000874 9168rr          5171         MOV.B   R3L,#SEG( __lc_bs )
000877 7177            5172         XOR.B   R3H,R3H
000879 402704          5173         LEA     R2,R7+4
00087C 0F0C            5174         PUSH.W  R2, R3
00087E 9938rrrr        5176         MOV.W   R3,#SEG( _131 )
000882 9928rrrr        5177         MOV.W   R2,#SOF( _131 )
000886 0F0C            5178         PUSH.W  R2, R3
                       5180         CALL    _sscanf
000888 C4rrrrrr       +5180 ;       FCALL   _sscanf
00088C 9970000C        5181         ADD.W   R7,#0CH
000890 99040002        5183         CMP.W   R0,#02H
000894 F306            5184         BEQ     _138
000894 F306            5184         BEQ     _138
000896                 5185 _137:
                       5186 ; rs232cmd.c 1493               SCPIError = SyntaxErr;
000896 964842rr        5188         MOV.B   ES,#SEG( _SCPIError )
00089A 9908rrrr        5189         MOV.W   R0,#SOF( _SCPIError )
00089E BA03            5190         MOV.W   [R0],#03H
0008A0 FE41            5191         BR      _149
0008A0 FE41            5191         BR      _149
0008A2                 5192 _138:
0008A2 8915            5193         MOV.W   R1,R5
0008A4 8904            5194         MOV.W   R0,R4
                       5195 ; rs232cmd.c 1494             else
                       5196 ; rs232cmd.c 1495               {
                       5197 ; rs232cmd.c 1496               if ( strlen( Name) == MaxPresetNameLength)
                       5199         CALL    _strlen
0008A6 C4rrrrrr       +5199 ;       FCALL   _strlen
0008AA 99040011        5200         CMP.W   R0,#011H
0008AE F206            5201         BNE     _139
                       5202 ; rs232cmd.c 1497                 SCPIError = SyntaxErr;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  82

ADDR   CODE            LINE SOURCELINE
0008B0 964842rr        5204         MOV.B   ES,#SEG( _SCPIError )
0008B4 9908rrrr        5205         MOV.W   R0,#SOF( _SCPIError )
0008B8 BA03            5206         MOV.W   [R0],#03H
0008BA FE34            5207         BR      _149
0008BA FE34            5207         BR      _149
0008BC                 5208 _139:
                       5209 ; rs232cmd.c 1498               else
                       5210 ; rs232cmd.c 1499                 {
                       5211 ; rs232cmd.c 1500                 if (( Reg == 0) || ( Reg > NoOfPresets))
0008BC 8A07            5213         MOV.W   R0,[R7]
0008BE F303            5214         BEQ     _140
0008C0 9A740004        5215         CMP.W   [R7],#04H
0008C4 FD07            5216         BLE     _141
0008C4 FD07            5216         BLE     _141
0008C6                 5217 _140:
                       5218 ; rs232cmd.c 1501                   SCPIError = DataOutOfRange;
0008C6 964842rr        5220         MOV.B   ES,#SEG( _SCPIError )
0008CA 9908rrrr        5221         MOV.W   R0,#SOF( _SCPIError )
0008CE 9A080021        5222         MOV.W   [R0],#021H
0008D2 FE28            5223         BR      _149
0008D2 FE28            5223         BR      _149
0008D4                 5224 _141:
                       5225 ; rs232cmd.c 1502                 else
                       5226 ; rs232cmd.c 1503                   {
                       5227 ; rs232cmd.c 1504                   NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
0008D4 91A8rr          5229         MOV.B   R5L,#SEG( __lc_bs )
0008D7 71BB            5230         XOR.B   R5H,R5H
0008D9 404714          5231         LEA     R4,R7+20
0008DC 8A07            5232         MOV.W   R0,[R7]
0008DE D901            5233         ASL.W   R0,#01H
0008E0 8920            5234         MOV.W   R2,R0
0008E2 B930            5235         MOVS.W  R3,#00H
0008E4 964842rr        5236         MOV.B   ES,#SEG( _PresetPtr+-2 )
0008E8 8D22rrrr        5237         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0008EC 9938006E        5238         MOV.W   R3,#06EH
0008F0 8915            5239         MOV.W   R1,R5
0008F2 8904            5240         MOV.W   R0,R4
                       5241         CALL    _NV_Recall
0008F4 C4rrrrrr       +5241 ;       FCALL   _NV_Recall
0008F8 8915            5242         MOV.W   R1,R5
0008FA 8904            5243         MOV.W   R0,R4
                       5244 ; rs232cmd.c 1505                   strcpy( Preset.Name, Name);
0008FC 9168rr          5246         MOV.B   R3L,#SEG( __lc_bs )
0008FF 7177            5247         XOR.B   R3H,R3H
000901 402702          5248         LEA     R2,R7+2
                       5249         CALL    _strcpy
000904 C4rrrrrr       +5249 ;       FCALL   _strcpy
                       5250 ; rs232cmd.c 1506                   NV_Store( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000908 8A07            5252         MOV.W   R0,[R7]
00090A D901            5253         ASL.W   R0,#01H
00090C 8920            5254         MOV.W   R2,R0
00090E B930            5255         MOVS.W  R3,#00H
000910 964842rr        5256         MOV.B   ES,#SEG( _PresetPtr+-2 )
000914 8D22rrrr        5257         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000918 8915            5258         MOV.W   R1,R5
00091A 8904            5259         MOV.W   R0,R4
00091C 9938006E        5260         MOV.W   R3,#06EH
                       5261         CALL    _NV_Store
000920 C4rrrrrr       +5261 ;       FCALL   _NV_Store
                       5262 ; rs232cmd.c 1507                   }
                       5263 ; rs232cmd.c 1508                 }
                       5264 ; rs232cmd.c 1509               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  83

ADDR   CODE            LINE SOURCELINE
                       5265 ; rs232cmd.c 1510             }
                       5266 ; rs232cmd.c 1511           }
000924                 5268 _149:
                       5269 ; rs232cmd.c 1512         }
000924 99700082        5271         ADD.W   R7,#082H
000928 2F30            5273         POP.W   R4, R5
00092A D680            5275         RET
                       5277 ; rs232cmd.c 1513       
                       5278 ; rs232cmd.c 1514       /************************************************************************
                            **/
                       5279 ; rs232cmd.c 1515       /* SystemPresetAuthor                                                    
                                                                                                                             
                                           RS232CMD.C */
                       5280 ; rs232cmd.c 1516       
                       5281 ; rs232cmd.c 1517       /* Author:              Kim Engedahl, DEV, 000502                        
                                                                                                                             
                                  */
                       5282 ; rs232cmd.c 1518       /* Revised:             000503                                           
                                                                                                                             
                                                                                  */
                       5283 ; rs232cmd.c 1519       
                       5284 ; rs232cmd.c 1520       /* Function:    Name the author of a specific preset number.             
                                                                           */
                       5285 ; rs232cmd.c 1521       /* Remarks:             the scanf function can not used MaxPresetAuthorLe
                            ngth, i.e.     */
                       5286 ; rs232cmd.c 1522       /*                                              this define should be ins
                            erted as a value. The value is                 */
                       5287 ; rs232cmd.c 1523       /*                                              defined in INSTRU.H      
                                                                                                                             
                                                                                          */
                       5288 ; rs232cmd.c 1524       
                       5289 ; rs232cmd.c 1525       
                       5290 ; rs232cmd.c 1526       /************************************************************************
                            **/
                       5291 ; rs232cmd.c 1527       void SystemPresetAuthor( void)
                       5292 ; rs232cmd.c 1528         {
                       5293         ALIGN   1
                       5295         PUBLIC  _SystemPresetAuthor
00092C                 5296 _SystemPresetAuthor:
00092C 0F30            5300         PUSH.W  R4, R5
00092E 99720082        5302         SUB.W   R7,#082H
                       5307 ; rs232cmd.c 1529         int Reg;
                       5308 ; rs232cmd.c 1530         char Author[MaxPresetAuthorLength];
                       5309 ; rs232cmd.c 1531         PresetObject Preset;
                       5310 ; rs232cmd.c 1532       
                       5311 ; rs232cmd.c 1533         if ( CmdExecute && !SCPIError)
000932 964842rr        5313         MOV.B   ES,#SEG( _CmdExecute )
000936 9908rrrr        5314         MOV.W   R0,#SOF( _CmdExecute )
00093A 8200            5315         MOV.B   R0L,[R0]
                       5316         BEQ     _174
00093C F202           +5316 ;       BNE     _LG_178
00093E D500C9         +5316 ;       JMP.L   _174
00093E D500C900       +5316 ;       JMP.L   _174
000942                +5316 _LG_178:
000942 964842rr        5317         MOV.B   ES,#SEG( _SCPIError )
000946 9908rrrr        5318         MOV.W   R0,#SOF( _SCPIError )
00094A 8A00            5319         MOV.W   R0,[R0]
                       5320         BNE     _174
00094C F302           +5320 ;       BEQ     _LG_180
00094E D500C1         +5320 ;       JMP.L   _174
00094E D500C100       +5320 ;       JMP.L   _174
000952                +5320 _LG_180:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  84

ADDR   CODE            LINE SOURCELINE
                       5321 ; rs232cmd.c 1534           {
                       5322 ; rs232cmd.c 1535           if ( CmdRequest)
000952 964842rr        5324         MOV.B   ES,#SEG( _CmdRequest )
000956 9908rrrr        5325         MOV.W   R0,#SOF( _CmdRequest )
00095A 8200            5326         MOV.B   R0L,[R0]
00095C F34A            5327         BEQ     _161
                       5328 ; rs232cmd.c 1536             {
                       5329 ; rs232cmd.c 1537             if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) != 1))
00095E 964842rr        5331         MOV.B   ES,#SEG( _ParCnt )
000962 9908rrrr        5332         MOV.W   R0,#SOF( _ParCnt )
000966 8200            5333         MOV.B   R0L,[R0]
000968 910401          5334         CMP.B   R0L,#01H
00096B F215            5335         BNE     _157
00096D 9918rrrr        5336         MOV.W   R1,#SEG( _Cmd )
000971 9908rrrr        5337         MOV.W   R0,#SOF( _Cmd )
000975 9168rr          5338         MOV.B   R3L,#SEG( __lc_bs )
000978 7177            5339         XOR.B   R3H,R3H
00097A 8927            5340         MOV.W   R2,R7
00097C 0F0C            5341         PUSH.W  R2, R3
00097E 9938rrrr        5343         MOV.W   R3,#SEG( _10 )
000982 9928rrrr        5344         MOV.W   R2,#SOF( _10 )
000986 0F0C            5345         PUSH.W  R2, R3
                       5347         CALL    _sscanf
000988 C4rrrrrr       +5347 ;       FCALL   _sscanf
00098C 99700008        5348         ADD.W   R7,#08H
000990 99040001        5350         CMP.W   R0,#01H
000994 F307            5351         BEQ     _158
000994 F307            5351         BEQ     _158
000996                 5352 _157:
                       5353 ; rs232cmd.c 1538               SCPIError = SyntaxErr;
000996 964842rr        5355         MOV.B   ES,#SEG( _SCPIError )
00099A 9908rrrr        5356         MOV.W   R0,#SOF( _SCPIError )
00099E BA03            5357         MOV.W   [R0],#03H
                       5358         BR      _174
0009A0 D50098         +5358         JMP.L   _174
0009A0 D5009800       +5358         JMP.L   _174
0009A4                 5359 _158:
                       5360 ; rs232cmd.c 1539             else
                       5361 ; rs232cmd.c 1540               {
                       5362 ; rs232cmd.c 1541               if (( Reg == 0) || ( Reg > NoOfPresets))
0009A4 8A07            5364         MOV.W   R0,[R7]
0009A6 F303            5365         BEQ     _159
0009A8 9A740004        5366         CMP.W   [R7],#04H
0009AC FD08            5367         BLE     _160
0009AC FD08            5367         BLE     _160
0009AE                 5368 _159:
                       5369 ; rs232cmd.c 1542                 SCPIError = DataOutOfRange;
0009AE 964842rr        5371         MOV.B   ES,#SEG( _SCPIError )
0009B2 9908rrrr        5372         MOV.W   R0,#SOF( _SCPIError )
0009B6 9A080021        5373         MOV.W   [R0],#021H
                       5374         BR      _174
0009BA D5008B         +5374         JMP.L   _174
0009BA D5008B00       +5374         JMP.L   _174
0009BE                 5375 _160:
                       5376 ; rs232cmd.c 1543               else
                       5377 ; rs232cmd.c 1544                 {
                       5378 ; rs232cmd.c 1545                 NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
0009BE 9128rr          5380         MOV.B   R1L,#SEG( __lc_bs )
0009C1 7133            5381         XOR.B   R1H,R1H
0009C3 400714          5382         LEA     R0,R7+20
0009C6 8A27            5383         MOV.W   R2,[R7]
0009C8 D921            5384         ASL.W   R2,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  85

ADDR   CODE            LINE SOURCELINE
0009CA B930            5385         MOVS.W  R3,#00H
0009CC 964842rr        5386         MOV.B   ES,#SEG( _PresetPtr+-2 )
0009D0 8D22rrrr        5387         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
0009D4 9938006E        5388         MOV.W   R3,#06EH
                       5389         CALL    _NV_Recall
0009D8 C4rrrrrr       +5389 ;       FCALL   _NV_Recall
                       5390 ; rs232cmd.c 1546       
                       5391 ; rs232cmd.c 1547                 rs232puts( Preset.Author);
0009DC 9128rr          5393         MOV.B   R1L,#SEG( __lc_bs )
0009DF 7133            5394         XOR.B   R1H,R1H
0009E1 400725          5395         LEA     R0,R7+37
                       5396         CALL    _rs232puts
0009E4 C4rrrrrr       +5396 ;       FCALL   _rs232puts
                       5397 ; rs232cmd.c 1548                 rs232putchar( '\n');
0009E8 91080A          5399         MOV.B   R0L,#0AH
                       5400         CALL    _rs232putchar
0009EB C4rrrrrr       +5400 ;       FCALL   _rs232putchar
                       5401 ; rs232cmd.c 1549                 }
                       5402 ; rs232cmd.c 1550               }
                       5403 ; rs232cmd.c 1551             }
0009EF FE71            5405         BR      _174
0009EF FE7100          5405         BR      _174
0009F2                 5406 _161:
                       5407 ; rs232cmd.c 1552           else
                       5408 ; rs232cmd.c 1553             {
                       5409 ; rs232cmd.c 1554             // The second parameter, the string, in scanf
                       5410 ; rs232cmd.c 1555             // should be limited to the definition of
                       5411 ; rs232cmd.c 1556             // MaxPresetAuthorLength
                       5412 ; rs232cmd.c 1557             if (( ParCnt != 2) || (( sscanf( Cmd, "%d,%17s", &Reg, Author)) != 
                            2))
0009F2 964842rr        5414         MOV.B   ES,#SEG( _ParCnt )
0009F6 9908rrrr        5415         MOV.W   R0,#SOF( _ParCnt )
0009FA 8200            5416         MOV.B   R0L,[R0]
0009FC 910402          5417         CMP.B   R0L,#02H
0009FF F220            5418         BNE     _162
000A01 9918rrrr        5419         MOV.W   R1,#SEG( _Cmd )
000A05 9908rrrr        5420         MOV.W   R0,#SOF( _Cmd )
000A09 9168rr          5421         MOV.B   R3L,#SEG( __lc_bs )
000A0C 7177            5422         XOR.B   R3H,R3H
000A0E 8927            5423         MOV.W   R2,R7
000A10 91A8rr          5424         MOV.B   R5L,#SEG( __lc_bs )
000A13 71BB            5425         XOR.B   R5H,R5H
000A15 404702          5426         LEA     R4,R7+2
000A18 8935            5427         MOV.W   R3,R5
000A1A 8924            5428         MOV.W   R2,R4
000A1C 0F0C            5429         PUSH.W  R2, R3
000A1E 9168rr          5431         MOV.B   R3L,#SEG( __lc_bs )
000A21 7177            5432         XOR.B   R3H,R3H
000A23 402704          5433         LEA     R2,R7+4
000A26 0F0C            5434         PUSH.W  R2, R3
000A28 9938rrrr        5436         MOV.W   R3,#SEG( _131 )
000A2C 9928rrrr        5437         MOV.W   R2,#SOF( _131 )
000A30 0F0C            5438         PUSH.W  R2, R3
                       5440         CALL    _sscanf
000A32 C4rrrrrr       +5440 ;       FCALL   _sscanf
000A36 9970000C        5441         ADD.W   R7,#0CH
000A3A 99040002        5443         CMP.W   R0,#02H
000A3E F306            5444         BEQ     _163
000A3E F306            5444         BEQ     _163
000A40                 5445 _162:
                       5446 ; rs232cmd.c 1558               SCPIError = SyntaxErr;
000A40 964842rr        5448         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  86

ADDR   CODE            LINE SOURCELINE
000A44 9908rrrr        5449         MOV.W   R0,#SOF( _SCPIError )
000A48 BA03            5450         MOV.W   [R0],#03H
000A4A FE43            5451         BR      _174
000A4A FE43            5451         BR      _174
000A4C                 5452 _163:
000A4C 8915            5453         MOV.W   R1,R5
000A4E 8904            5454         MOV.W   R0,R4
                       5455 ; rs232cmd.c 1559             else
                       5456 ; rs232cmd.c 1560               {
                       5457 ; rs232cmd.c 1561               if ( strlen( Author) == MaxPresetAuthorLength)
                       5459         CALL    _strlen
000A50 C4rrrrrr       +5459 ;       FCALL   _strlen
000A54 99040011        5460         CMP.W   R0,#011H
000A58 F206            5461         BNE     _164
                       5462 ; rs232cmd.c 1562                 SCPIError = SyntaxErr;
000A5A 964842rr        5464         MOV.B   ES,#SEG( _SCPIError )
000A5E 9908rrrr        5465         MOV.W   R0,#SOF( _SCPIError )
000A62 BA03            5466         MOV.W   [R0],#03H
000A64 FE36            5467         BR      _174
000A64 FE36            5467         BR      _174
000A66                 5468 _164:
                       5469 ; rs232cmd.c 1563               else
                       5470 ; rs232cmd.c 1564                 {
                       5471 ; rs232cmd.c 1565                 if (( Reg == 0) || ( Reg > NoOfPresets))
000A66 8A07            5473         MOV.W   R0,[R7]
000A68 F303            5474         BEQ     _165
000A6A 9A740004        5475         CMP.W   [R7],#04H
000A6E FD07            5476         BLE     _166
000A6E FD07            5476         BLE     _166
000A70                 5477 _165:
                       5478 ; rs232cmd.c 1566                   SCPIError = DataOutOfRange;
000A70 964842rr        5480         MOV.B   ES,#SEG( _SCPIError )
000A74 9908rrrr        5481         MOV.W   R0,#SOF( _SCPIError )
000A78 9A080021        5482         MOV.W   [R0],#021H
000A7C FE2A            5483         BR      _174
000A7C FE2A            5483         BR      _174
000A7E                 5484 _166:
                       5485 ; rs232cmd.c 1567                 else
                       5486 ; rs232cmd.c 1568                   {
                       5487 ; rs232cmd.c 1569                   NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000A7E 91A8rr          5489         MOV.B   R5L,#SEG( __lc_bs )
000A81 71BB            5490         XOR.B   R5H,R5H
000A83 404714          5491         LEA     R4,R7+20
000A86 8A07            5492         MOV.W   R0,[R7]
000A88 D901            5493         ASL.W   R0,#01H
000A8A 8920            5494         MOV.W   R2,R0
000A8C B930            5495         MOVS.W  R3,#00H
000A8E 964842rr        5496         MOV.B   ES,#SEG( _PresetPtr+-2 )
000A92 8D22rrrr        5497         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000A96 9938006E        5498         MOV.W   R3,#06EH
000A9A 8915            5499         MOV.W   R1,R5
000A9C 8904            5500         MOV.W   R0,R4
                       5501         CALL    _NV_Recall
000A9E C4rrrrrr       +5501 ;       FCALL   _NV_Recall
                       5502 ; rs232cmd.c 1570                   strcpy( Preset.Author, Author);
000AA2 9128rr          5504         MOV.B   R1L,#SEG( __lc_bs )
000AA5 7133            5505         XOR.B   R1H,R1H
000AA7 400725          5506         LEA     R0,R7+37
000AAA 9168rr          5507         MOV.B   R3L,#SEG( __lc_bs )
000AAD 7177            5508         XOR.B   R3H,R3H
000AAF 402702          5509         LEA     R2,R7+2
                       5510         CALL    _strcpy
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  87

ADDR   CODE            LINE SOURCELINE
000AB2 C4rrrrrr       +5510 ;       FCALL   _strcpy
                       5511 ; rs232cmd.c 1571                   NV_Store( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000AB6 8A07            5513         MOV.W   R0,[R7]
000AB8 D901            5514         ASL.W   R0,#01H
000ABA 8920            5515         MOV.W   R2,R0
000ABC B930            5516         MOVS.W  R3,#00H
000ABE 964842rr        5517         MOV.B   ES,#SEG( _PresetPtr+-2 )
000AC2 8D22rrrr        5518         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000AC6 8915            5519         MOV.W   R1,R5
000AC8 8904            5520         MOV.W   R0,R4
000ACA 9938006E        5521         MOV.W   R3,#06EH
                       5522         CALL    _NV_Store
000ACE C4rrrrrr       +5522 ;       FCALL   _NV_Store
                       5523 ; rs232cmd.c 1572                   }
                       5524 ; rs232cmd.c 1573                 }
                       5525 ; rs232cmd.c 1574               }
                       5526 ; rs232cmd.c 1575             }
                       5527 ; rs232cmd.c 1576           }
000AD2                 5529 _174:
                       5530 ; rs232cmd.c 1577         }
000AD2 99700082        5532         ADD.W   R7,#082H
000AD6 2F30            5534         POP.W   R4, R5
000AD8 D680            5536         RET
                       5538 ; rs232cmd.c 1578       
                       5539 ; rs232cmd.c 1579       /************************************************************************
                            **/
                       5540 ; rs232cmd.c 1580       /* SystemPresetDate                                                      
                                                                                                                             
                                                   RS232CMD.C */
                       5541 ; rs232cmd.c 1581       
                       5542 ; rs232cmd.c 1582       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                  */
                       5543 ; rs232cmd.c 1583       /* Revised:             001016                                           
                                                                                                                             
                                                                                  */
                       5544 ; rs232cmd.c 1584       
                       5545 ; rs232cmd.c 1585       
                       5546 ; rs232cmd.c 1586       
                       5547 ; rs232cmd.c 1587       
                       5548 ; rs232cmd.c 1588       
                       5549 ; rs232cmd.c 1589       /************************************************************************
                            **/
                       5550 ; rs232cmd.c 1590       void SystemPresetDate( void)
                       5551 ; rs232cmd.c 1591         {
                       5552         ALIGN   1
                       5554         PUBLIC  _SystemPresetDate
000ADA                 5555 _SystemPresetDate:
000ADA 0F30            5559         PUSH.W  R4, R5
000ADC 9972008A        5561         SUB.W   R7,#08AH
                       5570 ; rs232cmd.c 1592         int Reg;
                       5571 ; rs232cmd.c 1593         PresetObject Preset;
                       5572 ; rs232cmd.c 1594         UI year, month, day;
                       5573 ; rs232cmd.c 1595         char buffer[20];
                       5574 ; rs232cmd.c 1596       
                       5575 ; rs232cmd.c 1597         if ( CmdExecute && !SCPIError)
000AE0 964842rr        5577         MOV.B   ES,#SEG( _CmdExecute )
000AE4 9908rrrr        5578         MOV.W   R0,#SOF( _CmdExecute )
000AE8 8200            5579         MOV.B   R0L,[R0]
                       5580         BEQ     _201
000AEA F202           +5580 ;       BNE     _LG_202
000AEC D50129         +5580 ;       JMP.L   _201
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  88

ADDR   CODE            LINE SOURCELINE
000AEC D5012900       +5580 ;       JMP.L   _201
000AF0                +5580 _LG_202:
000AF0 964842rr        5581         MOV.B   ES,#SEG( _SCPIError )
000AF4 9908rrrr        5582         MOV.W   R0,#SOF( _SCPIError )
000AF8 8A00            5583         MOV.W   R0,[R0]
                       5584         BNE     _201
000AFA F302           +5584 ;       BEQ     _LG_204
000AFC D50121         +5584 ;       JMP.L   _201
000AFC D5012100       +5584 ;       JMP.L   _201
000B00                +5584 _LG_204:
                       5585 ; rs232cmd.c 1598           {
                       5586 ; rs232cmd.c 1599           if ( CmdRequest) /* SYST:PRES:DATE? 4 */
000B00 964842rr        5588         MOV.B   ES,#SEG( _CmdRequest )
000B04 9908rrrr        5589         MOV.W   R0,#SOF( _CmdRequest )
000B08 8200            5590         MOV.B   R0L,[R0]
                       5591         BEQ     _188
000B0A F202           +5591 ;       BNE     _LG_206
000B0C D50082         +5591 ;       JMP.L   _188
000B0C D5008200       +5591 ;       JMP.L   _188
000B10                +5591 _LG_206:
                       5592 ; rs232cmd.c 1600             {
                       5593 ; rs232cmd.c 1601             if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &Reg) != 1))
000B10 964842rr        5595         MOV.B   ES,#SEG( _ParCnt )
000B14 9908rrrr        5596         MOV.W   R0,#SOF( _ParCnt )
000B18 8200            5597         MOV.B   R0L,[R0]
000B1A 910401          5598         CMP.B   R0L,#01H
000B1D F215            5599         BNE     _184
000B1F 9918rrrr        5600         MOV.W   R1,#SEG( _Cmd )
000B23 9908rrrr        5601         MOV.W   R0,#SOF( _Cmd )
000B27 9168rr          5602         MOV.B   R3L,#SEG( __lc_bs )
000B2A 7177            5603         XOR.B   R3H,R3H
000B2C 8927            5604         MOV.W   R2,R7
000B2E 0F0C            5605         PUSH.W  R2, R3
000B30 9938rrrr        5607         MOV.W   R3,#SEG( _10 )
000B34 9928rrrr        5608         MOV.W   R2,#SOF( _10 )
000B38 0F0C            5609         PUSH.W  R2, R3
                       5611         CALL    _sscanf
000B3A C4rrrrrr       +5611 ;       FCALL   _sscanf
000B3E 99700008        5612         ADD.W   R7,#08H
000B42 99040001        5614         CMP.W   R0,#01H
000B46 F307            5615         BEQ     _185
000B46 F307            5615         BEQ     _185
000B48                 5616 _184:
                       5617 ; rs232cmd.c 1602               SCPIError = SyntaxErr;
000B48 964842rr        5619         MOV.B   ES,#SEG( _SCPIError )
000B4C 9908rrrr        5620         MOV.W   R0,#SOF( _SCPIError )
000B50 BA03            5621         MOV.W   [R0],#03H
                       5622         BR      _201
000B52 D500F6         +5622         JMP.L   _201
000B52 D500F600       +5622         JMP.L   _201
000B56                 5623 _185:
                       5624 ; rs232cmd.c 1603             else
                       5625 ; rs232cmd.c 1604               {
                       5626 ; rs232cmd.c 1605               if (( Reg == 0) || ( Reg > NoOfPresets))
000B56 8A07            5628         MOV.W   R0,[R7]
000B58 F303            5629         BEQ     _186
000B5A 9A740004        5630         CMP.W   [R7],#04H
000B5E FD08            5631         BLE     _187
000B5E FD08            5631         BLE     _187
000B60                 5632 _186:
                       5633 ; rs232cmd.c 1606                 SCPIError = DataOutOfRange;
000B60 964842rr        5635         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  89

ADDR   CODE            LINE SOURCELINE
000B64 9908rrrr        5636         MOV.W   R0,#SOF( _SCPIError )
000B68 9A080021        5637         MOV.W   [R0],#021H
                       5638         BR      _201
000B6C D500E9         +5638         JMP.L   _201
000B6C D500E900       +5638         JMP.L   _201
000B70                 5639 _187:
                       5640 ; rs232cmd.c 1607               else
                       5641 ; rs232cmd.c 1608                 {
                       5642 ; rs232cmd.c 1609                 NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000B70 9128rr          5644         MOV.B   R1L,#SEG( __lc_bs )
000B73 7133            5645         XOR.B   R1H,R1H
000B75 400702          5646         LEA     R0,R7+2
000B78 8A27            5647         MOV.W   R2,[R7]
000B7A D921            5648         ASL.W   R2,#01H
000B7C B930            5649         MOVS.W  R3,#00H
000B7E 964842rr        5650         MOV.B   ES,#SEG( _PresetPtr+-2 )
000B82 8D22rrrr        5651         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000B86 9938006E        5652         MOV.W   R3,#06EH
                       5653         CALL    _NV_Recall
000B8A C4rrrrrr       +5653 ;       FCALL   _NV_Recall
                       5654 ; rs232cmd.c 1610       
                       5655 ; rs232cmd.c 1611                 day = Preset.Date % 100;
000B8E 8C1726          5657         MOV.W   R1,[R7+38]
000B91 8C0724          5658         MOV.W   R0,[R7+36]
000B94 B930            5659         MOV.W   R3,#00H
000B96 99280064        5660         MOV.W   R2,#064H
000B9A 8C1F26          5661         MOV.W   [R7+38],R1
000B9D 8C0F24          5662         MOV.W   [R7+36],R0
000BA0 C4rrrrrr        5663         FCALL   __UMODL
000BA4 8C0F74          5664         MOV.W   [R7+116],R0
                       5665 ; rs232cmd.c 1612                 month = ( Preset.Date / 100) % 100;
000BA7 8C1726          5667         MOV.W   R1,[R7+38]
000BAA 8C0724          5668         MOV.W   R0,[R7+36]
000BAD B930            5669         MOV.W   R3,#00H
000BAF 99280064        5670         MOV.W   R2,#064H
000BB3 8953            5671         MOV.W   R5,R3
000BB5 8942            5672         MOV.W   R4,R2
000BB7 C4rrrrrr        5673         FCALL   __UDIVL
000BBB 8935            5674         MOV.W   R3,R5
000BBD 8924            5675         MOV.W   R2,R4
000BBF C4rrrrrr        5676         FCALL   __UMODL
000BC3 8C0F72          5677         MOV.W   [R7+114],R0
                       5678 ; rs232cmd.c 1613                 year = ( Preset.Date / 10000);
000BC6 B930            5680         MOV.W   R3,#00H
000BC8 99282710        5681         MOV.W   R2,#02710H
000BCC 8C1726          5682         MOV.W   R1,[R7+38]
000BCF 8C0724          5683         MOV.W   R0,[R7+36]
000BD2 C4rrrrrr        5684         FCALL   __UDIVL
000BD6 8C0F70          5685         MOV.W   [R7+112],R0
                       5686 ; rs232cmd.c 1614                 /* modifiers 2d below are mine, we want to have 2 digits always
                             */
                       5687 ; rs232cmd.c 1615                 sprintf( buffer, "%02d,%02d,%02d\n", year, month, day);
000BD9 91A8rr          5689         MOV.B   R5L,#SEG( __lc_bs )
000BDC 71BB            5690         XOR.B   R5H,R5H
000BDE 404776          5691         LEA     R4,R7+118
000BE1 8C0774          5692         MOV.W   R0,[R7+116]
000BE4 0F01            5693         PUSH.W  R0
000BE6 8C0774          5695         MOV.W   R0,[R7+116]
000BE9 0F01            5696         PUSH.W  R0
000BEB 8C0774          5698         MOV.W   R0,[R7+116]
000BEE 0F01            5699         PUSH.W  R0
000BF0 9918rrrr        5701         MOV.W   R1,#SEG( _182 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  90

ADDR   CODE            LINE SOURCELINE
000BF4 9908rrrr        5702         MOV.W   R0,#SOF( _182 )
000BF8 0F03            5703         PUSH.W  R0, R1
000BFA 8915            5705         MOV.W   R1,R5
000BFC 8904            5706         MOV.W   R0,R4
                       5707         CALL    _sprintf
000BFE C4rrrrrr       +5707 ;       FCALL   _sprintf
000C02 9970000A        5708         ADD.W   R7,#0AH
                       5710 ; rs232cmd.c 1616       
                       5711 ; rs232cmd.c 1617                 rs232puts( buffer);
000C06 8915            5713         MOV.W   R1,R5
000C08 8904            5714         MOV.W   R0,R4
                       5715         CALL    _rs232puts
000C0A C4rrrrrr       +5715 ;       FCALL   _rs232puts
                       5716 ; rs232cmd.c 1618                 }
                       5717 ; rs232cmd.c 1619               }
                       5718 ; rs232cmd.c 1620             }
                       5720         BR      _201
000C0E D50098         +5720         JMP.L   _201
000C0E D5009800       +5720         JMP.L   _201
000C12                 5721 _188:
                       5722 ; rs232cmd.c 1621           else  /* SYST:PRES:DATE 4 78 05 05 */
                       5723 ; rs232cmd.c 1622             {
                       5724 ; rs232cmd.c 1623             if (( ParCnt != 4) || (( sscanf( Cmd, "%d,%d,%d,%d", &Reg, &year, &
                            month, &day)) != 4))
000C12 964842rr        5726         MOV.B   ES,#SEG( _ParCnt )
000C16 9908rrrr        5727         MOV.W   R0,#SOF( _ParCnt )
000C1A 8200            5728         MOV.B   R0L,[R0]
000C1C 910404          5729         CMP.B   R0L,#04H
000C1F F228            5730         BNE     _189
000C21 9168rr          5731         MOV.B   R3L,#SEG( __lc_bs )
000C24 7177            5732         XOR.B   R3H,R3H
000C26 8927            5733         MOV.W   R2,R7
000C28 91A8rr          5734         MOV.B   R5L,#SEG( __lc_bs )
000C2B 71BB            5735         XOR.B   R5H,R5H
000C2D 404770          5736         LEA     R4,R7+112
000C30 9128rr          5737         MOV.B   R1L,#SEG( __lc_bs )
000C33 7133            5738         XOR.B   R1H,R1H
000C35 400772          5739         LEA     R0,R7+114
000C38 9128rr          5740         MOV.B   R1L,#SEG( __lc_bs )
000C3B 7133            5741         XOR.B   R1H,R1H
000C3D 400774          5742         LEA     R0,R7+116
000C40 0F03            5743         PUSH.W  R0, R1
000C42 9128rr          5745         MOV.B   R1L,#SEG( __lc_bs )
000C45 7133            5746         XOR.B   R1H,R1H
000C47 400776          5747         LEA     R0,R7+118
000C4A 0F03            5748         PUSH.W  R0, R1
000C4C 0F30            5750         PUSH.W  R4, R5
000C4E 0F0C            5752         PUSH.W  R2, R3
000C50 9938rrrr        5754         MOV.W   R3,#SEG( _183 )
000C54 9928rrrr        5755         MOV.W   R2,#SOF( _183 )
000C58 0F0C            5756         PUSH.W  R2, R3
000C5A 9918rrrr        5758         MOV.W   R1,#SEG( _Cmd )
000C5E 9908rrrr        5759         MOV.W   R0,#SOF( _Cmd )
                       5760         CALL    _sscanf
000C62 C4rrrrrr       +5760 ;       FCALL   _sscanf
000C66 99700014        5761         ADD.W   R7,#014H
000C6A 99040004        5763         CMP.W   R0,#04H
000C6E F306            5764         BEQ     _190
000C6E F306            5764         BEQ     _190
000C70                 5765 _189:
                       5766 ; rs232cmd.c 1624               SCPIError = SyntaxErr;
000C70 964842rr        5768         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  91

ADDR   CODE            LINE SOURCELINE
000C74 9908rrrr        5769         MOV.W   R0,#SOF( _SCPIError )
000C78 BA03            5770         MOV.W   [R0],#03H
000C7A FE62            5771         BR      _201
000C7A FE62            5771         BR      _201
000C7C                 5772 _190:
                       5773 ; rs232cmd.c 1625             else
                       5774 ; rs232cmd.c 1626               {
                       5775 ; rs232cmd.c 1627               if ( ValidateDate( year, month, day) == FAIL)
000C7C 8C0770          5777         MOV.W   R0,[R7+112]
000C7F 8C1772          5778         MOV.W   R1,[R7+114]
000C82 8C2774          5779         MOV.W   R2,[R7+116]
                       5780         CALL    _ValidateDate
000C85 C4rrrrrr       +5780 ;       FCALL   _ValidateDate
000C89 6900            5781         OR.W    R0,R0
000C8B F208            5782         BNE     _191
                       5783 ; rs232cmd.c 1628                 SCPIError = ExecErr;
000C8D 964842rr        5785         MOV.B   ES,#SEG( _SCPIError )
000C91 9908rrrr        5786         MOV.W   R0,#SOF( _SCPIError )
000C95 9A08001D        5787         MOV.W   [R0],#01DH
000C99 FE53            5788         BR      _201
000C99 FE5300          5788         BR      _201
000C9C                 5789 _191:
                       5790 ; rs232cmd.c 1629               else
                       5791 ; rs232cmd.c 1630                 {
                       5792 ; rs232cmd.c 1631                 if (( Reg == 0) || ( Reg > NoOfPresets))
000C9C 8A07            5794         MOV.W   R0,[R7]
000C9E F303            5795         BEQ     _192
000CA0 9A740004        5796         CMP.W   [R7],#04H
000CA4 FD07            5797         BLE     _193
000CA4 FD07            5797         BLE     _193
000CA6                 5798 _192:
                       5799 ; rs232cmd.c 1632                   SCPIError = DataOutOfRange;
000CA6 964842rr        5801         MOV.B   ES,#SEG( _SCPIError )
000CAA 9908rrrr        5802         MOV.W   R0,#SOF( _SCPIError )
000CAE 9A080021        5803         MOV.W   [R0],#021H
000CB2 FE46            5804         BR      _201
000CB2 FE46            5804         BR      _201
000CB4                 5805 _193:
                       5806 ; rs232cmd.c 1633                 else
                       5807 ; rs232cmd.c 1634                   {
                       5808 ; rs232cmd.c 1635                   NV_Recall( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000CB4 91A8rr          5810         MOV.B   R5L,#SEG( __lc_bs )
000CB7 71BB            5811         XOR.B   R5H,R5H
000CB9 404702          5812         LEA     R4,R7+2
000CBC 8A07            5813         MOV.W   R0,[R7]
000CBE D901            5814         ASL.W   R0,#01H
000CC0 8920            5815         MOV.W   R2,R0
000CC2 B930            5816         MOVS.W  R3,#00H
000CC4 964842rr        5817         MOV.B   ES,#SEG( _PresetPtr+-2 )
000CC8 8D22rrrr        5818         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000CCC 9938006E        5819         MOV.W   R3,#06EH
000CD0 8915            5820         MOV.W   R1,R5
000CD2 8904            5821         MOV.W   R0,R4
                       5822         CALL    _NV_Recall
000CD4 C4rrrrrr       +5822 ;       FCALL   _NV_Recall
                       5823 ; rs232cmd.c 1636                   /* cast below is mine: JK, otherwise we get overflow */
                       5824 ; rs232cmd.c 1637                   Preset.Date = (UL)day + 100 * (UL)month + 10000 * (UL)year;
000CD8 8C0774          5826         MOV.W   R0,[R7+116]
000CDB B910            5827         MOVS.W  R1,#00H
000CDD 8C2772          5828         MOV.W   R2,[R7+114]
000CE0 B930            5829         MOVS.W  R3,#00H
000CE2 8953            5830         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  92

ADDR   CODE            LINE SOURCELINE
000CE4 8942            5831         MOV.W   R4,R2
000CE6 DD42            5832         ASL.D   R4,#02H
000CE8 2942            5833         SUB.W   R4,R2
000CEA 3953            5834         SUBB.W  R5,R3
000CEC DD43            5835         ASL.D   R4,#03H
000CEE 0942            5836         ADD.W   R4,R2
000CF0 1953            5837         ADDC.W  R5,R3
000CF2 DD42            5838         ASL.D   R4,#02H
000CF4 0904            5839         ADD.W   R0,R4
000CF6 1915            5840         ADDC.W  R1,R5
000CF8 8C2770          5841         MOV.W   R2,[R7+112]
000CFB B930            5842         MOVS.W  R3,#00H
000CFD 8953            5843         MOV.W   R5,R3
000CFF 8942            5844         MOV.W   R4,R2
000D01 DD42            5845         ASL.D   R4,#02H
000D03 0942            5846         ADD.W   R4,R2
000D05 1953            5847         ADDC.W  R5,R3
000D07 DD43            5848         ASL.D   R4,#03H
000D09 2942            5849         SUB.W   R4,R2
000D0B 3953            5850         SUBB.W  R5,R3
000D0D DD44            5851         ASL.D   R4,#04H
000D0F 0942            5852         ADD.W   R4,R2
000D11 1953            5853         ADDC.W  R5,R3
000D13 DD44            5854         ASL.D   R4,#04H
000D15 0904            5855         ADD.W   R0,R4
000D17 1915            5856         ADDC.W  R1,R5
000D19 8C1F26          5857         MOV.W   [R7+38],R1
000D1C 8C0F24          5858         MOV.W   [R7+36],R0
                       5859 ; rs232cmd.c 1638                   NV_Store( &Preset, PresetPtr[Reg-1], sizeof( Preset));
000D1F 8A07            5861         MOV.W   R0,[R7]
000D21 D901            5862         ASL.W   R0,#01H
000D23 8920            5863         MOV.W   R2,R0
000D25 B930            5864         MOVS.W  R3,#00H
000D27 964842rr        5865         MOV.B   ES,#SEG( _PresetPtr+-2 )
000D2B 8D22rrrr        5866         MOV.W   R2,[R2+SOF( _PresetPtr+-2 )]
000D2F 9128rr          5867         MOV.B   R1L,#SEG( __lc_bs )
000D32 7133            5868         XOR.B   R1H,R1H
000D34 400702          5869         LEA     R0,R7+2
000D37 9938006E        5870         MOV.W   R3,#06EH
                       5871         CALL    _NV_Store
000D3B C4rrrrrr       +5871 ;       FCALL   _NV_Store
                       5872 ; rs232cmd.c 1639                   }
                       5873 ; rs232cmd.c 1640                 }                               
                       5874 ; rs232cmd.c 1641               }
                       5875 ; rs232cmd.c 1642             }
                       5876 ; rs232cmd.c 1643           }
000D40                 5878 _201:
                       5879 ; rs232cmd.c 1644         }
000D40 9970008A        5881         ADD.W   R7,#08AH
000D44 2F30            5883         POP.W   R4, R5
000D46 D680            5885         RET
                       5887 ; rs232cmd.c 1645       
                       5888 ; rs232cmd.c 1646       /************************************************************************
                            **/
                       5889 ; rs232cmd.c 1647       /* SystemPresetDownload                                                  
                                                                                                                             
                                   RS232CMD.C */
                       5890 ; rs232cmd.c 1648       
                       5891 ; rs232cmd.c 1649       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                  */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  93

ADDR   CODE            LINE SOURCELINE
                       5892 ; rs232cmd.c 1650       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       5893 ; rs232cmd.c 1651       
                       5894 ; rs232cmd.c 1652       /* Function:    Download a setup to a specific preset withouth disturbing
                                           */
                       5895 ; rs232cmd.c 1653       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                          */
                       5896 ; rs232cmd.c 1654       
                       5897 ; rs232cmd.c 1655       
                       5898 ; rs232cmd.c 1656       
                       5899 ; rs232cmd.c 1657       /************************************************************************
                            **/
                       5900 ; rs232cmd.c 1658       void SystemPresetDownload( void)
                       5901 ; rs232cmd.c 1659       {
                       5902         ALIGN   1
                       5904         PUBLIC  _SystemPresetDownload
000D48                 5905 _SystemPresetDownload:
                       5909 ; rs232cmd.c 1660               ;
                       5910 ; rs232cmd.c 1661       }
000D48 D680            5912         RET
                       5914 ; rs232cmd.c 1662       
                       5915 ; rs232cmd.c 1663       /************************************************************************
                            **/
                       5916 ; rs232cmd.c 1664       /* SystemPresetUpload                                                    
                                                                                                                             
                                           RS232CMD.C */
                       5917 ; rs232cmd.c 1665       
                       5918 ; rs232cmd.c 1666       /* Author:              Kim Engedahl, DEV, 000413                        
                                                                                                                             
                                  */
                       5919 ; rs232cmd.c 1667       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       5920 ; rs232cmd.c 1668       
                       5921 ; rs232cmd.c 1669       /* Function:    Upload a setup from a specific preset withouth disturbing
                                           */
                       5922 ; rs232cmd.c 1670       /*                                              the setting/function of t
                            he PT5201.                                                                                       
                                          */
                       5923 ; rs232cmd.c 1671       
                       5924 ; rs232cmd.c 1672       
                       5925 ; rs232cmd.c 1673       
                       5926 ; rs232cmd.c 1674       /************************************************************************
                            **/
                       5927 ; rs232cmd.c 1675       void SystemPresetUpload( void)
                       5928 ; rs232cmd.c 1676       {
                       5929         ALIGN   1
                       5931         PUBLIC  _SystemPresetUpload
000D4A                 5932 _SystemPresetUpload:
                       5936 ; rs232cmd.c 1677               ;
                       5937 ; rs232cmd.c 1678       }
000D4A D680            5939         RET
                       5941 ; rs232cmd.c 1679       
                       5942 ; rs232cmd.c 1680       /************************************************************************
                            **/
                       5943 ; rs232cmd.c 1681       /* StatusOperEvent                                                       
                                                                                                                             
                                                   RS232CMD.C */
                       5944 ; rs232cmd.c 1682       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  94

ADDR   CODE            LINE SOURCELINE
                       5945 ; rs232cmd.c 1683       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       5946 ; rs232cmd.c 1684       /* Revised:             000402                                           
                                                                                                                             
                                                                                  */
                       5947 ; rs232cmd.c 1685       
                       5948 ; rs232cmd.c 1686       /* Function:    Set/read the status operation event register             
                                                                           */
                       5949 ; rs232cmd.c 1687       /* Remarks:             Reading the event register clears it             
                                                                                                           */
                       5950 ; rs232cmd.c 1688       
                       5951 ; rs232cmd.c 1689       /* Updates:             OperEventReg                                     
                                                                                                                             
                                                                                  */
                       5952 ; rs232cmd.c 1690       /************************************************************************
                            **/
                       5953 ; rs232cmd.c 1691       void StatusOperEvent( void)
                       5954 ; rs232cmd.c 1692       {
                       5955         ALIGN   1
                       5957         PUBLIC  _StatusOperEvent
000D4C                 5958 _StatusOperEvent:
                       5962 ; rs232cmd.c 1693               if ( CmdExecute && !SCPIError)
000D4C 964842rr        5964         MOV.B   ES,#SEG( _CmdExecute )
000D50 9908rrrr        5965         MOV.W   R0,#SOF( _CmdExecute )
000D54 8200            5966         MOV.B   R0L,[R0]
000D56 F333            5967         BEQ     _213
000D58 964842rr        5968         MOV.B   ES,#SEG( _SCPIError )
000D5C 9908rrrr        5969         MOV.W   R0,#SOF( _SCPIError )
000D60 8A00            5970         MOV.W   R0,[R0]
000D62 F22D            5971         BNE     _213
                       5972 ; rs232cmd.c 1694               {
                       5973 ; rs232cmd.c 1695                       if ( ParCnt)
000D64 964842rr        5975         MOV.B   ES,#SEG( _ParCnt )
000D68 9908rrrr        5976         MOV.W   R0,#SOF( _ParCnt )
000D6C 8200            5977         MOV.B   R0L,[R0]
000D6E F306            5978         BEQ     _208
                       5979 ; rs232cmd.c 1696                               SCPIError = ParNotAllowed;
000D70 964842rr        5981         MOV.B   ES,#SEG( _SCPIError )
000D74 9908rrrr        5982         MOV.W   R0,#SOF( _SCPIError )
000D78 BA06            5983         MOV.W   [R0],#06H
000D7A D680            5984         RET
000D7A D680            5984         RET
000D7C                 5985 _208:
                       5986 ; rs232cmd.c 1697                       else
                       5987 ; rs232cmd.c 1698                       {
                       5988 ; rs232cmd.c 1699                               if ( CmdRequest) {
000D7C 964842rr        5990         MOV.B   ES,#SEG( _CmdRequest )
000D80 9908rrrr        5991         MOV.W   R0,#SOF( _CmdRequest )
000D84 8200            5992         MOV.B   R0L,[R0]
000D86 F316            5993         BEQ     _209
                       5994 ; rs232cmd.c 1700                                       rs232printf( 12, "%d\n", OperEventReg);
000D88 9908000C        5996         MOV.W   R0,#0CH
000D8C 964842rr        5997         MOV.B   ES,#SEG( _OperEventReg )
000D90 9918rrrr        5998         MOV.W   R1,#SOF( _OperEventReg )
000D94 8A11            5999         MOV.W   R1,[R1]
000D96 0F02            6000         PUSH.W  R1
000D98 9938rrrr        6002         MOV.W   R3,#SEG( _9 )
000D9C 9928rrrr        6003         MOV.W   R2,#SOF( _9 )
000DA0 0F0C            6004         PUSH.W  R2, R3
                       6006         CALL    _rs232printf
000DA2 C4rrrrrr       +6006 ;       FCALL   _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  95

ADDR   CODE            LINE SOURCELINE
000DA6 A976            6007         ADDS.W  R7,#06H
                       6009 ; rs232cmd.c 1701       
                       6010 ; rs232cmd.c 1702                                       OperEventReg = 0;
000DA8 964842rr        6012         MOV.B   ES,#SEG( _OperEventReg )
000DAC 9908rrrr        6013         MOV.W   R0,#SOF( _OperEventReg )
000DB0 BA00            6014         MOV.W   [R0],#00H
                       6015 ; rs232cmd.c 1703                               }
000DB2 D680            6017         RET
000DB2 D680            6017         RET
000DB4                 6018 _209:
                       6019 ; rs232cmd.c 1704                               else
                       6020 ; rs232cmd.c 1705                                       SCPIError = SyntaxErr;
000DB4 964842rr        6022         MOV.B   ES,#SEG( _SCPIError )
000DB8 9908rrrr        6023         MOV.W   R0,#SOF( _SCPIError )
000DBC BA03            6024         MOV.W   [R0],#03H
                       6025 ; rs232cmd.c 1706                       }
                       6026 ; rs232cmd.c 1707               }
000DBE                 6028 _213:
                       6029 ; rs232cmd.c 1708       }
000DBE D680            6031         RET
                       6033 ; rs232cmd.c 1709       
                       6034 ; rs232cmd.c 1710       /************************************************************************
                            **/
                       6035 ; rs232cmd.c 1711       /* StatusOperCondition                                                   
                                                                                                                             
                                   RS232CMD.C */
                       6036 ; rs232cmd.c 1712       
                       6037 ; rs232cmd.c 1713       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       6038 ; rs232cmd.c 1714       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       6039 ; rs232cmd.c 1715       
                       6040 ; rs232cmd.c 1716       /* Function:    Read the status questionable condition register          
                                                                   */
                       6041 ; rs232cmd.c 1717       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       6042 ; rs232cmd.c 1718       
                       6043 ; rs232cmd.c 1719       
                       6044 ; rs232cmd.c 1720       /************************************************************************
                            **/
                       6045 ; rs232cmd.c 1721       void StatusOperCondition( void)
                       6046 ; rs232cmd.c 1722       {
                       6047         ALIGN   1
                       6049         PUBLIC  _StatusOperCondition
000DC0                 6050 _StatusOperCondition:
                       6054 ; rs232cmd.c 1723               if ( CmdExecute && !SCPIError)
000DC0 964842rr        6056         MOV.B   ES,#SEG( _CmdExecute )
000DC4 9908rrrr        6057         MOV.W   R0,#SOF( _CmdExecute )
000DC8 8200            6058         MOV.B   R0L,[R0]
000DCA F32E            6059         BEQ     _219
000DCC 964842rr        6060         MOV.B   ES,#SEG( _SCPIError )
000DD0 9908rrrr        6061         MOV.W   R0,#SOF( _SCPIError )
000DD4 8A00            6062         MOV.W   R0,[R0]
000DD6 F228            6063         BNE     _219
                       6064 ; rs232cmd.c 1724               {
                       6065 ; rs232cmd.c 1725                       if ( ParCnt)
000DD8 964842rr        6067         MOV.B   ES,#SEG( _ParCnt )
000DDC 9908rrrr        6068         MOV.W   R0,#SOF( _ParCnt )
000DE0 8200            6069         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  96

ADDR   CODE            LINE SOURCELINE
000DE2 F306            6070         BEQ     _214
                       6071 ; rs232cmd.c 1726                               SCPIError = ParNotAllowed;
000DE4 964842rr        6073         MOV.B   ES,#SEG( _SCPIError )
000DE8 9908rrrr        6074         MOV.W   R0,#SOF( _SCPIError )
000DEC BA06            6075         MOV.W   [R0],#06H
000DEE D680            6076         RET
000DEE D680            6076         RET
000DF0                 6077 _214:
                       6078 ; rs232cmd.c 1727                       else
                       6079 ; rs232cmd.c 1728                       {
                       6080 ; rs232cmd.c 1729                               if ( CmdRequest)
000DF0 964842rr        6082         MOV.B   ES,#SEG( _CmdRequest )
000DF4 9908rrrr        6083         MOV.W   R0,#SOF( _CmdRequest )
000DF8 8200            6084         MOV.B   R0L,[R0]
000DFA F311            6085         BEQ     _215
                       6086 ; rs232cmd.c 1730                                       rs232printf( 12, "%d\n", OperConditionReg
                            );
000DFC 9908000C        6088         MOV.W   R0,#0CH
000E00 964842rr        6089         MOV.B   ES,#SEG( _OperConditionReg )
000E04 9918rrrr        6090         MOV.W   R1,#SOF( _OperConditionReg )
000E08 8A11            6091         MOV.W   R1,[R1]
000E0A 0F02            6092         PUSH.W  R1
000E0C 9938rrrr        6094         MOV.W   R3,#SEG( _9 )
000E10 9928rrrr        6095         MOV.W   R2,#SOF( _9 )
000E14 0F0C            6096         PUSH.W  R2, R3
                       6098         CALL    _rs232printf
000E16 C4rrrrrr       +6098 ;       FCALL   _rs232printf
000E1A A976            6099         ADDS.W  R7,#06H
000E1C D680            6101         RET
000E1C D680            6101         RET
000E1E                 6102 _215:
                       6103 ; rs232cmd.c 1731                               else
                       6104 ; rs232cmd.c 1732                                       SCPIError = SyntaxErr;
000E1E 964842rr        6106         MOV.B   ES,#SEG( _SCPIError )
000E22 9908rrrr        6107         MOV.W   R0,#SOF( _SCPIError )
000E26 BA03            6108         MOV.W   [R0],#03H
                       6109 ; rs232cmd.c 1733                       }
                       6110 ; rs232cmd.c 1734               }
000E28                 6112 _219:
                       6113 ; rs232cmd.c 1735       }
000E28 D680            6115         RET
                       6117 ; rs232cmd.c 1736       
                       6118 ; rs232cmd.c 1737       /************************************************************************
                            **/
                       6119 ; rs232cmd.c 1738       /* StatusOperEnable                                                      
                                                                                                                             
                                                   RS232CMD.C */
                       6120 ; rs232cmd.c 1739       
                       6121 ; rs232cmd.c 1740       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       6122 ; rs232cmd.c 1741       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       6123 ; rs232cmd.c 1742       
                       6124 ; rs232cmd.c 1743       /* Function:    Set/read the status operaion enable register             
                                                                           */
                       6125 ; rs232cmd.c 1744       
                       6126 ; rs232cmd.c 1745       
                       6127 ; rs232cmd.c 1746       
                       6128 ; rs232cmd.c 1747       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  97

ADDR   CODE            LINE SOURCELINE
                       6129 ; rs232cmd.c 1748       void StatusOperEnable( void)
                       6130 ; rs232cmd.c 1749       {
                       6131         ALIGN   1
                       6133         PUBLIC  _StatusOperEnable
000E2A                 6134 _StatusOperEnable:
000E2A A97C            6138         ADDS.W  R7,#0CH
                       6141 ; rs232cmd.c 1750               long    Reg;
                       6142 ; rs232cmd.c 1751       
                       6143 ; rs232cmd.c 1752               if ( CmdExecute && !SCPIError)
000E2C 964842rr        6145         MOV.B   ES,#SEG( _CmdExecute )
000E30 9908rrrr        6146         MOV.W   R0,#SOF( _CmdExecute )
000E34 8200            6147         MOV.B   R0L,[R0]
000E36 F364            6148         BEQ     _231
000E38 964842rr        6149         MOV.B   ES,#SEG( _SCPIError )
000E3C 9908rrrr        6150         MOV.W   R0,#SOF( _SCPIError )
000E40 8A00            6151         MOV.W   R0,[R0]
000E42 F25E            6152         BNE     _231
                       6153 ; rs232cmd.c 1753               {
                       6154 ; rs232cmd.c 1754                       if ( CmdRequest)
000E44 964842rr        6156         MOV.B   ES,#SEG( _CmdRequest )
000E48 9908rrrr        6157         MOV.W   R0,#SOF( _CmdRequest )
000E4C 8200            6158         MOV.B   R0L,[R0]
000E4E F31D            6159         BEQ     _222
                       6160 ; rs232cmd.c 1755                       {
                       6161 ; rs232cmd.c 1756                               if ( ParCnt)
000E50 964842rr        6163         MOV.B   ES,#SEG( _ParCnt )
000E54 9908rrrr        6164         MOV.W   R0,#SOF( _ParCnt )
000E58 8200            6165         MOV.B   R0L,[R0]
000E5A F306            6166         BEQ     _221
                       6167 ; rs232cmd.c 1757                                       SCPIError = ParNotAllowed;
000E5C 964842rr        6169         MOV.B   ES,#SEG( _SCPIError )
000E60 9908rrrr        6170         MOV.W   R0,#SOF( _SCPIError )
000E64 BA06            6171         MOV.W   [R0],#06H
000E66 FE4C            6172         BR      _231
000E66 FE4C            6172         BR      _231
000E68                 6173 _221:
                       6174 ; rs232cmd.c 1758                               else
                       6175 ; rs232cmd.c 1759                                       rs232printf( 12, "%d\n", OperEnableReg);
000E68 9908000C        6177         MOV.W   R0,#0CH
000E6C 964842rr        6178         MOV.B   ES,#SEG( _OperEnableReg )
000E70 9918rrrr        6179         MOV.W   R1,#SOF( _OperEnableReg )
000E74 8A11            6180         MOV.W   R1,[R1]
000E76 0F02            6181         PUSH.W  R1
000E78 9938rrrr        6183         MOV.W   R3,#SEG( _9 )
000E7C 9928rrrr        6184         MOV.W   R2,#SOF( _9 )
000E80 0F0C            6185         PUSH.W  R2, R3
                       6187         CALL    _rs232printf
000E82 C4rrrrrr       +6187 ;       FCALL   _rs232printf
000E86 A976            6188         ADDS.W  R7,#06H
                       6190 ; rs232cmd.c 1760                       }
000E88 FE3B            6192         BR      _231
000E88 FE3B            6192         BR      _231
000E8A                 6193 _222:
                       6194 ; rs232cmd.c 1761                       else
                       6195 ; rs232cmd.c 1762                       {
                       6196 ; rs232cmd.c 1763                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
000E8A 964842rr        6198         MOV.B   ES,#SEG( _ParCnt )
000E8E 9908rrrr        6199         MOV.W   R0,#SOF( _ParCnt )
000E92 8200            6200         MOV.B   R0L,[R0]
000E94 910401          6201         CMP.B   R0L,#01H
000E97 F215            6202         BNE     _223
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  98

ADDR   CODE            LINE SOURCELINE
000E99 9918rrrr        6203         MOV.W   R1,#SEG( _Cmd )
000E9D 9908rrrr        6204         MOV.W   R0,#SOF( _Cmd )
000EA1 9168rr          6205         MOV.B   R3L,#SEG( __lc_bs )
000EA4 7177            6206         XOR.B   R3H,R3H
000EA6 8927            6207         MOV.W   R2,R7
000EA8 0F0C            6208         PUSH.W  R2, R3
000EAA 9938rrrr        6210         MOV.W   R3,#SEG( _220 )
000EAE 9928rrrr        6211         MOV.W   R2,#SOF( _220 )
000EB2 0F0C            6212         PUSH.W  R2, R3
                       6214         CALL    _sscanf
000EB4 C4rrrrrr       +6214 ;       FCALL   _sscanf
000EB8 99700008        6215         ADD.W   R7,#08H
000EBC 99040001        6217         CMP.W   R0,#01H
000EC0 F306            6218         BEQ     _224
000EC0 F306            6218         BEQ     _224
000EC2                 6219 _223:
                       6220 ; rs232cmd.c 1764                               {
                       6221 ; rs232cmd.c 1765                                       SCPIError = SyntaxErr;  
000EC2 964842rr        6223         MOV.B   ES,#SEG( _SCPIError )
000EC6 9908rrrr        6224         MOV.W   R0,#SOF( _SCPIError )
000ECA BA03            6225         MOV.W   [R0],#03H
                       6226 ; rs232cmd.c 1766                                       return;
000ECC FE19            6228         BR      _231
                       6229 ; rs232cmd.c 1767                               }
000ECE                 6231 _224:
                       6232 ; rs232cmd.c 1768       
                       6233 ; rs232cmd.c 1769                               if ( Reg > 65535)
000ECE 9C74020000      6235         CMP.W   [R7+2],#00H
000ED3 FB0C            6236         BLT     _225
000ED5 FC04            6237         BGT     _234
000ED7 9A74FFFF        6238         CMP.W   [R7],#0FFFFH
000EDB F908            6239         BL      _225
000EDB F90800          6239         BL      _225
000EDE                 6240 _234:
                       6241 ; rs232cmd.c 1770                               {
                       6242 ; rs232cmd.c 1771                                       SCPIError = DataOutOfRange;
000EDE 964842rr        6244         MOV.B   ES,#SEG( _SCPIError )
000EE2 9908rrrr        6245         MOV.W   R0,#SOF( _SCPIError )
000EE6 9A080021        6246         MOV.W   [R0],#021H
                       6247 ; rs232cmd.c 1772                                       return;
000EEA FE0A            6249         BR      _231
                       6250 ; rs232cmd.c 1773                               }
000EEC                 6252 _225:
                       6253 ; rs232cmd.c 1774       
                       6254 ; rs232cmd.c 1775                               OperEnableReg = Reg & 0xEFFF;
000EEC 8C1702          6256         MOV.W   R1,[R7+2]
000EEF 8A07            6257         MOV.W   R0,[R7]
000EF1 9905EFFF        6258         AND.W   R0,#0EFFFH
000EF5 964842rr        6259         MOV.B   ES,#SEG( _OperEnableReg )
000EF9 9918rrrr        6260         MOV.W   R1,#SOF( _OperEnableReg )
000EFD 8A09            6261         MOV.W   [R1],R0
                       6262 ; rs232cmd.c 1776                       }
                       6263 ; rs232cmd.c 1777               }
                       6264 ; rs232cmd.c 1778       }
000F00                 6266 _231:
000F00 A974            6267         ADDS.W  R7,#04H
000F02 D680            6269         RET
                       6271 ; rs232cmd.c 1779       
                       6272 ; rs232cmd.c 1780       /************************************************************************
                            ***/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page  99

ADDR   CODE            LINE SOURCELINE
                       6273 ; rs232cmd.c 1781       /* StatusQuestEvent                                                      
                                                                                                                             
                                                   RS232CMD.C */
                       6274 ; rs232cmd.c 1782       
                       6275 ; rs232cmd.c 1783       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       6276 ; rs232cmd.c 1784       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       6277 ; rs232cmd.c 1785       
                       6278 ; rs232cmd.c 1786       /* Function:    Set/read the status questionablen event register         
                                                                   */
                       6279 ; rs232cmd.c 1787       /* Remarks:             Reading the event register clears it             
                                                                                                           */
                       6280 ; rs232cmd.c 1788       
                       6281 ; rs232cmd.c 1789       /* Updates:             QuestEventReg                                    
                                                                                                                             
                                                                                  */
                       6282 ; rs232cmd.c 1790       /************************************************************************
                            ***/
                       6283 ; rs232cmd.c 1791       void StatusQuestEvent( void)
                       6284 ; rs232cmd.c 1792       {
                       6285         ALIGN   1
                       6287         PUBLIC  _StatusQuestEvent
000F04                 6288 _StatusQuestEvent:
                       6292 ; rs232cmd.c 1793               if ( CmdExecute && !SCPIError)
000F04 964842rr        6294         MOV.B   ES,#SEG( _CmdExecute )
000F08 9908rrrr        6295         MOV.W   R0,#SOF( _CmdExecute )
000F0C 8200            6296         MOV.B   R0L,[R0]
000F0E F333            6297         BEQ     _240
000F10 964842rr        6298         MOV.B   ES,#SEG( _SCPIError )
000F14 9908rrrr        6299         MOV.W   R0,#SOF( _SCPIError )
000F18 8A00            6300         MOV.W   R0,[R0]
000F1A F22D            6301         BNE     _240
                       6302 ; rs232cmd.c 1794               {
                       6303 ; rs232cmd.c 1795                       if ( ParCnt)
000F1C 964842rr        6305         MOV.B   ES,#SEG( _ParCnt )
000F20 9908rrrr        6306         MOV.W   R0,#SOF( _ParCnt )
000F24 8200            6307         MOV.B   R0L,[R0]
000F26 F306            6308         BEQ     _235
                       6309 ; rs232cmd.c 1796                               SCPIError = ParNotAllowed;
000F28 964842rr        6311         MOV.B   ES,#SEG( _SCPIError )
000F2C 9908rrrr        6312         MOV.W   R0,#SOF( _SCPIError )
000F30 BA06            6313         MOV.W   [R0],#06H
000F32 D680            6314         RET
000F32 D680            6314         RET
000F34                 6315 _235:
                       6316 ; rs232cmd.c 1797                       else
                       6317 ; rs232cmd.c 1798                       {
                       6318 ; rs232cmd.c 1799                               if ( CmdRequest)
000F34 964842rr        6320         MOV.B   ES,#SEG( _CmdRequest )
000F38 9908rrrr        6321         MOV.W   R0,#SOF( _CmdRequest )
000F3C 8200            6322         MOV.B   R0L,[R0]
000F3E F316            6323         BEQ     _236
                       6324 ; rs232cmd.c 1800                               {
                       6325 ; rs232cmd.c 1801                                       rs232printf( 12, "%d\n", QuestEventReg);
000F40 9908000C        6327         MOV.W   R0,#0CH
000F44 964842rr        6328         MOV.B   ES,#SEG( _QuestEventReg )
000F48 9918rrrr        6329         MOV.W   R1,#SOF( _QuestEventReg )
000F4C 8A11            6330         MOV.W   R1,[R1]
000F4E 0F02            6331         PUSH.W  R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 100

ADDR   CODE            LINE SOURCELINE
000F50 9938rrrr        6333         MOV.W   R3,#SEG( _9 )
000F54 9928rrrr        6334         MOV.W   R2,#SOF( _9 )
000F58 0F0C            6335         PUSH.W  R2, R3
                       6337         CALL    _rs232printf
000F5A C4rrrrrr       +6337 ;       FCALL   _rs232printf
000F5E A976            6338         ADDS.W  R7,#06H
                       6340 ; rs232cmd.c 1802       
                       6341 ; rs232cmd.c 1803                                       QuestEventReg = 0;
000F60 964842rr        6343         MOV.B   ES,#SEG( _QuestEventReg )
000F64 9908rrrr        6344         MOV.W   R0,#SOF( _QuestEventReg )
000F68 BA00            6345         MOV.W   [R0],#00H
                       6346 ; rs232cmd.c 1804                               }
000F6A D680            6348         RET
000F6A D680            6348         RET
000F6C                 6349 _236:
                       6350 ; rs232cmd.c 1805                               else
                       6351 ; rs232cmd.c 1806                                       SCPIError = SyntaxErr;
000F6C 964842rr        6353         MOV.B   ES,#SEG( _SCPIError )
000F70 9908rrrr        6354         MOV.W   R0,#SOF( _SCPIError )
000F74 BA03            6355         MOV.W   [R0],#03H
                       6356 ; rs232cmd.c 1807                       }
                       6357 ; rs232cmd.c 1808               }
000F76                 6359 _240:
                       6360 ; rs232cmd.c 1809       }
000F76 D680            6362         RET
                       6364 ; rs232cmd.c 1810       
                       6365 ; rs232cmd.c 1811       /************************************************************************
                            **/
                       6366 ; rs232cmd.c 1812       /* StatusQuestCondition                                                  
                                                                                                                             
                                   RS232CMD.C */
                       6367 ; rs232cmd.c 1813       
                       6368 ; rs232cmd.c 1814       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       6369 ; rs232cmd.c 1815       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       6370 ; rs232cmd.c 1816       
                       6371 ; rs232cmd.c 1817       /* Function:    Read the status operation condition register             
                                                                           */
                       6372 ; rs232cmd.c 1818       /* Remarks:             No parameters                                    
                                                                                                                             
                                                                                  */
                       6373 ; rs232cmd.c 1819       
                       6374 ; rs232cmd.c 1820       
                       6375 ; rs232cmd.c 1821       /************************************************************************
                            **/
                       6376 ; rs232cmd.c 1822       void StatusQuestCondition( void)
                       6377 ; rs232cmd.c 1823       {
                       6378         ALIGN   1
                       6380         PUBLIC  _StatusQuestCondition
000F78                 6381 _StatusQuestCondition:
                       6385 ; rs232cmd.c 1824               if ( CmdExecute && !SCPIError)
000F78 964842rr        6387         MOV.B   ES,#SEG( _CmdExecute )
000F7C 9908rrrr        6388         MOV.W   R0,#SOF( _CmdExecute )
000F80 8200            6389         MOV.B   R0L,[R0]
000F82 F32E            6390         BEQ     _246
000F84 964842rr        6391         MOV.B   ES,#SEG( _SCPIError )
000F88 9908rrrr        6392         MOV.W   R0,#SOF( _SCPIError )
000F8C 8A00            6393         MOV.W   R0,[R0]
000F8E F228            6394         BNE     _246
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 101

ADDR   CODE            LINE SOURCELINE
                       6395 ; rs232cmd.c 1825               {
                       6396 ; rs232cmd.c 1826                       if ( ParCnt)
000F90 964842rr        6398         MOV.B   ES,#SEG( _ParCnt )
000F94 9908rrrr        6399         MOV.W   R0,#SOF( _ParCnt )
000F98 8200            6400         MOV.B   R0L,[R0]
000F9A F306            6401         BEQ     _241
                       6402 ; rs232cmd.c 1827                               SCPIError = ParNotAllowed;
000F9C 964842rr        6404         MOV.B   ES,#SEG( _SCPIError )
000FA0 9908rrrr        6405         MOV.W   R0,#SOF( _SCPIError )
000FA4 BA06            6406         MOV.W   [R0],#06H
000FA6 D680            6407         RET
000FA6 D680            6407         RET
000FA8                 6408 _241:
                       6409 ; rs232cmd.c 1828                       else
                       6410 ; rs232cmd.c 1829                       {
                       6411 ; rs232cmd.c 1830                               if ( CmdRequest)
000FA8 964842rr        6413         MOV.B   ES,#SEG( _CmdRequest )
000FAC 9908rrrr        6414         MOV.W   R0,#SOF( _CmdRequest )
000FB0 8200            6415         MOV.B   R0L,[R0]
000FB2 F311            6416         BEQ     _242
                       6417 ; rs232cmd.c 1831                               rs232printf( 12, "%d\n", QuestConditionReg);
000FB4 9908000C        6419         MOV.W   R0,#0CH
000FB8 964842rr        6420         MOV.B   ES,#SEG( _QuestConditionReg )
000FBC 9918rrrr        6421         MOV.W   R1,#SOF( _QuestConditionReg )
000FC0 8A11            6422         MOV.W   R1,[R1]
000FC2 0F02            6423         PUSH.W  R1
000FC4 9938rrrr        6425         MOV.W   R3,#SEG( _9 )
000FC8 9928rrrr        6426         MOV.W   R2,#SOF( _9 )
000FCC 0F0C            6427         PUSH.W  R2, R3
                       6429         CALL    _rs232printf
000FCE C4rrrrrr       +6429 ;       FCALL   _rs232printf
000FD2 A976            6430         ADDS.W  R7,#06H
000FD4 D680            6432         RET
000FD4 D680            6432         RET
000FD6                 6433 _242:
                       6434 ; rs232cmd.c 1832                               else
                       6435 ; rs232cmd.c 1833                                       SCPIError = SyntaxErr;
000FD6 964842rr        6437         MOV.B   ES,#SEG( _SCPIError )
000FDA 9908rrrr        6438         MOV.W   R0,#SOF( _SCPIError )
000FDE BA03            6439         MOV.W   [R0],#03H
                       6440 ; rs232cmd.c 1834                       }
                       6441 ; rs232cmd.c 1835               }
000FE0                 6443 _246:
                       6444 ; rs232cmd.c 1836       }
000FE0 D680            6446         RET
                       6448 ; rs232cmd.c 1837       
                       6449 ; rs232cmd.c 1838       /************************************************************************
                            **/
                       6450 ; rs232cmd.c 1839       /* StatusQuestEnable                                                     
                                                                                                                             
                                           RS232CMD.C */
                       6451 ; rs232cmd.c 1840       
                       6452 ; rs232cmd.c 1841       /* Author:              Kim Engedahl, DEV, 970630                        
                                                                                                                             
                                  */
                       6453 ; rs232cmd.c 1842       /* Revised:             000413                                           
                                                                                                                             
                                                                                  */
                       6454 ; rs232cmd.c 1843       
                       6455 ; rs232cmd.c 1844       /* Function:    Set/read the status questionable enable register         
                                                                   */
                       6456 ; rs232cmd.c 1845       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 102

ADDR   CODE            LINE SOURCELINE
                       6457 ; rs232cmd.c 1846       
                       6458 ; rs232cmd.c 1847       
                       6459 ; rs232cmd.c 1848       /************************************************************************
                            **/
                       6460 ; rs232cmd.c 1849       void StatusQuestEnable( void)
                       6461 ; rs232cmd.c 1850       {
                       6462         ALIGN   1
                       6464         PUBLIC  _StatusQuestEnable
000FE2                 6465 _StatusQuestEnable:
000FE2 A97C            6469         ADDS.W  R7,#0CH
                       6472 ; rs232cmd.c 1851               long    Reg;
                       6473 ; rs232cmd.c 1852       
                       6474 ; rs232cmd.c 1853               if ( CmdExecute && !SCPIError)
000FE4 964842rr        6476         MOV.B   ES,#SEG( _CmdExecute )
000FE8 9908rrrr        6477         MOV.W   R0,#SOF( _CmdExecute )
000FEC 8200            6478         MOV.B   R0L,[R0]
000FEE F364            6479         BEQ     _257
000FF0 964842rr        6480         MOV.B   ES,#SEG( _SCPIError )
000FF4 9908rrrr        6481         MOV.W   R0,#SOF( _SCPIError )
000FF8 8A00            6482         MOV.W   R0,[R0]
000FFA F25E            6483         BNE     _257
                       6484 ; rs232cmd.c 1854               {
                       6485 ; rs232cmd.c 1855                       if ( CmdRequest)
000FFC 964842rr        6487         MOV.B   ES,#SEG( _CmdRequest )
001000 9908rrrr        6488         MOV.W   R0,#SOF( _CmdRequest )
001004 8200            6489         MOV.B   R0L,[R0]
001006 F31D            6490         BEQ     _248
                       6491 ; rs232cmd.c 1856                       {
                       6492 ; rs232cmd.c 1857                               if ( ParCnt)
001008 964842rr        6494         MOV.B   ES,#SEG( _ParCnt )
00100C 9908rrrr        6495         MOV.W   R0,#SOF( _ParCnt )
001010 8200            6496         MOV.B   R0L,[R0]
001012 F306            6497         BEQ     _247
                       6498 ; rs232cmd.c 1858                                       SCPIError = ParNotAllowed;
001014 964842rr        6500         MOV.B   ES,#SEG( _SCPIError )
001018 9908rrrr        6501         MOV.W   R0,#SOF( _SCPIError )
00101C BA06            6502         MOV.W   [R0],#06H
00101E FE4C            6503         BR      _257
00101E FE4C            6503         BR      _257
001020                 6504 _247:
                       6505 ; rs232cmd.c 1859                               else
                       6506 ; rs232cmd.c 1860                                       rs232printf( 12, "%d\n", QuestEnableReg);
                            
001020 9908000C        6508         MOV.W   R0,#0CH
001024 964842rr        6509         MOV.B   ES,#SEG( _QuestEnableReg )
001028 9918rrrr        6510         MOV.W   R1,#SOF( _QuestEnableReg )
00102C 8A11            6511         MOV.W   R1,[R1]
00102E 0F02            6512         PUSH.W  R1
001030 9938rrrr        6514         MOV.W   R3,#SEG( _9 )
001034 9928rrrr        6515         MOV.W   R2,#SOF( _9 )
001038 0F0C            6516         PUSH.W  R2, R3
                       6518         CALL    _rs232printf
00103A C4rrrrrr       +6518 ;       FCALL   _rs232printf
00103E A976            6519         ADDS.W  R7,#06H
                       6521 ; rs232cmd.c 1861                       }
001040 FE3B            6523         BR      _257
001040 FE3B            6523         BR      _257
001042                 6524 _248:
                       6525 ; rs232cmd.c 1862                       else
                       6526 ; rs232cmd.c 1863                       {
                       6527 ; rs232cmd.c 1864                               if (( ParCnt != 1) || ( sscanf( Cmd, "%l", &Reg) 
                            != 1))
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 103

ADDR   CODE            LINE SOURCELINE
001042 964842rr        6529         MOV.B   ES,#SEG( _ParCnt )
001046 9908rrrr        6530         MOV.W   R0,#SOF( _ParCnt )
00104A 8200            6531         MOV.B   R0L,[R0]
00104C 910401          6532         CMP.B   R0L,#01H
00104F F215            6533         BNE     _249
001051 9918rrrr        6534         MOV.W   R1,#SEG( _Cmd )
001055 9908rrrr        6535         MOV.W   R0,#SOF( _Cmd )
001059 9168rr          6536         MOV.B   R3L,#SEG( __lc_bs )
00105C 7177            6537         XOR.B   R3H,R3H
00105E 8927            6538         MOV.W   R2,R7
001060 0F0C            6539         PUSH.W  R2, R3
001062 9938rrrr        6541         MOV.W   R3,#SEG( _220 )
001066 9928rrrr        6542         MOV.W   R2,#SOF( _220 )
00106A 0F0C            6543         PUSH.W  R2, R3
                       6545         CALL    _sscanf
00106C C4rrrrrr       +6545 ;       FCALL   _sscanf
001070 99700008        6546         ADD.W   R7,#08H
001074 99040001        6548         CMP.W   R0,#01H
001078 F306            6549         BEQ     _250
001078 F306            6549         BEQ     _250
00107A                 6550 _249:
                       6551 ; rs232cmd.c 1865                               {
                       6552 ; rs232cmd.c 1866                                       SCPIError = SyntaxErr;  
00107A 964842rr        6554         MOV.B   ES,#SEG( _SCPIError )
00107E 9908rrrr        6555         MOV.W   R0,#SOF( _SCPIError )
001082 BA03            6556         MOV.W   [R0],#03H
                       6557 ; rs232cmd.c 1867                                       return;
001084 FE19            6559         BR      _257
                       6560 ; rs232cmd.c 1868                               }
001086                 6562 _250:
                       6563 ; rs232cmd.c 1869       
                       6564 ; rs232cmd.c 1870                               if ( Reg > 65535)
001086 9C74020000      6566         CMP.W   [R7+2],#00H
00108B FB0C            6567         BLT     _251
00108D FC04            6568         BGT     _260
00108F 9A74FFFF        6569         CMP.W   [R7],#0FFFFH
001093 F908            6570         BL      _251
001093 F90800          6570         BL      _251
001096                 6571 _260:
                       6572 ; rs232cmd.c 1871                               {
                       6573 ; rs232cmd.c 1872                                       SCPIError = DataOutOfRange;
001096 964842rr        6575         MOV.B   ES,#SEG( _SCPIError )
00109A 9908rrrr        6576         MOV.W   R0,#SOF( _SCPIError )
00109E 9A080021        6577         MOV.W   [R0],#021H
                       6578 ; rs232cmd.c 1873                                       return;
0010A2 FE0A            6580         BR      _257
                       6581 ; rs232cmd.c 1874                               }
0010A4                 6583 _251:
                       6584 ; rs232cmd.c 1875       
                       6585 ; rs232cmd.c 1876                               QuestEnableReg = Reg & 0xEFFF;
0010A4 8C1702          6587         MOV.W   R1,[R7+2]
0010A7 8A07            6588         MOV.W   R0,[R7]
0010A9 9905EFFF        6589         AND.W   R0,#0EFFFH
0010AD 964842rr        6590         MOV.B   ES,#SEG( _QuestEnableReg )
0010B1 9918rrrr        6591         MOV.W   R1,#SOF( _QuestEnableReg )
0010B5 8A09            6592         MOV.W   [R1],R0
                       6593 ; rs232cmd.c 1877                       }
                       6594 ; rs232cmd.c 1878               }
                       6595 ; rs232cmd.c 1879       }
0010B8                 6597 _257:
0010B8 A974            6598         ADDS.W  R7,#04H
0010BA D680            6600         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 104

ADDR   CODE            LINE SOURCELINE
                       6602 ; rs232cmd.c 1880       
                       6603 ; rs232cmd.c 1881       /************************************************************************
                            **/
                       6604 ; rs232cmd.c 1882       /* StatusPreset                                                          
                                                                                                                             
                                                           RS232CMD.C */
                       6605 ; rs232cmd.c 1883       
                       6606 ; rs232cmd.c 1884       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                  */
                       6607 ; rs232cmd.c 1885       /* Revised:             000617                                           
                                                                                                                             
                                                                                  */
                       6608 ; rs232cmd.c 1886       
                       6609 ; rs232cmd.c 1887       
                       6610 ; rs232cmd.c 1888       
                       6611 ; rs232cmd.c 1889       
                       6612 ; rs232cmd.c 1890       
                       6613 ; rs232cmd.c 1891       /************************************************************************
                            **/
                       6614 ; rs232cmd.c 1892       void StatusPreset( void)
                       6615 ; rs232cmd.c 1893         {
                       6616         ALIGN   1
                       6618         PUBLIC  _StatusPreset
0010BC                 6619 _StatusPreset:
                       6623 ; rs232cmd.c 1894         if ( CmdExecute && !SCPIError)
0010BC 964842rr        6625         MOV.B   ES,#SEG( _CmdExecute )
0010C0 9908rrrr        6626         MOV.W   R0,#SOF( _CmdExecute )
0010C4 8200            6627         MOV.B   R0L,[R0]
0010C6 F333            6628         BEQ     _269
0010C8 964842rr        6629         MOV.B   ES,#SEG( _SCPIError )
0010CC 9908rrrr        6630         MOV.W   R0,#SOF( _SCPIError )
0010D0 8A00            6631         MOV.W   R0,[R0]
0010D2 F22D            6632         BNE     _269
                       6633 ; rs232cmd.c 1895           {
                       6634 ; rs232cmd.c 1896           if ( CmdRequest)
0010D4 964842rr        6636         MOV.B   ES,#SEG( _CmdRequest )
0010D8 9908rrrr        6637         MOV.W   R0,#SOF( _CmdRequest )
0010DC 8200            6638         MOV.B   R0L,[R0]
0010DE F322            6639         BEQ     _265
                       6640 ; rs232cmd.c 1897             {
                       6641 ; rs232cmd.c 1898             if ( ParCnt)
0010E0 964842rr        6643         MOV.B   ES,#SEG( _ParCnt )
0010E4 9908rrrr        6644         MOV.W   R0,#SOF( _ParCnt )
0010E8 8200            6645         MOV.B   R0L,[R0]
0010EA F306            6646         BEQ     _262
                       6647 ; rs232cmd.c 1899               SCPIError = SyntaxErr;
0010EC 964842rr        6649         MOV.B   ES,#SEG( _SCPIError )
0010F0 9908rrrr        6650         MOV.W   R0,#SOF( _SCPIError )
0010F4 BA03            6651         MOV.W   [R0],#03H
0010F6 D680            6652         RET
0010F6 D680            6652         RET
0010F8                 6653 _262:
                       6654 ; rs232cmd.c 1900             else
                       6655 ; rs232cmd.c 1901               {
                       6656 ; rs232cmd.c 1902               if ( Settings.ActivePreset)
0010F8 964842rr        6658         MOV.B   ES,#SEG( _Settings )
0010FC 9908rrrr        6659         MOV.W   R0,#SOF( _Settings )
001100 8A00            6660         MOV.W   R0,[R0]
001102 F305            6661         BEQ     _263
                       6662 ; rs232cmd.c 1903                 rs232putchar( '0' + Settings.ActivePreset);
001104 910030          6664         ADD.B   R0L,#030H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 105

ADDR   CODE            LINE SOURCELINE
                       6665         CALL    _rs232putchar
001107 C4rrrrrr       +6665 ;       FCALL   _rs232putchar
00110B FE07            6666         BR      _264
00110B FE0700          6666         BR      _264
00110E                 6667 _263:
                       6668 ; rs232cmd.c 1904               else
                       6669 ; rs232cmd.c 1905                 rs232puts( "OFF");
00110E 9918rrrr        6671         MOV.W   R1,#SEG( _261 )
001112 9908rrrr        6672         MOV.W   R0,#SOF( _261 )
                       6673         CALL    _rs232puts
001116 C4rrrrrr       +6673 ;       FCALL   _rs232puts
001116 C4rrrrrr       +6673 ;       FCALL   _rs232puts
00111A                 6674 _264:
                       6675 ; rs232cmd.c 1906               rs232putchar( '\n');
00111A 91080A          6677         MOV.B   R0L,#0AH
                       6678         CALL    _rs232putchar
00111D C4rrrrrr       +6678 ;       FCALL   _rs232putchar
                       6679 ; rs232cmd.c 1907               }
                       6680 ; rs232cmd.c 1908             }
001121 D680            6682         RET
001121 D68000          6682         RET
001124                 6683 _265:
                       6684 ; rs232cmd.c 1909           else
                       6685 ; rs232cmd.c 1910             SCPIError = SyntaxErr;
001124 964842rr        6687         MOV.B   ES,#SEG( _SCPIError )
001128 9908rrrr        6688         MOV.W   R0,#SOF( _SCPIError )
00112C BA03            6689         MOV.W   [R0],#03H
                       6690 ; rs232cmd.c 1911           }
00112E                 6692 _269:
                       6693 ; rs232cmd.c 1912         }
00112E D680            6695         RET
                       6697 ; rs232cmd.c 1913       
                       6698 ; rs232cmd.c 1914       /************************************************************************
                            **/
                       6699 ; rs232cmd.c 1915       /* GenlockGen                                                            
                                                                                                                             
                                                           RS232CMD.C     */
                       6700 ; rs232cmd.c 1916       
                       6701 ; rs232cmd.c 1917       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                  */
                       6702 ; rs232cmd.c 1918       /* Revised:             001219                                           
                                                                                                                             
                                                                                  */
                       6703 ; rs232cmd.c 1919       
                       6704 ; rs232cmd.c 1920       /* Function:    Return the Genlock Configuration.                        
                                                                                                                   */
                       6705 ; rs232cmd.c 1921       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                  */
                       6706 ; rs232cmd.c 1922       
                       6707 ; rs232cmd.c 1923       /* Updates:       --                                                     
                                                                                                                             
                                                                                                          */
                       6708 ; rs232cmd.c 1924       /************************************************************************
                            **/
                       6709 ; rs232cmd.c 1925       void GenlockGen( void)
                       6710 ; rs232cmd.c 1926         {
                       6711         ALIGN   1
                       6713         PUBLIC  _GenlockGen
001130                 6714 _GenlockGen:
001130 0F30            6718         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 106

ADDR   CODE            LINE SOURCELINE
                       6722 ; rs232cmd.c 1927         char code *str;
                       6723 ; rs232cmd.c 1928       
                       6724 ; rs232cmd.c 1929         if ( CmdExecute && !SCPIError)
001132 964842rr        6726         MOV.B   ES,#SEG( _CmdExecute )
001136 9908rrrr        6727         MOV.W   R0,#SOF( _CmdExecute )
00113A 8200            6728         MOV.B   R0L,[R0]
                       6729         BEQ     _281
00113C F202           +6729 ;       BNE     _LG_304
00113E D5008C         +6729 ;       JMP.L   _281
00113E D5008C00       +6729 ;       JMP.L   _281
001142                +6729 _LG_304:
001142 964842rr        6730         MOV.B   ES,#SEG( _SCPIError )
001146 9908rrrr        6731         MOV.W   R0,#SOF( _SCPIError )
00114A 8A00            6732         MOV.W   R0,[R0]
                       6733         BNE     _281
00114C F302           +6733 ;       BEQ     _LG_306
00114E D50084         +6733 ;       JMP.L   _281
00114E D5008400       +6733 ;       JMP.L   _281
001152                +6733 _LG_306:
                       6734 ; rs232cmd.c 1930           {
                       6735 ; rs232cmd.c 1931           if ( !CmdRequest)
001152 964842rr        6737         MOV.B   ES,#SEG( _CmdRequest )
001156 9908rrrr        6738         MOV.W   R0,#SOF( _CmdRequest )
00115A 8200            6739         MOV.B   R0L,[R0]
00115C F206            6740         BNE     _270
                       6741 ; rs232cmd.c 1932             SCPIError = SyntaxErr;
00115E 964842rr        6743         MOV.B   ES,#SEG( _SCPIError )
001162 9908rrrr        6744         MOV.W   R0,#SOF( _SCPIError )
001166 BA03            6745         MOV.W   [R0],#03H
001168 FE77            6746         BR      _281
001168 FE77            6746         BR      _281
00116A                 6747 _270:
                       6748 ; rs232cmd.c 1933           else
                       6749 ; rs232cmd.c 1934             {
                       6750 ; rs232cmd.c 1935             if ( ParCnt)
00116A 964842rr        6752         MOV.B   ES,#SEG( _ParCnt )
00116E 9908rrrr        6753         MOV.W   R0,#SOF( _ParCnt )
001172 8200            6754         MOV.B   R0L,[R0]
001174 F306            6755         BEQ     _271
                       6756 ; rs232cmd.c 1936               SCPIError = ParNotAllowed;
001176 964842rr        6758         MOV.B   ES,#SEG( _SCPIError )
00117A 9908rrrr        6759         MOV.W   R0,#SOF( _SCPIError )
00117E BA06            6760         MOV.W   [R0],#06H
001180 FE6B            6761         BR      _281
001180 FE6B            6761         BR      _281
001182                 6762 _271:
                       6763 ; rs232cmd.c 1937             else
                       6764 ; rs232cmd.c 1938               {
                       6765 ; rs232cmd.c 1939               if ( GenlockStatus)
001182 964842rr        6767         MOV.B   ES,#SEG( _GenlockStatus )
001186 9908rrrr        6768         MOV.W   R0,#SOF( _GenlockStatus )
00118A 8200            6769         MOV.B   R0L,[R0]
00118C F305            6770         BEQ     _272
                       6771 ; rs232cmd.c 1940                 str = GENLOCKEDParTxt;
00118E 9958rrrr        6773         MOV.W   R5,#SEG( _GENLOCKEDParTxt )
001192 9948rrrr        6774         MOV.W   R4,#SOF( _GENLOCKEDParTxt )
001196 FE04            6776         BR      _273
001196 FE04            6776         BR      _273
001198                 6777 _272:
                       6778 ; rs232cmd.c 1941               else
                       6779 ; rs232cmd.c 1942                 str = UNLOCKEDParTxt;
001198 9958rrrr        6781         MOV.W   R5,#SEG( _UNLOCKEDParTxt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 107

ADDR   CODE            LINE SOURCELINE
00119C 9948rrrr        6782         MOV.W   R4,#SOF( _UNLOCKEDParTxt )
0011A0                 6785 _273:
                       6786 ; rs232cmd.c 1943       
                       6787 ; rs232cmd.c 1944               while ( *str)
0011A0 8915            6789         MOV.W   R1,R5
0011A2 8904            6790         MOV.W   R0,R4
0011A4 862C43          6791         MOV.B   CS,R1L
0011A7 8020            6792         MOVC.B  R1L,[R0+]
0011A9 F312            6793         BEQ     _275
0011A9 F31200          6793         BEQ     _275
0011AC                 6794 _274:
                       6795 ; rs232cmd.c 1945                 rs232putchar( *str++);
0011AC 8915            6797         MOV.W   R1,R5
0011AE 8904            6798         MOV.W   R0,R4
0011B0 862C43          6799         MOV.B   CS,R1L
0011B3 8020            6800         MOVC.B  R1L,[R0+]
0011B5 8102            6801         MOV.B   R0L,R1L
                       6802         CALL    _rs232putchar
0011B7 C4rrrrrr       +6802 ;       FCALL   _rs232putchar
0011BB 99400001        6803         ADD.W   R4,#01H
0011BF 99510000        6804         ADDC.W  R5,#00H
0011C3 8915            6808         MOV.W   R1,R5
0011C5 8904            6809         MOV.W   R0,R4
0011C7 862C43          6810         MOV.B   CS,R1L
0011CA 8020            6811         MOVC.B  R1L,[R0+]
0011CC F2EF            6812         BNE     _274
0011CE                 6814 _275:
                       6815 ; rs232cmd.c 1946       
                       6816 ; rs232cmd.c 1947               rs232putchar(',');
0011CE 91082C          6818         MOV.B   R0L,#02CH
                       6819         CALL    _rs232putchar
0011D1 C4rrrrrr       +6819 ;       FCALL   _rs232putchar
                       6820 ; rs232cmd.c 1948       
                       6821 ; rs232cmd.c 1949               str = GenlockSystemPar[GenlockSetup.System].LongName;
0011D5 964842rr        6823         MOV.B   ES,#SEG( _GenlockSetup )
0011D9 9908rrrr        6824         MOV.W   R0,#SOF( _GenlockSetup )
0011DD 8200            6825         MOV.B   R0L,[R0]
0011DF E8000C          6826         MULU.B  R0L,#0CH
0011E2 8920            6827         MOV.W   R2,R0
0011E4 B930            6828         MOVS.W  R3,#00H
0011E6 9918rrrr        6829         MOV.W   R1,#SEG( _GenlockSystemPar )
0011EA 9908rrrr        6830         MOV.W   R0,#SOF( _GenlockSystemPar )
0011EE 0902            6831         ADD.W   R0,R2
0011F0 1913            6832         ADDC.W  R1,R3
0011F2 862C43          6833         MOV.B   CS,R1L
0011F5 8820            6834         MOVC.W  R2,[R0+]
0011F7 99040000        6835         CMP.W   R0,#00H
0011FB F202            6836         BNE     _282
0011FD A64143          6837         ADDS.B  CS,#01H
0011FD A64143          6837         ADDS.B  CS,#01H
001200                 6838 _282:
001200 8830            6839         MOVC.W  R3,[R0+]
001202 8953            6840         MOV.W   R5,R3
001204 8942            6841         MOV.W   R4,R2
                       6844 ; rs232cmd.c 1950       
                       6845 ; rs232cmd.c 1951               while ( *str)
001206 866C43          6847         MOV.B   CS,R3L
001209 8062            6848         MOVC.B  R3L,[R2+]
00120B F312            6849         BEQ     _277
00120B F31200          6849         BEQ     _277
00120E                 6850 _276:
                       6851 ; rs232cmd.c 1952                 rs232putchar( *str++);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 108

ADDR   CODE            LINE SOURCELINE
00120E 8915            6853         MOV.W   R1,R5
001210 8904            6854         MOV.W   R0,R4
001212 862C43          6855         MOV.B   CS,R1L
001215 8020            6856         MOVC.B  R1L,[R0+]
001217 8102            6857         MOV.B   R0L,R1L
                       6858         CALL    _rs232putchar
001219 C4rrrrrr       +6858 ;       FCALL   _rs232putchar
00121D 99400001        6859         ADD.W   R4,#01H
001221 99510000        6860         ADDC.W  R5,#00H
001225 8915            6864         MOV.W   R1,R5
001227 8904            6865         MOV.W   R0,R4
001229 862C43          6866         MOV.B   CS,R1L
00122C 8020            6867         MOVC.B  R1L,[R0+]
00122E F2EF            6868         BNE     _276
001230                 6870 _277:
                       6871 ; rs232cmd.c 1953       
                       6872 ; rs232cmd.c 1954               rs232putchar(',');
001230 91082C          6874         MOV.B   R0L,#02CH
                       6875         CALL    _rs232putchar
001233 C4rrrrrr       +6875 ;       FCALL   _rs232putchar
                       6876 ; rs232cmd.c 1955       
                       6877 ; rs232cmd.c 1956               PrintSamplesToFLT( GenlockSetup.System, GenlockSetup.Delay);
001237 964842rr        6879         MOV.B   ES,#SEG( _GenlockSetup )
00123B 9908rrrr        6880         MOV.W   R0,#SOF( _GenlockSetup )
00123F 8200            6881         MOV.B   R0L,[R0]
001241 964842rr        6882         MOV.B   ES,#SEG( _GenlockSetup+2 )
001245 9938rrrr        6883         MOV.W   R3,#SOF( _GenlockSetup+2 )
001249 8B23            6884         MOV.W   R2,[R3+]
00124B 8A33            6885         MOV.W   R3,[R3]
00124D C529EB          6886         CALL    _PrintSamplesToFLT
                       6887 ; rs232cmd.c 1957       
                       6888 ; rs232cmd.c 1958               rs232putchar ( '\n');
001250 91080A          6890         MOV.B   R0L,#0AH
                       6891         CALL    _rs232putchar
001253 C4rrrrrr       +6891 ;       FCALL   _rs232putchar
                       6892 ; rs232cmd.c 1959               }
                       6893 ; rs232cmd.c 1960             }
                       6894 ; rs232cmd.c 1961           }
001258                 6896 _281:
                       6897 ; rs232cmd.c 1962         }
001258 2F30            6899         POP.W   R4, R5
00125A D680            6901         RET
                       6904 ; rs232cmd.c 1963       
                       6905 ; rs232cmd.c 1964       /************************************************************************
                            **/
                       6906 ; rs232cmd.c 1965       /* GenlockGenSystem                                                      
                                                                                                                             
                                           RS232CMD.C     */
                       6907 ; rs232cmd.c 1966       
                       6908 ; rs232cmd.c 1967       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       6909 ; rs232cmd.c 1968       /* Revised:             000525                                           
                                                                                                                             
                                                                                  */
                       6910 ; rs232cmd.c 1969       
                       6911 ; rs232cmd.c 1970       /* Function:    Handle the genlock system command                        
                                                                                                                   */
                       6912 ; rs232cmd.c 1971       
                       6913 ; rs232cmd.c 1972       
                       6914 ; rs232cmd.c 1973       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 109

ADDR   CODE            LINE SOURCELINE
                       6915 ; rs232cmd.c 1974       /************************************************************************
                            **/
                       6916 ; rs232cmd.c 1975       void GenlockGenSystem( void)
                       6917 ; rs232cmd.c 1976       {
                       6918         ALIGN   1
                       6920         PUBLIC  _GenlockGenSystem
00125C                 6921 _GenlockGenSystem:
00125C 0F30            6925         PUSH.W  R4, R5
                       6931 ; rs232cmd.c 1977               int system;
                       6932 ; rs232cmd.c 1978               char code *str;
                       6933 ; rs232cmd.c 1979       
                       6934 ; rs232cmd.c 1980               if ( CmdExecute && !SCPIError)
00125E 964842rr        6936         MOV.B   ES,#SEG( _CmdExecute )
001262 9908rrrr        6937         MOV.W   R0,#SOF( _CmdExecute )
001266 8200            6938         MOV.B   R0L,[R0]
001268 F36F            6939         BEQ     _294
00126A 964842rr        6940         MOV.B   ES,#SEG( _SCPIError )
00126E 9908rrrr        6941         MOV.W   R0,#SOF( _SCPIError )
001272 8A00            6942         MOV.W   R0,[R0]
001274 F269            6943         BNE     _294
                       6944 ; rs232cmd.c 1981               {
                       6945 ; rs232cmd.c 1982                       if ( CmdRequest)
001276 964842rr        6947         MOV.B   ES,#SEG( _CmdRequest )
00127A 9908rrrr        6948         MOV.W   R0,#SOF( _CmdRequest )
00127E 8200            6949         MOV.B   R0L,[R0]
001280 F33F            6950         BEQ     _286
                       6951 ; rs232cmd.c 1983                       {
                       6952 ; rs232cmd.c 1984                               if ( ParCnt)
001282 964842rr        6954         MOV.B   ES,#SEG( _ParCnt )
001286 9908rrrr        6955         MOV.W   R0,#SOF( _ParCnt )
00128A 8200            6956         MOV.B   R0L,[R0]
00128C F306            6957         BEQ     _283
                       6958 ; rs232cmd.c 1985                                       SCPIError = ParNotAllowed;
00128E 964842rr        6960         MOV.B   ES,#SEG( _SCPIError )
001292 9908rrrr        6961         MOV.W   R0,#SOF( _SCPIError )
001296 BA06            6962         MOV.W   [R0],#06H
001298 FE57            6963         BR      _294
001298 FE57            6963         BR      _294
00129A                 6964 _283:
                       6965 ; rs232cmd.c 1986                               else
                       6966 ; rs232cmd.c 1987                               {
                       6967 ; rs232cmd.c 1988                                       str = GenlockSystemPar[GenlockSetup.Syste
                            m].LongName;
00129A 964842rr        6969         MOV.B   ES,#SEG( _GenlockSetup )
00129E 9908rrrr        6970         MOV.W   R0,#SOF( _GenlockSetup )
0012A2 8200            6971         MOV.B   R0L,[R0]
0012A4 E8000C          6972         MULU.B  R0L,#0CH
0012A7 8920            6973         MOV.W   R2,R0
0012A9 B930            6974         MOVS.W  R3,#00H
0012AB 9918rrrr        6975         MOV.W   R1,#SEG( _GenlockSystemPar )
0012AF 9908rrrr        6976         MOV.W   R0,#SOF( _GenlockSystemPar )
0012B3 0902            6977         ADD.W   R0,R2
0012B5 1913            6978         ADDC.W  R1,R3
0012B7 862C43          6979         MOV.B   CS,R1L
0012BA 8820            6980         MOVC.W  R2,[R0+]
0012BC 99040000        6981         CMP.W   R0,#00H
0012C0 F202            6982         BNE     _295
0012C2 A64143          6983         ADDS.B  CS,#01H
0012C2 A6414300        6983         ADDS.B  CS,#01H
0012C6                 6984 _295:
0012C6 8830            6985         MOVC.W  R3,[R0+]
0012C8 8953            6986         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 110

ADDR   CODE            LINE SOURCELINE
0012CA 8942            6987         MOV.W   R4,R2
                       6989 ; rs232cmd.c 1989       
                       6990 ; rs232cmd.c 1990                                       while ( *str)
0012CC 866C43          6992         MOV.B   CS,R3L
0012CF 8062            6993         MOVC.B  R3L,[R2+]
0012D1 F312            6994         BEQ     _285
0012D1 F31200          6994         BEQ     _285
0012D4                 6995 _284:
                       6996 ; rs232cmd.c 1991                                               rs232putchar( *str++);
0012D4 8915            6998         MOV.W   R1,R5
0012D6 8904            6999         MOV.W   R0,R4
0012D8 862C43          7000         MOV.B   CS,R1L
0012DB 8020            7001         MOVC.B  R1L,[R0+]
0012DD 8102            7002         MOV.B   R0L,R1L
                       7003         CALL    _rs232putchar
0012DF C4rrrrrr       +7003 ;       FCALL   _rs232putchar
0012E3 99400001        7004         ADD.W   R4,#01H
0012E7 99510000        7005         ADDC.W  R5,#00H
0012EB 8915            7009         MOV.W   R1,R5
0012ED 8904            7010         MOV.W   R0,R4
0012EF 862C43          7011         MOV.B   CS,R1L
0012F2 8020            7012         MOVC.B  R1L,[R0+]
0012F4 F2EF            7013         BNE     _284
0012F6                 7015 _285:
                       7016 ; rs232cmd.c 1992       
                       7017 ; rs232cmd.c 1993                                       rs232putchar('\n');
0012F6 91080A          7019         MOV.B   R0L,#0AH
                       7020         CALL    _rs232putchar
0012F9 C4rrrrrr       +7020 ;       FCALL   _rs232putchar
                       7021 ; rs232cmd.c 1994                               }
                       7022 ; rs232cmd.c 1995                       }
0012FD FE25            7024         BR      _294
0012FD FE2500          7024         BR      _294
001300                 7025 _286:
                       7026 ; rs232cmd.c 1996                       else
                       7027 ; rs232cmd.c 1997                       {
                       7028 ; rs232cmd.c 1998                               if ( ParCnt != 1)
001300 964842rr        7030         MOV.B   ES,#SEG( _ParCnt )
001304 9908rrrr        7031         MOV.W   R0,#SOF( _ParCnt )
001308 8200            7032         MOV.B   R0L,[R0]
00130A 910401          7033         CMP.B   R0L,#01H
00130D F307            7034         BEQ     _287
                       7035 ; rs232cmd.c 1999                                       SCPIError = SyntaxErr;
00130F 964842rr        7037         MOV.B   ES,#SEG( _SCPIError )
001313 9908rrrr        7038         MOV.W   R0,#SOF( _SCPIError )
001317 BA03            7039         MOV.W   [R0],#03H
001319 FE17            7040         BR      _294
001319 FE1700          7040         BR      _294
00131C                 7041 _287:
                       7042 ; rs232cmd.c 2000                               else
                       7043 ; rs232cmd.c 2001                               {
                       7044 ; rs232cmd.c 2002                                       system = FindParameter( Cmd, GenlockSyste
                            mPar);
00131C 9918rrrr        7046         MOV.W   R1,#SEG( _Cmd )
001320 9908rrrr        7047         MOV.W   R0,#SOF( _Cmd )
001324 9938rrrr        7048         MOV.W   R3,#SEG( _GenlockSystemPar )
001328 9928rrrr        7049         MOV.W   R2,#SOF( _GenlockSystemPar )
00132C C526F4          7050         CALL    _FindParameter
                       7052 ; rs232cmd.c 2003               
                       7053 ; rs232cmd.c 2004                                       if ( system > -1)
00132F 9904FFFF        7055         CMP.W   R0,#0FFFFH
001333 FD04            7056         BLE     _288
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 111

ADDR   CODE            LINE SOURCELINE
                       7057 ; rs232cmd.c 2005                                               SetGenlockSystem( system);
                       7059         CALL    _SetGenlockSystem
001335 C4rrrrrr       +7059 ;       FCALL   _SetGenlockSystem
001339 FE07            7061         BR      _294
001339 FE0700          7061         BR      _294
00133C                 7062 _288:
                       7063 ; rs232cmd.c 2006                                       else
                       7064 ; rs232cmd.c 2007                                               SCPIError = DataOutOfRange;
00133C 964842rr        7066         MOV.B   ES,#SEG( _SCPIError )
001340 9908rrrr        7067         MOV.W   R0,#SOF( _SCPIError )
001344 9A080021        7068         MOV.W   [R0],#021H
                       7069 ; rs232cmd.c 2008                               }
                       7070 ; rs232cmd.c 2009                       }
                       7071 ; rs232cmd.c 2010               }
001348                 7073 _294:
                       7074 ; rs232cmd.c 2011       }
001348 2F30            7076         POP.W   R4, R5
00134A D680            7078         RET
                       7081 ; rs232cmd.c 2012       
                       7082 ; rs232cmd.c 2013       /************************************************************************
                            **/
                       7083 ; rs232cmd.c 2014       /* GenlockGenDelay                                                       
                                                                                                                             
                                     RS232CMD.C */
                       7084 ; rs232cmd.c 2015       
                       7085 ; rs232cmd.c 2016       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                  */
                       7086 ; rs232cmd.c 2017       /* Revised:             000525                                           
                                                                                                                             
                                                                                  */
                       7087 ; rs232cmd.c 2018       
                       7088 ; rs232cmd.c 2019       /* Function:    Handle the genlock timing command                        
                                                                                                                   */
                       7089 ; rs232cmd.c 2020       
                       7090 ; rs232cmd.c 2021       
                       7091 ; rs232cmd.c 2022       
                       7092 ; rs232cmd.c 2023       /************************************************************************
                            **/
                       7093 ; rs232cmd.c 2024       void GenlockGenDelay( void)
                       7094 ; rs232cmd.c 2025       {
                       7095         ALIGN   1
                       7097         PUBLIC  _GenlockGenDelay
00134C                 7098 _GenlockGenDelay:
00134C 0F30            7102         PUSH.W  R4, R5
00134E A978            7104         ADDS.W  R7,#08H
                       7111 ; rs232cmd.c 2026               int field, line;
                       7112 ; rs232cmd.c 2027               float offset;
                       7113 ; rs232cmd.c 2028               long samples;
                       7114 ; rs232cmd.c 2029       
                       7115 ; rs232cmd.c 2030               if ( CmdExecute && !SCPIError)
001350 964842rr        7117         MOV.B   ES,#SEG( _CmdExecute )
001354 9908rrrr        7118         MOV.W   R0,#SOF( _CmdExecute )
001358 8200            7119         MOV.B   R0L,[R0]
00135A F374            7120         BEQ     _309
00135C 964842rr        7121         MOV.B   ES,#SEG( _SCPIError )
001360 9908rrrr        7122         MOV.W   R0,#SOF( _SCPIError )
001364 8A00            7123         MOV.W   R0,[R0]
001366 F26E            7124         BNE     _309
                       7125 ; rs232cmd.c 2031               {
                       7126 ; rs232cmd.c 2032                       if ( CmdRequest)
001368 964842rr        7128         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 112

ADDR   CODE            LINE SOURCELINE
00136C 9908rrrr        7129         MOV.W   R0,#SOF( _CmdRequest )
001370 8200            7130         MOV.B   R0L,[R0]
001372 F31D            7131         BEQ     _300
                       7132 ; rs232cmd.c 2033                       {
                       7133 ; rs232cmd.c 2034                               if ( ParCnt)
001374 964842rr        7135         MOV.B   ES,#SEG( _ParCnt )
001378 9908rrrr        7136         MOV.W   R0,#SOF( _ParCnt )
00137C 8200            7137         MOV.B   R0L,[R0]
00137E F306            7138         BEQ     _299
                       7139 ; rs232cmd.c 2035                                       SCPIError = ParNotAllowed;
001380 964842rr        7141         MOV.B   ES,#SEG( _SCPIError )
001384 9908rrrr        7142         MOV.W   R0,#SOF( _SCPIError )
001388 BA06            7143         MOV.W   [R0],#06H
00138A FE5C            7144         BR      _309
00138A FE5C            7144         BR      _309
00138C                 7145 _299:
                       7146 ; rs232cmd.c 2036                               else
                       7147 ; rs232cmd.c 2037                               {
                       7148 ; rs232cmd.c 2038                                       PrintSamplesToFLT( GenlockSetup.System, G
                            enlockSetup.Delay);
00138C 964842rr        7150         MOV.B   ES,#SEG( _GenlockSetup )
001390 9908rrrr        7151         MOV.W   R0,#SOF( _GenlockSetup )
001394 8200            7152         MOV.B   R0L,[R0]
001396 964842rr        7153         MOV.B   ES,#SEG( _GenlockSetup+2 )
00139A 9938rrrr        7154         MOV.W   R3,#SOF( _GenlockSetup+2 )
00139E 8B23            7155         MOV.W   R2,[R3+]
0013A0 8A33            7156         MOV.W   R3,[R3]
0013A2 C52941          7157         CALL    _PrintSamplesToFLT
                       7158 ; rs232cmd.c 2039       
                       7159 ; rs232cmd.c 2040                                       rs232putchar ( '\n');
0013A5 91080A          7161         MOV.B   R0L,#0AH
                       7162         CALL    _rs232putchar
0013A8 C4rrrrrr       +7162 ;       FCALL   _rs232putchar
                       7163 ; rs232cmd.c 2041                               }
                       7164 ; rs232cmd.c 2042                       }
0013AC FE4B            7166         BR      _309
0013AC FE4B            7166         BR      _309
0013AE                 7167 _300:
                       7168 ; rs232cmd.c 2043                       else
                       7169 ; rs232cmd.c 2044                       {
                       7170 ; rs232cmd.c 2045                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
0013AE 964842rr        7172         MOV.B   ES,#SEG( _ParCnt )
0013B2 9908rrrr        7173         MOV.W   R0,#SOF( _ParCnt )
0013B6 8200            7174         MOV.B   R0L,[R0]
0013B8 910403          7175         CMP.B   R0L,#03H
0013BB F21F            7176         BNE     _301
0013BD 9168rr          7177         MOV.B   R3L,#SEG( __lc_bs )
0013C0 7177            7178         XOR.B   R3H,R3H
0013C2 8927            7179         MOV.W   R2,R7
0013C4 91A8rr          7180         MOV.B   R5L,#SEG( __lc_bs )
0013C7 71BB            7181         XOR.B   R5H,R5H
0013C9 404702          7182         LEA     R4,R7+2
0013CC 9128rr          7183         MOV.B   R1L,#SEG( __lc_bs )
0013CF 7133            7184         XOR.B   R1H,R1H
0013D1 400704          7185         LEA     R0,R7+4
0013D4 0F03            7186         PUSH.W  R0, R1
0013D6 0F30            7188         PUSH.W  R4, R5
0013D8 0F0C            7190         PUSH.W  R2, R3
0013DA 9938rrrr        7192         MOV.W   R3,#SEG( _298 )
0013DE 9928rrrr        7193         MOV.W   R2,#SOF( _298 )
0013E2 0F0C            7194         PUSH.W  R2, R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 113

ADDR   CODE            LINE SOURCELINE
0013E4 9918rrrr        7196         MOV.W   R1,#SEG( _Cmd )
0013E8 9908rrrr        7197         MOV.W   R0,#SOF( _Cmd )
                       7198         CALL    _sscanf
0013EC C4rrrrrr       +7198 ;       FCALL   _sscanf
0013F0 99700010        7199         ADD.W   R7,#010H
0013F4 99040003        7201         CMP.W   R0,#03H
0013F8 F306            7202         BEQ     _302
0013F8 F306            7202         BEQ     _302
0013FA                 7203 _301:
                       7204 ; rs232cmd.c 2046                                       SCPIError = SyntaxErr;
0013FA 964842rr        7206         MOV.B   ES,#SEG( _SCPIError )
0013FE 9908rrrr        7207         MOV.W   R0,#SOF( _SCPIError )
001402 BA03            7208         MOV.W   [R0],#03H
001404 FE1F            7209         BR      _309
001404 FE1F            7209         BR      _309
001406                 7210 _302:
                       7211 ; rs232cmd.c 2047                               else
                       7212 ; rs232cmd.c 2048                               {
                       7213 ; rs232cmd.c 2049                                       if (( samples = FLTToSamples( GenlockSetu
                            p.System, field, line, offset)) == -1)
001406 964842rr        7215         MOV.B   ES,#SEG( _GenlockSetup )
00140A 9908rrrr        7216         MOV.W   R0,#SOF( _GenlockSetup )
00140E 8200            7217         MOV.B   R0L,[R0]
001410 8A17            7218         MOV.W   R1,[R7]
001412 8C2702          7219         MOV.W   R2,[R7+2]
001415 8C5706          7220         MOV.W   R5,[R7+6]
001418 8C4704          7221         MOV.W   R4,[R7+4]
00141B 0F30            7222         PUSH.W  R4, R5
00141D C526C8          7224         CALL    _FLTToSamples
001420 A974            7225         ADDS.W  R7,#04H
001422 8931            7227         MOV.W   R3,R1
001424 8920            7228         MOV.W   R2,R0
001426 9934FFFF        7229         CMP.W   R3,#0FFFFH
00142A F202            7230         BNE     _312
00142C 9924FFFF        7231         CMP.W   R2,#0FFFFH
00142C 9924FFFF        7231         CMP.W   R2,#0FFFFH
001430                 7232 _312:
001430 F207            7233         BNE     _303
                       7234 ; rs232cmd.c 2050                                               SCPIError = ExecErr;
001432 964842rr        7236         MOV.B   ES,#SEG( _SCPIError )
001436 9908rrrr        7237         MOV.W   R0,#SOF( _SCPIError )
00143A 9A08001D        7238         MOV.W   [R0],#01DH
00143E FE02            7239         BR      _309
00143E FE02            7239         BR      _309
001440                 7240 _303:
                       7241 ; rs232cmd.c 2051                                       else
                       7242 ; rs232cmd.c 2052                                               SetGenlockDelay( samples);
                       7244         CALL    _SetGenlockDelay
001440 C4rrrrrr       +7244 ;       FCALL   _SetGenlockDelay
                       7245 ; rs232cmd.c 2053                               }
                       7246 ; rs232cmd.c 2054                       }
                       7247 ; rs232cmd.c 2055               }
001444                 7249 _309:
                       7250 ; rs232cmd.c 2056       }
001444 99700008        7252         ADD.W   R7,#08H
001448 2F30            7254         POP.W   R4, R5
00144A D680            7256         RET
                       7258 ; rs232cmd.c 2057       
                       7259 ; rs232cmd.c 2058       /************************************************************************
                            **/
                       7260 ; rs232cmd.c 2059       /* GenlockGenCalibrateEnable                                             
                                                                                                      RS232CMD.C */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 114

ADDR   CODE            LINE SOURCELINE
                       7261 ; rs232cmd.c 2060       
                       7262 ; rs232cmd.c 2061       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                  */
                       7263 ; rs232cmd.c 2062       /* Revised:             000622                                           
                                                                                                                             
                                                                                  */
                       7264 ; rs232cmd.c 2063       
                       7265 ; rs232cmd.c 2064       /* Function:    Handle the genlock calibration                           
                                                                                                                   */
                       7266 ; rs232cmd.c 2065       
                       7267 ; rs232cmd.c 2066       
                       7268 ; rs232cmd.c 2067       
                       7269 ; rs232cmd.c 2068       /************************************************************************
                            **/
                       7270 ; rs232cmd.c 2069       void GenlockGenCalibrateEnable( void)
                       7271 ; rs232cmd.c 2070       {
                       7272         ALIGN   1
                       7274         PUBLIC  _GenlockGenCalibrateEnable
00144C                 7275 _GenlockGenCalibrateEnable:
00144C 0F30            7279         PUSH.W  R4, R5
                       7285 ; rs232cmd.c 2071               char code *str;
                       7286 ; rs232cmd.c 2072               int tmp;
                       7287 ; rs232cmd.c 2073       
                       7288 ; rs232cmd.c 2074               if ( CmdExecute && !SCPIError)
00144E 964842rr        7290         MOV.B   ES,#SEG( _CmdExecute )
001452 9908rrrr        7291         MOV.W   R0,#SOF( _CmdExecute )
001456 8200            7292         MOV.B   R0L,[R0]
                       7293         BEQ     _329
001458 F202           +7293 ;       BNE     _LG_358
00145A D500D2         +7293 ;       JMP.L   _329
00145A D500D200       +7293 ;       JMP.L   _329
00145E                +7293 _LG_358:
00145E 964842rr        7294         MOV.B   ES,#SEG( _SCPIError )
001462 9908rrrr        7295         MOV.W   R0,#SOF( _SCPIError )
001466 8A00            7296         MOV.W   R0,[R0]
                       7297         BNE     _329
001468 F302           +7297 ;       BEQ     _LG_360
00146A D500CA         +7297 ;       JMP.L   _329
00146A D500CA00       +7297 ;       JMP.L   _329
00146E                +7297 _LG_360:
                       7298 ; rs232cmd.c 2075               {
                       7299 ; rs232cmd.c 2076                       if ( CmdRequest)
00146E 964842rr        7301         MOV.B   ES,#SEG( _CmdRequest )
001472 9908rrrr        7302         MOV.W   R0,#SOF( _CmdRequest )
001476 8200            7303         MOV.B   R0L,[R0]
001478 F340            7304         BEQ     _319
                       7305 ; rs232cmd.c 2077                       {
                       7306 ; rs232cmd.c 2078                               if ( ParCnt)
00147A 964842rr        7308         MOV.B   ES,#SEG( _ParCnt )
00147E 9908rrrr        7309         MOV.W   R0,#SOF( _ParCnt )
001482 8200            7310         MOV.B   R0L,[R0]
001484 F307            7311         BEQ     _316
                       7312 ; rs232cmd.c 2079                                       SCPIError = SyntaxErr;
001486 964842rr        7314         MOV.B   ES,#SEG( _SCPIError )
00148A 9908rrrr        7315         MOV.W   R0,#SOF( _SCPIError )
00148E BA03            7316         MOV.W   [R0],#03H
                       7317         BR      _329
001490 D500B7         +7317         JMP.L   _329
001490 D500B700       +7317         JMP.L   _329
001494                 7318 _316:
                       7319 ; rs232cmd.c 2080                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 115

ADDR   CODE            LINE SOURCELINE
                       7320 ; rs232cmd.c 2081                               {
                       7321 ; rs232cmd.c 2082                                       str = OffOnPar[GenlockCalEnable].LongName
                            ;
001494 964842rr        7323         MOV.B   ES,#SEG( _GenlockCalEnable )
001498 9908rrrr        7324         MOV.W   R0,#SOF( _GenlockCalEnable )
00149C 8200            7325         MOV.B   R0L,[R0]
00149E E8000C          7326         MULU.B  R0L,#0CH
0014A1 8920            7327         MOV.W   R2,R0
0014A3 B930            7328         MOVS.W  R3,#00H
0014A5 9918rrrr        7329         MOV.W   R1,#SEG( _OffOnPar )
0014A9 9908rrrr        7330         MOV.W   R0,#SOF( _OffOnPar )
0014AD 0902            7331         ADD.W   R0,R2
0014AF 1913            7332         ADDC.W  R1,R3
0014B1 862C43          7333         MOV.B   CS,R1L
0014B4 8820            7334         MOVC.W  R2,[R0+]
0014B6 99040000        7335         CMP.W   R0,#00H
0014BA F202            7336         BNE     _330
0014BC A64143          7337         ADDS.B  CS,#01H
0014BC A6414300        7337         ADDS.B  CS,#01H
0014C0                 7338 _330:
0014C0 8830            7339         MOVC.W  R3,[R0+]
0014C2 8953            7340         MOV.W   R5,R3
0014C4 8942            7341         MOV.W   R4,R2
                       7343 ; rs232cmd.c 2083       
                       7344 ; rs232cmd.c 2084                                       while ( *str)
0014C6 866C43          7346         MOV.B   CS,R3L
0014C9 8062            7347         MOVC.B  R3L,[R2+]
0014CB F312            7348         BEQ     _318
0014CB F31200          7348         BEQ     _318
0014CE                 7349 _317:
                       7350 ; rs232cmd.c 2085                                               rs232putchar( *str++);
0014CE 8915            7352         MOV.W   R1,R5
0014D0 8904            7353         MOV.W   R0,R4
0014D2 862C43          7354         MOV.B   CS,R1L
0014D5 8020            7355         MOVC.B  R1L,[R0+]
0014D7 8102            7356         MOV.B   R0L,R1L
                       7357         CALL    _rs232putchar
0014D9 C4rrrrrr       +7357 ;       FCALL   _rs232putchar
0014DD 99400001        7358         ADD.W   R4,#01H
0014E1 99510000        7359         ADDC.W  R5,#00H
0014E5 8915            7363         MOV.W   R1,R5
0014E7 8904            7364         MOV.W   R0,R4
0014E9 862C43          7365         MOV.B   CS,R1L
0014EC 8020            7366         MOVC.B  R1L,[R0+]
0014EE F2EF            7367         BNE     _317
0014F0                 7369 _318:
                       7370 ; rs232cmd.c 2086       
                       7371 ; rs232cmd.c 2087                                       rs232putchar('\n');
0014F0 91080A          7373         MOV.B   R0L,#0AH
                       7374         CALL    _rs232putchar
0014F3 C4rrrrrr       +7374 ;       FCALL   _rs232putchar
                       7375 ; rs232cmd.c 2088                               }
                       7376 ; rs232cmd.c 2089                       }
                       7378         BR      _329
0014F7 D50083         +7378         JMP.L   _329
0014F7 D50083         +7378         JMP.L   _329
0014FA                 7379 _319:
                       7380 ; rs232cmd.c 2090                       else
                       7381 ; rs232cmd.c 2091                       {
                       7382 ; rs232cmd.c 2092                               if ( ParCnt != 1)
0014FA 964842rr        7384         MOV.B   ES,#SEG( _ParCnt )
0014FE 9908rrrr        7385         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 116

ADDR   CODE            LINE SOURCELINE
001502 8200            7386         MOV.B   R0L,[R0]
001504 910401          7387         CMP.B   R0L,#01H
001507 F307            7388         BEQ     _320
                       7389 ; rs232cmd.c 2093                                       SCPIError = SyntaxErr;
001509 964842rr        7391         MOV.B   ES,#SEG( _SCPIError )
00150D 9908rrrr        7392         MOV.W   R0,#SOF( _SCPIError )
001511 BA03            7393         MOV.W   [R0],#03H
001513 FE76            7394         BR      _329
001513 FE7600          7394         BR      _329
001516                 7395 _320:
                       7396 ; rs232cmd.c 2094                               else
                       7397 ; rs232cmd.c 2095                               {
                       7398 ; rs232cmd.c 2096                                       tmp = FindParameter( Cmd, OffOnPar);
001516 9918rrrr        7400         MOV.W   R1,#SEG( _Cmd )
00151A 9908rrrr        7401         MOV.W   R0,#SOF( _Cmd )
00151E 9938rrrr        7402         MOV.W   R3,#SEG( _OffOnPar )
001522 9928rrrr        7403         MOV.W   R2,#SOF( _OffOnPar )
001526 C525F7          7404         CALL    _FindParameter
                       7406 ; rs232cmd.c 2097               
                       7407 ; rs232cmd.c 2098                                       if ( tmp > -1)
001529 9904FFFF        7409         CMP.W   R0,#0FFFFH
00152D FD63            7410         BLE     _322
                       7411 ; rs232cmd.c 2099                                       {
                       7412 ; rs232cmd.c 2100                                               GenlockCalEnable = tmp;
00152F 8910            7414         MOV.W   R1,R0
001531 964842rr        7415         MOV.B   ES,#SEG( _GenlockCalEnable )
001535 9928rrrr        7416         MOV.W   R2,#SOF( _GenlockCalEnable )
001539 822A            7417         MOV.B   [R2],R1L
                       7418 ; rs232cmd.c 2101       
                       7419 ; rs232cmd.c 2102                                               if ( tmp == 0)
00153B 6900            7421         OR.W    R0,R0
00153D F219            7422         BNE     _321
                       7423 ; rs232cmd.c 2103                                               {
                       7424 ; rs232cmd.c 2104                                                       SetGenlockSystem( Genlock
                            Setup.System);
00153F 964842rr        7426         MOV.B   ES,#SEG( _GenlockSetup )
001543 9908rrrr        7427         MOV.W   R0,#SOF( _GenlockSetup )
001547 8200            7428         MOV.B   R0L,[R0]
001549 B110            7430         MOVS.B  R0H,#00H
                       7431         CALL    _SetGenlockSystem
00154B C4rrrrrr       +7431 ;       FCALL   _SetGenlockSystem
                       7432 ; rs232cmd.c 2105       
                       7433 ; rs232cmd.c 2106                                                       SetBBSystem( BBOutput1, B
                            BSetup[BBOutput1].System);
00154F 964842rr        7435         MOV.B   ES,#SEG( _BBSetup )
001553 9908rrrr        7436         MOV.W   R0,#SOF( _BBSetup )
001557 8200            7437         MOV.B   R0L,[R0]
001559 8120            7438         MOV.B   R1L,R0L
00155B B130            7439         MOVS.B  R1H,#00H
00155D B900            7440         MOV.W   R0,#00H
                       7441         CALL    _SetBBSystem
00155F C4rrrrrr       +7441 ;       FCALL   _SetBBSystem
                       7442 ; rs232cmd.c 2107       
                       7443 ; rs232cmd.c 2108                                                       BBControlPort = 0;
001563 964842rr        7445         MOV.B   ES,#SEG( _BBControlPort )
001567 9908rrrr        7446         MOV.W   R0,#SOF( _BBControlPort )
00156B BA00            7447         MOV.W   [R0],#00H
                       7448 ; rs232cmd.c 2109                                               }
00156D FE49            7450         BR      _329
00156D FE4900          7450         BR      _329
001570                 7451 _321:
                       7452 ; rs232cmd.c 2110                                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 117

ADDR   CODE            LINE SOURCELINE
                       7453 ; rs232cmd.c 2111                                               {
                       7454 ; rs232cmd.c 2112                                                                                
                                                                                                                             
                                          // Force genlock internal mode
                       7455 ; rs232cmd.c 2113                                                       sio0SndCommand( 12, SPG_V
                            24_address, "GM0");
001570 9908000C        7457         MOV.W   R0,#0CH
001574 9938rrrr        7458         MOV.W   R3,#SEG( _313 )
001578 9928rrrr        7459         MOV.W   R2,#SOF( _313 )
00157C 0F0C            7460         PUSH.W  R2, R3
00157E 99180015        7462         MOV.W   R1,#015H
                       7463         CALL    _sio0SndCommand
001582 C4rrrrrr       +7463 ;       FCALL   _sio0SndCommand
001586 A974            7464         ADDS.W  R7,#04H
                       7466 ; rs232cmd.c 2114       
                       7467 ; rs232cmd.c 2115                                                                                
                                                                                                                             
                                          // Force BB1 PAL mode
                       7468 ; rs232cmd.c 2116                                                       sio0SndCommand( 20, BB_V2
                            4_address, "HG%ld;", BBSetup[BBOutput1].Delay);
001588 99180034        7470         MOV.W   R1,#034H
00158C 964842rr        7471         MOV.B   ES,#SEG( _BBSetup+2 )
001590 9938rrrr        7472         MOV.W   R3,#SOF( _BBSetup+2 )
001594 8B23            7473         MOV.W   R2,[R3+]
001596 8A33            7474         MOV.W   R3,[R3]
001598 0F0C            7475         PUSH.W  R2, R3
00159A 9938rrrr        7477         MOV.W   R3,#SEG( _314 )
00159E 9928rrrr        7478         MOV.W   R2,#SOF( _314 )
0015A2 0F0C            7479         PUSH.W  R2, R3
0015A4 99080014        7481         MOV.W   R0,#014H
                       7482         CALL    _sio0SndCommand
0015A8 C4rrrrrr       +7482 ;       FCALL   _sio0SndCommand
0015AC 99700008        7483         ADD.W   R7,#08H
                       7485 ; rs232cmd.c 2117       
                       7486 ; rs232cmd.c 2118                                                       BBControlPort = 1;       
                                                                                   // Set BB1 to F45MHz
0015B0 964842rr        7488         MOV.B   ES,#SEG( _BBControlPort )
0015B4 9908rrrr        7489         MOV.W   R0,#SOF( _BBControlPort )
0015B8 BA01            7490         MOV.W   [R0],#01H
                       7491 ; rs232cmd.c 2119       
                       7492 ; rs232cmd.c 2120                                                       GenlockCalValue = Calibra
                            tion.GenlockCalibration.DACUserValue;
0015BA 964842rr        7494         MOV.B   ES,#SEG( _Calibration+120 )
0015BE 9908rrrr        7495         MOV.W   R0,#SOF( _Calibration+120 )
0015C2 8A00            7496         MOV.W   R0,[R0]
0015C4 964842rr        7497         MOV.B   ES,#SEG( _GenlockCalValue )
0015C8 9918rrrr        7498         MOV.W   R1,#SOF( _GenlockCalValue )
0015CC 8A09            7499         MOV.W   [R1],R0
                       7500 ; rs232cmd.c 2121       
                       7501 ; rs232cmd.c 2122                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%d;", GenlockCalValue);
0015CE 964842rr        7503         MOV.B   ES,#SEG( _GenlockCalValue )
0015D2 9908rrrr        7504         MOV.W   R0,#SOF( _GenlockCalValue )
0015D6 8A00            7505         MOV.W   R0,[R0]
0015D8 0F01            7506         PUSH.W  R0
0015DA 9918rrrr        7508         MOV.W   R1,#SEG( _315 )
0015DE 9908rrrr        7509         MOV.W   R0,#SOF( _315 )
0015E2 0F03            7510         PUSH.W  R0, R1
0015E4 99080014        7512         MOV.W   R0,#014H
0015E8 99180015        7513         MOV.W   R1,#015H
                       7514         CALL    _sio0SndCommand
0015EC C4rrrrrr       +7514 ;       FCALL   _sio0SndCommand
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 118

ADDR   CODE            LINE SOURCELINE
0015F0 A976            7515         ADDS.W  R7,#06H
                       7517 ; rs232cmd.c 2123                                               }
                       7518 ; rs232cmd.c 2124                                       }
0015F2 FE06            7520         BR      _329
0015F2 FE06            7520         BR      _329
0015F4                 7521 _322:
                       7522 ; rs232cmd.c 2125                                       else
                       7523 ; rs232cmd.c 2126                                               SCPIError = DataOutOfRange;
0015F4 964842rr        7525         MOV.B   ES,#SEG( _SCPIError )
0015F8 9908rrrr        7526         MOV.W   R0,#SOF( _SCPIError )
0015FC 9A080021        7527         MOV.W   [R0],#021H
                       7528 ; rs232cmd.c 2127                               }
                       7529 ; rs232cmd.c 2128                       }
                       7530 ; rs232cmd.c 2129               }
001600                 7532 _329:
                       7533 ; rs232cmd.c 2130       }
001600 2F30            7535         POP.W   R4, R5
001602 D680            7537         RET
                       7540 ; rs232cmd.c 2131       
                       7541 ; rs232cmd.c 2132       /************************************************************************
                            **/
                       7542 ; rs232cmd.c 2133       /* GenlockGenCalibrateAdjust                                             
                                                                                                      RS232CMD.C */
                       7543 ; rs232cmd.c 2134       
                       7544 ; rs232cmd.c 2135       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                  */
                       7545 ; rs232cmd.c 2136       /* Revised:             001016                                           
                                                                                                                             
                                                                                  */
                       7546 ; rs232cmd.c 2137       
                       7547 ; rs232cmd.c 2138       /* Function:    Handle the genlock calibration                           
                                                                                                                   */
                       7548 ; rs232cmd.c 2139       
                       7549 ; rs232cmd.c 2140       
                       7550 ; rs232cmd.c 2141       
                       7551 ; rs232cmd.c 2142       /************************************************************************
                            **/
                       7552 ; rs232cmd.c 2143       void GenlockGenCalibrateAdjust( void)
                       7553 ; rs232cmd.c 2144       {
                       7554         ALIGN   1
                       7556         PUBLIC  _GenlockGenCalibrateAdjust
001604                 7557 _GenlockGenCalibrateAdjust:
001604 0F30            7561         PUSH.W  R4, R5
                       7569 ; rs232cmd.c 2145               int tmp;
                       7570 ; rs232cmd.c 2146               UI MinVal, MaxVal;
                       7571 ; rs232cmd.c 2147       
                       7572 ; rs232cmd.c 2148               if ( CmdExecute && !SCPIError)
001606 964842rr        7574         MOV.B   ES,#SEG( _CmdExecute )
00160A 9908rrrr        7575         MOV.W   R0,#SOF( _CmdExecute )
00160E 8200            7576         MOV.B   R0L,[R0]
                       7577         BEQ     _349
001610 F202           +7577 ;       BNE     _LG_378
001612 D5009D         +7577 ;       JMP.L   _349
001612 D5009D00       +7577 ;       JMP.L   _349
001616                +7577 _LG_378:
001616 964842rr        7578         MOV.B   ES,#SEG( _SCPIError )
00161A 9908rrrr        7579         MOV.W   R0,#SOF( _SCPIError )
00161E 8A00            7580         MOV.W   R0,[R0]
                       7581         BNE     _349
001620 F302           +7581 ;       BEQ     _LG_380
001622 D50095         +7581 ;       JMP.L   _349
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 119

ADDR   CODE            LINE SOURCELINE
001622 D5009500       +7581 ;       JMP.L   _349
001626                +7581 _LG_380:
                       7582 ; rs232cmd.c 2149               {
                       7583 ; rs232cmd.c 2150                       if ( CmdRequest)
001626 964842rr        7585         MOV.B   ES,#SEG( _CmdRequest )
00162A 9908rrrr        7586         MOV.W   R0,#SOF( _CmdRequest )
00162E 8200            7587         MOV.B   R0L,[R0]
001630 F307            7588         BEQ     _334
                       7589 ; rs232cmd.c 2151                               SCPIError = SyntaxErr;
001632 964842rr        7591         MOV.B   ES,#SEG( _SCPIError )
001636 9908rrrr        7592         MOV.W   R0,#SOF( _SCPIError )
00163A BA03            7593         MOV.W   [R0],#03H
                       7594         BR      _349
00163C D50088         +7594         JMP.L   _349
00163C D5008800       +7594         JMP.L   _349
001640                 7595 _334:
                       7596 ; rs232cmd.c 2152                       else
                       7597 ; rs232cmd.c 2153                       {
                       7598 ; rs232cmd.c 2154                               if ( ParCnt == 0)
001640 964842rr        7600         MOV.B   ES,#SEG( _ParCnt )
001644 9908rrrr        7601         MOV.W   R0,#SOF( _ParCnt )
001648 8200            7602         MOV.B   R0L,[R0]
00164A F206            7603         BNE     _335
                       7604 ; rs232cmd.c 2155                                       SCPIError = SyntaxErr;
00164C 964842rr        7606         MOV.B   ES,#SEG( _SCPIError )
001650 9908rrrr        7607         MOV.W   R0,#SOF( _SCPIError )
001654 BA03            7608         MOV.W   [R0],#03H
001656 FE7B            7609         BR      _349
001656 FE7B            7609         BR      _349
001658                 7610 _335:
                       7611 ; rs232cmd.c 2156                               else
                       7612 ; rs232cmd.c 2157                               {
                       7613 ; rs232cmd.c 2158                                       MinVal = Calibration.GenlockCalibration.D
                            ACFactValue - 150;
001658 964842rr        7615         MOV.B   ES,#SEG( _Calibration+118 )
00165C 9908rrrr        7616         MOV.W   R0,#SOF( _Calibration+118 )
001660 8A00            7617         MOV.W   R0,[R0]
001662 8950            7618         MOV.W   R5,R0
001664 8945            7619         MOV.W   R4,R5
001666 99520096        7620         SUB.W   R5,#096H
                       7622 ; rs232cmd.c 2159                                       MaxVal = Calibration.GenlockCalibration.D
                            ACFactValue + 150;
00166A 99400096        7624         ADD.W   R4,#096H
                       7626 ; rs232cmd.c 2160       
                       7627 ; rs232cmd.c 2161                                       tmp = FindParameter( Cmd, MinMaxPar);
00166E 9938rrrr        7629         MOV.W   R3,#SEG( _MinMaxPar )
001672 9928rrrr        7630         MOV.W   R2,#SOF( _MinMaxPar )
001676 9918rrrr        7631         MOV.W   R1,#SEG( _Cmd )
00167A 9908rrrr        7632         MOV.W   R0,#SOF( _Cmd )
00167E C5254B          7633         CALL    _FindParameter
                       7635 ; rs232cmd.c 2162               
                       7636 ; rs232cmd.c 2163                                       if ( tmp > -1)
001681 9904FFFF        7638         CMP.W   R0,#0FFFFH
001685 FD21            7639         BLE     _338
                       7640 ; rs232cmd.c 2164                                       {
                       7641 ; rs232cmd.c 2165                                               if ( tmp == 0)
001687 6900            7643         OR.W    R0,R0
001689 F207            7644         BNE     _336
                       7645 ; rs232cmd.c 2166                                                       GenlockCalValue = MaxVal;
                            
00168B 964842rr        7647         MOV.B   ES,#SEG( _GenlockCalValue )
00168F 9908rrrr        7648         MOV.W   R0,#SOF( _GenlockCalValue )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 120

ADDR   CODE            LINE SOURCELINE
001693 8A48            7649         MOV.W   [R0],R4
001695 FE06            7650         BR      _337
001695 FE0600          7650         BR      _337
001698                 7651 _336:
                       7653 ; rs232cmd.c 2167                                               else
                       7654 ; rs232cmd.c 2168                                                       GenlockCalValue = MinVal;
                            
001698 964842rr        7656         MOV.B   ES,#SEG( _GenlockCalValue )
00169C 9908rrrr        7657         MOV.W   R0,#SOF( _GenlockCalValue )
0016A0 8A58            7658         MOV.W   [R0],R5
0016A0 8A58            7658         MOV.W   [R0],R5
0016A2                 7659 _337:
                       7660 ; rs232cmd.c 2169       
                       7661 ; rs232cmd.c 2170                                               sio0SndCommand( 20, SPG_V24_addre
                            ss, "GX%u;", GenlockCalValue); 
0016A2 99080014        7663         MOV.W   R0,#014H
0016A6 99180015        7665         MOV.W   R1,#015H
0016AA 964842rr        7666         MOV.B   ES,#SEG( _GenlockCalValue )
0016AE 9928rrrr        7667         MOV.W   R2,#SOF( _GenlockCalValue )
0016B2 8A22            7668         MOV.W   R2,[R2]
0016B4 0F04            7669         PUSH.W  R2
0016B6 9938rrrr        7671         MOV.W   R3,#SEG( _333 )
0016BA 9928rrrr        7672         MOV.W   R2,#SOF( _333 )
0016BE 0F0C            7673         PUSH.W  R2, R3
                       7675         CALL    _sio0SndCommand
0016C0 C4rrrrrr       +7675 ;       FCALL   _sio0SndCommand
0016C4 A976            7676         ADDS.W  R7,#06H
                       7678 ; rs232cmd.c 2171                                       }
0016C6 FE43            7680         BR      _349
0016C6 FE43            7680         BR      _349
0016C8                 7681 _338:
                       7683 ; rs232cmd.c 2172                                       else
                       7684 ; rs232cmd.c 2173                                       {
                       7685 ; rs232cmd.c 2174                                               tmp = FindParameter( Cmd, UpDownP
                            ar);
0016C8 9938rrrr        7687         MOV.W   R3,#SEG( _UpDownPar )
0016CC 9928rrrr        7688         MOV.W   R2,#SOF( _UpDownPar )
0016D0 9918rrrr        7689         MOV.W   R1,#SEG( _Cmd )
0016D4 9908rrrr        7690         MOV.W   R0,#SOF( _Cmd )
0016D8 C5251E          7691         CALL    _FindParameter
                       7693 ; rs232cmd.c 2175       
                       7694 ; rs232cmd.c 2176                                               if ( tmp > -1)
0016DB 9904FFFF        7696         CMP.W   R0,#0FFFFH
0016DF FD31            7697         BLE     _343
                       7698 ; rs232cmd.c 2177                                               {
                       7699 ; rs232cmd.c 2178                                                       if ( tmp == 0)
0016E1 6900            7701         OR.W    R0,R0
0016E3 F20F            7702         BNE     _339
                       7703 ; rs232cmd.c 2179                                                       {
                       7704 ; rs232cmd.c 2180                                                               if ( GenlockCalVa
                            lue > MinVal)
0016E5 964842rr        7706         MOV.B   ES,#SEG( _GenlockCalValue )
0016E9 9908rrrr        7707         MOV.W   R0,#SOF( _GenlockCalValue )
0016ED 8A00            7708         MOV.W   R0,[R0]
0016EF 4905            7710         CMP.W   R0,R5
0016F1 F915            7711         BL      _342
                       7712 ; rs232cmd.c 2181                                                                       GenlockCa
                            lValue--;
0016F3 A90F            7714         ADDS.W  R0,#0FH
0016F5 964842rr        7715         MOV.B   ES,#SEG( _GenlockCalValue )
0016F9 9918rrrr        7716         MOV.W   R1,#SOF( _GenlockCalValue )
0016FD 8A09            7717         MOV.W   [R1],R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 121

ADDR   CODE            LINE SOURCELINE
                       7718 ; rs232cmd.c 2182                                                       }
0016FF FE0E            7720         BR      _342
0016FF FE0E00          7720         BR      _342
001702                 7721 _339:
                       7722 ; rs232cmd.c 2183                                                       else
                       7723 ; rs232cmd.c 2184                                                       {
                       7724 ; rs232cmd.c 2185                                                               if ( GenlockCalVa
                            lue < MaxVal)
001702 964842rr        7726         MOV.B   ES,#SEG( _GenlockCalValue )
001706 9908rrrr        7727         MOV.W   R0,#SOF( _GenlockCalValue )
00170A 8A00            7728         MOV.W   R0,[R0]
00170C 4904            7729         CMP.W   R0,R4
00170E F006            7730         BCC     _342
                       7731 ; rs232cmd.c 2186                                                                       GenlockCa
                            lValue++;
001710 A901            7733         ADDS.W  R0,#01H
001712 964842rr        7734         MOV.B   ES,#SEG( _GenlockCalValue )
001716 9918rrrr        7735         MOV.W   R1,#SOF( _GenlockCalValue )
00171A 8A09            7736         MOV.W   [R1],R0
                       7737 ; rs232cmd.c 2187                                                       }
00171C                 7739 _342:
                       7740 ; rs232cmd.c 2188       
                       7741 ; rs232cmd.c 2189                                                       sio0SndCommand( 20, SPG_V
                            24_address, "GX%u;", GenlockCalValue);
00171C 99080014        7743         MOV.W   R0,#014H
001720 99180015        7744         MOV.W   R1,#015H
001724 964842rr        7745         MOV.B   ES,#SEG( _GenlockCalValue )
001728 9928rrrr        7746         MOV.W   R2,#SOF( _GenlockCalValue )
00172C 8A22            7747         MOV.W   R2,[R2]
00172E 0F04            7748         PUSH.W  R2
001730 9938rrrr        7750         MOV.W   R3,#SEG( _333 )
001734 9928rrrr        7751         MOV.W   R2,#SOF( _333 )
001738 0F0C            7752         PUSH.W  R2, R3
                       7754         CALL    _sio0SndCommand
00173A C4rrrrrr       +7754 ;       FCALL   _sio0SndCommand
00173E A976            7755         ADDS.W  R7,#06H
                       7757 ; rs232cmd.c 2190                                               }
001740 FE06            7759         BR      _349
001740 FE06            7759         BR      _349
001742                 7760 _343:
                       7761 ; rs232cmd.c 2191                                               else
                       7762 ; rs232cmd.c 2192                                                       SCPIError = DataOutOfRang
                            e;
001742 964842rr        7764         MOV.B   ES,#SEG( _SCPIError )
001746 9908rrrr        7765         MOV.W   R0,#SOF( _SCPIError )
00174A 9A080021        7766         MOV.W   [R0],#021H
                       7767 ; rs232cmd.c 2193                                       }       
                       7768 ; rs232cmd.c 2194                               }
                       7769 ; rs232cmd.c 2195                       }
                       7770 ; rs232cmd.c 2196               }
00174E                 7772 _349:
                       7773 ; rs232cmd.c 2197       }
00174E 2F30            7775         POP.W   R4, R5
001750 D680            7777         RET
                       7779 ; rs232cmd.c 2198       
                       7780 ; rs232cmd.c 2199       /************************************************************************
                            **/
                       7781 ; rs232cmd.c 2200       /* GenlockGenCalibrateStore                                              
                                                                                                      RS232CMD.C */
                       7782 ; rs232cmd.c 2201       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 122

ADDR   CODE            LINE SOURCELINE
                       7783 ; rs232cmd.c 2202       /* Author:              Kim Engedahl, DEV, 000525                        
                                                                                                                             
                                  */
                       7784 ; rs232cmd.c 2203       /* Revised:             000622                                           
                                                                                                                             
                                                                                  */
                       7785 ; rs232cmd.c 2204       
                       7786 ; rs232cmd.c 2205       /* Function:    Handle the genlock calibration                           
                                                                                                                   */
                       7787 ; rs232cmd.c 2206       
                       7788 ; rs232cmd.c 2207       
                       7789 ; rs232cmd.c 2208       
                       7790 ; rs232cmd.c 2209       /************************************************************************
                            **/
                       7791 ; rs232cmd.c 2210       void GenlockGenCalibrateStore( void)
                       7792 ; rs232cmd.c 2211       {
                       7793         ALIGN   1
                       7795         PUBLIC  _GenlockGenCalibrateStore
001752                 7796 _GenlockGenCalibrateStore:
                       7800 ; rs232cmd.c 2212               if ( CmdExecute && !SCPIError)
001752 964842rr        7802         MOV.B   ES,#SEG( _CmdExecute )
001756 9908rrrr        7803         MOV.W   R0,#SOF( _CmdExecute )
00175A 8200            7804         MOV.B   R0L,[R0]
00175C F342            7805         BEQ     _361
00175E 964842rr        7806         MOV.B   ES,#SEG( _SCPIError )
001762 9908rrrr        7807         MOV.W   R0,#SOF( _SCPIError )
001766 8A00            7808         MOV.W   R0,[R0]
001768 F23C            7809         BNE     _361
                       7810 ; rs232cmd.c 2213               {
                       7811 ; rs232cmd.c 2214                       if ( CmdRequest)
00176A 964842rr        7813         MOV.B   ES,#SEG( _CmdRequest )
00176E 9908rrrr        7814         MOV.W   R0,#SOF( _CmdRequest )
001772 8200            7815         MOV.B   R0L,[R0]
001774 F306            7816         BEQ     _354
                       7817 ; rs232cmd.c 2215                                       SCPIError = SyntaxErr;
001776 964842rr        7819         MOV.B   ES,#SEG( _SCPIError )
00177A 9908rrrr        7820         MOV.W   R0,#SOF( _SCPIError )
00177E BA03            7821         MOV.W   [R0],#03H
001780 D680            7822         RET
001780 D680            7822         RET
001782                 7823 _354:
                       7824 ; rs232cmd.c 2216                       else
                       7825 ; rs232cmd.c 2217                       {
                       7826 ; rs232cmd.c 2218                               if ( ParCnt)
001782 964842rr        7828         MOV.B   ES,#SEG( _ParCnt )
001786 9908rrrr        7829         MOV.W   R0,#SOF( _ParCnt )
00178A 8200            7830         MOV.B   R0L,[R0]
00178C F306            7831         BEQ     _355
                       7832 ; rs232cmd.c 2219                                       SCPIError = ParNotAllowed;
00178E 964842rr        7834         MOV.B   ES,#SEG( _SCPIError )
001792 9908rrrr        7835         MOV.W   R0,#SOF( _SCPIError )
001796 BA06            7836         MOV.W   [R0],#06H
001798 D680            7837         RET
001798 D680            7837         RET
00179A                 7838 _355:
                       7839 ; rs232cmd.c 2220                               else
                       7840 ; rs232cmd.c 2221                               {
                       7841 ; rs232cmd.c 2222                                       if ( GenlockCalEnable)
00179A 964842rr        7843         MOV.B   ES,#SEG( _GenlockCalEnable )
00179E 9908rrrr        7844         MOV.W   R0,#SOF( _GenlockCalEnable )
0017A2 8200            7845         MOV.B   R0L,[R0]
0017A4 F318            7846         BEQ     _356
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 123

ADDR   CODE            LINE SOURCELINE
                       7847 ; rs232cmd.c 2223                                       {
                       7848 ; rs232cmd.c 2224                                               Calibration.GenlockCalibration.DA
                            CUserValue = GenlockCalValue;
0017A6 964842rr        7850         MOV.B   ES,#SEG( _GenlockCalValue )
0017AA 9908rrrr        7851         MOV.W   R0,#SOF( _GenlockCalValue )
0017AE 8A00            7852         MOV.W   R0,[R0]
0017B0 964842rr        7853         MOV.B   ES,#SEG( _Calibration+120 )
0017B4 9918rrrr        7854         MOV.W   R1,#SOF( _Calibration+120 )
0017B8 8A09            7855         MOV.W   [R1],R0
                       7856 ; rs232cmd.c 2225                                                               
                       7857 ; rs232cmd.c 2226                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0017BA 9918rrrr        7859         MOV.W   R1,#SEG( _Calibration )
0017BE 9908rrrr        7860         MOV.W   R0,#SOF( _Calibration )
0017C2 964842rr        7861         MOV.B   ES,#SEG( _CalibrationPtr )
0017C6 9928rrrr        7862         MOV.W   R2,#SOF( _CalibrationPtr )
0017CA 8A22            7863         MOV.W   R2,[R2]
0017CC 993800E2        7864         MOV.W   R3,#0E2H
                       7865         CALL    _NV_Store
0017D0 C4rrrrrr       +7865 ;       FCALL   _NV_Store
                       7866 ; rs232cmd.c 2227                                       }
0017D4 D680            7868         RET
0017D4 D680            7868         RET
0017D6                 7869 _356:
                       7870 ; rs232cmd.c 2228                                       else
                       7871 ; rs232cmd.c 2229                                               SCPIError = ExecErr;             
                                                   
0017D6 964842rr        7873         MOV.B   ES,#SEG( _SCPIError )
0017DA 9908rrrr        7874         MOV.W   R0,#SOF( _SCPIError )
0017DE 9A08001D        7875         MOV.W   [R0],#01DH
                       7876 ; rs232cmd.c 2230                               }
                       7877 ; rs232cmd.c 2231                       }
                       7878 ; rs232cmd.c 2232               }
0017E2                 7880 _361:
                       7881 ; rs232cmd.c 2233       }
0017E2 D680            7883         RET
                       7885 ; rs232cmd.c 2234       
                       7886 ; rs232cmd.c 2235       /************************************************************************
                            **/
                       7887 ; rs232cmd.c 2236       /* BBSuffix                                                              
                                                                                                                             
                                                             RS232CMD.C   */
                       7888 ; rs232cmd.c 2237       
                       7889 ; rs232cmd.c 2238       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                       7890 ; rs232cmd.c 2239       /* Revised:             000604                                           
                                                                                                                             
                                                                                  */
                       7891 ; rs232cmd.c 2240       
                       7892 ; rs232cmd.c 2241       /* Function:    Get suffix of the Black Burst generator                  
                                                                                           */
                       7893 ; rs232cmd.c 2242       
                       7894 ; rs232cmd.c 2243       
                       7895 ; rs232cmd.c 2244       /* Updates:             Suffix                                           
                                                                                                                             
                                                                                                  */
                       7896 ; rs232cmd.c 2245       /************************************************************************
                            **/
                       7897 ; rs232cmd.c 2246       void BBGenSuffix( void)
                       7898 ; rs232cmd.c 2247       {
                       7899         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 124

ADDR   CODE            LINE SOURCELINE
                       7901         PUBLIC  _BBGenSuffix
0017E4                 7902 _BBGenSuffix:
                       7906 ; rs232cmd.c 2248               if ( NumSuffix > 3)
0017E4 964842rr        7908         MOV.B   ES,#SEG( _NumSuffix )
0017E8 9908rrrr        7909         MOV.W   R0,#SOF( _NumSuffix )
0017EC 8A00            7910         MOV.W   R0,[R0]
0017EE 99040003        7911         CMP.W   R0,#03H
0017F2 F907            7912         BL      _362
                       7913 ; rs232cmd.c 2249                       SCPIError = HdrSuffixOutOfRange;
0017F4 964842rr        7915         MOV.B   ES,#SEG( _SCPIError )
0017F8 9908rrrr        7916         MOV.W   R0,#SOF( _SCPIError )
0017FC 9A08000C        7917         MOV.W   [R0],#0CH
001800 D680            7918         RET
001800 D680            7918         RET
001802                 7919 _362:
                       7920 ; rs232cmd.c 2250               else
                       7921 ; rs232cmd.c 2251                       Suffix[0] = NumSuffix-1;
001802 A90F            7923         ADDS.W  R0,#0FH
001804 964842rr        7924         MOV.B   ES,#SEG( _Suffix )
001808 9918rrrr        7925         MOV.W   R1,#SOF( _Suffix )
00180C 8A09            7926         MOV.W   [R1],R0
00180C 8A09            7926         MOV.W   [R1],R0
00180E                 7927 _363:
                       7928 ; rs232cmd.c 2252       
                       7929 ; rs232cmd.c 2253       }
00180E D680            7931         RET
                       7933 ; rs232cmd.c 2254       
                       7934 ; rs232cmd.c 2255       /************************************************************************
                            **/
                       7935 ; rs232cmd.c 2256       /* BBGen                                                                 
                                                                                                                             
                                                                       RS232CMD.C */
                       7936 ; rs232cmd.c 2257       
                       7937 ; rs232cmd.c 2258       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                  */
                       7938 ; rs232cmd.c 2259       /* Revised:             000604                                           
                                                                                                                             
                                                                                  */
                       7939 ; rs232cmd.c 2260       
                       7940 ; rs232cmd.c 2261       /* Function:    Handle the Black Burst command.                          
                                                                                                                   */
                       7941 ; rs232cmd.c 2262       /* Remarks:             Request only                                     
                                                                                                                             
                                                                                  */
                       7942 ; rs232cmd.c 2263       
                       7943 ; rs232cmd.c 2264       
                       7944 ; rs232cmd.c 2265       /************************************************************************
                            **/
                       7945 ; rs232cmd.c 2266       void BBGen( void)
                       7946 ; rs232cmd.c 2267       {
                       7947         ALIGN   1
                       7949         PUBLIC  _BBGen
001810                 7950 _BBGen:
001810 0F30            7954         PUSH.W  R4, R5
                       7958 ; rs232cmd.c 2268               char code *str;
                       7959 ; rs232cmd.c 2269       
                       7960 ; rs232cmd.c 2270               if ( CmdExecute && !SCPIError)
001812 964842rr        7962         MOV.B   ES,#SEG( _CmdExecute )
001816 9908rrrr        7963         MOV.W   R0,#SOF( _CmdExecute )
00181A 8200            7964         MOV.B   R0L,[R0]
                       7965         BEQ     _373
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 125

ADDR   CODE            LINE SOURCELINE
00181C F202           +7965 ;       BNE     _LG_410
00181E D50081         +7965 ;       JMP.L   _373
00181E D5008100       +7965 ;       JMP.L   _373
001822                +7965 _LG_410:
001822 964842rr        7966         MOV.B   ES,#SEG( _SCPIError )
001826 9908rrrr        7967         MOV.W   R0,#SOF( _SCPIError )
00182A 8A00            7968         MOV.W   R0,[R0]
00182C F27A            7969         BNE     _373
                       7970 ; rs232cmd.c 2271               {
                       7971 ; rs232cmd.c 2272                       if ( !CmdRequest)
00182E 964842rr        7973         MOV.B   ES,#SEG( _CmdRequest )
001832 9908rrrr        7974         MOV.W   R0,#SOF( _CmdRequest )
001836 8200            7975         MOV.B   R0L,[R0]
001838 F206            7976         BNE     _366
                       7977 ; rs232cmd.c 2273                                       SCPIError = SyntaxErr;
00183A 964842rr        7979         MOV.B   ES,#SEG( _SCPIError )
00183E 9908rrrr        7980         MOV.W   R0,#SOF( _SCPIError )
001842 BA03            7981         MOV.W   [R0],#03H
001844 FE6E            7982         BR      _373
001844 FE6E            7982         BR      _373
001846                 7983 _366:
                       7984 ; rs232cmd.c 2274                       else
                       7985 ; rs232cmd.c 2275                       {
                       7986 ; rs232cmd.c 2276                               if ( ParCnt)
001846 964842rr        7988         MOV.B   ES,#SEG( _ParCnt )
00184A 9908rrrr        7989         MOV.W   R0,#SOF( _ParCnt )
00184E 8200            7990         MOV.B   R0L,[R0]
001850 F306            7991         BEQ     _367
                       7992 ; rs232cmd.c 2277                                       SCPIError = ParNotAllowed;
001852 964842rr        7994         MOV.B   ES,#SEG( _SCPIError )
001856 9908rrrr        7995         MOV.W   R0,#SOF( _SCPIError )
00185A BA06            7996         MOV.W   [R0],#06H
00185C FE62            7997         BR      _373
00185C FE62            7997         BR      _373
00185E                 7998 _367:
                       7999 ; rs232cmd.c 2278                               else
                       8000 ; rs232cmd.c 2279                               {
                       8001 ; rs232cmd.c 2280                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
00185E 964842rr        8003         MOV.B   ES,#SEG( _Suffix )
001862 9908rrrr        8004         MOV.W   R0,#SOF( _Suffix )
001866 8A00            8005         MOV.W   R0,[R0]
001868 D903            8006         ASL.W   R0,#03H
00186A B910            8007         MOVS.W  R1,#00H
00186C 964842rr        8008         MOV.B   ES,#SEG( _BBSetup )
001870 8500rrrr        8009         MOV.B   R0L,[R0+SOF( _BBSetup )]
001874 E8000C          8010         MULU.B  R0L,#0CH
001877 8920            8011         MOV.W   R2,R0
001879 B930            8012         MOVS.W  R3,#00H
00187B 9918rrrr        8013         MOV.W   R1,#SEG( _SystemPar )
00187F 9908rrrr        8014         MOV.W   R0,#SOF( _SystemPar )
001883 0902            8015         ADD.W   R0,R2
001885 1913            8016         ADDC.W  R1,R3
001887 862C43          8017         MOV.B   CS,R1L
00188A 8820            8018         MOVC.W  R2,[R0+]
00188C 99040000        8019         CMP.W   R0,#00H
001890 F202            8020         BNE     _374
001892 A64143          8021         ADDS.B  CS,#01H
001892 A6414300        8021         ADDS.B  CS,#01H
001896                 8022 _374:
001896 8830            8023         MOVC.W  R3,[R0+]
001898 8953            8024         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 126

ADDR   CODE            LINE SOURCELINE
00189A 8942            8025         MOV.W   R4,R2
                       8027 ; rs232cmd.c 2281       
                       8028 ; rs232cmd.c 2282                                       while ( *str)
00189C 866C43          8030         MOV.B   CS,R3L
00189F 8062            8031         MOVC.B  R3L,[R2+]
0018A1 F312            8032         BEQ     _369
0018A1 F31200          8032         BEQ     _369
0018A4                 8033 _368:
                       8034 ; rs232cmd.c 2283                                               rs232putchar( *str++);
0018A4 8915            8036         MOV.W   R1,R5
0018A6 8904            8037         MOV.W   R0,R4
0018A8 862C43          8038         MOV.B   CS,R1L
0018AB 8020            8039         MOVC.B  R1L,[R0+]
0018AD 8102            8040         MOV.B   R0L,R1L
                       8041         CALL    _rs232putchar
0018AF C4rrrrrr       +8041 ;       FCALL   _rs232putchar
0018B3 99400001        8042         ADD.W   R4,#01H
0018B7 99510000        8043         ADDC.W  R5,#00H
0018BB 8915            8047         MOV.W   R1,R5
0018BD 8904            8048         MOV.W   R0,R4
0018BF 862C43          8049         MOV.B   CS,R1L
0018C2 8020            8050         MOVC.B  R1L,[R0+]
0018C4 F2EF            8051         BNE     _368
0018C6                 8053 _369:
                       8054 ; rs232cmd.c 2284       
                       8055 ; rs232cmd.c 2285                                       rs232putchar( ',');
0018C6 91082C          8057         MOV.B   R0L,#02CH
                       8058         CALL    _rs232putchar
0018C9 C4rrrrrr       +8058 ;       FCALL   _rs232putchar
                       8059 ; rs232cmd.c 2286       
                       8060 ; rs232cmd.c 2287                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
0018CD 964842rr        8062         MOV.B   ES,#SEG( _Suffix )
0018D1 9928rrrr        8063         MOV.W   R2,#SOF( _Suffix )
0018D5 8A22            8064         MOV.W   R2,[R2]
0018D7 D923            8065         ASL.W   R2,#03H
0018D9 8902            8066         MOV.W   R0,R2
0018DB B910            8067         MOVS.W  R1,#00H
0018DD 964842rr        8068         MOV.B   ES,#SEG( _BBSetup )
0018E1 8500rrrr        8069         MOV.B   R0L,[R0+SOF( _BBSetup )]
0018E5 B930            8070         MOVS.W  R3,#00H
0018E7 964842rr        8071         MOV.B   ES,#SEG( _BBSetup+2 )
0018EB 8D32rrrr        8072         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
0018EF 8D22rrrr        8073         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
0018F3 C52698          8074         CALL    _PrintSamplesToFLT
                       8075 ; rs232cmd.c 2288       
                       8076 ; rs232cmd.c 2289                                       rs232printf( 6, ",%d\n", BBSetup[Suffix[0
                            ]].ScHPhase);
0018F6 B906            8078         MOV.W   R0,#06H
0018F8 964842rr        8079         MOV.B   ES,#SEG( _Suffix )
0018FC 9918rrrr        8080         MOV.W   R1,#SOF( _Suffix )
001900 8A11            8081         MOV.W   R1,[R1]
001902 D913            8082         ASL.W   R1,#03H
001904 8921            8083         MOV.W   R2,R1
001906 B930            8084         MOVS.W  R3,#00H
001908 964842rr        8085         MOV.B   ES,#SEG( _BBSetup+6 )
00190C 8D12rrrr        8086         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
001910 0F02            8087         PUSH.W  R1
001912 9938rrrr        8089         MOV.W   R3,#SEG( _365 )
001916 9928rrrr        8090         MOV.W   R2,#SOF( _365 )
00191A 0F0C            8091         PUSH.W  R2, R3
                       8093         CALL    _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 127

ADDR   CODE            LINE SOURCELINE
00191C C4rrrrrr       +8093 ;       FCALL   _rs232printf
001920 A976            8094         ADDS.W  R7,#06H
                       8096 ; rs232cmd.c 2290                               }
                       8097 ; rs232cmd.c 2291                       }
                       8098 ; rs232cmd.c 2292               }
001922                 8100 _373:
                       8101 ; rs232cmd.c 2293       }
001922 2F30            8103         POP.W   R4, R5
001924 D680            8105         RET
                       8108 ; rs232cmd.c 2294       
                       8109 ; rs232cmd.c 2295       /************************************************************************
                            **/
                       8110 ; rs232cmd.c 2296       /* BBGenSystem                                                           
                                                                                                                             
                                           RS232CMD.C     */
                       8111 ; rs232cmd.c 2297       
                       8112 ; rs232cmd.c 2298       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                  */
                       8113 ; rs232cmd.c 2299       /* Revised:             000604                                           
                                                                                                                             
                                                                                  */
                       8114 ; rs232cmd.c 2300       
                       8115 ; rs232cmd.c 2301       /* Function:    Handle the Black Burst system-command.                   
                                                                                           */
                       8116 ; rs232cmd.c 2302       
                       8117 ; rs232cmd.c 2303       
                       8118 ; rs232cmd.c 2304       
                       8119 ; rs232cmd.c 2305       /************************************************************************
                            **/
                       8120 ; rs232cmd.c 2306       void BBGenSystem( void)
                       8121 ; rs232cmd.c 2307       {
                       8122         ALIGN   1
                       8124         PUBLIC  _BBGenSystem
001926                 8125 _BBGenSystem:
001926 0F30            8129         PUSH.W  R4, R5
                       8135 ; rs232cmd.c 2308               int system;
                       8136 ; rs232cmd.c 2309               char code *str;
                       8137 ; rs232cmd.c 2310       
                       8138 ; rs232cmd.c 2311               if ( CmdExecute && !SCPIError)
001928 964842rr        8140         MOV.B   ES,#SEG( _CmdExecute )
00192C 9908rrrr        8141         MOV.W   R0,#SOF( _CmdExecute )
001930 8200            8142         MOV.B   R0L,[R0]
001932 F37B            8143         BEQ     _386
001934 964842rr        8144         MOV.B   ES,#SEG( _SCPIError )
001938 9908rrrr        8145         MOV.W   R0,#SOF( _SCPIError )
00193C 8A00            8146         MOV.W   R0,[R0]
00193E F275            8147         BNE     _386
                       8148 ; rs232cmd.c 2312               {
                       8149 ; rs232cmd.c 2313                       if ( CmdRequest)
001940 964842rr        8151         MOV.B   ES,#SEG( _CmdRequest )
001944 9908rrrr        8152         MOV.W   R0,#SOF( _CmdRequest )
001948 8200            8153         MOV.B   R0L,[R0]
00194A F345            8154         BEQ     _378
                       8155 ; rs232cmd.c 2314                       {
                       8156 ; rs232cmd.c 2315                               if ( ParCnt)
00194C 964842rr        8158         MOV.B   ES,#SEG( _ParCnt )
001950 9908rrrr        8159         MOV.W   R0,#SOF( _ParCnt )
001954 8200            8160         MOV.B   R0L,[R0]
001956 F306            8161         BEQ     _375
                       8162 ; rs232cmd.c 2316                                       SCPIError = ParNotAllowed;
001958 964842rr        8164         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 128

ADDR   CODE            LINE SOURCELINE
00195C 9908rrrr        8165         MOV.W   R0,#SOF( _SCPIError )
001960 BA06            8166         MOV.W   [R0],#06H
001962 FE63            8167         BR      _386
001962 FE63            8167         BR      _386
001964                 8168 _375:
                       8169 ; rs232cmd.c 2317                               else
                       8170 ; rs232cmd.c 2318                               {
                       8171 ; rs232cmd.c 2319                                       str = SystemPar[BBSetup[Suffix[0]].System
                            ].LongName;
001964 964842rr        8173         MOV.B   ES,#SEG( _Suffix )
001968 9908rrrr        8174         MOV.W   R0,#SOF( _Suffix )
00196C 8A00            8175         MOV.W   R0,[R0]
00196E D903            8176         ASL.W   R0,#03H
001970 B910            8177         MOVS.W  R1,#00H
001972 964842rr        8178         MOV.B   ES,#SEG( _BBSetup )
001976 8500rrrr        8179         MOV.B   R0L,[R0+SOF( _BBSetup )]
00197A E8000C          8180         MULU.B  R0L,#0CH
00197D 8920            8181         MOV.W   R2,R0
00197F B930            8182         MOVS.W  R3,#00H
001981 9918rrrr        8183         MOV.W   R1,#SEG( _SystemPar )
001985 9908rrrr        8184         MOV.W   R0,#SOF( _SystemPar )
001989 0902            8185         ADD.W   R0,R2
00198B 1913            8186         ADDC.W  R1,R3
00198D 862C43          8187         MOV.B   CS,R1L
001990 8820            8188         MOVC.W  R2,[R0+]
001992 99040000        8189         CMP.W   R0,#00H
001996 F202            8190         BNE     _387
001998 A64143          8191         ADDS.B  CS,#01H
001998 A6414300        8191         ADDS.B  CS,#01H
00199C                 8192 _387:
00199C 8830            8193         MOVC.W  R3,[R0+]
00199E 8953            8194         MOV.W   R5,R3
0019A0 8942            8195         MOV.W   R4,R2
                       8197 ; rs232cmd.c 2320       
                       8198 ; rs232cmd.c 2321                                       while ( *str)
0019A2 866C43          8200         MOV.B   CS,R3L
0019A5 8062            8201         MOVC.B  R3L,[R2+]
0019A7 F312            8202         BEQ     _377
0019A7 F31200          8202         BEQ     _377
0019AA                 8203 _376:
                       8204 ; rs232cmd.c 2322                                               rs232putchar( *str++);
0019AA 8915            8206         MOV.W   R1,R5
0019AC 8904            8207         MOV.W   R0,R4
0019AE 862C43          8208         MOV.B   CS,R1L
0019B1 8020            8209         MOVC.B  R1L,[R0+]
0019B3 8102            8210         MOV.B   R0L,R1L
                       8211         CALL    _rs232putchar
0019B5 C4rrrrrr       +8211 ;       FCALL   _rs232putchar
0019B9 99400001        8212         ADD.W   R4,#01H
0019BD 99510000        8213         ADDC.W  R5,#00H
0019C1 8915            8217         MOV.W   R1,R5
0019C3 8904            8218         MOV.W   R0,R4
0019C5 862C43          8219         MOV.B   CS,R1L
0019C8 8020            8220         MOVC.B  R1L,[R0+]
0019CA F2EF            8221         BNE     _376
0019CC                 8223 _377:
                       8224 ; rs232cmd.c 2323       
                       8225 ; rs232cmd.c 2324                                       rs232putchar('\n');
0019CC 91080A          8227         MOV.B   R0L,#0AH
                       8228         CALL    _rs232putchar
0019CF C4rrrrrr       +8228 ;       FCALL   _rs232putchar
                       8229 ; rs232cmd.c 2325                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 129

ADDR   CODE            LINE SOURCELINE
                       8230 ; rs232cmd.c 2326                       }
0019D3 FE2B            8232         BR      _386
0019D3 FE2B00          8232         BR      _386
0019D6                 8233 _378:
                       8234 ; rs232cmd.c 2327                       else
                       8235 ; rs232cmd.c 2328                       {
                       8236 ; rs232cmd.c 2329                               if ( ParCnt != 1)
0019D6 964842rr        8238         MOV.B   ES,#SEG( _ParCnt )
0019DA 9908rrrr        8239         MOV.W   R0,#SOF( _ParCnt )
0019DE 8200            8240         MOV.B   R0L,[R0]
0019E0 910401          8241         CMP.B   R0L,#01H
0019E3 F307            8242         BEQ     _379
                       8243 ; rs232cmd.c 2330                                       SCPIError = SyntaxErr;
0019E5 964842rr        8245         MOV.B   ES,#SEG( _SCPIError )
0019E9 9908rrrr        8246         MOV.W   R0,#SOF( _SCPIError )
0019ED BA03            8247         MOV.W   [R0],#03H
0019EF FE1D            8248         BR      _386
0019EF FE1D00          8248         BR      _386
0019F2                 8249 _379:
                       8250 ; rs232cmd.c 2331                               else
                       8251 ; rs232cmd.c 2332                               {
                       8252 ; rs232cmd.c 2333                                       system = FindParameter( Cmd, SystemPar);
0019F2 9918rrrr        8254         MOV.W   R1,#SEG( _Cmd )
0019F6 9908rrrr        8255         MOV.W   R0,#SOF( _Cmd )
0019FA 9938rrrr        8256         MOV.W   R3,#SEG( _SystemPar )
0019FE 9928rrrr        8257         MOV.W   R2,#SOF( _SystemPar )
001A02 C52389          8258         CALL    _FindParameter
                       8260 ; rs232cmd.c 2334       
                       8261 ; rs232cmd.c 2335                                       if ( system > -1)
001A05 8910            8263         MOV.W   R1,R0
001A07 9914FFFF        8264         CMP.W   R1,#0FFFFH
001A0B FD09            8267         BLE     _380
                       8268 ; rs232cmd.c 2336                                               SetBBSystem( Suffix[0], system);
001A0D 964842rr        8270         MOV.B   ES,#SEG( _Suffix )
001A11 9908rrrr        8271         MOV.W   R0,#SOF( _Suffix )
001A15 8A00            8272         MOV.W   R0,[R0]
                       8273         CALL    _SetBBSystem
001A17 C4rrrrrr       +8273 ;       FCALL   _SetBBSystem
001A1B FE07            8275         BR      _386
001A1B FE0700          8275         BR      _386
001A1E                 8276 _380:
                       8277 ; rs232cmd.c 2337                                       else
                       8278 ; rs232cmd.c 2338                                               SCPIError = DataOutOfRange;
001A1E 964842rr        8280         MOV.B   ES,#SEG( _SCPIError )
001A22 9908rrrr        8281         MOV.W   R0,#SOF( _SCPIError )
001A26 9A080021        8282         MOV.W   [R0],#021H
                       8283 ; rs232cmd.c 2339                               }
                       8284 ; rs232cmd.c 2340                       }
                       8285 ; rs232cmd.c 2341               }
001A2A                 8287 _386:
                       8288 ; rs232cmd.c 2342       }
001A2A 2F30            8290         POP.W   R4, R5
001A2C D680            8292         RET
                       8295 ; rs232cmd.c 2343       
                       8296 ; rs232cmd.c 2344       /************************************************************************
                            **/
                       8297 ; rs232cmd.c 2345       /* BBGenDelay                                                            
                                                                                                                             
                                                   RS232CMD.C     */
                       8298 ; rs232cmd.c 2346       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 130

ADDR   CODE            LINE SOURCELINE
                       8299 ; rs232cmd.c 2347       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                  */
                       8300 ; rs232cmd.c 2348       
                       8301 ; rs232cmd.c 2349       
                       8302 ; rs232cmd.c 2350       /* Function:    Handle the Black Burst timing command.                   
                                                                                           */
                       8303 ; rs232cmd.c 2351       
                       8304 ; rs232cmd.c 2352       
                       8305 ; rs232cmd.c 2353       
                       8306 ; rs232cmd.c 2354       /************************************************************************
                            **/
                       8307 ; rs232cmd.c 2355       void BBGenDelay( void)
                       8308 ; rs232cmd.c 2356       {
                       8309         ALIGN   1
                       8311         PUBLIC  _BBGenDelay
001A2E                 8312 _BBGenDelay:
001A2E 0F30            8316         PUSH.W  R4, R5
001A30 A978            8318         ADDS.W  R7,#08H
                       8325 ; rs232cmd.c 2357               int field, line;
                       8326 ; rs232cmd.c 2358               float offset;
                       8327 ; rs232cmd.c 2359               long samples;
                       8328 ; rs232cmd.c 2360       
                       8329 ; rs232cmd.c 2361               if ( CmdExecute && !SCPIError)
001A32 964842rr        8331         MOV.B   ES,#SEG( _CmdExecute )
001A36 9908rrrr        8332         MOV.W   R0,#SOF( _CmdExecute )
001A3A 8200            8333         MOV.B   R0L,[R0]
                       8334         BEQ     _400
001A3C F202           +8334 ;       BNE     _LG_442
001A3E D5008E         +8334 ;       JMP.L   _400
001A3E D5008E00       +8334 ;       JMP.L   _400
001A42                +8334 _LG_442:
001A42 964842rr        8335         MOV.B   ES,#SEG( _SCPIError )
001A46 9908rrrr        8336         MOV.W   R0,#SOF( _SCPIError )
001A4A 8A00            8337         MOV.W   R0,[R0]
                       8338         BNE     _400
001A4C F302           +8338 ;       BEQ     _LG_444
001A4E D50086         +8338 ;       JMP.L   _400
001A4E D5008600       +8338 ;       JMP.L   _400
001A52                +8338 _LG_444:
                       8339 ; rs232cmd.c 2362               {
                       8340 ; rs232cmd.c 2363                       if ( CmdRequest)
001A52 964842rr        8342         MOV.B   ES,#SEG( _CmdRequest )
001A56 9908rrrr        8343         MOV.W   R0,#SOF( _CmdRequest )
001A5A 8200            8344         MOV.B   R0L,[R0]
001A5C F327            8345         BEQ     _391
                       8346 ; rs232cmd.c 2364                       {
                       8347 ; rs232cmd.c 2365                               if ( ParCnt)
001A5E 964842rr        8349         MOV.B   ES,#SEG( _ParCnt )
001A62 9908rrrr        8350         MOV.W   R0,#SOF( _ParCnt )
001A66 8200            8351         MOV.B   R0L,[R0]
001A68 F306            8352         BEQ     _390
                       8353 ; rs232cmd.c 2366                                       SCPIError = ParNotAllowed;
001A6A 964842rr        8355         MOV.B   ES,#SEG( _SCPIError )
001A6E 9908rrrr        8356         MOV.W   R0,#SOF( _SCPIError )
001A72 BA06            8357         MOV.W   [R0],#06H
001A74 FE73            8358         BR      _400
001A74 FE73            8358         BR      _400
001A76                 8359 _390:
                       8360 ; rs232cmd.c 2367                               else
                       8361 ; rs232cmd.c 2368                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 131

ADDR   CODE            LINE SOURCELINE
                       8362 ; rs232cmd.c 2369                                       PrintSamplesToFLT( BBSetup[Suffix[0]].Sys
                            tem, BBSetup[Suffix[0]].Delay);
001A76 964842rr        8364         MOV.B   ES,#SEG( _Suffix )
001A7A 9908rrrr        8365         MOV.W   R0,#SOF( _Suffix )
001A7E 8A00            8366         MOV.W   R0,[R0]
001A80 8910            8367         MOV.W   R1,R0
001A82 D913            8368         ASL.W   R1,#03H
001A84 8921            8369         MOV.W   R2,R1
001A86 B930            8370         MOVS.W  R3,#00H
001A88 964842rr        8371         MOV.B   ES,#SEG( _BBSetup )
001A8C 8502rrrr        8372         MOV.B   R0L,[R2+SOF( _BBSetup )]
001A90 8921            8373         MOV.W   R2,R1
001A92 B930            8374         MOVS.W  R3,#00H
001A94 964842rr        8375         MOV.B   ES,#SEG( _BBSetup+2 )
001A98 8D32rrrr        8376         MOV.W   R3,[R2+SOF( _BBSetup+4 )]
001A9C 8D22rrrr        8377         MOV.W   R2,[R2+SOF( _BBSetup+2 )]
001AA0 C525C2          8378         CALL    _PrintSamplesToFLT
                       8379 ; rs232cmd.c 2370       
                       8380 ; rs232cmd.c 2371                                       rs232putchar ( '\n');
001AA3 91080A          8382         MOV.B   R0L,#0AH
                       8383         CALL    _rs232putchar
001AA6 C4rrrrrr       +8383 ;       FCALL   _rs232putchar
                       8384 ; rs232cmd.c 2372                               }
                       8385 ; rs232cmd.c 2373                       }
001AAA FE58            8387         BR      _400
001AAA FE58            8387         BR      _400
001AAC                 8388 _391:
                       8389 ; rs232cmd.c 2374                       else
                       8390 ; rs232cmd.c 2375                       {
                       8391 ; rs232cmd.c 2376                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
001AAC 964842rr        8393         MOV.B   ES,#SEG( _ParCnt )
001AB0 9908rrrr        8394         MOV.W   R0,#SOF( _ParCnt )
001AB4 8200            8395         MOV.B   R0L,[R0]
001AB6 910403          8396         CMP.B   R0L,#03H
001AB9 F21F            8397         BNE     _392
001ABB 9168rr          8398         MOV.B   R3L,#SEG( __lc_bs )
001ABE 7177            8399         XOR.B   R3H,R3H
001AC0 8927            8400         MOV.W   R2,R7
001AC2 91A8rr          8401         MOV.B   R5L,#SEG( __lc_bs )
001AC5 71BB            8402         XOR.B   R5H,R5H
001AC7 404702          8403         LEA     R4,R7+2
001ACA 9128rr          8404         MOV.B   R1L,#SEG( __lc_bs )
001ACD 7133            8405         XOR.B   R1H,R1H
001ACF 400704          8406         LEA     R0,R7+4
001AD2 0F03            8407         PUSH.W  R0, R1
001AD4 0F30            8409         PUSH.W  R4, R5
001AD6 0F0C            8411         PUSH.W  R2, R3
001AD8 9938rrrr        8413         MOV.W   R3,#SEG( _298 )
001ADC 9928rrrr        8414         MOV.W   R2,#SOF( _298 )
001AE0 0F0C            8415         PUSH.W  R2, R3
001AE2 9918rrrr        8417         MOV.W   R1,#SEG( _Cmd )
001AE6 9908rrrr        8418         MOV.W   R0,#SOF( _Cmd )
                       8419         CALL    _sscanf
001AEA C4rrrrrr       +8419 ;       FCALL   _sscanf
001AEE 99700010        8420         ADD.W   R7,#010H
001AF2 99040003        8422         CMP.W   R0,#03H
001AF6 F306            8423         BEQ     _393
001AF6 F306            8423         BEQ     _393
001AF8                 8424 _392:
                       8425 ; rs232cmd.c 2377                                       SCPIError = SyntaxErr;
001AF8 964842rr        8427         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 132

ADDR   CODE            LINE SOURCELINE
001AFC 9908rrrr        8428         MOV.W   R0,#SOF( _SCPIError )
001B00 BA03            8429         MOV.W   [R0],#03H
001B02 FE2C            8430         BR      _400
001B02 FE2C            8430         BR      _400
001B04                 8431 _393:
                       8432 ; rs232cmd.c 2378                               else
                       8433 ; rs232cmd.c 2379                               {
                       8434 ; rs232cmd.c 2380                                       if (( samples = FLTToSamples( BBSetup[Suf
                            fix[0]].System, field, line, offset)) == -1)
001B04 964842rr        8436         MOV.B   ES,#SEG( _Suffix )
001B08 9908rrrr        8437         MOV.W   R0,#SOF( _Suffix )
001B0C 8A00            8438         MOV.W   R0,[R0]
001B0E D903            8439         ASL.W   R0,#03H
001B10 B910            8440         MOVS.W  R1,#00H
001B12 964842rr        8441         MOV.B   ES,#SEG( _BBSetup )
001B16 8500rrrr        8442         MOV.B   R0L,[R0+SOF( _BBSetup )]
001B1A 8A17            8443         MOV.W   R1,[R7]
001B1C 8C2702          8444         MOV.W   R2,[R7+2]
001B1F 8C5706          8445         MOV.W   R5,[R7+6]
001B22 8C4704          8446         MOV.W   R4,[R7+4]
001B25 0F30            8447         PUSH.W  R4, R5
001B27 C52343          8449         CALL    _FLTToSamples
001B2A A974            8450         ADDS.W  R7,#04H
001B2C 8931            8452         MOV.W   R3,R1
001B2E 8920            8453         MOV.W   R2,R0
001B30 8913            8454         MOV.W   R1,R3
001B32 8902            8455         MOV.W   R0,R2
001B34 9914FFFF        8456         CMP.W   R1,#0FFFFH
001B38 F202            8457         BNE     _403
001B3A 9904FFFF        8458         CMP.W   R0,#0FFFFH
001B3A 9904FFFF        8458         CMP.W   R0,#0FFFFH
001B3E                 8459 _403:
001B3E F207            8460         BNE     _394
                       8461 ; rs232cmd.c 2381                                               SCPIError = ExecErr;
001B40 964842rr        8463         MOV.B   ES,#SEG( _SCPIError )
001B44 9908rrrr        8464         MOV.W   R0,#SOF( _SCPIError )
001B48 9A08001D        8465         MOV.W   [R0],#01DH
001B4C FE07            8466         BR      _400
001B4C FE07            8466         BR      _400
001B4E                 8467 _394:
                       8468 ; rs232cmd.c 2382                                       else
                       8469 ; rs232cmd.c 2383                                               SetBBDelay( Suffix[0], (UL) sampl
                            es);
001B4E 964842rr        8471         MOV.B   ES,#SEG( _Suffix )
001B52 9908rrrr        8472         MOV.W   R0,#SOF( _Suffix )
001B56 8A00            8473         MOV.W   R0,[R0]
                       8474         CALL    _SetBBDelay
001B58 C4rrrrrr       +8474 ;       FCALL   _SetBBDelay
                       8475 ; rs232cmd.c 2384                               }
                       8476 ; rs232cmd.c 2385                       }
                       8477 ; rs232cmd.c 2386               }
001B5C                 8479 _400:
                       8480 ; rs232cmd.c 2387       }
001B5C 99700008        8482         ADD.W   R7,#08H
001B60 2F30            8484         POP.W   R4, R5
001B62 D680            8486         RET
                       8488 ; rs232cmd.c 2388       
                       8489 ; rs232cmd.c 2389       /************************************************************************
                            **/
                       8490 ; rs232cmd.c 2390       /* BBGenScHPhase                                                         
                                                                                                                             
                                                   RS232CMD.C     */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 133

ADDR   CODE            LINE SOURCELINE
                       8491 ; rs232cmd.c 2391       
                       8492 ; rs232cmd.c 2392       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                  */                      
                       8493 ; rs232cmd.c 2393       /* Revised:             000604                                           
                                                                                                                             
                                                                                  */
                       8494 ; rs232cmd.c 2394       
                       8495 ; rs232cmd.c 2395       /* Function:    Handle the Black Burst ScH-Phase command.                
                                                                                           */
                       8496 ; rs232cmd.c 2396       
                       8497 ; rs232cmd.c 2397       
                       8498 ; rs232cmd.c 2398       
                       8499 ; rs232cmd.c 2399       /************************************************************************
                            **/
                       8500 ; rs232cmd.c 2400       void BBGenScHPhase( void)
                       8501 ; rs232cmd.c 2401       {
                       8502         ALIGN   1
                       8504         PUBLIC  _BBGenScHPhase
001B64                 8505 _BBGenScHPhase:
001B64 A97E            8509         ADDS.W  R7,#0EH
                       8512 ; rs232cmd.c 2402               int schphase;
                       8513 ; rs232cmd.c 2403       
                       8514 ; rs232cmd.c 2404               if ( CmdExecute && !SCPIError)
001B66 964842rr        8516         MOV.B   ES,#SEG( _CmdExecute )
001B6A 9908rrrr        8517         MOV.W   R0,#SOF( _CmdExecute )
001B6E 8200            8518         MOV.B   R0L,[R0]
001B70 F366            8519         BEQ     _415
001B72 964842rr        8520         MOV.B   ES,#SEG( _SCPIError )
001B76 9908rrrr        8521         MOV.W   R0,#SOF( _SCPIError )
001B7A 8A00            8522         MOV.W   R0,[R0]
001B7C F260            8523         BNE     _415
                       8524 ; rs232cmd.c 2405               {
                       8525 ; rs232cmd.c 2406                       if ( CmdRequest)
001B7E 964842rr        8527         MOV.B   ES,#SEG( _CmdRequest )
001B82 9908rrrr        8528         MOV.W   R0,#SOF( _CmdRequest )
001B86 8200            8529         MOV.B   R0L,[R0]
001B88 F323            8530         BEQ     _405
                       8531 ; rs232cmd.c 2407                       {
                       8532 ; rs232cmd.c 2408                               if ( ParCnt)
001B8A 964842rr        8534         MOV.B   ES,#SEG( _ParCnt )
001B8E 9908rrrr        8535         MOV.W   R0,#SOF( _ParCnt )
001B92 8200            8536         MOV.B   R0L,[R0]
001B94 F306            8537         BEQ     _404
                       8538 ; rs232cmd.c 2409                                       SCPIError = ParNotAllowed;
001B96 964842rr        8540         MOV.B   ES,#SEG( _SCPIError )
001B9A 9908rrrr        8541         MOV.W   R0,#SOF( _SCPIError )
001B9E BA06            8542         MOV.W   [R0],#06H
001BA0 FE4E            8543         BR      _415
001BA0 FE4E            8543         BR      _415
001BA2                 8544 _404:
                       8545 ; rs232cmd.c 2410                               else
                       8546 ; rs232cmd.c 2411                                       rs232printf( 6, "%d\n", BBSetup[Suffix[0]
                            ].ScHPhase);
001BA2 B906            8548         MOV.W   R0,#06H
001BA4 964842rr        8549         MOV.B   ES,#SEG( _Suffix )
001BA8 9918rrrr        8550         MOV.W   R1,#SOF( _Suffix )
001BAC 8A11            8551         MOV.W   R1,[R1]
001BAE D913            8552         ASL.W   R1,#03H
001BB0 8921            8553         MOV.W   R2,R1
001BB2 B930            8554         MOVS.W  R3,#00H
001BB4 964842rr        8555         MOV.B   ES,#SEG( _BBSetup+6 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 134

ADDR   CODE            LINE SOURCELINE
001BB8 8D12rrrr        8556         MOV.W   R1,[R2+SOF( _BBSetup+6 )]
001BBC 0F02            8557         PUSH.W  R1
001BBE 9938rrrr        8559         MOV.W   R3,#SEG( _9 )
001BC2 9928rrrr        8560         MOV.W   R2,#SOF( _9 )
001BC6 0F0C            8561         PUSH.W  R2, R3
                       8563         CALL    _rs232printf
001BC8 C4rrrrrr       +8563 ;       FCALL   _rs232printf
001BCC A976            8564         ADDS.W  R7,#06H
                       8566 ; rs232cmd.c 2412                       }
001BCE FE37            8568         BR      _415
001BCE FE37            8568         BR      _415
001BD0                 8569 _405:
                       8570 ; rs232cmd.c 2413                       else
                       8571 ; rs232cmd.c 2414                       {
                       8572 ; rs232cmd.c 2415                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
001BD0 964842rr        8574         MOV.B   ES,#SEG( _ParCnt )
001BD4 9908rrrr        8575         MOV.W   R0,#SOF( _ParCnt )
001BD8 8200            8576         MOV.B   R0L,[R0]
001BDA 910401          8577         CMP.B   R0L,#01H
001BDD F215            8578         BNE     _406
001BDF 9918rrrr        8579         MOV.W   R1,#SEG( _Cmd )
001BE3 9908rrrr        8580         MOV.W   R0,#SOF( _Cmd )
001BE7 9168rr          8581         MOV.B   R3L,#SEG( __lc_bs )
001BEA 7177            8582         XOR.B   R3H,R3H
001BEC 8927            8583         MOV.W   R2,R7
001BEE 0F0C            8584         PUSH.W  R2, R3
001BF0 9938rrrr        8586         MOV.W   R3,#SEG( _10 )
001BF4 9928rrrr        8587         MOV.W   R2,#SOF( _10 )
001BF8 0F0C            8588         PUSH.W  R2, R3
                       8590         CALL    _sscanf
001BFA C4rrrrrr       +8590 ;       FCALL   _sscanf
001BFE 99700008        8591         ADD.W   R7,#08H
001C02 99040001        8593         CMP.W   R0,#01H
001C06 F306            8594         BEQ     _407
001C06 F306            8594         BEQ     _407
001C08                 8595 _406:
                       8596 ; rs232cmd.c 2416                                       SCPIError = SyntaxErr;
001C08 964842rr        8598         MOV.B   ES,#SEG( _SCPIError )
001C0C 9908rrrr        8599         MOV.W   R0,#SOF( _SCPIError )
001C10 BA03            8600         MOV.W   [R0],#03H
001C12 FE15            8601         BR      _415
001C12 FE15            8601         BR      _415
001C14                 8602 _407:
                       8603 ; rs232cmd.c 2417                               else
                       8604 ; rs232cmd.c 2418                               {
                       8605 ; rs232cmd.c 2419                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
001C14 9A74FF4D        8607         CMP.W   [R7],#0FF4DH
001C18 FB03            8608         BLT     _408
001C1A 9A7400B4        8609         CMP.W   [R7],#0B4H
001C1E FD07            8610         BLE     _409
001C1E FD07            8610         BLE     _409
001C20                 8611 _408:
                       8612 ; rs232cmd.c 2420                                               SCPIError = DataOutOfRange;
001C20 964842rr        8614         MOV.B   ES,#SEG( _SCPIError )
001C24 9908rrrr        8615         MOV.W   R0,#SOF( _SCPIError )
001C28 9A080021        8616         MOV.W   [R0],#021H
001C2C FE08            8617         BR      _415
001C2C FE08            8617         BR      _415
001C2E                 8618 _409:
                       8619 ; rs232cmd.c 2421                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 135

ADDR   CODE            LINE SOURCELINE
                       8620 ; rs232cmd.c 2422                                               SetBBScHPhase( Suffix[0], schphas
                            e);
001C2E 964842rr        8622         MOV.B   ES,#SEG( _Suffix )
001C32 9908rrrr        8623         MOV.W   R0,#SOF( _Suffix )
001C36 8A00            8624         MOV.W   R0,[R0]
001C38 8A17            8625         MOV.W   R1,[R7]
                       8626         CALL    _SetBBScHPhase
001C3A C4rrrrrr       +8626 ;       FCALL   _SetBBScHPhase
                       8627 ; rs232cmd.c 2423                               }
                       8628 ; rs232cmd.c 2424                       }
                       8629 ; rs232cmd.c 2425               }
001C3E                 8631 _415:
                       8632 ; rs232cmd.c 2426       }
001C3E A972            8634         ADDS.W  R7,#02H
001C40 D680            8636         RET
                       8638 ; rs232cmd.c 2427       
                       8639 ; rs232cmd.c 2428       /************************************************************************
                            **/
                       8640 ; rs232cmd.c 2429       /* TSGen                                                                 
                                                                                                                             
                                                                             RS232CMD.C */
                       8641 ; rs232cmd.c 2430       
                       8642 ; rs232cmd.c 2431       /* Author:              Kim Engedahl, DEV, 000524                        
                                                                                                                             
                                  */
                       8643 ; rs232cmd.c 2432       /* Revised:             000727                                           
                                                                                                                             
                                                                                  */
                       8644 ; rs232cmd.c 2433       
                       8645 ; rs232cmd.c 2434       /* Function:    Return the setting of a Analog-TPG.                      
                                                                                                           */
                       8646 ; rs232cmd.c 2435       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                  */
                       8647 ; rs232cmd.c 2436       
                       8648 ; rs232cmd.c 2437       
                       8649 ; rs232cmd.c 2438       /************************************************************************
                            ***/
                       8650 ; rs232cmd.c 2439       void TSGen( void)
                       8651 ; rs232cmd.c 2440       {
                       8652         ALIGN   1
                       8654         PUBLIC  _TSGen
001C42                 8655 _TSGen:
001C42 0F30            8659         PUSH.W  R4, R5
                       8663 ; rs232cmd.c 2441               char code *str;
                       8664 ; rs232cmd.c 2442       
                       8665 ; rs232cmd.c 2443               if ( CmdExecute && !SCPIError)
001C44 964842rr        8667         MOV.B   ES,#SEG( _CmdExecute )
001C48 9908rrrr        8668         MOV.W   R0,#SOF( _CmdExecute )
001C4C 8200            8669         MOV.B   R0L,[R0]
                       8670         BEQ     _432
001C4E F202           +8670 ;       BNE     _LG_474
001C50 D500D4         +8670 ;       JMP.L   _432
001C54 D500D400       +8670 ;       JMP.L   _432
001C54                +8670 _LG_474:
001C54 964842rr        8671         MOV.B   ES,#SEG( _SCPIError )
001C58 9908rrrr        8672         MOV.W   R0,#SOF( _SCPIError )
001C5C 8A00            8673         MOV.W   R0,[R0]
                       8674         BNE     _432
001C5E F302           +8674 ;       BEQ     _LG_476
001C60 D500CC         +8674 ;       JMP.L   _432
001C64 D500CC00       +8674 ;       JMP.L   _432
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 136

ADDR   CODE            LINE SOURCELINE
001C64                +8674 _LG_476:
                       8675 ; rs232cmd.c 2444               {
                       8676 ; rs232cmd.c 2445                       if ( !CmdRequest)
001C64 964842rr        8678         MOV.B   ES,#SEG( _CmdRequest )
001C68 9908rrrr        8679         MOV.W   R0,#SOF( _CmdRequest )
001C6C 8200            8680         MOV.B   R0L,[R0]
001C6E F207            8681         BNE     _421
                       8682 ; rs232cmd.c 2446                                       SCPIError = SyntaxErr;
001C70 964842rr        8684         MOV.B   ES,#SEG( _SCPIError )
001C74 9908rrrr        8685         MOV.W   R0,#SOF( _SCPIError )
001C78 BA03            8686         MOV.W   [R0],#03H
                       8687         BR      _432
001C7A D500BF         +8687         JMP.L   _432
001C7A D500BF00       +8687         JMP.L   _432
001C7E                 8688 _421:
                       8689 ; rs232cmd.c 2447                       else
                       8690 ; rs232cmd.c 2448                       {
                       8691 ; rs232cmd.c 2449                               if ( ParCnt)
001C7E 964842rr        8693         MOV.B   ES,#SEG( _ParCnt )
001C82 9908rrrr        8694         MOV.W   R0,#SOF( _ParCnt )
001C86 8200            8695         MOV.B   R0L,[R0]
001C88 F307            8696         BEQ     _422
                       8697 ; rs232cmd.c 2450                                       SCPIError = ParNotAllowed;
001C8A 964842rr        8699         MOV.B   ES,#SEG( _SCPIError )
001C8E 9908rrrr        8700         MOV.W   R0,#SOF( _SCPIError )
001C92 BA06            8701         MOV.W   [R0],#06H
                       8702         BR      _432
001C94 D500B2         +8702         JMP.L   _432
001C94 D500B200       +8702         JMP.L   _432
001C98                 8703 _422:
                       8704 ; rs232cmd.c 2451                               else
                       8705 ; rs232cmd.c 2452                               {
                       8706 ; rs232cmd.c 2453                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001C98 964842rr        8708         MOV.B   ES,#SEG( _CBSetup+2 )
001C9C 9908rrrr        8709         MOV.W   R0,#SOF( _CBSetup+2 )
001CA0 8A00            8710         MOV.W   R0,[R0]
001CA2 E900000C        8711         MULU.W  R0,#0CH
001CA6 8920            8712         MOV.W   R2,R0
001CA8 B930            8713         MOVS.W  R3,#00H
001CAA 9918rrrr        8714         MOV.W   R1,#SEG( _CBPatternPar )
001CAE 9908rrrr        8715         MOV.W   R0,#SOF( _CBPatternPar )
001CB2 0902            8716         ADD.W   R0,R2
001CB4 1913            8717         ADDC.W  R1,R3
001CB6 862C43          8718         MOV.B   CS,R1L
001CB9 8820            8719         MOVC.W  R2,[R0+]
001CBB 99040000        8720         CMP.W   R0,#00H
001CBF F202            8721         BNE     _433
001CC1 A64143          8722         ADDS.B  CS,#01H
001CC1 A64143          8722         ADDS.B  CS,#01H
001CC4                 8723 _433:
001CC4 8830            8724         MOVC.W  R3,[R0+]
001CC6 8953            8725         MOV.W   R5,R3
001CC8 8942            8726         MOV.W   R4,R2
                       8728 ; rs232cmd.c 2454       
                       8729 ; rs232cmd.c 2455                                       while ( *str)
001CCA 866C43          8731         MOV.B   CS,R3L
001CCD 8062            8732         MOVC.B  R3L,[R2+]
001CCF F312            8733         BEQ     _424
001CCF F31200          8733         BEQ     _424
001CD2                 8734 _423:
                       8735 ; rs232cmd.c 2456                                               rs232putchar( *str++);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 137

ADDR   CODE            LINE SOURCELINE
001CD2 8915            8737         MOV.W   R1,R5
001CD4 8904            8738         MOV.W   R0,R4
001CD6 862C43          8739         MOV.B   CS,R1L
001CD9 8020            8740         MOVC.B  R1L,[R0+]
001CDB 8102            8741         MOV.B   R0L,R1L
                       8742         CALL    _rs232putchar
001CDD C4rrrrrr       +8742 ;       FCALL   _rs232putchar
001CE1 99400001        8743         ADD.W   R4,#01H
001CE5 99510000        8744         ADDC.W  R5,#00H
001CE9 8915            8748         MOV.W   R1,R5
001CEB 8904            8749         MOV.W   R0,R4
001CED 862C43          8750         MOV.B   CS,R1L
001CF0 8020            8751         MOVC.B  R1L,[R0+]
001CF2 F2EF            8752         BNE     _423
001CF4                 8754 _424:
                       8755 ; rs232cmd.c 2457       
                       8756 ; rs232cmd.c 2458                                       rs232putchar( ',');
001CF4 91082C          8758         MOV.B   R0L,#02CH
                       8759         CALL    _rs232putchar
001CF7 C4rrrrrr       +8759 ;       FCALL   _rs232putchar
                       8760 ; rs232cmd.c 2459       
                       8761 ; rs232cmd.c 2460       
                       8762 ; rs232cmd.c 2461                                       str = SystemPar[CBSetup.System].LongName;
                            
001CFB 964842rr        8764         MOV.B   ES,#SEG( _CBSetup )
001CFF 9908rrrr        8765         MOV.W   R0,#SOF( _CBSetup )
001D03 8200            8766         MOV.B   R0L,[R0]
001D05 E8000C          8767         MULU.B  R0L,#0CH
001D08 8920            8768         MOV.W   R2,R0
001D0A B930            8769         MOVS.W  R3,#00H
001D0C 9918rrrr        8770         MOV.W   R1,#SEG( _SystemPar )
001D10 9908rrrr        8771         MOV.W   R0,#SOF( _SystemPar )
001D14 0902            8772         ADD.W   R0,R2
001D16 1913            8773         ADDC.W  R1,R3
001D18 862C43          8774         MOV.B   CS,R1L
001D1B 8820            8775         MOVC.W  R2,[R0+]
001D1D 99040000        8776         CMP.W   R0,#00H
001D21 F202            8777         BNE     _434
001D23 A64143          8778         ADDS.B  CS,#01H
001D23 A64143          8778         ADDS.B  CS,#01H
001D26                 8779 _434:
001D26 8830            8780         MOVC.W  R3,[R0+]
001D28 8953            8781         MOV.W   R5,R3
001D2A 8942            8782         MOV.W   R4,R2
                       8785 ; rs232cmd.c 2462       
                       8786 ; rs232cmd.c 2463                                       while ( *str)
001D2C 866C43          8788         MOV.B   CS,R3L
001D2F 8062            8789         MOVC.B  R3L,[R2+]
001D31 F312            8790         BEQ     _426
001D31 F31200          8790         BEQ     _426
001D34                 8791 _425:
                       8792 ; rs232cmd.c 2464                                               rs232putchar( *str++);
001D34 8915            8794         MOV.W   R1,R5
001D36 8904            8795         MOV.W   R0,R4
001D38 862C43          8796         MOV.B   CS,R1L
001D3B 8020            8797         MOVC.B  R1L,[R0+]
001D3D 8102            8798         MOV.B   R0L,R1L
                       8799         CALL    _rs232putchar
001D3F C4rrrrrr       +8799 ;       FCALL   _rs232putchar
001D43 99400001        8800         ADD.W   R4,#01H
001D47 99510000        8801         ADDC.W  R5,#00H
001D4B 8915            8805         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 138

ADDR   CODE            LINE SOURCELINE
001D4D 8904            8806         MOV.W   R0,R4
001D4F 862C43          8807         MOV.B   CS,R1L
001D52 8020            8808         MOVC.B  R1L,[R0+]
001D54 F2EF            8809         BNE     _425
001D56                 8811 _426:
                       8812 ; rs232cmd.c 2465       
                       8813 ; rs232cmd.c 2466                                       rs232putchar( ',');
001D56 91082C          8815         MOV.B   R0L,#02CH
                       8816         CALL    _rs232putchar
001D59 C4rrrrrr       +8816 ;       FCALL   _rs232putchar
                       8817 ; rs232cmd.c 2467       
                       8818 ; rs232cmd.c 2468       
                       8819 ; rs232cmd.c 2469                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
001D5D 964842rr        8821         MOV.B   ES,#SEG( _CBSetup )
001D61 9908rrrr        8822         MOV.W   R0,#SOF( _CBSetup )
001D65 8200            8823         MOV.B   R0L,[R0]
001D67 964842rr        8824         MOV.B   ES,#SEG( _CBSetup+4 )
001D6B 9938rrrr        8825         MOV.W   R3,#SOF( _CBSetup+4 )
001D6F 8B23            8826         MOV.W   R2,[R3+]
001D71 8A33            8827         MOV.W   R3,[R3]
001D73 DD28            8828         ASL.D   R2,#08H
001D75 C52457          8829         CALL    _PrintSamplesToFLT
                       8830 ; rs232cmd.c 2470       
                       8831 ; rs232cmd.c 2471       
                       8832 ; rs232cmd.c 2472                                       rs232printf( 6, ",%d,", CBSetup.ScHPhase)
                            ;
001D78 B906            8834         MOV.W   R0,#06H
001D7A 964842rr        8835         MOV.B   ES,#SEG( _CBSetup+8 )
001D7E 9918rrrr        8836         MOV.W   R1,#SOF( _CBSetup+8 )
001D82 8A11            8837         MOV.W   R1,[R1]
001D84 0F02            8838         PUSH.W  R1
001D86 9938rrrr        8840         MOV.W   R3,#SEG( _420 )
001D8A 9928rrrr        8841         MOV.W   R2,#SOF( _420 )
001D8E 0F0C            8842         PUSH.W  R2, R3
                       8844         CALL    _rs232printf
001D90 C4rrrrrr       +8844 ;       FCALL   _rs232printf
001D94 A976            8845         ADDS.W  R7,#06H
                       8847 ; rs232cmd.c 2473       
                       8848 ; rs232cmd.c 2474       
                       8849 ; rs232cmd.c 2475                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
001D96 964842rr        8851         MOV.B   ES,#SEG( _CBSetup+10 )
001D9A 9908rrrr        8852         MOV.W   R0,#SOF( _CBSetup+10 )
001D9E 8200            8853         MOV.B   R0L,[R0]
001DA0 E8000C          8854         MULU.B  R0L,#0CH
001DA3 8920            8855         MOV.W   R2,R0
001DA5 B930            8856         MOVS.W  R3,#00H
001DA7 9918rrrr        8857         MOV.W   R1,#SEG( _EmbAudioSignalPar )
001DAB 9908rrrr        8858         MOV.W   R0,#SOF( _EmbAudioSignalPar )
001DAF 0902            8859         ADD.W   R0,R2
001DB1 1913            8860         ADDC.W  R1,R3
001DB3 862C43          8861         MOV.B   CS,R1L
001DB6 8820            8862         MOVC.W  R2,[R0+]
001DB8 99040000        8863         CMP.W   R0,#00H
001DBC F202            8864         BNE     _435
001DBE A64143          8865         ADDS.B  CS,#01H
001DBE A6414300        8865         ADDS.B  CS,#01H
001DC2                 8866 _435:
001DC2 8830            8867         MOVC.W  R3,[R0+]
001DC4 8953            8868         MOV.W   R5,R3
001DC6 8942            8869         MOV.W   R4,R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 139

ADDR   CODE            LINE SOURCELINE
                       8872 ; rs232cmd.c 2476       
                       8873 ; rs232cmd.c 2477                                       while ( *str)
001DC8 866C43          8875         MOV.B   CS,R3L
001DCB 8062            8876         MOVC.B  R3L,[R2+]
001DCD F312            8877         BEQ     _428
001DCD F31200          8877         BEQ     _428
001DD0                 8878 _427:
                       8879 ; rs232cmd.c 2478                                               rs232putchar( *str++);
001DD0 8915            8881         MOV.W   R1,R5
001DD2 8904            8882         MOV.W   R0,R4
001DD4 862C43          8883         MOV.B   CS,R1L
001DD7 8020            8884         MOVC.B  R1L,[R0+]
001DD9 8102            8885         MOV.B   R0L,R1L
                       8886         CALL    _rs232putchar
001DDB C4rrrrrr       +8886 ;       FCALL   _rs232putchar
001DDF 99400001        8887         ADD.W   R4,#01H
001DE3 99510000        8888         ADDC.W  R5,#00H
001DE7 8915            8892         MOV.W   R1,R5
001DE9 8904            8893         MOV.W   R0,R4
001DEB 862C43          8894         MOV.B   CS,R1L
001DEE 8020            8895         MOVC.B  R1L,[R0+]
001DF0 F2EF            8896         BNE     _427
001DF2                 8898 _428:
                       8899 ; rs232cmd.c 2479       
                       8900 ; rs232cmd.c 2480                                       rs232putchar( '\n');
001DF2 91080A          8902         MOV.B   R0L,#0AH
                       8903         CALL    _rs232putchar
001DF5 C4rrrrrr       +8903 ;       FCALL   _rs232putchar
                       8904 ; rs232cmd.c 2481                               }
                       8905 ; rs232cmd.c 2482                       }
                       8906 ; rs232cmd.c 2483               }
001DFA                 8908 _432:
                       8909 ; rs232cmd.c 2484       }
001DFA 2F30            8911         POP.W   R4, R5
001DFC D680            8913         RET
                       8916 ; rs232cmd.c 2485       
                       8917 ; rs232cmd.c 2486       /************************************************************************
                            **/
                       8918 ; rs232cmd.c 2487       /* TSGenPattern                                                          
                                                                                                                             
                                               RS232CMD.C */
                       8919 ; rs232cmd.c 2488       
                       8920 ; rs232cmd.c 2489       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                  */
                       8921 ; rs232cmd.c 2490       /* Revised:             000727                                           
                                                                                                                             
                                                                                  */
                       8922 ; rs232cmd.c 2491       
                       8923 ; rs232cmd.c 2492       /* Function:    Handle the Colorbar pattern command.                     
                                                                                                   */
                       8924 ; rs232cmd.c 2493       
                       8925 ; rs232cmd.c 2494       
                       8926 ; rs232cmd.c 2495       
                       8927 ; rs232cmd.c 2496       /************************************************************************
                            **/
                       8928 ; rs232cmd.c 2497       void TSGenPattern( void)
                       8929 ; rs232cmd.c 2498       {
                       8930         ALIGN   1
                       8932         PUBLIC  _TSGenPattern
001DFE                 8933 _TSGenPattern:
001DFE 0F30            8937         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 140

ADDR   CODE            LINE SOURCELINE
                       8943 ; rs232cmd.c 2499               int pattern;
                       8944 ; rs232cmd.c 2500               char code *str;
                       8945 ; rs232cmd.c 2501       
                       8946 ; rs232cmd.c 2502               if ( CmdExecute && !SCPIError)
001E00 964842rr        8948         MOV.B   ES,#SEG( _CmdExecute )
001E04 9908rrrr        8949         MOV.W   R0,#SOF( _CmdExecute )
001E08 8200            8950         MOV.B   R0L,[R0]
001E0A F377            8951         BEQ     _448
001E0C 964842rr        8952         MOV.B   ES,#SEG( _SCPIError )
001E10 9908rrrr        8953         MOV.W   R0,#SOF( _SCPIError )
001E14 8A00            8954         MOV.W   R0,[R0]
001E16 F271            8955         BNE     _448
                       8956 ; rs232cmd.c 2503               {
                       8957 ; rs232cmd.c 2504                       if ( CmdRequest)
001E18 964842rr        8959         MOV.B   ES,#SEG( _CmdRequest )
001E1C 9908rrrr        8960         MOV.W   R0,#SOF( _CmdRequest )
001E20 8200            8961         MOV.B   R0L,[R0]
001E22 F33F            8962         BEQ     _439
                       8963 ; rs232cmd.c 2505                       {
                       8964 ; rs232cmd.c 2506                               if ( ParCnt)
001E24 964842rr        8966         MOV.B   ES,#SEG( _ParCnt )
001E28 9908rrrr        8967         MOV.W   R0,#SOF( _ParCnt )
001E2C 8200            8968         MOV.B   R0L,[R0]
001E2E F306            8969         BEQ     _436
                       8970 ; rs232cmd.c 2507                                       SCPIError = ParNotAllowed;
001E30 964842rr        8972         MOV.B   ES,#SEG( _SCPIError )
001E34 9908rrrr        8973         MOV.W   R0,#SOF( _SCPIError )
001E38 BA06            8974         MOV.W   [R0],#06H
001E3A FE5F            8975         BR      _448
001E3A FE5F            8975         BR      _448
001E3C                 8976 _436:
                       8977 ; rs232cmd.c 2508                               else
                       8978 ; rs232cmd.c 2509                               {
                       8979 ; rs232cmd.c 2510                                       str = CBPatternPar[CBSetup.Pattern].LongN
                            ame;
001E3C 964842rr        8981         MOV.B   ES,#SEG( _CBSetup+2 )
001E40 9908rrrr        8982         MOV.W   R0,#SOF( _CBSetup+2 )
001E44 8A00            8983         MOV.W   R0,[R0]
001E46 E900000C        8984         MULU.W  R0,#0CH
001E4A 8920            8985         MOV.W   R2,R0
001E4C B930            8986         MOVS.W  R3,#00H
001E4E 9918rrrr        8987         MOV.W   R1,#SEG( _CBPatternPar )
001E52 9908rrrr        8988         MOV.W   R0,#SOF( _CBPatternPar )
001E56 0902            8989         ADD.W   R0,R2
001E58 1913            8990         ADDC.W  R1,R3
001E5A 862C43          8991         MOV.B   CS,R1L
001E5D 8820            8992         MOVC.W  R2,[R0+]
001E5F 99040000        8993         CMP.W   R0,#00H
001E63 F202            8994         BNE     _449
001E65 A64143          8995         ADDS.B  CS,#01H
001E65 A64143          8995         ADDS.B  CS,#01H
001E68                 8996 _449:
001E68 8830            8997         MOVC.W  R3,[R0+]
001E6A 8953            8998         MOV.W   R5,R3
001E6C 8942            8999         MOV.W   R4,R2
                       9001 ; rs232cmd.c 2511       
                       9002 ; rs232cmd.c 2512                                       while ( *str)
001E6E 866C43          9004         MOV.B   CS,R3L
001E71 8062            9005         MOVC.B  R3L,[R2+]
001E73 F312            9006         BEQ     _438
001E73 F31200          9006         BEQ     _438
001E76                 9007 _437:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 141

ADDR   CODE            LINE SOURCELINE
                       9008 ; rs232cmd.c 2513                                               rs232putchar( *str++);
001E76 8915            9010         MOV.W   R1,R5
001E78 8904            9011         MOV.W   R0,R4
001E7A 862C43          9012         MOV.B   CS,R1L
001E7D 8020            9013         MOVC.B  R1L,[R0+]
001E7F 8102            9014         MOV.B   R0L,R1L
                       9015         CALL    _rs232putchar
001E81 C4rrrrrr       +9015 ;       FCALL   _rs232putchar
001E85 99400001        9016         ADD.W   R4,#01H
001E89 99510000        9017         ADDC.W  R5,#00H
001E8D 8915            9021         MOV.W   R1,R5
001E8F 8904            9022         MOV.W   R0,R4
001E91 862C43          9023         MOV.B   CS,R1L
001E94 8020            9024         MOVC.B  R1L,[R0+]
001E96 F2EF            9025         BNE     _437
001E98                 9027 _438:
                       9028 ; rs232cmd.c 2514       
                       9029 ; rs232cmd.c 2515                                       rs232putchar('\n');
001E98 91080A          9031         MOV.B   R0L,#0AH
                       9032         CALL    _rs232putchar
001E9B C4rrrrrr       +9032 ;       FCALL   _rs232putchar
                       9033 ; rs232cmd.c 2516                               }
                       9034 ; rs232cmd.c 2517                       }
001E9F FE2D            9036         BR      _448
001E9F FE2D00          9036         BR      _448
001EA2                 9037 _439:
                       9038 ; rs232cmd.c 2518                       else
                       9039 ; rs232cmd.c 2519                       {
                       9040 ; rs232cmd.c 2520                               pattern = FindParameter( Cmd, CBPatternPar);
001EA2 9918rrrr        9042         MOV.W   R1,#SEG( _Cmd )
001EA6 9908rrrr        9043         MOV.W   R0,#SOF( _Cmd )
001EAA 9938rrrr        9044         MOV.W   R3,#SEG( _CBPatternPar )
001EAE 9928rrrr        9045         MOV.W   R2,#SOF( _CBPatternPar )
001EB2 C52131          9046         CALL    _FindParameter
                       9048 ; rs232cmd.c 2521       
                       9049 ; rs232cmd.c 2522                               if ( ParCnt != 1)
001EB5 964842rr        9051         MOV.B   ES,#SEG( _ParCnt )
001EB9 9918rrrr        9052         MOV.W   R1,#SOF( _ParCnt )
001EBD 8221            9053         MOV.B   R1L,[R1]
001EBF 912401          9054         CMP.B   R1L,#01H
001EC2 F306            9055         BEQ     _440
                       9056 ; rs232cmd.c 2523                                       SCPIError = SyntaxErr;
001EC4 964842rr        9058         MOV.B   ES,#SEG( _SCPIError )
001EC8 9908rrrr        9059         MOV.W   R0,#SOF( _SCPIError )
001ECC BA03            9060         MOV.W   [R0],#03H
001ECE FE15            9061         BR      _448
001ECE FE15            9061         BR      _448
001ED0                 9062 _440:
                       9064 ; rs232cmd.c 2524                               else
                       9065 ; rs232cmd.c 2525                               {
                       9066 ; rs232cmd.c 2526                                       if ( pattern > -1)
001ED0 9904FFFF        9068         CMP.W   R0,#0FFFFH
001ED4 FD0C            9069         BLE     _441
                       9070 ; rs232cmd.c 2527                                       {
                       9071 ; rs232cmd.c 2528                                               if ( SetCBPattern( pattern) != OK
                            )
                       9073         CALL    _SetCBPattern
001ED6 C4rrrrrr       +9073 ;       FCALL   _SetCBPattern
001EDA 9904FFFF        9074         CMP.W   R0,#0FFFFH
001EDE F30D            9075         BEQ     _448
                       9076 ; rs232cmd.c 2529                                                       SCPIError = ExecErr;
001EE0 964842rr        9078         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 142

ADDR   CODE            LINE SOURCELINE
001EE4 9908rrrr        9079         MOV.W   R0,#SOF( _SCPIError )
001EE8 9A08001D        9080         MOV.W   [R0],#01DH
                       9081 ; rs232cmd.c 2530                                       }
001EEC FE06            9083         BR      _448
001EEC FE06            9083         BR      _448
001EEE                 9084 _441:
                       9085 ; rs232cmd.c 2531                                       else
                       9086 ; rs232cmd.c 2532                                               SCPIError = DataOutOfRange;
001EEE 964842rr        9088         MOV.B   ES,#SEG( _SCPIError )
001EF2 9908rrrr        9089         MOV.W   R0,#SOF( _SCPIError )
001EF6 9A080021        9090         MOV.W   [R0],#021H
                       9091 ; rs232cmd.c 2533                               }
                       9092 ; rs232cmd.c 2534                       }
                       9093 ; rs232cmd.c 2535               }
001EFA                 9095 _448:
                       9096 ; rs232cmd.c 2536       }
001EFA 2F30            9098         POP.W   R4, R5
001EFC D680            9100         RET
                       9103 ; rs232cmd.c 2537       
                       9104 ; rs232cmd.c 2538       /************************************************************************
                            **/
                       9105 ; rs232cmd.c 2539       /* TSGenSystem                                                           
                                                                                                                             
                                           RS232CMD.C     */
                       9106 ; rs232cmd.c 2540       
                       9107 ; rs232cmd.c 2541       /* Author:              Kim Engedahl, DEV, 98021                         
                                                                                                                             
                                  */
                       9108 ; rs232cmd.c 2542       /* Revised:             000727                                           
                                                                                                                             
                                                                                  */
                       9109 ; rs232cmd.c 2543       
                       9110 ; rs232cmd.c 2544       /* Function:    Handle the Colobar system-command.                       
                                                                                                           */
                       9111 ; rs232cmd.c 2545       /* Remarks:             This command will possibly change pattern and/or 
                            delay if               */
                       9112 ; rs232cmd.c 2546       /*            these are not valid in the selected system                 
                                                                                   */
                       9113 ; rs232cmd.c 2547       
                       9114 ; rs232cmd.c 2548       /* Updates:        --                                                    
                                                                                                                             
                                                                                                          */
                       9115 ; rs232cmd.c 2549       /************************************************************************
                            **/
                       9116 ; rs232cmd.c 2550       void TSGenSystem( void)
                       9117 ; rs232cmd.c 2551       {
                       9118         ALIGN   1
                       9120         PUBLIC  _TSGenSystem
001EFE                 9121 _TSGenSystem:
001EFE 0F30            9125         PUSH.W  R4, R5
                       9131 ; rs232cmd.c 2552               int system;
                       9132 ; rs232cmd.c 2553               char code *str;
                       9133 ; rs232cmd.c 2554       
                       9134 ; rs232cmd.c 2555               if ( CmdExecute && !SCPIError)
001F00 964842rr        9136         MOV.B   ES,#SEG( _CmdExecute )
001F04 9908rrrr        9137         MOV.W   R0,#SOF( _CmdExecute )
001F08 8200            9138         MOV.B   R0L,[R0]
001F0A F379            9139         BEQ     _466
001F0C 964842rr        9140         MOV.B   ES,#SEG( _SCPIError )
001F10 9908rrrr        9141         MOV.W   R0,#SOF( _SCPIError )
001F14 8A00            9142         MOV.W   R0,[R0]
001F16 F273            9143         BNE     _466
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 143

ADDR   CODE            LINE SOURCELINE
                       9144 ; rs232cmd.c 2556               {
                       9145 ; rs232cmd.c 2557                       if ( CmdRequest)
001F18 964842rr        9147         MOV.B   ES,#SEG( _CmdRequest )
001F1C 9908rrrr        9148         MOV.W   R0,#SOF( _CmdRequest )
001F20 8200            9149         MOV.B   R0L,[R0]
001F22 F33F            9150         BEQ     _456
                       9151 ; rs232cmd.c 2558                       {
                       9152 ; rs232cmd.c 2559                               if ( ParCnt)
001F24 964842rr        9154         MOV.B   ES,#SEG( _ParCnt )
001F28 9908rrrr        9155         MOV.W   R0,#SOF( _ParCnt )
001F2C 8200            9156         MOV.B   R0L,[R0]
001F2E F306            9157         BEQ     _453
                       9158 ; rs232cmd.c 2560                                       SCPIError = ParNotAllowed;
001F30 964842rr        9160         MOV.B   ES,#SEG( _SCPIError )
001F34 9908rrrr        9161         MOV.W   R0,#SOF( _SCPIError )
001F38 BA06            9162         MOV.W   [R0],#06H
001F3A FE61            9163         BR      _466
001F3A FE61            9163         BR      _466
001F3C                 9164 _453:
                       9165 ; rs232cmd.c 2561                               else
                       9166 ; rs232cmd.c 2562                               {
                       9167 ; rs232cmd.c 2563                                       str = SystemPar[CBSetup.System].LongName;
                            
001F3C 964842rr        9169         MOV.B   ES,#SEG( _CBSetup )
001F40 9908rrrr        9170         MOV.W   R0,#SOF( _CBSetup )
001F44 8200            9171         MOV.B   R0L,[R0]
001F46 E8000C          9172         MULU.B  R0L,#0CH
001F49 8920            9173         MOV.W   R2,R0
001F4B B930            9174         MOVS.W  R3,#00H
001F4D 9918rrrr        9175         MOV.W   R1,#SEG( _SystemPar )
001F51 9908rrrr        9176         MOV.W   R0,#SOF( _SystemPar )
001F55 0902            9177         ADD.W   R0,R2
001F57 1913            9178         ADDC.W  R1,R3
001F59 862C43          9179         MOV.B   CS,R1L
001F5C 8820            9180         MOVC.W  R2,[R0+]
001F5E 99040000        9181         CMP.W   R0,#00H
001F62 F202            9182         BNE     _467
001F64 A64143          9183         ADDS.B  CS,#01H
001F64 A6414300        9183         ADDS.B  CS,#01H
001F68                 9184 _467:
001F68 8830            9185         MOVC.W  R3,[R0+]
001F6A 8953            9186         MOV.W   R5,R3
001F6C 8942            9187         MOV.W   R4,R2
                       9189 ; rs232cmd.c 2564       
                       9190 ; rs232cmd.c 2565                                       while ( *str)                            
                                                                            
001F6E 866C43          9192         MOV.B   CS,R3L
001F71 8062            9193         MOVC.B  R3L,[R2+]
001F73 F312            9194         BEQ     _455
001F73 F31200          9194         BEQ     _455
001F76                 9195 _454:
                       9196 ; rs232cmd.c 2566                                               rs232putchar( *str++);
001F76 8915            9198         MOV.W   R1,R5
001F78 8904            9199         MOV.W   R0,R4
001F7A 862C43          9200         MOV.B   CS,R1L
001F7D 8020            9201         MOVC.B  R1L,[R0+]
001F7F 8102            9202         MOV.B   R0L,R1L
                       9203         CALL    _rs232putchar
001F81 C4rrrrrr       +9203 ;       FCALL   _rs232putchar
001F85 99400001        9204         ADD.W   R4,#01H
001F89 99510000        9205         ADDC.W  R5,#00H
001F8D 8915            9209         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 144

ADDR   CODE            LINE SOURCELINE
001F8F 8904            9210         MOV.W   R0,R4
001F91 862C43          9211         MOV.B   CS,R1L
001F94 8020            9212         MOVC.B  R1L,[R0+]
001F96 F2EF            9213         BNE     _454
001F98                 9215 _455:
                       9216 ; rs232cmd.c 2567       
                       9217 ; rs232cmd.c 2568                                       rs232putchar('\n');
001F98 91080A          9219         MOV.B   R0L,#0AH
                       9220         CALL    _rs232putchar
001F9B C4rrrrrr       +9220 ;       FCALL   _rs232putchar
                       9221 ; rs232cmd.c 2569                               }
                       9222 ; rs232cmd.c 2570                       }
001F9F FE2F            9224         BR      _466
001F9F FE2F00          9224         BR      _466
001FA2                 9225 _456:
                       9226 ; rs232cmd.c 2571                       else
                       9227 ; rs232cmd.c 2572                       {
                       9228 ; rs232cmd.c 2573                               if ( ParCnt != 1)
001FA2 964842rr        9230         MOV.B   ES,#SEG( _ParCnt )
001FA6 9908rrrr        9231         MOV.W   R0,#SOF( _ParCnt )
001FAA 8200            9232         MOV.B   R0L,[R0]
001FAC 910401          9233         CMP.B   R0L,#01H
001FAF F307            9234         BEQ     _457
                       9235 ; rs232cmd.c 2574                                       SCPIError = SyntaxErr;
001FB1 964842rr        9237         MOV.B   ES,#SEG( _SCPIError )
001FB5 9908rrrr        9238         MOV.W   R0,#SOF( _SCPIError )
001FB9 BA03            9239         MOV.W   [R0],#03H
001FBB FE21            9240         BR      _466
001FBB FE2100          9240         BR      _466
001FBE                 9241 _457:
                       9242 ; rs232cmd.c 2575                               else
                       9243 ; rs232cmd.c 2576                               {
                       9244 ; rs232cmd.c 2577                                       system = FindParameter( Cmd, SystemPar);
001FBE 9918rrrr        9246         MOV.W   R1,#SEG( _Cmd )
001FC2 9908rrrr        9247         MOV.W   R0,#SOF( _Cmd )
001FC6 9938rrrr        9248         MOV.W   R3,#SEG( _SystemPar )
001FCA 9928rrrr        9249         MOV.W   R2,#SOF( _SystemPar )
001FCE C520A3          9250         CALL    _FindParameter
                       9252 ; rs232cmd.c 2578       
                       9253 ; rs232cmd.c 2579                                       if ( system == PAL_PALID)                
                                                           // If line7, (PAL w/ID) ever should
001FD1 99040001        9255         CMP.W   R0,#01H
001FD5 F208            9256         BNE     _458
                       9257 ; rs232cmd.c 2580                                               SCPIError = DataOutOfRange;      
                                                   //  be supported remove this exception
001FD7 964842rr        9259         MOV.B   ES,#SEG( _SCPIError )
001FDB 9908rrrr        9260         MOV.W   R0,#SOF( _SCPIError )
001FDF 9A080021        9261         MOV.W   [R0],#021H
001FE3 FE0D            9262         BR      _466
001FE3 FE0D00          9262         BR      _466
001FE6                 9263 _458:
                       9265 ; rs232cmd.c 2581                                       else                                     
                                   
                       9266 ; rs232cmd.c 2582                                       {
                       9267 ; rs232cmd.c 2583                                               if ( system > -1)
001FE6 9904FFFF        9269         CMP.W   R0,#0FFFFH
001FEA FD03            9270         BLE     _459
                       9271 ; rs232cmd.c 2584                                                       SetCBSystem( system);
                       9273         CALL    _SetCBSystem
001FEC C4rrrrrr       +9273 ;       FCALL   _SetCBSystem
001FF0 FE06            9274         BR      _466
001FF0 FE06            9274         BR      _466
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 145

ADDR   CODE            LINE SOURCELINE
001FF2                 9275 _459:
                       9276 ; rs232cmd.c 2585                                               else
                       9277 ; rs232cmd.c 2586                                                       SCPIError = DataOutOfRang
                            e;
001FF2 964842rr        9279         MOV.B   ES,#SEG( _SCPIError )
001FF6 9908rrrr        9280         MOV.W   R0,#SOF( _SCPIError )
001FFA 9A080021        9281         MOV.W   [R0],#021H
                       9282 ; rs232cmd.c 2587                                       }
                       9283 ; rs232cmd.c 2588                               }
                       9284 ; rs232cmd.c 2589                       }
                       9285 ; rs232cmd.c 2590               }
001FFE                 9287 _466:
                       9288 ; rs232cmd.c 2591       }
001FFE 2F30            9290         POP.W   R4, R5
002000 D680            9292         RET
                       9295 ; rs232cmd.c 2592       
                       9296 ; rs232cmd.c 2593       /************************************************************************
                            **/
                       9297 ; rs232cmd.c 2594       /* TSGenDelay                                                  RS232CMD.C
                             */
                       9298 ; rs232cmd.c 2595       /*             Kim Engedahl, DEV, 980211                                 
                             */
                       9299 ; rs232cmd.c 2596       /* Revised:    000604                                                    
                             */
                       9300 ; rs232cmd.c 2597       /* Function:    Handle the Colorbar delay command.                       
                             */
                       9301 ; rs232cmd.c 2598       /* Remarks:    Delay should be multiplied/divided with/by 256 to conform 
                             */
                       9302 ; rs232cmd.c 2599       /*             with the black burst timing as the functions              
                             */
                       9303 ; rs232cmd.c 2600       /*             PrintSamplesToFLT/FLTToSamples are common to both the CBar
                             */
                       9304 ; rs232cmd.c 2601       /*             and BB timing. The CBar timing equals 1728/1716 samples   
                             */
                       9305 ; rs232cmd.c 2602       /*             (app. 37ns/sample), while the BB timing equals 1728*256/  
                             */
                       9306 ; rs232cmd.c 2603       /*              1716*256 samples (app. 0.14 ns/sample).                  
                             */
                       9307 ; rs232cmd.c 2604       /************************************************************************
                            **/
                       9308 ; rs232cmd.c 2605       void TSGenDelay( void)
                       9309 ; rs232cmd.c 2606       {
                       9310         ALIGN   1
                       9312         PUBLIC  _TSGenDelay
002002                 9313 _TSGenDelay:
002002 0F30            9317         PUSH.W  R4, R5
002004 A978            9319         ADDS.W  R7,#08H
                       9326 ; rs232cmd.c 2607               int field, line;
                       9327 ; rs232cmd.c 2608               float offset;
                       9328 ; rs232cmd.c 2609               long samples;
                       9329 ; rs232cmd.c 2610       
                       9330 ; rs232cmd.c 2611               if ( CmdExecute && !SCPIError)
002006 964842rr        9332         MOV.B   ES,#SEG( _CmdExecute )
00200A 9908rrrr        9333         MOV.W   R0,#SOF( _CmdExecute )
00200E 8200            9334         MOV.B   R0L,[R0]
002010 F37A            9335         BEQ     _481
002012 964842rr        9336         MOV.B   ES,#SEG( _SCPIError )
002016 9908rrrr        9337         MOV.W   R0,#SOF( _SCPIError )
00201A 8A00            9338         MOV.W   R0,[R0]
00201C F274            9339         BNE     _481
                       9340 ; rs232cmd.c 2612               {
                       9341 ; rs232cmd.c 2613                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 146

ADDR   CODE            LINE SOURCELINE
00201E 964842rr        9343         MOV.B   ES,#SEG( _CmdRequest )
002022 9908rrrr        9344         MOV.W   R0,#SOF( _CmdRequest )
002026 8200            9345         MOV.B   R0L,[R0]
002028 F31E            9346         BEQ     _472
                       9347 ; rs232cmd.c 2614                       {
                       9348 ; rs232cmd.c 2615                               if ( ParCnt)
00202A 964842rr        9350         MOV.B   ES,#SEG( _ParCnt )
00202E 9908rrrr        9351         MOV.W   R0,#SOF( _ParCnt )
002032 8200            9352         MOV.B   R0L,[R0]
002034 F306            9353         BEQ     _471
                       9354 ; rs232cmd.c 2616                                       SCPIError = ParNotAllowed;
002036 964842rr        9356         MOV.B   ES,#SEG( _SCPIError )
00203A 9908rrrr        9357         MOV.W   R0,#SOF( _SCPIError )
00203E BA06            9358         MOV.W   [R0],#06H
002040 FE62            9359         BR      _481
002040 FE62            9359         BR      _481
002042                 9360 _471:
                       9361 ; rs232cmd.c 2617                               else
                       9362 ; rs232cmd.c 2618                               {
                       9363 ; rs232cmd.c 2619                                       PrintSamplesToFLT( CBSetup.System, CBSetu
                            p.Delay*256);
002042 964842rr        9365         MOV.B   ES,#SEG( _CBSetup )
002046 9908rrrr        9366         MOV.W   R0,#SOF( _CBSetup )
00204A 8200            9367         MOV.B   R0L,[R0]
00204C 964842rr        9368         MOV.B   ES,#SEG( _CBSetup+4 )
002050 9938rrrr        9369         MOV.W   R3,#SOF( _CBSetup+4 )
002054 8B23            9370         MOV.W   R2,[R3+]
002056 8A33            9371         MOV.W   R3,[R3]
002058 DD28            9372         ASL.D   R2,#08H
00205A C522E5          9373         CALL    _PrintSamplesToFLT
                       9374 ; rs232cmd.c 2620       
                       9375 ; rs232cmd.c 2621                                       rs232putchar ( '\n');
00205D 91080A          9377         MOV.B   R0L,#0AH
                       9378         CALL    _rs232putchar
002060 C4rrrrrr       +9378 ;       FCALL   _rs232putchar
                       9379 ; rs232cmd.c 2622                               }
                       9380 ; rs232cmd.c 2623                       }
002064 FE50            9382         BR      _481
002064 FE50            9382         BR      _481
002066                 9383 _472:
                       9384 ; rs232cmd.c 2624                       else
                       9385 ; rs232cmd.c 2625                       {
                       9386 ; rs232cmd.c 2626                               if (( ParCnt != 3) || ( sscanf( Cmd, "%d,%d,%f", 
                            &field, &line, &offset) != 3))
002066 964842rr        9388         MOV.B   ES,#SEG( _ParCnt )
00206A 9908rrrr        9389         MOV.W   R0,#SOF( _ParCnt )
00206E 8200            9390         MOV.B   R0L,[R0]
002070 910403          9391         CMP.B   R0L,#03H
002073 F21F            9392         BNE     _473
002075 9168rr          9393         MOV.B   R3L,#SEG( __lc_bs )
002078 7177            9394         XOR.B   R3H,R3H
00207A 8927            9395         MOV.W   R2,R7
00207C 91A8rr          9396         MOV.B   R5L,#SEG( __lc_bs )
00207F 71BB            9397         XOR.B   R5H,R5H
002081 404702          9398         LEA     R4,R7+2
002084 9128rr          9399         MOV.B   R1L,#SEG( __lc_bs )
002087 7133            9400         XOR.B   R1H,R1H
002089 400704          9401         LEA     R0,R7+4
00208C 0F03            9402         PUSH.W  R0, R1
00208E 0F30            9404         PUSH.W  R4, R5
002090 0F0C            9406         PUSH.W  R2, R3
002092 9938rrrr        9408         MOV.W   R3,#SEG( _298 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 147

ADDR   CODE            LINE SOURCELINE
002096 9928rrrr        9409         MOV.W   R2,#SOF( _298 )
00209A 0F0C            9410         PUSH.W  R2, R3
00209C 9918rrrr        9412         MOV.W   R1,#SEG( _Cmd )
0020A0 9908rrrr        9413         MOV.W   R0,#SOF( _Cmd )
                       9414         CALL    _sscanf
0020A4 C4rrrrrr       +9414 ;       FCALL   _sscanf
0020A8 99700010        9415         ADD.W   R7,#010H
0020AC 99040003        9417         CMP.W   R0,#03H
0020B0 F306            9418         BEQ     _474
0020B0 F306            9418         BEQ     _474
0020B2                 9419 _473:
                       9420 ; rs232cmd.c 2627                                       SCPIError = SyntaxErr;
0020B2 964842rr        9422         MOV.B   ES,#SEG( _SCPIError )
0020B6 9908rrrr        9423         MOV.W   R0,#SOF( _SCPIError )
0020BA BA03            9424         MOV.W   [R0],#03H
0020BC FE24            9425         BR      _481
0020BC FE24            9425         BR      _481
0020BE                 9426 _474:
                       9427 ; rs232cmd.c 2628                               else
                       9428 ; rs232cmd.c 2629                               {
                       9429 ; rs232cmd.c 2630                                       if (( samples = FLTToSamples( CBSetup.Sys
                            tem, field, line, offset)) == -1)
0020BE 964842rr        9431         MOV.B   ES,#SEG( _CBSetup )
0020C2 9908rrrr        9432         MOV.W   R0,#SOF( _CBSetup )
0020C6 8200            9433         MOV.B   R0L,[R0]
0020C8 8A17            9434         MOV.W   R1,[R7]
0020CA 8C2702          9435         MOV.W   R2,[R7+2]
0020CD 8C5706          9436         MOV.W   R5,[R7+6]
0020D0 8C4704          9437         MOV.W   R4,[R7+4]
0020D3 0F30            9438         PUSH.W  R4, R5
0020D5 C5206C          9440         CALL    _FLTToSamples
0020D8 A974            9441         ADDS.W  R7,#04H
0020DA 8931            9443         MOV.W   R3,R1
0020DC 8920            9444         MOV.W   R2,R0
0020DE 9934FFFF        9445         CMP.W   R3,#0FFFFH
0020E2 F202            9446         BNE     _484
0020E4 9924FFFF        9447         CMP.W   R2,#0FFFFH
0020E4 9924FFFF        9447         CMP.W   R2,#0FFFFH
0020E8                 9448 _484:
0020E8 F207            9449         BNE     _475
                       9450 ; rs232cmd.c 2631                                               SCPIError = ExecErr;
0020EA 964842rr        9452         MOV.B   ES,#SEG( _SCPIError )
0020EE 9908rrrr        9453         MOV.W   R0,#SOF( _SCPIError )
0020F2 9A08001D        9454         MOV.W   [R0],#01DH
0020F6 FE07            9455         BR      _481
0020F6 FE07            9455         BR      _481
0020F8                 9456 _475:
                       9457 ; rs232cmd.c 2632                                       else            
                       9458 ; rs232cmd.c 2633                                               SetCBDelay( samples/256);
0020F8 B930            9460         MOV.W   R3,#00H
0020FA 99280100        9461         MOV.W   R2,#0100H
0020FE C4rrrrrr        9462         FCALL   __SDIVL
                       9463         CALL    _SetCBDelay
002102 C4rrrrrr       +9463 ;       FCALL   _SetCBDelay
                       9464 ; rs232cmd.c 2634                               }
                       9465 ; rs232cmd.c 2635                       }
                       9466 ; rs232cmd.c 2636               }
002106                 9468 _481:
                       9469 ; rs232cmd.c 2637       }
002106 99700008        9471         ADD.W   R7,#08H
00210A 2F30            9473         POP.W   R4, R5
00210C D680            9475         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 148

ADDR   CODE            LINE SOURCELINE
                       9477 ; rs232cmd.c 2638       
                       9478 ; rs232cmd.c 2639       /************************************************************************
                            **/
                       9479 ; rs232cmd.c 2640       /* TSGenScHPhase                                           RS232CMD.C    
                             */
                       9480 ; rs232cmd.c 2641       
                       9481 ; rs232cmd.c 2642       /* Author:              Kim Engedahl, DEV, 980211                        
                             */
                       9482 ; rs232cmd.c 2643       /* Revised:             000727                                           
                             */
                       9483 ; rs232cmd.c 2644       /* Function:    Handle the Colorbar ScH-Phase-command.                   
                             */
                       9484 ; rs232cmd.c 2645       /************************************************************************
                            **/
                       9485 ; rs232cmd.c 2646       void TSGenScHPhase( void)
                       9486 ; rs232cmd.c 2647       {
                       9487         ALIGN   1
                       9489         PUBLIC  _TSGenScHPhase
00210E                 9490 _TSGenScHPhase:
00210E A97E            9494         ADDS.W  R7,#0EH
                       9497 ; rs232cmd.c 2648               int schphase;
                       9498 ; rs232cmd.c 2649       
                       9499 ; rs232cmd.c 2650               if ( CmdExecute && !SCPIError)
002110 964842rr        9501         MOV.B   ES,#SEG( _CmdExecute )
002114 9908rrrr        9502         MOV.W   R0,#SOF( _CmdExecute )
002118 8200            9503         MOV.B   R0L,[R0]
00211A F35A            9504         BEQ     _496
00211C 964842rr        9505         MOV.B   ES,#SEG( _SCPIError )
002120 9908rrrr        9506         MOV.W   R0,#SOF( _SCPIError )
002124 8A00            9507         MOV.W   R0,[R0]
002126 F254            9508         BNE     _496
                       9509 ; rs232cmd.c 2651               {
                       9510 ; rs232cmd.c 2652                       if ( CmdRequest)
002128 964842rr        9512         MOV.B   ES,#SEG( _CmdRequest )
00212C 9908rrrr        9513         MOV.W   R0,#SOF( _CmdRequest )
002130 8200            9514         MOV.B   R0L,[R0]
002132 F31C            9515         BEQ     _486
                       9516 ; rs232cmd.c 2653                       {
                       9517 ; rs232cmd.c 2654                               if ( ParCnt)
002134 964842rr        9519         MOV.B   ES,#SEG( _ParCnt )
002138 9908rrrr        9520         MOV.W   R0,#SOF( _ParCnt )
00213C 8200            9521         MOV.B   R0L,[R0]
00213E F306            9522         BEQ     _485
                       9523 ; rs232cmd.c 2655                                       SCPIError = ParNotAllowed;
002140 964842rr        9525         MOV.B   ES,#SEG( _SCPIError )
002144 9908rrrr        9526         MOV.W   R0,#SOF( _SCPIError )
002148 BA06            9527         MOV.W   [R0],#06H
00214A FE42            9528         BR      _496
00214A FE42            9528         BR      _496
00214C                 9529 _485:
                       9530 ; rs232cmd.c 2656                               else
                       9531 ; rs232cmd.c 2657                                       rs232printf( 6, "%d\n", CBSetup.ScHPhase)
                            ;
00214C B906            9533         MOV.W   R0,#06H
00214E 964842rr        9534         MOV.B   ES,#SEG( _CBSetup+8 )
002152 9918rrrr        9535         MOV.W   R1,#SOF( _CBSetup+8 )
002156 8A11            9536         MOV.W   R1,[R1]
002158 0F02            9537         PUSH.W  R1
00215A 9938rrrr        9539         MOV.W   R3,#SEG( _9 )
00215E 9928rrrr        9540         MOV.W   R2,#SOF( _9 )
002162 0F0C            9541         PUSH.W  R2, R3
                       9543         CALL    _rs232printf
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 149

ADDR   CODE            LINE SOURCELINE
002164 C4rrrrrr       +9543 ;       FCALL   _rs232printf
002168 A976            9544         ADDS.W  R7,#06H
                       9546 ; rs232cmd.c 2658                       }
00216A FE32            9548         BR      _496
00216A FE32            9548         BR      _496
00216C                 9549 _486:
                       9550 ; rs232cmd.c 2659                       else
                       9551 ; rs232cmd.c 2660                       {
                       9552 ; rs232cmd.c 2661                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &schph
                            ase) != 1))
00216C 964842rr        9554         MOV.B   ES,#SEG( _ParCnt )
002170 9908rrrr        9555         MOV.W   R0,#SOF( _ParCnt )
002174 8200            9556         MOV.B   R0L,[R0]
002176 910401          9557         CMP.B   R0L,#01H
002179 F215            9558         BNE     _487
00217B 9918rrrr        9559         MOV.W   R1,#SEG( _Cmd )
00217F 9908rrrr        9560         MOV.W   R0,#SOF( _Cmd )
002183 9168rr          9561         MOV.B   R3L,#SEG( __lc_bs )
002186 7177            9562         XOR.B   R3H,R3H
002188 8927            9563         MOV.W   R2,R7
00218A 0F0C            9564         PUSH.W  R2, R3
00218C 9938rrrr        9566         MOV.W   R3,#SEG( _10 )
002190 9928rrrr        9567         MOV.W   R2,#SOF( _10 )
002194 0F0C            9568         PUSH.W  R2, R3
                       9570         CALL    _sscanf
002196 C4rrrrrr       +9570 ;       FCALL   _sscanf
00219A 99700008        9571         ADD.W   R7,#08H
00219E 99040001        9573         CMP.W   R0,#01H
0021A2 F306            9574         BEQ     _488
0021A2 F306            9574         BEQ     _488
0021A4                 9575 _487:
                       9576 ; rs232cmd.c 2662                                       SCPIError = SyntaxErr;
0021A4 964842rr        9578         MOV.B   ES,#SEG( _SCPIError )
0021A8 9908rrrr        9579         MOV.W   R0,#SOF( _SCPIError )
0021AC BA03            9580         MOV.W   [R0],#03H
0021AE FE10            9581         BR      _496
0021AE FE10            9581         BR      _496
0021B0                 9582 _488:
                       9583 ; rs232cmd.c 2663                               else
                       9584 ; rs232cmd.c 2664                               {
                       9585 ; rs232cmd.c 2665                                       if (( schphase < ScHPhaseLow) || ( schpha
                            se > ScHPhaseHigh))
0021B0 9A74FF4D        9587         CMP.W   [R7],#0FF4DH
0021B4 FB03            9588         BLT     _489
0021B6 9A7400B4        9589         CMP.W   [R7],#0B4H
0021BA FD07            9590         BLE     _490
0021BA FD07            9590         BLE     _490
0021BC                 9591 _489:
                       9592 ; rs232cmd.c 2666                                               SCPIError = DataOutOfRange;
0021BC 964842rr        9594         MOV.B   ES,#SEG( _SCPIError )
0021C0 9908rrrr        9595         MOV.W   R0,#SOF( _SCPIError )
0021C4 9A080021        9596         MOV.W   [R0],#021H
0021C8 FE03            9597         BR      _496
0021C8 FE03            9597         BR      _496
0021CA                 9598 _490:
                       9599 ; rs232cmd.c 2667                                       else
                       9600 ; rs232cmd.c 2668                                               SetCBScHPhase( schphase);
0021CA 8A07            9602         MOV.W   R0,[R7]
                       9603         CALL    _SetCBScHPhase
0021CC C4rrrrrr       +9603 ;       FCALL   _SetCBScHPhase
                       9604 ; rs232cmd.c 2669                               }
                       9605 ; rs232cmd.c 2670                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 150

ADDR   CODE            LINE SOURCELINE
                       9606 ; rs232cmd.c 2671               }
0021D0                 9608 _496:
                       9609 ; rs232cmd.c 2672       }
0021D0 A972            9611         ADDS.W  R7,#02H
0021D2 D680            9613         RET
                       9615 ; rs232cmd.c 2673       
                       9616 ; rs232cmd.c 2674       /************************************************************************
                            **/
                       9617 ; rs232cmd.c 2675       /* TSGenEmbAudioSignal                                                   
                                                                                                                            R
                            S232CMD.C     */
                       9618 ; rs232cmd.c 2676       
                       9619 ; rs232cmd.c 2677       /* Author:              Kim Engedahl, DEV, 980211                        
                                                                                                                             
                                  */
                       9620 ; rs232cmd.c 2678       /* Revised:             000727                                           
                                                                                                                             
                                                                                  */
                       9621 ; rs232cmd.c 2679       
                       9622 ; rs232cmd.c 2680       /* Function:    Handle the Colorbar embedded audio signal                
                                                                                           */
                       9623 ; rs232cmd.c 2681       
                       9624 ; rs232cmd.c 2682       
                       9625 ; rs232cmd.c 2683       
                       9626 ; rs232cmd.c 2684       /************************************************************************
                            **/
                       9627 ; rs232cmd.c 2685       void TSGenEmbAudioSignal( void)
                       9628 ; rs232cmd.c 2686       {
                       9629         ALIGN   1
                       9631         PUBLIC  _TSGenEmbAudioSignal
0021D4                 9632 _TSGenEmbAudioSignal:
0021D4 0F30            9636         PUSH.W  R4, R5
                       9642 ; rs232cmd.c 2687               int signal;
                       9643 ; rs232cmd.c 2688               char code *str;
                       9644 ; rs232cmd.c 2689       
                       9645 ; rs232cmd.c 2690               if ( CmdExecute && !SCPIError)
0021D6 964842rr        9647         MOV.B   ES,#SEG( _CmdExecute )
0021DA 9908rrrr        9648         MOV.W   R0,#SOF( _CmdExecute )
0021DE 8200            9649         MOV.B   R0L,[R0]
0021E0 F36F            9650         BEQ     _512
0021E2 964842rr        9651         MOV.B   ES,#SEG( _SCPIError )
0021E6 9908rrrr        9652         MOV.W   R0,#SOF( _SCPIError )
0021EA 8A00            9653         MOV.W   R0,[R0]
0021EC F269            9654         BNE     _512
                       9655 ; rs232cmd.c 2691               {
                       9656 ; rs232cmd.c 2692                       if ( CmdRequest)
0021EE 964842rr        9658         MOV.B   ES,#SEG( _CmdRequest )
0021F2 9908rrrr        9659         MOV.W   R0,#SOF( _CmdRequest )
0021F6 8200            9660         MOV.B   R0L,[R0]
0021F8 F33F            9661         BEQ     _504
                       9662 ; rs232cmd.c 2693                       {
                       9663 ; rs232cmd.c 2694                               if ( ParCnt)
0021FA 964842rr        9665         MOV.B   ES,#SEG( _ParCnt )
0021FE 9908rrrr        9666         MOV.W   R0,#SOF( _ParCnt )
002202 8200            9667         MOV.B   R0L,[R0]
002204 F306            9668         BEQ     _501
                       9669 ; rs232cmd.c 2695                                       SCPIError = ParNotAllowed;
002206 964842rr        9671         MOV.B   ES,#SEG( _SCPIError )
00220A 9908rrrr        9672         MOV.W   R0,#SOF( _SCPIError )
00220E BA06            9673         MOV.W   [R0],#06H
002210 FE57            9674         BR      _512
002210 FE57            9674         BR      _512
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 151

ADDR   CODE            LINE SOURCELINE
002212                 9675 _501:
                       9676 ; rs232cmd.c 2696                               else
                       9677 ; rs232cmd.c 2697                               {
                       9678 ; rs232cmd.c 2698                                       str = EmbAudioSignalPar[CBSetup.EmbAudioS
                            ignal].LongName;
002212 964842rr        9680         MOV.B   ES,#SEG( _CBSetup+10 )
002216 9908rrrr        9681         MOV.W   R0,#SOF( _CBSetup+10 )
00221A 8200            9682         MOV.B   R0L,[R0]
00221C E8000C          9683         MULU.B  R0L,#0CH
00221F 8920            9684         MOV.W   R2,R0
002221 B930            9685         MOVS.W  R3,#00H
002223 9918rrrr        9686         MOV.W   R1,#SEG( _EmbAudioSignalPar )
002227 9908rrrr        9687         MOV.W   R0,#SOF( _EmbAudioSignalPar )
00222B 0902            9688         ADD.W   R0,R2
00222D 1913            9689         ADDC.W  R1,R3
00222F 862C43          9690         MOV.B   CS,R1L
002232 8820            9691         MOVC.W  R2,[R0+]
002234 99040000        9692         CMP.W   R0,#00H
002238 F202            9693         BNE     _513
00223A A64143          9694         ADDS.B  CS,#01H
00223A A6414300        9694         ADDS.B  CS,#01H
00223E                 9695 _513:
00223E 8830            9696         MOVC.W  R3,[R0+]
002240 8953            9697         MOV.W   R5,R3
002242 8942            9698         MOV.W   R4,R2
                       9700 ; rs232cmd.c 2699       
                       9701 ; rs232cmd.c 2700                                       while ( *str)
002244 866C43          9703         MOV.B   CS,R3L
002247 8062            9704         MOVC.B  R3L,[R2+]
002249 F312            9705         BEQ     _503
002249 F31200          9705         BEQ     _503
00224C                 9706 _502:
                       9707 ; rs232cmd.c 2701                                               rs232putchar( *str++);
00224C 8915            9709         MOV.W   R1,R5
00224E 8904            9710         MOV.W   R0,R4
002250 862C43          9711         MOV.B   CS,R1L
002253 8020            9712         MOVC.B  R1L,[R0+]
002255 8102            9713         MOV.B   R0L,R1L
                       9714         CALL    _rs232putchar
002257 C4rrrrrr       +9714 ;       FCALL   _rs232putchar
00225B 99400001        9715         ADD.W   R4,#01H
00225F 99510000        9716         ADDC.W  R5,#00H
002263 8915            9720         MOV.W   R1,R5
002265 8904            9721         MOV.W   R0,R4
002267 862C43          9722         MOV.B   CS,R1L
00226A 8020            9723         MOVC.B  R1L,[R0+]
00226C F2EF            9724         BNE     _502
00226E                 9726 _503:
                       9727 ; rs232cmd.c 2702       
                       9728 ; rs232cmd.c 2703                                       rs232putchar('\n');
00226E 91080A          9730         MOV.B   R0L,#0AH
                       9731         CALL    _rs232putchar
002271 C4rrrrrr       +9731 ;       FCALL   _rs232putchar
                       9732 ; rs232cmd.c 2704                               }
                       9733 ; rs232cmd.c 2705                       }
002275 FE25            9735         BR      _512
002275 FE2500          9735         BR      _512
002278                 9736 _504:
                       9737 ; rs232cmd.c 2706                       else
                       9738 ; rs232cmd.c 2707                       {
                       9739 ; rs232cmd.c 2708                               if ( ParCnt != 1)
002278 964842rr        9741         MOV.B   ES,#SEG( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 152

ADDR   CODE            LINE SOURCELINE
00227C 9908rrrr        9742         MOV.W   R0,#SOF( _ParCnt )
002280 8200            9743         MOV.B   R0L,[R0]
002282 910401          9744         CMP.B   R0L,#01H
002285 F307            9745         BEQ     _505
                       9746 ; rs232cmd.c 2709                                       SCPIError = SyntaxErr;
002287 964842rr        9748         MOV.B   ES,#SEG( _SCPIError )
00228B 9908rrrr        9749         MOV.W   R0,#SOF( _SCPIError )
00228F BA03            9750         MOV.W   [R0],#03H
002291 FE17            9751         BR      _512
002291 FE1700          9751         BR      _512
002294                 9752 _505:
                       9753 ; rs232cmd.c 2710                               else
                       9754 ; rs232cmd.c 2711                               {
                       9755 ; rs232cmd.c 2712                                       signal = FindParameter( Cmd, EmbAudioSign
                            alPar);
002294 9918rrrr        9757         MOV.W   R1,#SEG( _Cmd )
002298 9908rrrr        9758         MOV.W   R0,#SOF( _Cmd )
00229C 9938rrrr        9759         MOV.W   R3,#SEG( _EmbAudioSignalPar )
0022A0 9928rrrr        9760         MOV.W   R2,#SOF( _EmbAudioSignalPar )
0022A4 C51F38          9761         CALL    _FindParameter
                       9763 ; rs232cmd.c 2713               
                       9764 ; rs232cmd.c 2714                                       if ( signal > -1)
0022A7 9904FFFF        9766         CMP.W   R0,#0FFFFH
0022AB FD04            9767         BLE     _506
                       9769 ; rs232cmd.c 2715                                               SetCBEmbAudioSignal( signal);
                       9771         CALL    _SetCBEmbAudioSignal
0022AD C4rrrrrr       +9771 ;       FCALL   _SetCBEmbAudioSignal
0022B1 FE07            9772         BR      _512
0022B1 FE0700          9772         BR      _512
0022B4                 9773 _506:
                       9774 ; rs232cmd.c 2716                                       else
                       9775 ; rs232cmd.c 2717                                               SCPIError = DataOutOfRange;
0022B4 964842rr        9777         MOV.B   ES,#SEG( _SCPIError )
0022B8 9908rrrr        9778         MOV.W   R0,#SOF( _SCPIError )
0022BC 9A080021        9779         MOV.W   [R0],#021H
                       9780 ; rs232cmd.c 2718                               }
                       9781 ; rs232cmd.c 2719                       }
                       9782 ; rs232cmd.c 2720               }
0022C0                 9784 _512:
                       9785 ; rs232cmd.c 2721       }
0022C0 2F30            9787         POP.W   R4, R5
0022C2 D680            9789         RET
                       9792 ; rs232cmd.c 2722       
                       9793 ; rs232cmd.c 2723       /************************************************************************
                            **/
                       9794 ; rs232cmd.c 2724       /* AudioGenOutput                                                        
                                                                                                                             
                                               RS232CMD.C */
                       9795 ; rs232cmd.c 2725       
                       9796 ; rs232cmd.c 2726       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                       9797 ; rs232cmd.c 2727       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                       9798 ; rs232cmd.c 2728       
                       9799 ; rs232cmd.c 2729       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                       9800 ; rs232cmd.c 2730       
                       9801 ; rs232cmd.c 2731       
                       9802 ; rs232cmd.c 2732       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 153

ADDR   CODE            LINE SOURCELINE
                       9803 ; rs232cmd.c 2733       /************************************************************************
                            **/
                       9804 ; rs232cmd.c 2734       void AudioGenOutput( void)
                       9805 ; rs232cmd.c 2735       {
                       9806         ALIGN   1
                       9808         PUBLIC  _AudioGenOutput
0022C4                 9809 _AudioGenOutput:
0022C4 0F30            9813         PUSH.W  R4, R5
                       9819 ; rs232cmd.c 2736               int output;
                       9820 ; rs232cmd.c 2737               char code *str;
                       9821 ; rs232cmd.c 2738       
                       9822 ; rs232cmd.c 2739               if ( CmdExecute && !SCPIError)
0022C6 964842rr        9824         MOV.B   ES,#SEG( _CmdExecute )
0022CA 9908rrrr        9825         MOV.W   R0,#SOF( _CmdExecute )
0022CE 8200            9826         MOV.B   R0L,[R0]
0022D0 F377            9827         BEQ     _528
0022D2 964842rr        9828         MOV.B   ES,#SEG( _SCPIError )
0022D6 9908rrrr        9829         MOV.W   R0,#SOF( _SCPIError )
0022DA 8A00            9830         MOV.W   R0,[R0]
0022DC F271            9831         BNE     _528
                       9832 ; rs232cmd.c 2740               {
                       9833 ; rs232cmd.c 2741                       if ( CmdRequest)
0022DE 964842rr        9835         MOV.B   ES,#SEG( _CmdRequest )
0022E2 9908rrrr        9836         MOV.W   R0,#SOF( _CmdRequest )
0022E6 8200            9837         MOV.B   R0L,[R0]
0022E8 F33F            9838         BEQ     _519
                       9839 ; rs232cmd.c 2742                       {
                       9840 ; rs232cmd.c 2743                               if ( ParCnt)
0022EA 964842rr        9842         MOV.B   ES,#SEG( _ParCnt )
0022EE 9908rrrr        9843         MOV.W   R0,#SOF( _ParCnt )
0022F2 8200            9844         MOV.B   R0L,[R0]
0022F4 F306            9845         BEQ     _516
                       9846 ; rs232cmd.c 2744                                       SCPIError = ParNotAllowed;
0022F6 964842rr        9848         MOV.B   ES,#SEG( _SCPIError )
0022FA 9908rrrr        9849         MOV.W   R0,#SOF( _SCPIError )
0022FE BA06            9850         MOV.W   [R0],#06H
002300 FE5F            9851         BR      _528
002300 FE5F            9851         BR      _528
002302                 9852 _516:
                       9853 ; rs232cmd.c 2745                               else
                       9854 ; rs232cmd.c 2746                               {
                       9855 ; rs232cmd.c 2747                                       str = AudioOutputPar[AudioOutput].LongNam
                            e;
002302 964842rr        9857         MOV.B   ES,#SEG( _AudioOutput )
002306 9908rrrr        9858         MOV.W   R0,#SOF( _AudioOutput )
00230A 8A00            9859         MOV.W   R0,[R0]
00230C E900000C        9860         MULU.W  R0,#0CH
002310 8920            9861         MOV.W   R2,R0
002312 B930            9862         MOVS.W  R3,#00H
002314 9918rrrr        9863         MOV.W   R1,#SEG( _AudioOutputPar )
002318 9908rrrr        9864         MOV.W   R0,#SOF( _AudioOutputPar )
00231C 0902            9865         ADD.W   R0,R2
00231E 1913            9866         ADDC.W  R1,R3
002320 862C43          9867         MOV.B   CS,R1L
002323 8820            9868         MOVC.W  R2,[R0+]
002325 99040000        9869         CMP.W   R0,#00H
002329 F202            9870         BNE     _529
00232B A64143          9871         ADDS.B  CS,#01H
00232B A64143          9871         ADDS.B  CS,#01H
00232E                 9872 _529:
00232E 8830            9873         MOVC.W  R3,[R0+]
002330 8953            9874         MOV.W   R5,R3
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 154

ADDR   CODE            LINE SOURCELINE
002332 8942            9875         MOV.W   R4,R2
                       9877 ; rs232cmd.c 2748       
                       9878 ; rs232cmd.c 2749                                       while ( *str)
002334 866C43          9880         MOV.B   CS,R3L
002337 8062            9881         MOVC.B  R3L,[R2+]
002339 F312            9882         BEQ     _518
002339 F31200          9882         BEQ     _518
00233C                 9883 _517:
                       9884 ; rs232cmd.c 2750                                               rs232putchar( *str++);
00233C 8915            9886         MOV.W   R1,R5
00233E 8904            9887         MOV.W   R0,R4
002340 862C43          9888         MOV.B   CS,R1L
002343 8020            9889         MOVC.B  R1L,[R0+]
002345 8102            9890         MOV.B   R0L,R1L
                       9891         CALL    _rs232putchar
002347 C4rrrrrr       +9891 ;       FCALL   _rs232putchar
00234B 99400001        9892         ADD.W   R4,#01H
00234F 99510000        9893         ADDC.W  R5,#00H
002353 8915            9897         MOV.W   R1,R5
002355 8904            9898         MOV.W   R0,R4
002357 862C43          9899         MOV.B   CS,R1L
00235A 8020            9900         MOVC.B  R1L,[R0+]
00235C F2EF            9901         BNE     _517
00235E                 9903 _518:
                       9904 ; rs232cmd.c 2751       
                       9905 ; rs232cmd.c 2752                                       rs232putchar('\n');
00235E 91080A          9907         MOV.B   R0L,#0AH
                       9908         CALL    _rs232putchar
002361 C4rrrrrr       +9908 ;       FCALL   _rs232putchar
                       9909 ; rs232cmd.c 2753                               }
                       9910 ; rs232cmd.c 2754                       }
002365 FE2D            9912         BR      _528
002365 FE2D00          9912         BR      _528
002368                 9913 _519:
                       9914 ; rs232cmd.c 2755                       else
                       9915 ; rs232cmd.c 2756                       {
                       9916 ; rs232cmd.c 2757                               if ( ParCnt != 1)
002368 964842rr        9918         MOV.B   ES,#SEG( _ParCnt )
00236C 9908rrrr        9919         MOV.W   R0,#SOF( _ParCnt )
002370 8200            9920         MOV.B   R0L,[R0]
002372 910401          9921         CMP.B   R0L,#01H
002375 F307            9922         BEQ     _520
                       9923 ; rs232cmd.c 2758                                       SCPIError = SyntaxErr;
002377 964842rr        9925         MOV.B   ES,#SEG( _SCPIError )
00237B 9908rrrr        9926         MOV.W   R0,#SOF( _SCPIError )
00237F BA03            9927         MOV.W   [R0],#03H
002381 FE1F            9928         BR      _528
002381 FE1F00          9928         BR      _528
002384                 9929 _520:
                       9930 ; rs232cmd.c 2759                               else
                       9931 ; rs232cmd.c 2760                               {
                       9932 ; rs232cmd.c 2761                                       output = FindParameter( Cmd, AudioOutputP
                            ar);
002384 9918rrrr        9934         MOV.W   R1,#SEG( _Cmd )
002388 9908rrrr        9935         MOV.W   R0,#SOF( _Cmd )
00238C 9938rrrr        9936         MOV.W   R3,#SEG( _AudioOutputPar )
002390 9928rrrr        9937         MOV.W   R2,#SOF( _AudioOutputPar )
002394 C51EC0          9938         CALL    _FindParameter
                       9940 ; rs232cmd.c 2762               
                       9941 ; rs232cmd.c 2763                                       if ( output > -1)
002397 9904FFFF        9943         CMP.W   R0,#0FFFFH
00239B FD0C            9944         BLE     _521
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 155

ADDR   CODE            LINE SOURCELINE
                       9945 ; rs232cmd.c 2764                                       {
                       9946 ; rs232cmd.c 2765                                               if ( SetAudioOutput( output) == F
                            AIL)
                       9948         CALL    _SetAudioOutput
00239D C4rrrrrr       +9948 ;       FCALL   _SetAudioOutput
0023A1 6900            9950         OR.W    R0,R0
0023A3 F20E            9951         BNE     _528
                       9952 ; rs232cmd.c 2766                                                       SCPIError = ExecErr;
0023A5 964842rr        9954         MOV.B   ES,#SEG( _SCPIError )
0023A9 9908rrrr        9955         MOV.W   R0,#SOF( _SCPIError )
0023AD 9A08001D        9956         MOV.W   [R0],#01DH
                       9957 ; rs232cmd.c 2767                                       }
0023B1 FE07            9959         BR      _528
0023B1 FE0700          9959         BR      _528
0023B4                 9960 _521:
                       9961 ; rs232cmd.c 2768                                       else
                       9962 ; rs232cmd.c 2769                                               SCPIError = DataOutOfRange;
0023B4 964842rr        9964         MOV.B   ES,#SEG( _SCPIError )
0023B8 9908rrrr        9965         MOV.W   R0,#SOF( _SCPIError )
0023BC 9A080021        9966         MOV.W   [R0],#021H
                       9967 ; rs232cmd.c 2770                               }
                       9968 ; rs232cmd.c 2771                       }
                       9969 ; rs232cmd.c 2772               }
0023C0                 9971 _528:
                       9972 ; rs232cmd.c 2773       }
0023C0 2F30            9974         POP.W   R4, R5
0023C2 D680            9976         RET
                       9979 ; rs232cmd.c 2774       
                       9980 ; rs232cmd.c 2775       /************************************************************************
                            **/
                       9981 ; rs232cmd.c 2776       /* AudioGenAnalog                                                        
                                                                                                                             
                                               RS232CMD.C */
                       9982 ; rs232cmd.c 2777       
                       9983 ; rs232cmd.c 2778       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                  */
                       9984 ; rs232cmd.c 2779       /* Revised:             000705                                           
                                                                                                                             
                                                                                  */
                       9985 ; rs232cmd.c 2780       
                       9986 ; rs232cmd.c 2781       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                       9987 ; rs232cmd.c 2782       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                  */
                       9988 ; rs232cmd.c 2783       /* Returns:       --                                                     
                                                                                                                             
                                                                                                          */
                       9989 ; rs232cmd.c 2784       
                       9990 ; rs232cmd.c 2785       /************************************************************************
                            **/
                       9991 ; rs232cmd.c 2786       void AudioGenAnalog( void)
                       9992 ; rs232cmd.c 2787         {
                       9993         ALIGN   1
                       9995         PUBLIC  _AudioGenAnalog
0023C4                 9996 _AudioGenAnalog:
0023C4 0F70           10000         PUSH.W  R4, R5, R6
                      10006 ; rs232cmd.c 2788         char code *str;
                      10007 ; rs232cmd.c 2789         int level;
                      10008 ; rs232cmd.c 2790       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 156

ADDR   CODE            LINE SOURCELINE
                      10009 ; rs232cmd.c 2791         if ( CmdExecute && !SCPIError)
0023C6 964842rr       10011         MOV.B   ES,#SEG( _CmdExecute )
0023CA 9908rrrr       10012         MOV.W   R0,#SOF( _CmdExecute )
0023CE 8200           10013         MOV.B   R0L,[R0]
                      10014         BEQ     _604
0023D0 F202           +10014 ;       BNE     _LG_610
0023D2 D500F6         +10014 ;       JMP.L   _604
0023D6 D500F600       +10014 ;       JMP.L   _604
0023D6                +10014 _LG_610:
0023D6 964842rr       10015         MOV.B   ES,#SEG( _SCPIError )
0023DA 9908rrrr       10016         MOV.W   R0,#SOF( _SCPIError )
0023DE 8A00           10017         MOV.W   R0,[R0]
                      10018         BNE     _604
0023E0 F302           +10018 ;       BEQ     _LG_612
0023E2 D500EE         +10018 ;       JMP.L   _604
0023E6 D500EE00       +10018 ;       JMP.L   _604
0023E6                +10018 _LG_612:
                      10019 ; rs232cmd.c 2792           {
                      10020 ; rs232cmd.c 2793           if ( !CmdRequest)
0023E6 964842rr       10022         MOV.B   ES,#SEG( _CmdRequest )
0023EA 9908rrrr       10023         MOV.W   R0,#SOF( _CmdRequest )
0023EE 8200           10024         MOV.B   R0L,[R0]
0023F0 F207           10025         BNE     _533
                      10026 ; rs232cmd.c 2794             SCPIError = SyntaxErr;
0023F2 964842rr       10028         MOV.B   ES,#SEG( _SCPIError )
0023F6 9908rrrr       10029         MOV.W   R0,#SOF( _SCPIError )
0023FA BA03           10030         MOV.W   [R0],#03H
                      10031         BR      _604
0023FC D500E1         +10031         JMP.L   _604
0023FC D500E100       +10031         JMP.L   _604
002400                10032 _533:
                      10034 ; rs232cmd.c 2795           else
                      10035 ; rs232cmd.c 2796             {
                      10036 ; rs232cmd.c 2797             if ( ParCnt)
002400 964842rr       10038         MOV.B   ES,#SEG( _ParCnt )
002404 9908rrrr       10039         MOV.W   R0,#SOF( _ParCnt )
002408 8200           10040         MOV.B   R0L,[R0]
00240A F307           10041         BEQ     _534
                      10042 ; rs232cmd.c 2798               SCPIError = ParNotAllowed;
00240C 964842rr       10044         MOV.B   ES,#SEG( _SCPIError )
002410 9908rrrr       10045         MOV.W   R0,#SOF( _SCPIError )
002414 BA06           10046         MOV.W   [R0],#06H
                      10047         BR      _604
002416 D500D4         +10047         JMP.L   _604
002416 D500D400       +10047         JMP.L   _604
00241A                10048 _534:
000000                10050 RS232CMD_IR     SEGMENT HCODE INSEGMENT ROMDATA
000000                10051         RSEG    RS232CMD_IR
                      10052         ALIGN   1
000000                10053 __swtable606:
000000 rrrrrrrrrrrrrr 10054         DW      SOF _537,SEG _537
       rrrrrrrrrrrrrr       
       rrrr                 
000004 rrrrrrrrrrrrrr 10055         DW      SOF _538,SEG _538
       rrrrrrrrrrrrrr       
       rrrr                 
000008 rrrrrrrrrrrrrr 10056         DW      SOF _539,SEG _539
       rrrrrrrrrrrrrr       
       rrrr                 
00000C rrrrrrrrrrrrrr 10057         DW      SOF _540,SEG _540
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 157

ADDR   CODE            LINE SOURCELINE
000010 rrrrrrrrrrrrrr 10058         DW      SOF _541,SEG _541
       rrrrrrrrrrrrrr       
       rrrr                 
000014 rrrrrrrrrrrrrr 10059         DW      SOF _542,SEG _542
       rrrrrrrrrrrrrr       
       rrrr                 
000018 rrrrrrrrrrrrrr 10060         DW      SOF _543,SEG _543
       rrrrrrrrrrrrrr       
       rrrr                 
00001C rrrrrrrrrrrrrr 10061         DW      SOF _544,SEG _544
       rrrrrrrrrrrrrr       
       rrrr                 
000020 rrrrrrrrrrrrrr 10062         DW      SOF _545,SEG _545
       rrrrrrrrrrrrrr       
       rrrr                 
000024 rrrrrrrrrrrrrr 10063         DW      SOF _546,SEG _546
       rrrrrrrrrrrrrr       
       rrrr                 
000028 rrrrrrrrrrrrrr 10064         DW      SOF _547,SEG _547
       rrrrrrrrrrrrrr       
       rrrr                 
00002C rrrrrrrrrrrrrr 10065         DW      SOF _548,SEG _548
       rrrrrrrrrrrrrr       
       rrrr                 
000030 rrrrrrrrrrrrrr 10066         DW      SOF _549,SEG _549
       rrrrrrrrrrrrrr       
       rrrr                 
000034 rrrrrrrrrrrrrr 10067         DW      SOF _550,SEG _550
       rrrrrrrrrrrrrr       
       rrrr                 
000038 rrrrrrrrrrrrrr 10068         DW      SOF _551,SEG _551
       rrrrrrrrrrrrrr       
       rrrr                 
00003C rrrrrrrrrrrrrr 10069         DW      SOF _552,SEG _552
       rrrrrrrrrrrrrr       
       rrrr                 
000040 rrrrrrrrrrrrrr 10070         DW      SOF _553,SEG _553
       rrrrrrrrrrrrrr       
       rrrr                 
000044 rrrrrrrrrrrrrr 10071         DW      SOF _554,SEG _554
       rrrrrrrrrrrrrr       
       rrrr                 
000048 rrrrrrrrrrrrrr 10072         DW      SOF _555,SEG _555
       rrrrrrrrrrrrrr       
       rrrr                 
00004C rrrrrrrrrrrrrr 10073         DW      SOF _556,SEG _556
       rrrrrrrrrrrrrr       
       rrrr                 
000050 rrrrrrrrrrrrrr 10074         DW      SOF _557,SEG _557
       rrrrrrrrrrrrrr       
       rrrr                 
000054 rrrrrrrrrrrrrr 10075         DW      SOF _558,SEG _558
       rrrrrrrrrrrrrr       
       rrrr                 
000058 rrrrrrrrrrrrrr 10076         DW      SOF _559,SEG _559
       rrrrrrrrrrrrrr       
       rrrr                 
00005C rrrrrrrrrrrrrr 10077         DW      SOF _560,SEG _560
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 158

ADDR   CODE            LINE SOURCELINE
000060 rrrrrrrrrrrrrr 10078         DW      SOF _561,SEG _561
       rrrrrrrrrrrrrr       
       rrrr                 
000064 rrrrrrrrrrrrrr 10079         DW      SOF _562,SEG _562
       rrrrrrrrrrrrrr       
       rrrr                 
000068 rrrrrrrrrrrrrr 10080         DW      SOF _563,SEG _563
       rrrrrrrrrrrrrr       
       rrrr                 
00006C rrrrrrrrrrrrrr 10081         DW      SOF _564,SEG _564
       rrrrrrrrrrrrrr       
       rrrr                 
000070 rrrrrrrrrrrrrr 10082         DW      SOF _565,SEG _565
       rrrrrrrrrrrrrr       
       rrrr                 
000074 rrrrrrrrrrrrrr 10083         DW      SOF _566,SEG _566
       rrrrrrrrrrrrrr       
       rrrr                 
00241A                10084         RSEG    RS232CMD_PR
                      10086 ; rs232cmd.c 2799             else
                      10087 ; rs232cmd.c 2800               {
                      10088 ; rs232cmd.c 2801               str = AudioSignalPar[AudioSetup[AnalogAudio].Signal].LongName;
00241A 964842rr       10090         MOV.B   ES,#SEG( _AudioSetup+2 )
00241E 9908rrrr       10091         MOV.W   R0,#SOF( _AudioSetup+2 )
002422 8A00           10092         MOV.W   R0,[R0]
002424 E900000C       10093         MULU.W  R0,#0CH
002428 8920           10094         MOV.W   R2,R0
00242A B930           10095         MOVS.W  R3,#00H
00242C 9918rrrr       10096         MOV.W   R1,#SEG( _AudioSignalPar )
002430 9908rrrr       10097         MOV.W   R0,#SOF( _AudioSignalPar )
002434 0902           10098         ADD.W   R0,R2
002436 1913           10099         ADDC.W  R1,R3
002438 862C43         10100         MOV.B   CS,R1L
00243B 8820           10101         MOVC.W  R2,[R0+]
00243D 99040000       10102         CMP.W   R0,#00H
002441 F202           10103         BNE     _605
002443 A64143         10104         ADDS.B  CS,#01H
002443 A64143         10104         ADDS.B  CS,#01H
002446                10105 _605:
002446 8830           10106         MOVC.W  R3,[R0+]
002448 8953           10107         MOV.W   R5,R3
00244A 8942           10108         MOV.W   R4,R2
                      10110 ; rs232cmd.c 2802               while ( *str)
00244C 866C43         10112         MOV.B   CS,R3L
00244F 8062           10113         MOVC.B  R3L,[R2+]
002451 F312           10114         BEQ     _536
002451 F31200         10114         BEQ     _536
002454                10115 _535:
                      10116 ; rs232cmd.c 2803                  rs232putchar( *str++);
002454 8915           10118         MOV.W   R1,R5
002456 8904           10119         MOV.W   R0,R4
002458 862C43         10120         MOV.B   CS,R1L
00245B 8020           10121         MOVC.B  R1L,[R0+]
00245D 8102           10122         MOV.B   R0L,R1L
                      10123         CALL    _rs232putchar
00245F C4rrrrrr       +10123 ;       FCALL   _rs232putchar
002463 99400001       10124         ADD.W   R4,#01H
002467 99510000       10125         ADDC.W  R5,#00H
00246B 8915           10129         MOV.W   R1,R5
00246D 8904           10130         MOV.W   R0,R4
00246F 862C43         10131         MOV.B   CS,R1L
002472 8020           10132         MOVC.B  R1L,[R0+]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 159

ADDR   CODE            LINE SOURCELINE
002474 F2EF           10133         BNE     _535
002476                10135 _536:
                      10136 ; rs232cmd.c 2804               rs232putchar(',');
002476 91082C         10138         MOV.B   R0L,#02CH
                      10139         CALL    _rs232putchar
002479 C4rrrrrr       +10139 ;       FCALL   _rs232putchar
                      10140 ; rs232cmd.c 2805               str = NULL;
00247D B950           10142         MOV.W   R5,#00H
00247F B940           10143         MOV.W   R4,#00H
                      10146 ; rs232cmd.c 2806       
                      10147 ; rs232cmd.c 2807               switch ( AudioSetup[AnalogAudio].Level)
002481 964842rr       10149         MOV.B   ES,#SEG( _AudioSetup+4 )
002485 9908rrrr       10150         MOV.W   R0,#SOF( _AudioSetup+4 )
002489 8A00           10151         MOV.W   R0,[R0]
00248B A90F           10152         ADDS.W  R0,#0FH
00248D 9904001D       10153         CMP.W   R0,#01DH
002491 F85D           10154         BG      _567
002493 D902           10155         ASL.W   R0,#02H
002495 964843rr       10156         MOV.B   CS,#SEG( __swtable606 )
002499 9900rrrr       10157         ADD.W   R0,#SOF( __swtable606 )
00249D 8810           10158         MOVC.W  R1,[R0+]
00249F 0F02           10159         PUSH.W  R1
0024A1 8810           10160         MOVC.W  R1,[R0+]
0024A3 0F02           10161         PUSH.W  R1
0024A5 D680           10162         RET
                      10163 ; rs232cmd.c 2808                 {
                      10164 ; rs232cmd.c 2809                 case P10dBm:
0024A8                10166 _537:
                      10167 ; rs232cmd.c 2810                   level = 10;
0024A8 9968000A       10169         MOV.W   R6,#0AH
                      10172 ; rs232cmd.c 2811                   break;
0024AC FE6E           10174         BR      _599
                      10175 ; rs232cmd.c 2812                 case P8dBm:
0024AE                10177 _538:
                      10178 ; rs232cmd.c 2813                   level = 8;
0024AE 99680008       10180         MOV.W   R6,#08H
                      10183 ; rs232cmd.c 2814                   break;
0024B2 FE6B           10185         BR      _599
                      10186 ; rs232cmd.c 2815                 case P7dBm:
0024B4                10188 _539:
                      10189 ; rs232cmd.c 2816                   level = 7;
0024B4 B967           10191         MOV.W   R6,#07H
                      10194 ; rs232cmd.c 2817                   break;
0024B6 FE69           10196         BR      _599
                      10197 ; rs232cmd.c 2818                 case P6dBm:
0024B8                10199 _540:
                      10200 ; rs232cmd.c 2819                   level = 6;
0024B8 B966           10202         MOV.W   R6,#06H
                      10205 ; rs232cmd.c 2820                   break;
0024BA FE67           10207         BR      _599
                      10208 ; rs232cmd.c 2821                 case P5dBm:
0024BC                10210 _541:
                      10211 ; rs232cmd.c 2822                   level = 5;
0024BC B965           10213         MOV.W   R6,#05H
                      10216 ; rs232cmd.c 2823                   break;
0024BE FE65           10218         BR      _599
                      10219 ; rs232cmd.c 2824                 case P4dBm:
0024C0                10221 _542:
                      10222 ; rs232cmd.c 2825                   level = 4;
0024C0 B964           10224         MOV.W   R6,#04H
                      10227 ; rs232cmd.c 2826                   break;
0024C2 FE63           10229         BR      _599
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 160

ADDR   CODE            LINE SOURCELINE
                      10230 ; rs232cmd.c 2827                 case P3dBm:
0024C4                10232 _543:
                      10233 ; rs232cmd.c 2828                   level = 3;
0024C4 B963           10235         MOV.W   R6,#03H
                      10238 ; rs232cmd.c 2829                   break;
0024C6 FE61           10240         BR      _599
                      10241 ; rs232cmd.c 2830                 case P2dBm:
0024C8                10243 _544:
                      10244 ; rs232cmd.c 2831                   level = 2;
0024C8 B962           10246         MOV.W   R6,#02H
                      10249 ; rs232cmd.c 2832                   break;
0024CA FE5F           10251         BR      _599
                      10252 ; rs232cmd.c 2833                 case P1dBm:
0024CC                10254 _545:
                      10255 ; rs232cmd.c 2834                   level = 1;
0024CC B961           10257         MOV.W   R6,#01H
                      10260 ; rs232cmd.c 2835                   break;
0024CE FE5D           10262         BR      _599
                      10263 ; rs232cmd.c 2836                 case M0dBm:
0024D0                10265 _546:
                      10266 ; rs232cmd.c 2837                   level = 0;
0024D0 B960           10268         MOV.W   R6,#00H
                      10271 ; rs232cmd.c 2838                   break;
0024D2 FE5B           10273         BR      _599
                      10274 ; rs232cmd.c 2839                 case M1dBm:
0024D4                10276 _547:
                      10277 ; rs232cmd.c 2840                   level = -1;
0024D4 9968FFFF       10279         MOV.W   R6,#0FFFFH
                      10282 ; rs232cmd.c 2841                   break;
0024D8 FE58           10284         BR      _599
                      10285 ; rs232cmd.c 2842                 case M2dBm:
0024DA                10287 _548:
                      10288 ; rs232cmd.c 2843                   level = -2;
0024DA 9968FFFE       10290         MOV.W   R6,#0FFFEH
                      10293 ; rs232cmd.c 2844                   break;
0024DE FE55           10295         BR      _599
                      10296 ; rs232cmd.c 2845                 case M3dBm:
0024E0                10298 _549:
                      10299 ; rs232cmd.c 2846                   level = -3;
0024E0 9968FFFD       10301         MOV.W   R6,#0FFFDH
                      10304 ; rs232cmd.c 2847                   break;
0024E4 FE52           10306         BR      _599
                      10307 ; rs232cmd.c 2848                 case M4dBm:
0024E6                10309 _550:
                      10310 ; rs232cmd.c 2849                   level = -4;
0024E6 9968FFFC       10312         MOV.W   R6,#0FFFCH
                      10315 ; rs232cmd.c 2850                   break;
0024EA FE4F           10317         BR      _599
                      10318 ; rs232cmd.c 2851                 case M5dBm:
0024EC                10320 _551:
                      10321 ; rs232cmd.c 2852                   level = -5;
0024EC 9968FFFB       10323         MOV.W   R6,#0FFFBH
                      10326 ; rs232cmd.c 2853                   break;
0024F0 FE4C           10328         BR      _599
                      10329 ; rs232cmd.c 2854                 case M6dBm:
0024F2                10331 _552:
                      10332 ; rs232cmd.c 2855                   level = -6;
0024F2 9968FFFA       10334         MOV.W   R6,#0FFFAH
                      10337 ; rs232cmd.c 2856                   break;
0024F6 FE49           10339         BR      _599
                      10340 ; rs232cmd.c 2857                 case M7dBm:
0024F8                10342 _553:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 161

ADDR   CODE            LINE SOURCELINE
                      10343 ; rs232cmd.c 2858                   level = -7;
0024F8 9968FFF9       10345         MOV.W   R6,#0FFF9H
                      10348 ; rs232cmd.c 2859                   break;
0024FC FE46           10350         BR      _599
                      10351 ; rs232cmd.c 2860                 case M8dBm:
0024FE                10353 _554:
                      10354 ; rs232cmd.c 2861                   level = -8;
0024FE 9968FFF8       10356         MOV.W   R6,#0FFF8H
                      10359 ; rs232cmd.c 2862                   break;
002502 FE43           10361         BR      _599
                      10362 ; rs232cmd.c 2863                 case M9dBm:
002504                10364 _555:
                      10365 ; rs232cmd.c 2864                   level = -9;
002504 9968FFF7       10367         MOV.W   R6,#0FFF7H
                      10370 ; rs232cmd.c 2865                   break;
002508 FE40           10372         BR      _599
                      10373 ; rs232cmd.c 2866                 case M10dBm:
00250A                10375 _556:
                      10376 ; rs232cmd.c 2867                   level = -10;
00250A 9968FFF6       10378         MOV.W   R6,#0FFF6H
                      10381 ; rs232cmd.c 2868                   break;
00250E FE3D           10383         BR      _599
                      10384 ; rs232cmd.c 2869                 case M11dBm:
002510                10386 _557:
                      10387 ; rs232cmd.c 2870                   level = -11;
002510 9968FFF5       10389         MOV.W   R6,#0FFF5H
                      10392 ; rs232cmd.c 2871                   break;
002514 FE3A           10394         BR      _599
                      10395 ; rs232cmd.c 2872                 case M12dBm:
002516                10397 _558:
                      10398 ; rs232cmd.c 2873                   level = -12;
002516 9968FFF4       10400         MOV.W   R6,#0FFF4H
                      10403 ; rs232cmd.c 2874                   break;
00251A FE37           10405         BR      _599
                      10406 ; rs232cmd.c 2875                 case M15dBm:
00251C                10408 _559:
                      10409 ; rs232cmd.c 2876                   level = -15;
00251C 9968FFF1       10411         MOV.W   R6,#0FFF1H
                      10414 ; rs232cmd.c 2877                   break;
002520 FE34           10416         BR      _599
                      10417 ; rs232cmd.c 2878                 case M18dBm:
002522                10419 _560:
                      10420 ; rs232cmd.c 2879                   level = -18;
002522 9968FFEE       10422         MOV.W   R6,#0FFEEH
                      10425 ; rs232cmd.c 2880                   break;
002526 FE31           10427         BR      _599
                      10428 ; rs232cmd.c 2881                 case M20dBm:
002528                10430 _561:
                      10431 ; rs232cmd.c 2882                   level = -20;
002528 9968FFEC       10433         MOV.W   R6,#0FFECH
                      10436 ; rs232cmd.c 2883                   break;
00252C FE2E           10438         BR      _599
                      10439 ; rs232cmd.c 2884                 case M24dBm:
00252E                10441 _562:
                      10442 ; rs232cmd.c 2885                   level = -24;
00252E 9968FFE8       10444         MOV.W   R6,#0FFE8H
                      10447 ; rs232cmd.c 2886                   break;
002532 FE2B           10449         BR      _599
                      10450 ; rs232cmd.c 2887                 case M27dBm:
002534                10452 _563:
                      10453 ; rs232cmd.c 2888                   level = -27;
002534 9968FFE5       10455         MOV.W   R6,#0FFE5H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 162

ADDR   CODE            LINE SOURCELINE
                      10458 ; rs232cmd.c 2889                   break;
002538 FE28           10460         BR      _599
                      10461 ; rs232cmd.c 2890                 case M30dBm:
00253A                10463 _564:
                      10464 ; rs232cmd.c 2891                   level = -30;
00253A 9968FFE2       10466         MOV.W   R6,#0FFE2H
                      10469 ; rs232cmd.c 2892                   break;
00253E FE25           10471         BR      _599
                      10472 ; rs232cmd.c 2893                 case M33dBm:
002540                10474 _565:
                      10475 ; rs232cmd.c 2894                   level = -33;
002540 9968FFDF       10477         MOV.W   R6,#0FFDFH
                      10480 ; rs232cmd.c 2895                   break;
002544 FE22           10482         BR      _599
                      10483 ; rs232cmd.c 2896                 case M36dBm:
002546                10485 _566:
                      10486 ; rs232cmd.c 2897                   level = -36;
002546 9968FFDC       10488         MOV.W   R6,#0FFDCH
                      10491 ; rs232cmd.c 2898                   break;
00254A FE1F           10493         BR      _599
                      10494 ; rs232cmd.c 2899                 default:
00254C                10496 _567:
                      10497 ; rs232cmd.c 2900                   str = SILENCEParTxt;
00254C 9958rrrr       10499         MOV.W   R5,#SEG( _SILENCEParTxt )
002550 9948rrrr       10500         MOV.W   R4,#SOF( _SILENCEParTxt )
                      10503 ; rs232cmd.c 2901                   while ( *str)
002554 8915           10505         MOV.W   R1,R5
002556 8904           10506         MOV.W   R0,R4
002558 862C43         10507         MOV.B   CS,R1L
00255B 8020           10508         MOVC.B  R1L,[R0+]
00255D F312           10509         BEQ     _569
00255D F31200         10509         BEQ     _569
002560                10510 _568:
                      10511 ; rs232cmd.c 2902                     rs232putchar( *str++);
002560 8915           10513         MOV.W   R1,R5
002562 8904           10514         MOV.W   R0,R4
002564 862C43         10515         MOV.B   CS,R1L
002567 8020           10516         MOVC.B  R1L,[R0+]
002569 8102           10517         MOV.B   R0L,R1L
                      10518         CALL    _rs232putchar
00256B C4rrrrrr       +10518 ;       FCALL   _rs232putchar
00256F 99400001       10519         ADD.W   R4,#01H
002573 99510000       10520         ADDC.W  R5,#00H
002577 8915           10524         MOV.W   R1,R5
002579 8904           10525         MOV.W   R0,R4
00257B 862C43         10526         MOV.B   CS,R1L
00257E 8020           10527         MOVC.B  R1L,[R0+]
002580 F2EF           10528         BNE     _568
002582                10530 _569:
                      10531 ; rs232cmd.c 2903                   rs232putchar(',');
002582 91082C         10533         MOV.B   R0L,#02CH
                      10534         CALL    _rs232putchar
002585 C4rrrrrr       +10534 ;       FCALL   _rs232putchar
                      10535 ; rs232cmd.c 2904                   break;
                      10536 ; rs232cmd.c 2905                 } // switch
00258A                10538 _599:
                      10539 ; rs232cmd.c 2906               if ( str == NULL)
00258A 6954           10541         OR.W    R5,R4
00258C F20A           10542         BNE     _600
                      10543 ; rs232cmd.c 2907                 rs232printf( 6, "%d,", level);
00258E B906           10545         MOV.W   R0,#06H
002590 0F40           10546         PUSH.W  R6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 163

ADDR   CODE            LINE SOURCELINE
002592 9938rrrr       10549         MOV.W   R3,#SEG( _532 )
002596 9928rrrr       10550         MOV.W   R2,#SOF( _532 )
00259A 0F0C           10551         PUSH.W  R2, R3
                      10553         CALL    _rs232printf
00259C C4rrrrrr       +10553 ;       FCALL   _rs232printf
0025A0 A976           10554         ADDS.W  R7,#06H
0025A2                10556 _600:
                      10557 ; rs232cmd.c 2908               rs232printf( 6, "%d\n", AudioSetup[AnalogAudio].Click);          
                                   
0025A2 B906           10559         MOV.W   R0,#06H
0025A4 964842rr       10560         MOV.B   ES,#SEG( _AudioSetup+12 )
0025A8 9918rrrr       10561         MOV.W   R1,#SOF( _AudioSetup+12 )
0025AC 8A11           10562         MOV.W   R1,[R1]
0025AE 0F02           10563         PUSH.W  R1
0025B0 9938rrrr       10565         MOV.W   R3,#SEG( _9 )
0025B4 9928rrrr       10566         MOV.W   R2,#SOF( _9 )
0025B8 0F0C           10567         PUSH.W  R2, R3
                      10569         CALL    _rs232printf
0025BA C4rrrrrr       +10569 ;       FCALL   _rs232printf
0025BE A976           10570         ADDS.W  R7,#06H
                      10572 ; rs232cmd.c 2909               }
                      10573 ; rs232cmd.c 2910             }
                      10574 ; rs232cmd.c 2911           }
0025C0                10576 _604:
                      10577 ; rs232cmd.c 2912         }
0025C0 2F70           10579         POP.W   R4, R5, R6
0025C2 D680           10581         RET
                      10584 ; rs232cmd.c 2913       
                      10585 ; rs232cmd.c 2914       /************************************************************************
                            **/
                      10586 ; rs232cmd.c 2915       /* AudioGenAnalogSignal                                                  
                                                                                                                        RS232
                            CMD.C */
                      10587 ; rs232cmd.c 2916       
                      10588 ; rs232cmd.c 2917       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      10589 ; rs232cmd.c 2918       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      10590 ; rs232cmd.c 2919       
                      10591 ; rs232cmd.c 2920       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      10592 ; rs232cmd.c 2921       
                      10593 ; rs232cmd.c 2922       
                      10594 ; rs232cmd.c 2923       
                      10595 ; rs232cmd.c 2924       /************************************************************************
                            **/
                      10596 ; rs232cmd.c 2925       void AudioGenAnalogSignal( void)
                      10597 ; rs232cmd.c 2926       {
                      10598         ALIGN   1
                      10600         PUBLIC  _AudioGenAnalogSignal
0025C4                10601 _AudioGenAnalogSignal:
0025C4 0F30           10605         PUSH.W  R4, R5
                      10611 ; rs232cmd.c 2927               int signal;
                      10612 ; rs232cmd.c 2928               char code *str;
                      10613 ; rs232cmd.c 2929       
                      10614 ; rs232cmd.c 2930               if ( CmdExecute && !SCPIError)
0025C6 964842rr       10616         MOV.B   ES,#SEG( _CmdExecute )
0025CA 9908rrrr       10617         MOV.W   R0,#SOF( _CmdExecute )
0025CE 8200           10618         MOV.B   R0L,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 164

ADDR   CODE            LINE SOURCELINE
0025D0 F379           10619         BEQ     _619
0025D2 964842rr       10620         MOV.B   ES,#SEG( _SCPIError )
0025D6 9908rrrr       10621         MOV.W   R0,#SOF( _SCPIError )
0025DA 8A00           10622         MOV.W   R0,[R0]
0025DC F273           10623         BNE     _619
                      10624 ; rs232cmd.c 2931               {
                      10625 ; rs232cmd.c 2932                       if ( CmdRequest)
0025DE 964842rr       10627         MOV.B   ES,#SEG( _CmdRequest )
0025E2 9908rrrr       10628         MOV.W   R0,#SOF( _CmdRequest )
0025E6 8200           10629         MOV.B   R0L,[R0]
0025E8 F33F           10630         BEQ     _610
                      10631 ; rs232cmd.c 2933                       {
                      10632 ; rs232cmd.c 2934                               if ( ParCnt)
0025EA 964842rr       10634         MOV.B   ES,#SEG( _ParCnt )
0025EE 9908rrrr       10635         MOV.W   R0,#SOF( _ParCnt )
0025F2 8200           10636         MOV.B   R0L,[R0]
0025F4 F306           10637         BEQ     _607
                      10638 ; rs232cmd.c 2935                                       SCPIError = ParNotAllowed;
0025F6 964842rr       10640         MOV.B   ES,#SEG( _SCPIError )
0025FA 9908rrrr       10641         MOV.W   R0,#SOF( _SCPIError )
0025FE BA06           10642         MOV.W   [R0],#06H
002600 FE61           10643         BR      _619
002600 FE61           10643         BR      _619
002602                10644 _607:
                      10645 ; rs232cmd.c 2936                               else
                      10646 ; rs232cmd.c 2937                               {
                      10647 ; rs232cmd.c 2938                                       str = AudioSignalPar[AudioSetup[AnalogAud
                            io].Signal].LongName;
002602 964842rr       10649         MOV.B   ES,#SEG( _AudioSetup+2 )
002606 9908rrrr       10650         MOV.W   R0,#SOF( _AudioSetup+2 )
00260A 8A00           10651         MOV.W   R0,[R0]
00260C E900000C       10652         MULU.W  R0,#0CH
002610 8920           10653         MOV.W   R2,R0
002612 B930           10654         MOVS.W  R3,#00H
002614 9918rrrr       10655         MOV.W   R1,#SEG( _AudioSignalPar )
002618 9908rrrr       10656         MOV.W   R0,#SOF( _AudioSignalPar )
00261C 0902           10657         ADD.W   R0,R2
00261E 1913           10658         ADDC.W  R1,R3
002620 862C43         10659         MOV.B   CS,R1L
002623 8820           10660         MOVC.W  R2,[R0+]
002625 99040000       10661         CMP.W   R0,#00H
002629 F202           10662         BNE     _620
00262B A64143         10663         ADDS.B  CS,#01H
00262B A64143         10663         ADDS.B  CS,#01H
00262E                10664 _620:
00262E 8830           10665         MOVC.W  R3,[R0+]
002630 8953           10666         MOV.W   R5,R3
002632 8942           10667         MOV.W   R4,R2
                      10669 ; rs232cmd.c 2939       
                      10670 ; rs232cmd.c 2940                                       while ( *str)
002634 866C43         10672         MOV.B   CS,R3L
002637 8062           10673         MOVC.B  R3L,[R2+]
002639 F312           10674         BEQ     _609
002639 F31200         10674         BEQ     _609
00263C                10675 _608:
                      10676 ; rs232cmd.c 2941                                               rs232putchar( *str++);
00263C 8915           10678         MOV.W   R1,R5
00263E 8904           10679         MOV.W   R0,R4
002640 862C43         10680         MOV.B   CS,R1L
002643 8020           10681         MOVC.B  R1L,[R0+]
002645 8102           10682         MOV.B   R0L,R1L
                      10683         CALL    _rs232putchar
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 165

ADDR   CODE            LINE SOURCELINE
002647 C4rrrrrr       +10683 ;       FCALL   _rs232putchar
00264B 99400001       10684         ADD.W   R4,#01H
00264F 99510000       10685         ADDC.W  R5,#00H
002653 8915           10689         MOV.W   R1,R5
002655 8904           10690         MOV.W   R0,R4
002657 862C43         10691         MOV.B   CS,R1L
00265A 8020           10692         MOVC.B  R1L,[R0+]
00265C F2EF           10693         BNE     _608
00265E                10695 _609:
                      10696 ; rs232cmd.c 2942       
                      10697 ; rs232cmd.c 2943                                       rs232putchar('\n');
00265E 91080A         10699         MOV.B   R0L,#0AH
                      10700         CALL    _rs232putchar
002661 C4rrrrrr       +10700 ;       FCALL   _rs232putchar
                      10701 ; rs232cmd.c 2944                               }
                      10702 ; rs232cmd.c 2945                       }
002665 FE2F           10704         BR      _619
002665 FE2F00         10704         BR      _619
002668                10705 _610:
                      10706 ; rs232cmd.c 2946                       else
                      10707 ; rs232cmd.c 2947                       {
                      10708 ; rs232cmd.c 2948                               if ( ParCnt != 1)
002668 964842rr       10710         MOV.B   ES,#SEG( _ParCnt )
00266C 9908rrrr       10711         MOV.W   R0,#SOF( _ParCnt )
002670 8200           10712         MOV.B   R0L,[R0]
002672 910401         10713         CMP.B   R0L,#01H
002675 F307           10714         BEQ     _611
                      10715 ; rs232cmd.c 2949                                       SCPIError = SyntaxErr;
002677 964842rr       10717         MOV.B   ES,#SEG( _SCPIError )
00267B 9908rrrr       10718         MOV.W   R0,#SOF( _SCPIError )
00267F BA03           10719         MOV.W   [R0],#03H
002681 FE21           10720         BR      _619
002681 FE2100         10720         BR      _619
002684                10721 _611:
                      10722 ; rs232cmd.c 2950                               else
                      10723 ; rs232cmd.c 2951                               {
                      10724 ; rs232cmd.c 2952                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002684 9918rrrr       10726         MOV.W   R1,#SEG( _Cmd )
002688 9908rrrr       10727         MOV.W   R0,#SOF( _Cmd )
00268C 9938rrrr       10728         MOV.W   R3,#SEG( _AudioSignalPar )
002690 9928rrrr       10729         MOV.W   R2,#SOF( _AudioSignalPar )
002694 C51D40         10730         CALL    _FindParameter
                      10732 ; rs232cmd.c 2953               
                      10733 ; rs232cmd.c 2954                                       if ( signal > -1)
002697 8910           10735         MOV.W   R1,R0
002699 9914FFFF       10736         CMP.W   R1,#0FFFFH
00269D FD0D           10739         BLE     _612
                      10740 ; rs232cmd.c 2955                                       {
                      10741 ; rs232cmd.c 2956                                               if ( SetAudioSignal( AnalogAudio,
                             signal) == FAIL)
00269F B900           10743         MOV.W   R0,#00H
                      10744         CALL    _SetAudioSignal
0026A1 C4rrrrrr       +10744 ;       FCALL   _SetAudioSignal
0026A5 6900           10746         OR.W    R0,R0
0026A7 F20E           10747         BNE     _619
                      10748 ; rs232cmd.c 2957                                                               SCPIError = ExecE
                            rr;
0026A9 964842rr       10750         MOV.B   ES,#SEG( _SCPIError )
0026AD 9908rrrr       10751         MOV.W   R0,#SOF( _SCPIError )
0026B1 9A08001D       10752         MOV.W   [R0],#01DH
                      10753 ; rs232cmd.c 2958                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 166

ADDR   CODE            LINE SOURCELINE
0026B5 FE07           10755         BR      _619
0026B5 FE0700         10755         BR      _619
0026B8                10756 _612:
                      10757 ; rs232cmd.c 2959                                       else
                      10758 ; rs232cmd.c 2960                                               SCPIError = DataOutOfRange;
0026B8 964842rr       10760         MOV.B   ES,#SEG( _SCPIError )
0026BC 9908rrrr       10761         MOV.W   R0,#SOF( _SCPIError )
0026C0 9A080021       10762         MOV.W   [R0],#021H
                      10763 ; rs232cmd.c 2961                               }
                      10764 ; rs232cmd.c 2962                       }
                      10765 ; rs232cmd.c 2963               }
0026C4                10767 _619:
                      10768 ; rs232cmd.c 2964       }
0026C4 2F30           10770         POP.W   R4, R5
0026C6 D680           10772         RET
                      10775 ; rs232cmd.c 2965       
                      10776 ; rs232cmd.c 2966       /************************************************************************
                            **/
                      10777 ; rs232cmd.c 2967       /* AudioGenAnalogLevel                                                   
                                                                                                                        RS232
                            CMD.C */
                      10778 ; rs232cmd.c 2968       
                      10779 ; rs232cmd.c 2969       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      10780 ; rs232cmd.c 2970       /* Revised:             000705                                           
                                                                                                                             
                                                                                  */
                      10781 ; rs232cmd.c 2971       
                      10782 ; rs232cmd.c 2972       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      10783 ; rs232cmd.c 2973       
                      10784 ; rs232cmd.c 2974       
                      10785 ; rs232cmd.c 2975       
                      10786 ; rs232cmd.c 2976       /************************************************************************
                            **/
                      10787 ; rs232cmd.c 2977       void AudioGenAnalogLevel( void)
                      10788 ; rs232cmd.c 2978       {
                      10789         ALIGN   1
                      10791         PUBLIC  _AudioGenAnalogLevel
0026C8                10792 _AudioGenAnalogLevel:
000078                10796         RSEG    RS232CMD_IR
                      10797         ALIGN   1
000078                10798 __swtable761:
000078 rrrrrrrrrrrrrr 10799         DW      SOF _656,SEG _656
       rrrrrrrrrrrrrr       
       rrrr                 
00007C rrrrrrrrrrrrrr 10800         DW      SOF _624,SEG _624
       rrrrrrrrrrrrrr       
       rrrr                 
000080 rrrrrrrrrrrrrr 10801         DW      SOF _625,SEG _625
       rrrrrrrrrrrrrr       
       rrrr                 
000084 rrrrrrrrrrrrrr 10802         DW      SOF _626,SEG _626
       rrrrrrrrrrrrrr       
       rrrr                 
000088 rrrrrrrrrrrrrr 10803         DW      SOF _627,SEG _627
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 167

ADDR   CODE            LINE SOURCELINE
00008C rrrrrrrrrrrrrr 10804         DW      SOF _628,SEG _628
       rrrrrrrrrrrrrr       
       rrrr                 
000090 rrrrrrrrrrrrrr 10805         DW      SOF _629,SEG _629
       rrrrrrrrrrrrrr       
       rrrr                 
000094 rrrrrrrrrrrrrr 10806         DW      SOF _630,SEG _630
       rrrrrrrrrrrrrr       
       rrrr                 
000098 rrrrrrrrrrrrrr 10807         DW      SOF _631,SEG _631
       rrrrrrrrrrrrrr       
       rrrr                 
00009C rrrrrrrrrrrrrr 10808         DW      SOF _632,SEG _632
       rrrrrrrrrrrrrr       
       rrrr                 
0000A0 rrrrrrrrrrrrrr 10809         DW      SOF _633,SEG _633
       rrrrrrrrrrrrrr       
       rrrr                 
0000A4 rrrrrrrrrrrrrr 10810         DW      SOF _634,SEG _634
       rrrrrrrrrrrrrr       
       rrrr                 
0000A8 rrrrrrrrrrrrrr 10811         DW      SOF _635,SEG _635
       rrrrrrrrrrrrrr       
       rrrr                 
0000AC rrrrrrrrrrrrrr 10812         DW      SOF _636,SEG _636
       rrrrrrrrrrrrrr       
       rrrr                 
0000B0 rrrrrrrrrrrrrr 10813         DW      SOF _637,SEG _637
       rrrrrrrrrrrrrr       
       rrrr                 
0000B4 rrrrrrrrrrrrrr 10814         DW      SOF _638,SEG _638
       rrrrrrrrrrrrrr       
       rrrr                 
0000B8 rrrrrrrrrrrrrr 10815         DW      SOF _639,SEG _639
       rrrrrrrrrrrrrr       
       rrrr                 
0000BC rrrrrrrrrrrrrr 10816         DW      SOF _640,SEG _640
       rrrrrrrrrrrrrr       
       rrrr                 
0000C0 rrrrrrrrrrrrrr 10817         DW      SOF _641,SEG _641
       rrrrrrrrrrrrrr       
       rrrr                 
0000C4 rrrrrrrrrrrrrr 10818         DW      SOF _642,SEG _642
       rrrrrrrrrrrrrr       
       rrrr                 
0000C8 rrrrrrrrrrrrrr 10819         DW      SOF _643,SEG _643
       rrrrrrrrrrrrrr       
       rrrr                 
0000CC rrrrrrrrrrrrrr 10820         DW      SOF _644,SEG _644
       rrrrrrrrrrrrrr       
       rrrr                 
0000D0 rrrrrrrrrrrrrr 10821         DW      SOF _645,SEG _645
       rrrrrrrrrrrrrr       
       rrrr                 
0000D4 rrrrrrrrrrrrrr 10822         DW      SOF _646,SEG _646
       rrrrrrrrrrrrrr       
       rrrr                 
0000D8 rrrrrrrrrrrrrr 10823         DW      SOF _647,SEG _647
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 168

ADDR   CODE            LINE SOURCELINE
0000DC rrrrrrrrrrrrrr 10824         DW      SOF _648,SEG _648
       rrrrrrrrrrrrrr       
       rrrr                 
0000E0 rrrrrrrrrrrrrr 10825         DW      SOF _649,SEG _649
       rrrrrrrrrrrrrr       
       rrrr                 
0000E4 rrrrrrrrrrrrrr 10826         DW      SOF _650,SEG _650
       rrrrrrrrrrrrrr       
       rrrr                 
0000E8 rrrrrrrrrrrrrr 10827         DW      SOF _651,SEG _651
       rrrrrrrrrrrrrr       
       rrrr                 
0000EC rrrrrrrrrrrrrr 10828         DW      SOF _652,SEG _652
       rrrrrrrrrrrrrr       
       rrrr                 
0026C8                10829         RSEG    RS232CMD_PR
0026C8 0F30           10830         PUSH.W  R4, R5
0026CA A97E           10832         ADDS.W  R7,#0EH
                      10837 ; rs232cmd.c 2979               code char *str;
                      10838 ; rs232cmd.c 2980               int level;
                      10839 ; rs232cmd.c 2981       
                      10840 ; rs232cmd.c 2982               if ( CmdExecute && !SCPIError)
0026CC 964842rr       10842         MOV.B   ES,#SEG( _CmdExecute )
0026D0 9908rrrr       10843         MOV.W   R0,#SOF( _CmdExecute )
0026D4 8200           10844         MOV.B   R0L,[R0]
                      10845         BEQ     _760
0026D6 F202           +10845 ;       BNE     _LG_652
0026D8 D50165         +10845 ;       JMP.L   _760
0026DC D5016500       +10845 ;       JMP.L   _760
0026DC                +10845 _LG_652:
0026DC 964842rr       10846         MOV.B   ES,#SEG( _SCPIError )
0026E0 9908rrrr       10847         MOV.W   R0,#SOF( _SCPIError )
0026E4 8A00           10848         MOV.W   R0,[R0]
                      10849         BNE     _760
0026E6 F302           +10849 ;       BEQ     _LG_654
0026E8 D5015D         +10849 ;       JMP.L   _760
0026EC D5015D00       +10849 ;       JMP.L   _760
0026EC                +10849 _LG_654:
                      10850 ; rs232cmd.c 2983               {
                      10851 ; rs232cmd.c 2984                       if ( CmdRequest)
0026EC 964842rr       10853         MOV.B   ES,#SEG( _CmdRequest )
0026F0 9908rrrr       10854         MOV.W   R0,#SOF( _CmdRequest )
0026F4 8200           10855         MOV.B   R0L,[R0]
                      10856         BEQ     _686
0026F6 F202           +10856 ;       BNE     _LG_656
0026F8 D5009F         +10856 ;       JMP.L   _686
0026FC D5009F00       +10856 ;       JMP.L   _686
0026FC                +10856 _LG_656:
                      10857 ; rs232cmd.c 2985                       {
                      10858 ; rs232cmd.c 2986                               if ( ParCnt)
0026FC 964842rr       10860         MOV.B   ES,#SEG( _ParCnt )
002700 9908rrrr       10861         MOV.W   R0,#SOF( _ParCnt )
002704 8200           10862         MOV.B   R0L,[R0]
002706 F307           10863         BEQ     _623
                      10864 ; rs232cmd.c 2987                                       SCPIError = ParNotAllowed;
002708 964842rr       10866         MOV.B   ES,#SEG( _SCPIError )
00270C 9908rrrr       10867         MOV.W   R0,#SOF( _SCPIError )
002710 BA06           10868         MOV.W   [R0],#06H
                      10869         BR      _760
002712 D50148         +10869         JMP.L   _760
002712 D5014800       +10869         JMP.L   _760
002716                10870 _623:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 169

ADDR   CODE            LINE SOURCELINE
                      10871 ; rs232cmd.c 2988                               else
                      10872 ; rs232cmd.c 2989                               {
                      10873 ; rs232cmd.c 2990                                       switch ( AudioSetup[AnalogAudio].Level)
002716 964842rr       10875         MOV.B   ES,#SEG( _AudioSetup+4 )
00271A 9908rrrr       10876         MOV.W   R0,#SOF( _AudioSetup+4 )
00271E 8A00           10877         MOV.W   R0,[R0]
002720 A90F           10878         ADDS.W  R0,#0FH
002722 9904001D       10879         CMP.W   R0,#01DH
002726 F859           10880         BG      _653
002728 D902           10881         ASL.W   R0,#02H
00272A 964843rr       10882         MOV.B   CS,#SEG( __swtable761 )
00272E 9900rrrr       10883         ADD.W   R0,#SOF( __swtable761 )
002732 8810           10884         MOVC.W  R1,[R0+]
002734 0F02           10885         PUSH.W  R1
002736 8810           10886         MOVC.W  R1,[R0+]
002738 0F02           10887         PUSH.W  R1
00273A D680           10888         RET
                      10889 ; rs232cmd.c 2991                                       {
                      10890 ; rs232cmd.c 2992                                               case P10dBm:
                      10891 ; rs232cmd.c 2993                                                       level = 10;
                      10892 ; rs232cmd.c 2994                                                       break;
                      10893 ; rs232cmd.c 2995       
                      10894 ; rs232cmd.c 2996                                               case P8dBm:
00273C                10896 _624:
                      10897 ; rs232cmd.c 2997                                                       level = 8;
00273C 9A780008       10899         MOV.W   [R7],#08H
                      10900 ; rs232cmd.c 2998                                                       break;
002740 FE6E           10902         BR      _685
                      10903 ; rs232cmd.c 2999       
                      10904 ; rs232cmd.c 3000                                               case P7dBm:
002742                10906 _625:
                      10907 ; rs232cmd.c 3001                                                       level = 7;
002742 BA77           10909         MOV.W   [R7],#07H
                      10910 ; rs232cmd.c 3002                                                       break;
002744 FE6C           10912         BR      _685
                      10913 ; rs232cmd.c 3003       
                      10914 ; rs232cmd.c 3004                                               case P6dBm:
002746                10916 _626:
                      10917 ; rs232cmd.c 3005                                                       level = 6;
002746 BA76           10919         MOV.W   [R7],#06H
                      10920 ; rs232cmd.c 3006                                                       break;
002748 FE6A           10922         BR      _685
                      10923 ; rs232cmd.c 3007       
                      10924 ; rs232cmd.c 3008                                               case P5dBm:
00274A                10926 _627:
                      10927 ; rs232cmd.c 3009                                                       level = 5;
00274A BA75           10929         MOV.W   [R7],#05H
                      10930 ; rs232cmd.c 3010                                                       break;
00274C FE68           10932         BR      _685
                      10933 ; rs232cmd.c 3011       
                      10934 ; rs232cmd.c 3012                                               case P4dBm:
00274E                10936 _628:
                      10937 ; rs232cmd.c 3013                                                       level = 4;
00274E BA74           10939         MOV.W   [R7],#04H
                      10940 ; rs232cmd.c 3014                                                       break;
002750 FE66           10942         BR      _685
                      10943 ; rs232cmd.c 3015       
                      10944 ; rs232cmd.c 3016                                               case P3dBm:
002752                10946 _629:
                      10947 ; rs232cmd.c 3017                                                       level = 3;
002752 BA73           10949         MOV.W   [R7],#03H
                      10950 ; rs232cmd.c 3018                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 170

ADDR   CODE            LINE SOURCELINE
002754 FE64           10952         BR      _685
                      10953 ; rs232cmd.c 3019       
                      10954 ; rs232cmd.c 3020                                               case P2dBm:
002756                10956 _630:
                      10957 ; rs232cmd.c 3021                                                       level = 2;
002756 BA72           10959         MOV.W   [R7],#02H
                      10960 ; rs232cmd.c 3022                                                       break;
002758 FE62           10962         BR      _685
                      10963 ; rs232cmd.c 3023       
                      10964 ; rs232cmd.c 3024                                               case P1dBm:
00275A                10966 _631:
                      10967 ; rs232cmd.c 3025                                                       level = 1;
00275A BA71           10969         MOV.W   [R7],#01H
                      10970 ; rs232cmd.c 3026                                                       break;
00275C FE60           10972         BR      _685
                      10973 ; rs232cmd.c 3027       
                      10974 ; rs232cmd.c 3028                                               case M0dBm:
00275E                10976 _632:
                      10977 ; rs232cmd.c 3029                                                       level = 0;
00275E BA70           10979         MOV.W   [R7],#00H
                      10980 ; rs232cmd.c 3030                                                       break;
002760 FE5E           10982         BR      _685
                      10983 ; rs232cmd.c 3031       
                      10984 ; rs232cmd.c 3032                                               case M1dBm:
002762                10986 _633:
                      10987 ; rs232cmd.c 3033                                                       level = -1;
002762 9A78FFFF       10989         MOV.W   [R7],#0FFFFH
                      10990 ; rs232cmd.c 3034                                                       break;
002766 FE5B           10992         BR      _685
                      10993 ; rs232cmd.c 3035       
                      10994 ; rs232cmd.c 3036                                               case M2dBm:
002768                10996 _634:
                      10997 ; rs232cmd.c 3037                                                       level = -2;
002768 9A78FFFE       10999         MOV.W   [R7],#0FFFEH
                      11000 ; rs232cmd.c 3038                                                       break;
00276C FE58           11002         BR      _685
                      11003 ; rs232cmd.c 3039       
                      11004 ; rs232cmd.c 3040                                               case M3dBm:
00276E                11006 _635:
                      11007 ; rs232cmd.c 3041                                                       level = -3;
00276E 9A78FFFD       11009         MOV.W   [R7],#0FFFDH
                      11010 ; rs232cmd.c 3042                                                       break;
002772 FE55           11012         BR      _685
                      11013 ; rs232cmd.c 3043       
                      11014 ; rs232cmd.c 3044                                               case M4dBm:
002774                11016 _636:
                      11017 ; rs232cmd.c 3045                                                       level = -4;
002774 9A78FFFC       11019         MOV.W   [R7],#0FFFCH
                      11020 ; rs232cmd.c 3046                                                       break;
002778 FE52           11022         BR      _685
                      11023 ; rs232cmd.c 3047       
                      11024 ; rs232cmd.c 3048                                               case M5dBm:
00277A                11026 _637:
                      11027 ; rs232cmd.c 3049                                                       level = -5;
00277A 9A78FFFB       11029         MOV.W   [R7],#0FFFBH
                      11030 ; rs232cmd.c 3050                                                       break;
00277E FE4F           11032         BR      _685
                      11033 ; rs232cmd.c 3051       
                      11034 ; rs232cmd.c 3052                                               case M6dBm:
002780                11036 _638:
                      11037 ; rs232cmd.c 3053                                                       level = -6;
002780 9A78FFFA       11039         MOV.W   [R7],#0FFFAH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 171

ADDR   CODE            LINE SOURCELINE
                      11040 ; rs232cmd.c 3054                                                       break;
002784 FE4C           11042         BR      _685
                      11043 ; rs232cmd.c 3055       
                      11044 ; rs232cmd.c 3056                                               case M7dBm:
002786                11046 _639:
                      11047 ; rs232cmd.c 3057                                                       level = -7;
002786 9A78FFF9       11049         MOV.W   [R7],#0FFF9H
                      11050 ; rs232cmd.c 3058                                                       break;
00278A FE49           11052         BR      _685
                      11053 ; rs232cmd.c 3059       
                      11054 ; rs232cmd.c 3060                                               case M8dBm:
00278C                11056 _640:
                      11057 ; rs232cmd.c 3061                                                       level = -8;
00278C 9A78FFF8       11059         MOV.W   [R7],#0FFF8H
                      11060 ; rs232cmd.c 3062                                                       break;
002790 FE46           11062         BR      _685
                      11063 ; rs232cmd.c 3063       
                      11064 ; rs232cmd.c 3064                                               case M9dBm:
002792                11066 _641:
                      11067 ; rs232cmd.c 3065                                                       level = -9;
002792 9A78FFF7       11069         MOV.W   [R7],#0FFF7H
                      11070 ; rs232cmd.c 3066                                                       break;
002796 FE43           11072         BR      _685
                      11073 ; rs232cmd.c 3067       
                      11074 ; rs232cmd.c 3068                                               case M10dBm:
002798                11076 _642:
                      11077 ; rs232cmd.c 3069                                                       level = -10;
002798 9A78FFF6       11079         MOV.W   [R7],#0FFF6H
                      11080 ; rs232cmd.c 3070                                                       break;
00279C FE40           11082         BR      _685
                      11083 ; rs232cmd.c 3071       
                      11084 ; rs232cmd.c 3072                                               case M11dBm:
00279E                11086 _643:
                      11087 ; rs232cmd.c 3073                                                       level = -11;
00279E 9A78FFF5       11089         MOV.W   [R7],#0FFF5H
                      11090 ; rs232cmd.c 3074                                                       break;
0027A2 FE3D           11092         BR      _685
                      11093 ; rs232cmd.c 3075       
                      11094 ; rs232cmd.c 3076                                               case M12dBm:
0027A4                11096 _644:
                      11097 ; rs232cmd.c 3077                                                       level = -12;
0027A4 9A78FFF4       11099         MOV.W   [R7],#0FFF4H
                      11100 ; rs232cmd.c 3078                                                       break;
0027A8 FE3A           11102         BR      _685
                      11103 ; rs232cmd.c 3079       
                      11104 ; rs232cmd.c 3080                                               case M15dBm:
0027AA                11106 _645:
                      11107 ; rs232cmd.c 3081                                                       level = -15;
0027AA 9A78FFF1       11109         MOV.W   [R7],#0FFF1H
                      11110 ; rs232cmd.c 3082                                                       break;
0027AE FE37           11112         BR      _685
                      11113 ; rs232cmd.c 3083       
                      11114 ; rs232cmd.c 3084                                               case M18dBm:
0027B0                11116 _646:
                      11117 ; rs232cmd.c 3085                                                       level = -18;
0027B0 9A78FFEE       11119         MOV.W   [R7],#0FFEEH
                      11120 ; rs232cmd.c 3086                                                       break;
0027B4 FE34           11122         BR      _685
                      11123 ; rs232cmd.c 3087       
                      11124 ; rs232cmd.c 3088                                               case M20dBm:
0027B6                11126 _647:
                      11127 ; rs232cmd.c 3089                                                       level = -20;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 172

ADDR   CODE            LINE SOURCELINE
0027B6 9A78FFEC       11129         MOV.W   [R7],#0FFECH
                      11130 ; rs232cmd.c 3090                                                       break;
0027BA FE31           11132         BR      _685
                      11133 ; rs232cmd.c 3091       
                      11134 ; rs232cmd.c 3092                                               case M24dBm:
0027BC                11136 _648:
                      11137 ; rs232cmd.c 3093                                                       level = -24;
0027BC 9A78FFE8       11139         MOV.W   [R7],#0FFE8H
                      11140 ; rs232cmd.c 3094                                                       break;
0027C0 FE2E           11142         BR      _685
                      11143 ; rs232cmd.c 3095       
                      11144 ; rs232cmd.c 3096                                               case M27dBm:
0027C2                11146 _649:
                      11147 ; rs232cmd.c 3097                                                       level = -27;
0027C2 9A78FFE5       11149         MOV.W   [R7],#0FFE5H
                      11150 ; rs232cmd.c 3098                                                       break;
0027C6 FE2B           11152         BR      _685
                      11153 ; rs232cmd.c 3099       
                      11154 ; rs232cmd.c 3100                                               case M30dBm:
0027C8                11156 _650:
                      11157 ; rs232cmd.c 3101                                                       level = -30;
0027C8 9A78FFE2       11159         MOV.W   [R7],#0FFE2H
                      11160 ; rs232cmd.c 3102                                                       break;
0027CC FE28           11162         BR      _685
                      11163 ; rs232cmd.c 3103       
                      11164 ; rs232cmd.c 3104                                               case M33dBm:
0027CE                11166 _651:
                      11167 ; rs232cmd.c 3105                                                       level = -33;
0027CE 9A78FFDF       11169         MOV.W   [R7],#0FFDFH
                      11170 ; rs232cmd.c 3106                                                       break;
0027D2 FE25           11172         BR      _685
                      11173 ; rs232cmd.c 3107       
                      11174 ; rs232cmd.c 3108                                               case M36dBm:
0027D4                11176 _652:
                      11177 ; rs232cmd.c 3109                                                       level = -36;
0027D4 9A78FFDC       11179         MOV.W   [R7],#0FFDCH
                      11180 ; rs232cmd.c 3110                                                       break;
0027D8 FE22           11182         BR      _685
                      11183 ; rs232cmd.c 3111       
                      11184 ; rs232cmd.c 3112                                               default:
0027DA                11186 _653:
                      11187 ; rs232cmd.c 3113                                                       str = SILENCEParTxt;
0027DA 9958rrrr       11189         MOV.W   R5,#SEG( _SILENCEParTxt )
0027DE 9948rrrr       11190         MOV.W   R4,#SOF( _SILENCEParTxt )
                      11192 ; rs232cmd.c 3114       
                      11193 ; rs232cmd.c 3115                                                       while ( *str)
0027E2 964843rr       11195         MOV.B   CS,#SEG( _SILENCEParTxt )
0027E6 9908rrrr       11196         MOV.W   R0,#SOF( _SILENCEParTxt )
0027EA 8020           11197         MOVC.B  R1L,[R0+]
0027EC F311           11198         BEQ     _655
0027EC F311           11198         BEQ     _655
0027EE                11199 _654:
                      11200 ; rs232cmd.c 3116                                                               rs232putchar( *st
                            r++);
0027EE 8915           11202         MOV.W   R1,R5
0027F0 8904           11203         MOV.W   R0,R4
0027F2 862C43         11204         MOV.B   CS,R1L
0027F5 8020           11205         MOVC.B  R1L,[R0+]
0027F7 8102           11206         MOV.B   R0L,R1L
                      11207         CALL    _rs232putchar
0027F9 C4rrrrrr       +11207 ;       FCALL   _rs232putchar
0027FD 99400001       11208         ADD.W   R4,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 173

ADDR   CODE            LINE SOURCELINE
002801 99510000       11209         ADDC.W  R5,#00H
002805 8915           11213         MOV.W   R1,R5
002807 8904           11214         MOV.W   R0,R4
002809 862C43         11215         MOV.B   CS,R1L
00280C 8020           11216         MOVC.B  R1L,[R0+]
00280E F2EF           11217         BNE     _654
002810                11219 _655:
                      11220 ; rs232cmd.c 3117       
                      11221 ; rs232cmd.c 3118                                                       rs232putchar('\n');
002810 91080A         11223         MOV.B   R0L,#0AH
                      11224         CALL    _rs232putchar
002813 C4rrrrrr       +11224 ;       FCALL   _rs232putchar
                      11225 ; rs232cmd.c 3119                                                       return;
                      11227         BR      _760
002817 D500C5         +11227         JMP.L   _760
00281A                11229 _656:
00281A 9A78000A       11231         MOV.W   [R7],#0AH
                      11232 ; rs232cmd.c 3120                                               }
00281E                11234 _685:
                      11235 ; rs232cmd.c 3121       
                      11236 ; rs232cmd.c 3122                                       rs232printf( 6, "%d\n", level);
00281E B906           11238         MOV.W   R0,#06H
002820 8A17           11239         MOV.W   R1,[R7]
002822 0F02           11240         PUSH.W  R1
002824 9938rrrr       11242         MOV.W   R3,#SEG( _9 )
002828 9928rrrr       11243         MOV.W   R2,#SOF( _9 )
00282C 0F0C           11244         PUSH.W  R2, R3
                      11246         CALL    _rs232printf
00282E C4rrrrrr       +11246 ;       FCALL   _rs232printf
002832 A976           11247         ADDS.W  R7,#06H
0000F0                11248         RSEG    RS232CMD_IR
                      11249         ALIGN   1
0000F0                11250 __swtable766:
0000F0 rrrrrrrrrrrrrr 11251         DW      SOF _719,SEG _719
       rrrrrrrrrrrrrr       
       rrrr                 
0000F4 rrrrrrrrrrrrrr 11252         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
0000F8 rrrrrrrrrrrrrr 11253         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
0000FC rrrrrrrrrrrrrr 11254         DW      SOF _718,SEG _718
       rrrrrrrrrrrrrr       
       rrrr                 
000100 rrrrrrrrrrrrrr 11255         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000104 rrrrrrrrrrrrrr 11256         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000108 rrrrrrrrrrrrrr 11257         DW      SOF _717,SEG _717
       rrrrrrrrrrrrrr       
       rrrr                 
00010C rrrrrrrrrrrrrr 11258         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000110 rrrrrrrrrrrrrr 11259         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 174

ADDR   CODE            LINE SOURCELINE
000114 rrrrrrrrrrrrrr 11260         DW      SOF _716,SEG _716
       rrrrrrrrrrrrrr       
       rrrr                 
000118 rrrrrrrrrrrrrr 11261         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
00011C rrrrrrrrrrrrrr 11262         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000120 rrrrrrrrrrrrrr 11263         DW      SOF _715,SEG _715
       rrrrrrrrrrrrrr       
       rrrr                 
000124 rrrrrrrrrrrrrr 11264         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000128 rrrrrrrrrrrrrr 11265         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
00012C rrrrrrrrrrrrrr 11266         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000130 rrrrrrrrrrrrrr 11267         DW      SOF _714,SEG _714
       rrrrrrrrrrrrrr       
       rrrr                 
000134 rrrrrrrrrrrrrr 11268         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000138 rrrrrrrrrrrrrr 11269         DW      SOF _713,SEG _713
       rrrrrrrrrrrrrr       
       rrrr                 
00013C rrrrrrrrrrrrrr 11270         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000140 rrrrrrrrrrrrrr 11271         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000144 rrrrrrrrrrrrrr 11272         DW      SOF _712,SEG _712
       rrrrrrrrrrrrrr       
       rrrr                 
000148 rrrrrrrrrrrrrr 11273         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
00014C rrrrrrrrrrrrrr 11274         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
000150 rrrrrrrrrrrrrr 11275         DW      SOF _711,SEG _711
       rrrrrrrrrrrrrr       
       rrrr                 
000154 rrrrrrrrrrrrrr 11276         DW      SOF _710,SEG _710
       rrrrrrrrrrrrrr       
       rrrr                 
000158 rrrrrrrrrrrrrr 11277         DW      SOF _709,SEG _709
       rrrrrrrrrrrrrr       
       rrrr                 
00015C rrrrrrrrrrrrrr 11278         DW      SOF _708,SEG _708
       rrrrrrrrrrrrrr       
       rrrr                 
000160 rrrrrrrrrrrrrr 11279         DW      SOF _707,SEG _707
       rrrrrrrrrrrrrr       
       rrrr                 
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 175

ADDR   CODE            LINE SOURCELINE
000164 rrrrrrrrrrrrrr 11280         DW      SOF _706,SEG _706
       rrrrrrrrrrrrrr       
       rrrr                 
000168 rrrrrrrrrrrrrr 11281         DW      SOF _705,SEG _705
       rrrrrrrrrrrrrr       
       rrrr                 
00016C rrrrrrrrrrrrrr 11282         DW      SOF _704,SEG _704
       rrrrrrrrrrrrrr       
       rrrr                 
000170 rrrrrrrrrrrrrr 11283         DW      SOF _703,SEG _703
       rrrrrrrrrrrrrr       
       rrrr                 
000174 rrrrrrrrrrrrrr 11284         DW      SOF _702,SEG _702
       rrrrrrrrrrrrrr       
       rrrr                 
000178 rrrrrrrrrrrrrr 11285         DW      SOF _701,SEG _701
       rrrrrrrrrrrrrr       
       rrrr                 
00017C rrrrrrrrrrrrrr 11286         DW      SOF _700,SEG _700
       rrrrrrrrrrrrrr       
       rrrr                 
000180 rrrrrrrrrrrrrr 11287         DW      SOF _699,SEG _699
       rrrrrrrrrrrrrr       
       rrrr                 
000184 rrrrrrrrrrrrrr 11288         DW      SOF _698,SEG _698
       rrrrrrrrrrrrrr       
       rrrr                 
000188 rrrrrrrrrrrrrr 11289         DW      SOF _697,SEG _697
       rrrrrrrrrrrrrr       
       rrrr                 
00018C rrrrrrrrrrrrrr 11290         DW      SOF _696,SEG _696
       rrrrrrrrrrrrrr       
       rrrr                 
000190 rrrrrrrrrrrrrr 11291         DW      SOF _695,SEG _695
       rrrrrrrrrrrrrr       
       rrrr                 
000194 rrrrrrrrrrrrrr 11292         DW      SOF _694,SEG _694
       rrrrrrrrrrrrrr       
       rrrr                 
000198 rrrrrrrrrrrrrr 11293         DW      SOF _693,SEG _693
       rrrrrrrrrrrrrr       
       rrrr                 
00019C rrrrrrrrrrrrrr 11294         DW      SOF _692,SEG _692
       rrrrrrrrrrrrrr       
       rrrr                 
0001A0 rrrrrrrrrrrrrr 11295         DW      SOF _691,SEG _691
       rrrrrrrrrrrrrr       
       rrrr                 
0001A4 rrrrrrrrrrrrrr 11296         DW      SOF _720,SEG _720
       rrrrrrrrrrrrrr       
       rrrr                 
0001A8 rrrrrrrrrrrrrr 11297         DW      SOF _721,SEG _721
       rrrrrrrrrrrrrr       
       rrrr                 
002834                11298         RSEG    RS232CMD_PR
                      11300 ; rs232cmd.c 3123                               }
                      11301 ; rs232cmd.c 3124                       }
                      11303         BR      _760
002834 D500B7         +11303         JMP.L   _760
002834 D500B700       +11303         JMP.L   _760
002838                11304 _686:
                      11305 ; rs232cmd.c 3125                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 176

ADDR   CODE            LINE SOURCELINE
                      11306 ; rs232cmd.c 3126                       {
                      11307 ; rs232cmd.c 3127                               if ( ParCnt != 1)
002838 964842rr       11309         MOV.B   ES,#SEG( _ParCnt )
00283C 9908rrrr       11310         MOV.W   R0,#SOF( _ParCnt )
002840 8200           11311         MOV.B   R0L,[R0]
002842 910401         11312         CMP.B   R0L,#01H
002845 F307           11313         BEQ     _687
                      11314 ; rs232cmd.c 3128                                       SCPIError = SyntaxErr;
002847 964842rr       11316         MOV.B   ES,#SEG( _SCPIError )
00284B 9908rrrr       11317         MOV.W   R0,#SOF( _SCPIError )
00284F BA03           11318         MOV.W   [R0],#03H
                      11319         BR      _760
002851 D500A8         +11319         JMP.L   _760
002851 D500A8         +11319         JMP.L   _760
002854                11320 _687:
                      11321 ; rs232cmd.c 3129                               else
                      11322 ; rs232cmd.c 3130                               {
                      11323 ; rs232cmd.c 3131                                       level = FindParameter( Cmd, AnalogLevelPa
                            r);
002854 9938rrrr       11325         MOV.W   R3,#SEG( _AnalogLevelPar )
002858 9928rrrr       11326         MOV.W   R2,#SOF( _AnalogLevelPar )
00285C 9918rrrr       11327         MOV.W   R1,#SEG( _Cmd )
002860 9908rrrr       11328         MOV.W   R0,#SOF( _Cmd )
002864 C51C58         11329         CALL    _FindParameter
002867 8A0F           11330         MOV.W   [R7],R0
                      11331 ; rs232cmd.c 3132               
                      11332 ; rs232cmd.c 3133                                       if ( level > -1)
002869 9A74FFFF       11334         CMP.W   [R7],#0FFFFH
00286D FD04           11335         BLE     _688
                      11336 ; rs232cmd.c 3134                                               level = AnalogSilence;
00286F 9A78001F       11338         MOV.W   [R7],#01FH
                      11339         BR      _752
002873 D5008B         +11339         JMP.L   _752
002873 D5008B         +11339         JMP.L   _752
002876                11340 _688:
                      11341 ; rs232cmd.c 3135                                       else
                      11342 ; rs232cmd.c 3136                                       {
                      11343 ; rs232cmd.c 3137                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
002876 964842rr       11345         MOV.B   ES,#SEG( _ParCnt )
00287A 9908rrrr       11346         MOV.W   R0,#SOF( _ParCnt )
00287E 8200           11347         MOV.B   R0L,[R0]
002880 910401         11348         CMP.B   R0L,#01H
002883 F215           11349         BNE     _689
002885 9128rr         11350         MOV.B   R1L,#SEG( __lc_bs )
002888 7133           11351         XOR.B   R1H,R1H
00288A 8907           11352         MOV.W   R0,R7
00288C 0F03           11353         PUSH.W  R0, R1
00288E 9918rrrr       11355         MOV.W   R1,#SEG( _10 )
002892 9908rrrr       11356         MOV.W   R0,#SOF( _10 )
002896 0F03           11357         PUSH.W  R0, R1
002898 9918rrrr       11359         MOV.W   R1,#SEG( _Cmd )
00289C 9908rrrr       11360         MOV.W   R0,#SOF( _Cmd )
                      11361         CALL    _sscanf
0028A0 C4rrrrrr       +11361 ;       FCALL   _sscanf
0028A4 99700008       11362         ADD.W   R7,#08H
0028A8 99040001       11364         CMP.W   R0,#01H
0028AC F306           11365         BEQ     _690
0028AC F306           11365         BEQ     _690
0028AE                11366 _689:
                      11367 ; rs232cmd.c 3138                                                       SCPIError = SyntaxErr;
0028AE 964842rr       11369         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 177

ADDR   CODE            LINE SOURCELINE
0028B2 9908rrrr       11370         MOV.W   R0,#SOF( _SCPIError )
0028B6 BA03           11371         MOV.W   [R0],#03H
0028B8 FE69           11372         BR      _752
0028B8 FE69           11372         BR      _752
0028BA                11373 _690:
                      11374 ; rs232cmd.c 3139                                               else
                      11375 ; rs232cmd.c 3140                                               {
                      11376 ; rs232cmd.c 3141                                                       switch ( level)
0028BA 8A17           11378         MOV.W   R1,[R7]
0028BC 99100024       11379         ADD.W   R1,#024H
0028C0 9914002E       11380         CMP.W   R1,#02EH
0028C4 F85B           11381         BG      _720
0028C6 D912           11382         ASL.W   R1,#02H
0028C8 964843rr       11383         MOV.B   CS,#SEG( __swtable766 )
0028CC 9910rrrr       11384         ADD.W   R1,#SOF( __swtable766 )
0028D0 8801           11385         MOVC.W  R0,[R1+]
0028D2 0F01           11386         PUSH.W  R0
0028D4 8801           11387         MOVC.W  R0,[R1+]
0028D6 0F01           11388         PUSH.W  R0
0028D8 D680           11389         RET
                      11390 ; rs232cmd.c 3142                                                       {
                      11391 ; rs232cmd.c 3143                                                               case 10:
                      11392 ; rs232cmd.c 3144                                                                       level = P
                            10dBm;
                      11393 ; rs232cmd.c 3145                                                                       break;
                      11394 ; rs232cmd.c 3146       
                      11395 ; rs232cmd.c 3147                                                               case 8:
0028DA                11397 _691:
                      11398 ; rs232cmd.c 3148                                                                       level = P
                            8dBm;
0028DA BA72           11400         MOV.W   [R7],#02H
                      11401 ; rs232cmd.c 3149                                                                       break;
0028DC FE57           11403         BR      _752
                      11404 ; rs232cmd.c 3150       
                      11405 ; rs232cmd.c 3151                                                               case 7:
0028DE                11407 _692:
                      11408 ; rs232cmd.c 3152                                                                       level = P
                            7dBm;
0028DE BA73           11410         MOV.W   [R7],#03H
                      11411 ; rs232cmd.c 3153                                                                       break;
0028E0 FE55           11413         BR      _752
                      11414 ; rs232cmd.c 3154       
                      11415 ; rs232cmd.c 3155                                                               case 6:
0028E2                11417 _693:
                      11418 ; rs232cmd.c 3156                                                                       level = P
                            6dBm;
0028E2 BA74           11420         MOV.W   [R7],#04H
                      11421 ; rs232cmd.c 3157                                                                       break;
0028E4 FE53           11423         BR      _752
                      11424 ; rs232cmd.c 3158       
                      11425 ; rs232cmd.c 3159                                                               case 5:
0028E6                11427 _694:
                      11428 ; rs232cmd.c 3160                                                                       level = P
                            5dBm;
0028E6 BA75           11430         MOV.W   [R7],#05H
                      11431 ; rs232cmd.c 3161                                                                       break;
0028E8 FE51           11433         BR      _752
                      11434 ; rs232cmd.c 3162       
                      11435 ; rs232cmd.c 3163                                                               case 4:
0028EA                11437 _695:
                      11438 ; rs232cmd.c 3164                                                                       level = P
                            4dBm;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 178

ADDR   CODE            LINE SOURCELINE
0028EA BA76           11440         MOV.W   [R7],#06H
                      11441 ; rs232cmd.c 3165                                                                       break;
0028EC FE4F           11443         BR      _752
                      11444 ; rs232cmd.c 3166       
                      11445 ; rs232cmd.c 3167                                                               case 3:
0028EE                11447 _696:
                      11448 ; rs232cmd.c 3168                                                                       level = P
                            3dBm;
0028EE BA77           11450         MOV.W   [R7],#07H
                      11451 ; rs232cmd.c 3169                                                                       break;
0028F0 FE4D           11453         BR      _752
                      11454 ; rs232cmd.c 3170       
                      11455 ; rs232cmd.c 3171                                                               case 2:
0028F2                11457 _697:
                      11458 ; rs232cmd.c 3172                                                                       level = P
                            2dBm;
0028F2 9A780008       11460         MOV.W   [R7],#08H
                      11461 ; rs232cmd.c 3173                                                                       break;
0028F6 FE4A           11463         BR      _752
                      11464 ; rs232cmd.c 3174       
                      11465 ; rs232cmd.c 3175                                                               case 1:
0028F8                11467 _698:
                      11468 ; rs232cmd.c 3176                                                                       level = P
                            1dBm;
0028F8 9A780009       11470         MOV.W   [R7],#09H
                      11471 ; rs232cmd.c 3177                                                                       break;
0028FC FE47           11473         BR      _752
                      11474 ; rs232cmd.c 3178       
                      11475 ; rs232cmd.c 3179                                                               case 0:
0028FE                11477 _699:
                      11478 ; rs232cmd.c 3180                                                                       level = M
                            0dBm;
0028FE 9A78000A       11480         MOV.W   [R7],#0AH
                      11481 ; rs232cmd.c 3181                                                                       break;
002902 FE44           11483         BR      _752
                      11484 ; rs232cmd.c 3182       
                      11485 ; rs232cmd.c 3183                                                               case -1:
002904                11487 _700:
                      11488 ; rs232cmd.c 3184                                                                       level = M
                            1dBm;
002904 9A78000B       11490         MOV.W   [R7],#0BH
                      11491 ; rs232cmd.c 3185                                                                       break;
002908 FE41           11493         BR      _752
                      11494 ; rs232cmd.c 3186       
                      11495 ; rs232cmd.c 3187                                                               case -2:
00290A                11497 _701:
                      11498 ; rs232cmd.c 3188                                                                       level = M
                            2dBm;
00290A 9A78000C       11500         MOV.W   [R7],#0CH
                      11501 ; rs232cmd.c 3189                                                                       break;
00290E FE3E           11503         BR      _752
                      11504 ; rs232cmd.c 3190       
                      11505 ; rs232cmd.c 3191                                                               case -3:
002910                11507 _702:
                      11508 ; rs232cmd.c 3192                                                                       level = M
                            3dBm;
002910 9A78000D       11510         MOV.W   [R7],#0DH
                      11511 ; rs232cmd.c 3193                                                                       break;
002914 FE3B           11513         BR      _752
                      11514 ; rs232cmd.c 3194       
                      11515 ; rs232cmd.c 3195                                                               case -4:
002916                11517 _703:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 179

ADDR   CODE            LINE SOURCELINE
                      11518 ; rs232cmd.c 3196                                                                       level = M
                            4dBm;
002916 9A78000E       11520         MOV.W   [R7],#0EH
                      11521 ; rs232cmd.c 3197                                                                       break;
00291A FE38           11523         BR      _752
                      11524 ; rs232cmd.c 3198       
                      11525 ; rs232cmd.c 3199                                                               case -5:
00291C                11527 _704:
                      11528 ; rs232cmd.c 3200                                                                       level = M
                            5dBm;
00291C 9A78000F       11530         MOV.W   [R7],#0FH
                      11531 ; rs232cmd.c 3201                                                                       break;
002920 FE35           11533         BR      _752
                      11534 ; rs232cmd.c 3202       
                      11535 ; rs232cmd.c 3203                                                               case -6:
002922                11537 _705:
                      11538 ; rs232cmd.c 3204                                                                       level = M
                            6dBm;
002922 9A780010       11540         MOV.W   [R7],#010H
                      11541 ; rs232cmd.c 3205                                                                       break;
002926 FE32           11543         BR      _752
                      11544 ; rs232cmd.c 3206       
                      11545 ; rs232cmd.c 3207                                                               case -7:
002928                11547 _706:
                      11548 ; rs232cmd.c 3208                                                                       level = M
                            7dBm;
002928 9A780011       11550         MOV.W   [R7],#011H
                      11551 ; rs232cmd.c 3209                                                                       break;
00292C FE2F           11553         BR      _752
                      11554 ; rs232cmd.c 3210       
                      11555 ; rs232cmd.c 3211                                                               case -8:
00292E                11557 _707:
                      11558 ; rs232cmd.c 3212                                                                       level = M
                            8dBm;
00292E 9A780012       11560         MOV.W   [R7],#012H
                      11561 ; rs232cmd.c 3213                                                                       break;
002932 FE2C           11563         BR      _752
                      11564 ; rs232cmd.c 3214       
                      11565 ; rs232cmd.c 3215                                                               case -9:
002934                11567 _708:
                      11568 ; rs232cmd.c 3216                                                                       level = M
                            9dBm;
002934 9A780013       11570         MOV.W   [R7],#013H
                      11571 ; rs232cmd.c 3217                                                                       break;
002938 FE29           11573         BR      _752
                      11574 ; rs232cmd.c 3218       
                      11575 ; rs232cmd.c 3219                                                               case -10:
00293A                11577 _709:
                      11578 ; rs232cmd.c 3220                                                                       level = M
                            10dBm;
00293A 9A780014       11580         MOV.W   [R7],#014H
                      11581 ; rs232cmd.c 3221                                                                       break;
00293E FE26           11583         BR      _752
                      11584 ; rs232cmd.c 3222       
                      11585 ; rs232cmd.c 3223                                                               case -11:
002940                11587 _710:
                      11588 ; rs232cmd.c 3224                                                                       level = M
                            11dBm;
002940 9A780015       11590         MOV.W   [R7],#015H
                      11591 ; rs232cmd.c 3225                                                                       break;
002944 FE23           11593         BR      _752
                      11594 ; rs232cmd.c 3226       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 180

ADDR   CODE            LINE SOURCELINE
                      11595 ; rs232cmd.c 3227                                                               case -12:
002946                11597 _711:
                      11598 ; rs232cmd.c 3228                                                                       level = M
                            12dBm;
002946 9A780016       11600         MOV.W   [R7],#016H
                      11601 ; rs232cmd.c 3229                                                                       break;
00294A FE20           11603         BR      _752
                      11604 ; rs232cmd.c 3230       
                      11605 ; rs232cmd.c 3231                                                               case -15:
00294C                11607 _712:
                      11608 ; rs232cmd.c 3232                                                                       level = M
                            15dBm;
00294C 9A780017       11610         MOV.W   [R7],#017H
                      11611 ; rs232cmd.c 3233                                                                       break;
002950 FE1D           11613         BR      _752
                      11614 ; rs232cmd.c 3234       
                      11615 ; rs232cmd.c 3235                                                               case -18:
002952                11617 _713:
                      11618 ; rs232cmd.c 3236                                                                       level = M
                            18dBm;
002952 9A780018       11620         MOV.W   [R7],#018H
                      11621 ; rs232cmd.c 3237                                                                       break;
002956 FE1A           11623         BR      _752
                      11624 ; rs232cmd.c 3238       
                      11625 ; rs232cmd.c 3239                                                               case -20:
002958                11627 _714:
                      11628 ; rs232cmd.c 3240                                                                       level = M
                            20dBm;
002958 9A780019       11630         MOV.W   [R7],#019H
                      11631 ; rs232cmd.c 3241                                                                       break;
00295C FE17           11633         BR      _752
                      11634 ; rs232cmd.c 3242       
                      11635 ; rs232cmd.c 3243                                                               case -24:
00295E                11637 _715:
                      11638 ; rs232cmd.c 3244                                                                       level = M
                            24dBm;
00295E 9A78001A       11640         MOV.W   [R7],#01AH
                      11641 ; rs232cmd.c 3245                                                                       break;
002962 FE14           11643         BR      _752
                      11644 ; rs232cmd.c 3246       
                      11645 ; rs232cmd.c 3247                                                               case -27:
002964                11647 _716:
                      11648 ; rs232cmd.c 3248                                                                       level = M
                            27dBm;
002964 9A78001B       11650         MOV.W   [R7],#01BH
                      11651 ; rs232cmd.c 3249                                                                       break;
002968 FE11           11653         BR      _752
                      11654 ; rs232cmd.c 3250       
                      11655 ; rs232cmd.c 3251                                                               case -30:
00296A                11657 _717:
                      11658 ; rs232cmd.c 3252                                                                       level = M
                            30dBm;
00296A 9A78001C       11660         MOV.W   [R7],#01CH
                      11661 ; rs232cmd.c 3253                                                                       break;
00296E FE0E           11663         BR      _752
                      11664 ; rs232cmd.c 3254       
                      11665 ; rs232cmd.c 3255                                                               case -33:
002970                11667 _718:
                      11668 ; rs232cmd.c 3256                                                                       level = M
                            33dBm;
002970 9A78001D       11670         MOV.W   [R7],#01DH
                      11671 ; rs232cmd.c 3257                                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 181

ADDR   CODE            LINE SOURCELINE
002974 FE0B           11673         BR      _752
                      11674 ; rs232cmd.c 3258       
                      11675 ; rs232cmd.c 3259                                                               case -36:
002976                11677 _719:
                      11678 ; rs232cmd.c 3260                                                                       level = M
                            36dBm;
002976 9A78001E       11680         MOV.W   [R7],#01EH
                      11681 ; rs232cmd.c 3261                                                                       break;
00297A FE08           11683         BR      _752
                      11684 ; rs232cmd.c 3262       
                      11685 ; rs232cmd.c 3263                                                               default:
00297C                11687 _720:
                      11688 ; rs232cmd.c 3264                                                                       SCPIError
                             = DataOutOfRange;
00297C 964842rr       11690         MOV.B   ES,#SEG( _SCPIError )
002980 9908rrrr       11691         MOV.W   R0,#SOF( _SCPIError )
002984 9A080021       11692         MOV.W   [R0],#021H
                      11693 ; rs232cmd.c 3265                                                                       return;
002988 FE0D           11695         BR      _760
00298A                11697 _721:
00298A BA71           11699         MOV.W   [R7],#01H
                      11700 ; rs232cmd.c 3266                                                       }
                      11701 ; rs232cmd.c 3267                                               }
                      11702 ; rs232cmd.c 3268                                       }
00298C                11704 _752:
                      11705 ; rs232cmd.c 3269       
                      11706 ; rs232cmd.c 3270                                       if ( SetAudioLevel( AnalogAudio, level) =
                            = FAIL)
00298C B900           11708         MOV.W   R0,#00H
00298E 8A17           11709         MOV.W   R1,[R7]
                      11710         CALL    _SetAudioLevel
002990 C4rrrrrr       +11710 ;       FCALL   _SetAudioLevel
002994 6900           11711         OR.W    R0,R0
002996 F206           11712         BNE     _760
                      11713 ; rs232cmd.c 3271                                               SCPIError = ExecErr;
002998 964842rr       11715         MOV.B   ES,#SEG( _SCPIError )
00299C 9908rrrr       11716         MOV.W   R0,#SOF( _SCPIError )
0029A0 9A08001D       11717         MOV.W   [R0],#01DH
                      11718 ; rs232cmd.c 3272                               }
                      11719 ; rs232cmd.c 3273                       }
                      11720 ; rs232cmd.c 3274               }
                      11721 ; rs232cmd.c 3275       }
0029A4                11723 _760:
0029A4 A972           11724         ADDS.W  R7,#02H
0029A6 2F30           11726         POP.W   R4, R5
0029A8 D680           11728         RET
                      11731 ; rs232cmd.c 3276       
                      11732 ; rs232cmd.c 3277       /************************************************************************
                            **/
                      11733 ; rs232cmd.c 3278       /* AudioGenAnalogClick                                                   
                                                                                                                        RS232
                            CMD.C */
                      11734 ; rs232cmd.c 3279       
                      11735 ; rs232cmd.c 3280       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      11736 ; rs232cmd.c 3281       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      11737 ; rs232cmd.c 3282       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 182

ADDR   CODE            LINE SOURCELINE
                      11738 ; rs232cmd.c 3283       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      11739 ; rs232cmd.c 3284       
                      11740 ; rs232cmd.c 3285       
                      11741 ; rs232cmd.c 3286       
                      11742 ; rs232cmd.c 3287       /************************************************************************
                            **/
                      11743 ; rs232cmd.c 3288       void AudioGenAnalogClick( void)
                      11744 ; rs232cmd.c 3289       {
                      11745         ALIGN   1
                      11747         PUBLIC  _AudioGenAnalogClick
0029AA                11748 _AudioGenAnalogClick:
0029AA A97E           11752         ADDS.W  R7,#0EH
                      11755 ; rs232cmd.c 3290               int click;
                      11756 ; rs232cmd.c 3291       
                      11757 ; rs232cmd.c 3292               if ( CmdExecute && !SCPIError)
0029AC 964842rr       11759         MOV.B   ES,#SEG( _CmdExecute )
0029B0 9908rrrr       11760         MOV.W   R0,#SOF( _CmdExecute )
0029B4 8200           11761         MOV.B   R0L,[R0]
0029B6 F363           11762         BEQ     _779
0029B8 964842rr       11763         MOV.B   ES,#SEG( _SCPIError )
0029BC 9908rrrr       11764         MOV.W   R0,#SOF( _SCPIError )
0029C0 8A00           11765         MOV.W   R0,[R0]
0029C2 F25D           11766         BNE     _779
                      11767 ; rs232cmd.c 3293               {
                      11768 ; rs232cmd.c 3294                       if ( CmdRequest)
0029C4 964842rr       11770         MOV.B   ES,#SEG( _CmdRequest )
0029C8 9908rrrr       11771         MOV.W   R0,#SOF( _CmdRequest )
0029CC 8200           11772         MOV.B   R0L,[R0]
0029CE F31C           11773         BEQ     _768
                      11774 ; rs232cmd.c 3295                       {
                      11775 ; rs232cmd.c 3296                               if ( ParCnt)
0029D0 964842rr       11777         MOV.B   ES,#SEG( _ParCnt )
0029D4 9908rrrr       11778         MOV.W   R0,#SOF( _ParCnt )
0029D8 8200           11779         MOV.B   R0L,[R0]
0029DA F306           11780         BEQ     _767
                      11781 ; rs232cmd.c 3297                                       SCPIError = ParNotAllowed;
0029DC 964842rr       11783         MOV.B   ES,#SEG( _SCPIError )
0029E0 9908rrrr       11784         MOV.W   R0,#SOF( _SCPIError )
0029E4 BA06           11785         MOV.W   [R0],#06H
0029E6 FE4B           11786         BR      _779
0029E6 FE4B           11786         BR      _779
0029E8                11787 _767:
                      11788 ; rs232cmd.c 3298                               else
                      11789 ; rs232cmd.c 3299                                       rs232printf( 6, "%d\n", AudioSetup[Analog
                            Audio].Click);
0029E8 B906           11791         MOV.W   R0,#06H
0029EA 964842rr       11792         MOV.B   ES,#SEG( _AudioSetup+12 )
0029EE 9918rrrr       11793         MOV.W   R1,#SOF( _AudioSetup+12 )
0029F2 8A11           11794         MOV.W   R1,[R1]
0029F4 0F02           11795         PUSH.W  R1
0029F6 9938rrrr       11797         MOV.W   R3,#SEG( _9 )
0029FA 9928rrrr       11798         MOV.W   R2,#SOF( _9 )
0029FE 0F0C           11799         PUSH.W  R2, R3
                      11801         CALL    _rs232printf
002A00 C4rrrrrr       +11801 ;       FCALL   _rs232printf
002A04 A976           11802         ADDS.W  R7,#06H
                      11804 ; rs232cmd.c 3300                       }
002A06 FE3B           11806         BR      _779
002A06 FE3B           11806         BR      _779
002A08                11807 _768:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 183

ADDR   CODE            LINE SOURCELINE
                      11808 ; rs232cmd.c 3301                       else
                      11809 ; rs232cmd.c 3302                       {
                      11810 ; rs232cmd.c 3303                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
002A08 964842rr       11812         MOV.B   ES,#SEG( _ParCnt )
002A0C 9908rrrr       11813         MOV.W   R0,#SOF( _ParCnt )
002A10 8200           11814         MOV.B   R0L,[R0]
002A12 910401         11815         CMP.B   R0L,#01H
002A15 F215           11816         BNE     _769
002A17 9918rrrr       11817         MOV.W   R1,#SEG( _Cmd )
002A1B 9908rrrr       11818         MOV.W   R0,#SOF( _Cmd )
002A1F 9168rr         11819         MOV.B   R3L,#SEG( __lc_bs )
002A22 7177           11820         XOR.B   R3H,R3H
002A24 8927           11821         MOV.W   R2,R7
002A26 0F0C           11822         PUSH.W  R2, R3
002A28 9938rrrr       11824         MOV.W   R3,#SEG( _10 )
002A2C 9928rrrr       11825         MOV.W   R2,#SOF( _10 )
002A30 0F0C           11826         PUSH.W  R2, R3
                      11828         CALL    _sscanf
002A32 C4rrrrrr       +11828 ;       FCALL   _sscanf
002A36 99700008       11829         ADD.W   R7,#08H
002A3A 99040001       11831         CMP.W   R0,#01H
002A3E F306           11832         BEQ     _770
002A3E F306           11832         BEQ     _770
002A40                11833 _769:
                      11834 ; rs232cmd.c 3304                                       SCPIError = SyntaxErr;
002A40 964842rr       11836         MOV.B   ES,#SEG( _SCPIError )
002A44 9908rrrr       11837         MOV.W   R0,#SOF( _SCPIError )
002A48 BA03           11838         MOV.W   [R0],#03H
002A4A FE19           11839         BR      _779
002A4A FE19           11839         BR      _779
002A4C                11840 _770:
                      11841 ; rs232cmd.c 3305                               else {
                      11842 ; rs232cmd.c 3306                                       if (( click != click1s) && ( click != cli
                            ck3s))
002A4C 9A740001       11844         CMP.W   [R7],#01H
002A50 F30A           11845         BEQ     _772
002A52 9A740003       11846         CMP.W   [R7],#03H
002A56 F307           11847         BEQ     _772
                      11848 ; rs232cmd.c 3307                                               SCPIError = DataOutOfRange;
002A58 964842rr       11850         MOV.B   ES,#SEG( _SCPIError )
002A5C 9908rrrr       11851         MOV.W   R0,#SOF( _SCPIError )
002A60 9A080021       11852         MOV.W   [R0],#021H
002A64 FE0C           11853         BR      _779
002A64 FE0C           11853         BR      _779
002A66                11854 _772:
                      11855 ; rs232cmd.c 3308                                       else
                      11856 ; rs232cmd.c 3309                                       {
                      11857 ; rs232cmd.c 3310                                               if ( SetAudioClick( AnalogAudio, 
                            click) == FAIL)
002A66 B900           11859         MOV.W   R0,#00H
002A68 8A17           11860         MOV.W   R1,[R7]
                      11861         CALL    _SetAudioClick
002A6A C4rrrrrr       +11861 ;       FCALL   _SetAudioClick
002A6E 6900           11862         OR.W    R0,R0
002A70 F206           11863         BNE     _779
                      11864 ; rs232cmd.c 3311                                                       SCPIError = ExecErr;
002A72 964842rr       11866         MOV.B   ES,#SEG( _SCPIError )
002A76 9908rrrr       11867         MOV.W   R0,#SOF( _SCPIError )
002A7A 9A08001D       11868         MOV.W   [R0],#01DH
                      11869 ; rs232cmd.c 3312                                       }
                      11870 ; rs232cmd.c 3313                               }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 184

ADDR   CODE            LINE SOURCELINE
                      11871 ; rs232cmd.c 3314                       }
                      11872 ; rs232cmd.c 3315               }
002A7E                11874 _779:
                      11875 ; rs232cmd.c 3316       }
002A7E A972           11877         ADDS.W  R7,#02H
002A80 D680           11879         RET
                      11881 ; rs232cmd.c 3317       
                      11882 ; rs232cmd.c 3318       
                      11883 ; rs232cmd.c 3319       /************************************************************************
                            **/
                      11884 ; rs232cmd.c 3320       /* AudioGenAESEBU                                                        
                                                                                                                             
                                               RS232CMD.C */
                      11885 ; rs232cmd.c 3321       
                      11886 ; rs232cmd.c 3322       /* Author:              Kim Engedahl, DEV, 000526                        
                                                                                                                             
                                  */
                      11887 ; rs232cmd.c 3323       /* Revised:             000617                                           
                                                                                                                             
                                                                                  */
                      11888 ; rs232cmd.c 3324       
                      11889 ; rs232cmd.c 3325       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      11890 ; rs232cmd.c 3326       /* Remarks:             Request only.                                    
                                                                                                                             
                                                                                  */
                      11891 ; rs232cmd.c 3327       /* Returns:       --                                                     
                                                                                                                             
                                                                                                          */
                      11892 ; rs232cmd.c 3328       
                      11893 ; rs232cmd.c 3329       /************************************************************************
                            **/
                      11894 ; rs232cmd.c 3330       void AudioGenAESEBU( void)
                      11895 ; rs232cmd.c 3331       {
                      11896         ALIGN   1
                      11898         PUBLIC  _AudioGenAESEBU
002A82                11899 _AudioGenAESEBU:
002A82 0F70           11903         PUSH.W  R4, R5, R6
                      11909 ; rs232cmd.c 3332               char code *str;
                      11910 ; rs232cmd.c 3333               int level;
                      11911 ; rs232cmd.c 3334       
                      11912 ; rs232cmd.c 3335               if ( CmdExecute && !SCPIError)
002A84 964842rr       11914         MOV.B   ES,#SEG( _CmdExecute )
002A88 9908rrrr       11915         MOV.W   R0,#SOF( _CmdExecute )
002A8C 8200           11916         MOV.B   R0L,[R0]
                      11917         BEQ     _814
002A8E F202           +11917 ;       BNE     _LG_696
002A90 D50136         +11917 ;       JMP.L   _814
002A94 D5013600       +11917 ;       JMP.L   _814
002A94                +11917 _LG_696:
002A94 964842rr       11918         MOV.B   ES,#SEG( _SCPIError )
002A98 9908rrrr       11919         MOV.W   R0,#SOF( _SCPIError )
002A9C 8A00           11920         MOV.W   R0,[R0]
                      11921         BNE     _814
002A9E F302           +11921 ;       BEQ     _LG_698
002AA0 D5012E         +11921 ;       JMP.L   _814
002AA4 D5012E00       +11921 ;       JMP.L   _814
002AA4                +11921 _LG_698:
                      11922 ; rs232cmd.c 3336               {
                      11923 ; rs232cmd.c 3337                       if ( !CmdRequest)
002AA4 964842rr       11925         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 185

ADDR   CODE            LINE SOURCELINE
002AA8 9908rrrr       11926         MOV.W   R0,#SOF( _CmdRequest )
002AAC 8200           11927         MOV.B   R0L,[R0]
002AAE F207           11928         BNE     _785
                      11929 ; rs232cmd.c 3338                                       SCPIError = SyntaxErr;
002AB0 964842rr       11931         MOV.B   ES,#SEG( _SCPIError )
002AB4 9908rrrr       11932         MOV.W   R0,#SOF( _SCPIError )
002AB8 BA03           11933         MOV.W   [R0],#03H
                      11934         BR      _814
002ABA D50121         +11934         JMP.L   _814
002ABA D5012100       +11934         JMP.L   _814
002ABE                11935 _785:
                      11937 ; rs232cmd.c 3339                       else
                      11938 ; rs232cmd.c 3340                       {
                      11939 ; rs232cmd.c 3341                               if ( ParCnt)
002ABE 964842rr       11941         MOV.B   ES,#SEG( _ParCnt )
002AC2 9908rrrr       11942         MOV.W   R0,#SOF( _ParCnt )
002AC6 8200           11943         MOV.B   R0L,[R0]
002AC8 F307           11944         BEQ     _786
                      11945 ; rs232cmd.c 3342                                       SCPIError = ParNotAllowed;
002ACA 964842rr       11947         MOV.B   ES,#SEG( _SCPIError )
002ACE 9908rrrr       11948         MOV.W   R0,#SOF( _SCPIError )
002AD2 BA06           11949         MOV.W   [R0],#06H
                      11950         BR      _814
002AD4 D50114         +11950         JMP.L   _814
002AD4 D5011400       +11950         JMP.L   _814
002AD8                11951 _786:
                      11954 ; rs232cmd.c 3343                               else
                      11955 ; rs232cmd.c 3344                               {
                      11956 ; rs232cmd.c 3345                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002AD8 964842rr       11958         MOV.B   ES,#SEG( _AudioSetup+14 )
002ADC 9908rrrr       11959         MOV.W   R0,#SOF( _AudioSetup+14 )
002AE0 8A00           11960         MOV.W   R0,[R0]
002AE2 E900000C       11961         MULU.W  R0,#0CH
002AE6 8920           11962         MOV.W   R2,R0
002AE8 B930           11963         MOVS.W  R3,#00H
002AEA 9918rrrr       11964         MOV.W   R1,#SEG( _AESEBUSystemPar )
002AEE 9908rrrr       11965         MOV.W   R0,#SOF( _AESEBUSystemPar )
002AF2 0902           11966         ADD.W   R0,R2
002AF4 1913           11967         ADDC.W  R1,R3
002AF6 862C43         11968         MOV.B   CS,R1L
002AF9 8820           11969         MOVC.W  R2,[R0+]
002AFB 99040000       11970         CMP.W   R0,#00H
002AFF F202           11971         BNE     _815
002B01 A64143         11972         ADDS.B  CS,#01H
002B01 A64143         11972         ADDS.B  CS,#01H
002B04                11973 _815:
002B04 8830           11974         MOVC.W  R3,[R0+]
002B06 8953           11975         MOV.W   R5,R3
002B08 8942           11976         MOV.W   R4,R2
                      11978 ; rs232cmd.c 3346       
                      11979 ; rs232cmd.c 3347                                       while ( *str)
002B0A 866C43         11981         MOV.B   CS,R3L
002B0D 8062           11982         MOVC.B  R3L,[R2+]
002B0F F312           11983         BEQ     _788
002B0F F31200         11983         BEQ     _788
002B12                11984 _787:
                      11985 ; rs232cmd.c 3348                                               rs232putchar( *str++);
002B12 8915           11987         MOV.W   R1,R5
002B14 8904           11988         MOV.W   R0,R4
002B16 862C43         11989         MOV.B   CS,R1L
002B19 8020           11990         MOVC.B  R1L,[R0+]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 186

ADDR   CODE            LINE SOURCELINE
002B1B 8102           11991         MOV.B   R0L,R1L
                      11992         CALL    _rs232putchar
002B1D C4rrrrrr       +11992 ;       FCALL   _rs232putchar
002B21 99400001       11993         ADD.W   R4,#01H
002B25 99510000       11994         ADDC.W  R5,#00H
002B29 8915           11998         MOV.W   R1,R5
002B2B 8904           11999         MOV.W   R0,R4
002B2D 862C43         12000         MOV.B   CS,R1L
002B30 8020           12001         MOVC.B  R1L,[R0+]
002B32 F2EF           12002         BNE     _787
002B34                12004 _788:
                      12005 ; rs232cmd.c 3349       
                      12006 ; rs232cmd.c 3350                                       rs232putchar( ',');
002B34 91082C         12008         MOV.B   R0L,#02CH
                      12009         CALL    _rs232putchar
002B37 C4rrrrrr       +12009 ;       FCALL   _rs232putchar
                      12010 ; rs232cmd.c 3351       
                      12011 ; rs232cmd.c 3352                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002B3B 964842rr       12013         MOV.B   ES,#SEG( _AudioSetup+16 )
002B3F 9908rrrr       12014         MOV.W   R0,#SOF( _AudioSetup+16 )
002B43 8A00           12015         MOV.W   R0,[R0]
002B45 E900000C       12016         MULU.W  R0,#0CH
002B49 B910           12017         MOVS.W  R1,#00H
002B4B 9958rrrr       12018         MOV.W   R5,#SEG( _AudioSignalPar )
002B4F 9948rrrr       12019         MOV.W   R4,#SOF( _AudioSignalPar )
002B53 0940           12021         ADD.W   R4,R0
002B55 1951           12022         ADDC.W  R5,R1
002B57 86AC43         12023         MOV.B   CS,R5L
002B5A 8804           12024         MOVC.W  R0,[R4+]
002B5C 99440000       12025         CMP.W   R4,#00H
002B60 F202           12026         BNE     _816
002B62 A64143         12027         ADDS.B  CS,#01H
002B62 A6414300       12027         ADDS.B  CS,#01H
002B66                12028 _816:
002B66 8814           12029         MOVC.W  R1,[R4+]
002B68 8951           12030         MOV.W   R5,R1
002B6A 8940           12031         MOV.W   R4,R0
                      12033 ; rs232cmd.c 3353       
                      12034 ; rs232cmd.c 3354                                       while ( *str)
002B6C 862C43         12036         MOV.B   CS,R1L
002B6F 8020           12037         MOVC.B  R1L,[R0+]
002B71 F312           12038         BEQ     _790
002B71 F31200         12038         BEQ     _790
002B74                12039 _789:
                      12040 ; rs232cmd.c 3355                                               rs232putchar( *str++);
002B74 8915           12042         MOV.W   R1,R5
002B76 8904           12043         MOV.W   R0,R4
002B78 862C43         12044         MOV.B   CS,R1L
002B7B 8020           12045         MOVC.B  R1L,[R0+]
002B7D 8102           12046         MOV.B   R0L,R1L
                      12047         CALL    _rs232putchar
002B7F C4rrrrrr       +12047 ;       FCALL   _rs232putchar
002B83 99400001       12048         ADD.W   R4,#01H
002B87 99510000       12049         ADDC.W  R5,#00H
002B8B 8915           12053         MOV.W   R1,R5
002B8D 8904           12054         MOV.W   R0,R4
002B8F 862C43         12055         MOV.B   CS,R1L
002B92 8020           12056         MOVC.B  R1L,[R0+]
002B94 F2EF           12057         BNE     _789
002B96                12059 _790:
002B96 91082C         12060         MOV.B   R0L,#02CH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 187

ADDR   CODE            LINE SOURCELINE
                      12061 ; rs232cmd.c 3356       
                      12062 ; rs232cmd.c 3357                                       rs232putchar( ',');
                      12064         CALL    _rs232putchar
002B99 C4rrrrrr       +12064 ;       FCALL   _rs232putchar
                      12065 ; rs232cmd.c 3358       
                      12066 ; rs232cmd.c 3359                                       str = NULL;
002B9D B950           12068         MOV.W   R5,#00H
002B9F B940           12069         MOV.W   R4,#00H
                      12072 ; rs232cmd.c 3360       
                      12073 ; rs232cmd.c 3361                                       switch ( AudioSetup[AESEBUAudio].Level)
002BA1 964842rr       12075         MOV.B   ES,#SEG( _AudioSetup+18 )
002BA5 9908rrrr       12076         MOV.W   R0,#SOF( _AudioSetup+18 )
002BA9 8A00           12077         MOV.W   R0,[R0]
002BAB 99040000       12078         CMP.W   R0,#00H
002BAF F314           12079         BEQ     _791
002BB1 99040001       12080         CMP.W   R0,#01H
002BB5 F313           12081         BEQ     _792
002BB7 99040002       12082         CMP.W   R0,#02H
002BBB F313           12083         BEQ     _793
002BBD 99040003       12084         CMP.W   R0,#03H
002BC1 F313           12085         BEQ     _794
002BC3 99040004       12086         CMP.W   R0,#04H
002BC7 F313           12087         BEQ     _795
002BC9 99040005       12088         CMP.W   R0,#05H
002BCD F313           12089         BEQ     _796
002BCF 99040006       12090         CMP.W   R0,#06H
002BD3 F313           12091         BEQ     _797
002BD5 FE15           12092         BR      _798
                      12093 ; rs232cmd.c 3362                                       {
                      12094 ; rs232cmd.c 3363                                               case M0dBFS:
002BD8                12096 _791:
                      12097 ; rs232cmd.c 3364                                                       level = 0;
002BD8 B960           12099         MOV.W   R6,#00H
                      12102 ; rs232cmd.c 3365                                                       break;
002BDA FE31           12104         BR      _807
                      12105 ; rs232cmd.c 3366       
                      12106 ; rs232cmd.c 3367                                               case M9dBFS:
002BDC                12108 _792:
                      12109 ; rs232cmd.c 3368                                                       level = -9;
002BDC 9968FFF7       12111         MOV.W   R6,#0FFF7H
                      12114 ; rs232cmd.c 3369                                                       break;
002BE0 FE2E           12116         BR      _807
                      12117 ; rs232cmd.c 3370       
                      12118 ; rs232cmd.c 3371                                               case M12dBFS:
002BE2                12120 _793:
                      12121 ; rs232cmd.c 3372                                                       level = -12;
002BE2 9968FFF4       12123         MOV.W   R6,#0FFF4H
                      12126 ; rs232cmd.c 3373                                                       break;
002BE6 FE2B           12128         BR      _807
                      12129 ; rs232cmd.c 3374       
                      12130 ; rs232cmd.c 3375                                               case M15dBFS:
002BE8                12132 _794:
                      12133 ; rs232cmd.c 3376                                                       level = -15;
002BE8 9968FFF1       12135         MOV.W   R6,#0FFF1H
                      12138 ; rs232cmd.c 3377                                                       break;
002BEC FE28           12140         BR      _807
                      12141 ; rs232cmd.c 3378       
                      12142 ; rs232cmd.c 3379                                               case M16dBFS:
002BEE                12144 _795:
                      12145 ; rs232cmd.c 3380                                                       level = -16;
002BEE 9968FFF0       12147         MOV.W   R6,#0FFF0H
                      12150 ; rs232cmd.c 3381                                                       break;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 188

ADDR   CODE            LINE SOURCELINE
002BF2 FE25           12152         BR      _807
                      12153 ; rs232cmd.c 3382       
                      12154 ; rs232cmd.c 3383                                               case M18dBFS:
002BF4                12156 _796:
                      12157 ; rs232cmd.c 3384                                                       level = -18;
002BF4 9968FFEE       12159         MOV.W   R6,#0FFEEH
                      12162 ; rs232cmd.c 3385                                                       break;
002BF8 FE22           12164         BR      _807
                      12165 ; rs232cmd.c 3386       
                      12166 ; rs232cmd.c 3387                                               case M20dBFS:
002BFA                12168 _797:
                      12169 ; rs232cmd.c 3388                                                       level = -20;
002BFA 9968FFEC       12171         MOV.W   R6,#0FFECH
                      12174 ; rs232cmd.c 3389                                                       break;
002BFE FE1F           12176         BR      _807
                      12177 ; rs232cmd.c 3390       
                      12178 ; rs232cmd.c 3391                                               default:
002C00                12180 _798:
                      12181 ; rs232cmd.c 3392                                                       str = SILENCEParTxt;
002C00 9958rrrr       12183         MOV.W   R5,#SEG( _SILENCEParTxt )
002C04 9948rrrr       12184         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12187 ; rs232cmd.c 3393       
                      12188 ; rs232cmd.c 3394                                                       while ( *str)
002C08 8915           12190         MOV.W   R1,R5
002C0A 8904           12191         MOV.W   R0,R4
002C0C 862C43         12192         MOV.B   CS,R1L
002C0F 8020           12193         MOVC.B  R1L,[R0+]
002C11 F312           12194         BEQ     _800
002C11 F31200         12194         BEQ     _800
002C14                12195 _799:
                      12196 ; rs232cmd.c 3395                                                               rs232putchar( *st
                            r++);
002C14 8915           12198         MOV.W   R1,R5
002C16 8904           12199         MOV.W   R0,R4
002C18 862C43         12200         MOV.B   CS,R1L
002C1B 8020           12201         MOVC.B  R1L,[R0+]
002C1D 8102           12202         MOV.B   R0L,R1L
                      12203         CALL    _rs232putchar
002C1F C4rrrrrr       +12203 ;       FCALL   _rs232putchar
002C23 99400001       12204         ADD.W   R4,#01H
002C27 99510000       12205         ADDC.W  R5,#00H
002C2B 8915           12209         MOV.W   R1,R5
002C2D 8904           12210         MOV.W   R0,R4
002C2F 862C43         12211         MOV.B   CS,R1L
002C32 8020           12212         MOVC.B  R1L,[R0+]
002C34 F2EF           12213         BNE     _799
002C36                12215 _800:
002C36 91082C         12216         MOV.B   R0L,#02CH
                      12217 ; rs232cmd.c 3396       
                      12218 ; rs232cmd.c 3397                                                       rs232putchar( ',');
                      12220         CALL    _rs232putchar
002C39 C4rrrrrr       +12220 ;       FCALL   _rs232putchar
                      12221 ; rs232cmd.c 3398                                                       break;
                      12222 ; rs232cmd.c 3399                                               }
002C3E                12224 _807:
                      12225 ; rs232cmd.c 3400       
                      12226 ; rs232cmd.c 3401                                       if ( str == NULL)
002C3E 6954           12228         OR.W    R5,R4
002C40 F20A           12229         BNE     _808
                      12230 ; rs232cmd.c 3402                                               rs232printf( 6, "%d,", level);
002C42 B906           12232         MOV.W   R0,#06H
002C44 0F40           12233         PUSH.W  R6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 189

ADDR   CODE            LINE SOURCELINE
002C46 9938rrrr       12236         MOV.W   R3,#SEG( _532 )
002C4A 9928rrrr       12237         MOV.W   R2,#SOF( _532 )
002C4E 0F0C           12238         PUSH.W  R2, R3
                      12240         CALL    _rs232printf
002C50 C4rrrrrr       +12240 ;       FCALL   _rs232printf
002C54 A976           12241         ADDS.W  R7,#06H
002C56                12243 _808:
                      12244 ; rs232cmd.c 3403       
                      12245 ; rs232cmd.c 3404                                       rs232printf( 6, "%.1f,", AudioSetup[AESEB
                            UAudio].Timing);
002C56 964842rr       12247         MOV.B   ES,#SEG( _AudioSetup+20 )
002C5A 9918rrrr       12248         MOV.W   R1,#SOF( _AudioSetup+20 )
002C5E 8B01           12249         MOV.W   R0,[R1+]
002C60 8A11           12250         MOV.W   R1,[R1]
002C62 C4rrrrrr       12251         FCALL   __SPF2DPF
002C66 0F0F           12252         PUSH.W  R0, R1, R2, R3
002C68 9918rrrr       12254         MOV.W   R1,#SEG( _784 )
002C6C 9908rrrr       12255         MOV.W   R0,#SOF( _784 )
002C70 0F03           12256         PUSH.W  R0, R1
002C72 B906           12258         MOV.W   R0,#06H
                      12259         CALL    _rs232printf
002C74 C4rrrrrr       +12259 ;       FCALL   _rs232printf
002C78 9970000C       12260         ADD.W   R7,#0CH
                      12262 ; rs232cmd.c 3405       
                      12263 ; rs232cmd.c 3406                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
002C7C 964842rr       12265         MOV.B   ES,#SEG( _AudioSetup+24 )
002C80 9908rrrr       12266         MOV.W   R0,#SOF( _AudioSetup+24 )
002C84 8A00           12267         MOV.W   R0,[R0]
002C86 E900000C       12268         MULU.W  R0,#0CH
002C8A 8920           12269         MOV.W   R2,R0
002C8C B930           12270         MOVS.W  R3,#00H
002C8E 9918rrrr       12271         MOV.W   R1,#SEG( _AudioFrequencyPar )
002C92 9908rrrr       12272         MOV.W   R0,#SOF( _AudioFrequencyPar )
002C96 0902           12273         ADD.W   R0,R2
002C98 1913           12274         ADDC.W  R1,R3
002C9A 862C43         12275         MOV.B   CS,R1L
002C9D 8840           12276         MOVC.W  R4,[R0+]
002C9F 99040000       12277         CMP.W   R0,#00H
002CA3 F202           12278         BNE     _817
002CA5 A64143         12279         ADDS.B  CS,#01H
002CA5 A64143         12279         ADDS.B  CS,#01H
002CA8                12280 _817:
002CA8 8850           12281         MOVC.W  R5,[R0+]
                      12284 ; rs232cmd.c 3407       
                      12285 ; rs232cmd.c 3408                                       while ( *str)
002CAA 8915           12287         MOV.W   R1,R5
002CAC 8904           12288         MOV.W   R0,R4
002CAE 862C43         12289         MOV.B   CS,R1L
002CB1 8020           12290         MOVC.B  R1L,[R0+]
002CB3 F312           12291         BEQ     _810
002CB3 F31200         12291         BEQ     _810
002CB6                12292 _809:
                      12293 ; rs232cmd.c 3409                                               rs232putchar( *str++);
002CB6 8915           12295         MOV.W   R1,R5
002CB8 8904           12296         MOV.W   R0,R4
002CBA 862C43         12297         MOV.B   CS,R1L
002CBD 8020           12298         MOVC.B  R1L,[R0+]
002CBF 8102           12299         MOV.B   R0L,R1L
                      12300         CALL    _rs232putchar
002CC1 C4rrrrrr       +12300 ;       FCALL   _rs232putchar
002CC5 99400001       12301         ADD.W   R4,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 190

ADDR   CODE            LINE SOURCELINE
002CC9 99510000       12302         ADDC.W  R5,#00H
002CCD 8915           12306         MOV.W   R1,R5
002CCF 8904           12307         MOV.W   R0,R4
002CD1 862C43         12308         MOV.B   CS,R1L
002CD4 8020           12309         MOVC.B  R1L,[R0+]
002CD6 F2EF           12310         BNE     _809
002CD8                12312 _810:
                      12313 ; rs232cmd.c 3410       
                      12314 ; rs232cmd.c 3411                                       rs232putchar( ',');
002CD8 91082C         12316         MOV.B   R0L,#02CH
                      12317         CALL    _rs232putchar
002CDB C4rrrrrr       +12317 ;       FCALL   _rs232putchar
                      12318 ; rs232cmd.c 3412       
                      12319 ; rs232cmd.c 3413                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
002CDF 964842rr       12321         MOV.B   ES,#SEG( _AudioSetup+26 )
002CE3 9908rrrr       12322         MOV.W   R0,#SOF( _AudioSetup+26 )
002CE7 8A00           12323         MOV.W   R0,[R0]
002CE9 0F01           12324         PUSH.W  R0
002CEB 9918rrrr       12326         MOV.W   R1,#SEG( _9 )
002CEF 9908rrrr       12327         MOV.W   R0,#SOF( _9 )
002CF3 0F03           12328         PUSH.W  R0, R1
002CF5 B906           12330         MOV.W   R0,#06H
                      12331         CALL    _rs232printf
002CF7 C4rrrrrr       +12331 ;       FCALL   _rs232printf
002CFB A976           12332         ADDS.W  R7,#06H
                      12334 ; rs232cmd.c 3414                               }
                      12335 ; rs232cmd.c 3415                       }
                      12336 ; rs232cmd.c 3416               }
002CFE                12338 _814:
                      12339 ; rs232cmd.c 3417       }
002CFE 2F70           12341         POP.W   R4, R5, R6
002D00 D680           12343         RET
                      12346 ; rs232cmd.c 3418       
                      12347 ; rs232cmd.c 3419       /************************************************************************
                            **/
                      12348 ; rs232cmd.c 3420       /* AudioGenAESEBUSystem                                                  
                                                                                                                        RS232
                            CMD.C */
                      12349 ; rs232cmd.c 3421       
                      12350 ; rs232cmd.c 3422       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      12351 ; rs232cmd.c 3423       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      12352 ; rs232cmd.c 3424       
                      12353 ; rs232cmd.c 3425       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      12354 ; rs232cmd.c 3426       
                      12355 ; rs232cmd.c 3427       
                      12356 ; rs232cmd.c 3428       
                      12357 ; rs232cmd.c 3429       /************************************************************************
                            **/
                      12358 ; rs232cmd.c 3430       void AudioGenAESEBUSystem( void)
                      12359 ; rs232cmd.c 3431       {
                      12360         ALIGN   1
                      12362         PUBLIC  _AudioGenAESEBUSystem
002D02                12363 _AudioGenAESEBUSystem:
002D02 0F30           12367         PUSH.W  R4, R5
                      12373 ; rs232cmd.c 3432               int system;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 191

ADDR   CODE            LINE SOURCELINE
                      12374 ; rs232cmd.c 3433               char code *str;
                      12375 ; rs232cmd.c 3434       
                      12376 ; rs232cmd.c 3435               if ( CmdExecute && !SCPIError)
002D04 964842rr       12378         MOV.B   ES,#SEG( _CmdExecute )
002D08 9908rrrr       12379         MOV.W   R0,#SOF( _CmdExecute )
002D0C 8200           12380         MOV.B   R0L,[R0]
002D0E F379           12381         BEQ     _830
002D10 964842rr       12382         MOV.B   ES,#SEG( _SCPIError )
002D14 9908rrrr       12383         MOV.W   R0,#SOF( _SCPIError )
002D18 8A00           12384         MOV.W   R0,[R0]
002D1A F273           12385         BNE     _830
                      12386 ; rs232cmd.c 3436               {
                      12387 ; rs232cmd.c 3437                       if ( CmdRequest)
002D1C 964842rr       12389         MOV.B   ES,#SEG( _CmdRequest )
002D20 9908rrrr       12390         MOV.W   R0,#SOF( _CmdRequest )
002D24 8200           12391         MOV.B   R0L,[R0]
002D26 F33F           12392         BEQ     _821
                      12393 ; rs232cmd.c 3438                       {
                      12394 ; rs232cmd.c 3439                               if ( ParCnt)
002D28 964842rr       12396         MOV.B   ES,#SEG( _ParCnt )
002D2C 9908rrrr       12397         MOV.W   R0,#SOF( _ParCnt )
002D30 8200           12398         MOV.B   R0L,[R0]
002D32 F306           12399         BEQ     _818
                      12400 ; rs232cmd.c 3440                                       SCPIError = ParNotAllowed;
002D34 964842rr       12402         MOV.B   ES,#SEG( _SCPIError )
002D38 9908rrrr       12403         MOV.W   R0,#SOF( _SCPIError )
002D3C BA06           12404         MOV.W   [R0],#06H
002D3E FE61           12405         BR      _830
002D3E FE61           12405         BR      _830
002D40                12406 _818:
                      12407 ; rs232cmd.c 3441                               else
                      12408 ; rs232cmd.c 3442                               {
                      12409 ; rs232cmd.c 3443                                       str = AESEBUSystemPar[AudioSetup[AESEBUAu
                            dio].System].LongName;
002D40 964842rr       12411         MOV.B   ES,#SEG( _AudioSetup+14 )
002D44 9908rrrr       12412         MOV.W   R0,#SOF( _AudioSetup+14 )
002D48 8A00           12413         MOV.W   R0,[R0]
002D4A E900000C       12414         MULU.W  R0,#0CH
002D4E 8920           12415         MOV.W   R2,R0
002D50 B930           12416         MOVS.W  R3,#00H
002D52 9918rrrr       12417         MOV.W   R1,#SEG( _AESEBUSystemPar )
002D56 9908rrrr       12418         MOV.W   R0,#SOF( _AESEBUSystemPar )
002D5A 0902           12419         ADD.W   R0,R2
002D5C 1913           12420         ADDC.W  R1,R3
002D5E 862C43         12421         MOV.B   CS,R1L
002D61 8820           12422         MOVC.W  R2,[R0+]
002D63 99040000       12423         CMP.W   R0,#00H
002D67 F202           12424         BNE     _831
002D69 A64143         12425         ADDS.B  CS,#01H
002D69 A64143         12425         ADDS.B  CS,#01H
002D6C                12426 _831:
002D6C 8830           12427         MOVC.W  R3,[R0+]
002D6E 8953           12428         MOV.W   R5,R3
002D70 8942           12429         MOV.W   R4,R2
                      12431 ; rs232cmd.c 3444       
                      12432 ; rs232cmd.c 3445                                       while ( *str)
002D72 866C43         12434         MOV.B   CS,R3L
002D75 8062           12435         MOVC.B  R3L,[R2+]
002D77 F312           12436         BEQ     _820
002D77 F31200         12436         BEQ     _820
002D7A                12437 _819:
                      12438 ; rs232cmd.c 3446                                               rs232putchar( *str++);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 192

ADDR   CODE            LINE SOURCELINE
002D7A 8915           12440         MOV.W   R1,R5
002D7C 8904           12441         MOV.W   R0,R4
002D7E 862C43         12442         MOV.B   CS,R1L
002D81 8020           12443         MOVC.B  R1L,[R0+]
002D83 8102           12444         MOV.B   R0L,R1L
                      12445         CALL    _rs232putchar
002D85 C4rrrrrr       +12445 ;       FCALL   _rs232putchar
002D89 99400001       12446         ADD.W   R4,#01H
002D8D 99510000       12447         ADDC.W  R5,#00H
002D91 8915           12451         MOV.W   R1,R5
002D93 8904           12452         MOV.W   R0,R4
002D95 862C43         12453         MOV.B   CS,R1L
002D98 8020           12454         MOVC.B  R1L,[R0+]
002D9A F2EF           12455         BNE     _819
002D9C                12457 _820:
                      12458 ; rs232cmd.c 3447       
                      12459 ; rs232cmd.c 3448                                       rs232putchar('\n');
002D9C 91080A         12461         MOV.B   R0L,#0AH
                      12462         CALL    _rs232putchar
002D9F C4rrrrrr       +12462 ;       FCALL   _rs232putchar
                      12463 ; rs232cmd.c 3449                               }
                      12464 ; rs232cmd.c 3450                       }
002DA3 FE2F           12466         BR      _830
002DA3 FE2F00         12466         BR      _830
002DA6                12467 _821:
                      12468 ; rs232cmd.c 3451                       else
                      12469 ; rs232cmd.c 3452                       {
                      12470 ; rs232cmd.c 3453                               if ( ParCnt != 1)
002DA6 964842rr       12472         MOV.B   ES,#SEG( _ParCnt )
002DAA 9908rrrr       12473         MOV.W   R0,#SOF( _ParCnt )
002DAE 8200           12474         MOV.B   R0L,[R0]
002DB0 910401         12475         CMP.B   R0L,#01H
002DB3 F307           12476         BEQ     _822
                      12477 ; rs232cmd.c 3454                                       SCPIError = SyntaxErr;
002DB5 964842rr       12479         MOV.B   ES,#SEG( _SCPIError )
002DB9 9908rrrr       12480         MOV.W   R0,#SOF( _SCPIError )
002DBD BA03           12481         MOV.W   [R0],#03H
002DBF FE21           12482         BR      _830
002DBF FE2100         12482         BR      _830
002DC2                12483 _822:
                      12484 ; rs232cmd.c 3455                               else
                      12485 ; rs232cmd.c 3456                               {
                      12486 ; rs232cmd.c 3457                                       system = FindParameter( Cmd, AESEBUSystem
                            Par);
002DC2 9918rrrr       12488         MOV.W   R1,#SEG( _Cmd )
002DC6 9908rrrr       12489         MOV.W   R0,#SOF( _Cmd )
002DCA 9938rrrr       12490         MOV.W   R3,#SEG( _AESEBUSystemPar )
002DCE 9928rrrr       12491         MOV.W   R2,#SOF( _AESEBUSystemPar )
002DD2 C519A1         12492         CALL    _FindParameter
                      12494 ; rs232cmd.c 3458               
                      12495 ; rs232cmd.c 3459                                       if ( system > -1)
002DD5 8910           12497         MOV.W   R1,R0
002DD7 9914FFFF       12498         CMP.W   R1,#0FFFFH
002DDB FD0D           12501         BLE     _823
                      12502 ; rs232cmd.c 3460                                       {
                      12503 ; rs232cmd.c 3461                                               if ( SetAudioSystem( AESEBUAudio,
                             system) == FAIL)
002DDD B901           12505         MOV.W   R0,#01H
                      12506         CALL    _SetAudioSystem
002DDF C4rrrrrr       +12506 ;       FCALL   _SetAudioSystem
002DE3 6900           12508         OR.W    R0,R0
002DE5 F20E           12509         BNE     _830
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 193

ADDR   CODE            LINE SOURCELINE
                      12510 ; rs232cmd.c 3462                                                       SCPIError = ExecErr;
002DE7 964842rr       12512         MOV.B   ES,#SEG( _SCPIError )
002DEB 9908rrrr       12513         MOV.W   R0,#SOF( _SCPIError )
002DEF 9A08001D       12514         MOV.W   [R0],#01DH
                      12515 ; rs232cmd.c 3463                                       }
002DF3 FE07           12517         BR      _830
002DF3 FE0700         12517         BR      _830
002DF6                12518 _823:
                      12519 ; rs232cmd.c 3464                                       else
                      12520 ; rs232cmd.c 3465                                               SCPIError = DataOutOfRange;
002DF6 964842rr       12522         MOV.B   ES,#SEG( _SCPIError )
002DFA 9908rrrr       12523         MOV.W   R0,#SOF( _SCPIError )
002DFE 9A080021       12524         MOV.W   [R0],#021H
                      12525 ; rs232cmd.c 3466                               }
                      12526 ; rs232cmd.c 3467                       }
                      12527 ; rs232cmd.c 3468               }
002E02                12529 _830:
                      12530 ; rs232cmd.c 3469       }
002E02 2F30           12532         POP.W   R4, R5
002E04 D680           12534         RET
                      12537 ; rs232cmd.c 3470       
                      12538 ; rs232cmd.c 3471       /************************************************************************
                            **/
                      12539 ; rs232cmd.c 3472       /* AudioGenAESEBUSignal                                                  
                                                                                                                        RS232
                            CMD.C */
                      12540 ; rs232cmd.c 3473       
                      12541 ; rs232cmd.c 3474       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      12542 ; rs232cmd.c 3475       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      12543 ; rs232cmd.c 3476       
                      12544 ; rs232cmd.c 3477       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      12545 ; rs232cmd.c 3478       
                      12546 ; rs232cmd.c 3479       
                      12547 ; rs232cmd.c 3480       
                      12548 ; rs232cmd.c 3481       /************************************************************************
                            **/
                      12549 ; rs232cmd.c 3482       void AudioGenAESEBUSignal( void)
                      12550 ; rs232cmd.c 3483       {
                      12551         ALIGN   1
                      12553         PUBLIC  _AudioGenAESEBUSignal
002E06                12554 _AudioGenAESEBUSignal:
002E06 0F30           12558         PUSH.W  R4, R5
                      12564 ; rs232cmd.c 3484               int signal;
                      12565 ; rs232cmd.c 3485               char code *str;
                      12566 ; rs232cmd.c 3486       
                      12567 ; rs232cmd.c 3487               if ( CmdExecute && !SCPIError)
002E08 964842rr       12569         MOV.B   ES,#SEG( _CmdExecute )
002E0C 9908rrrr       12570         MOV.W   R0,#SOF( _CmdExecute )
002E10 8200           12571         MOV.B   R0L,[R0]
002E12 F379           12572         BEQ     _846
002E14 964842rr       12573         MOV.B   ES,#SEG( _SCPIError )
002E18 9908rrrr       12574         MOV.W   R0,#SOF( _SCPIError )
002E1C 8A00           12575         MOV.W   R0,[R0]
002E1E F273           12576         BNE     _846
                      12577 ; rs232cmd.c 3488               {
                      12578 ; rs232cmd.c 3489                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 194

ADDR   CODE            LINE SOURCELINE
002E20 964842rr       12580         MOV.B   ES,#SEG( _CmdRequest )
002E24 9908rrrr       12581         MOV.W   R0,#SOF( _CmdRequest )
002E28 8200           12582         MOV.B   R0L,[R0]
002E2A F33F           12583         BEQ     _837
                      12584 ; rs232cmd.c 3490                       {
                      12585 ; rs232cmd.c 3491                               if ( ParCnt)
002E2C 964842rr       12587         MOV.B   ES,#SEG( _ParCnt )
002E30 9908rrrr       12588         MOV.W   R0,#SOF( _ParCnt )
002E34 8200           12589         MOV.B   R0L,[R0]
002E36 F306           12590         BEQ     _834
                      12591 ; rs232cmd.c 3492                                       SCPIError = ParNotAllowed;
002E38 964842rr       12593         MOV.B   ES,#SEG( _SCPIError )
002E3C 9908rrrr       12594         MOV.W   R0,#SOF( _SCPIError )
002E40 BA06           12595         MOV.W   [R0],#06H
002E42 FE61           12596         BR      _846
002E42 FE61           12596         BR      _846
002E44                12597 _834:
                      12598 ; rs232cmd.c 3493                               else
                      12599 ; rs232cmd.c 3494                               {
                      12600 ; rs232cmd.c 3495                                       str = AudioSignalPar[AudioSetup[AESEBUAud
                            io].Signal].LongName;
002E44 964842rr       12602         MOV.B   ES,#SEG( _AudioSetup+16 )
002E48 9908rrrr       12603         MOV.W   R0,#SOF( _AudioSetup+16 )
002E4C 8A00           12604         MOV.W   R0,[R0]
002E4E E900000C       12605         MULU.W  R0,#0CH
002E52 8920           12606         MOV.W   R2,R0
002E54 B930           12607         MOVS.W  R3,#00H
002E56 9918rrrr       12608         MOV.W   R1,#SEG( _AudioSignalPar )
002E5A 9908rrrr       12609         MOV.W   R0,#SOF( _AudioSignalPar )
002E5E 0902           12610         ADD.W   R0,R2
002E60 1913           12611         ADDC.W  R1,R3
002E62 862C43         12612         MOV.B   CS,R1L
002E65 8820           12613         MOVC.W  R2,[R0+]
002E67 99040000       12614         CMP.W   R0,#00H
002E6B F202           12615         BNE     _847
002E6D A64143         12616         ADDS.B  CS,#01H
002E6D A64143         12616         ADDS.B  CS,#01H
002E70                12617 _847:
002E70 8830           12618         MOVC.W  R3,[R0+]
002E72 8953           12619         MOV.W   R5,R3
002E74 8942           12620         MOV.W   R4,R2
                      12622 ; rs232cmd.c 3496       
                      12623 ; rs232cmd.c 3497                                       while ( *str)
002E76 866C43         12625         MOV.B   CS,R3L
002E79 8062           12626         MOVC.B  R3L,[R2+]
002E7B F312           12627         BEQ     _836
002E7B F31200         12627         BEQ     _836
002E7E                12628 _835:
                      12629 ; rs232cmd.c 3498                                               rs232putchar( *str++);
002E7E 8915           12631         MOV.W   R1,R5
002E80 8904           12632         MOV.W   R0,R4
002E82 862C43         12633         MOV.B   CS,R1L
002E85 8020           12634         MOVC.B  R1L,[R0+]
002E87 8102           12635         MOV.B   R0L,R1L
                      12636         CALL    _rs232putchar
002E89 C4rrrrrr       +12636 ;       FCALL   _rs232putchar
002E8D 99400001       12637         ADD.W   R4,#01H
002E91 99510000       12638         ADDC.W  R5,#00H
002E95 8915           12642         MOV.W   R1,R5
002E97 8904           12643         MOV.W   R0,R4
002E99 862C43         12644         MOV.B   CS,R1L
002E9C 8020           12645         MOVC.B  R1L,[R0+]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 195

ADDR   CODE            LINE SOURCELINE
002E9E F2EF           12646         BNE     _835
002EA0                12648 _836:
                      12649 ; rs232cmd.c 3499       
                      12650 ; rs232cmd.c 3500                                       rs232putchar('\n');
002EA0 91080A         12652         MOV.B   R0L,#0AH
                      12653         CALL    _rs232putchar
002EA3 C4rrrrrr       +12653 ;       FCALL   _rs232putchar
                      12654 ; rs232cmd.c 3501                               }
                      12655 ; rs232cmd.c 3502                       }
002EA7 FE2F           12657         BR      _846
002EA7 FE2F00         12657         BR      _846
002EAA                12658 _837:
                      12659 ; rs232cmd.c 3503                       else
                      12660 ; rs232cmd.c 3504                       {
                      12661 ; rs232cmd.c 3505                               if ( ParCnt != 1)
002EAA 964842rr       12663         MOV.B   ES,#SEG( _ParCnt )
002EAE 9908rrrr       12664         MOV.W   R0,#SOF( _ParCnt )
002EB2 8200           12665         MOV.B   R0L,[R0]
002EB4 910401         12666         CMP.B   R0L,#01H
002EB7 F307           12667         BEQ     _838
                      12668 ; rs232cmd.c 3506                                       SCPIError = SyntaxErr;
002EB9 964842rr       12670         MOV.B   ES,#SEG( _SCPIError )
002EBD 9908rrrr       12671         MOV.W   R0,#SOF( _SCPIError )
002EC1 BA03           12672         MOV.W   [R0],#03H
002EC3 FE21           12673         BR      _846
002EC3 FE2100         12673         BR      _846
002EC6                12674 _838:
                      12675 ; rs232cmd.c 3507                               else
                      12676 ; rs232cmd.c 3508                               {
                      12677 ; rs232cmd.c 3509                                       signal = FindParameter( Cmd, AudioSignalP
                            ar);
002EC6 9918rrrr       12679         MOV.W   R1,#SEG( _Cmd )
002ECA 9908rrrr       12680         MOV.W   R0,#SOF( _Cmd )
002ECE 9938rrrr       12681         MOV.W   R3,#SEG( _AudioSignalPar )
002ED2 9928rrrr       12682         MOV.W   R2,#SOF( _AudioSignalPar )
002ED6 C5191F         12683         CALL    _FindParameter
                      12685 ; rs232cmd.c 3510               
                      12686 ; rs232cmd.c 3511                                       if ( signal > -1)
002ED9 8910           12688         MOV.W   R1,R0
002EDB 9914FFFF       12689         CMP.W   R1,#0FFFFH
002EDF FD0D           12692         BLE     _839
                      12693 ; rs232cmd.c 3512                                       {
                      12694 ; rs232cmd.c 3513                                               if ( SetAudioSignal( AESEBUAudio,
                             signal) == FAIL)
002EE1 B901           12696         MOV.W   R0,#01H
                      12697         CALL    _SetAudioSignal
002EE3 C4rrrrrr       +12697 ;       FCALL   _SetAudioSignal
002EE7 6900           12699         OR.W    R0,R0
002EE9 F20E           12700         BNE     _846
                      12701 ; rs232cmd.c 3514                                                       SCPIError = ExecErr;
002EEB 964842rr       12703         MOV.B   ES,#SEG( _SCPIError )
002EEF 9908rrrr       12704         MOV.W   R0,#SOF( _SCPIError )
002EF3 9A08001D       12705         MOV.W   [R0],#01DH
                      12706 ; rs232cmd.c 3515                                       }
002EF7 FE07           12708         BR      _846
002EF7 FE0700         12708         BR      _846
002EFA                12709 _839:
                      12710 ; rs232cmd.c 3516                                       else
                      12711 ; rs232cmd.c 3517                                               SCPIError = DataOutOfRange;
002EFA 964842rr       12713         MOV.B   ES,#SEG( _SCPIError )
002EFE 9908rrrr       12714         MOV.W   R0,#SOF( _SCPIError )
002F02 9A080021       12715         MOV.W   [R0],#021H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 196

ADDR   CODE            LINE SOURCELINE
                      12716 ; rs232cmd.c 3518                               }
                      12717 ; rs232cmd.c 3519                       }
                      12718 ; rs232cmd.c 3520               }
002F06                12720 _846:
                      12721 ; rs232cmd.c 3521       }
002F06 2F30           12723         POP.W   R4, R5
002F08 D680           12725         RET
                      12728 ; rs232cmd.c 3522       
                      12729 ; rs232cmd.c 3523       /************************************************************************
                            **/
                      12730 ; rs232cmd.c 3524       /* AudioGenAESEBULevel                                                   
                                                                                                                        RS232
                            CMD.C */
                      12731 ; rs232cmd.c 3525       
                      12732 ; rs232cmd.c 3526       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      12733 ; rs232cmd.c 3527       /* Revised:             0000628                                          
                                                                                                                             
                                                                                  */
                      12734 ; rs232cmd.c 3528       
                      12735 ; rs232cmd.c 3529       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      12736 ; rs232cmd.c 3530       
                      12737 ; rs232cmd.c 3531       
                      12738 ; rs232cmd.c 3532       
                      12739 ; rs232cmd.c 3533       /************************************************************************
                            **/
                      12740 ; rs232cmd.c 3534       void AudioGenAESEBULevel( void)
                      12741 ; rs232cmd.c 3535       {
                      12742         ALIGN   1
                      12744         PUBLIC  _AudioGenAESEBULevel
002F0A                12745 _AudioGenAESEBULevel:
002F0A 0F30           12749         PUSH.W  R4, R5
002F0C A97E           12751         ADDS.W  R7,#0EH
                      12756 ; rs232cmd.c 3536               code char *str;
                      12757 ; rs232cmd.c 3537               int level;
                      12758 ; rs232cmd.c 3538       
                      12759 ; rs232cmd.c 3539               if ( CmdExecute && !SCPIError)
002F0E 964842rr       12761         MOV.B   ES,#SEG( _CmdExecute )
002F12 9908rrrr       12762         MOV.W   R0,#SOF( _CmdExecute )
002F16 8200           12763         MOV.B   R0L,[R0]
                      12764         BEQ     _895
002F18 F202           +12764 ;       BNE     _LG_782
002F1A D500EC         +12764 ;       JMP.L   _895
002F1E D500EC00       +12764 ;       JMP.L   _895
002F1E                +12764 _LG_782:
002F1E 964842rr       12765         MOV.B   ES,#SEG( _SCPIError )
002F22 9908rrrr       12766         MOV.W   R0,#SOF( _SCPIError )
002F26 8A00           12767         MOV.W   R0,[R0]
                      12768         BNE     _895
002F28 F302           +12768 ;       BEQ     _LG_784
002F2A D500E4         +12768 ;       JMP.L   _895
002F2E D500E400       +12768 ;       JMP.L   _895
002F2E                +12768 _LG_784:
                      12769 ; rs232cmd.c 3540               {
                      12770 ; rs232cmd.c 3541                       if ( CmdRequest)
002F2E 964842rr       12772         MOV.B   ES,#SEG( _CmdRequest )
002F32 9908rrrr       12773         MOV.W   R0,#SOF( _CmdRequest )
002F36 8200           12774         MOV.B   R0L,[R0]
002F38 F367           12775         BEQ     _867
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 197

ADDR   CODE            LINE SOURCELINE
                      12776 ; rs232cmd.c 3542                       {
                      12777 ; rs232cmd.c 3543                               if ( ParCnt)
002F3A 964842rr       12779         MOV.B   ES,#SEG( _ParCnt )
002F3E 9908rrrr       12780         MOV.W   R0,#SOF( _ParCnt )
002F42 8200           12781         MOV.B   R0L,[R0]
002F44 F307           12782         BEQ     _850
                      12783 ; rs232cmd.c 3544                                       SCPIError = ParNotAllowed;
002F46 964842rr       12785         MOV.B   ES,#SEG( _SCPIError )
002F4A 9908rrrr       12786         MOV.W   R0,#SOF( _SCPIError )
002F4E BA06           12787         MOV.W   [R0],#06H
                      12788         BR      _895
002F50 D500D1         +12788         JMP.L   _895
002F50 D500D100       +12788         JMP.L   _895
002F54                12789 _850:
                      12790 ; rs232cmd.c 3545                               else
                      12791 ; rs232cmd.c 3546                               {
                      12792 ; rs232cmd.c 3547                                       switch ( AudioSetup[AESEBUAudio].Level)
002F54 964842rr       12794         MOV.B   ES,#SEG( _AudioSetup+18 )
002F58 9908rrrr       12795         MOV.W   R0,#SOF( _AudioSetup+18 )
002F5C 8A00           12796         MOV.W   R0,[R0]
002F5E 99040000       12797         CMP.W   R0,#00H
002F62 F345           12798         BEQ     _860
002F64 99040001       12799         CMP.W   R0,#01H
002F68 F310           12800         BEQ     _851
002F6A 99040002       12801         CMP.W   R0,#02H
002F6E F310           12802         BEQ     _852
002F70 99040003       12803         CMP.W   R0,#03H
002F74 F310           12804         BEQ     _853
002F76 99040004       12805         CMP.W   R0,#04H
002F7A F310           12806         BEQ     _854
002F7C 99040005       12807         CMP.W   R0,#05H
002F80 F310           12808         BEQ     _855
002F82 99040006       12809         CMP.W   R0,#06H
002F86 F310           12810         BEQ     _856
002F88 FE12           12811         BR      _857
                      12812 ; rs232cmd.c 3548                                       {
                      12813 ; rs232cmd.c 3549                                               case M0dBFS:
                      12814 ; rs232cmd.c 3550                                                       level = 0;
                      12815 ; rs232cmd.c 3551                                                       break;
                      12816 ; rs232cmd.c 3552       
                      12817 ; rs232cmd.c 3553                                               case M9dBFS:
002F8A                12819 _851:
                      12820 ; rs232cmd.c 3554                                                       level = -9;
002F8A 9A78FFF7       12822         MOV.W   [R7],#0FFF7H
                      12823 ; rs232cmd.c 3555                                                       break;
002F8E FE30           12825         BR      _866
                      12826 ; rs232cmd.c 3556       
                      12827 ; rs232cmd.c 3557                                               case M12dBFS:
002F90                12829 _852:
                      12830 ; rs232cmd.c 3558                                                       level = -12;
002F90 9A78FFF4       12832         MOV.W   [R7],#0FFF4H
                      12833 ; rs232cmd.c 3559                                                       break;
002F94 FE2D           12835         BR      _866
                      12836 ; rs232cmd.c 3560       
                      12837 ; rs232cmd.c 3561                                               case M15dBFS:
002F96                12839 _853:
                      12840 ; rs232cmd.c 3562                                                       level = -15;
002F96 9A78FFF1       12842         MOV.W   [R7],#0FFF1H
                      12843 ; rs232cmd.c 3563                                                       break;
002F9A FE2A           12845         BR      _866
                      12846 ; rs232cmd.c 3564       
                      12847 ; rs232cmd.c 3565                                               case M16dBFS:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 198

ADDR   CODE            LINE SOURCELINE
002F9C                12849 _854:
                      12850 ; rs232cmd.c 3566                                                       level = -16;
002F9C 9A78FFF0       12852         MOV.W   [R7],#0FFF0H
                      12853 ; rs232cmd.c 3567                                                       break;
002FA0 FE27           12855         BR      _866
                      12856 ; rs232cmd.c 3568       
                      12857 ; rs232cmd.c 3569                                               case M18dBFS:
002FA2                12859 _855:
                      12860 ; rs232cmd.c 3570                                                       level = -18;
002FA2 9A78FFEE       12862         MOV.W   [R7],#0FFEEH
                      12863 ; rs232cmd.c 3571                                                       break;
002FA6 FE24           12865         BR      _866
                      12866 ; rs232cmd.c 3572       
                      12867 ; rs232cmd.c 3573                                               case M20dBFS:
002FA8                12869 _856:
                      12870 ; rs232cmd.c 3574                                                       level = -20;
002FA8 9A78FFEC       12872         MOV.W   [R7],#0FFECH
                      12873 ; rs232cmd.c 3575                                                       break;
002FAC FE21           12875         BR      _866
                      12876 ; rs232cmd.c 3576       
                      12877 ; rs232cmd.c 3577                                               default:
002FAE                12879 _857:
                      12880 ; rs232cmd.c 3578                                                       str = SILENCEParTxt;
002FAE 9958rrrr       12882         MOV.W   R5,#SEG( _SILENCEParTxt )
002FB2 9948rrrr       12883         MOV.W   R4,#SOF( _SILENCEParTxt )
                      12885 ; rs232cmd.c 3579       
                      12886 ; rs232cmd.c 3580                                                       while ( *str)
002FB6 964843rr       12888         MOV.B   CS,#SEG( _SILENCEParTxt )
002FBA 9908rrrr       12889         MOV.W   R0,#SOF( _SILENCEParTxt )
002FBE 8020           12890         MOVC.B  R1L,[R0+]
002FC0 F311           12891         BEQ     _859
002FC0 F311           12891         BEQ     _859
002FC2                12892 _858:
                      12893 ; rs232cmd.c 3581                                                               rs232putchar( *st
                            r++);
002FC2 8915           12895         MOV.W   R1,R5
002FC4 8904           12896         MOV.W   R0,R4
002FC6 862C43         12897         MOV.B   CS,R1L
002FC9 8020           12898         MOVC.B  R1L,[R0+]
002FCB 8102           12899         MOV.B   R0L,R1L
                      12900         CALL    _rs232putchar
002FCD C4rrrrrr       +12900 ;       FCALL   _rs232putchar
002FD1 99400001       12901         ADD.W   R4,#01H
002FD5 99510000       12902         ADDC.W  R5,#00H
002FD9 8915           12906         MOV.W   R1,R5
002FDB 8904           12907         MOV.W   R0,R4
002FDD 862C43         12908         MOV.B   CS,R1L
002FE0 8020           12909         MOVC.B  R1L,[R0+]
002FE2 F2EF           12910         BNE     _858
002FE4                12912 _859:
                      12913 ; rs232cmd.c 3582       
                      12914 ; rs232cmd.c 3583                                                       rs232putchar('\n');
002FE4 91080A         12916         MOV.B   R0L,#0AH
                      12917         CALL    _rs232putchar
002FE7 C4rrrrrr       +12917 ;       FCALL   _rs232putchar
                      12918 ; rs232cmd.c 3584                                                       return;
                      12920         BR      _895
002FEB D50083         +12920         JMP.L   _895
002FEE                12922 _860:
002FEE BA70           12924         MOV.W   [R7],#00H
                      12925 ; rs232cmd.c 3585                                               }
002FF0                12927 _866:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 199

ADDR   CODE            LINE SOURCELINE
                      12928 ; rs232cmd.c 3586       
                      12929 ; rs232cmd.c 3587                                       rs232printf( 6, "%d\n", level);
002FF0 B906           12931         MOV.W   R0,#06H
002FF2 8A17           12932         MOV.W   R1,[R7]
002FF4 0F02           12933         PUSH.W  R1
002FF6 9938rrrr       12935         MOV.W   R3,#SEG( _9 )
002FFA 9928rrrr       12936         MOV.W   R2,#SOF( _9 )
002FFE 0F0C           12937         PUSH.W  R2, R3
                      12939         CALL    _rs232printf
003000 C4rrrrrr       +12939 ;       FCALL   _rs232printf
003004 A976           12940         ADDS.W  R7,#06H
                      12942 ; rs232cmd.c 3588                               }
                      12943 ; rs232cmd.c 3589                       }
003006 FE76           12945         BR      _895
003006 FE76           12945         BR      _895
003008                12946 _867:
                      12947 ; rs232cmd.c 3590                       else
                      12948 ; rs232cmd.c 3591                       {
                      12949 ; rs232cmd.c 3592                               if ( ParCnt != 1)
003008 964842rr       12951         MOV.B   ES,#SEG( _ParCnt )
00300C 9908rrrr       12952         MOV.W   R0,#SOF( _ParCnt )
003010 8200           12953         MOV.B   R0L,[R0]
003012 910401         12954         CMP.B   R0L,#01H
003015 F307           12955         BEQ     _868
                      12956 ; rs232cmd.c 3593                                       SCPIError = SyntaxErr;
003017 964842rr       12958         MOV.B   ES,#SEG( _SCPIError )
00301B 9908rrrr       12959         MOV.W   R0,#SOF( _SCPIError )
00301F BA03           12960         MOV.W   [R0],#03H
003021 FE69           12961         BR      _895
003021 FE6900         12961         BR      _895
003024                12962 _868:
                      12963 ; rs232cmd.c 3594                               else
                      12964 ; rs232cmd.c 3595                               {
                      12965 ; rs232cmd.c 3596                                       level = FindParameter( Cmd, AESEBULevelPa
                            r);
003024 9938rrrr       12967         MOV.W   R3,#SEG( _AESEBULevelPar )
003028 9928rrrr       12968         MOV.W   R2,#SOF( _AESEBULevelPar )
00302C 9918rrrr       12969         MOV.W   R1,#SEG( _Cmd )
003030 9908rrrr       12970         MOV.W   R0,#SOF( _Cmd )
003034 C51870         12971         CALL    _FindParameter
003037 8A0F           12972         MOV.W   [R7],R0
                      12973 ; rs232cmd.c 3597               
                      12974 ; rs232cmd.c 3598                                       if ( level > -1)
003039 9A74FFFF       12976         CMP.W   [R7],#0FFFFH
00303D FD03           12977         BLE     _869
                      12978 ; rs232cmd.c 3599                                               level = AESEBUSilence;
00303F BA77           12980         MOV.W   [R7],#07H
003041 FE4D           12981         BR      _887
003041 FE4D00         12981         BR      _887
003044                12982 _869:
                      12983 ; rs232cmd.c 3600                                       else
                      12984 ; rs232cmd.c 3601                                       {
                      12985 ; rs232cmd.c 3602                                               if (( ParCnt != 1) || ( sscanf( C
                            md, "%d", &level) != 1))
003044 964842rr       12987         MOV.B   ES,#SEG( _ParCnt )
003048 9908rrrr       12988         MOV.W   R0,#SOF( _ParCnt )
00304C 8200           12989         MOV.B   R0L,[R0]
00304E 910401         12990         CMP.B   R0L,#01H
003051 F215           12991         BNE     _870
003053 9128rr         12992         MOV.B   R1L,#SEG( __lc_bs )
003056 7133           12993         XOR.B   R1H,R1H
003058 8907           12994         MOV.W   R0,R7
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 200

ADDR   CODE            LINE SOURCELINE
00305A 0F03           12995         PUSH.W  R0, R1
00305C 9918rrrr       12997         MOV.W   R1,#SEG( _10 )
003060 9908rrrr       12998         MOV.W   R0,#SOF( _10 )
003064 0F03           12999         PUSH.W  R0, R1
003066 9918rrrr       13001         MOV.W   R1,#SEG( _Cmd )
00306A 9908rrrr       13002         MOV.W   R0,#SOF( _Cmd )
                      13003         CALL    _sscanf
00306E C4rrrrrr       +13003 ;       FCALL   _sscanf
003072 99700008       13004         ADD.W   R7,#08H
003076 99040001       13006         CMP.W   R0,#01H
00307A F306           13007         BEQ     _871
00307A F306           13007         BEQ     _871
00307C                13008 _870:
                      13009 ; rs232cmd.c 3603                                                       SCPIError = SyntaxErr;
00307C 964842rr       13011         MOV.B   ES,#SEG( _SCPIError )
003080 9908rrrr       13012         MOV.W   R0,#SOF( _SCPIError )
003084 BA03           13013         MOV.W   [R0],#03H
003086 FE2A           13014         BR      _887
003086 FE2A           13014         BR      _887
003088                13015 _871:
                      13016 ; rs232cmd.c 3604                                               else {
                      13017 ; rs232cmd.c 3605                                                       switch ( level)
003088 9A740000       13019         CMP.W   [R7],#00H
00308C F326           13020         BEQ     _879
00308E 9A74FFF7       13021         CMP.W   [R7],#0FFF7H
003092 F310           13022         BEQ     _872
003094 9A74FFF4       13023         CMP.W   [R7],#0FFF4H
003098 F30F           13024         BEQ     _873
00309A 9A74FFF1       13025         CMP.W   [R7],#0FFF1H
00309E F30E           13026         BEQ     _874
0030A0 9A74FFF0       13027         CMP.W   [R7],#0FFF0H
0030A4 F30D           13028         BEQ     _875
0030A6 9A74FFEE       13029         CMP.W   [R7],#0FFEEH
0030AA F30C           13030         BEQ     _876
0030AC 9A74FFEC       13031         CMP.W   [R7],#0FFECH
0030B0 F30B           13032         BEQ     _877
0030B2 FE0C           13033         BR      _878
                      13034 ; rs232cmd.c 3606                                                       {
                      13035 ; rs232cmd.c 3607                                                               case 0:
                      13036 ; rs232cmd.c 3608                                                                       level = M
                            0dBFS;
                      13037 ; rs232cmd.c 3609                                                                       break;
                      13038 ; rs232cmd.c 3610       
                      13039 ; rs232cmd.c 3611                                                               case -9:
0030B4                13041 _872:
                      13042 ; rs232cmd.c 3612                                                                       level = M
                            9dBFS;
0030B4 BA71           13044         MOV.W   [R7],#01H
                      13045 ; rs232cmd.c 3613                                                                       break;
0030B6 FE12           13047         BR      _887
                      13048 ; rs232cmd.c 3614       
                      13049 ; rs232cmd.c 3615                                                               case -12:
0030B8                13051 _873:
                      13052 ; rs232cmd.c 3616                                                                       level = M
                            12dBFS;
0030B8 BA72           13054         MOV.W   [R7],#02H
                      13055 ; rs232cmd.c 3617                                                                       break;
0030BA FE10           13057         BR      _887
                      13058 ; rs232cmd.c 3618       
                      13059 ; rs232cmd.c 3619                                                               case -15:
0030BC                13061 _874:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 201

ADDR   CODE            LINE SOURCELINE
                      13062 ; rs232cmd.c 3620                                                                       level = M
                            15dBFS;
0030BC BA73           13064         MOV.W   [R7],#03H
                      13065 ; rs232cmd.c 3621                                                                       break;
0030BE FE0E           13067         BR      _887
                      13068 ; rs232cmd.c 3622       
                      13069 ; rs232cmd.c 3623                                                               case -16:
0030C0                13071 _875:
                      13072 ; rs232cmd.c 3624                                                                       level = M
                            16dBFS;
0030C0 BA74           13074         MOV.W   [R7],#04H
                      13075 ; rs232cmd.c 3625                                                                       break;
0030C2 FE0C           13077         BR      _887
                      13078 ; rs232cmd.c 3626       
                      13079 ; rs232cmd.c 3627                                                               case -18:
0030C4                13081 _876:
                      13082 ; rs232cmd.c 3628                                                                       level = M
                            18dBFS;
0030C4 BA75           13084         MOV.W   [R7],#05H
                      13085 ; rs232cmd.c 3629                                                                       break;
0030C6 FE0A           13087         BR      _887
                      13088 ; rs232cmd.c 3630       
                      13089 ; rs232cmd.c 3631                                                               case -20:
0030C8                13091 _877:
                      13092 ; rs232cmd.c 3632                                                                       level = M
                            20dBFS;
0030C8 BA76           13094         MOV.W   [R7],#06H
                      13095 ; rs232cmd.c 3633                                                                       break;
0030CA FE08           13097         BR      _887
                      13098 ; rs232cmd.c 3634       
                      13099 ; rs232cmd.c 3635                                                               default:
0030CC                13101 _878:
                      13102 ; rs232cmd.c 3636                                                                       SCPIError
                             = DataOutOfRange;
0030CC 964842rr       13104         MOV.B   ES,#SEG( _SCPIError )
0030D0 9908rrrr       13105         MOV.W   R0,#SOF( _SCPIError )
0030D4 9A080021       13106         MOV.W   [R0],#021H
                      13107 ; rs232cmd.c 3637                                                                       return;
0030D8 FE0D           13109         BR      _895
0030DA                13111 _879:
0030DA BA70           13113         MOV.W   [R7],#00H
                      13114 ; rs232cmd.c 3638                                                       }
                      13115 ; rs232cmd.c 3639                                               }
                      13116 ; rs232cmd.c 3640                                       }
0030DC                13118 _887:
                      13119 ; rs232cmd.c 3641       
                      13120 ; rs232cmd.c 3642                                       if ( SetAudioLevel( AESEBUAudio, level) =
                            = FAIL)
0030DC B901           13122         MOV.W   R0,#01H
0030DE 8A17           13123         MOV.W   R1,[R7]
                      13124         CALL    _SetAudioLevel
0030E0 C4rrrrrr       +13124 ;       FCALL   _SetAudioLevel
0030E4 6900           13125         OR.W    R0,R0
0030E6 F206           13126         BNE     _895
                      13127 ; rs232cmd.c 3643                                               SCPIError = ExecErr;
0030E8 964842rr       13129         MOV.B   ES,#SEG( _SCPIError )
0030EC 9908rrrr       13130         MOV.W   R0,#SOF( _SCPIError )
0030F0 9A08001D       13131         MOV.W   [R0],#01DH
                      13132 ; rs232cmd.c 3644                               }
                      13133 ; rs232cmd.c 3645                       }
                      13134 ; rs232cmd.c 3646               }
                      13135 ; rs232cmd.c 3647       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 202

ADDR   CODE            LINE SOURCELINE
0030F4                13137 _895:
0030F4 A972           13138         ADDS.W  R7,#02H
0030F6 2F30           13140         POP.W   R4, R5
0030F8 D680           13142         RET
                      13145 ; rs232cmd.c 3648       
                      13146 ; rs232cmd.c 3649       /************************************************************************
                            **/
                      13147 ; rs232cmd.c 3650       /* AudioGenAESEBUTiming                                                  
                                                                                                                        RS232
                            CMD.C */
                      13148 ; rs232cmd.c 3651       
                      13149 ; rs232cmd.c 3652       /* Author:              Kim Engedahl, DEV, 000616                        
                                                                                                                             
                                  */
                      13150 ; rs232cmd.c 3653       /* Revised:             000616                                           
                                                                                                                             
                                                                                  */
                      13151 ; rs232cmd.c 3654       
                      13152 ; rs232cmd.c 3655       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      13153 ; rs232cmd.c 3656       
                      13154 ; rs232cmd.c 3657       
                      13155 ; rs232cmd.c 3658       
                      13156 ; rs232cmd.c 3659       /************************************************************************
                            **/
                      13157 ; rs232cmd.c 3660       void AudioGenAESEBUTiming( void)
                      13158 ; rs232cmd.c 3661       {
                      13159         ALIGN   1
                      13161         PUBLIC  _AudioGenAESEBUTiming
0030FA                13162 _AudioGenAESEBUTiming:
0030FA 0F70           13166         PUSH.W  R4, R5, R6
0030FC 99720014       13168         SUB.W   R7,#014H
                      13173 ; rs232cmd.c 3662               float timing;
                      13174 ; rs232cmd.c 3663               int tmp;
                      13175 ; rs232cmd.c 3664       
                      13176 ; rs232cmd.c 3665               if ( CmdExecute && !SCPIError)
003100 964842rr       13178         MOV.B   ES,#SEG( _CmdExecute )
003104 9908rrrr       13179         MOV.W   R0,#SOF( _CmdExecute )
003108 8200           13180         MOV.B   R0L,[R0]
                      13181         BEQ     _917
00310A F202           +13181 ;       BNE     _LG_832
00310C D500A9         +13181 ;       JMP.L   _917
003110 D500A900       +13181 ;       JMP.L   _917
003110                +13181 _LG_832:
003110 964842rr       13182         MOV.B   ES,#SEG( _SCPIError )
003114 9908rrrr       13183         MOV.W   R0,#SOF( _SCPIError )
003118 8A00           13184         MOV.W   R0,[R0]
                      13185         BNE     _917
00311A F302           +13185 ;       BEQ     _LG_834
00311C D500A1         +13185 ;       JMP.L   _917
003120 D500A100       +13185 ;       JMP.L   _917
003120                +13185 _LG_834:
                      13186 ; rs232cmd.c 3666               {
                      13187 ; rs232cmd.c 3667                       if ( CmdRequest)
003120 964842rr       13189         MOV.B   ES,#SEG( _CmdRequest )
003124 9908rrrr       13190         MOV.W   R0,#SOF( _CmdRequest )
003128 8200           13191         MOV.B   R0L,[R0]
00312A F321           13192         BEQ     _906
                      13193 ; rs232cmd.c 3668                       {
                      13194 ; rs232cmd.c 3669                               if ( ParCnt)
00312C 964842rr       13196         MOV.B   ES,#SEG( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 203

ADDR   CODE            LINE SOURCELINE
003130 9908rrrr       13197         MOV.W   R0,#SOF( _ParCnt )
003134 8200           13198         MOV.B   R0L,[R0]
003136 F307           13199         BEQ     _905
                      13200 ; rs232cmd.c 3670                                       SCPIError = ParNotAllowed;
003138 964842rr       13202         MOV.B   ES,#SEG( _SCPIError )
00313C 9908rrrr       13203         MOV.W   R0,#SOF( _SCPIError )
003140 BA06           13204         MOV.W   [R0],#06H
                      13205         BR      _917
003142 D5008E         +13205         JMP.L   _917
003142 D5008E00       +13205         JMP.L   _917
003146                13206 _905:
                      13207 ; rs232cmd.c 3671                               else
                      13208 ; rs232cmd.c 3672                                       rs232printf( 6, "%.1f\n", AudioSetup[AESE
                            BUAudio].Timing);
003146 964842rr       13210         MOV.B   ES,#SEG( _AudioSetup+20 )
00314A 9918rrrr       13211         MOV.W   R1,#SOF( _AudioSetup+20 )
00314E 8B01           13212         MOV.W   R0,[R1+]
003150 8A11           13213         MOV.W   R1,[R1]
003152 C4rrrrrr       13214         FCALL   __SPF2DPF
003156 0F0F           13215         PUSH.W  R0, R1, R2, R3
003158 9918rrrr       13217         MOV.W   R1,#SEG( _900 )
00315C 9908rrrr       13218         MOV.W   R0,#SOF( _900 )
003160 0F03           13219         PUSH.W  R0, R1
003162 B906           13221         MOV.W   R0,#06H
                      13222         CALL    _rs232printf
003164 C4rrrrrr       +13222 ;       FCALL   _rs232printf
003168 9970000C       13223         ADD.W   R7,#0CH
                      13225 ; rs232cmd.c 3673                       }
00316C FE79           13227         BR      _917
00316C FE79           13227         BR      _917
00316E                13228 _906:
                      13229 ; rs232cmd.c 3674                       else
                      13230 ; rs232cmd.c 3675                       {
                      13231 ; rs232cmd.c 3676                               if (( ParCnt != 1) || ( sscanf( Cmd, "%f", &timin
                            g) != 1))
00316E 964842rr       13233         MOV.B   ES,#SEG( _ParCnt )
003172 9908rrrr       13234         MOV.W   R0,#SOF( _ParCnt )
003176 8200           13235         MOV.B   R0L,[R0]
003178 910401         13236         CMP.B   R0L,#01H
00317B F216           13237         BNE     _907
00317D 9918rrrr       13238         MOV.W   R1,#SEG( _Cmd )
003181 9908rrrr       13239         MOV.W   R0,#SOF( _Cmd )
003185 9168rr         13240         MOV.B   R3L,#SEG( __lc_bs )
003188 7177           13241         XOR.B   R3H,R3H
00318A 402710         13242         LEA     R2,R7+16
00318D 0F0C           13243         PUSH.W  R2, R3
00318F 9938rrrr       13245         MOV.W   R3,#SEG( _901 )
003193 9928rrrr       13246         MOV.W   R2,#SOF( _901 )
003197 0F0C           13247         PUSH.W  R2, R3
                      13249         CALL    _sscanf
003199 C4rrrrrr       +13249 ;       FCALL   _sscanf
00319D 99700008       13250         ADD.W   R7,#08H
0031A1 99040001       13252         CMP.W   R0,#01H
0031A5 F307           13253         BEQ     _908
0031A5 F30700         13253         BEQ     _908
0031A8                13254 _907:
                      13255 ; rs232cmd.c 3677                                       SCPIError = SyntaxErr;
0031A8 964842rr       13257         MOV.B   ES,#SEG( _SCPIError )
0031AC 9908rrrr       13258         MOV.W   R0,#SOF( _SCPIError )
0031B0 BA03           13259         MOV.W   [R0],#03H
0031B2 FE56           13260         BR      _917
0031B2 FE56           13260         BR      _917
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 204

ADDR   CODE            LINE SOURCELINE
0031B4                13261 _908:
                      13262 ; rs232cmd.c 3678                               else
                      13263 ; rs232cmd.c 3679                               {
                      13264 ; rs232cmd.c 3680                                       tmp = (int)(( timing / 0.8) + 0.5 - ( 1*(
                             timing < 0)));
0031B4 8C1712         13266         MOV.W   R1,[R7+18]
0031B7 8C0710         13267         MOV.W   R0,[R7+16]
0031BA C4rrrrrr       13268         FCALL   __SPF2DPF
0031BE 9C780E3FE9     13269         MOV.W   [R7+14],#03FE9H
0031C3 9C780C9999     13270         MOV.W   [R7+12],#09999H
0031C8 9C780A9999     13271         MOV.W   [R7+10],#09999H
0031CD 9C7808999A     13272         MOV.W   [R7+8],#0999AH
0031D2 406708         13273         LEA     R6,R7+8
0031D5 C4rrrrrr       13274         FCALL   __DIV_DPF
0031D9 9C780E3FE0     13275         MOV.W   [R7+14],#03FE0H
0031DE BC700C         13276         MOV.W   [R7+12],#00H
0031E1 BC700A         13277         MOV.W   [R7+10],#00H
0031E4 BC7008         13278         MOV.W   [R7+8],#00H
0031E7 406708         13279         LEA     R6,R7+8
0031EA C4rrrrrr       13280         FCALL   __ADD_DPF
0031EE 8C3F06         13281         MOV.W   [R7+6],R3
0031F1 8C2F04         13282         MOV.W   [R7+4],R2
0031F4 8C1F02         13283         MOV.W   [R7+2],R1
0031F7 8A0F           13284         MOV.W   [R7],R0
0031F9 8C1712         13285         MOV.W   R1,[R7+18]
0031FC 8C0710         13286         MOV.W   R0,[R7+16]
0031FF B930           13287         MOV.W   R3,#00H
003201 B920           13288         MOV.W   R2,#00H
003203 C4rrrrrr       13289         FCALL   __CMP_SPF
003207 9104FF         13290         CMP.B   R0L,#0FFH
00320A F206           13291         BNE     _920
00320C B900           13292         MOVS.W  R0,#00H
00320E B910           13293         MOVS.W  R1,#00H
003210 B920           13294         MOVS.W  R2,#00H
003212 99383FF0       13295         MOV.W   R3,#03FF0H
003216 FE04           13296         BR      _921
003216 FE04           13296         BR      _921
003218                13297 _920:
003218 B900           13298         MOVS.W  R0,#00H
00321A B910           13299         MOVS.W  R1,#00H
00321C B920           13300         MOVS.W  R2,#00H
00321E B930           13301         MOVS.W  R3,#00H
00321E B930           13301         MOVS.W  R3,#00H
003220                13302 _921:
003220 8967           13303         MOV.W   R6,R7
003222 C4rrrrrr       13304         FCALL   __SUBR_DPF
003226 C4rrrrrr       13305         FCALL   __DPF2S
                      13307 ; rs232cmd.c 3681       
                      13308 ; rs232cmd.c 3682                                       if (( tmp < -12) || ( tmp > 13))
00322A 9904FFF4       13310         CMP.W   R0,#0FFF4H
00322E FB03           13311         BLT     _909
003230 9904000D       13312         CMP.W   R0,#0DH
003234 FD07           13313         BLE     _910
003234 FD07           13313         BLE     _910
003236                13314 _909:
                      13315 ; rs232cmd.c 3683                                               SCPIError = DataOutOfRange;
003236 964842rr       13317         MOV.B   ES,#SEG( _SCPIError )
00323A 9908rrrr       13318         MOV.W   R0,#SOF( _SCPIError )
00323E 9A080021       13319         MOV.W   [R0],#021H
003242 FE0E           13320         BR      _917
003242 FE0E           13320         BR      _917
003244                13321 _910:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 205

ADDR   CODE            LINE SOURCELINE
                      13322 ; rs232cmd.c 3684                                       else
                      13323 ; rs232cmd.c 3685                                       {
                      13324 ; rs232cmd.c 3686                                               if ( SetAudioTiming( AESEBUAudio,
                             timing) == FAIL)
003244 B901           13326         MOV.W   R0,#01H
003246 8C3712         13328         MOV.W   R3,[R7+18]
003249 8C2710         13329         MOV.W   R2,[R7+16]
                      13330         CALL    _SetAudioTiming
00324C C4rrrrrr       +13330 ;       FCALL   _SetAudioTiming
003250 6900           13331         OR.W    R0,R0
003252 F206           13332         BNE     _917
                      13333 ; rs232cmd.c 3687                                                       SCPIError = ExecErr;
003254 964842rr       13335         MOV.B   ES,#SEG( _SCPIError )
003258 9908rrrr       13336         MOV.W   R0,#SOF( _SCPIError )
00325C 9A08001D       13337         MOV.W   [R0],#01DH
                      13338 ; rs232cmd.c 3688                                       }
                      13339 ; rs232cmd.c 3689                               }
                      13340 ; rs232cmd.c 3690                       }
                      13341 ; rs232cmd.c 3691               }
003260                13343 _917:
                      13344 ; rs232cmd.c 3692       }
003260 99700014       13346         ADD.W   R7,#014H
003264 2F70           13348         POP.W   R4, R5, R6
003266 D680           13350         RET
                      13352 ; rs232cmd.c 3693       
                      13353 ; rs232cmd.c 3694       /************************************************************************
                            **/
                      13354 ; rs232cmd.c 3695       /* AudioGenAESEBUWordClock                                               
                                                                                                                RS232CMD.C */
                            
                      13355 ; rs232cmd.c 3696       
                      13356 ; rs232cmd.c 3697       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      13357 ; rs232cmd.c 3698       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      13358 ; rs232cmd.c 3699       
                      13359 ; rs232cmd.c 3700       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      13360 ; rs232cmd.c 3701       
                      13361 ; rs232cmd.c 3702       
                      13362 ; rs232cmd.c 3703       
                      13363 ; rs232cmd.c 3704       /************************************************************************
                            **/
                      13364 ; rs232cmd.c 3705       void AudioGenAESEBUWordClock( void)
                      13365 ; rs232cmd.c 3706       {
                      13366         ALIGN   1
                      13368         PUBLIC  _AudioGenAESEBUWordClock
003268                13369 _AudioGenAESEBUWordClock:
003268 0F30           13373         PUSH.W  R4, R5
                      13379 ; rs232cmd.c 3707               int frequency;
                      13380 ; rs232cmd.c 3708               char code *str;
                      13381 ; rs232cmd.c 3709       
                      13382 ; rs232cmd.c 3710               if ( CmdExecute && !SCPIError)
00326A 964842rr       13384         MOV.B   ES,#SEG( _CmdExecute )
00326E 9908rrrr       13385         MOV.W   R0,#SOF( _CmdExecute )
003272 8200           13386         MOV.B   R0L,[R0]
003274 F379           13387         BEQ     _936
003276 964842rr       13388         MOV.B   ES,#SEG( _SCPIError )
00327A 9908rrrr       13389         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 206

ADDR   CODE            LINE SOURCELINE
00327E 8A00           13390         MOV.W   R0,[R0]
003280 F273           13391         BNE     _936
                      13392 ; rs232cmd.c 3711               {
                      13393 ; rs232cmd.c 3712                       if ( CmdRequest)
003282 964842rr       13395         MOV.B   ES,#SEG( _CmdRequest )
003286 9908rrrr       13396         MOV.W   R0,#SOF( _CmdRequest )
00328A 8200           13397         MOV.B   R0L,[R0]
00328C F33F           13398         BEQ     _927
                      13399 ; rs232cmd.c 3713                       {
                      13400 ; rs232cmd.c 3714                               if ( ParCnt)
00328E 964842rr       13402         MOV.B   ES,#SEG( _ParCnt )
003292 9908rrrr       13403         MOV.W   R0,#SOF( _ParCnt )
003296 8200           13404         MOV.B   R0L,[R0]
003298 F306           13405         BEQ     _924
                      13406 ; rs232cmd.c 3715                                       SCPIError = ParNotAllowed;
00329A 964842rr       13408         MOV.B   ES,#SEG( _SCPIError )
00329E 9908rrrr       13409         MOV.W   R0,#SOF( _SCPIError )
0032A2 BA06           13410         MOV.W   [R0],#06H
0032A4 FE61           13411         BR      _936
0032A4 FE61           13411         BR      _936
0032A6                13412 _924:
                      13413 ; rs232cmd.c 3716                               else
                      13414 ; rs232cmd.c 3717                               {
                      13415 ; rs232cmd.c 3718                                       str = AudioFrequencyPar[AudioSetup[AESEBU
                            Audio].Frequency].LongName;
0032A6 964842rr       13417         MOV.B   ES,#SEG( _AudioSetup+24 )
0032AA 9908rrrr       13418         MOV.W   R0,#SOF( _AudioSetup+24 )
0032AE 8A00           13419         MOV.W   R0,[R0]
0032B0 E900000C       13420         MULU.W  R0,#0CH
0032B4 8920           13421         MOV.W   R2,R0
0032B6 B930           13422         MOVS.W  R3,#00H
0032B8 9918rrrr       13423         MOV.W   R1,#SEG( _AudioFrequencyPar )
0032BC 9908rrrr       13424         MOV.W   R0,#SOF( _AudioFrequencyPar )
0032C0 0902           13425         ADD.W   R0,R2
0032C2 1913           13426         ADDC.W  R1,R3
0032C4 862C43         13427         MOV.B   CS,R1L
0032C7 8820           13428         MOVC.W  R2,[R0+]
0032C9 99040000       13429         CMP.W   R0,#00H
0032CD F202           13430         BNE     _937
0032CF A64143         13431         ADDS.B  CS,#01H
0032CF A64143         13431         ADDS.B  CS,#01H
0032D2                13432 _937:
0032D2 8830           13433         MOVC.W  R3,[R0+]
0032D4 8953           13434         MOV.W   R5,R3
0032D6 8942           13435         MOV.W   R4,R2
                      13437 ; rs232cmd.c 3719       
                      13438 ; rs232cmd.c 3720                                       while ( *str)
0032D8 866C43         13440         MOV.B   CS,R3L
0032DB 8062           13441         MOVC.B  R3L,[R2+]
0032DD F312           13442         BEQ     _926
0032DD F31200         13442         BEQ     _926
0032E0                13443 _925:
                      13444 ; rs232cmd.c 3721                                               rs232putchar( *str++);
0032E0 8915           13446         MOV.W   R1,R5
0032E2 8904           13447         MOV.W   R0,R4
0032E4 862C43         13448         MOV.B   CS,R1L
0032E7 8020           13449         MOVC.B  R1L,[R0+]
0032E9 8102           13450         MOV.B   R0L,R1L
                      13451         CALL    _rs232putchar
0032EB C4rrrrrr       +13451 ;       FCALL   _rs232putchar
0032EF 99400001       13452         ADD.W   R4,#01H
0032F3 99510000       13453         ADDC.W  R5,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 207

ADDR   CODE            LINE SOURCELINE
0032F7 8915           13457         MOV.W   R1,R5
0032F9 8904           13458         MOV.W   R0,R4
0032FB 862C43         13459         MOV.B   CS,R1L
0032FE 8020           13460         MOVC.B  R1L,[R0+]
003300 F2EF           13461         BNE     _925
003302                13463 _926:
                      13464 ; rs232cmd.c 3722       
                      13465 ; rs232cmd.c 3723                                       rs232putchar('\n');
003302 91080A         13467         MOV.B   R0L,#0AH
                      13468         CALL    _rs232putchar
003305 C4rrrrrr       +13468 ;       FCALL   _rs232putchar
                      13469 ; rs232cmd.c 3724                               }
                      13470 ; rs232cmd.c 3725                       }
003309 FE2F           13472         BR      _936
003309 FE2F00         13472         BR      _936
00330C                13473 _927:
                      13474 ; rs232cmd.c 3726                       else
                      13475 ; rs232cmd.c 3727                       {
                      13476 ; rs232cmd.c 3728                               if ( ParCnt != 1)
00330C 964842rr       13478         MOV.B   ES,#SEG( _ParCnt )
003310 9908rrrr       13479         MOV.W   R0,#SOF( _ParCnt )
003314 8200           13480         MOV.B   R0L,[R0]
003316 910401         13481         CMP.B   R0L,#01H
003319 F307           13482         BEQ     _928
                      13483 ; rs232cmd.c 3729                                       SCPIError = SyntaxErr;
00331B 964842rr       13485         MOV.B   ES,#SEG( _SCPIError )
00331F 9908rrrr       13486         MOV.W   R0,#SOF( _SCPIError )
003323 BA03           13487         MOV.W   [R0],#03H
003325 FE21           13488         BR      _936
003325 FE2100         13488         BR      _936
003328                13489 _928:
                      13490 ; rs232cmd.c 3730                               else
                      13491 ; rs232cmd.c 3731                               {
                      13492 ; rs232cmd.c 3732                                       frequency = FindParameter( Cmd, AudioFreq
                            uencyPar);
003328 9918rrrr       13494         MOV.W   R1,#SEG( _Cmd )
00332C 9908rrrr       13495         MOV.W   R0,#SOF( _Cmd )
003330 9938rrrr       13496         MOV.W   R3,#SEG( _AudioFrequencyPar )
003334 9928rrrr       13497         MOV.W   R2,#SOF( _AudioFrequencyPar )
003338 C516EE         13498         CALL    _FindParameter
                      13500 ; rs232cmd.c 3733               
                      13501 ; rs232cmd.c 3734                                       if ( frequency > -1)
00333B 8910           13503         MOV.W   R1,R0
00333D 9914FFFF       13504         CMP.W   R1,#0FFFFH
003341 FD0D           13507         BLE     _929
                      13508 ; rs232cmd.c 3735                                       {
                      13509 ; rs232cmd.c 3736                                               if ( SetAudioWordClock( AESEBUAud
                            io, frequency) == FAIL)
003343 B901           13511         MOV.W   R0,#01H
                      13512         CALL    _SetAudioWordClock
003345 C4rrrrrr       +13512 ;       FCALL   _SetAudioWordClock
003349 6900           13514         OR.W    R0,R0
00334B F20E           13515         BNE     _936
                      13516 ; rs232cmd.c 3737                                                       SCPIError = ExecErr;
00334D 964842rr       13518         MOV.B   ES,#SEG( _SCPIError )
003351 9908rrrr       13519         MOV.W   R0,#SOF( _SCPIError )
003355 9A08001D       13520         MOV.W   [R0],#01DH
                      13521 ; rs232cmd.c 3738                                       }
003359 FE07           13523         BR      _936
003359 FE0700         13523         BR      _936
00335C                13524 _929:
                      13525 ; rs232cmd.c 3739                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 208

ADDR   CODE            LINE SOURCELINE
                      13526 ; rs232cmd.c 3740                                               SCPIError = DataOutOfRange;
00335C 964842rr       13528         MOV.B   ES,#SEG( _SCPIError )
003360 9908rrrr       13529         MOV.W   R0,#SOF( _SCPIError )
003364 9A080021       13530         MOV.W   [R0],#021H
                      13531 ; rs232cmd.c 3741                               }
                      13532 ; rs232cmd.c 3742                       }
                      13533 ; rs232cmd.c 3743               }
003368                13535 _936:
                      13536 ; rs232cmd.c 3744       }
003368 2F30           13538         POP.W   R4, R5
00336A D680           13540         RET
                      13543 ; rs232cmd.c 3745       
                      13544 ; rs232cmd.c 3746       /************************************************************************
                            **/
                      13545 ; rs232cmd.c 3747       /* AudioGenAESEBUClick                                                   
                                                                                                                        RS232
                            CMD.C */
                      13546 ; rs232cmd.c 3748       
                      13547 ; rs232cmd.c 3749       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      13548 ; rs232cmd.c 3750       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      13549 ; rs232cmd.c 3751       
                      13550 ; rs232cmd.c 3752       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      13551 ; rs232cmd.c 3753       
                      13552 ; rs232cmd.c 3754       
                      13553 ; rs232cmd.c 3755       
                      13554 ; rs232cmd.c 3756       /************************************************************************
                            **/
                      13555 ; rs232cmd.c 3757       void AudioGenAESEBUClick( void)
                      13556 ; rs232cmd.c 3758       {
                      13557         ALIGN   1
                      13559         PUBLIC  _AudioGenAESEBUClick
00336C                13560 _AudioGenAESEBUClick:
00336C A97E           13564         ADDS.W  R7,#0EH
                      13567 ; rs232cmd.c 3759               int click;
                      13568 ; rs232cmd.c 3760       
                      13569 ; rs232cmd.c 3761               if ( CmdExecute && !SCPIError)
00336E 964842rr       13571         MOV.B   ES,#SEG( _CmdExecute )
003372 9908rrrr       13572         MOV.W   R0,#SOF( _CmdExecute )
003376 8200           13573         MOV.B   R0L,[R0]
003378 F363           13574         BEQ     _952
00337A 964842rr       13575         MOV.B   ES,#SEG( _SCPIError )
00337E 9908rrrr       13576         MOV.W   R0,#SOF( _SCPIError )
003382 8A00           13577         MOV.W   R0,[R0]
003384 F25D           13578         BNE     _952
                      13579 ; rs232cmd.c 3762               {
                      13580 ; rs232cmd.c 3763                       if ( CmdRequest)
003386 964842rr       13582         MOV.B   ES,#SEG( _CmdRequest )
00338A 9908rrrr       13583         MOV.W   R0,#SOF( _CmdRequest )
00338E 8200           13584         MOV.B   R0L,[R0]
003390 F31C           13585         BEQ     _941
                      13586 ; rs232cmd.c 3764                       {
                      13587 ; rs232cmd.c 3765                               if ( ParCnt)
003392 964842rr       13589         MOV.B   ES,#SEG( _ParCnt )
003396 9908rrrr       13590         MOV.W   R0,#SOF( _ParCnt )
00339A 8200           13591         MOV.B   R0L,[R0]
00339C F306           13592         BEQ     _940
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 209

ADDR   CODE            LINE SOURCELINE
                      13593 ; rs232cmd.c 3766                                       SCPIError = ParNotAllowed;
00339E 964842rr       13595         MOV.B   ES,#SEG( _SCPIError )
0033A2 9908rrrr       13596         MOV.W   R0,#SOF( _SCPIError )
0033A6 BA06           13597         MOV.W   [R0],#06H
0033A8 FE4B           13598         BR      _952
0033A8 FE4B           13598         BR      _952
0033AA                13599 _940:
                      13600 ; rs232cmd.c 3767                               else
                      13601 ; rs232cmd.c 3768                                       rs232printf( 6, "%d\n", AudioSetup[AESEBU
                            Audio].Click);
0033AA B906           13603         MOV.W   R0,#06H
0033AC 964842rr       13604         MOV.B   ES,#SEG( _AudioSetup+26 )
0033B0 9918rrrr       13605         MOV.W   R1,#SOF( _AudioSetup+26 )
0033B4 8A11           13606         MOV.W   R1,[R1]
0033B6 0F02           13607         PUSH.W  R1
0033B8 9938rrrr       13609         MOV.W   R3,#SEG( _9 )
0033BC 9928rrrr       13610         MOV.W   R2,#SOF( _9 )
0033C0 0F0C           13611         PUSH.W  R2, R3
                      13613         CALL    _rs232printf
0033C2 C4rrrrrr       +13613 ;       FCALL   _rs232printf
0033C6 A976           13614         ADDS.W  R7,#06H
                      13616 ; rs232cmd.c 3769                       }
0033C8 FE3B           13618         BR      _952
0033C8 FE3B           13618         BR      _952
0033CA                13619 _941:
                      13620 ; rs232cmd.c 3770                       else
                      13621 ; rs232cmd.c 3771                       {
                      13622 ; rs232cmd.c 3772                               if (( ParCnt != 1) || ( sscanf( Cmd, "%d", &click
                            ) != 1))
0033CA 964842rr       13624         MOV.B   ES,#SEG( _ParCnt )
0033CE 9908rrrr       13625         MOV.W   R0,#SOF( _ParCnt )
0033D2 8200           13626         MOV.B   R0L,[R0]
0033D4 910401         13627         CMP.B   R0L,#01H
0033D7 F215           13628         BNE     _942
0033D9 9918rrrr       13629         MOV.W   R1,#SEG( _Cmd )
0033DD 9908rrrr       13630         MOV.W   R0,#SOF( _Cmd )
0033E1 9168rr         13631         MOV.B   R3L,#SEG( __lc_bs )
0033E4 7177           13632         XOR.B   R3H,R3H
0033E6 8927           13633         MOV.W   R2,R7
0033E8 0F0C           13634         PUSH.W  R2, R3
0033EA 9938rrrr       13636         MOV.W   R3,#SEG( _10 )
0033EE 9928rrrr       13637         MOV.W   R2,#SOF( _10 )
0033F2 0F0C           13638         PUSH.W  R2, R3
                      13640         CALL    _sscanf
0033F4 C4rrrrrr       +13640 ;       FCALL   _sscanf
0033F8 99700008       13641         ADD.W   R7,#08H
0033FC 99040001       13643         CMP.W   R0,#01H
003400 F306           13644         BEQ     _943
003400 F306           13644         BEQ     _943
003402                13645 _942:
                      13646 ; rs232cmd.c 3773                                       SCPIError = SyntaxErr;
003402 964842rr       13648         MOV.B   ES,#SEG( _SCPIError )
003406 9908rrrr       13649         MOV.W   R0,#SOF( _SCPIError )
00340A BA03           13650         MOV.W   [R0],#03H
00340C FE19           13651         BR      _952
00340C FE19           13651         BR      _952
00340E                13652 _943:
                      13653 ; rs232cmd.c 3774                               else
                      13654 ; rs232cmd.c 3775                               {
                      13655 ; rs232cmd.c 3776                                       if (( click != click1s) && ( click != cli
                            ck3s))
00340E 9A740001       13657         CMP.W   [R7],#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 210

ADDR   CODE            LINE SOURCELINE
003412 F30A           13658         BEQ     _945
003414 9A740003       13659         CMP.W   [R7],#03H
003418 F307           13660         BEQ     _945
                      13661 ; rs232cmd.c 3777                                               SCPIError = DataOutOfRange;
00341A 964842rr       13663         MOV.B   ES,#SEG( _SCPIError )
00341E 9908rrrr       13664         MOV.W   R0,#SOF( _SCPIError )
003422 9A080021       13665         MOV.W   [R0],#021H
003426 FE0C           13666         BR      _952
003426 FE0C           13666         BR      _952
003428                13667 _945:
                      13668 ; rs232cmd.c 3778                                       else
                      13669 ; rs232cmd.c 3779                                       {
                      13670 ; rs232cmd.c 3780                                               if ( SetAudioClick( AESEBUAudio, 
                            click) == FAIL)
003428 B901           13672         MOV.W   R0,#01H
00342A 8A17           13673         MOV.W   R1,[R7]
                      13674         CALL    _SetAudioClick
00342C C4rrrrrr       +13674 ;       FCALL   _SetAudioClick
003430 6900           13675         OR.W    R0,R0
003432 F206           13676         BNE     _952
                      13677 ; rs232cmd.c 3781                                                       SCPIError = ExecErr;
003434 964842rr       13679         MOV.B   ES,#SEG( _SCPIError )
003438 9908rrrr       13680         MOV.W   R0,#SOF( _SCPIError )
00343C 9A08001D       13681         MOV.W   [R0],#01DH
                      13682 ; rs232cmd.c 3782                                       }
                      13683 ; rs232cmd.c 3783                               }
                      13684 ; rs232cmd.c 3784                       }
                      13685 ; rs232cmd.c 3785               }
003440                13687 _952:
                      13688 ; rs232cmd.c 3786       }
003440 A972           13690         ADDS.W  R7,#02H
003442 D680           13692         RET
                      13694 ; rs232cmd.c 3787       
                      13695 ; rs232cmd.c 3788       /************************************************************************
                            **/
                      13696 ; rs232cmd.c 3789       /* FactPassword                                                          
                                                                                                                             
                                               RS232CMD.C */
                      13697 ; rs232cmd.c 3790       
                      13698 ; rs232cmd.c 3791       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      13699 ; rs232cmd.c 3792       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      13700 ; rs232cmd.c 3793       
                      13701 ; rs232cmd.c 3794       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      13702 ; rs232cmd.c 3795       
                      13703 ; rs232cmd.c 3796       
                      13704 ; rs232cmd.c 3797       
                      13705 ; rs232cmd.c 3798       /************************************************************************
                            **/
                      13706 ; rs232cmd.c 3799       void FactPassword( void)
                      13707 ; rs232cmd.c 3800       {
                      13708         ALIGN   1
                      13710         PUBLIC  _FactPassword
003444                13711 _FactPassword:
                      13715 ; rs232cmd.c 3801               if ( CmdExecute && !SCPIError)
003444 964842rr       13717         MOV.B   ES,#SEG( _CmdExecute )
003448 9908rrrr       13718         MOV.W   R0,#SOF( _CmdExecute )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 211

ADDR   CODE            LINE SOURCELINE
00344C 8200           13719         MOV.B   R0L,[R0]
00344E F365           13720         BEQ     _973
003450 964842rr       13721         MOV.B   ES,#SEG( _SCPIError )
003454 9908rrrr       13722         MOV.W   R0,#SOF( _SCPIError )
003458 8A00           13723         MOV.W   R0,[R0]
00345A F25F           13724         BNE     _973
                      13725 ; rs232cmd.c 3802               {
                      13726 ; rs232cmd.c 3803                       if ( CmdRequest)
00345C 964842rr       13728         MOV.B   ES,#SEG( _CmdRequest )
003460 9908rrrr       13729         MOV.W   R0,#SOF( _CmdRequest )
003464 8200           13730         MOV.B   R0L,[R0]
003466 F320           13731         BEQ     _962
                      13732 ; rs232cmd.c 3804                       {
                      13733 ; rs232cmd.c 3805                               if ( ParCnt)
003468 964842rr       13735         MOV.B   ES,#SEG( _ParCnt )
00346C 9908rrrr       13736         MOV.W   R0,#SOF( _ParCnt )
003470 8200           13737         MOV.B   R0L,[R0]
003472 F306           13738         BEQ     _960
                      13739 ; rs232cmd.c 3806                                       SCPIError = ParNotAllowed;
003474 964842rr       13741         MOV.B   ES,#SEG( _SCPIError )
003478 9908rrrr       13742         MOV.W   R0,#SOF( _SCPIError )
00347C BA06           13743         MOV.W   [R0],#06H
00347E D680           13744         RET
00347E D680           13744         RET
003480                13745 _960:
                      13746 ; rs232cmd.c 3807                               else
                      13747 ; rs232cmd.c 3808                               {
                      13748 ; rs232cmd.c 3809                                       if ( PasswordProtected)
003480 964842rr       13750         MOV.B   ES,#SEG( _PasswordProtected )
003484 9908rrrr       13751         MOV.W   R0,#SOF( _PasswordProtected )
003488 8A00           13752         MOV.W   R0,[R0]
00348A F307           13753         BEQ     _961
                      13754 ; rs232cmd.c 3810                                               rs232puts( "ON\n");
00348C 9918rrrr       13756         MOV.W   R1,#SEG( _957 )
003490 9908rrrr       13757         MOV.W   R0,#SOF( _957 )
                      13758         CALL    _rs232puts
003494 C4rrrrrr       +13758 ;       FCALL   _rs232puts
003498 D680           13759         RET
003498 D680           13759         RET
00349A                13760 _961:
                      13761 ; rs232cmd.c 3811                                       else
                      13762 ; rs232cmd.c 3812                                               rs232puts( "OFF\n");
00349A 9918rrrr       13764         MOV.W   R1,#SEG( _958 )
00349E 9908rrrr       13765         MOV.W   R0,#SOF( _958 )
                      13766         CALL    _rs232puts
0034A2 C4rrrrrr       +13766 ;       FCALL   _rs232puts
                      13767 ; rs232cmd.c 3813                               }
                      13768 ; rs232cmd.c 3814                       }
0034A6 D680           13770         RET
0034A6 D680           13770         RET
0034A8                13771 _962:
                      13772 ; rs232cmd.c 3815                       else
                      13773 ; rs232cmd.c 3816                       {
                      13774 ; rs232cmd.c 3817                               if ( ParCnt != 1)
0034A8 964842rr       13776         MOV.B   ES,#SEG( _ParCnt )
0034AC 9908rrrr       13777         MOV.W   R0,#SOF( _ParCnt )
0034B0 8200           13778         MOV.B   R0L,[R0]
0034B2 910401         13779         CMP.B   R0L,#01H
0034B5 F307           13780         BEQ     _963
                      13781 ; rs232cmd.c 3818                                       SCPIError = SyntaxErr;
0034B7 964842rr       13783         MOV.B   ES,#SEG( _SCPIError )
0034BB 9908rrrr       13784         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 212

ADDR   CODE            LINE SOURCELINE
0034BF BA03           13785         MOV.W   [R0],#03H
0034C1 D680           13786         RET
0034C1 D68000         13786         RET
0034C4                13787 _963:
                      13788 ; rs232cmd.c 3819                               else
                      13789 ; rs232cmd.c 3820                               {
                      13790 ; rs232cmd.c 3821                                       if ( !strcmp( Cmd, "ON"))
0034C4 9938rrrr       13792         MOV.W   R3,#SEG( _959 )
0034C8 9928rrrr       13793         MOV.W   R2,#SOF( _959 )
0034CC 9918rrrr       13794         MOV.W   R1,#SEG( _Cmd )
0034D0 9908rrrr       13795         MOV.W   R0,#SOF( _Cmd )
                      13796         CALL    _strcmp
0034D4 C4rrrrrr       +13796 ;       FCALL   _strcmp
0034D8 6900           13797         OR.W    R0,R0
0034DA F207           13798         BNE     _964
                      13799 ; rs232cmd.c 3822                                               PasswordProtected = true;
0034DC 964842rr       13801         MOV.B   ES,#SEG( _PasswordProtected )
0034E0 9908rrrr       13802         MOV.W   R0,#SOF( _PasswordProtected )
0034E4 9A08FFFF       13803         MOV.W   [R0],#0FFFFH
0034E8 D680           13804         RET
0034E8 D680           13804         RET
0034EA                13805 _964:
                      13806 ; rs232cmd.c 3823                                       else
                      13807 ; rs232cmd.c 3824                                               if ( !Cstrcmp( Cmd, PasswordText)
                            )
0034EA 9938rrrr       13809         MOV.W   R3,#SEG( _PasswordText )
0034EE 9928rrrr       13810         MOV.W   R2,#SOF( _PasswordText )
0034F2 9918rrrr       13811         MOV.W   R1,#SEG( _Cmd )
0034F6 9908rrrr       13812         MOV.W   R0,#SOF( _Cmd )
                      13813         CALL    _Cstrcmp
0034FA C4rrrrrr       +13813 ;       FCALL   _Cstrcmp
0034FE 6900           13814         OR.W    R0,R0
003500 F206           13815         BNE     _965
                      13816 ; rs232cmd.c 3825                                                       PasswordProtected = false
                            ;
003502 964842rr       13818         MOV.B   ES,#SEG( _PasswordProtected )
003506 9908rrrr       13819         MOV.W   R0,#SOF( _PasswordProtected )
00350A BA00           13820         MOV.W   [R0],#00H
00350C D680           13821         RET
00350C D680           13821         RET
00350E                13822 _965:
                      13823 ; rs232cmd.c 3826                                       else
                      13824 ; rs232cmd.c 3827                                               SCPIError = IllegalParValue;
00350E 964842rr       13826         MOV.B   ES,#SEG( _SCPIError )
003512 9908rrrr       13827         MOV.W   R0,#SOF( _SCPIError )
003516 9A080023       13828         MOV.W   [R0],#023H
                      13829 ; rs232cmd.c 3828                               }
                      13830 ; rs232cmd.c 3829                       }
                      13831 ; rs232cmd.c 3830               }
00351A                13833 _973:
                      13834 ; rs232cmd.c 3831       }
00351A D680           13836         RET
                      13838 ; rs232cmd.c 3832       
                      13839 ; rs232cmd.c 3833       /************************************************************************
                            **/
                      13840 ; rs232cmd.c 3834       /* FactReset                                                             
                                                                                                                             
                                                       RS232CMD.C */
                      13841 ; rs232cmd.c 3835       
                      13842 ; rs232cmd.c 3836       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                  */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 213

ADDR   CODE            LINE SOURCELINE
                      13843 ; rs232cmd.c 3837       /* Revised:       000914                                                 
                                                                                                                             
                                                                                  */
                      13844 ; rs232cmd.c 3838       
                      13845 ; rs232cmd.c 3839       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      13846 ; rs232cmd.c 3840       
                      13847 ; rs232cmd.c 3841       
                      13848 ; rs232cmd.c 3842       
                      13849 ; rs232cmd.c 3843       /************************************************************************
                            **/
                      13850 ; rs232cmd.c 3844       void FactReset( void)
                      13851 ; rs232cmd.c 3845       {
                      13852         ALIGN   1
                      13854         PUBLIC  _FactReset
00351C                13855 _FactReset:
00351C 0F10           13859         PUSH.W  R4
                      13863 ; rs232cmd.c 3846               int i;
                      13864 ; rs232cmd.c 3847       
                      13865 ; rs232cmd.c 3848               if ( !PasswordProtected)
00351E 964842rr       13867         MOV.B   ES,#SEG( _PasswordProtected )
003522 9908rrrr       13868         MOV.W   R0,#SOF( _PasswordProtected )
003526 8A00           13869         MOV.W   R0,[R0]
003528 F256           13870         BNE     _982
                      13871 ; rs232cmd.c 3849               {
                      13872 ; rs232cmd.c 3850                       if ( CmdExecute && !SCPIError)
00352A 964842rr       13874         MOV.B   ES,#SEG( _CmdExecute )
00352E 9908rrrr       13875         MOV.W   R0,#SOF( _CmdExecute )
003532 8200           13876         MOV.B   R0L,[R0]
003534 F350           13877         BEQ     _982
003536 964842rr       13878         MOV.B   ES,#SEG( _SCPIError )
00353A 9908rrrr       13879         MOV.W   R0,#SOF( _SCPIError )
00353E 8A00           13880         MOV.W   R0,[R0]
003540 F24A           13881         BNE     _982
                      13882 ; rs232cmd.c 3851                       {
                      13883 ; rs232cmd.c 3852                               if ( CmdRequest)
003542 964842rr       13885         MOV.B   ES,#SEG( _CmdRequest )
003546 9908rrrr       13886         MOV.W   R0,#SOF( _CmdRequest )
00354A 8200           13887         MOV.B   R0L,[R0]
00354C F306           13888         BEQ     _975
                      13889 ; rs232cmd.c 3853                                               SCPIError = SyntaxErr;
00354E 964842rr       13891         MOV.B   ES,#SEG( _SCPIError )
003552 9908rrrr       13892         MOV.W   R0,#SOF( _SCPIError )
003556 BA03           13893         MOV.W   [R0],#03H
003558 FE3E           13894         BR      _982
003558 FE3E           13894         BR      _982
00355A                13895 _975:
                      13896 ; rs232cmd.c 3854                               else
                      13897 ; rs232cmd.c 3855                               {
                      13898 ; rs232cmd.c 3856                                       if ( ParCnt)
00355A 964842rr       13900         MOV.B   ES,#SEG( _ParCnt )
00355E 9908rrrr       13901         MOV.W   R0,#SOF( _ParCnt )
003562 8200           13902         MOV.B   R0L,[R0]
003564 F306           13903         BEQ     _976
                      13904 ; rs232cmd.c 3857                                               SCPIError = SyntaxErr;
003566 964842rr       13906         MOV.B   ES,#SEG( _SCPIError )
00356A 9908rrrr       13907         MOV.W   R0,#SOF( _SCPIError )
00356E BA03           13908         MOV.W   [R0],#03H
003570 FE32           13909         BR      _982
003570 FE32           13909         BR      _982
003572                13910 _976:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 214

ADDR   CODE            LINE SOURCELINE
                      13911 ; rs232cmd.c 3858                                       else
                      13912 ; rs232cmd.c 3859                                       {
                      13913 ; rs232cmd.c 3860                                               GenlockDefaults();               
                                           // 
                      13915         CALL    _GenlockDefaults
003572 C4rrrrrr       +13915 ;       FCALL   _GenlockDefaults
                      13916 ; rs232cmd.c 3861                                               BBDefaults();                    
                                                           // 
                      13918         CALL    _BBDefaults
003576 C4rrrrrr       +13918 ;       FCALL   _BBDefaults
                      13919 ; rs232cmd.c 3862                                               CBDefaults();                    
                                                           //
                      13921         CALL    _CBDefaults
00357A C4rrrrrr       +13921 ;       FCALL   _CBDefaults
                      13922 ; rs232cmd.c 3863                                               AudioDefaults();                 
                                                   //
                      13924         CALL    _AudioDefaults
00357E C4rrrrrr       +13924 ;       FCALL   _AudioDefaults
                      13925 ; rs232cmd.c 3864       
                      13926 ; rs232cmd.c 3865                                               GenlockInit();                   
                                                   // init the genlock setup
                      13928         CALL    _GenlockInit
003582 C4rrrrrr       +13928 ;       FCALL   _GenlockInit
                      13929 ; rs232cmd.c 3866                                               BBInit();                        
                                                                           // init the black burst setups
                      13931         CALL    _BBInit
003586 C4rrrrrr       +13931 ;       FCALL   _BBInit
                      13932 ; rs232cmd.c 3867                                               CBInit();                        
                                                                           // init the colorbar generator (PAL,EBU ColorBar)
                      13934         CALL    _CBInit
00358A C4rrrrrr       +13934 ;       FCALL   _CBInit
                      13935 ; rs232cmd.c 3868                                               AudioInit();                     
                                                           // init the audio setup, (this includes an AudioTimer)            
                                          
                      13937         CALL    _AudioInit
00358E C4rrrrrr       +13937 ;       FCALL   _AudioInit
                      13938 ; rs232cmd.c 3869       
                      13939 ; rs232cmd.c 3870                                               GenlockUpdate();                 
                                                   // update the genlock setup.
                      13941         CALL    _GenlockUpdate
003592 C4rrrrrr       +13941 ;       FCALL   _GenlockUpdate
                      13942 ; rs232cmd.c 3871                                               CBUpdate();                      
                                                                   // update the colorbar generator (PAL,EBU ColorBar)
                      13944         CALL    _CBUpdate
003596 C4rrrrrr       +13944 ;       FCALL   _CBUpdate
                      13945 ; rs232cmd.c 3872                                               BBUpdate();                      
                                                                   // update the black burst setups
                      13947         CALL    _BBUpdate
00359A C4rrrrrr       +13947 ;       FCALL   _BBUpdate
                      13948 ; rs232cmd.c 3873                                               AudioUpdate();                   
                                                   // update the audio setup
                      13950         CALL    _AudioUpdate
00359E C4rrrrrr       +13950 ;       FCALL   _AudioUpdate
                      13951 ; rs232cmd.c 3874       
                      13952 ; rs232cmd.c 3875                                               for ( i = 1; i <= NoOfPresets; i+
                            +)
0035A2 B941           13954         MOV.W   R4,#01H
0035A4                13956 _977:
                      13957 ; rs232cmd.c 3876                                                       StorePreset( i);
0035A4 8904           13959         MOV.W   R0,R4
                      13962         CALL    _StorePreset
0035A6 C4rrrrrr       +13962 ;       FCALL   _StorePreset
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 215

ADDR   CODE            LINE SOURCELINE
0035AA A941           13966         ADDS.W  R4,#01H
0035AC 99440004       13969         CMP.W   R4,#04H
0035B0 FDF9           13970         BLE     _977
                      13971 ; rs232cmd.c 3877       
                      13972 ; rs232cmd.c 3878                                               Settings.ActivePreset = 0;
0035B2 964842rr       13974         MOV.B   ES,#SEG( _Settings )
0035B6 9908rrrr       13975         MOV.W   R0,#SOF( _Settings )
0035BA BA00           13976         MOV.W   [R0],#00H
                      13977 ; rs232cmd.c 3879                                               NV_Store( &Settings, SettingsPtr,
                             sizeof( Settings));
0035BC 9918rrrr       13979         MOV.W   R1,#SEG( _Settings )
0035C0 9908rrrr       13980         MOV.W   R0,#SOF( _Settings )
0035C4 964842rr       13981         MOV.B   ES,#SEG( _SettingsPtr )
0035C8 9928rrrr       13982         MOV.W   R2,#SOF( _SettingsPtr )
0035CC 8A22           13983         MOV.W   R2,[R2]
0035CE 9938004A       13984         MOV.W   R3,#04AH
                      13985         CALL    _NV_Store
0035D2 C4rrrrrr       +13985 ;       FCALL   _NV_Store
                      13986 ; rs232cmd.c 3880                                       }
                      13987 ; rs232cmd.c 3881                               }
                      13988 ; rs232cmd.c 3882                       }
                      13989 ; rs232cmd.c 3883               }
0035D6                13991 _982:
                      13992 ; rs232cmd.c 3884       }
0035D6 2F10           13994         POP.W   R4
0035D8 D680           13996         RET
                      13999 ; rs232cmd.c 3885       
                      14000 ; rs232cmd.c 3886       /************************************************************************
                            **/
                      14001 ; rs232cmd.c 3887       /* FactV24Command                                                        
                                                                                                                             
                                               RS232CMD.C */
                      14002 ; rs232cmd.c 3888       /* Author:              Kim Engedahl, DEV, 000402                        
                                                                                                                             
                                  */
                      14003 ; rs232cmd.c 3889       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      14004 ; rs232cmd.c 3890       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14005 ; rs232cmd.c 3891       /************************************************************************
                            **/
                      14006 ; rs232cmd.c 3892       void FactV24Command( void)
                      14007 ; rs232cmd.c 3893         {
                      14008         ALIGN   1
                      14010         PUBLIC  _FactV24Command
0035DA                14011 _FactV24Command:
0035DA 0F30           14015         PUSH.W  R4, R5
0035DC 9972003E       14017         SUB.W   R7,#03EH
                      14023 ; rs232cmd.c 3894         UC address;
                      14024 ; rs232cmd.c 3895         char command[30], result[30];;
                      14025 ; rs232cmd.c 3896       
                      14026 ; rs232cmd.c 3897         if (!PasswordProtected)
0035E0 964842rr       14028         MOV.B   ES,#SEG( _PasswordProtected )
0035E4 9908rrrr       14029         MOV.W   R0,#SOF( _PasswordProtected )
0035E8 8A00           14030         MOV.W   R0,[R0]
                      14031         BNE     _999
0035EA F302           +14031 ;       BEQ     _LG_918
0035EC D50084         +14031 ;       JMP.L   _999
0035F0 D5008400       +14031 ;       JMP.L   _999
0035F0                +14031 _LG_918:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 216

ADDR   CODE            LINE SOURCELINE
                      14032 ; rs232cmd.c 3898           {
                      14033 ; rs232cmd.c 3899           if (CmdExecute && !SCPIError)
0035F0 964842rr       14035         MOV.B   ES,#SEG( _CmdExecute )
0035F4 9908rrrr       14036         MOV.W   R0,#SOF( _CmdExecute )
0035F8 8200           14037         MOV.B   R0L,[R0]
0035FA F37D           14038         BEQ     _999
0035FC 964842rr       14039         MOV.B   ES,#SEG( _SCPIError )
003600 9908rrrr       14040         MOV.W   R0,#SOF( _SCPIError )
003604 8A00           14041         MOV.W   R0,[R0]
003606 F277           14042         BNE     _999
                      14043 ; rs232cmd.c 3900             {
                      14044 ; rs232cmd.c 3901             if (CmdRequest)
003608 964842rr       14046         MOV.B   ES,#SEG( _CmdRequest )
00360C 9908rrrr       14047         MOV.W   R0,#SOF( _CmdRequest )
003610 8200           14048         MOV.B   R0L,[R0]
003612 F306           14049         BEQ     _987
                      14050 ; rs232cmd.c 3902               SCPIError = SyntaxErr;
003614 964842rr       14052         MOV.B   ES,#SEG( _SCPIError )
003618 9908rrrr       14053         MOV.W   R0,#SOF( _SCPIError )
00361C BA03           14054         MOV.W   [R0],#03H
00361E FE6B           14055         BR      _999
00361E FE6B           14055         BR      _999
003620                14056 _987:
                      14057 ; rs232cmd.c 3903             else
                      14058 ; rs232cmd.c 3904               {
                      14059 ; rs232cmd.c 3905               if ((ParCnt != 2) || (sscanf(Cmd, "%d,%s", &address, command) != 
                            2))
003620 964842rr       14061         MOV.B   ES,#SEG( _ParCnt )
003624 9908rrrr       14062         MOV.W   R0,#SOF( _ParCnt )
003628 8200           14063         MOV.B   R0L,[R0]
00362A 910402         14064         CMP.B   R0L,#02H
00362D F21A           14065         BNE     _988
00362F 9918rrrr       14066         MOV.W   R1,#SEG( _Cmd )
003633 9908rrrr       14067         MOV.W   R0,#SOF( _Cmd )
003637 9168rr         14068         MOV.B   R3L,#SEG( __lc_bs )
00363A 7177           14069         XOR.B   R3H,R3H
00363C 8927           14070         MOV.W   R2,R7
00363E 91A8rr         14071         MOV.B   R5L,#SEG( __lc_bs )
003641 71BB           14072         XOR.B   R5H,R5H
003643 404702         14073         LEA     R4,R7+2
003646 0F30           14074         PUSH.W  R4, R5
003648 0F0C           14076         PUSH.W  R2, R3
00364A 9938rrrr       14078         MOV.W   R3,#SEG( _984 )
00364E 9928rrrr       14079         MOV.W   R2,#SOF( _984 )
003652 0F0C           14080         PUSH.W  R2, R3
                      14082         CALL    _sscanf
003654 C4rrrrrr       +14082 ;       FCALL   _sscanf
003658 9970000C       14083         ADD.W   R7,#0CH
00365C 99040002       14085         CMP.W   R0,#02H
003660 F306           14086         BEQ     _989
003660 F306           14086         BEQ     _989
003662                14087 _988:
                      14088 ; rs232cmd.c 3906                 SCPIError = SyntaxErr;
003662 964842rr       14090         MOV.B   ES,#SEG( _SCPIError )
003666 9908rrrr       14091         MOV.W   R0,#SOF( _SCPIError )
00366A BA03           14092         MOV.W   [R0],#03H
00366C FE44           14093         BR      _999
00366C FE44           14093         BR      _999
00366E                14094 _989:
                      14095 ; rs232cmd.c 3907               else
                      14096 ; rs232cmd.c 3908                 {
                      14097 ; rs232cmd.c 3909                 if (command[2] == '?')
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 217

ADDR   CODE            LINE SOURCELINE
00366E 9474043F       14099         CMP.B   [R7+4],#03FH
003672 F227           14100         BNE     _991
                      14101 ; rs232cmd.c 3910                   {
                      14102 ; rs232cmd.c 3911                   if (sio0SndRequest( 12, address, result, "%s", command) == OK
                            )
003674 9908000C       14104         MOV.W   R0,#0CH
003678 8227           14105         MOV.B   R1L,[R7]
00367A B130           14106         MOVS.B  R1H,#00H
00367C 91A8rr         14107         MOV.B   R5L,#SEG( __lc_bs )
00367F 71BB           14108         XOR.B   R5H,R5H
003681 404720         14109         LEA     R4,R7+32
003684 9168rr         14110         MOV.B   R3L,#SEG( __lc_bs )
003687 7177           14111         XOR.B   R3H,R3H
003689 402702         14112         LEA     R2,R7+2
00368C 0F0C           14113         PUSH.W  R2, R3
00368E 9938rrrr       14115         MOV.W   R3,#SEG( _985 )
003692 9928rrrr       14116         MOV.W   R2,#SOF( _985 )
003696 0F0C           14117         PUSH.W  R2, R3
003698 8935           14119         MOV.W   R3,R5
00369A 8924           14120         MOV.W   R2,R4
                      14121         CALL    _sio0SndRequest
00369C C4rrrrrr       +14121 ;       FCALL   _sio0SndRequest
0036A0 99700008       14122         ADD.W   R7,#08H
0036A4 9904FFFF       14124         CMP.W   R0,#0FFFFH
0036A8 F205           14125         BNE     _990
                      14126 ; rs232cmd.c 3912                     rs232puts(result);
0036AA 8915           14128         MOV.W   R1,R5
0036AC 8904           14129         MOV.W   R0,R4
                      14130         CALL    _rs232puts
0036AE C4rrrrrr       +14130 ;       FCALL   _rs232puts
0036B2 FE21           14131         BR      _999
0036B2 FE21           14131         BR      _999
0036B4                14132 _990:
                      14133 ; rs232cmd.c 3913                   else
                      14134 ; rs232cmd.c 3914                     SCPIError = ExecErr;
0036B4 964842rr       14136         MOV.B   ES,#SEG( _SCPIError )
0036B8 9908rrrr       14137         MOV.W   R0,#SOF( _SCPIError )
0036BC 9A08001D       14138         MOV.W   [R0],#01DH
                      14139 ; rs232cmd.c 3915                   }
0036C0 FE1A           14141         BR      _999
0036C0 FE1A           14141         BR      _999
0036C2                14142 _991:
                      14143 ; rs232cmd.c 3916                 else
                      14144 ; rs232cmd.c 3917                   {
                      14145 ; rs232cmd.c 3918                   if (sio0SndCommand(20, address, "%s;", command) == FAIL)
0036C2 99080014       14147         MOV.W   R0,#014H
0036C6 8227           14148         MOV.B   R1L,[R7]
0036C8 B130           14149         MOVS.B  R1H,#00H
0036CA 9168rr         14150         MOV.B   R3L,#SEG( __lc_bs )
0036CD 7177           14151         XOR.B   R3H,R3H
0036CF 402702         14152         LEA     R2,R7+2
0036D2 0F0C           14153         PUSH.W  R2, R3
0036D4 9938rrrr       14155         MOV.W   R3,#SEG( _986 )
0036D8 9928rrrr       14156         MOV.W   R2,#SOF( _986 )
0036DC 0F0C           14157         PUSH.W  R2, R3
                      14159         CALL    _sio0SndCommand
0036DE C4rrrrrr       +14159 ;       FCALL   _sio0SndCommand
0036E2 99700008       14160         ADD.W   R7,#08H
0036E6 6900           14162         OR.W    R0,R0
0036E8 F206           14163         BNE     _999
                      14164 ; rs232cmd.c 3919                     SCPIError = ExecErr;
0036EA 964842rr       14166         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 218

ADDR   CODE            LINE SOURCELINE
0036EE 9908rrrr       14167         MOV.W   R0,#SOF( _SCPIError )
0036F2 9A08001D       14168         MOV.W   [R0],#01DH
                      14169 ; rs232cmd.c 3920                   }
                      14170 ; rs232cmd.c 3921                 }
                      14171 ; rs232cmd.c 3922               }
                      14172 ; rs232cmd.c 3923             }
                      14173 ; rs232cmd.c 3924           }
0036F6                14175 _999:
                      14176 ; rs232cmd.c 3925         }
0036F6 9970003E       14178         ADD.W   R7,#03EH
0036FA 2F30           14180         POP.W   R4, R5
0036FC D680           14182         RET
                      14184 ; rs232cmd.c 3926       
                      14185 ; rs232cmd.c 3927       /************************************************************************
                            **/
                      14186 ; rs232cmd.c 3928       /* FactV24Transparent                                                    
                                                                                                                             
                               RS232CMD.C */
                      14187 ; rs232cmd.c 3929       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      14188 ; rs232cmd.c 3930       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      14189 ; rs232cmd.c 3931       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14190 ; rs232cmd.c 3932       /************************************************************************
                            **/
                      14191 ; rs232cmd.c 3933       void FactV24Transparent( void)
                      14192 ; rs232cmd.c 3934         {
                      14193         ALIGN   1
                      14195         PUBLIC  _FactV24Transparent
0036FE                14196 _FactV24Transparent:
                      14202 ; rs232cmd.c 3935         int unit;
                      14203 ; rs232cmd.c 3936       
                      14204 ; rs232cmd.c 3937         if (!PasswordProtected)
0036FE 964842rr       14206         MOV.B   ES,#SEG( _PasswordProtected )
003702 9908rrrr       14207         MOV.W   R0,#SOF( _PasswordProtected )
003706 8A00           14208         MOV.W   R0,[R0]
003708 F22E           14209         BNE     _1010
                      14210 ; rs232cmd.c 3938           {
                      14211 ; rs232cmd.c 3939           if (CmdExecute && !SCPIError)
00370A 964842rr       14213         MOV.B   ES,#SEG( _CmdExecute )
00370E 9908rrrr       14214         MOV.W   R0,#SOF( _CmdExecute )
003712 8200           14215         MOV.B   R0L,[R0]
003714 F328           14216         BEQ     _1010
003716 964842rr       14217         MOV.B   ES,#SEG( _SCPIError )
00371A 9908rrrr       14218         MOV.W   R0,#SOF( _SCPIError )
00371E 8A00           14219         MOV.W   R0,[R0]
003720 F222           14220         BNE     _1010
                      14221 ; rs232cmd.c 3940             {
                      14222 ; rs232cmd.c 3941             if (CmdRequest)
003722 964842rr       14224         MOV.B   ES,#SEG( _CmdRequest )
003726 9908rrrr       14225         MOV.W   R0,#SOF( _CmdRequest )
00372A 8200           14226         MOV.B   R0L,[R0]
00372C F306           14227         BEQ     _1004
                      14228 ; rs232cmd.c 3942               SCPIError = SyntaxErr;
00372E 964842rr       14230         MOV.B   ES,#SEG( _SCPIError )
003732 9908rrrr       14231         MOV.W   R0,#SOF( _SCPIError )
003736 BA03           14232         MOV.W   [R0],#03H
003738 D680           14233         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 219

ADDR   CODE            LINE SOURCELINE
003738 D680           14233         RET
00373A                14234 _1004:
                      14235 ; rs232cmd.c 3943             else
                      14236 ; rs232cmd.c 3944               {
                      14237 ; rs232cmd.c 3945               unit = FindParameter(Cmd, UnitPar);
00373A 9918rrrr       14239         MOV.W   R1,#SEG( _Cmd )
00373E 9908rrrr       14240         MOV.W   R0,#SOF( _Cmd )
003742 9938rrrr       14241         MOV.W   R3,#SEG( _UnitPar )
003746 9928rrrr       14242         MOV.W   R2,#SOF( _UnitPar )
00374A C514E5         14243         CALL    _FindParameter
                      14245 ; rs232cmd.c 3946               if (unit > -1)
00374D 9904FFFF       14247         CMP.W   R0,#0FFFFH
003751 FD04           14248         BLE     _1005
                      14249 ; rs232cmd.c 3947                 BBSPGCommunication(unit);
                      14251         CALL    _BBSPGCommunication
003753 C4rrrrrr       +14251 ;       FCALL   _BBSPGCommunication
003757 D680           14253         RET
003757 D68000         14253         RET
00375A                14254 _1005:
                      14255 ; rs232cmd.c 3948               else
                      14256 ; rs232cmd.c 3949                 SCPIError = DataOutOfRange;
00375A 964842rr       14258         MOV.B   ES,#SEG( _SCPIError )
00375E 9908rrrr       14259         MOV.W   R0,#SOF( _SCPIError )
003762 9A080021       14260         MOV.W   [R0],#021H
                      14261 ; rs232cmd.c 3950               }
                      14262 ; rs232cmd.c 3951             }
                      14263 ; rs232cmd.c 3952           }
003766                14265 _1010:
                      14266 ; rs232cmd.c 3953         }
003766 D680           14268         RET
                      14270 ; rs232cmd.c 3954       
                      14271 ; rs232cmd.c 3955       /************************************************************************
                            **/
                      14272 ; rs232cmd.c 3956       /* FactChecksumCode                                                      
                                                                                                                             
                                       RS232CMD.C */
                      14273 ; rs232cmd.c 3957       
                      14274 ; rs232cmd.c 3958       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                  */
                      14275 ; rs232cmd.c 3959       /* Revised:       000705                                                 
                                                                                                                             
                                                                                  */
                      14276 ; rs232cmd.c 3960       
                      14277 ; rs232cmd.c 3961       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14278 ; rs232cmd.c 3962       
                      14279 ; rs232cmd.c 3963       
                      14280 ; rs232cmd.c 3964       
                      14281 ; rs232cmd.c 3965       /************************************************************************
                            **/
                      14282 ; rs232cmd.c 3966       void FactChecksumCode( void)
                      14283 ; rs232cmd.c 3967       {
                      14284         ALIGN   1
                      14286         PUBLIC  _FactChecksumCode
003768                14287 _FactChecksumCode:
003768 0F30           14291         PUSH.W  R4, R5
00376A 9972001E       14293         SUB.W   R7,#01EH
                      14296 ; rs232cmd.c 3968               char buffer[30];
                      14297 ; rs232cmd.c 3969       
                      14298 ; rs232cmd.c 3970               if ( CmdExecute && !SCPIError)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 220

ADDR   CODE            LINE SOURCELINE
00376E 964842rr       14300         MOV.B   ES,#SEG( _CmdExecute )
003772 9908rrrr       14301         MOV.W   R0,#SOF( _CmdExecute )
003776 8200           14302         MOV.B   R0L,[R0]
003778 F338           14303         BEQ     _1018
00377A 964842rr       14304         MOV.B   ES,#SEG( _SCPIError )
00377E 9908rrrr       14305         MOV.W   R0,#SOF( _SCPIError )
003782 8A00           14306         MOV.W   R0,[R0]
003784 F232           14307         BNE     _1018
                      14308 ; rs232cmd.c 3971               {
                      14309 ; rs232cmd.c 3972                       if ( CmdRequest)
003786 964842rr       14311         MOV.B   ES,#SEG( _CmdRequest )
00378A 9908rrrr       14312         MOV.W   R0,#SOF( _CmdRequest )
00378E 8200           14313         MOV.B   R0L,[R0]
003790 F327           14314         BEQ     _1014
                      14315 ; rs232cmd.c 3973                       {
                      14316 ; rs232cmd.c 3974                               if ( ParCnt)
003792 964842rr       14318         MOV.B   ES,#SEG( _ParCnt )
003796 9908rrrr       14319         MOV.W   R0,#SOF( _ParCnt )
00379A 8200           14320         MOV.B   R0L,[R0]
00379C F306           14321         BEQ     _1013
                      14322 ; rs232cmd.c 3975                                       SCPIError = SyntaxErr;
00379E 964842rr       14324         MOV.B   ES,#SEG( _SCPIError )
0037A2 9908rrrr       14325         MOV.W   R0,#SOF( _SCPIError )
0037A6 BA03           14326         MOV.W   [R0],#03H
0037A8 FE20           14327         BR      _1018
0037A8 FE20           14327         BR      _1018
0037AA                14328 _1013:
                      14329 ; rs232cmd.c 3976                               else
                      14330 ; rs232cmd.c 3977                               {               
                      14331 ; rs232cmd.c 3978                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPROMCode, StartOfPROMCode+SizeOfPROMCode-1));
0037AA B910           14333         MOV.W   R1,#00H
0037AC B900           14334         MOV.W   R0,#00H
0037AE B933           14335         MOV.W   R3,#03H
0037B0 9928FFFF       14336         MOV.W   R2,#0FFFFH
                      14337         CALL    _ROMChecksum
0037B4 C4rrrrrr       +14337 ;       FCALL   _ROMChecksum
0037B8 91A8rr         14338         MOV.B   R5L,#SEG( __lc_bs )
0037BB 71BB           14339         XOR.B   R5H,R5H
0037BD 8947           14340         MOV.W   R4,R7
0037BF 0F01           14341         PUSH.W  R0
0037C1 9918rrrr       14343         MOV.W   R1,#SEG( _1012 )
0037C5 9908rrrr       14344         MOV.W   R0,#SOF( _1012 )
0037C9 0F03           14345         PUSH.W  R0, R1
0037CB 8915           14347         MOV.W   R1,R5
0037CD 8904           14348         MOV.W   R0,R4
                      14349         CALL    _sprintf
0037CF C4rrrrrr       +14349 ;       FCALL   _sprintf
0037D3 A976           14350         ADDS.W  R7,#06H
                      14352 ; rs232cmd.c 3979                                       rs232puts( buffer);
0037D5 8915           14354         MOV.W   R1,R5
0037D7 8904           14355         MOV.W   R0,R4
                      14356         CALL    _rs232puts
0037D9 C4rrrrrr       +14356 ;       FCALL   _rs232puts
                      14357 ; rs232cmd.c 3980                               }
                      14358 ; rs232cmd.c 3981                       }
0037DD FE06           14360         BR      _1018
0037DD FE0600         14360         BR      _1018
0037E0                14361 _1014:
                      14362 ; rs232cmd.c 3982                       else
                      14363 ; rs232cmd.c 3983                               SCPIError = SyntaxErr;
0037E0 964842rr       14365         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 221

ADDR   CODE            LINE SOURCELINE
0037E4 9908rrrr       14366         MOV.W   R0,#SOF( _SCPIError )
0037E8 BA03           14367         MOV.W   [R0],#03H
                      14368 ; rs232cmd.c 3984               }
0037EA                14370 _1018:
                      14371 ; rs232cmd.c 3985       }
0037EA 9970001E       14373         ADD.W   R7,#01EH
0037EE 2F30           14375         POP.W   R4, R5
0037F0 D680           14377         RET
                      14379 ; rs232cmd.c 3986       
                      14380 ; rs232cmd.c 3987       /************************************************************************
                            **/
                      14381 ; rs232cmd.c 3988       /* FactChecksumPLD                                                       
                                                                                                                             
                                       RS232CMD.C */
                      14382 ; rs232cmd.c 3989       
                      14383 ; rs232cmd.c 3990       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                  */
                      14384 ; rs232cmd.c 3991       /* Revised:       000705                                                 
                                                                                                                             
                                                                                  */
                      14385 ; rs232cmd.c 3992       
                      14386 ; rs232cmd.c 3993       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14387 ; rs232cmd.c 3994       
                      14388 ; rs232cmd.c 3995       
                      14389 ; rs232cmd.c 3996       
                      14390 ; rs232cmd.c 3997       /************************************************************************
                            **/
                      14391 ; rs232cmd.c 3998       void FactChecksumPLD( void)
                      14392 ; rs232cmd.c 3999       {
                      14393         ALIGN   1
                      14395         PUBLIC  _FactChecksumPLD
0037F2                14396 _FactChecksumPLD:
0037F2 0F30           14400         PUSH.W  R4, R5
0037F4 9972001E       14402         SUB.W   R7,#01EH
                      14405 ; rs232cmd.c 4000               char buffer[30];
                      14406 ; rs232cmd.c 4001       
                      14407 ; rs232cmd.c 4002               if ( CmdExecute && !SCPIError)
0037F8 964842rr       14409         MOV.B   ES,#SEG( _CmdExecute )
0037FC 9908rrrr       14410         MOV.W   R0,#SOF( _CmdExecute )
003800 8200           14411         MOV.B   R0L,[R0]
003802 F338           14412         BEQ     _1024
003804 964842rr       14413         MOV.B   ES,#SEG( _SCPIError )
003808 9908rrrr       14414         MOV.W   R0,#SOF( _SCPIError )
00380C 8A00           14415         MOV.W   R0,[R0]
00380E F232           14416         BNE     _1024
                      14417 ; rs232cmd.c 4003               {
                      14418 ; rs232cmd.c 4004                       if ( CmdRequest)
003810 964842rr       14420         MOV.B   ES,#SEG( _CmdRequest )
003814 9908rrrr       14421         MOV.W   R0,#SOF( _CmdRequest )
003818 8200           14422         MOV.B   R0L,[R0]
00381A F327           14423         BEQ     _1020
                      14424 ; rs232cmd.c 4005                       {
                      14425 ; rs232cmd.c 4006                               if ( ParCnt)
00381C 964842rr       14427         MOV.B   ES,#SEG( _ParCnt )
003820 9908rrrr       14428         MOV.W   R0,#SOF( _ParCnt )
003824 8200           14429         MOV.B   R0L,[R0]
003826 F306           14430         BEQ     _1019
                      14431 ; rs232cmd.c 4007                                       SCPIError = SyntaxErr;
003828 964842rr       14433         MOV.B   ES,#SEG( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 222

ADDR   CODE            LINE SOURCELINE
00382C 9908rrrr       14434         MOV.W   R0,#SOF( _SCPIError )
003830 BA03           14435         MOV.W   [R0],#03H
003832 FE20           14436         BR      _1024
003832 FE20           14436         BR      _1024
003834                14437 _1019:
                      14438 ; rs232cmd.c 4008                               else
                      14439 ; rs232cmd.c 4009                               {               
                      14440 ; rs232cmd.c 4010                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfPLDCode, StartOfPLDCode+SizeOfPLDCode-1));
003834 B914           14442         MOV.W   R1,#04H
003836 B900           14443         MOV.W   R0,#00H
003838 B934           14444         MOV.W   R3,#04H
00383A 99289FFF       14445         MOV.W   R2,#09FFFH
                      14446         CALL    _ROMChecksum
00383E C4rrrrrr       +14446 ;       FCALL   _ROMChecksum
003842 91A8rr         14447         MOV.B   R5L,#SEG( __lc_bs )
003845 71BB           14448         XOR.B   R5H,R5H
003847 8947           14449         MOV.W   R4,R7
003849 0F01           14450         PUSH.W  R0
00384B 9918rrrr       14452         MOV.W   R1,#SEG( _1012 )
00384F 9908rrrr       14453         MOV.W   R0,#SOF( _1012 )
003853 0F03           14454         PUSH.W  R0, R1
003855 8915           14456         MOV.W   R1,R5
003857 8904           14457         MOV.W   R0,R4
                      14458         CALL    _sprintf
003859 C4rrrrrr       +14458 ;       FCALL   _sprintf
00385D A976           14459         ADDS.W  R7,#06H
                      14461 ; rs232cmd.c 4011                                       rs232puts( buffer);
00385F 8915           14463         MOV.W   R1,R5
003861 8904           14464         MOV.W   R0,R4
                      14465         CALL    _rs232puts
003863 C4rrrrrr       +14465 ;       FCALL   _rs232puts
                      14466 ; rs232cmd.c 4012                               }
                      14467 ; rs232cmd.c 4013                       }
003867 FE06           14469         BR      _1024
003867 FE0600         14469         BR      _1024
00386A                14470 _1020:
                      14471 ; rs232cmd.c 4014                       else
                      14472 ; rs232cmd.c 4015                               SCPIError = SyntaxErr;
00386A 964842rr       14474         MOV.B   ES,#SEG( _SCPIError )
00386E 9908rrrr       14475         MOV.W   R0,#SOF( _SCPIError )
003872 BA03           14476         MOV.W   [R0],#03H
                      14477 ; rs232cmd.c 4016               }
003874                14479 _1024:
                      14480 ; rs232cmd.c 4017       }
003874 9970001E       14482         ADD.W   R7,#01EH
003878 2F30           14484         POP.W   R4, R5
00387A D680           14486         RET
                      14488 ; rs232cmd.c 4018       
                      14489 ; rs232cmd.c 4019       /************************************************************************
                            **/
                      14490 ; rs232cmd.c 4020       /* FactChecksumEmbAudio                                                  
                                                                                                                        RS232
                            CMD.C */
                      14491 ; rs232cmd.c 4021       
                      14492 ; rs232cmd.c 4022       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                  */
                      14493 ; rs232cmd.c 4023       /* Revised:       000705                                                 
                                                                                                                             
                                                                                  */
                      14494 ; rs232cmd.c 4024       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 223

ADDR   CODE            LINE SOURCELINE
                      14495 ; rs232cmd.c 4025       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14496 ; rs232cmd.c 4026       
                      14497 ; rs232cmd.c 4027       
                      14498 ; rs232cmd.c 4028       
                      14499 ; rs232cmd.c 4029       /************************************************************************
                            **/
                      14500 ; rs232cmd.c 4030       void FactChecksumEmbAudio( void)
                      14501 ; rs232cmd.c 4031       {
                      14502         ALIGN   1
                      14504         PUBLIC  _FactChecksumEmbAudio
00387C                14505 _FactChecksumEmbAudio:
00387C 0F30           14509         PUSH.W  R4, R5
00387E 9972001E       14511         SUB.W   R7,#01EH
                      14514 ; rs232cmd.c 4032               char buffer[30];
                      14515 ; rs232cmd.c 4033       
                      14516 ; rs232cmd.c 4034               if ( CmdExecute && !SCPIError)
003882 964842rr       14518         MOV.B   ES,#SEG( _CmdExecute )
003886 9908rrrr       14519         MOV.W   R0,#SOF( _CmdExecute )
00388A 8200           14520         MOV.B   R0L,[R0]
00388C F339           14521         BEQ     _1030
00388E 964842rr       14522         MOV.B   ES,#SEG( _SCPIError )
003892 9908rrrr       14523         MOV.W   R0,#SOF( _SCPIError )
003896 8A00           14524         MOV.W   R0,[R0]
003898 F233           14525         BNE     _1030
                      14526 ; rs232cmd.c 4035               {
                      14527 ; rs232cmd.c 4036                       if ( CmdRequest)
00389A 964842rr       14529         MOV.B   ES,#SEG( _CmdRequest )
00389E 9908rrrr       14530         MOV.W   R0,#SOF( _CmdRequest )
0038A2 8200           14531         MOV.B   R0L,[R0]
0038A4 F328           14532         BEQ     _1026
                      14533 ; rs232cmd.c 4037                       {
                      14534 ; rs232cmd.c 4038                               if ( ParCnt)
0038A6 964842rr       14536         MOV.B   ES,#SEG( _ParCnt )
0038AA 9908rrrr       14537         MOV.W   R0,#SOF( _ParCnt )
0038AE 8200           14538         MOV.B   R0L,[R0]
0038B0 F306           14539         BEQ     _1025
                      14540 ; rs232cmd.c 4039                                       SCPIError = SyntaxErr;
0038B2 964842rr       14542         MOV.B   ES,#SEG( _SCPIError )
0038B6 9908rrrr       14543         MOV.W   R0,#SOF( _SCPIError )
0038BA BA03           14544         MOV.W   [R0],#03H
0038BC FE21           14545         BR      _1030
0038BC FE21           14545         BR      _1030
0038BE                14546 _1025:
                      14547 ; rs232cmd.c 4040                               else
                      14548 ; rs232cmd.c 4041                               {               
                      14549 ; rs232cmd.c 4042                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfEmbAudioCode, StartOfEmbAudioCode+SizeOfEmbAudioCode-1));
0038BE B914           14551         MOV.W   R1,#04H
0038C0 9908A000       14552         MOV.W   R0,#0A000H
0038C4 B934           14553         MOV.W   R3,#04H
0038C6 9928C3FF       14554         MOV.W   R2,#0C3FFH
                      14555         CALL    _ROMChecksum
0038CA C4rrrrrr       +14555 ;       FCALL   _ROMChecksum
0038CE 91A8rr         14556         MOV.B   R5L,#SEG( __lc_bs )
0038D1 71BB           14557         XOR.B   R5H,R5H
0038D3 8947           14558         MOV.W   R4,R7
0038D5 0F01           14559         PUSH.W  R0
0038D7 9918rrrr       14561         MOV.W   R1,#SEG( _1012 )
0038DB 9908rrrr       14562         MOV.W   R0,#SOF( _1012 )
0038DF 0F03           14563         PUSH.W  R0, R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 224

ADDR   CODE            LINE SOURCELINE
0038E1 8915           14565         MOV.W   R1,R5
0038E3 8904           14566         MOV.W   R0,R4
                      14567         CALL    _sprintf
0038E5 C4rrrrrr       +14567 ;       FCALL   _sprintf
0038E9 A976           14568         ADDS.W  R7,#06H
                      14570 ; rs232cmd.c 4043                                       rs232puts( buffer);
0038EB 8915           14572         MOV.W   R1,R5
0038ED 8904           14573         MOV.W   R0,R4
                      14574         CALL    _rs232puts
0038EF C4rrrrrr       +14574 ;       FCALL   _rs232puts
                      14575 ; rs232cmd.c 4044                               }
                      14576 ; rs232cmd.c 4045                       }
0038F3 FE06           14578         BR      _1030
0038F3 FE0600         14578         BR      _1030
0038F6                14579 _1026:
                      14580 ; rs232cmd.c 4046                       else
                      14581 ; rs232cmd.c 4047                               SCPIError = SyntaxErr;
0038F6 964842rr       14583         MOV.B   ES,#SEG( _SCPIError )
0038FA 9908rrrr       14584         MOV.W   R0,#SOF( _SCPIError )
0038FE BA03           14585         MOV.W   [R0],#03H
                      14586 ; rs232cmd.c 4048               }
003900                14588 _1030:
                      14589 ; rs232cmd.c 4049       }
003900 9970001E       14591         ADD.W   R7,#01EH
003904 2F30           14593         POP.W   R4, R5
003906 D680           14595         RET
                      14597 ; rs232cmd.c 4050       
                      14598 ; rs232cmd.c 4051       /************************************************************************
                            **/
                      14599 ; rs232cmd.c 4052       /* FactChecksumPattern                                                   
                                                                                                                        RS232
                            CMD.C */
                      14600 ; rs232cmd.c 4053       
                      14601 ; rs232cmd.c 4054       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                  */
                      14602 ; rs232cmd.c 4055       /* Revised:       000705                                                 
                                                                                                                             
                                                                                  */
                      14603 ; rs232cmd.c 4056       
                      14604 ; rs232cmd.c 4057       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14605 ; rs232cmd.c 4058       
                      14606 ; rs232cmd.c 4059       
                      14607 ; rs232cmd.c 4060       
                      14608 ; rs232cmd.c 4061       /************************************************************************
                            **/
                      14609 ; rs232cmd.c 4062       void FactChecksumPattern( void)
                      14610 ; rs232cmd.c 4063       {
                      14611         ALIGN   1
                      14613         PUBLIC  _FactChecksumPattern
003908                14614 _FactChecksumPattern:
003908 0F30           14618         PUSH.W  R4, R5
00390A 9972001E       14620         SUB.W   R7,#01EH
                      14623 ; rs232cmd.c 4064               char buffer[30];
                      14624 ; rs232cmd.c 4065       
                      14625 ; rs232cmd.c 4066               if ( CmdExecute && !SCPIError)
00390E 964842rr       14627         MOV.B   ES,#SEG( _CmdExecute )
003912 9908rrrr       14628         MOV.W   R0,#SOF( _CmdExecute )
003916 8200           14629         MOV.B   R0L,[R0]
003918 F338           14630         BEQ     _1036
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 225

ADDR   CODE            LINE SOURCELINE
00391A 964842rr       14631         MOV.B   ES,#SEG( _SCPIError )
00391E 9908rrrr       14632         MOV.W   R0,#SOF( _SCPIError )
003922 8A00           14633         MOV.W   R0,[R0]
003924 F232           14634         BNE     _1036
                      14635 ; rs232cmd.c 4067               {
                      14636 ; rs232cmd.c 4068                       if ( CmdRequest)
003926 964842rr       14638         MOV.B   ES,#SEG( _CmdRequest )
00392A 9908rrrr       14639         MOV.W   R0,#SOF( _CmdRequest )
00392E 8200           14640         MOV.B   R0L,[R0]
003930 F327           14641         BEQ     _1032
                      14642 ; rs232cmd.c 4069                       {
                      14643 ; rs232cmd.c 4070                               if ( ParCnt)
003932 964842rr       14645         MOV.B   ES,#SEG( _ParCnt )
003936 9908rrrr       14646         MOV.W   R0,#SOF( _ParCnt )
00393A 8200           14647         MOV.B   R0L,[R0]
00393C F306           14648         BEQ     _1031
                      14649 ; rs232cmd.c 4071                                       SCPIError = SyntaxErr;
00393E 964842rr       14651         MOV.B   ES,#SEG( _SCPIError )
003942 9908rrrr       14652         MOV.W   R0,#SOF( _SCPIError )
003946 BA03           14653         MOV.W   [R0],#03H
003948 FE20           14654         BR      _1036
003948 FE20           14654         BR      _1036
00394A                14655 _1031:
                      14656 ; rs232cmd.c 4072                               else
                      14657 ; rs232cmd.c 4073                               {               
                      14658 ; rs232cmd.c 4074                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtOfCBVideoCode, StartOfCBVideoCode+SizeOfCBVideoCode-1));
00394A B915           14660         MOV.W   R1,#05H
00394C B900           14661         MOV.W   R0,#00H
00394E B937           14662         MOV.W   R3,#07H
003950 9928FFFF       14663         MOV.W   R2,#0FFFFH
                      14664         CALL    _ROMChecksum
003954 C4rrrrrr       +14664 ;       FCALL   _ROMChecksum
003958 91A8rr         14665         MOV.B   R5L,#SEG( __lc_bs )
00395B 71BB           14666         XOR.B   R5H,R5H
00395D 8947           14667         MOV.W   R4,R7
00395F 0F01           14668         PUSH.W  R0
003961 9918rrrr       14670         MOV.W   R1,#SEG( _1012 )
003965 9908rrrr       14671         MOV.W   R0,#SOF( _1012 )
003969 0F03           14672         PUSH.W  R0, R1
00396B 8915           14674         MOV.W   R1,R5
00396D 8904           14675         MOV.W   R0,R4
                      14676         CALL    _sprintf
00396F C4rrrrrr       +14676 ;       FCALL   _sprintf
003973 A976           14677         ADDS.W  R7,#06H
                      14679 ; rs232cmd.c 4075                                       rs232puts( buffer);
003975 8915           14681         MOV.W   R1,R5
003977 8904           14682         MOV.W   R0,R4
                      14683         CALL    _rs232puts
003979 C4rrrrrr       +14683 ;       FCALL   _rs232puts
                      14684 ; rs232cmd.c 4076                               }
                      14685 ; rs232cmd.c 4077                       }
00397D FE06           14687         BR      _1036
00397D FE0600         14687         BR      _1036
003980                14688 _1032:
                      14689 ; rs232cmd.c 4078                       else
                      14690 ; rs232cmd.c 4079                               SCPIError = SyntaxErr;
003980 964842rr       14692         MOV.B   ES,#SEG( _SCPIError )
003984 9908rrrr       14693         MOV.W   R0,#SOF( _SCPIError )
003988 BA03           14694         MOV.W   [R0],#03H
                      14695 ; rs232cmd.c 4080               }
00398A                14697 _1036:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 226

ADDR   CODE            LINE SOURCELINE
                      14698 ; rs232cmd.c 4081       }
00398A 9970001E       14700         ADD.W   R7,#01EH
00398E 2F30           14702         POP.W   R4, R5
003990 D680           14704         RET
                      14706 ; rs232cmd.c 4082       
                      14707 ; rs232cmd.c 4083       /************************************************************************
                            **/
                      14708 ; rs232cmd.c 4084       /* FactChecksumRange                                                     
                                                                                                                             
                               RS232CMD.C */
                      14709 ; rs232cmd.c 4085       
                      14710 ; rs232cmd.c 4086       /* Author:              Kim Engedahl, DEV, 000705                        
                                                                                                                             
                                  */
                      14711 ; rs232cmd.c 4087       /* Revised:       000705                                                 
                                                                                                                             
                                                                                  */
                      14712 ; rs232cmd.c 4088       
                      14713 ; rs232cmd.c 4089       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14714 ; rs232cmd.c 4090       
                      14715 ; rs232cmd.c 4091       
                      14716 ; rs232cmd.c 4092       
                      14717 ; rs232cmd.c 4093       /************************************************************************
                            **/
                      14718 ; rs232cmd.c 4094       void FactChecksumRange( void)
                      14719 ; rs232cmd.c 4095       {
                      14720         ALIGN   1
                      14722         PUBLIC  _FactChecksumRange
003992                14723 _FactChecksumRange:
003992 0F30           14727         PUSH.W  R4, R5
003994 99720026       14729         SUB.W   R7,#026H
                      14734 ; rs232cmd.c 4096               UL StartAddr, EndAddr;
                      14735 ; rs232cmd.c 4097       
                      14736 ; rs232cmd.c 4098               char buffer[30];
                      14737 ; rs232cmd.c 4099       
                      14738 ; rs232cmd.c 4100               if ( CmdExecute && !SCPIError)
003998 964842rr       14740         MOV.B   ES,#SEG( _CmdExecute )
00399C 9908rrrr       14741         MOV.W   R0,#SOF( _CmdExecute )
0039A0 8200           14742         MOV.B   R0L,[R0]
0039A2 F354           14743         BEQ     _1044
0039A4 964842rr       14744         MOV.B   ES,#SEG( _SCPIError )
0039A8 9908rrrr       14745         MOV.W   R0,#SOF( _SCPIError )
0039AC 8A00           14746         MOV.W   R0,[R0]
0039AE F24E           14747         BNE     _1044
                      14748 ; rs232cmd.c 4101               {
                      14749 ; rs232cmd.c 4102                       if ( CmdRequest)
0039B0 964842rr       14751         MOV.B   ES,#SEG( _CmdRequest )
0039B4 9908rrrr       14752         MOV.W   R0,#SOF( _CmdRequest )
0039B8 8200           14753         MOV.B   R0L,[R0]
0039BA F343           14754         BEQ     _1040
                      14755 ; rs232cmd.c 4103                       {
                      14756 ; rs232cmd.c 4104                               if (( ParCnt != 2) || (( sscanf( Cmd, "%lu,%lu", 
                            &StartAddr, &EndAddr)) != 2))
0039BC 964842rr       14758         MOV.B   ES,#SEG( _ParCnt )
0039C0 9908rrrr       14759         MOV.W   R0,#SOF( _ParCnt )
0039C4 8200           14760         MOV.B   R0L,[R0]
0039C6 910402         14761         CMP.B   R0L,#02H
0039C9 F21A           14762         BNE     _1038
0039CB 9918rrrr       14763         MOV.W   R1,#SEG( _Cmd )
0039CF 9908rrrr       14764         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 227

ADDR   CODE            LINE SOURCELINE
0039D3 9168rr         14765         MOV.B   R3L,#SEG( __lc_bs )
0039D6 7177           14766         XOR.B   R3H,R3H
0039D8 8927           14767         MOV.W   R2,R7
0039DA 91A8rr         14768         MOV.B   R5L,#SEG( __lc_bs )
0039DD 71BB           14769         XOR.B   R5H,R5H
0039DF 404704         14770         LEA     R4,R7+4
0039E2 0F30           14771         PUSH.W  R4, R5
0039E4 0F0C           14773         PUSH.W  R2, R3
0039E6 9938rrrr       14775         MOV.W   R3,#SEG( _1037 )
0039EA 9928rrrr       14776         MOV.W   R2,#SOF( _1037 )
0039EE 0F0C           14777         PUSH.W  R2, R3
                      14779         CALL    _sscanf
0039F0 C4rrrrrr       +14779 ;       FCALL   _sscanf
0039F4 9970000C       14780         ADD.W   R7,#0CH
0039F8 99040002       14782         CMP.W   R0,#02H
0039FC F306           14783         BEQ     _1039
0039FC F306           14783         BEQ     _1039
0039FE                14784 _1038:
                      14785 ; rs232cmd.c 4105                                       SCPIError = SyntaxErr;
0039FE 964842rr       14787         MOV.B   ES,#SEG( _SCPIError )
003A02 9908rrrr       14788         MOV.W   R0,#SOF( _SCPIError )
003A06 BA03           14789         MOV.W   [R0],#03H
003A08 FE21           14790         BR      _1044
003A08 FE21           14790         BR      _1044
003A0A                14791 _1039:
                      14792 ; rs232cmd.c 4106                               else
                      14793 ; rs232cmd.c 4107                               {
                      14794 ; rs232cmd.c 4108                                       sprintf( buffer, "%u\n", ROMChecksum( Sta
                            rtAddr, EndAddr));
003A0A 8C1702         14796         MOV.W   R1,[R7+2]
003A0D 8A07           14797         MOV.W   R0,[R7]
003A0F 8C3706         14798         MOV.W   R3,[R7+6]
003A12 8C2704         14799         MOV.W   R2,[R7+4]
                      14800         CALL    _ROMChecksum
003A15 C4rrrrrr       +14800 ;       FCALL   _ROMChecksum
003A19 91A8rr         14801         MOV.B   R5L,#SEG( __lc_bs )
003A1C 71BB           14802         XOR.B   R5H,R5H
003A1E 404708         14803         LEA     R4,R7+8
003A21 0F01           14804         PUSH.W  R0
003A23 9918rrrr       14806         MOV.W   R1,#SEG( _1012 )
003A27 9908rrrr       14807         MOV.W   R0,#SOF( _1012 )
003A2B 0F03           14808         PUSH.W  R0, R1
003A2D 8915           14810         MOV.W   R1,R5
003A2F 8904           14811         MOV.W   R0,R4
                      14812         CALL    _sprintf
003A31 C4rrrrrr       +14812 ;       FCALL   _sprintf
003A35 A976           14813         ADDS.W  R7,#06H
                      14815 ; rs232cmd.c 4109                                       rs232puts( buffer);
003A37 8915           14817         MOV.W   R1,R5
003A39 8904           14818         MOV.W   R0,R4
                      14819         CALL    _rs232puts
003A3B C4rrrrrr       +14819 ;       FCALL   _rs232puts
                      14820 ; rs232cmd.c 4110                               }
                      14821 ; rs232cmd.c 4111                       }
003A3F FE06           14823         BR      _1044
003A3F FE0600         14823         BR      _1044
003A42                14824 _1040:
                      14825 ; rs232cmd.c 4112                       else
                      14826 ; rs232cmd.c 4113                               SCPIError = SyntaxErr;
003A42 964842rr       14828         MOV.B   ES,#SEG( _SCPIError )
003A46 9908rrrr       14829         MOV.W   R0,#SOF( _SCPIError )
003A4A BA03           14830         MOV.W   [R0],#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 228

ADDR   CODE            LINE SOURCELINE
                      14831 ; rs232cmd.c 4114               }
003A4C                14833 _1044:
                      14834 ; rs232cmd.c 4115       }
003A4C 99700026       14836         ADD.W   R7,#026H
003A50 2F30           14838         POP.W   R4, R5
003A52 D680           14840         RET
                      14842 ; rs232cmd.c 4116       
                      14843 ; rs232cmd.c 4117       /************************************************************************
                            **/
                      14844 ; rs232cmd.c 4118       /* FactMainVersion                                                       
                                                                                                                             
                                       RS232CMD.C */
                      14845 ; rs232cmd.c 4119       
                      14846 ; rs232cmd.c 4120       /* Author:              Kim Engedahl, DEV, 000620                        
                                                                                                                             
                                  */
                      14847 ; rs232cmd.c 4121       /* Revised:       000620                                                 
                                                                                                                             
                                                                                  */
                      14848 ; rs232cmd.c 4122       
                      14849 ; rs232cmd.c 4123       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14850 ; rs232cmd.c 4124       
                      14851 ; rs232cmd.c 4125       
                      14852 ; rs232cmd.c 4126       
                      14853 ; rs232cmd.c 4127       /************************************************************************
                            **/
                      14854 ; rs232cmd.c 4128       void FactMainVersion( void)
                      14855 ; rs232cmd.c 4129       {
                      14856         ALIGN   1
                      14858         PUBLIC  _FactMainVersion
003A54                14859 _FactMainVersion:
003A54 0F30           14863         PUSH.W  R4, R5
003A56 99720014       14865         SUB.W   R7,#014H
                      14868 ; rs232cmd.c 4130               char buffer[20];
                      14869 ; rs232cmd.c 4131       
                      14870 ; rs232cmd.c 4132               if ( CmdExecute && !SCPIError)
003A5A 964842rr       14872         MOV.B   ES,#SEG( _CmdExecute )
003A5E 9908rrrr       14873         MOV.W   R0,#SOF( _CmdExecute )
003A62 8200           14874         MOV.B   R0L,[R0]
003A64 F333           14875         BEQ     _1052
003A66 964842rr       14876         MOV.B   ES,#SEG( _SCPIError )
003A6A 9908rrrr       14877         MOV.W   R0,#SOF( _SCPIError )
003A6E 8A00           14878         MOV.W   R0,[R0]
003A70 F22D           14879         BNE     _1052
                      14880 ; rs232cmd.c 4133               {
                      14881 ; rs232cmd.c 4134                       if ( CmdRequest)
003A72 964842rr       14883         MOV.B   ES,#SEG( _CmdRequest )
003A76 9908rrrr       14884         MOV.W   R0,#SOF( _CmdRequest )
003A7A 8200           14885         MOV.B   R0L,[R0]
003A7C F322           14886         BEQ     _1048
                      14887 ; rs232cmd.c 4135                       {
                      14888 ; rs232cmd.c 4136                               if ( ParCnt)
003A7E 964842rr       14890         MOV.B   ES,#SEG( _ParCnt )
003A82 9908rrrr       14891         MOV.W   R0,#SOF( _ParCnt )
003A86 8200           14892         MOV.B   R0L,[R0]
003A88 F306           14893         BEQ     _1047
                      14894 ; rs232cmd.c 4137                                       SCPIError = SyntaxErr;
003A8A 964842rr       14896         MOV.B   ES,#SEG( _SCPIError )
003A8E 9908rrrr       14897         MOV.W   R0,#SOF( _SCPIError )
003A92 BA03           14898         MOV.W   [R0],#03H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 229

ADDR   CODE            LINE SOURCELINE
003A94 FE1B           14899         BR      _1052
003A94 FE1B           14899         BR      _1052
003A96                14900 _1047:
                      14901 ; rs232cmd.c 4138                               else
                      14902 ; rs232cmd.c 4139                               {
                      14903 ; rs232cmd.c 4140                                       sprintf( buffer, "%u\n", MasterSWVersion)
                            ;
003A96 91A8rr         14905         MOV.B   R5L,#SEG( __lc_bs )
003A99 71BB           14906         XOR.B   R5H,R5H
003A9B 8947           14907         MOV.W   R4,R7
003A9D 99080031       14908         MOV.W   R0,#031H
003AA1 0F01           14909         PUSH.W  R0
003AA3 9918rrrr       14911         MOV.W   R1,#SEG( _1012 )
003AA7 9908rrrr       14912         MOV.W   R0,#SOF( _1012 )
003AAB 0F03           14913         PUSH.W  R0, R1
003AAD 8915           14915         MOV.W   R1,R5
003AAF 8904           14916         MOV.W   R0,R4
                      14917         CALL    _sprintf
003AB1 C4rrrrrr       +14917 ;       FCALL   _sprintf
003AB5 A976           14918         ADDS.W  R7,#06H
                      14920 ; rs232cmd.c 4141                                       rs232puts( buffer);
003AB7 8915           14922         MOV.W   R1,R5
003AB9 8904           14923         MOV.W   R0,R4
                      14924         CALL    _rs232puts
003ABB C4rrrrrr       +14924 ;       FCALL   _rs232puts
                      14925 ; rs232cmd.c 4142                               }
                      14926 ; rs232cmd.c 4143                       }
003ABF FE06           14928         BR      _1052
003ABF FE0600         14928         BR      _1052
003AC2                14929 _1048:
                      14930 ; rs232cmd.c 4144                       else
                      14931 ; rs232cmd.c 4145                               SCPIError = SyntaxErr;
003AC2 964842rr       14933         MOV.B   ES,#SEG( _SCPIError )
003AC6 9908rrrr       14934         MOV.W   R0,#SOF( _SCPIError )
003ACA BA03           14935         MOV.W   [R0],#03H
                      14936 ; rs232cmd.c 4146               }
003ACC                14938 _1052:
                      14939 ; rs232cmd.c 4147       }
003ACC 99700014       14941         ADD.W   R7,#014H
003AD0 2F30           14943         POP.W   R4, R5
003AD2 D680           14945         RET
                      14947 ; rs232cmd.c 4148       
                      14948 ; rs232cmd.c 4149       /************************************************************************
                            **/
                      14949 ; rs232cmd.c 4150       /* FactMainIDNCompany                                                    
                                                                                                                             
                               RS232CMD.C */
                      14950 ; rs232cmd.c 4151       
                      14951 ; rs232cmd.c 4152       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      14952 ; rs232cmd.c 4153       /* Revised:       000616                                                 
                                                                                                                             
                                                                                  */
                      14953 ; rs232cmd.c 4154       
                      14954 ; rs232cmd.c 4155       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      14955 ; rs232cmd.c 4156       
                      14956 ; rs232cmd.c 4157       
                      14957 ; rs232cmd.c 4158       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 230

ADDR   CODE            LINE SOURCELINE
                      14958 ; rs232cmd.c 4159       /************************************************************************
                            **/
                      14959 ; rs232cmd.c 4160       void FactMainIDNCompany( void)
                      14960 ; rs232cmd.c 4161       {
                      14961         ALIGN   1
                      14963         PUBLIC  _FactMainIDNCompany
003AD4                14964 _FactMainIDNCompany:
003AD4 0F70           14968         PUSH.W  R4, R5, R6
003AD6 99720022       14970         SUB.W   R7,#022H
                      14973 ; rs232cmd.c 4162               char Company[33];
                      14974 ; rs232cmd.c 4163       
                      14975 ; rs232cmd.c 4164               if ( CmdExecute && !SCPIError)
003ADA 964842rr       14977         MOV.B   ES,#SEG( _CmdExecute )
003ADE 9908rrrr       14978         MOV.W   R0,#SOF( _CmdExecute )
003AE2 8200           14979         MOV.B   R0L,[R0]
003AE4 F364           14980         BEQ     _1063
003AE6 964842rr       14981         MOV.B   ES,#SEG( _SCPIError )
003AEA 9908rrrr       14982         MOV.W   R0,#SOF( _SCPIError )
003AEE 8A00           14983         MOV.W   R0,[R0]
003AF0 F25E           14984         BNE     _1063
                      14985 ; rs232cmd.c 4165               {
                      14986 ; rs232cmd.c 4166                       if ( CmdRequest)
003AF2 964842rr       14988         MOV.B   ES,#SEG( _CmdRequest )
003AF6 9908rrrr       14989         MOV.W   R0,#SOF( _CmdRequest )
003AFA 8200           14990         MOV.B   R0L,[R0]
003AFC F317           14991         BEQ     _1055
                      14992 ; rs232cmd.c 4167                       {
                      14993 ; rs232cmd.c 4168                               if ( ParCnt)
003AFE 964842rr       14995         MOV.B   ES,#SEG( _ParCnt )
003B02 9908rrrr       14996         MOV.W   R0,#SOF( _ParCnt )
003B06 8200           14997         MOV.B   R0L,[R0]
003B08 F306           14998         BEQ     _1054
                      14999 ; rs232cmd.c 4169                                       SCPIError = SyntaxErr;
003B0A 964842rr       15001         MOV.B   ES,#SEG( _SCPIError )
003B0E 9908rrrr       15002         MOV.W   R0,#SOF( _SCPIError )
003B12 BA03           15003         MOV.W   [R0],#03H
003B14 FE4C           15004         BR      _1063
003B14 FE4C           15004         BR      _1063
003B16                15005 _1054:
                      15006 ; rs232cmd.c 4170                               else
                      15007 ; rs232cmd.c 4171                               {
                      15008 ; rs232cmd.c 4172                                       rs232puts( Calibration.Company);
003B16 9918rrrr       15010         MOV.W   R1,#SEG( _Calibration )
003B1A 9908rrrr       15011         MOV.W   R0,#SOF( _Calibration )
                      15012         CALL    _rs232puts
003B1E C4rrrrrr       +15012 ;       FCALL   _rs232puts
                      15013 ; rs232cmd.c 4173                                       rs232putchar( '\n');
003B22 91080A         15015         MOV.B   R0L,#0AH
                      15016         CALL    _rs232putchar
003B25 C4rrrrrr       +15016 ;       FCALL   _rs232putchar
                      15017 ; rs232cmd.c 4174                               }
                      15018 ; rs232cmd.c 4175                       }
003B29 FE42           15020         BR      _1063
003B29 FE4200         15020         BR      _1063
003B2C                15021 _1055:
                      15022 ; rs232cmd.c 4176                       else
                      15023 ; rs232cmd.c 4177                       {
                      15024 ; rs232cmd.c 4178                               if ( !PasswordProtected)
003B2C 964842rr       15026         MOV.B   ES,#SEG( _PasswordProtected )
003B30 9908rrrr       15027         MOV.W   R0,#SOF( _PasswordProtected )
003B34 8A00           15028         MOV.W   R0,[R0]
003B36 F23B           15029         BNE     _1063
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 231

ADDR   CODE            LINE SOURCELINE
                      15030 ; rs232cmd.c 4179                               {
                      15031 ; rs232cmd.c 4180                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Company) != 1))
003B38 964842rr       15033         MOV.B   ES,#SEG( _ParCnt )
003B3C 9908rrrr       15034         MOV.W   R0,#SOF( _ParCnt )
003B40 8200           15035         MOV.B   R0L,[R0]
003B42 910401         15036         CMP.B   R0L,#01H
003B45 F217           15037         BNE     _1056
003B47 9918rrrr       15038         MOV.W   R1,#SEG( _Cmd )
003B4B 9908rrrr       15039         MOV.W   R0,#SOF( _Cmd )
003B4F 91A8rr         15040         MOV.B   R5L,#SEG( __lc_bs )
003B52 71BB           15041         XOR.B   R5H,R5H
003B54 8947           15042         MOV.W   R4,R7
003B56 8935           15043         MOV.W   R3,R5
003B58 8924           15044         MOV.W   R2,R4
003B5A 0F0C           15045         PUSH.W  R2, R3
003B5C 9938rrrr       15047         MOV.W   R3,#SEG( _1053 )
003B60 9928rrrr       15048         MOV.W   R2,#SOF( _1053 )
003B64 0F0C           15049         PUSH.W  R2, R3
                      15051         CALL    _sscanf
003B66 C4rrrrrr       +15051 ;       FCALL   _sscanf
003B6A 99700008       15052         ADD.W   R7,#08H
003B6E 99040001       15054         CMP.W   R0,#01H
003B72 F306           15055         BEQ     _1057
003B72 F306           15055         BEQ     _1057
003B74                15056 _1056:
                      15057 ; rs232cmd.c 4181                                               SCPIError = SyntaxErr;
003B74 964842rr       15059         MOV.B   ES,#SEG( _SCPIError )
003B78 9908rrrr       15060         MOV.W   R0,#SOF( _SCPIError )
003B7C BA03           15061         MOV.W   [R0],#03H
003B7E FE17           15062         BR      _1063
003B7E FE17           15062         BR      _1063
003B80                15063 _1057:
                      15064 ; rs232cmd.c 4182                                       else
                      15065 ; rs232cmd.c 4183                                       {
                      15066 ; rs232cmd.c 4184                                               strncpy( Calibration.Company, Com
                            pany, 32);
003B80 99680020       15068         MOV.W   R6,#020H
003B84 9918rrrr       15069         MOV.W   R1,#SEG( _Calibration )
003B88 9908rrrr       15070         MOV.W   R0,#SOF( _Calibration )
003B8C 8935           15071         MOV.W   R3,R5
003B8E 8924           15072         MOV.W   R2,R4
                      15073         CALL    _strncpy
003B90 C4rrrrrr       +15073 ;       FCALL   _strncpy
                      15074 ; rs232cmd.c 4185       
                      15075 ; rs232cmd.c 4186                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003B94 964842rr       15077         MOV.B   ES,#SEG( _CalibrationPtr )
003B98 9928rrrr       15078         MOV.W   R2,#SOF( _CalibrationPtr )
003B9C 8A22           15079         MOV.W   R2,[R2]
003B9E 993800E2       15080         MOV.W   R3,#0E2H
003BA2 9918rrrr       15081         MOV.W   R1,#SEG( _Calibration )
003BA6 9908rrrr       15082         MOV.W   R0,#SOF( _Calibration )
                      15083         CALL    _NV_Store
003BAA C4rrrrrr       +15083 ;       FCALL   _NV_Store
                      15084 ; rs232cmd.c 4187                                       }
                      15085 ; rs232cmd.c 4188                               }
                      15086 ; rs232cmd.c 4189                       }
                      15087 ; rs232cmd.c 4190               }
003BAE                15089 _1063:
                      15090 ; rs232cmd.c 4191       }
003BAE 99700022       15092         ADD.W   R7,#022H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 232

ADDR   CODE            LINE SOURCELINE
003BB2 2F70           15094         POP.W   R4, R5, R6
003BB4 D680           15096         RET
                      15098 ; rs232cmd.c 4192       
                      15099 ; rs232cmd.c 4193       /************************************************************************
                            **/
                      15100 ; rs232cmd.c 4194       /* FactMainIDNType                                                       
                                                                                                                             
                                       RS232CMD.C */
                      15101 ; rs232cmd.c 4195       
                      15102 ; rs232cmd.c 4196       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      15103 ; rs232cmd.c 4197       /* Revised:       000616                                                 
                                                                                                                             
                                                                                  */
                      15104 ; rs232cmd.c 4198       
                      15105 ; rs232cmd.c 4199       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      15106 ; rs232cmd.c 4200       
                      15107 ; rs232cmd.c 4201       
                      15108 ; rs232cmd.c 4202       
                      15109 ; rs232cmd.c 4203       /************************************************************************
                            **/
                      15110 ; rs232cmd.c 4204       void FactMainIDNType( void)
                      15111 ; rs232cmd.c 4205       {
                      15112         ALIGN   1
                      15114         PUBLIC  _FactMainIDNType
003BB6                15115 _FactMainIDNType:
003BB6 0F70           15119         PUSH.W  R4, R5, R6
003BB8 99720022       15121         SUB.W   R7,#022H
                      15124 ; rs232cmd.c 4206               char Type[33];
                      15125 ; rs232cmd.c 4207       
                      15126 ; rs232cmd.c 4208               if ( CmdExecute && !SCPIError)
003BBC 964842rr       15128         MOV.B   ES,#SEG( _CmdExecute )
003BC0 9908rrrr       15129         MOV.W   R0,#SOF( _CmdExecute )
003BC4 8200           15130         MOV.B   R0L,[R0]
003BC6 F364           15131         BEQ     _1075
003BC8 964842rr       15132         MOV.B   ES,#SEG( _SCPIError )
003BCC 9908rrrr       15133         MOV.W   R0,#SOF( _SCPIError )
003BD0 8A00           15134         MOV.W   R0,[R0]
003BD2 F25E           15135         BNE     _1075
                      15136 ; rs232cmd.c 4209               {
                      15137 ; rs232cmd.c 4210                       if ( CmdRequest)
003BD4 964842rr       15139         MOV.B   ES,#SEG( _CmdRequest )
003BD8 9908rrrr       15140         MOV.W   R0,#SOF( _CmdRequest )
003BDC 8200           15141         MOV.B   R0L,[R0]
003BDE F317           15142         BEQ     _1067
                      15143 ; rs232cmd.c 4211                       {
                      15144 ; rs232cmd.c 4212                               if ( ParCnt)
003BE0 964842rr       15146         MOV.B   ES,#SEG( _ParCnt )
003BE4 9908rrrr       15147         MOV.W   R0,#SOF( _ParCnt )
003BE8 8200           15148         MOV.B   R0L,[R0]
003BEA F306           15149         BEQ     _1066
                      15150 ; rs232cmd.c 4213                                       SCPIError = SyntaxErr;
003BEC 964842rr       15152         MOV.B   ES,#SEG( _SCPIError )
003BF0 9908rrrr       15153         MOV.W   R0,#SOF( _SCPIError )
003BF4 BA03           15154         MOV.W   [R0],#03H
003BF6 FE4C           15155         BR      _1075
003BF6 FE4C           15155         BR      _1075
003BF8                15156 _1066:
                      15157 ; rs232cmd.c 4214                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 233

ADDR   CODE            LINE SOURCELINE
                      15158 ; rs232cmd.c 4215                               {
                      15159 ; rs232cmd.c 4216                                       rs232puts( Calibration.Type);
003BF8 9918rrrr       15161         MOV.W   R1,#SEG( _Calibration+33 )
003BFC 9908rrrr       15162         MOV.W   R0,#SOF( _Calibration+33 )
                      15163         CALL    _rs232puts
003C00 C4rrrrrr       +15163 ;       FCALL   _rs232puts
                      15164 ; rs232cmd.c 4217                                       rs232putchar( '\n');
003C04 91080A         15166         MOV.B   R0L,#0AH
                      15167         CALL    _rs232putchar
003C07 C4rrrrrr       +15167 ;       FCALL   _rs232putchar
                      15168 ; rs232cmd.c 4218                               }
                      15169 ; rs232cmd.c 4219                       }
003C0B FE42           15171         BR      _1075
003C0B FE4200         15171         BR      _1075
003C0E                15172 _1067:
                      15173 ; rs232cmd.c 4220                       else
                      15174 ; rs232cmd.c 4221                       {
                      15175 ; rs232cmd.c 4222                               if ( !PasswordProtected)
003C0E 964842rr       15177         MOV.B   ES,#SEG( _PasswordProtected )
003C12 9908rrrr       15178         MOV.W   R0,#SOF( _PasswordProtected )
003C16 8A00           15179         MOV.W   R0,[R0]
003C18 F23B           15180         BNE     _1075
                      15181 ; rs232cmd.c 4223                               {
                      15182 ; rs232cmd.c 4224                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%32
                            s", Type) != 1))
003C1A 964842rr       15184         MOV.B   ES,#SEG( _ParCnt )
003C1E 9908rrrr       15185         MOV.W   R0,#SOF( _ParCnt )
003C22 8200           15186         MOV.B   R0L,[R0]
003C24 910401         15187         CMP.B   R0L,#01H
003C27 F217           15188         BNE     _1068
003C29 9918rrrr       15189         MOV.W   R1,#SEG( _Cmd )
003C2D 9908rrrr       15190         MOV.W   R0,#SOF( _Cmd )
003C31 91A8rr         15191         MOV.B   R5L,#SEG( __lc_bs )
003C34 71BB           15192         XOR.B   R5H,R5H
003C36 8947           15193         MOV.W   R4,R7
003C38 8935           15194         MOV.W   R3,R5
003C3A 8924           15195         MOV.W   R2,R4
003C3C 0F0C           15196         PUSH.W  R2, R3
003C3E 9938rrrr       15198         MOV.W   R3,#SEG( _1053 )
003C42 9928rrrr       15199         MOV.W   R2,#SOF( _1053 )
003C46 0F0C           15200         PUSH.W  R2, R3
                      15202         CALL    _sscanf
003C48 C4rrrrrr       +15202 ;       FCALL   _sscanf
003C4C 99700008       15203         ADD.W   R7,#08H
003C50 99040001       15205         CMP.W   R0,#01H
003C54 F306           15206         BEQ     _1069
003C54 F306           15206         BEQ     _1069
003C56                15207 _1068:
                      15208 ; rs232cmd.c 4225                                               SCPIError = SyntaxErr;
003C56 964842rr       15210         MOV.B   ES,#SEG( _SCPIError )
003C5A 9908rrrr       15211         MOV.W   R0,#SOF( _SCPIError )
003C5E BA03           15212         MOV.W   [R0],#03H
003C60 FE17           15213         BR      _1075
003C60 FE17           15213         BR      _1075
003C62                15214 _1069:
                      15215 ; rs232cmd.c 4226                                       else
                      15216 ; rs232cmd.c 4227                                       {
                      15217 ; rs232cmd.c 4228                                               strncpy( Calibration.Type, Type, 
                            32);
003C62 9918rrrr       15219         MOV.W   R1,#SEG( _Calibration+33 )
003C66 9908rrrr       15220         MOV.W   R0,#SOF( _Calibration+33 )
003C6A 99680020       15221         MOV.W   R6,#020H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 234

ADDR   CODE            LINE SOURCELINE
003C6E 8935           15222         MOV.W   R3,R5
003C70 8924           15223         MOV.W   R2,R4
                      15224         CALL    _strncpy
003C72 C4rrrrrr       +15224 ;       FCALL   _strncpy
                      15225 ; rs232cmd.c 4229       
                      15226 ; rs232cmd.c 4230                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003C76 9918rrrr       15228         MOV.W   R1,#SEG( _Calibration )
003C7A 9908rrrr       15229         MOV.W   R0,#SOF( _Calibration )
003C7E 964842rr       15230         MOV.B   ES,#SEG( _CalibrationPtr )
003C82 9928rrrr       15231         MOV.W   R2,#SOF( _CalibrationPtr )
003C86 8A22           15232         MOV.W   R2,[R2]
003C88 993800E2       15233         MOV.W   R3,#0E2H
                      15234         CALL    _NV_Store
003C8C C4rrrrrr       +15234 ;       FCALL   _NV_Store
                      15235 ; rs232cmd.c 4231                                       }
                      15236 ; rs232cmd.c 4232                               }
                      15237 ; rs232cmd.c 4233                       }
                      15238 ; rs232cmd.c 4234               }
003C90                15240 _1075:
                      15241 ; rs232cmd.c 4235       }
003C90 99700022       15243         ADD.W   R7,#022H
003C94 2F70           15245         POP.W   R4, R5, R6
003C96 D680           15247         RET
                      15249 ; rs232cmd.c 4236       
                      15250 ; rs232cmd.c 4237       /************************************************************************
                            **/
                      15251 ; rs232cmd.c 4238       /* FactMainIDNNumber                                                     
                                                                                                                        RS232
                            CMD.C */
                      15252 ; rs232cmd.c 4239       
                      15253 ; rs232cmd.c 4240       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      15254 ; rs232cmd.c 4241       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      15255 ; rs232cmd.c 4242       
                      15256 ; rs232cmd.c 4243       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      15257 ; rs232cmd.c 4244       
                      15258 ; rs232cmd.c 4245       
                      15259 ; rs232cmd.c 4246       
                      15260 ; rs232cmd.c 4247       /************************************************************************
                            **/
                      15261 ; rs232cmd.c 4248       void FactMainIDNKUNumber( void)
                      15262 ; rs232cmd.c 4249       {
                      15263         ALIGN   1
                      15265         PUBLIC  _FactMainIDNKUNumber
003C98                15266 _FactMainIDNKUNumber:
003C98 0F70           15270         PUSH.W  R4, R5, R6
003C9A 9972000A       15272         SUB.W   R7,#0AH
                      15276 ; rs232cmd.c 4250               char KUNumber[9];
                      15277 ; rs232cmd.c 4251       
                      15278 ; rs232cmd.c 4252               if ( CmdExecute && !SCPIError)
003C9E 964842rr       15280         MOV.B   ES,#SEG( _CmdExecute )
003CA2 9908rrrr       15281         MOV.W   R0,#SOF( _CmdExecute )
003CA6 8200           15282         MOV.B   R0L,[R0]
003CA8 F364           15283         BEQ     _1088
003CAA 964842rr       15284         MOV.B   ES,#SEG( _SCPIError )
003CAE 9908rrrr       15285         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 235

ADDR   CODE            LINE SOURCELINE
003CB2 8A00           15286         MOV.W   R0,[R0]
003CB4 F25E           15287         BNE     _1088
                      15288 ; rs232cmd.c 4253               {
                      15289 ; rs232cmd.c 4254                       if ( CmdRequest)
003CB6 964842rr       15291         MOV.B   ES,#SEG( _CmdRequest )
003CBA 9908rrrr       15292         MOV.W   R0,#SOF( _CmdRequest )
003CBE 8200           15293         MOV.B   R0L,[R0]
003CC0 F317           15294         BEQ     _1080
                      15295 ; rs232cmd.c 4255                       {
                      15296 ; rs232cmd.c 4256                               if ( ParCnt)
003CC2 964842rr       15298         MOV.B   ES,#SEG( _ParCnt )
003CC6 9908rrrr       15299         MOV.W   R0,#SOF( _ParCnt )
003CCA 8200           15300         MOV.B   R0L,[R0]
003CCC F306           15301         BEQ     _1079
                      15302 ; rs232cmd.c 4257                                       SCPIError = SyntaxErr;
003CCE 964842rr       15304         MOV.B   ES,#SEG( _SCPIError )
003CD2 9908rrrr       15305         MOV.W   R0,#SOF( _SCPIError )
003CD6 BA03           15306         MOV.W   [R0],#03H
003CD8 FE4C           15307         BR      _1088
003CD8 FE4C           15307         BR      _1088
003CDA                15308 _1079:
                      15309 ; rs232cmd.c 4258                               else
                      15310 ; rs232cmd.c 4259                               {
                      15311 ; rs232cmd.c 4260                                       rs232puts( Calibration.KUNumber);
003CDA 9918rrrr       15313         MOV.W   R1,#SEG( _Calibration+66 )
003CDE 9908rrrr       15314         MOV.W   R0,#SOF( _Calibration+66 )
                      15315         CALL    _rs232puts
003CE2 C4rrrrrr       +15315 ;       FCALL   _rs232puts
                      15316 ; rs232cmd.c 4261                                       rs232putchar( '\n');
003CE6 91080A         15318         MOV.B   R0L,#0AH
                      15319         CALL    _rs232putchar
003CE9 C4rrrrrr       +15319 ;       FCALL   _rs232putchar
                      15320 ; rs232cmd.c 4262                               }
                      15321 ; rs232cmd.c 4263                       }
003CED FE42           15323         BR      _1088
003CED FE4200         15323         BR      _1088
003CF0                15324 _1080:
                      15325 ; rs232cmd.c 4264                       else
                      15326 ; rs232cmd.c 4265                       {
                      15327 ; rs232cmd.c 4266                               if ( !PasswordProtected)
003CF0 964842rr       15329         MOV.B   ES,#SEG( _PasswordProtected )
003CF4 9908rrrr       15330         MOV.W   R0,#SOF( _PasswordProtected )
003CF8 8A00           15331         MOV.W   R0,[R0]
003CFA F23B           15332         BNE     _1088
                      15333 ; rs232cmd.c 4267                               {
                      15334 ; rs232cmd.c 4268                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", KUNumber) != 1))
003CFC 964842rr       15336         MOV.B   ES,#SEG( _ParCnt )
003D00 9908rrrr       15337         MOV.W   R0,#SOF( _ParCnt )
003D04 8200           15338         MOV.B   R0L,[R0]
003D06 910401         15339         CMP.B   R0L,#01H
003D09 F217           15340         BNE     _1081
003D0B 9918rrrr       15341         MOV.W   R1,#SEG( _Cmd )
003D0F 9908rrrr       15342         MOV.W   R0,#SOF( _Cmd )
003D13 91A8rr         15343         MOV.B   R5L,#SEG( __lc_bs )
003D16 71BB           15344         XOR.B   R5H,R5H
003D18 8947           15345         MOV.W   R4,R7
003D1A 8935           15346         MOV.W   R3,R5
003D1C 8924           15347         MOV.W   R2,R4
003D1E 0F0C           15348         PUSH.W  R2, R3
003D20 9938rrrr       15350         MOV.W   R3,#SEG( _1078 )
003D24 9928rrrr       15351         MOV.W   R2,#SOF( _1078 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 236

ADDR   CODE            LINE SOURCELINE
003D28 0F0C           15352         PUSH.W  R2, R3
                      15354         CALL    _sscanf
003D2A C4rrrrrr       +15354 ;       FCALL   _sscanf
003D2E 99700008       15355         ADD.W   R7,#08H
003D32 99040001       15357         CMP.W   R0,#01H
003D36 F306           15358         BEQ     _1082
003D36 F306           15358         BEQ     _1082
003D38                15359 _1081:
                      15360 ; rs232cmd.c 4269                                               SCPIError = SyntaxErr;
003D38 964842rr       15362         MOV.B   ES,#SEG( _SCPIError )
003D3C 9908rrrr       15363         MOV.W   R0,#SOF( _SCPIError )
003D40 BA03           15364         MOV.W   [R0],#03H
003D42 FE17           15365         BR      _1088
003D42 FE17           15365         BR      _1088
003D44                15366 _1082:
                      15367 ; rs232cmd.c 4270                                       else
                      15368 ; rs232cmd.c 4271                                       {
                      15369 ; rs232cmd.c 4272                                               strncpy( Calibration.KUNumber, KU
                            Number, 9);
003D44 9918rrrr       15371         MOV.W   R1,#SEG( _Calibration+66 )
003D48 9908rrrr       15372         MOV.W   R0,#SOF( _Calibration+66 )
003D4C 99680009       15373         MOV.W   R6,#09H
003D50 8935           15374         MOV.W   R3,R5
003D52 8924           15375         MOV.W   R2,R4
                      15376         CALL    _strncpy
003D54 C4rrrrrr       +15376 ;       FCALL   _strncpy
                      15377 ; rs232cmd.c 4273       
                      15378 ; rs232cmd.c 4274                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003D58 9918rrrr       15380         MOV.W   R1,#SEG( _Calibration )
003D5C 9908rrrr       15381         MOV.W   R0,#SOF( _Calibration )
003D60 964842rr       15382         MOV.B   ES,#SEG( _CalibrationPtr )
003D64 9928rrrr       15383         MOV.W   R2,#SOF( _CalibrationPtr )
003D68 8A22           15384         MOV.W   R2,[R2]
003D6A 993800E2       15385         MOV.W   R3,#0E2H
                      15386         CALL    _NV_Store
003D6E C4rrrrrr       +15386 ;       FCALL   _NV_Store
                      15387 ; rs232cmd.c 4275                                       }
                      15388 ; rs232cmd.c 4276                               }
                      15389 ; rs232cmd.c 4277                       }
                      15390 ; rs232cmd.c 4278               }
003D72                15392 _1088:
                      15393 ; rs232cmd.c 4279       }
003D72 9970000A       15395         ADD.W   R7,#0AH
003D76 2F70           15397         POP.W   R4, R5, R6
003D78 D680           15399         RET
                      15401 ; rs232cmd.c 4280       
                      15402 ; rs232cmd.c 4281       /************************************************************************
                            **/
                      15403 ; rs232cmd.c 4282       /* FactMainIDNSWRevision                                                 
                                                                                                                        RS232
                            CMD.C */
                      15404 ; rs232cmd.c 4283       
                      15405 ; rs232cmd.c 4284       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      15406 ; rs232cmd.c 4285       /* Revised:       000616                                                 
                                                                                                                             
                                                                                  */
                      15407 ; rs232cmd.c 4286       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 237

ADDR   CODE            LINE SOURCELINE
                      15408 ; rs232cmd.c 4287       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      15409 ; rs232cmd.c 4288       
                      15410 ; rs232cmd.c 4289       
                      15411 ; rs232cmd.c 4290       
                      15412 ; rs232cmd.c 4291       /************************************************************************
                            **/
                      15413 ; rs232cmd.c 4292       void FactMainIDNSWRevision( void)
                      15414 ; rs232cmd.c 4293       {
                      15415         ALIGN   1
                      15417         PUBLIC  _FactMainIDNSWRevision
003D7A                15418 _FactMainIDNSWRevision:
003D7A 0F70           15422         PUSH.W  R4, R5, R6
003D7C 9972000A       15424         SUB.W   R7,#0AH
                      15427 ; rs232cmd.c 4294               char SWRevision[9];
                      15428 ; rs232cmd.c 4295       
                      15429 ; rs232cmd.c 4296               if ( CmdExecute && !SCPIError)
003D80 964842rr       15431         MOV.B   ES,#SEG( _CmdExecute )
003D84 9908rrrr       15432         MOV.W   R0,#SOF( _CmdExecute )
003D88 8200           15433         MOV.B   R0L,[R0]
003D8A F364           15434         BEQ     _1100
003D8C 964842rr       15435         MOV.B   ES,#SEG( _SCPIError )
003D90 9908rrrr       15436         MOV.W   R0,#SOF( _SCPIError )
003D94 8A00           15437         MOV.W   R0,[R0]
003D96 F25E           15438         BNE     _1100
                      15439 ; rs232cmd.c 4297               {
                      15440 ; rs232cmd.c 4298                       if ( CmdRequest)
003D98 964842rr       15442         MOV.B   ES,#SEG( _CmdRequest )
003D9C 9908rrrr       15443         MOV.W   R0,#SOF( _CmdRequest )
003DA0 8200           15444         MOV.B   R0L,[R0]
003DA2 F317           15445         BEQ     _1092
                      15446 ; rs232cmd.c 4299                       {
                      15447 ; rs232cmd.c 4300                               if ( ParCnt)
003DA4 964842rr       15449         MOV.B   ES,#SEG( _ParCnt )
003DA8 9908rrrr       15450         MOV.W   R0,#SOF( _ParCnt )
003DAC 8200           15451         MOV.B   R0L,[R0]
003DAE F306           15452         BEQ     _1091
                      15453 ; rs232cmd.c 4301                                       SCPIError = SyntaxErr;
003DB0 964842rr       15455         MOV.B   ES,#SEG( _SCPIError )
003DB4 9908rrrr       15456         MOV.W   R0,#SOF( _SCPIError )
003DB8 BA03           15457         MOV.W   [R0],#03H
003DBA FE4C           15458         BR      _1100
003DBA FE4C           15458         BR      _1100
003DBC                15459 _1091:
                      15460 ; rs232cmd.c 4302                               else
                      15461 ; rs232cmd.c 4303                               {
                      15462 ; rs232cmd.c 4304                                       rs232puts( Calibration.SWRevision);
003DBC 9918rrrr       15464         MOV.W   R1,#SEG( _Calibration+75 )
003DC0 9908rrrr       15465         MOV.W   R0,#SOF( _Calibration+75 )
                      15466         CALL    _rs232puts
003DC4 C4rrrrrr       +15466 ;       FCALL   _rs232puts
                      15467 ; rs232cmd.c 4305                                       rs232putchar( '\n');
003DC8 91080A         15469         MOV.B   R0L,#0AH
                      15470         CALL    _rs232putchar
003DCB C4rrrrrr       +15470 ;       FCALL   _rs232putchar
                      15471 ; rs232cmd.c 4306                               }
                      15472 ; rs232cmd.c 4307                       }
003DCF FE42           15474         BR      _1100
003DCF FE4200         15474         BR      _1100
003DD2                15475 _1092:
                      15476 ; rs232cmd.c 4308                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 238

ADDR   CODE            LINE SOURCELINE
                      15477 ; rs232cmd.c 4309                       {
                      15478 ; rs232cmd.c 4310                               if ( !PasswordProtected)
003DD2 964842rr       15480         MOV.B   ES,#SEG( _PasswordProtected )
003DD6 9908rrrr       15481         MOV.W   R0,#SOF( _PasswordProtected )
003DDA 8A00           15482         MOV.W   R0,[R0]
003DDC F23B           15483         BNE     _1100
                      15484 ; rs232cmd.c 4311                               {
                      15485 ; rs232cmd.c 4312                                       if (( ParCnt != 1) || ( sscanf( Cmd, "%8s
                            ", SWRevision) != 1))
003DDE 964842rr       15487         MOV.B   ES,#SEG( _ParCnt )
003DE2 9908rrrr       15488         MOV.W   R0,#SOF( _ParCnt )
003DE6 8200           15489         MOV.B   R0L,[R0]
003DE8 910401         15490         CMP.B   R0L,#01H
003DEB F217           15491         BNE     _1093
003DED 9918rrrr       15492         MOV.W   R1,#SEG( _Cmd )
003DF1 9908rrrr       15493         MOV.W   R0,#SOF( _Cmd )
003DF5 91A8rr         15494         MOV.B   R5L,#SEG( __lc_bs )
003DF8 71BB           15495         XOR.B   R5H,R5H
003DFA 8947           15496         MOV.W   R4,R7
003DFC 8935           15497         MOV.W   R3,R5
003DFE 8924           15498         MOV.W   R2,R4
003E00 0F0C           15499         PUSH.W  R2, R3
003E02 9938rrrr       15501         MOV.W   R3,#SEG( _1078 )
003E06 9928rrrr       15502         MOV.W   R2,#SOF( _1078 )
003E0A 0F0C           15503         PUSH.W  R2, R3
                      15505         CALL    _sscanf
003E0C C4rrrrrr       +15505 ;       FCALL   _sscanf
003E10 99700008       15506         ADD.W   R7,#08H
003E14 99040001       15508         CMP.W   R0,#01H
003E18 F306           15509         BEQ     _1094
003E18 F306           15509         BEQ     _1094
003E1A                15510 _1093:
                      15511 ; rs232cmd.c 4313                                               SCPIError = SyntaxErr;
003E1A 964842rr       15513         MOV.B   ES,#SEG( _SCPIError )
003E1E 9908rrrr       15514         MOV.W   R0,#SOF( _SCPIError )
003E22 BA03           15515         MOV.W   [R0],#03H
003E24 FE17           15516         BR      _1100
003E24 FE17           15516         BR      _1100
003E26                15517 _1094:
                      15518 ; rs232cmd.c 4314                                       else
                      15519 ; rs232cmd.c 4315                                       {
                      15520 ; rs232cmd.c 4316                                               strncpy( Calibration.SWRevision, 
                            SWRevision, 8);
003E26 9918rrrr       15522         MOV.W   R1,#SEG( _Calibration+75 )
003E2A 9908rrrr       15523         MOV.W   R0,#SOF( _Calibration+75 )
003E2E 99680008       15524         MOV.W   R6,#08H
003E32 8935           15525         MOV.W   R3,R5
003E34 8924           15526         MOV.W   R2,R4
                      15527         CALL    _strncpy
003E36 C4rrrrrr       +15527 ;       FCALL   _strncpy
                      15528 ; rs232cmd.c 4317       
                      15529 ; rs232cmd.c 4318                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
003E3A 9918rrrr       15531         MOV.W   R1,#SEG( _Calibration )
003E3E 9908rrrr       15532         MOV.W   R0,#SOF( _Calibration )
003E42 964842rr       15533         MOV.B   ES,#SEG( _CalibrationPtr )
003E46 9928rrrr       15534         MOV.W   R2,#SOF( _CalibrationPtr )
003E4A 8A22           15535         MOV.W   R2,[R2]
003E4C 993800E2       15536         MOV.W   R3,#0E2H
                      15537         CALL    _NV_Store
003E50 C4rrrrrr       +15537 ;       FCALL   _NV_Store
                      15538 ; rs232cmd.c 4319                                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 239

ADDR   CODE            LINE SOURCELINE
                      15539 ; rs232cmd.c 4320                               }
                      15540 ; rs232cmd.c 4321                       }
                      15541 ; rs232cmd.c 4322               }
003E54                15543 _1100:
                      15544 ; rs232cmd.c 4323       }
003E54 9970000A       15546         ADD.W   R7,#0AH
003E58 2F70           15548         POP.W   R4, R5, R6
003E5A D680           15550         RET
                      15552 ; rs232cmd.c 4324       
                      15553 ; rs232cmd.c 4325       /************************************************************************
                            **/
                      15554 ; rs232cmd.c 4326       /* FactMainSystem                                                        
                                                                                                                             
                                               RS232CMD.C */
                      15555 ; rs232cmd.c 4327       
                      15556 ; rs232cmd.c 4328       /* Author:              Kim Engedahl, DEV, 000617                        
                                                                                                                             
                                  */
                      15557 ; rs232cmd.c 4329       /* Revised:       000617                                                 
                                                                                                                             
                                                                                  */
                      15558 ; rs232cmd.c 4330       
                      15559 ; rs232cmd.c 4331       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      15560 ; rs232cmd.c 4332       
                      15561 ; rs232cmd.c 4333       
                      15562 ; rs232cmd.c 4334       
                      15563 ; rs232cmd.c 4335       /************************************************************************
                            **/
                      15564 ; rs232cmd.c 4336       void FactMainSystem( void)
                      15565 ; rs232cmd.c 4337       {
                      15566         ALIGN   1
                      15568         PUBLIC  _FactMainSystem
003E5C                15569 _FactMainSystem:
003E5C 0F30           15573         PUSH.W  R4, R5
                      15579 ; rs232cmd.c 4338               int system;
                      15580 ; rs232cmd.c 4339               char code *str;
                      15581 ; rs232cmd.c 4340       
                      15582 ; rs232cmd.c 4341               if ( CmdExecute && !SCPIError)
003E5E 964842rr       15584         MOV.B   ES,#SEG( _CmdExecute )
003E62 9908rrrr       15585         MOV.W   R0,#SOF( _CmdExecute )
003E66 8200           15586         MOV.B   R0L,[R0]
                      15587         BEQ     _1116
003E68 F202           +15587 ;       BNE     _LG_1052
003E6A D5008C         +15587 ;       JMP.L   _1116
003E6E D5008C00       +15587 ;       JMP.L   _1116
003E6E                +15587 _LG_1052:
003E6E 964842rr       15588         MOV.B   ES,#SEG( _SCPIError )
003E72 9908rrrr       15589         MOV.W   R0,#SOF( _SCPIError )
003E76 8A00           15590         MOV.W   R0,[R0]
                      15591         BNE     _1116
003E78 F302           +15591 ;       BEQ     _LG_1054
003E7A D50084         +15591 ;       JMP.L   _1116
003E7E D5008400       +15591 ;       JMP.L   _1116
003E7E                +15591 _LG_1054:
                      15592 ; rs232cmd.c 4342               {
                      15593 ; rs232cmd.c 4343                       if ( CmdRequest)
003E7E 964842rr       15595         MOV.B   ES,#SEG( _CmdRequest )
003E82 9908rrrr       15596         MOV.W   R0,#SOF( _CmdRequest )
003E86 8200           15597         MOV.B   R0L,[R0]
003E88 F33F           15598         BEQ     _1106
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 240

ADDR   CODE            LINE SOURCELINE
                      15599 ; rs232cmd.c 4344                       {
                      15600 ; rs232cmd.c 4345                               if ( ParCnt)
003E8A 964842rr       15602         MOV.B   ES,#SEG( _ParCnt )
003E8E 9908rrrr       15603         MOV.W   R0,#SOF( _ParCnt )
003E92 8200           15604         MOV.B   R0L,[R0]
003E94 F306           15605         BEQ     _1103
                      15606 ; rs232cmd.c 4346                                       SCPIError = ParNotAllowed;
003E96 964842rr       15608         MOV.B   ES,#SEG( _SCPIError )
003E9A 9908rrrr       15609         MOV.W   R0,#SOF( _SCPIError )
003E9E BA06           15610         MOV.W   [R0],#06H
003EA0 FE71           15611         BR      _1116
003EA0 FE71           15611         BR      _1116
003EA2                15612 _1103:
                      15613 ; rs232cmd.c 4347                               else
                      15614 ; rs232cmd.c 4348                               {
                      15615 ; rs232cmd.c 4349                                       str = SystemPar[Calibration.ResetSystem].
                            LongName;
003EA2 964842rr       15617         MOV.B   ES,#SEG( _Calibration+97 )
003EA6 9908rrrr       15618         MOV.W   R0,#SOF( _Calibration+97 )
003EAA 8200           15619         MOV.B   R0L,[R0]
003EAC E8000C         15620         MULU.B  R0L,#0CH
003EAF 8920           15621         MOV.W   R2,R0
003EB1 B930           15622         MOVS.W  R3,#00H
003EB3 9918rrrr       15623         MOV.W   R1,#SEG( _SystemPar )
003EB7 9908rrrr       15624         MOV.W   R0,#SOF( _SystemPar )
003EBB 0902           15625         ADD.W   R0,R2
003EBD 1913           15626         ADDC.W  R1,R3
003EBF 862C43         15627         MOV.B   CS,R1L
003EC2 8820           15628         MOVC.W  R2,[R0+]
003EC4 99040000       15629         CMP.W   R0,#00H
003EC8 F202           15630         BNE     _1117
003ECA A64143         15631         ADDS.B  CS,#01H
003ECA A6414300       15631         ADDS.B  CS,#01H
003ECE                15632 _1117:
003ECE 8830           15633         MOVC.W  R3,[R0+]
003ED0 8953           15634         MOV.W   R5,R3
003ED2 8942           15635         MOV.W   R4,R2
                      15637 ; rs232cmd.c 4350       
                      15638 ; rs232cmd.c 4351                                       while ( *str)
003ED4 866C43         15640         MOV.B   CS,R3L
003ED7 8062           15641         MOVC.B  R3L,[R2+]
003ED9 F312           15642         BEQ     _1105
003ED9 F31200         15642         BEQ     _1105
003EDC                15643 _1104:
                      15644 ; rs232cmd.c 4352                                               rs232putchar( *str++);
003EDC 8915           15646         MOV.W   R1,R5
003EDE 8904           15647         MOV.W   R0,R4
003EE0 862C43         15648         MOV.B   CS,R1L
003EE3 8020           15649         MOVC.B  R1L,[R0+]
003EE5 8102           15650         MOV.B   R0L,R1L
                      15651         CALL    _rs232putchar
003EE7 C4rrrrrr       +15651 ;       FCALL   _rs232putchar
003EEB 99400001       15652         ADD.W   R4,#01H
003EEF 99510000       15653         ADDC.W  R5,#00H
003EF3 8915           15657         MOV.W   R1,R5
003EF5 8904           15658         MOV.W   R0,R4
003EF7 862C43         15659         MOV.B   CS,R1L
003EFA 8020           15660         MOVC.B  R1L,[R0+]
003EFC F2EF           15661         BNE     _1104
003EFE                15663 _1105:
                      15664 ; rs232cmd.c 4353       
                      15665 ; rs232cmd.c 4354                                       rs232putchar('\n');
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 241

ADDR   CODE            LINE SOURCELINE
003EFE 91080A         15667         MOV.B   R0L,#0AH
                      15668         CALL    _rs232putchar
003F01 C4rrrrrr       +15668 ;       FCALL   _rs232putchar
                      15669 ; rs232cmd.c 4355                               }
                      15670 ; rs232cmd.c 4356                       }
003F05 FE3F           15672         BR      _1116
003F05 FE3F00         15672         BR      _1116
003F08                15673 _1106:
                      15674 ; rs232cmd.c 4357                       else
                      15675 ; rs232cmd.c 4358                       {
                      15676 ; rs232cmd.c 4359                               if ( ParCnt != 1)
003F08 964842rr       15678         MOV.B   ES,#SEG( _ParCnt )
003F0C 9908rrrr       15679         MOV.W   R0,#SOF( _ParCnt )
003F10 8200           15680         MOV.B   R0L,[R0]
003F12 910401         15681         CMP.B   R0L,#01H
003F15 F307           15682         BEQ     _1107
                      15683 ; rs232cmd.c 4360                                       SCPIError = SyntaxErr;
003F17 964842rr       15685         MOV.B   ES,#SEG( _SCPIError )
003F1B 9908rrrr       15686         MOV.W   R0,#SOF( _SCPIError )
003F1F BA03           15687         MOV.W   [R0],#03H
003F21 FE31           15688         BR      _1116
003F21 FE3100         15688         BR      _1116
003F24                15689 _1107:
                      15690 ; rs232cmd.c 4361                               else
                      15691 ; rs232cmd.c 4362                               {
                      15692 ; rs232cmd.c 4363                                       system = FindParameter( Cmd, SystemPar);
003F24 9918rrrr       15694         MOV.W   R1,#SEG( _Cmd )
003F28 9908rrrr       15695         MOV.W   R0,#SOF( _Cmd )
003F2C 9938rrrr       15696         MOV.W   R3,#SEG( _SystemPar )
003F30 9928rrrr       15697         MOV.W   R2,#SOF( _SystemPar )
003F34 C510F0         15698         CALL    _FindParameter
                      15700 ; rs232cmd.c 4364       
                      15701 ; rs232cmd.c 4365                                       if ( system == PAL_PALID)                
                                                           // If line7, (PAL w/ID), ever should
003F37 99040001       15703         CMP.W   R0,#01H
003F3B F208           15704         BNE     _1108
                      15705 ; rs232cmd.c 4366                                               SCPIError = DataOutOfRange;      
                                                   //  be supported remove this exception
003F3D 964842rr       15707         MOV.B   ES,#SEG( _SCPIError )
003F41 9908rrrr       15708         MOV.W   R0,#SOF( _SCPIError )
003F45 9A080021       15709         MOV.W   [R0],#021H
003F49 FE1D           15710         BR      _1116
003F49 FE1D00         15710         BR      _1116
003F4C                15711 _1108:
                      15713 ; rs232cmd.c 4367                                       else                                     
                                   
                      15714 ; rs232cmd.c 4368                                       {       
                      15715 ; rs232cmd.c 4369                                               if ( system > -1)
003F4C 9904FFFF       15717         CMP.W   R0,#0FFFFH
003F50 FD13           15718         BLE     _1109
                      15719 ; rs232cmd.c 4370                                               {
                      15720 ; rs232cmd.c 4371                                                       Calibration.ResetSystem =
                             system;
003F52 964842rr       15722         MOV.B   ES,#SEG( _Calibration+97 )
003F56 9918rrrr       15723         MOV.W   R1,#SOF( _Calibration+97 )
003F5A 8209           15724         MOV.B   [R1],R0L
                      15725 ; rs232cmd.c 4372       
                      15726 ; rs232cmd.c 4373                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
003F5C 9918rrrr       15728         MOV.W   R1,#SEG( _Calibration )
003F60 9908rrrr       15729         MOV.W   R0,#SOF( _Calibration )
003F64 964842rr       15730         MOV.B   ES,#SEG( _CalibrationPtr )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 242

ADDR   CODE            LINE SOURCELINE
003F68 9928rrrr       15731         MOV.W   R2,#SOF( _CalibrationPtr )
003F6C 8A22           15732         MOV.W   R2,[R2]
003F6E 993800E2       15733         MOV.W   R3,#0E2H
                      15734         CALL    _NV_Store
003F72 C4rrrrrr       +15734 ;       FCALL   _NV_Store
                      15735 ; rs232cmd.c 4374                                               }
003F76 FE06           15737         BR      _1116
003F76 FE06           15737         BR      _1116
003F78                15738 _1109:
                      15739 ; rs232cmd.c 4375                                               else
                      15740 ; rs232cmd.c 4376                                                       SCPIError = DataOutOfRang
                            e;
003F78 964842rr       15742         MOV.B   ES,#SEG( _SCPIError )
003F7C 9908rrrr       15743         MOV.W   R0,#SOF( _SCPIError )
003F80 9A080021       15744         MOV.W   [R0],#021H
                      15745 ; rs232cmd.c 4377                                       }
                      15746 ; rs232cmd.c 4378                               }
                      15747 ; rs232cmd.c 4379                       }
                      15748 ; rs232cmd.c 4380               }
003F84                15750 _1116:
                      15751 ; rs232cmd.c 4381       }
003F84 2F30           15753         POP.W   R4, R5
003F86 D680           15755         RET
                      15758 ; rs232cmd.c 4382       
                      15759 ; rs232cmd.c 4383       /************************************************************************
                            **/
                      15760 ; rs232cmd.c 4384       /* FactMainFMSDateProd                                                   
                                                                                                                        RS232
                            CMD.C */
                      15761 ; rs232cmd.c 4385       
                      15762 ; rs232cmd.c 4386       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      15763 ; rs232cmd.c 4387       /* Revised:       0006014                                                
                                                                                                                             
                                                                                  */
                      15764 ; rs232cmd.c 4388       
                      15765 ; rs232cmd.c 4389       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      15766 ; rs232cmd.c 4390       
                      15767 ; rs232cmd.c 4391       
                      15768 ; rs232cmd.c 4392       
                      15769 ; rs232cmd.c 4393       /************************************************************************
                            **/
                      15770 ; rs232cmd.c 4394       void FactMainFMSDateProd( void)
                      15771 ; rs232cmd.c 4395       {
                      15772         ALIGN   1
                      15774         PUBLIC  _FactMainFMSDateProd
003F88                15775 _FactMainFMSDateProd:
003F88 0F30           15779         PUSH.W  R4, R5
003F8A 9972001A       15781         SUB.W   R7,#01AH
                      15787 ; rs232cmd.c 4396               UI year, month, day;
                      15788 ; rs232cmd.c 4397               char buffer[20];
                      15789 ; rs232cmd.c 4398       
                      15790 ; rs232cmd.c 4399               if ( CmdExecute && !SCPIError)
003F8E 964842rr       15792         MOV.B   ES,#SEG( _CmdExecute )
003F92 9908rrrr       15793         MOV.W   R0,#SOF( _CmdExecute )
003F96 8200           15794         MOV.B   R0L,[R0]
                      15795         BEQ     _1134
003F98 F202           +15795 ;       BNE     _LG_1072
003F9A D500C7         +15795 ;       JMP.L   _1134
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 243

ADDR   CODE            LINE SOURCELINE
003F9E D500C700       +15795 ;       JMP.L   _1134
003F9E                +15795 _LG_1072:
003F9E 964842rr       15796         MOV.B   ES,#SEG( _SCPIError )
003FA2 9908rrrr       15797         MOV.W   R0,#SOF( _SCPIError )
003FA6 8A00           15798         MOV.W   R0,[R0]
                      15799         BNE     _1134
003FA8 F302           +15799 ;       BEQ     _LG_1074
003FAA D500BF         +15799 ;       JMP.L   _1134
003FAE D500BF00       +15799 ;       JMP.L   _1134
003FAE                +15799 _LG_1074:
                      15800 ; rs232cmd.c 4400               {
                      15801 ; rs232cmd.c 4401                       if ( CmdRequest)
003FAE 964842rr       15803         MOV.B   ES,#SEG( _CmdRequest )
003FB2 9908rrrr       15804         MOV.W   R0,#SOF( _CmdRequest )
003FB6 8200           15805         MOV.B   R0L,[R0]
003FB8 F35A           15806         BEQ     _1124
                      15807 ; rs232cmd.c 4402                       {
                      15808 ; rs232cmd.c 4403                               if ( ParCnt)
003FBA 964842rr       15810         MOV.B   ES,#SEG( _ParCnt )
003FBE 9908rrrr       15811         MOV.W   R0,#SOF( _ParCnt )
003FC2 8200           15812         MOV.B   R0L,[R0]
003FC4 F307           15813         BEQ     _1123
                      15814 ; rs232cmd.c 4404                                       SCPIError = SyntaxErr;
003FC6 964842rr       15816         MOV.B   ES,#SEG( _SCPIError )
003FCA 9908rrrr       15817         MOV.W   R0,#SOF( _SCPIError )
003FCE BA03           15818         MOV.W   [R0],#03H
                      15819         BR      _1134
003FD0 D500AC         +15819         JMP.L   _1134
003FD0 D500AC00       +15819         JMP.L   _1134
003FD4                15820 _1123:
                      15821 ; rs232cmd.c 4405                               else
                      15822 ; rs232cmd.c 4406                               {
                      15823 ; rs232cmd.c 4407                                       day = Calibration.ProdDate % 100;
003FD4 964842rr       15825         MOV.B   ES,#SEG( _Calibration+98 )
003FD8 9918rrrr       15826         MOV.W   R1,#SOF( _Calibration+98 )
003FDC 8B01           15827         MOV.W   R0,[R1+]
003FDE 8A11           15828         MOV.W   R1,[R1]
003FE0 B930           15829         MOV.W   R3,#00H
003FE2 99280064       15830         MOV.W   R2,#064H
003FE6 964842rr       15831         MOV.B   ES,#SEG( _Calibration+98 )
003FEA 9948rrrr       15832         MOV.W   R4,#SOF( _Calibration+98 )
003FEE 8B0C           15833         MOV.W   [R4+],R0
003FF0 8A1C           15834         MOV.W   [R4],R1
003FF2 C4rrrrrr       15835         FCALL   __UMODL
003FF6 8C0F04         15836         MOV.W   [R7+4],R0
003FF9 964842rr       15837         MOV.B   ES,#SEG( _Calibration+98 )
003FFD 9918rrrr       15838         MOV.W   R1,#SOF( _Calibration+98 )
004001 8B01           15839         MOV.W   R0,[R1+]
004003 8A11           15840         MOV.W   R1,[R1]
                      15841 ; rs232cmd.c 4408                                       month = ( Calibration.ProdDate / 100) % 1
                            00;
004005 B930           15843         MOV.W   R3,#00H
004007 99280064       15844         MOV.W   R2,#064H
00400B 8953           15845         MOV.W   R5,R3
00400D 8942           15846         MOV.W   R4,R2
00400F C4rrrrrr       15847         FCALL   __UDIVL
004013 8935           15848         MOV.W   R3,R5
004015 8924           15849         MOV.W   R2,R4
004017 C4rrrrrr       15850         FCALL   __UMODL
00401B 8C0F02         15851         MOV.W   [R7+2],R0
                      15852 ; rs232cmd.c 4409                                       year = ( Calibration.ProdDate / 10000);
00401E B930           15854         MOV.W   R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 244

ADDR   CODE            LINE SOURCELINE
004020 99282710       15855         MOV.W   R2,#02710H
004024 964842rr       15856         MOV.B   ES,#SEG( _Calibration+98 )
004028 9918rrrr       15857         MOV.W   R1,#SOF( _Calibration+98 )
00402C 8B01           15858         MOV.W   R0,[R1+]
00402E 8A11           15859         MOV.W   R1,[R1]
004030 C4rrrrrr       15860         FCALL   __UDIVL
004034 8A0F           15861         MOV.W   [R7],R0
                      15862 ; rs232cmd.c 4410       
                      15863 ; rs232cmd.c 4411                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
004036 91A8rr         15865         MOV.B   R5L,#SEG( __lc_bs )
004039 71BB           15866         XOR.B   R5H,R5H
00403B 404706         15867         LEA     R4,R7+6
00403E 8C0704         15868         MOV.W   R0,[R7+4]
004041 0F01           15869         PUSH.W  R0
004043 8C0704         15871         MOV.W   R0,[R7+4]
004046 0F01           15872         PUSH.W  R0
004048 8C0704         15874         MOV.W   R0,[R7+4]
00404B 0F01           15875         PUSH.W  R0
00404D 9918rrrr       15877         MOV.W   R1,#SEG( _1121 )
004051 9908rrrr       15878         MOV.W   R0,#SOF( _1121 )
004055 0F03           15879         PUSH.W  R0, R1
004057 8915           15881         MOV.W   R1,R5
004059 8904           15882         MOV.W   R0,R4
                      15883         CALL    _sprintf
00405B C4rrrrrr       +15883 ;       FCALL   _sprintf
00405F 9970000A       15884         ADD.W   R7,#0AH
                      15886 ; rs232cmd.c 4412       
                      15887 ; rs232cmd.c 4413                                       rs232puts( buffer);
004063 8915           15889         MOV.W   R1,R5
004065 8904           15890         MOV.W   R0,R4
                      15891         CALL    _rs232puts
004067 C4rrrrrr       +15891 ;       FCALL   _rs232puts
                      15892 ; rs232cmd.c 4414                               }
                      15893 ; rs232cmd.c 4415                       }
00406B FE5F           15895         BR      _1134
00406B FE5F00         15895         BR      _1134
00406E                15896 _1124:
                      15897 ; rs232cmd.c 4416                       else
                      15898 ; rs232cmd.c 4417                       {
                      15899 ; rs232cmd.c 4418                               if ( !PasswordProtected)
00406E 964842rr       15901         MOV.B   ES,#SEG( _PasswordProtected )
004072 9908rrrr       15902         MOV.W   R0,#SOF( _PasswordProtected )
004076 8A00           15903         MOV.W   R0,[R0]
004078 F258           15904         BNE     _1134
                      15905 ; rs232cmd.c 4419                               {
                      15906 ; rs232cmd.c 4420                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
00407A 964842rr       15908         MOV.B   ES,#SEG( _ParCnt )
00407E 9908rrrr       15909         MOV.W   R0,#SOF( _ParCnt )
004082 8200           15910         MOV.B   R0L,[R0]
004084 910403         15911         CMP.B   R0L,#03H
004087 F21F           15912         BNE     _1125
004089 9168rr         15913         MOV.B   R3L,#SEG( __lc_bs )
00408C 7177           15914         XOR.B   R3H,R3H
00408E 8927           15915         MOV.W   R2,R7
004090 91A8rr         15916         MOV.B   R5L,#SEG( __lc_bs )
004093 71BB           15917         XOR.B   R5H,R5H
004095 404702         15918         LEA     R4,R7+2
004098 9128rr         15919         MOV.B   R1L,#SEG( __lc_bs )
00409B 7133           15920         XOR.B   R1H,R1H
00409D 400704         15921         LEA     R0,R7+4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 245

ADDR   CODE            LINE SOURCELINE
0040A0 0F03           15922         PUSH.W  R0, R1
0040A2 0F30           15924         PUSH.W  R4, R5
0040A4 0F0C           15926         PUSH.W  R2, R3
0040A6 9938rrrr       15928         MOV.W   R3,#SEG( _1122 )
0040AA 9928rrrr       15929         MOV.W   R2,#SOF( _1122 )
0040AE 0F0C           15930         PUSH.W  R2, R3
0040B0 9918rrrr       15932         MOV.W   R1,#SEG( _Cmd )
0040B4 9908rrrr       15933         MOV.W   R0,#SOF( _Cmd )
                      15934         CALL    _sscanf
0040B8 C4rrrrrr       +15934 ;       FCALL   _sscanf
0040BC 99700010       15935         ADD.W   R7,#010H
0040C0 99040003       15937         CMP.W   R0,#03H
0040C4 F306           15938         BEQ     _1126
0040C4 F306           15938         BEQ     _1126
0040C6                15939 _1125:
                      15940 ; rs232cmd.c 4421                                               SCPIError = SyntaxErr;
0040C6 964842rr       15942         MOV.B   ES,#SEG( _SCPIError )
0040CA 9908rrrr       15943         MOV.W   R0,#SOF( _SCPIError )
0040CE BA03           15944         MOV.W   [R0],#03H
0040D0 FE2C           15945         BR      _1134
0040D0 FE2C           15945         BR      _1134
0040D2                15946 _1126:
                      15947 ; rs232cmd.c 4422                                       else
                      15948 ; rs232cmd.c 4423                                       {
                      15949 ; rs232cmd.c 4424                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0040D2 8A07           15951         MOV.W   R0,[R7]
0040D4 8C1702         15952         MOV.W   R1,[R7+2]
0040D7 8C2704         15953         MOV.W   R2,[R7+4]
                      15954         CALL    _ValidateDate
0040DA C4rrrrrr       +15954 ;       FCALL   _ValidateDate
0040DE 6900           15955         OR.W    R0,R0
0040E0 F207           15956         BNE     _1127
                      15957 ; rs232cmd.c 4425                                                       SCPIError = ExecErr;
0040E2 964842rr       15959         MOV.B   ES,#SEG( _SCPIError )
0040E6 9908rrrr       15960         MOV.W   R0,#SOF( _SCPIError )
0040EA 9A08001D       15961         MOV.W   [R0],#01DH
0040EE FE1D           15962         BR      _1134
0040EE FE1D           15962         BR      _1134
0040F0                15963 _1127:
                      15964 ; rs232cmd.c 4426                                               else
                      15965 ; rs232cmd.c 4427                                               {
                      15966 ; rs232cmd.c 4428                                                       Calibration.ProdDate = da
                            y + 100*month + 10000*year;
0040F0 8C0702         15968         MOV.W   R0,[R7+2]
0040F3 E9000064       15969         MULU.W  R0,#064H
0040F7 0C0704         15970         ADD.W   R0,[R7+4]
0040FA 8A27           15971         MOV.W   R2,[R7]
0040FC E9202710       15972         MULU.W  R2,#02710H
004100 0902           15973         ADD.W   R0,R2
004102 B910           15974         MOVS.W  R1,#00H
004104 964842rr       15975         MOV.B   ES,#SEG( _Calibration+98 )
004108 9928rrrr       15976         MOV.W   R2,#SOF( _Calibration+98 )
00410C 8B0A           15977         MOV.W   [R2+],R0
00410E 8A1A           15978         MOV.W   [R2],R1
                      15979 ; rs232cmd.c 4429                                               
                      15980 ; rs232cmd.c 4430                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004110 9918rrrr       15982         MOV.W   R1,#SEG( _Calibration )
004114 9908rrrr       15983         MOV.W   R0,#SOF( _Calibration )
004118 964842rr       15984         MOV.B   ES,#SEG( _CalibrationPtr )
00411C 9928rrrr       15985         MOV.W   R2,#SOF( _CalibrationPtr )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 246

ADDR   CODE            LINE SOURCELINE
004120 8A22           15986         MOV.W   R2,[R2]
004122 993800E2       15987         MOV.W   R3,#0E2H
                      15988         CALL    _NV_Store
004126 C4rrrrrr       +15988 ;       FCALL   _NV_Store
                      15989 ; rs232cmd.c 4431                                               }
                      15990 ; rs232cmd.c 4432                                       }                               
                      15991 ; rs232cmd.c 4433                               }
                      15992 ; rs232cmd.c 4434                       }
                      15993 ; rs232cmd.c 4435               }
00412A                15995 _1134:
                      15996 ; rs232cmd.c 4436       }
00412A 9970001A       15998         ADD.W   R7,#01AH
00412E 2F30           16000         POP.W   R4, R5
004130 D680           16002         RET
                      16004 ; rs232cmd.c 4437       
                      16005 ; rs232cmd.c 4438       /************************************************************************
                            **/
                      16006 ; rs232cmd.c 4439       /* FactMainFMSDateUpd                                                    
                                                                                                                             
                               RS232CMD.C */
                      16007 ; rs232cmd.c 4440       
                      16008 ; rs232cmd.c 4441       /* Author:              Kim Engedahl, DEV, 000407                        
                                                                                                                             
                                  */
                      16009 ; rs232cmd.c 4442       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      16010 ; rs232cmd.c 4443       
                      16011 ; rs232cmd.c 4444       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      16012 ; rs232cmd.c 4445       
                      16013 ; rs232cmd.c 4446       
                      16014 ; rs232cmd.c 4447       
                      16015 ; rs232cmd.c 4448       /************************************************************************
                            **/
                      16016 ; rs232cmd.c 4449       void FactMainFMSDateUpd( void)
                      16017 ; rs232cmd.c 4450       {
                      16018         ALIGN   1
                      16020         PUBLIC  _FactMainFMSDateUpd
004132                16021 _FactMainFMSDateUpd:
004132 0F30           16025         PUSH.W  R4, R5
004134 9972001A       16027         SUB.W   R7,#01AH
                      16033 ; rs232cmd.c 4451               UI year, month, day;
                      16034 ; rs232cmd.c 4452               char buffer[20];
                      16035 ; rs232cmd.c 4453       
                      16036 ; rs232cmd.c 4454               if ( CmdExecute && !SCPIError)
004138 964842rr       16038         MOV.B   ES,#SEG( _CmdExecute )
00413C 9908rrrr       16039         MOV.W   R0,#SOF( _CmdExecute )
004140 8200           16040         MOV.B   R0L,[R0]
                      16041         BEQ     _1148
004142 F202           +16041 ;       BNE     _LG_1088
004144 D500C7         +16041 ;       JMP.L   _1148
004148 D500C700       +16041 ;       JMP.L   _1148
004148                +16041 _LG_1088:
004148 964842rr       16042         MOV.B   ES,#SEG( _SCPIError )
00414C 9908rrrr       16043         MOV.W   R0,#SOF( _SCPIError )
004150 8A00           16044         MOV.W   R0,[R0]
                      16045         BNE     _1148
004152 F302           +16045 ;       BEQ     _LG_1090
004154 D500BF         +16045 ;       JMP.L   _1148
004158 D500BF00       +16045 ;       JMP.L   _1148
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 247

ADDR   CODE            LINE SOURCELINE
004158                +16045 _LG_1090:
                      16046 ; rs232cmd.c 4455               {
                      16047 ; rs232cmd.c 4456                       if ( CmdRequest)
004158 964842rr       16049         MOV.B   ES,#SEG( _CmdRequest )
00415C 9908rrrr       16050         MOV.W   R0,#SOF( _CmdRequest )
004160 8200           16051         MOV.B   R0L,[R0]
004162 F35A           16052         BEQ     _1138
                      16053 ; rs232cmd.c 4457                       {
                      16054 ; rs232cmd.c 4458                               if ( ParCnt)
004164 964842rr       16056         MOV.B   ES,#SEG( _ParCnt )
004168 9908rrrr       16057         MOV.W   R0,#SOF( _ParCnt )
00416C 8200           16058         MOV.B   R0L,[R0]
00416E F307           16059         BEQ     _1137
                      16060 ; rs232cmd.c 4459                                       SCPIError = SyntaxErr;
004170 964842rr       16062         MOV.B   ES,#SEG( _SCPIError )
004174 9908rrrr       16063         MOV.W   R0,#SOF( _SCPIError )
004178 BA03           16064         MOV.W   [R0],#03H
                      16065         BR      _1148
00417A D500AC         +16065         JMP.L   _1148
00417A D500AC00       +16065         JMP.L   _1148
00417E                16066 _1137:
                      16067 ; rs232cmd.c 4460                               else
                      16068 ; rs232cmd.c 4461                               {
                      16069 ; rs232cmd.c 4462                                       day = Calibration.UpdateDate % 100;
00417E 964842rr       16071         MOV.B   ES,#SEG( _Calibration+102 )
004182 9918rrrr       16072         MOV.W   R1,#SOF( _Calibration+102 )
004186 8B01           16073         MOV.W   R0,[R1+]
004188 8A11           16074         MOV.W   R1,[R1]
00418A B930           16075         MOV.W   R3,#00H
00418C 99280064       16076         MOV.W   R2,#064H
004190 964842rr       16077         MOV.B   ES,#SEG( _Calibration+102 )
004194 9948rrrr       16078         MOV.W   R4,#SOF( _Calibration+102 )
004198 8B0C           16079         MOV.W   [R4+],R0
00419A 8A1C           16080         MOV.W   [R4],R1
00419C C4rrrrrr       16081         FCALL   __UMODL
0041A0 8C0F04         16082         MOV.W   [R7+4],R0
0041A3 964842rr       16083         MOV.B   ES,#SEG( _Calibration+102 )
0041A7 9918rrrr       16084         MOV.W   R1,#SOF( _Calibration+102 )
0041AB 8B01           16085         MOV.W   R0,[R1+]
0041AD 8A11           16086         MOV.W   R1,[R1]
                      16087 ; rs232cmd.c 4463                                       month = ( Calibration.UpdateDate / 100) %
                             100;
0041AF B930           16089         MOV.W   R3,#00H
0041B1 99280064       16090         MOV.W   R2,#064H
0041B5 8953           16091         MOV.W   R5,R3
0041B7 8942           16092         MOV.W   R4,R2
0041B9 C4rrrrrr       16093         FCALL   __UDIVL
0041BD 8935           16094         MOV.W   R3,R5
0041BF 8924           16095         MOV.W   R2,R4
0041C1 C4rrrrrr       16096         FCALL   __UMODL
0041C5 8C0F02         16097         MOV.W   [R7+2],R0
                      16098 ; rs232cmd.c 4464                                       year = ( Calibration.UpdateDate / 10000);
                            
0041C8 B930           16100         MOV.W   R3,#00H
0041CA 99282710       16101         MOV.W   R2,#02710H
0041CE 964842rr       16102         MOV.B   ES,#SEG( _Calibration+102 )
0041D2 9918rrrr       16103         MOV.W   R1,#SOF( _Calibration+102 )
0041D6 8B01           16104         MOV.W   R0,[R1+]
0041D8 8A11           16105         MOV.W   R1,[R1]
0041DA C4rrrrrr       16106         FCALL   __UDIVL
0041DE 8A0F           16107         MOV.W   [R7],R0
                      16108 ; rs232cmd.c 4465       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 248

ADDR   CODE            LINE SOURCELINE
                      16109 ; rs232cmd.c 4466                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
0041E0 91A8rr         16111         MOV.B   R5L,#SEG( __lc_bs )
0041E3 71BB           16112         XOR.B   R5H,R5H
0041E5 404706         16113         LEA     R4,R7+6
0041E8 8C0704         16114         MOV.W   R0,[R7+4]
0041EB 0F01           16115         PUSH.W  R0
0041ED 8C0704         16117         MOV.W   R0,[R7+4]
0041F0 0F01           16118         PUSH.W  R0
0041F2 8C0704         16120         MOV.W   R0,[R7+4]
0041F5 0F01           16121         PUSH.W  R0
0041F7 9918rrrr       16123         MOV.W   R1,#SEG( _1121 )
0041FB 9908rrrr       16124         MOV.W   R0,#SOF( _1121 )
0041FF 0F03           16125         PUSH.W  R0, R1
004201 8915           16127         MOV.W   R1,R5
004203 8904           16128         MOV.W   R0,R4
                      16129         CALL    _sprintf
004205 C4rrrrrr       +16129 ;       FCALL   _sprintf
004209 9970000A       16130         ADD.W   R7,#0AH
                      16132 ; rs232cmd.c 4467       
                      16133 ; rs232cmd.c 4468                                       rs232puts( buffer);
00420D 8915           16135         MOV.W   R1,R5
00420F 8904           16136         MOV.W   R0,R4
                      16137         CALL    _rs232puts
004211 C4rrrrrr       +16137 ;       FCALL   _rs232puts
                      16138 ; rs232cmd.c 4469                               }
                      16139 ; rs232cmd.c 4470                       }
004215 FE5F           16141         BR      _1148
004215 FE5F00         16141         BR      _1148
004218                16142 _1138:
                      16143 ; rs232cmd.c 4471                       else
                      16144 ; rs232cmd.c 4472                       {
                      16145 ; rs232cmd.c 4473                               if ( !PasswordProtected)
004218 964842rr       16147         MOV.B   ES,#SEG( _PasswordProtected )
00421C 9908rrrr       16148         MOV.W   R0,#SOF( _PasswordProtected )
004220 8A00           16149         MOV.W   R0,[R0]
004222 F258           16150         BNE     _1148
                      16151 ; rs232cmd.c 4474                               {
                      16152 ; rs232cmd.c 4475                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
004224 964842rr       16154         MOV.B   ES,#SEG( _ParCnt )
004228 9908rrrr       16155         MOV.W   R0,#SOF( _ParCnt )
00422C 8200           16156         MOV.B   R0L,[R0]
00422E 910403         16157         CMP.B   R0L,#03H
004231 F21F           16158         BNE     _1139
004233 9168rr         16159         MOV.B   R3L,#SEG( __lc_bs )
004236 7177           16160         XOR.B   R3H,R3H
004238 8927           16161         MOV.W   R2,R7
00423A 91A8rr         16162         MOV.B   R5L,#SEG( __lc_bs )
00423D 71BB           16163         XOR.B   R5H,R5H
00423F 404702         16164         LEA     R4,R7+2
004242 9128rr         16165         MOV.B   R1L,#SEG( __lc_bs )
004245 7133           16166         XOR.B   R1H,R1H
004247 400704         16167         LEA     R0,R7+4
00424A 0F03           16168         PUSH.W  R0, R1
00424C 0F30           16170         PUSH.W  R4, R5
00424E 0F0C           16172         PUSH.W  R2, R3
004250 9938rrrr       16174         MOV.W   R3,#SEG( _1122 )
004254 9928rrrr       16175         MOV.W   R2,#SOF( _1122 )
004258 0F0C           16176         PUSH.W  R2, R3
00425A 9918rrrr       16178         MOV.W   R1,#SEG( _Cmd )
00425E 9908rrrr       16179         MOV.W   R0,#SOF( _Cmd )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 249

ADDR   CODE            LINE SOURCELINE
                      16180         CALL    _sscanf
004262 C4rrrrrr       +16180 ;       FCALL   _sscanf
004266 99700010       16181         ADD.W   R7,#010H
00426A 99040003       16183         CMP.W   R0,#03H
00426E F306           16184         BEQ     _1140
00426E F306           16184         BEQ     _1140
004270                16185 _1139:
                      16186 ; rs232cmd.c 4476                                               SCPIError = SyntaxErr;
004270 964842rr       16188         MOV.B   ES,#SEG( _SCPIError )
004274 9908rrrr       16189         MOV.W   R0,#SOF( _SCPIError )
004278 BA03           16190         MOV.W   [R0],#03H
00427A FE2C           16191         BR      _1148
00427A FE2C           16191         BR      _1148
00427C                16192 _1140:
                      16193 ; rs232cmd.c 4477                                       else
                      16194 ; rs232cmd.c 4478                                       {
                      16195 ; rs232cmd.c 4479                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
00427C 8A07           16197         MOV.W   R0,[R7]
00427E 8C1702         16198         MOV.W   R1,[R7+2]
004281 8C2704         16199         MOV.W   R2,[R7+4]
                      16200         CALL    _ValidateDate
004284 C4rrrrrr       +16200 ;       FCALL   _ValidateDate
004288 6900           16201         OR.W    R0,R0
00428A F207           16202         BNE     _1141
                      16203 ; rs232cmd.c 4480                                                       SCPIError = ExecErr;
00428C 964842rr       16205         MOV.B   ES,#SEG( _SCPIError )
004290 9908rrrr       16206         MOV.W   R0,#SOF( _SCPIError )
004294 9A08001D       16207         MOV.W   [R0],#01DH
004298 FE1D           16208         BR      _1148
004298 FE1D           16208         BR      _1148
00429A                16209 _1141:
                      16210 ; rs232cmd.c 4481                                               else
                      16211 ; rs232cmd.c 4482                                               {
                      16212 ; rs232cmd.c 4483                                                       Calibration.UpdateDate = 
                            day + 100*month + 10000*year;
00429A 8C0702         16214         MOV.W   R0,[R7+2]
00429D E9000064       16215         MULU.W  R0,#064H
0042A1 0C0704         16216         ADD.W   R0,[R7+4]
0042A4 8A27           16217         MOV.W   R2,[R7]
0042A6 E9202710       16218         MULU.W  R2,#02710H
0042AA 0902           16219         ADD.W   R0,R2
0042AC B910           16220         MOVS.W  R1,#00H
0042AE 964842rr       16221         MOV.B   ES,#SEG( _Calibration+102 )
0042B2 9928rrrr       16222         MOV.W   R2,#SOF( _Calibration+102 )
0042B6 8B0A           16223         MOV.W   [R2+],R0
0042B8 8A1A           16224         MOV.W   [R2],R1
                      16225 ; rs232cmd.c 4484                                               
                      16226 ; rs232cmd.c 4485                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0042BA 9918rrrr       16228         MOV.W   R1,#SEG( _Calibration )
0042BE 9908rrrr       16229         MOV.W   R0,#SOF( _Calibration )
0042C2 964842rr       16230         MOV.B   ES,#SEG( _CalibrationPtr )
0042C6 9928rrrr       16231         MOV.W   R2,#SOF( _CalibrationPtr )
0042CA 8A22           16232         MOV.W   R2,[R2]
0042CC 993800E2       16233         MOV.W   R3,#0E2H
                      16234         CALL    _NV_Store
0042D0 C4rrrrrr       +16234 ;       FCALL   _NV_Store
                      16235 ; rs232cmd.c 4486                                               }
                      16236 ; rs232cmd.c 4487                                       }                               
                      16237 ; rs232cmd.c 4488                               }
                      16238 ; rs232cmd.c 4489                       }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 250

ADDR   CODE            LINE SOURCELINE
                      16239 ; rs232cmd.c 4490               }
0042D4                16241 _1148:
                      16242 ; rs232cmd.c 4491       }
0042D4 9970001A       16244         ADD.W   R7,#01AH
0042D8 2F30           16246         POP.W   R4, R5
0042DA D680           16248         RET
                      16250 ; rs232cmd.c 4492       
                      16251 ; rs232cmd.c 4493       /************************************************************************
                            **/
                      16252 ; rs232cmd.c 4494       /* FactGenlockGenDate                                                    
                                                                                                                             
                               RS232CMD.C */
                      16253 ; rs232cmd.c 4495       
                      16254 ; rs232cmd.c 4496       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      16255 ; rs232cmd.c 4497       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      16256 ; rs232cmd.c 4498       
                      16257 ; rs232cmd.c 4499       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      16258 ; rs232cmd.c 4500       
                      16259 ; rs232cmd.c 4501       
                      16260 ; rs232cmd.c 4502       
                      16261 ; rs232cmd.c 4503       /************************************************************************
                            **/
                      16262 ; rs232cmd.c 4504       void FactGenlockGenDate( void)
                      16263 ; rs232cmd.c 4505       {
                      16264         ALIGN   1
                      16266         PUBLIC  _FactGenlockGenDate
0042DC                16267 _FactGenlockGenDate:
0042DC 0F30           16271         PUSH.W  R4, R5
0042DE 9972001A       16273         SUB.W   R7,#01AH
                      16279 ; rs232cmd.c 4506               UI year, month, day;
                      16280 ; rs232cmd.c 4507               char buffer[20];
                      16281 ; rs232cmd.c 4508       
                      16282 ; rs232cmd.c 4509               if ( CmdExecute && !SCPIError)
0042E2 964842rr       16284         MOV.B   ES,#SEG( _CmdExecute )
0042E6 9908rrrr       16285         MOV.W   R0,#SOF( _CmdExecute )
0042EA 8200           16286         MOV.B   R0L,[R0]
                      16287         BEQ     _1162
0042EC F202           +16287 ;       BNE     _LG_1104
0042EE D500C7         +16287 ;       JMP.L   _1162
0042F2 D500C700       +16287 ;       JMP.L   _1162
0042F2                +16287 _LG_1104:
0042F2 964842rr       16288         MOV.B   ES,#SEG( _SCPIError )
0042F6 9908rrrr       16289         MOV.W   R0,#SOF( _SCPIError )
0042FA 8A00           16290         MOV.W   R0,[R0]
                      16291         BNE     _1162
0042FC F302           +16291 ;       BEQ     _LG_1106
0042FE D500BF         +16291 ;       JMP.L   _1162
004302 D500BF00       +16291 ;       JMP.L   _1162
004302                +16291 _LG_1106:
                      16292 ; rs232cmd.c 4510               {
                      16293 ; rs232cmd.c 4511                       if ( CmdRequest)
004302 964842rr       16295         MOV.B   ES,#SEG( _CmdRequest )
004306 9908rrrr       16296         MOV.W   R0,#SOF( _CmdRequest )
00430A 8200           16297         MOV.B   R0L,[R0]
00430C F35A           16298         BEQ     _1152
                      16299 ; rs232cmd.c 4512                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 251

ADDR   CODE            LINE SOURCELINE
                      16300 ; rs232cmd.c 4513                               if ( ParCnt)
00430E 964842rr       16302         MOV.B   ES,#SEG( _ParCnt )
004312 9908rrrr       16303         MOV.W   R0,#SOF( _ParCnt )
004316 8200           16304         MOV.B   R0L,[R0]
004318 F307           16305         BEQ     _1151
                      16306 ; rs232cmd.c 4514                                       SCPIError = SyntaxErr;
00431A 964842rr       16308         MOV.B   ES,#SEG( _SCPIError )
00431E 9908rrrr       16309         MOV.W   R0,#SOF( _SCPIError )
004322 BA03           16310         MOV.W   [R0],#03H
                      16311         BR      _1162
004324 D500AC         +16311         JMP.L   _1162
004324 D500AC00       +16311         JMP.L   _1162
004328                16312 _1151:
                      16313 ; rs232cmd.c 4515                               else
                      16314 ; rs232cmd.c 4516                               {
                      16315 ; rs232cmd.c 4517                                       day = Calibration.GenlockCalibration.Date
                             % 100;
004328 964842rr       16317         MOV.B   ES,#SEG( _Calibration+106 )
00432C 9918rrrr       16318         MOV.W   R1,#SOF( _Calibration+106 )
004330 8B01           16319         MOV.W   R0,[R1+]
004332 8A11           16320         MOV.W   R1,[R1]
004334 B930           16321         MOV.W   R3,#00H
004336 99280064       16322         MOV.W   R2,#064H
00433A 964842rr       16323         MOV.B   ES,#SEG( _Calibration+106 )
00433E 9948rrrr       16324         MOV.W   R4,#SOF( _Calibration+106 )
004342 8B0C           16325         MOV.W   [R4+],R0
004344 8A1C           16326         MOV.W   [R4],R1
004346 C4rrrrrr       16327         FCALL   __UMODL
00434A 8C0F04         16328         MOV.W   [R7+4],R0
00434D 964842rr       16329         MOV.B   ES,#SEG( _Calibration+106 )
004351 9918rrrr       16330         MOV.W   R1,#SOF( _Calibration+106 )
004355 8B01           16331         MOV.W   R0,[R1+]
004357 8A11           16332         MOV.W   R1,[R1]
                      16333 ; rs232cmd.c 4518                                       month = ( Calibration.GenlockCalibration.
                            Date / 100) % 100;
004359 B930           16335         MOV.W   R3,#00H
00435B 99280064       16336         MOV.W   R2,#064H
00435F 8953           16337         MOV.W   R5,R3
004361 8942           16338         MOV.W   R4,R2
004363 C4rrrrrr       16339         FCALL   __UDIVL
004367 8935           16340         MOV.W   R3,R5
004369 8924           16341         MOV.W   R2,R4
00436B C4rrrrrr       16342         FCALL   __UMODL
00436F 8C0F02         16343         MOV.W   [R7+2],R0
                      16344 ; rs232cmd.c 4519                                       year = ( Calibration.GenlockCalibration.D
                            ate / 10000);
004372 B930           16346         MOV.W   R3,#00H
004374 99282710       16347         MOV.W   R2,#02710H
004378 964842rr       16348         MOV.B   ES,#SEG( _Calibration+106 )
00437C 9918rrrr       16349         MOV.W   R1,#SOF( _Calibration+106 )
004380 8B01           16350         MOV.W   R0,[R1+]
004382 8A11           16351         MOV.W   R1,[R1]
004384 C4rrrrrr       16352         FCALL   __UDIVL
004388 8A0F           16353         MOV.W   [R7],R0
                      16354 ; rs232cmd.c 4520       
                      16355 ; rs232cmd.c 4521                                       sprintf( buffer, "%d,%d,%d\n", year, mont
                            h, day);
00438A 91A8rr         16357         MOV.B   R5L,#SEG( __lc_bs )
00438D 71BB           16358         XOR.B   R5H,R5H
00438F 404706         16359         LEA     R4,R7+6
004392 8C0704         16360         MOV.W   R0,[R7+4]
004395 0F01           16361         PUSH.W  R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 252

ADDR   CODE            LINE SOURCELINE
004397 8C0704         16363         MOV.W   R0,[R7+4]
00439A 0F01           16364         PUSH.W  R0
00439C 8C0704         16366         MOV.W   R0,[R7+4]
00439F 0F01           16367         PUSH.W  R0
0043A1 9918rrrr       16369         MOV.W   R1,#SEG( _1121 )
0043A5 9908rrrr       16370         MOV.W   R0,#SOF( _1121 )
0043A9 0F03           16371         PUSH.W  R0, R1
0043AB 8915           16373         MOV.W   R1,R5
0043AD 8904           16374         MOV.W   R0,R4
                      16375         CALL    _sprintf
0043AF C4rrrrrr       +16375 ;       FCALL   _sprintf
0043B3 9970000A       16376         ADD.W   R7,#0AH
                      16378 ; rs232cmd.c 4522       
                      16379 ; rs232cmd.c 4523                                       rs232puts( buffer);
0043B7 8915           16381         MOV.W   R1,R5
0043B9 8904           16382         MOV.W   R0,R4
                      16383         CALL    _rs232puts
0043BB C4rrrrrr       +16383 ;       FCALL   _rs232puts
                      16384 ; rs232cmd.c 4524                               }
                      16385 ; rs232cmd.c 4525                       }
0043BF FE5F           16387         BR      _1162
0043BF FE5F00         16387         BR      _1162
0043C2                16388 _1152:
                      16389 ; rs232cmd.c 4526                       else
                      16390 ; rs232cmd.c 4527                       {
                      16391 ; rs232cmd.c 4528                               if ( !PasswordProtected)
0043C2 964842rr       16393         MOV.B   ES,#SEG( _PasswordProtected )
0043C6 9908rrrr       16394         MOV.W   R0,#SOF( _PasswordProtected )
0043CA 8A00           16395         MOV.W   R0,[R0]
0043CC F258           16396         BNE     _1162
                      16397 ; rs232cmd.c 4529                               {
                      16398 ; rs232cmd.c 4530                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%d
                            ,%d,%d", &year, &month, &day)) != 3))
0043CE 964842rr       16400         MOV.B   ES,#SEG( _ParCnt )
0043D2 9908rrrr       16401         MOV.W   R0,#SOF( _ParCnt )
0043D6 8200           16402         MOV.B   R0L,[R0]
0043D8 910403         16403         CMP.B   R0L,#03H
0043DB F21F           16404         BNE     _1153
0043DD 9168rr         16405         MOV.B   R3L,#SEG( __lc_bs )
0043E0 7177           16406         XOR.B   R3H,R3H
0043E2 8927           16407         MOV.W   R2,R7
0043E4 91A8rr         16408         MOV.B   R5L,#SEG( __lc_bs )
0043E7 71BB           16409         XOR.B   R5H,R5H
0043E9 404702         16410         LEA     R4,R7+2
0043EC 9128rr         16411         MOV.B   R1L,#SEG( __lc_bs )
0043EF 7133           16412         XOR.B   R1H,R1H
0043F1 400704         16413         LEA     R0,R7+4
0043F4 0F03           16414         PUSH.W  R0, R1
0043F6 0F30           16416         PUSH.W  R4, R5
0043F8 0F0C           16418         PUSH.W  R2, R3
0043FA 9938rrrr       16420         MOV.W   R3,#SEG( _1122 )
0043FE 9928rrrr       16421         MOV.W   R2,#SOF( _1122 )
004402 0F0C           16422         PUSH.W  R2, R3
004404 9918rrrr       16424         MOV.W   R1,#SEG( _Cmd )
004408 9908rrrr       16425         MOV.W   R0,#SOF( _Cmd )
                      16426         CALL    _sscanf
00440C C4rrrrrr       +16426 ;       FCALL   _sscanf
004410 99700010       16427         ADD.W   R7,#010H
004414 99040003       16429         CMP.W   R0,#03H
004418 F306           16430         BEQ     _1154
004418 F306           16430         BEQ     _1154
00441A                16431 _1153:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 253

ADDR   CODE            LINE SOURCELINE
                      16432 ; rs232cmd.c 4531                                               SCPIError = SyntaxErr;
00441A 964842rr       16434         MOV.B   ES,#SEG( _SCPIError )
00441E 9908rrrr       16435         MOV.W   R0,#SOF( _SCPIError )
004422 BA03           16436         MOV.W   [R0],#03H
004424 FE2C           16437         BR      _1162
004424 FE2C           16437         BR      _1162
004426                16438 _1154:
                      16439 ; rs232cmd.c 4532                                       else
                      16440 ; rs232cmd.c 4533                                       {
                      16441 ; rs232cmd.c 4534                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004426 8A07           16443         MOV.W   R0,[R7]
004428 8C1702         16444         MOV.W   R1,[R7+2]
00442B 8C2704         16445         MOV.W   R2,[R7+4]
                      16446         CALL    _ValidateDate
00442E C4rrrrrr       +16446 ;       FCALL   _ValidateDate
004432 6900           16447         OR.W    R0,R0
004434 F207           16448         BNE     _1155
                      16449 ; rs232cmd.c 4535                                                       SCPIError = ExecErr;
004436 964842rr       16451         MOV.B   ES,#SEG( _SCPIError )
00443A 9908rrrr       16452         MOV.W   R0,#SOF( _SCPIError )
00443E 9A08001D       16453         MOV.W   [R0],#01DH
004442 FE1D           16454         BR      _1162
004442 FE1D           16454         BR      _1162
004444                16455 _1155:
                      16456 ; rs232cmd.c 4536                                               else
                      16457 ; rs232cmd.c 4537                                               {
                      16458 ; rs232cmd.c 4538                                                       Calibration.GenlockCalibr
                            ation.Date = day + 100*month + 10000*year;
004444 8C0702         16460         MOV.W   R0,[R7+2]
004447 E9000064       16461         MULU.W  R0,#064H
00444B 0C0704         16462         ADD.W   R0,[R7+4]
00444E 8A27           16463         MOV.W   R2,[R7]
004450 E9202710       16464         MULU.W  R2,#02710H
004454 0902           16465         ADD.W   R0,R2
004456 B910           16466         MOVS.W  R1,#00H
004458 964842rr       16467         MOV.B   ES,#SEG( _Calibration+106 )
00445C 9928rrrr       16468         MOV.W   R2,#SOF( _Calibration+106 )
004460 8B0A           16469         MOV.W   [R2+],R0
004462 8A1A           16470         MOV.W   [R2],R1
                      16471 ; rs232cmd.c 4539                                               
                      16472 ; rs232cmd.c 4540                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004464 9918rrrr       16474         MOV.W   R1,#SEG( _Calibration )
004468 9908rrrr       16475         MOV.W   R0,#SOF( _Calibration )
00446C 964842rr       16476         MOV.B   ES,#SEG( _CalibrationPtr )
004470 9928rrrr       16477         MOV.W   R2,#SOF( _CalibrationPtr )
004474 8A22           16478         MOV.W   R2,[R2]
004476 993800E2       16479         MOV.W   R3,#0E2H
                      16480         CALL    _NV_Store
00447A C4rrrrrr       +16480 ;       FCALL   _NV_Store
                      16481 ; rs232cmd.c 4541                                               }
                      16482 ; rs232cmd.c 4542                                       }                               
                      16483 ; rs232cmd.c 4543                               }
                      16484 ; rs232cmd.c 4544                       }
                      16485 ; rs232cmd.c 4545               }
00447E                16487 _1162:
                      16488 ; rs232cmd.c 4546       }
00447E 9970001A       16490         ADD.W   R7,#01AH
004482 2F30           16492         POP.W   R4, R5
004484 D680           16494         RET
                      16496 ; rs232cmd.c 4547       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 254

ADDR   CODE            LINE SOURCELINE
                      16497 ; rs232cmd.c 4548       /************************************************************************
                            **/
                      16498 ; rs232cmd.c 4549       /* FactGenlockGenVersion                                                 
                                                                                                                        RS232
                            CMD.C */
                      16499 ; rs232cmd.c 4550       
                      16500 ; rs232cmd.c 4551       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
                      16501 ; rs232cmd.c 4552       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      16502 ; rs232cmd.c 4553       
                      16503 ; rs232cmd.c 4554       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      16504 ; rs232cmd.c 4555       
                      16505 ; rs232cmd.c 4556       
                      16506 ; rs232cmd.c 4557       
                      16507 ; rs232cmd.c 4558       /************************************************************************
                            **/
                      16508 ; rs232cmd.c 4559       void FactGenlockGenVersion( void)
                      16509 ; rs232cmd.c 4560       {
                      16510         ALIGN   1
                      16512         PUBLIC  _FactGenlockGenVersion
004486                16513 _FactGenlockGenVersion:
004486 0F30           16517         PUSH.W  R4, R5
004488 9972000A       16519         SUB.W   R7,#0AH
                      16523 ; rs232cmd.c 4561               char result[10];
                      16524 ; rs232cmd.c 4562       
                      16525 ; rs232cmd.c 4563               if ( CmdExecute && !SCPIError)
00448C 964842rr       16527         MOV.B   ES,#SEG( _CmdExecute )
004490 9908rrrr       16528         MOV.W   R0,#SOF( _CmdExecute )
004494 8200           16529         MOV.B   R0L,[R0]
004496 F337           16530         BEQ     _1172
004498 964842rr       16531         MOV.B   ES,#SEG( _SCPIError )
00449C 9908rrrr       16532         MOV.W   R0,#SOF( _SCPIError )
0044A0 8A00           16533         MOV.W   R0,[R0]
0044A2 F231           16534         BNE     _1172
                      16535 ; rs232cmd.c 4564               {
                      16536 ; rs232cmd.c 4565                       if ( CmdRequest)
0044A4 964842rr       16538         MOV.B   ES,#SEG( _CmdRequest )
0044A8 9908rrrr       16539         MOV.W   R0,#SOF( _CmdRequest )
0044AC 8200           16540         MOV.B   R0L,[R0]
0044AE F326           16541         BEQ     _1167
                      16542 ; rs232cmd.c 4566                       {
                      16543 ; rs232cmd.c 4567                               if ( ParCnt)
0044B0 964842rr       16545         MOV.B   ES,#SEG( _ParCnt )
0044B4 9908rrrr       16546         MOV.W   R0,#SOF( _ParCnt )
0044B8 8200           16547         MOV.B   R0L,[R0]
0044BA F306           16548         BEQ     _1165
                      16549 ; rs232cmd.c 4568                                       SCPIError = SyntaxErr;
0044BC 964842rr       16551         MOV.B   ES,#SEG( _SCPIError )
0044C0 9908rrrr       16552         MOV.W   R0,#SOF( _SCPIError )
0044C4 BA03           16553         MOV.W   [R0],#03H
0044C6 FE1F           16554         BR      _1172
0044C6 FE1F           16554         BR      _1172
0044C8                16555 _1165:
                      16556 ; rs232cmd.c 4569                               else
                      16557 ; rs232cmd.c 4570                               {
                      16558 ; rs232cmd.c 4571                                       if ( GenlockVersion( result) == OK)
0044C8 91A8rr         16560         MOV.B   R5L,#SEG( __lc_bs )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 255

ADDR   CODE            LINE SOURCELINE
0044CB 71BB           16561         XOR.B   R5H,R5H
0044CD 8947           16562         MOV.W   R4,R7
0044CF 8915           16563         MOV.W   R1,R5
0044D1 8904           16564         MOV.W   R0,R4
                      16565         CALL    _GenlockVersion
0044D3 C4rrrrrr       +16565 ;       FCALL   _GenlockVersion
0044D7 9904FFFF       16566         CMP.W   R0,#0FFFFH
0044DB F209           16567         BNE     _1166
                      16568 ; rs232cmd.c 4572                                       {
                      16569 ; rs232cmd.c 4573                                               rs232puts( result);
0044DD 8915           16571         MOV.W   R1,R5
0044DF 8904           16572         MOV.W   R0,R4
                      16573         CALL    _rs232puts
0044E1 C4rrrrrr       +16573 ;       FCALL   _rs232puts
                      16574 ; rs232cmd.c 4574                                               rs232putchar( '\n');
0044E5 91080A         16576         MOV.B   R0L,#0AH
                      16577         CALL    _rs232putchar
0044E8 C4rrrrrr       +16577 ;       FCALL   _rs232putchar
                      16578 ; rs232cmd.c 4575                                       }
0044EC FE0C           16580         BR      _1172
0044EC FE0C           16580         BR      _1172
0044EE                16581 _1166:
                      16582 ; rs232cmd.c 4576                                       else
                      16583 ; rs232cmd.c 4577                                               SCPIError = ExecErr;             
                                   
0044EE 964842rr       16585         MOV.B   ES,#SEG( _SCPIError )
0044F2 9908rrrr       16586         MOV.W   R0,#SOF( _SCPIError )
0044F6 9A08001D       16587         MOV.W   [R0],#01DH
                      16588 ; rs232cmd.c 4578                               }
                      16589 ; rs232cmd.c 4579                       }
0044FA FE05           16591         BR      _1172
0044FA FE05           16591         BR      _1172
0044FC                16592 _1167:
                      16593 ; rs232cmd.c 4580                       else
                      16594 ; rs232cmd.c 4581                               SCPIError = SyntaxErr;
0044FC 964842rr       16596         MOV.B   ES,#SEG( _SCPIError )
004500 9908rrrr       16597         MOV.W   R0,#SOF( _SCPIError )
004504 BA03           16598         MOV.W   [R0],#03H
                      16599 ; rs232cmd.c 4582               }
004506                16601 _1172:
                      16602 ; rs232cmd.c 4583       }
004506 9970000A       16604         ADD.W   R7,#0AH
00450A 2F30           16606         POP.W   R4, R5
00450C D680           16608         RET
                      16610 ; rs232cmd.c 4584       
                      16611 ; rs232cmd.c 4585       /************************************************************************
                            **/
                      16612 ; rs232cmd.c 4586       /* FactGenlockGenFRefDate                                                
                                                                                                                        RS232
                            CMD.C */
                      16613 ; rs232cmd.c 4587       
                      16614 ; rs232cmd.c 4588       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
                      16615 ; rs232cmd.c 4589       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      16616 ; rs232cmd.c 4590       
                      16617 ; rs232cmd.c 4591       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      16618 ; rs232cmd.c 4592       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 256

ADDR   CODE            LINE SOURCELINE
                      16619 ; rs232cmd.c 4593       
                      16620 ; rs232cmd.c 4594       
                      16621 ; rs232cmd.c 4595       /************************************************************************
                            **/
                      16622 ; rs232cmd.c 4596       void FactGenlockGenFRefDate( void)
                      16623 ; rs232cmd.c 4597       {
                      16624         ALIGN   1
                      16626         PUBLIC  _FactGenlockGenFRefDate
00450E                16627 _FactGenlockGenFRefDate:
00450E 0F30           16631         PUSH.W  R4, R5
004510 9972001A       16633         SUB.W   R7,#01AH
                      16639 ; rs232cmd.c 4598               UI year, month, day;
                      16640 ; rs232cmd.c 4599               char buffer[20];
                      16641 ; rs232cmd.c 4600       
                      16642 ; rs232cmd.c 4601               if ( CmdExecute && !SCPIError)
004514 964842rr       16644         MOV.B   ES,#SEG( _CmdExecute )
004518 9908rrrr       16645         MOV.W   R0,#SOF( _CmdExecute )
00451C 8200           16646         MOV.B   R0L,[R0]
                      16647         BEQ     _1187
00451E F202           +16647 ;       BNE     _LG_1130
004520 D500C7         +16647 ;       JMP.L   _1187
004524 D500C700       +16647 ;       JMP.L   _1187
004524                +16647 _LG_1130:
004524 964842rr       16648         MOV.B   ES,#SEG( _SCPIError )
004528 9908rrrr       16649         MOV.W   R0,#SOF( _SCPIError )
00452C 8A00           16650         MOV.W   R0,[R0]
                      16651         BNE     _1187
00452E F302           +16651 ;       BEQ     _LG_1132
004530 D500BF         +16651 ;       JMP.L   _1187
004534 D500BF00       +16651 ;       JMP.L   _1187
004534                +16651 _LG_1132:
                      16652 ; rs232cmd.c 4602               {
                      16653 ; rs232cmd.c 4603                       if ( CmdRequest)
004534 964842rr       16655         MOV.B   ES,#SEG( _CmdRequest )
004538 9908rrrr       16656         MOV.W   R0,#SOF( _CmdRequest )
00453C 8200           16657         MOV.B   R0L,[R0]
00453E F35A           16658         BEQ     _1177
                      16659 ; rs232cmd.c 4604                       {
                      16660 ; rs232cmd.c 4605                               if ( ParCnt)
004540 964842rr       16662         MOV.B   ES,#SEG( _ParCnt )
004544 9908rrrr       16663         MOV.W   R0,#SOF( _ParCnt )
004548 8200           16664         MOV.B   R0L,[R0]
00454A F307           16665         BEQ     _1176
                      16666 ; rs232cmd.c 4606                                       SCPIError = SyntaxErr;
00454C 964842rr       16668         MOV.B   ES,#SEG( _SCPIError )
004550 9908rrrr       16669         MOV.W   R0,#SOF( _SCPIError )
004554 BA03           16670         MOV.W   [R0],#03H
                      16671         BR      _1187
004556 D500AC         +16671         JMP.L   _1187
004556 D500AC00       +16671         JMP.L   _1187
00455A                16672 _1176:
                      16673 ; rs232cmd.c 4607                               else
                      16674 ; rs232cmd.c 4608                               {
                      16675 ; rs232cmd.c 4609                                       day = Calibration.GenlockCalibration.DACF
                            actDate % 100;
00455A 964842rr       16677         MOV.B   ES,#SEG( _Calibration+110 )
00455E 9918rrrr       16678         MOV.W   R1,#SOF( _Calibration+110 )
004562 8B01           16679         MOV.W   R0,[R1+]
004564 8A11           16680         MOV.W   R1,[R1]
004566 B930           16681         MOV.W   R3,#00H
004568 99280064       16682         MOV.W   R2,#064H
00456C 964842rr       16683         MOV.B   ES,#SEG( _Calibration+110 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 257

ADDR   CODE            LINE SOURCELINE
004570 9948rrrr       16684         MOV.W   R4,#SOF( _Calibration+110 )
004574 8B0C           16685         MOV.W   [R4+],R0
004576 8A1C           16686         MOV.W   [R4],R1
004578 C4rrrrrr       16687         FCALL   __UMODL
00457C 8C0F04         16688         MOV.W   [R7+4],R0
00457F 964842rr       16689         MOV.B   ES,#SEG( _Calibration+110 )
004583 9918rrrr       16690         MOV.W   R1,#SOF( _Calibration+110 )
004587 8B01           16691         MOV.W   R0,[R1+]
004589 8A11           16692         MOV.W   R1,[R1]
                      16693 ; rs232cmd.c 4610                                       month = ( Calibration.GenlockCalibration.
                            DACFactDate / 100) % 100;
00458B B930           16695         MOV.W   R3,#00H
00458D 99280064       16696         MOV.W   R2,#064H
004591 8953           16697         MOV.W   R5,R3
004593 8942           16698         MOV.W   R4,R2
004595 C4rrrrrr       16699         FCALL   __UDIVL
004599 8935           16700         MOV.W   R3,R5
00459B 8924           16701         MOV.W   R2,R4
00459D C4rrrrrr       16702         FCALL   __UMODL
0045A1 8C0F02         16703         MOV.W   [R7+2],R0
                      16704 ; rs232cmd.c 4611                                       year = ( Calibration.GenlockCalibration.D
                            ACFactDate / 10000);
0045A4 B930           16706         MOV.W   R3,#00H
0045A6 99282710       16707         MOV.W   R2,#02710H
0045AA 964842rr       16708         MOV.B   ES,#SEG( _Calibration+110 )
0045AE 9918rrrr       16709         MOV.W   R1,#SOF( _Calibration+110 )
0045B2 8B01           16710         MOV.W   R0,[R1+]
0045B4 8A11           16711         MOV.W   R1,[R1]
0045B6 C4rrrrrr       16712         FCALL   __UDIVL
0045BA 8A0F           16713         MOV.W   [R7],R0
                      16714 ; rs232cmd.c 4612       
                      16715 ; rs232cmd.c 4613                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
0045BC 91A8rr         16717         MOV.B   R5L,#SEG( __lc_bs )
0045BF 71BB           16718         XOR.B   R5H,R5H
0045C1 404706         16719         LEA     R4,R7+6
0045C4 8C0704         16720         MOV.W   R0,[R7+4]
0045C7 0F01           16721         PUSH.W  R0
0045C9 8C0704         16723         MOV.W   R0,[R7+4]
0045CC 0F01           16724         PUSH.W  R0
0045CE 8C0704         16726         MOV.W   R0,[R7+4]
0045D1 0F01           16727         PUSH.W  R0
0045D3 9918rrrr       16729         MOV.W   R1,#SEG( _1174 )
0045D7 9908rrrr       16730         MOV.W   R0,#SOF( _1174 )
0045DB 0F03           16731         PUSH.W  R0, R1
0045DD 8915           16733         MOV.W   R1,R5
0045DF 8904           16734         MOV.W   R0,R4
                      16735         CALL    _sprintf
0045E1 C4rrrrrr       +16735 ;       FCALL   _sprintf
0045E5 9970000A       16736         ADD.W   R7,#0AH
                      16738 ; rs232cmd.c 4614       
                      16739 ; rs232cmd.c 4615                                       rs232puts( buffer);
0045E9 8915           16741         MOV.W   R1,R5
0045EB 8904           16742         MOV.W   R0,R4
                      16743         CALL    _rs232puts
0045ED C4rrrrrr       +16743 ;       FCALL   _rs232puts
                      16744 ; rs232cmd.c 4616                               }
                      16745 ; rs232cmd.c 4617                       }
0045F1 FE5F           16747         BR      _1187
0045F1 FE5F00         16747         BR      _1187
0045F4                16748 _1177:
                      16749 ; rs232cmd.c 4618                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 258

ADDR   CODE            LINE SOURCELINE
                      16750 ; rs232cmd.c 4619                       {
                      16751 ; rs232cmd.c 4620                               if ( !PasswordProtected)
0045F4 964842rr       16753         MOV.B   ES,#SEG( _PasswordProtected )
0045F8 9908rrrr       16754         MOV.W   R0,#SOF( _PasswordProtected )
0045FC 8A00           16755         MOV.W   R0,[R0]
0045FE F258           16756         BNE     _1187
                      16757 ; rs232cmd.c 4621                               {
                      16758 ; rs232cmd.c 4622                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
004600 964842rr       16760         MOV.B   ES,#SEG( _ParCnt )
004604 9908rrrr       16761         MOV.W   R0,#SOF( _ParCnt )
004608 8200           16762         MOV.B   R0L,[R0]
00460A 910403         16763         CMP.B   R0L,#03H
00460D F21F           16764         BNE     _1178
00460F 9168rr         16765         MOV.B   R3L,#SEG( __lc_bs )
004612 7177           16766         XOR.B   R3H,R3H
004614 8927           16767         MOV.W   R2,R7
004616 91A8rr         16768         MOV.B   R5L,#SEG( __lc_bs )
004619 71BB           16769         XOR.B   R5H,R5H
00461B 404702         16770         LEA     R4,R7+2
00461E 9128rr         16771         MOV.B   R1L,#SEG( __lc_bs )
004621 7133           16772         XOR.B   R1H,R1H
004623 400704         16773         LEA     R0,R7+4
004626 0F03           16774         PUSH.W  R0, R1
004628 0F30           16776         PUSH.W  R4, R5
00462A 0F0C           16778         PUSH.W  R2, R3
00462C 9938rrrr       16780         MOV.W   R3,#SEG( _1175 )
004630 9928rrrr       16781         MOV.W   R2,#SOF( _1175 )
004634 0F0C           16782         PUSH.W  R2, R3
004636 9918rrrr       16784         MOV.W   R1,#SEG( _Cmd )
00463A 9908rrrr       16785         MOV.W   R0,#SOF( _Cmd )
                      16786         CALL    _sscanf
00463E C4rrrrrr       +16786 ;       FCALL   _sscanf
004642 99700010       16787         ADD.W   R7,#010H
004646 99040003       16789         CMP.W   R0,#03H
00464A F306           16790         BEQ     _1179
00464A F306           16790         BEQ     _1179
00464C                16791 _1178:
                      16792 ; rs232cmd.c 4623                                               SCPIError = SyntaxErr;
00464C 964842rr       16794         MOV.B   ES,#SEG( _SCPIError )
004650 9908rrrr       16795         MOV.W   R0,#SOF( _SCPIError )
004654 BA03           16796         MOV.W   [R0],#03H
004656 FE2C           16797         BR      _1187
004656 FE2C           16797         BR      _1187
004658                16798 _1179:
                      16799 ; rs232cmd.c 4624                                       else
                      16800 ; rs232cmd.c 4625                                       {
                      16801 ; rs232cmd.c 4626                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004658 8A07           16803         MOV.W   R0,[R7]
00465A 8C1702         16804         MOV.W   R1,[R7+2]
00465D 8C2704         16805         MOV.W   R2,[R7+4]
                      16806         CALL    _ValidateDate
004660 C4rrrrrr       +16806 ;       FCALL   _ValidateDate
004664 6900           16807         OR.W    R0,R0
004666 F207           16808         BNE     _1180
                      16809 ; rs232cmd.c 4627                                                       SCPIError = ExecErr;
004668 964842rr       16811         MOV.B   ES,#SEG( _SCPIError )
00466C 9908rrrr       16812         MOV.W   R0,#SOF( _SCPIError )
004670 9A08001D       16813         MOV.W   [R0],#01DH
004674 FE1D           16814         BR      _1187
004674 FE1D           16814         BR      _1187
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 259

ADDR   CODE            LINE SOURCELINE
004676                16815 _1180:
                      16816 ; rs232cmd.c 4628                                               else
                      16817 ; rs232cmd.c 4629                                               {
                      16818 ; rs232cmd.c 4630                                                       Calibration.GenlockCalibr
                            ation.DACFactDate = day + 100*month + 10000*year;
004676 8C0702         16820         MOV.W   R0,[R7+2]
004679 E9000064       16821         MULU.W  R0,#064H
00467D 0C0704         16822         ADD.W   R0,[R7+4]
004680 8A27           16823         MOV.W   R2,[R7]
004682 E9202710       16824         MULU.W  R2,#02710H
004686 0902           16825         ADD.W   R0,R2
004688 B910           16826         MOVS.W  R1,#00H
00468A 964842rr       16827         MOV.B   ES,#SEG( _Calibration+110 )
00468E 9928rrrr       16828         MOV.W   R2,#SOF( _Calibration+110 )
004692 8B0A           16829         MOV.W   [R2+],R0
004694 8A1A           16830         MOV.W   [R2],R1
                      16831 ; rs232cmd.c 4631                                               
                      16832 ; rs232cmd.c 4632                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004696 9918rrrr       16834         MOV.W   R1,#SEG( _Calibration )
00469A 9908rrrr       16835         MOV.W   R0,#SOF( _Calibration )
00469E 964842rr       16836         MOV.B   ES,#SEG( _CalibrationPtr )
0046A2 9928rrrr       16837         MOV.W   R2,#SOF( _CalibrationPtr )
0046A6 8A22           16838         MOV.W   R2,[R2]
0046A8 993800E2       16839         MOV.W   R3,#0E2H
                      16840         CALL    _NV_Store
0046AC C4rrrrrr       +16840 ;       FCALL   _NV_Store
                      16841 ; rs232cmd.c 4633                                               }
                      16842 ; rs232cmd.c 4634                                       }                               
                      16843 ; rs232cmd.c 4635                               }
                      16844 ; rs232cmd.c 4636                       }
                      16845 ; rs232cmd.c 4637               }
0046B0                16847 _1187:
                      16848 ; rs232cmd.c 4638       }
0046B0 9970001A       16850         ADD.W   R7,#01AH
0046B4 2F30           16852         POP.W   R4, R5
0046B6 D680           16854         RET
                      16856 ; rs232cmd.c 4639       
                      16857 ; rs232cmd.c 4640       /************************************************************************
                            **/
                      16858 ; rs232cmd.c 4641       /* FactGenlockGenFRefDAC                                                 
                                                                                                                        RS232
                            CMD.C */
                      16859 ; rs232cmd.c 4642       
                      16860 ; rs232cmd.c 4643       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
                      16861 ; rs232cmd.c 4644       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      16862 ; rs232cmd.c 4645       
                      16863 ; rs232cmd.c 4646       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      16864 ; rs232cmd.c 4647       
                      16865 ; rs232cmd.c 4648       
                      16866 ; rs232cmd.c 4649       
                      16867 ; rs232cmd.c 4650       /************************************************************************
                            **/
                      16868 ; rs232cmd.c 4651       void FactGenlockGenFRefDAC( void)
                      16869 ; rs232cmd.c 4652         {
                      16870         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 260

ADDR   CODE            LINE SOURCELINE
                      16872         PUBLIC  _FactGenlockGenFRefDAC
0046B8                16873 _FactGenlockGenFRefDAC:
0046B8 0F30           16877         PUSH.W  R4, R5
0046BA 99720016       16879         SUB.W   R7,#016H
                      16883 ; rs232cmd.c 4653         char buffer[20];
                      16884 ; rs232cmd.c 4654         UI DACValue;
                      16885 ; rs232cmd.c 4655       
                      16886 ; rs232cmd.c 4656         if ( CmdExecute && !SCPIError)
0046BE 964842rr       16888         MOV.B   ES,#SEG( _CmdExecute )
0046C2 9908rrrr       16889         MOV.W   R0,#SOF( _CmdExecute )
0046C6 8200           16890         MOV.B   R0L,[R0]
0046C8 F36E           16891         BEQ     _1200
0046CA 964842rr       16892         MOV.B   ES,#SEG( _SCPIError )
0046CE 9908rrrr       16893         MOV.W   R0,#SOF( _SCPIError )
0046D2 8A00           16894         MOV.W   R0,[R0]
0046D4 F268           16895         BNE     _1200
                      16896 ; rs232cmd.c 4657           {
                      16897 ; rs232cmd.c 4658           if ( CmdRequest)
0046D6 964842rr       16899         MOV.B   ES,#SEG( _CmdRequest )
0046DA 9908rrrr       16900         MOV.W   R0,#SOF( _CmdRequest )
0046DE 8200           16901         MOV.B   R0L,[R0]
0046E0 F325           16902         BEQ     _1192
                      16903 ; rs232cmd.c 4659             {
                      16904 ; rs232cmd.c 4660             if ( ParCnt)
0046E2 964842rr       16906         MOV.B   ES,#SEG( _ParCnt )
0046E6 9908rrrr       16907         MOV.W   R0,#SOF( _ParCnt )
0046EA 8200           16908         MOV.B   R0L,[R0]
0046EC F306           16909         BEQ     _1191
                      16910 ; rs232cmd.c 4661                     SCPIError = SyntaxErr;
0046EE 964842rr       16912         MOV.B   ES,#SEG( _SCPIError )
0046F2 9908rrrr       16913         MOV.W   R0,#SOF( _SCPIError )
0046F6 BA03           16914         MOV.W   [R0],#03H
0046F8 FE56           16915         BR      _1200
0046F8 FE56           16915         BR      _1200
0046FA                16916 _1191:
                      16917 ; rs232cmd.c 4662             else
                      16918 ; rs232cmd.c 4663               {
                      16919 ; rs232cmd.c 4664               sprintf( buffer, "%u\n", Calibration.GenlockCalibration.DACFactVa
                            lue);
0046FA 91A8rr         16921         MOV.B   R5L,#SEG( __lc_bs )
0046FD 71BB           16922         XOR.B   R5H,R5H
0046FF 8947           16923         MOV.W   R4,R7
004701 964842rr       16924         MOV.B   ES,#SEG( _Calibration+118 )
004705 9908rrrr       16925         MOV.W   R0,#SOF( _Calibration+118 )
004709 8A00           16926         MOV.W   R0,[R0]
00470B 0F01           16927         PUSH.W  R0
00470D 9918rrrr       16929         MOV.W   R1,#SEG( _1012 )
004711 9908rrrr       16930         MOV.W   R0,#SOF( _1012 )
004715 0F03           16931         PUSH.W  R0, R1
004717 8915           16933         MOV.W   R1,R5
004719 8904           16934         MOV.W   R0,R4
                      16935         CALL    _sprintf
00471B C4rrrrrr       +16935 ;       FCALL   _sprintf
00471F A976           16936         ADDS.W  R7,#06H
                      16938 ; rs232cmd.c 4665               rs232puts( buffer);
004721 8915           16940         MOV.W   R1,R5
004723 8904           16941         MOV.W   R0,R4
                      16942         CALL    _rs232puts
004725 C4rrrrrr       +16942 ;       FCALL   _rs232puts
                      16943 ; rs232cmd.c 4666               }
                      16944 ; rs232cmd.c 4667             }
004729 FE3E           16946         BR      _1200
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 261

ADDR   CODE            LINE SOURCELINE
004729 FE3E00         16946         BR      _1200
00472C                16947 _1192:
                      16948 ; rs232cmd.c 4668           else
                      16949 ; rs232cmd.c 4669             {
                      16950 ; rs232cmd.c 4670             if ( !PasswordProtected)
00472C 964842rr       16952         MOV.B   ES,#SEG( _PasswordProtected )
004730 9908rrrr       16953         MOV.W   R0,#SOF( _PasswordProtected )
004734 8A00           16954         MOV.W   R0,[R0]
004736 F237           16955         BNE     _1200
                      16956 ; rs232cmd.c 4671               {
                      16957 ; rs232cmd.c 4672               if (( ParCnt != 1) || (( sscanf( Cmd, "%u", &DACValue)) != 1))
004738 964842rr       16959         MOV.B   ES,#SEG( _ParCnt )
00473C 9908rrrr       16960         MOV.W   R0,#SOF( _ParCnt )
004740 8200           16961         MOV.B   R0L,[R0]
004742 910401         16962         CMP.B   R0L,#01H
004745 F216           16963         BNE     _1193
004747 9918rrrr       16964         MOV.W   R1,#SEG( _Cmd )
00474B 9908rrrr       16965         MOV.W   R0,#SOF( _Cmd )
00474F 9168rr         16966         MOV.B   R3L,#SEG( __lc_bs )
004752 7177           16967         XOR.B   R3H,R3H
004754 402714         16968         LEA     R2,R7+20
004757 0F0C           16969         PUSH.W  R2, R3
004759 9938rrrr       16971         MOV.W   R3,#SEG( _1190 )
00475D 9928rrrr       16972         MOV.W   R2,#SOF( _1190 )
004761 0F0C           16973         PUSH.W  R2, R3
                      16975         CALL    _sscanf
004763 C4rrrrrr       +16975 ;       FCALL   _sscanf
004767 99700008       16976         ADD.W   R7,#08H
00476B 99040001       16978         CMP.W   R0,#01H
00476F F307           16979         BEQ     _1194
00476F F30700         16979         BEQ     _1194
004772                16980 _1193:
                      16981 ; rs232cmd.c 4673                 SCPIError = SyntaxErr;
004772 964842rr       16983         MOV.B   ES,#SEG( _SCPIError )
004776 9908rrrr       16984         MOV.W   R0,#SOF( _SCPIError )
00477A BA03           16985         MOV.W   [R0],#03H
00477C FE14           16986         BR      _1200
00477C FE14           16986         BR      _1200
00477E                16987 _1194:
                      16988 ; rs232cmd.c 4674               else
                      16989 ; rs232cmd.c 4675                 {
                      16990 ; rs232cmd.c 4676                 Calibration.GenlockCalibration.DACFactValue = DACValue;
00477E 8C0714         16992         MOV.W   R0,[R7+20]
004781 964842rr       16993         MOV.B   ES,#SEG( _Calibration+118 )
004785 9918rrrr       16994         MOV.W   R1,#SOF( _Calibration+118 )
004789 8A09           16995         MOV.W   [R1],R0
                      16996 ; rs232cmd.c 4677                                 
                      16997 ; rs232cmd.c 4678                 NV_Store( &Calibration, CalibrationPtr, sizeof( Calibration));
00478B 9918rrrr       16999         MOV.W   R1,#SEG( _Calibration )
00478F 9908rrrr       17000         MOV.W   R0,#SOF( _Calibration )
004793 964842rr       17001         MOV.B   ES,#SEG( _CalibrationPtr )
004797 9928rrrr       17002         MOV.W   R2,#SOF( _CalibrationPtr )
00479B 8A22           17003         MOV.W   R2,[R2]
00479D 993800E2       17004         MOV.W   R3,#0E2H
                      17005         CALL    _NV_Store
0047A1 C4rrrrrr       +17005 ;       FCALL   _NV_Store
                      17006 ; rs232cmd.c 4679                 }
                      17007 ; rs232cmd.c 4680               }
                      17008 ; rs232cmd.c 4681             }
                      17009 ; rs232cmd.c 4682           }
0047A6                17011 _1200:
                      17012 ; rs232cmd.c 4683         }
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 262

ADDR   CODE            LINE SOURCELINE
0047A6 99700016       17014         ADD.W   R7,#016H
0047AA 2F30           17016         POP.W   R4, R5
0047AC D680           17018         RET
                      17020 ; rs232cmd.c 4684       /* This function implements command:
                      17021 ; rs232cmd.c 4685          :FACT:GENL:DOFFSET <UI>
                      17022 ; rs232cmd.c 4686          :FACT:GENL:DOFFSET?
                      17023 ; rs232cmd.c 4687          which has the purpose of getting V74 DAC offset compensation value
                      17024 ; rs232cmd.c 4688          and storing it in NOVRAM.  This value is used as signed int, but is 
                      17025 ; rs232cmd.c 4689          input and output here as unsigned int.
                      17026 ; rs232cmd.c 4690       */   
                      17027 ; rs232cmd.c 4691       void FactGenlockGenUOffDAC( void) // JK
                      17028 ; rs232cmd.c 4692         {
                      17029         ALIGN   1
                      17031         PUBLIC  _FactGenlockGenUOffDAC
0047AE                17032 _FactGenlockGenUOffDAC:
0047AE 0F30           17036         PUSH.W  R4, R5
0047B0 99720016       17038         SUB.W   R7,#016H
                      17042 ; rs232cmd.c 4693         char buffer[20];
                      17043 ; rs232cmd.c 4694         UI DACValue;
                      17044 ; rs232cmd.c 4695       
                      17045 ; rs232cmd.c 4696         if ( CmdExecute && !SCPIError)
0047B4 964842rr       17047         MOV.B   ES,#SEG( _CmdExecute )
0047B8 9908rrrr       17048         MOV.W   R0,#SOF( _CmdExecute )
0047BC 8200           17049         MOV.B   R0L,[R0]
0047BE F368           17050         BEQ     _1211
0047C0 964842rr       17051         MOV.B   ES,#SEG( _SCPIError )
0047C4 9908rrrr       17052         MOV.W   R0,#SOF( _SCPIError )
0047C8 8A00           17053         MOV.W   R0,[R0]
0047CA F262           17054         BNE     _1211
                      17055 ; rs232cmd.c 4697           {
                      17056 ; rs232cmd.c 4698           if ( CmdRequest)
0047CC 964842rr       17058         MOV.B   ES,#SEG( _CmdRequest )
0047D0 9908rrrr       17059         MOV.W   R0,#SOF( _CmdRequest )
0047D4 8200           17060         MOV.B   R0L,[R0]
0047D6 F325           17061         BEQ     _1204
                      17062 ; rs232cmd.c 4699             {
                      17063 ; rs232cmd.c 4700             if ( ParCnt)
0047D8 964842rr       17065         MOV.B   ES,#SEG( _ParCnt )
0047DC 9908rrrr       17066         MOV.W   R0,#SOF( _ParCnt )
0047E0 8200           17067         MOV.B   R0L,[R0]
0047E2 F306           17068         BEQ     _1203
                      17069 ; rs232cmd.c 4701               SCPIError = SyntaxErr;
0047E4 964842rr       17071         MOV.B   ES,#SEG( _SCPIError )
0047E8 9908rrrr       17072         MOV.W   R0,#SOF( _SCPIError )
0047EC BA03           17073         MOV.W   [R0],#03H
0047EE FE50           17074         BR      _1211
0047EE FE50           17074         BR      _1211
0047F0                17075 _1203:
                      17076 ; rs232cmd.c 4702             else
                      17077 ; rs232cmd.c 4703               {
                      17078 ; rs232cmd.c 4704               sprintf( buffer, "%u\n", Calibration.GenlockCalibration.DACOffset
                            );
0047F0 91A8rr         17080         MOV.B   R5L,#SEG( __lc_bs )
0047F3 71BB           17081         XOR.B   R5H,R5H
0047F5 8947           17082         MOV.W   R4,R7
0047F7 964842rr       17083         MOV.B   ES,#SEG( _Calibration+138 )
0047FB 9908rrrr       17084         MOV.W   R0,#SOF( _Calibration+138 )
0047FF 8A00           17085         MOV.W   R0,[R0]
004801 0F01           17086         PUSH.W  R0
004803 9918rrrr       17088         MOV.W   R1,#SEG( _1012 )
004807 9908rrrr       17089         MOV.W   R0,#SOF( _1012 )
00480B 0F03           17090         PUSH.W  R0, R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 263

ADDR   CODE            LINE SOURCELINE
00480D 8915           17092         MOV.W   R1,R5
00480F 8904           17093         MOV.W   R0,R4
                      17094         CALL    _sprintf
004811 C4rrrrrr       +17094 ;       FCALL   _sprintf
004815 A976           17095         ADDS.W  R7,#06H
                      17097 ; rs232cmd.c 4705               rs232puts( buffer);
004817 8915           17099         MOV.W   R1,R5
004819 8904           17100         MOV.W   R0,R4
                      17101         CALL    _rs232puts
00481B C4rrrrrr       +17101 ;       FCALL   _rs232puts
                      17102 ; rs232cmd.c 4706               }
                      17103 ; rs232cmd.c 4707             }
00481F FE38           17105         BR      _1211
00481F FE3800         17105         BR      _1211
004822                17106 _1204:
                      17107 ; rs232cmd.c 4708           else
                      17108 ; rs232cmd.c 4709             {
                      17109 ; rs232cmd.c 4710             if (( ParCnt != 1) || (( sscanf( Cmd, "%u", &DACValue)) != 1))
004822 964842rr       17111         MOV.B   ES,#SEG( _ParCnt )
004826 9908rrrr       17112         MOV.W   R0,#SOF( _ParCnt )
00482A 8200           17113         MOV.B   R0L,[R0]
00482C 910401         17114         CMP.B   R0L,#01H
00482F F216           17115         BNE     _1205
004831 9918rrrr       17116         MOV.W   R1,#SEG( _Cmd )
004835 9908rrrr       17117         MOV.W   R0,#SOF( _Cmd )
004839 9168rr         17118         MOV.B   R3L,#SEG( __lc_bs )
00483C 7177           17119         XOR.B   R3H,R3H
00483E 402714         17120         LEA     R2,R7+20
004841 0F0C           17121         PUSH.W  R2, R3
004843 9938rrrr       17123         MOV.W   R3,#SEG( _1190 )
004847 9928rrrr       17124         MOV.W   R2,#SOF( _1190 )
00484B 0F0C           17125         PUSH.W  R2, R3
                      17127         CALL    _sscanf
00484D C4rrrrrr       +17127 ;       FCALL   _sscanf
004851 99700008       17128         ADD.W   R7,#08H
004855 99040001       17130         CMP.W   R0,#01H
004859 F307           17131         BEQ     _1206
004859 F30700         17131         BEQ     _1206
00485C                17132 _1205:
                      17133 ; rs232cmd.c 4711               SCPIError = SyntaxErr;
00485C 964842rr       17135         MOV.B   ES,#SEG( _SCPIError )
004860 9908rrrr       17136         MOV.W   R0,#SOF( _SCPIError )
004864 BA03           17137         MOV.W   [R0],#03H
004866 FE14           17138         BR      _1211
004866 FE14           17138         BR      _1211
004868                17139 _1206:
                      17140 ; rs232cmd.c 4712             else
                      17141 ; rs232cmd.c 4713               {
                      17142 ; rs232cmd.c 4714               Calibration.GenlockCalibration.DACOffset = DACValue;
004868 8C0714         17144         MOV.W   R0,[R7+20]
00486B 964842rr       17145         MOV.B   ES,#SEG( _Calibration+138 )
00486F 9918rrrr       17146         MOV.W   R1,#SOF( _Calibration+138 )
004873 8A09           17147         MOV.W   [R1],R0
                      17148 ; rs232cmd.c 4715               NV_Store( &Calibration, CalibrationPtr, sizeof( Calibration));
004875 9918rrrr       17150         MOV.W   R1,#SEG( _Calibration )
004879 9908rrrr       17151         MOV.W   R0,#SOF( _Calibration )
00487D 964842rr       17152         MOV.B   ES,#SEG( _CalibrationPtr )
004881 9928rrrr       17153         MOV.W   R2,#SOF( _CalibrationPtr )
004885 8A22           17154         MOV.W   R2,[R2]
004887 993800E2       17155         MOV.W   R3,#0E2H
                      17156         CALL    _NV_Store
00488B C4rrrrrr       +17156 ;       FCALL   _NV_Store
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 264

ADDR   CODE            LINE SOURCELINE
                      17157 ; rs232cmd.c 4716               }
                      17158 ; rs232cmd.c 4717             }
                      17159 ; rs232cmd.c 4718           }
004890                17161 _1211:
                      17162 ; rs232cmd.c 4719         }
004890 99700016       17164         ADD.W   R7,#016H
004894 2F30           17166         POP.W   R4, R5
004896 D680           17168         RET
                      17170 ; rs232cmd.c 4720       
                      17171 ; rs232cmd.c 4721       
                      17172 ; rs232cmd.c 4722       
                      17173 ; rs232cmd.c 4723       /************************************************************************
                            **/
                      17174 ; rs232cmd.c 4724       void FactGenlockGenURefDAC( void)
                      17175 ; rs232cmd.c 4725         {
                      17176         ALIGN   1
                      17178         PUBLIC  _FactGenlockGenURefDAC
004898                17179 _FactGenlockGenURefDAC:
004898 0F30           17183         PUSH.W  R4, R5
00489A 99720016       17185         SUB.W   R7,#016H
                      17189 ; rs232cmd.c 4726         char buffer[20];
                      17190 ; rs232cmd.c 4727         UI DACValue;
                      17191 ; rs232cmd.c 4728       
                      17192 ; rs232cmd.c 4729         if ( CmdExecute && !SCPIError)
00489E 964842rr       17194         MOV.B   ES,#SEG( _CmdExecute )
0048A2 9908rrrr       17195         MOV.W   R0,#SOF( _CmdExecute )
0048A6 8200           17196         MOV.B   R0L,[R0]
0048A8 F368           17197         BEQ     _1222
0048AA 964842rr       17198         MOV.B   ES,#SEG( _SCPIError )
0048AE 9908rrrr       17199         MOV.W   R0,#SOF( _SCPIError )
0048B2 8A00           17200         MOV.W   R0,[R0]
0048B4 F262           17201         BNE     _1222
                      17202 ; rs232cmd.c 4730           {
                      17203 ; rs232cmd.c 4731           if ( CmdRequest)
0048B6 964842rr       17205         MOV.B   ES,#SEG( _CmdRequest )
0048BA 9908rrrr       17206         MOV.W   R0,#SOF( _CmdRequest )
0048BE 8200           17207         MOV.B   R0L,[R0]
0048C0 F325           17208         BEQ     _1215
                      17209 ; rs232cmd.c 4732             {
                      17210 ; rs232cmd.c 4733             if ( ParCnt)
0048C2 964842rr       17212         MOV.B   ES,#SEG( _ParCnt )
0048C6 9908rrrr       17213         MOV.W   R0,#SOF( _ParCnt )
0048CA 8200           17214         MOV.B   R0L,[R0]
0048CC F306           17215         BEQ     _1214
                      17216 ; rs232cmd.c 4734                     SCPIError = SyntaxErr;
0048CE 964842rr       17218         MOV.B   ES,#SEG( _SCPIError )
0048D2 9908rrrr       17219         MOV.W   R0,#SOF( _SCPIError )
0048D6 BA03           17220         MOV.W   [R0],#03H
0048D8 FE50           17221         BR      _1222
0048D8 FE50           17221         BR      _1222
0048DA                17222 _1214:
                      17223 ; rs232cmd.c 4735             else
                      17224 ; rs232cmd.c 4736               {
                      17225 ; rs232cmd.c 4737               sprintf( buffer, "%u\n", Calibration.GenlockCalibration.DACUserVa
                            lue);
0048DA 91A8rr         17227         MOV.B   R5L,#SEG( __lc_bs )
0048DD 71BB           17228         XOR.B   R5H,R5H
0048DF 8947           17229         MOV.W   R4,R7
0048E1 964842rr       17230         MOV.B   ES,#SEG( _Calibration+120 )
0048E5 9908rrrr       17231         MOV.W   R0,#SOF( _Calibration+120 )
0048E9 8A00           17232         MOV.W   R0,[R0]
0048EB 0F01           17233         PUSH.W  R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 265

ADDR   CODE            LINE SOURCELINE
0048ED 9918rrrr       17235         MOV.W   R1,#SEG( _1012 )
0048F1 9908rrrr       17236         MOV.W   R0,#SOF( _1012 )
0048F5 0F03           17237         PUSH.W  R0, R1
0048F7 8915           17239         MOV.W   R1,R5
0048F9 8904           17240         MOV.W   R0,R4
                      17241         CALL    _sprintf
0048FB C4rrrrrr       +17241 ;       FCALL   _sprintf
0048FF A976           17242         ADDS.W  R7,#06H
                      17244 ; rs232cmd.c 4738               rs232puts( buffer);
004901 8915           17246         MOV.W   R1,R5
004903 8904           17247         MOV.W   R0,R4
                      17248         CALL    _rs232puts
004905 C4rrrrrr       +17248 ;       FCALL   _rs232puts
                      17249 ; rs232cmd.c 4739               }
                      17250 ; rs232cmd.c 4740             }
004909 FE38           17252         BR      _1222
004909 FE3800         17252         BR      _1222
00490C                17253 _1215:
                      17254 ; rs232cmd.c 4741           else
                      17255 ; rs232cmd.c 4742             {
                      17256 ; rs232cmd.c 4743             if (( ParCnt != 1) || (( sscanf( Cmd, "%u", &DACValue)) != 1))
00490C 964842rr       17258         MOV.B   ES,#SEG( _ParCnt )
004910 9908rrrr       17259         MOV.W   R0,#SOF( _ParCnt )
004914 8200           17260         MOV.B   R0L,[R0]
004916 910401         17261         CMP.B   R0L,#01H
004919 F216           17262         BNE     _1216
00491B 9918rrrr       17263         MOV.W   R1,#SEG( _Cmd )
00491F 9908rrrr       17264         MOV.W   R0,#SOF( _Cmd )
004923 9168rr         17265         MOV.B   R3L,#SEG( __lc_bs )
004926 7177           17266         XOR.B   R3H,R3H
004928 402714         17267         LEA     R2,R7+20
00492B 0F0C           17268         PUSH.W  R2, R3
00492D 9938rrrr       17270         MOV.W   R3,#SEG( _1190 )
004931 9928rrrr       17271         MOV.W   R2,#SOF( _1190 )
004935 0F0C           17272         PUSH.W  R2, R3
                      17274         CALL    _sscanf
004937 C4rrrrrr       +17274 ;       FCALL   _sscanf
00493B 99700008       17275         ADD.W   R7,#08H
00493F 99040001       17277         CMP.W   R0,#01H
004943 F307           17278         BEQ     _1217
004943 F30700         17278         BEQ     _1217
004946                17279 _1216:
                      17280 ; rs232cmd.c 4744               SCPIError = SyntaxErr;
004946 964842rr       17282         MOV.B   ES,#SEG( _SCPIError )
00494A 9908rrrr       17283         MOV.W   R0,#SOF( _SCPIError )
00494E BA03           17284         MOV.W   [R0],#03H
004950 FE14           17285         BR      _1222
004950 FE14           17285         BR      _1222
004952                17286 _1217:
                      17287 ; rs232cmd.c 4745             else
                      17288 ; rs232cmd.c 4746               {
                      17289 ; rs232cmd.c 4747               Calibration.GenlockCalibration.DACUserValue = DACValue;
004952 8C0714         17291         MOV.W   R0,[R7+20]
004955 964842rr       17292         MOV.B   ES,#SEG( _Calibration+120 )
004959 9918rrrr       17293         MOV.W   R1,#SOF( _Calibration+120 )
00495D 8A09           17294         MOV.W   [R1],R0
                      17295 ; rs232cmd.c 4748               NV_Store( &Calibration, CalibrationPtr, sizeof( Calibration));
00495F 9918rrrr       17297         MOV.W   R1,#SEG( _Calibration )
004963 9908rrrr       17298         MOV.W   R0,#SOF( _Calibration )
004967 964842rr       17299         MOV.B   ES,#SEG( _CalibrationPtr )
00496B 9928rrrr       17300         MOV.W   R2,#SOF( _CalibrationPtr )
00496F 8A22           17301         MOV.W   R2,[R2]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 266

ADDR   CODE            LINE SOURCELINE
004971 993800E2       17302         MOV.W   R3,#0E2H
                      17303         CALL    _NV_Store
004975 C4rrrrrr       +17303 ;       FCALL   _NV_Store
                      17304 ; rs232cmd.c 4749               }
                      17305 ; rs232cmd.c 4750             }
                      17306 ; rs232cmd.c 4751           }
00497A                17308 _1222:
                      17309 ; rs232cmd.c 4752         }
00497A 99700016       17311         ADD.W   R7,#016H
00497E 2F30           17313         POP.W   R4, R5
004980 D680           17315         RET
                      17317 ; rs232cmd.c 4753       
                      17318 ; rs232cmd.c 4754       /************************************************************************
                            **/
                      17319 ; rs232cmd.c 4755       /* FactGenlockGenURefDate                                                
                                                                                                                        RS232
                            CMD.C */
                      17320 ; rs232cmd.c 4756       
                      17321 ; rs232cmd.c 4757       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
                      17322 ; rs232cmd.c 4758       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      17323 ; rs232cmd.c 4759       
                      17324 ; rs232cmd.c 4760       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      17325 ; rs232cmd.c 4761       
                      17326 ; rs232cmd.c 4762       
                      17327 ; rs232cmd.c 4763       
                      17328 ; rs232cmd.c 4764       /************************************************************************
                            **/
                      17329 ; rs232cmd.c 4765       void FactGenlockGenURefDate( void)
                      17330 ; rs232cmd.c 4766       {
                      17331         ALIGN   1
                      17333         PUBLIC  _FactGenlockGenURefDate
004982                17334 _FactGenlockGenURefDate:
004982 0F30           17338         PUSH.W  R4, R5
004984 9972001A       17340         SUB.W   R7,#01AH
                      17346 ; rs232cmd.c 4767               UI year, month, day;
                      17347 ; rs232cmd.c 4768               char buffer[20];
                      17348 ; rs232cmd.c 4769       
                      17349 ; rs232cmd.c 4770               if ( CmdExecute && !SCPIError)
004988 964842rr       17351         MOV.B   ES,#SEG( _CmdExecute )
00498C 9908rrrr       17352         MOV.W   R0,#SOF( _CmdExecute )
004990 8200           17353         MOV.B   R0L,[R0]
                      17354         BEQ     _1235
004992 F202           +17354 ;       BNE     _LG_1184
004994 D500C1         +17354 ;       JMP.L   _1235
004998 D500C100       +17354 ;       JMP.L   _1235
004998                +17354 _LG_1184:
004998 964842rr       17355         MOV.B   ES,#SEG( _SCPIError )
00499C 9908rrrr       17356         MOV.W   R0,#SOF( _SCPIError )
0049A0 8A00           17357         MOV.W   R0,[R0]
                      17358         BNE     _1235
0049A2 F302           +17358 ;       BEQ     _LG_1186
0049A4 D500B9         +17358 ;       JMP.L   _1235
0049A8 D500B900       +17358 ;       JMP.L   _1235
0049A8                +17358 _LG_1186:
                      17359 ; rs232cmd.c 4771               {
                      17360 ; rs232cmd.c 4772                       if ( CmdRequest)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 267

ADDR   CODE            LINE SOURCELINE
0049A8 964842rr       17362         MOV.B   ES,#SEG( _CmdRequest )
0049AC 9908rrrr       17363         MOV.W   R0,#SOF( _CmdRequest )
0049B0 8200           17364         MOV.B   R0L,[R0]
0049B2 F35A           17365         BEQ     _1226
                      17366 ; rs232cmd.c 4773                       {
                      17367 ; rs232cmd.c 4774                               if ( ParCnt)
0049B4 964842rr       17369         MOV.B   ES,#SEG( _ParCnt )
0049B8 9908rrrr       17370         MOV.W   R0,#SOF( _ParCnt )
0049BC 8200           17371         MOV.B   R0L,[R0]
0049BE F307           17372         BEQ     _1225
                      17373 ; rs232cmd.c 4775                                       SCPIError = SyntaxErr;
0049C0 964842rr       17375         MOV.B   ES,#SEG( _SCPIError )
0049C4 9908rrrr       17376         MOV.W   R0,#SOF( _SCPIError )
0049C8 BA03           17377         MOV.W   [R0],#03H
                      17378         BR      _1235
0049CA D500A6         +17378         JMP.L   _1235
0049CA D500A600       +17378         JMP.L   _1235
0049CE                17379 _1225:
                      17380 ; rs232cmd.c 4776                               else
                      17381 ; rs232cmd.c 4777                               {
                      17382 ; rs232cmd.c 4778                                       day = Calibration.GenlockCalibration.DACU
                            serDate % 100;
0049CE 964842rr       17384         MOV.B   ES,#SEG( _Calibration+114 )
0049D2 9918rrrr       17385         MOV.W   R1,#SOF( _Calibration+114 )
0049D6 8B01           17386         MOV.W   R0,[R1+]
0049D8 8A11           17387         MOV.W   R1,[R1]
0049DA B930           17388         MOV.W   R3,#00H
0049DC 99280064       17389         MOV.W   R2,#064H
0049E0 964842rr       17390         MOV.B   ES,#SEG( _Calibration+114 )
0049E4 9948rrrr       17391         MOV.W   R4,#SOF( _Calibration+114 )
0049E8 8B0C           17392         MOV.W   [R4+],R0
0049EA 8A1C           17393         MOV.W   [R4],R1
0049EC C4rrrrrr       17394         FCALL   __UMODL
0049F0 8C0F04         17395         MOV.W   [R7+4],R0
0049F3 964842rr       17396         MOV.B   ES,#SEG( _Calibration+114 )
0049F7 9918rrrr       17397         MOV.W   R1,#SOF( _Calibration+114 )
0049FB 8B01           17398         MOV.W   R0,[R1+]
0049FD 8A11           17399         MOV.W   R1,[R1]
                      17400 ; rs232cmd.c 4779                                       month = ( Calibration.GenlockCalibration.
                            DACUserDate / 100) % 100;
0049FF B930           17402         MOV.W   R3,#00H
004A01 99280064       17403         MOV.W   R2,#064H
004A05 8953           17404         MOV.W   R5,R3
004A07 8942           17405         MOV.W   R4,R2
004A09 C4rrrrrr       17406         FCALL   __UDIVL
004A0D 8935           17407         MOV.W   R3,R5
004A0F 8924           17408         MOV.W   R2,R4
004A11 C4rrrrrr       17409         FCALL   __UMODL
004A15 8C0F02         17410         MOV.W   [R7+2],R0
                      17411 ; rs232cmd.c 4780                                       year = ( Calibration.GenlockCalibration.D
                            ACUserDate / 10000);
004A18 B930           17413         MOV.W   R3,#00H
004A1A 99282710       17414         MOV.W   R2,#02710H
004A1E 964842rr       17415         MOV.B   ES,#SEG( _Calibration+114 )
004A22 9918rrrr       17416         MOV.W   R1,#SOF( _Calibration+114 )
004A26 8B01           17417         MOV.W   R0,[R1+]
004A28 8A11           17418         MOV.W   R1,[R1]
004A2A C4rrrrrr       17419         FCALL   __UDIVL
004A2E 8A0F           17420         MOV.W   [R7],R0
                      17421 ; rs232cmd.c 4781       
                      17422 ; rs232cmd.c 4782                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 268

ADDR   CODE            LINE SOURCELINE
004A30 91A8rr         17424         MOV.B   R5L,#SEG( __lc_bs )
004A33 71BB           17425         XOR.B   R5H,R5H
004A35 404706         17426         LEA     R4,R7+6
004A38 8C0704         17427         MOV.W   R0,[R7+4]
004A3B 0F01           17428         PUSH.W  R0
004A3D 8C0704         17430         MOV.W   R0,[R7+4]
004A40 0F01           17431         PUSH.W  R0
004A42 8C0704         17433         MOV.W   R0,[R7+4]
004A45 0F01           17434         PUSH.W  R0
004A47 9918rrrr       17436         MOV.W   R1,#SEG( _1174 )
004A4B 9908rrrr       17437         MOV.W   R0,#SOF( _1174 )
004A4F 0F03           17438         PUSH.W  R0, R1
004A51 8915           17440         MOV.W   R1,R5
004A53 8904           17441         MOV.W   R0,R4
                      17442         CALL    _sprintf
004A55 C4rrrrrr       +17442 ;       FCALL   _sprintf
004A59 9970000A       17443         ADD.W   R7,#0AH
                      17445 ; rs232cmd.c 4783       
                      17446 ; rs232cmd.c 4784                                       rs232puts( buffer);
004A5D 8915           17448         MOV.W   R1,R5
004A5F 8904           17449         MOV.W   R0,R4
                      17450         CALL    _rs232puts
004A61 C4rrrrrr       +17450 ;       FCALL   _rs232puts
                      17451 ; rs232cmd.c 4785                               }
                      17452 ; rs232cmd.c 4786                       }
004A65 FE59           17454         BR      _1235
004A65 FE5900         17454         BR      _1235
004A68                17455 _1226:
                      17456 ; rs232cmd.c 4787                       else
                      17457 ; rs232cmd.c 4788                       {
                      17458 ; rs232cmd.c 4789                               if (( ParCnt != 3) || (( sscanf( Cmd, "%u,%u,%u",
                             &year, &month, &day)) != 3))
004A68 964842rr       17460         MOV.B   ES,#SEG( _ParCnt )
004A6C 9908rrrr       17461         MOV.W   R0,#SOF( _ParCnt )
004A70 8200           17462         MOV.B   R0L,[R0]
004A72 910403         17463         CMP.B   R0L,#03H
004A75 F21F           17464         BNE     _1227
004A77 9168rr         17465         MOV.B   R3L,#SEG( __lc_bs )
004A7A 7177           17466         XOR.B   R3H,R3H
004A7C 8927           17467         MOV.W   R2,R7
004A7E 91A8rr         17468         MOV.B   R5L,#SEG( __lc_bs )
004A81 71BB           17469         XOR.B   R5H,R5H
004A83 404702         17470         LEA     R4,R7+2
004A86 9128rr         17471         MOV.B   R1L,#SEG( __lc_bs )
004A89 7133           17472         XOR.B   R1H,R1H
004A8B 400704         17473         LEA     R0,R7+4
004A8E 0F03           17474         PUSH.W  R0, R1
004A90 0F30           17476         PUSH.W  R4, R5
004A92 0F0C           17478         PUSH.W  R2, R3
004A94 9938rrrr       17480         MOV.W   R3,#SEG( _1175 )
004A98 9928rrrr       17481         MOV.W   R2,#SOF( _1175 )
004A9C 0F0C           17482         PUSH.W  R2, R3
004A9E 9918rrrr       17484         MOV.W   R1,#SEG( _Cmd )
004AA2 9908rrrr       17485         MOV.W   R0,#SOF( _Cmd )
                      17486         CALL    _sscanf
004AA6 C4rrrrrr       +17486 ;       FCALL   _sscanf
004AAA 99700010       17487         ADD.W   R7,#010H
004AAE 99040003       17489         CMP.W   R0,#03H
004AB2 F306           17490         BEQ     _1228
004AB2 F306           17490         BEQ     _1228
004AB4                17491 _1227:
                      17492 ; rs232cmd.c 4790                                       SCPIError = SyntaxErr;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 269

ADDR   CODE            LINE SOURCELINE
004AB4 964842rr       17494         MOV.B   ES,#SEG( _SCPIError )
004AB8 9908rrrr       17495         MOV.W   R0,#SOF( _SCPIError )
004ABC BA03           17496         MOV.W   [R0],#03H
004ABE FE2C           17497         BR      _1235
004ABE FE2C           17497         BR      _1235
004AC0                17498 _1228:
                      17499 ; rs232cmd.c 4791                               else
                      17500 ; rs232cmd.c 4792                               {
                      17501 ; rs232cmd.c 4793                                       if ( ValidateDate( year, month, day) == F
                            AIL)
004AC0 8A07           17503         MOV.W   R0,[R7]
004AC2 8C1702         17504         MOV.W   R1,[R7+2]
004AC5 8C2704         17505         MOV.W   R2,[R7+4]
                      17506         CALL    _ValidateDate
004AC8 C4rrrrrr       +17506 ;       FCALL   _ValidateDate
004ACC 6900           17507         OR.W    R0,R0
004ACE F207           17508         BNE     _1229
                      17509 ; rs232cmd.c 4794                                               SCPIError = ExecErr;
004AD0 964842rr       17511         MOV.B   ES,#SEG( _SCPIError )
004AD4 9908rrrr       17512         MOV.W   R0,#SOF( _SCPIError )
004AD8 9A08001D       17513         MOV.W   [R0],#01DH
004ADC FE1D           17514         BR      _1235
004ADC FE1D           17514         BR      _1235
004ADE                17515 _1229:
                      17516 ; rs232cmd.c 4795                                       else
                      17517 ; rs232cmd.c 4796                                       {
                      17518 ; rs232cmd.c 4797                                               Calibration.GenlockCalibration.DA
                            CUserDate = day + 100*month + 10000*year;
004ADE 8C0702         17520         MOV.W   R0,[R7+2]
004AE1 E9000064       17521         MULU.W  R0,#064H
004AE5 0C0704         17522         ADD.W   R0,[R7+4]
004AE8 8A27           17523         MOV.W   R2,[R7]
004AEA E9202710       17524         MULU.W  R2,#02710H
004AEE 0902           17525         ADD.W   R0,R2
004AF0 B910           17526         MOVS.W  R1,#00H
004AF2 964842rr       17527         MOV.B   ES,#SEG( _Calibration+114 )
004AF6 9928rrrr       17528         MOV.W   R2,#SOF( _Calibration+114 )
004AFA 8B0A           17529         MOV.W   [R2+],R0
004AFC 8A1A           17530         MOV.W   [R2],R1
                      17531 ; rs232cmd.c 4798                                               
                      17532 ; rs232cmd.c 4799                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004AFE 9918rrrr       17534         MOV.W   R1,#SEG( _Calibration )
004B02 9908rrrr       17535         MOV.W   R0,#SOF( _Calibration )
004B06 964842rr       17536         MOV.B   ES,#SEG( _CalibrationPtr )
004B0A 9928rrrr       17537         MOV.W   R2,#SOF( _CalibrationPtr )
004B0E 8A22           17538         MOV.W   R2,[R2]
004B10 993800E2       17539         MOV.W   R3,#0E2H
                      17540         CALL    _NV_Store
004B14 C4rrrrrr       +17540 ;       FCALL   _NV_Store
                      17541 ; rs232cmd.c 4800                                       }                               
                      17542 ; rs232cmd.c 4801                               }
                      17543 ; rs232cmd.c 4802                       }
                      17544 ; rs232cmd.c 4803               }
004B18                17546 _1235:
                      17547 ; rs232cmd.c 4804       }
004B18 9970001A       17549         ADD.W   R7,#01AH
004B1C 2F30           17551         POP.W   R4, R5
004B1E D680           17553         RET
                      17555 ; rs232cmd.c 4805       
                      17556 ; rs232cmd.c 4806       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 270

ADDR   CODE            LINE SOURCELINE
                      17557 ; rs232cmd.c 4807       /* FactGenlockGenURefDAC                                                 
                                                                                                                        RS232
                            CMD.C */
                      17558 ; rs232cmd.c 4808       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17559 ; rs232cmd.c 4809       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
                      17560 ; rs232cmd.c 4810       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      17561 ; rs232cmd.c 4811       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17562 ; rs232cmd.c 4812       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      17563 ; rs232cmd.c 4813       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      17564 ; rs232cmd.c 4814       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      17565 ; rs232cmd.c 4815       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      17566 ; rs232cmd.c 4816       
                      17567 ; rs232cmd.c 4817       /************************************************************************
                            **/
                      17568 ; rs232cmd.c 4818       /* FactGenlockGenHPHZero                                                 
                                                                                                                        RS232
                            CMD.C */
                      17569 ; rs232cmd.c 4819       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17570 ; rs232cmd.c 4820       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      17571 ; rs232cmd.c 4821       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      17572 ; rs232cmd.c 4822       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17573 ; rs232cmd.c 4823       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      17574 ; rs232cmd.c 4824       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      17575 ; rs232cmd.c 4825       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      17576 ; rs232cmd.c 4826       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      17577 ; rs232cmd.c 4827       /************************************************************************
                            **/
                      17578 ; rs232cmd.c 4828       void FactGenlockGenHPHZero( void)
                      17579 ; rs232cmd.c 4829         {
                      17580         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 271

ADDR   CODE            LINE SOURCELINE
                      17582         PUBLIC  _FactGenlockGenHPHZero
004B20                17583 _FactGenlockGenHPHZero:
004B20 0F30           17587         PUSH.W  R4, R5
004B22 99720026       17589         SUB.W   R7,#026H
                      17594 ; rs232cmd.c 4830         char buffer[30];
                      17595 ; rs232cmd.c 4831         UL HPHZeroG, HPHZeroM;
                      17596 ; rs232cmd.c 4832       
                      17597 ; rs232cmd.c 4833         if ( CmdExecute && !SCPIError)
004B26 964842rr       17599         MOV.B   ES,#SEG( _CmdExecute )
004B2A 9908rrrr       17600         MOV.W   R0,#SOF( _CmdExecute )
004B2E 8200           17601         MOV.B   R0L,[R0]
                      17602         BEQ     _1248
004B30 F202           +17602 ;       BNE     _LG_1198
004B32 D5008A         +17602 ;       JMP.L   _1248
004B36 D5008A00       +17602 ;       JMP.L   _1248
004B36                +17602 _LG_1198:
004B36 964842rr       17603         MOV.B   ES,#SEG( _SCPIError )
004B3A 9908rrrr       17604         MOV.W   R0,#SOF( _SCPIError )
004B3E 8A00           17605         MOV.W   R0,[R0]
                      17606         BNE     _1248
004B40 F302           +17606 ;       BEQ     _LG_1200
004B42 D50082         +17606 ;       JMP.L   _1248
004B46 D5008200       +17606 ;       JMP.L   _1248
004B46                +17606 _LG_1200:
                      17607 ; rs232cmd.c 4834           {
                      17608 ; rs232cmd.c 4835           if ( CmdRequest)
004B46 964842rr       17610         MOV.B   ES,#SEG( _CmdRequest )
004B4A 9908rrrr       17611         MOV.W   R0,#SOF( _CmdRequest )
004B4E 8200           17612         MOV.B   R0L,[R0]
004B50 F32E           17613         BEQ     _1240
                      17614 ; rs232cmd.c 4836             {
                      17615 ; rs232cmd.c 4837             if ( ParCnt)
004B52 964842rr       17617         MOV.B   ES,#SEG( _ParCnt )
004B56 9908rrrr       17618         MOV.W   R0,#SOF( _ParCnt )
004B5A 8200           17619         MOV.B   R0L,[R0]
004B5C F306           17620         BEQ     _1239
                      17621 ; rs232cmd.c 4838               SCPIError = SyntaxErr;
004B5E 964842rr       17623         MOV.B   ES,#SEG( _SCPIError )
004B62 9908rrrr       17624         MOV.W   R0,#SOF( _SCPIError )
004B66 BA03           17625         MOV.W   [R0],#03H
004B68 FE6F           17626         BR      _1248
004B68 FE6F           17626         BR      _1248
004B6A                17627 _1239:
                      17628 ; rs232cmd.c 4839             else
                      17629 ; rs232cmd.c 4840               {
                      17630 ; rs232cmd.c 4841               sprintf( buffer, "%lu,%lu\n", Calibration.GenlockCalibration.HPHZ
                            eroG, 
                      17631 ; rs232cmd.c 4842                        Calibration.GenlockCalibration.HPHZeroM); 
004B6A 91A8rr         17633         MOV.B   R5L,#SEG( __lc_bs )
004B6D 71BB           17634         XOR.B   R5H,R5H
004B6F 8947           17635         MOV.W   R4,R7
004B71 964842rr       17636         MOV.B   ES,#SEG( _Calibration+122 )
004B75 9918rrrr       17637         MOV.W   R1,#SOF( _Calibration+122 )
004B79 8B01           17638         MOV.W   R0,[R1+]
004B7B 8A11           17639         MOV.W   R1,[R1]
004B7D 964842rr       17640         MOV.B   ES,#SEG( _Calibration+130 )
004B81 9938rrrr       17641         MOV.W   R3,#SOF( _Calibration+130 )
004B85 8B23           17642         MOV.W   R2,[R3+]
004B87 8A33           17643         MOV.W   R3,[R3]
004B89 0F0C           17644         PUSH.W  R2, R3
004B8B 0F03           17646         PUSH.W  R0, R1
004B8D 9918rrrr       17648         MOV.W   R1,#SEG( _1238 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 272

ADDR   CODE            LINE SOURCELINE
004B91 9908rrrr       17649         MOV.W   R0,#SOF( _1238 )
004B95 0F03           17650         PUSH.W  R0, R1
004B97 8915           17652         MOV.W   R1,R5
004B99 8904           17653         MOV.W   R0,R4
                      17654         CALL    _sprintf
004B9B C4rrrrrr       +17654 ;       FCALL   _sprintf
004B9F 9970000C       17655         ADD.W   R7,#0CH
                      17657 ; rs232cmd.c 4843               rs232puts( buffer);
004BA3 8915           17659         MOV.W   R1,R5
004BA5 8904           17660         MOV.W   R0,R4
                      17661         CALL    _rs232puts
004BA7 C4rrrrrr       +17661 ;       FCALL   _rs232puts
                      17662 ; rs232cmd.c 4844               }
                      17663 ; rs232cmd.c 4845             }
004BAB FE4E           17665         BR      _1248
004BAB FE4E00         17665         BR      _1248
004BAE                17666 _1240:
                      17667 ; rs232cmd.c 4846           else
                      17668 ; rs232cmd.c 4847             {
                      17669 ; rs232cmd.c 4848             if ( !PasswordProtected)
004BAE 964842rr       17671         MOV.B   ES,#SEG( _PasswordProtected )
004BB2 9908rrrr       17672         MOV.W   R0,#SOF( _PasswordProtected )
004BB6 8A00           17673         MOV.W   R0,[R0]
004BB8 F247           17674         BNE     _1248
                      17675 ; rs232cmd.c 4849               {
                      17676 ; rs232cmd.c 4850               if (( ParCnt != 2) || (( sscanf( Cmd, "%lu,%lu", &HPHZeroG, &HPHZ
                            eroM)) != 2))
004BBA 964842rr       17678         MOV.B   ES,#SEG( _ParCnt )
004BBE 9908rrrr       17679         MOV.W   R0,#SOF( _ParCnt )
004BC2 8200           17680         MOV.B   R0L,[R0]
004BC4 910402         17681         CMP.B   R0L,#02H
004BC7 F21B           17682         BNE     _1241
004BC9 9918rrrr       17683         MOV.W   R1,#SEG( _Cmd )
004BCD 9908rrrr       17684         MOV.W   R0,#SOF( _Cmd )
004BD1 9168rr         17685         MOV.B   R3L,#SEG( __lc_bs )
004BD4 7177           17686         XOR.B   R3H,R3H
004BD6 40271E         17687         LEA     R2,R7+30
004BD9 91A8rr         17688         MOV.B   R5L,#SEG( __lc_bs )
004BDC 71BB           17689         XOR.B   R5H,R5H
004BDE 404722         17690         LEA     R4,R7+34
004BE1 0F30           17691         PUSH.W  R4, R5
004BE3 0F0C           17693         PUSH.W  R2, R3
004BE5 9938rrrr       17695         MOV.W   R3,#SEG( _1037 )
004BE9 9928rrrr       17696         MOV.W   R2,#SOF( _1037 )
004BED 0F0C           17697         PUSH.W  R2, R3
                      17699         CALL    _sscanf
004BEF C4rrrrrr       +17699 ;       FCALL   _sscanf
004BF3 9970000C       17700         ADD.W   R7,#0CH
004BF7 99040002       17702         CMP.W   R0,#02H
004BFB F307           17703         BEQ     _1242
004BFB F30700         17703         BEQ     _1242
004BFE                17704 _1241:
                      17705 ; rs232cmd.c 4851                 SCPIError = SyntaxErr;
004BFE 964842rr       17707         MOV.B   ES,#SEG( _SCPIError )
004C02 9908rrrr       17708         MOV.W   R0,#SOF( _SCPIError )
004C06 BA03           17709         MOV.W   [R0],#03H
004C08 FE1F           17710         BR      _1248
004C08 FE1F           17710         BR      _1248
004C0A                17711 _1242:
                      17712 ; rs232cmd.c 4852               else
                      17713 ; rs232cmd.c 4853                 {
                      17714 ; rs232cmd.c 4854                 Calibration.GenlockCalibration.HPHZeroG = HPHZeroG;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 273

ADDR   CODE            LINE SOURCELINE
004C0A 8C1720         17716         MOV.W   R1,[R7+32]
004C0D 8C071E         17717         MOV.W   R0,[R7+30]
004C10 964842rr       17718         MOV.B   ES,#SEG( _Calibration+122 )
004C14 9928rrrr       17719         MOV.W   R2,#SOF( _Calibration+122 )
004C18 8B0A           17720         MOV.W   [R2+],R0
004C1A 8A1A           17721         MOV.W   [R2],R1
                      17722 ; rs232cmd.c 4855                 Calibration.GenlockCalibration.HPHZeroM = HPHZeroM;
004C1C 8C1724         17724         MOV.W   R1,[R7+36]
004C1F 8C0722         17725         MOV.W   R0,[R7+34]
004C22 964842rr       17726         MOV.B   ES,#SEG( _Calibration+130 )
004C26 9928rrrr       17727         MOV.W   R2,#SOF( _Calibration+130 )
004C2A 8B0A           17728         MOV.W   [R2+],R0
004C2C 8A1A           17729         MOV.W   [R2],R1
                      17730 ; rs232cmd.c 4856                 NV_Store( &Calibration, CalibrationPtr, sizeof( Calibration));
004C2E 9918rrrr       17732         MOV.W   R1,#SEG( _Calibration )
004C32 9908rrrr       17733         MOV.W   R0,#SOF( _Calibration )
004C36 964842rr       17734         MOV.B   ES,#SEG( _CalibrationPtr )
004C3A 9928rrrr       17735         MOV.W   R2,#SOF( _CalibrationPtr )
004C3E 8A22           17736         MOV.W   R2,[R2]
004C40 993800E2       17737         MOV.W   R3,#0E2H
                      17738         CALL    _NV_Store
004C44 C4rrrrrr       +17738 ;       FCALL   _NV_Store
                      17739 ; rs232cmd.c 4857                 }
                      17740 ; rs232cmd.c 4858               }
                      17741 ; rs232cmd.c 4859             }
                      17742 ; rs232cmd.c 4860           }
004C48                17744 _1248:
                      17745 ; rs232cmd.c 4861         }
004C48 99700026       17747         ADD.W   R7,#026H
004C4C 2F30           17749         POP.W   R4, R5
004C4E D680           17751         RET
                      17753 ; rs232cmd.c 4862       
                      17754 ; rs232cmd.c 4863       /************************************************************************
                            **/
                      17755 ; rs232cmd.c 4864       /* FactGenlockGenPhase                                                   
                                                                                                                        RS232
                            CMD.C */
                      17756 ; rs232cmd.c 4865       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17757 ; rs232cmd.c 4866       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      17758 ; rs232cmd.c 4867       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      17759 ; rs232cmd.c 4868       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17760 ; rs232cmd.c 4869       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      17761 ; rs232cmd.c 4870       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      17762 ; rs232cmd.c 4871       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      17763 ; rs232cmd.c 4872       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 274

ADDR   CODE            LINE SOURCELINE
                      17764 ; rs232cmd.c 4873       /************************************************************************
                            **/
                      17765 ; rs232cmd.c 4874       void FactGenlockGenPhase( void)
                      17766 ; rs232cmd.c 4875       {
                      17767         ALIGN   1
                      17769         PUBLIC  _FactGenlockGenPhase
004C50                17770 _FactGenlockGenPhase:
004C50 0F30           17774         PUSH.W  R4, R5
004C52 99720026       17776         SUB.W   R7,#026H
                      17781 ; rs232cmd.c 4876               char buffer[30];
                      17782 ; rs232cmd.c 4877               UL PhaseG, PhaseM;
                      17783 ; rs232cmd.c 4878       
                      17784 ; rs232cmd.c 4879               if ( CmdExecute && !SCPIError)
004C56 964842rr       17786         MOV.B   ES,#SEG( _CmdExecute )
004C5A 9908rrrr       17787         MOV.W   R0,#SOF( _CmdExecute )
004C5E 8200           17788         MOV.B   R0L,[R0]
                      17789         BEQ     _1260
004C60 F202           +17789 ;       BNE     _LG_1212
004C62 D5008A         +17789 ;       JMP.L   _1260
004C66 D5008A00       +17789 ;       JMP.L   _1260
004C66                +17789 _LG_1212:
004C66 964842rr       17790         MOV.B   ES,#SEG( _SCPIError )
004C6A 9908rrrr       17791         MOV.W   R0,#SOF( _SCPIError )
004C6E 8A00           17792         MOV.W   R0,[R0]
                      17793         BNE     _1260
004C70 F302           +17793 ;       BEQ     _LG_1214
004C72 D50082         +17793 ;       JMP.L   _1260
004C76 D5008200       +17793 ;       JMP.L   _1260
004C76                +17793 _LG_1214:
                      17794 ; rs232cmd.c 4880               {
                      17795 ; rs232cmd.c 4881                       if ( CmdRequest)
004C76 964842rr       17797         MOV.B   ES,#SEG( _CmdRequest )
004C7A 9908rrrr       17798         MOV.W   R0,#SOF( _CmdRequest )
004C7E 8200           17799         MOV.B   R0L,[R0]
004C80 F32E           17800         BEQ     _1252
                      17801 ; rs232cmd.c 4882                       {
                      17802 ; rs232cmd.c 4883                               if ( ParCnt)
004C82 964842rr       17804         MOV.B   ES,#SEG( _ParCnt )
004C86 9908rrrr       17805         MOV.W   R0,#SOF( _ParCnt )
004C8A 8200           17806         MOV.B   R0L,[R0]
004C8C F306           17807         BEQ     _1251
                      17808 ; rs232cmd.c 4884                                       SCPIError = SyntaxErr;
004C8E 964842rr       17810         MOV.B   ES,#SEG( _SCPIError )
004C92 9908rrrr       17811         MOV.W   R0,#SOF( _SCPIError )
004C96 BA03           17812         MOV.W   [R0],#03H
004C98 FE6F           17813         BR      _1260
004C98 FE6F           17813         BR      _1260
004C9A                17814 _1251:
                      17815 ; rs232cmd.c 4885                               else
                      17816 ; rs232cmd.c 4886                               {
                      17817 ; rs232cmd.c 4887                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .GenlockCalibration.PhaseG, 
                      17818 ; rs232cmd.c 4888                                                                                
                                                                                               Calibration.GenlockCalibration
                            .PhaseM);
004C9A 91A8rr         17820         MOV.B   R5L,#SEG( __lc_bs )
004C9D 71BB           17821         XOR.B   R5H,R5H
004C9F 8947           17822         MOV.W   R4,R7
004CA1 964842rr       17823         MOV.B   ES,#SEG( _Calibration+126 )
004CA5 9918rrrr       17824         MOV.W   R1,#SOF( _Calibration+126 )
004CA9 8B01           17825         MOV.W   R0,[R1+]
004CAB 8A11           17826         MOV.W   R1,[R1]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 275

ADDR   CODE            LINE SOURCELINE
004CAD 964842rr       17827         MOV.B   ES,#SEG( _Calibration+134 )
004CB1 9938rrrr       17828         MOV.W   R3,#SOF( _Calibration+134 )
004CB5 8B23           17829         MOV.W   R2,[R3+]
004CB7 8A33           17830         MOV.W   R3,[R3]
004CB9 0F0C           17831         PUSH.W  R2, R3
004CBB 0F03           17833         PUSH.W  R0, R1
004CBD 9918rrrr       17835         MOV.W   R1,#SEG( _1238 )
004CC1 9908rrrr       17836         MOV.W   R0,#SOF( _1238 )
004CC5 0F03           17837         PUSH.W  R0, R1
004CC7 8915           17839         MOV.W   R1,R5
004CC9 8904           17840         MOV.W   R0,R4
                      17841         CALL    _sprintf
004CCB C4rrrrrr       +17841 ;       FCALL   _sprintf
004CCF 9970000C       17842         ADD.W   R7,#0CH
                      17844 ; rs232cmd.c 4889                                       rs232puts( buffer);
004CD3 8915           17846         MOV.W   R1,R5
004CD5 8904           17847         MOV.W   R0,R4
                      17848         CALL    _rs232puts
004CD7 C4rrrrrr       +17848 ;       FCALL   _rs232puts
                      17849 ; rs232cmd.c 4890                               }
                      17850 ; rs232cmd.c 4891                       }
004CDB FE4E           17852         BR      _1260
004CDB FE4E00         17852         BR      _1260
004CDE                17853 _1252:
                      17854 ; rs232cmd.c 4892                       else
                      17855 ; rs232cmd.c 4893                       {
                      17856 ; rs232cmd.c 4894                               if ( !PasswordProtected)
004CDE 964842rr       17858         MOV.B   ES,#SEG( _PasswordProtected )
004CE2 9908rrrr       17859         MOV.W   R0,#SOF( _PasswordProtected )
004CE6 8A00           17860         MOV.W   R0,[R0]
004CE8 F247           17861         BNE     _1260
                      17862 ; rs232cmd.c 4895                               {
                      17863 ; rs232cmd.c 4896                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
004CEA 964842rr       17865         MOV.B   ES,#SEG( _ParCnt )
004CEE 9908rrrr       17866         MOV.W   R0,#SOF( _ParCnt )
004CF2 8200           17867         MOV.B   R0L,[R0]
004CF4 910402         17868         CMP.B   R0L,#02H
004CF7 F21B           17869         BNE     _1253
004CF9 9918rrrr       17870         MOV.W   R1,#SEG( _Cmd )
004CFD 9908rrrr       17871         MOV.W   R0,#SOF( _Cmd )
004D01 9168rr         17872         MOV.B   R3L,#SEG( __lc_bs )
004D04 7177           17873         XOR.B   R3H,R3H
004D06 40271E         17874         LEA     R2,R7+30
004D09 91A8rr         17875         MOV.B   R5L,#SEG( __lc_bs )
004D0C 71BB           17876         XOR.B   R5H,R5H
004D0E 404722         17877         LEA     R4,R7+34
004D11 0F30           17878         PUSH.W  R4, R5
004D13 0F0C           17880         PUSH.W  R2, R3
004D15 9938rrrr       17882         MOV.W   R3,#SEG( _1037 )
004D19 9928rrrr       17883         MOV.W   R2,#SOF( _1037 )
004D1D 0F0C           17884         PUSH.W  R2, R3
                      17886         CALL    _sscanf
004D1F C4rrrrrr       +17886 ;       FCALL   _sscanf
004D23 9970000C       17887         ADD.W   R7,#0CH
004D27 99040002       17889         CMP.W   R0,#02H
004D2B F307           17890         BEQ     _1254
004D2B F30700         17890         BEQ     _1254
004D2E                17891 _1253:
                      17892 ; rs232cmd.c 4897                                               SCPIError = SyntaxErr;
004D2E 964842rr       17894         MOV.B   ES,#SEG( _SCPIError )
004D32 9908rrrr       17895         MOV.W   R0,#SOF( _SCPIError )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 276

ADDR   CODE            LINE SOURCELINE
004D36 BA03           17896         MOV.W   [R0],#03H
004D38 FE1F           17897         BR      _1260
004D38 FE1F           17897         BR      _1260
004D3A                17898 _1254:
                      17899 ; rs232cmd.c 4898                                       else
                      17900 ; rs232cmd.c 4899                                       {
                      17901 ; rs232cmd.c 4900                                               Calibration.GenlockCalibration.Ph
                            aseG = PhaseG;
004D3A 8C1720         17903         MOV.W   R1,[R7+32]
004D3D 8C071E         17904         MOV.W   R0,[R7+30]
004D40 964842rr       17905         MOV.B   ES,#SEG( _Calibration+126 )
004D44 9928rrrr       17906         MOV.W   R2,#SOF( _Calibration+126 )
004D48 8B0A           17907         MOV.W   [R2+],R0
004D4A 8A1A           17908         MOV.W   [R2],R1
                      17909 ; rs232cmd.c 4901                                               Calibration.GenlockCalibration.Ph
                            aseM = PhaseM;
004D4C 8C1724         17911         MOV.W   R1,[R7+36]
004D4F 8C0722         17912         MOV.W   R0,[R7+34]
004D52 964842rr       17913         MOV.B   ES,#SEG( _Calibration+134 )
004D56 9928rrrr       17914         MOV.W   R2,#SOF( _Calibration+134 )
004D5A 8B0A           17915         MOV.W   [R2+],R0
004D5C 8A1A           17916         MOV.W   [R2],R1
                      17917 ; rs232cmd.c 4902                                       
                      17918 ; rs232cmd.c 4903                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
004D5E 9918rrrr       17920         MOV.W   R1,#SEG( _Calibration )
004D62 9908rrrr       17921         MOV.W   R0,#SOF( _Calibration )
004D66 964842rr       17922         MOV.B   ES,#SEG( _CalibrationPtr )
004D6A 9928rrrr       17923         MOV.W   R2,#SOF( _CalibrationPtr )
004D6E 8A22           17924         MOV.W   R2,[R2]
004D70 993800E2       17925         MOV.W   R3,#0E2H
                      17926         CALL    _NV_Store
004D74 C4rrrrrr       +17926 ;       FCALL   _NV_Store
                      17927 ; rs232cmd.c 4904                                       }
                      17928 ; rs232cmd.c 4905                               }
                      17929 ; rs232cmd.c 4906                       }
                      17930 ; rs232cmd.c 4907               }
004D78                17932 _1260:
                      17933 ; rs232cmd.c 4908       }
004D78 99700026       17935         ADD.W   R7,#026H
004D7C 2F30           17937         POP.W   R4, R5
004D7E D680           17939         RET
                      17941 ; rs232cmd.c 4909       
                      17942 ; rs232cmd.c 4910       /************************************************************************
                            **/
                      17943 ; rs232cmd.c 4911       /* FactBBGenDate                                                         
                                                                                                                             
                                               RS232CMD.C */
                      17944 ; rs232cmd.c 4912       /*                                                                       
                                                                                                                             
                                                                                                                  
                      17945 ; rs232cmd.c 4913       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      17946 ; rs232cmd.c 4914       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      17947 ; rs232cmd.c 4915       /*                                                                       
                                                                                                                             
                                                                                                                  
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 277

ADDR   CODE            LINE SOURCELINE
                      17948 ; rs232cmd.c 4916       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      17949 ; rs232cmd.c 4917       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      17950 ; rs232cmd.c 4918       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      17951 ; rs232cmd.c 4919       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      17952 ; rs232cmd.c 4920       /************************************************************************
                            **/
                      17953 ; rs232cmd.c 4921       void FactBBGenDate( void)
                      17954 ; rs232cmd.c 4922       {
                      17955         ALIGN   1
                      17957         PUBLIC  _FactBBGenDate
004D80                17958 _FactBBGenDate:
004D80 0F30           17962         PUSH.W  R4, R5
004D82 9972001E       17964         SUB.W   R7,#01EH
                      17970 ; rs232cmd.c 4923               UI year, month, day;
                      17971 ; rs232cmd.c 4924               char buffer[20];
                      17972 ; rs232cmd.c 4925       
                      17973 ; rs232cmd.c 4926               if ( CmdExecute && !SCPIError)
004D86 964842rr       17975         MOV.B   ES,#SEG( _CmdExecute )
004D8A 9908rrrr       17976         MOV.W   R0,#SOF( _CmdExecute )
004D8E 8200           17977         MOV.B   R0L,[R0]
                      17978         BEQ     _1274
004D90 F202           +17978 ;       BNE     _LG_1226
004D92 D500D0         +17978 ;       JMP.L   _1274
004D96 D500D000       +17978 ;       JMP.L   _1274
004D96                +17978 _LG_1226:
004D96 964842rr       17979         MOV.B   ES,#SEG( _SCPIError )
004D9A 9908rrrr       17980         MOV.W   R0,#SOF( _SCPIError )
004D9E 8A00           17981         MOV.W   R0,[R0]
                      17982         BNE     _1274
004DA0 F302           +17982 ;       BEQ     _LG_1228
004DA2 D500C8         +17982 ;       JMP.L   _1274
004DA6 D500C800       +17982 ;       JMP.L   _1274
004DA6                +17982 _LG_1228:
                      17983 ; rs232cmd.c 4927               {
                      17984 ; rs232cmd.c 4928                       if ( CmdRequest)
004DA6 964842rr       17986         MOV.B   ES,#SEG( _CmdRequest )
004DAA 9908rrrr       17987         MOV.W   R0,#SOF( _CmdRequest )
004DAE 8200           17988         MOV.B   R0L,[R0]
004DB0 F358           17989         BEQ     _1264
                      17990 ; rs232cmd.c 4929                       {
                      17991 ; rs232cmd.c 4930                               if ( ParCnt)
004DB2 964842rr       17993         MOV.B   ES,#SEG( _ParCnt )
004DB6 9908rrrr       17994         MOV.W   R0,#SOF( _ParCnt )
004DBA 8200           17995         MOV.B   R0L,[R0]
004DBC F307           17996         BEQ     _1263
                      17997 ; rs232cmd.c 4931                                       SCPIError = SyntaxErr;
004DBE 964842rr       17999         MOV.B   ES,#SEG( _SCPIError )
004DC2 9908rrrr       18000         MOV.W   R0,#SOF( _SCPIError )
004DC6 BA03           18001         MOV.W   [R0],#03H
                      18002         BR      _1274
004DC8 D500B5         +18002         JMP.L   _1274
004DC8 D500B500       +18002         JMP.L   _1274
004DCC                18003 _1263:
                      18004 ; rs232cmd.c 4932                               else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 278

ADDR   CODE            LINE SOURCELINE
                      18005 ; rs232cmd.c 4933                               {
                      18006 ; rs232cmd.c 4934                                       day = Calibration.BBCalibration[Suffix[0]
                            ].Date % 100;
004DCC 964842rr       18008         MOV.B   ES,#SEG( _Suffix )
004DD0 9908rrrr       18009         MOV.W   R0,#SOF( _Suffix )
004DD4 8A00           18010         MOV.W   R0,[R0]
004DD6 E9000014       18011         MULU.W  R0,#014H
004DDA B910           18012         MOVS.W  R1,#00H
004DDC 964842rr       18013         MOV.B   ES,#SEG( _Calibration+140 )
004DE0 8D10rrrr       18014         MOV.W   R1,[R0+SOF( _Calibration+142 )]
004DE4 8D00rrrr       18015         MOV.W   R0,[R0+SOF( _Calibration+140 )]
004DE8 B930           18016         MOV.W   R3,#00H
004DEA 99280064       18017         MOV.W   R2,#064H
004DEE 8C1F02         18018         MOV.W   [R7+2],R1
004DF1 8A0F           18019         MOV.W   [R7],R0
004DF3 C4rrrrrr       18020         FCALL   __UMODL
004DF7 8C0F08         18021         MOV.W   [R7+8],R0
                      18022 ; rs232cmd.c 4935                                       month = ( Calibration.BBCalibration[Suffi
                            x[0]].Date / 100) % 100;
004DFA B930           18024         MOV.W   R3,#00H
004DFC 99280064       18025         MOV.W   R2,#064H
004E00 8953           18026         MOV.W   R5,R3
004E02 8942           18027         MOV.W   R4,R2
004E04 8C1702         18028         MOV.W   R1,[R7+2]
004E07 8A07           18029         MOV.W   R0,[R7]
004E09 C4rrrrrr       18030         FCALL   __UDIVL
004E0D 8935           18031         MOV.W   R3,R5
004E0F 8924           18032         MOV.W   R2,R4
004E11 C4rrrrrr       18033         FCALL   __UMODL
004E15 8C0F06         18034         MOV.W   [R7+6],R0
                      18035 ; rs232cmd.c 4936                                       year = ( Calibration.BBCalibration[Suffix
                            [0]].Date / 10000);
004E18 B930           18037         MOV.W   R3,#00H
004E1A 99282710       18038         MOV.W   R2,#02710H
004E1E 8C1702         18039         MOV.W   R1,[R7+2]
004E21 8A07           18040         MOV.W   R0,[R7]
004E23 C4rrrrrr       18041         FCALL   __UDIVL
004E27 8C0F04         18042         MOV.W   [R7+4],R0
                      18043 ; rs232cmd.c 4937       
                      18044 ; rs232cmd.c 4938                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
004E2A 91A8rr         18046         MOV.B   R5L,#SEG( __lc_bs )
004E2D 71BB           18047         XOR.B   R5H,R5H
004E2F 40470A         18048         LEA     R4,R7+10
004E32 8C0708         18049         MOV.W   R0,[R7+8]
004E35 0F01           18050         PUSH.W  R0
004E37 8C0708         18052         MOV.W   R0,[R7+8]
004E3A 0F01           18053         PUSH.W  R0
004E3C 8C0708         18055         MOV.W   R0,[R7+8]
004E3F 0F01           18056         PUSH.W  R0
004E41 9918rrrr       18058         MOV.W   R1,#SEG( _1174 )
004E45 9908rrrr       18059         MOV.W   R0,#SOF( _1174 )
004E49 0F03           18060         PUSH.W  R0, R1
004E4B 8915           18062         MOV.W   R1,R5
004E4D 8904           18063         MOV.W   R0,R4
                      18064         CALL    _sprintf
004E4F C4rrrrrr       +18064 ;       FCALL   _sprintf
004E53 9970000A       18065         ADD.W   R7,#0AH
                      18067 ; rs232cmd.c 4939       
                      18068 ; rs232cmd.c 4940                                       rs232puts( buffer);
004E57 8915           18070         MOV.W   R1,R5
004E59 8904           18071         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 279

ADDR   CODE            LINE SOURCELINE
                      18072         CALL    _rs232puts
004E5B C4rrrrrr       +18072 ;       FCALL   _rs232puts
                      18073 ; rs232cmd.c 4941                               }
                      18074 ; rs232cmd.c 4942                       }
004E5F FE6A           18076         BR      _1274
004E5F FE6A00         18076         BR      _1274
004E62                18077 _1264:
                      18078 ; rs232cmd.c 4943                       else
                      18079 ; rs232cmd.c 4944                       {
                      18080 ; rs232cmd.c 4945                               if ( !PasswordProtected)
004E62 964842rr       18082         MOV.B   ES,#SEG( _PasswordProtected )
004E66 9908rrrr       18083         MOV.W   R0,#SOF( _PasswordProtected )
004E6A 8A00           18084         MOV.W   R0,[R0]
004E6C F263           18085         BNE     _1274
                      18086 ; rs232cmd.c 4946                               {
                      18087 ; rs232cmd.c 4947                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
004E6E 964842rr       18089         MOV.B   ES,#SEG( _ParCnt )
004E72 9908rrrr       18090         MOV.W   R0,#SOF( _ParCnt )
004E76 8200           18091         MOV.B   R0L,[R0]
004E78 910403         18092         CMP.B   R0L,#03H
004E7B F220           18093         BNE     _1265
004E7D 9168rr         18094         MOV.B   R3L,#SEG( __lc_bs )
004E80 7177           18095         XOR.B   R3H,R3H
004E82 402704         18096         LEA     R2,R7+4
004E85 91A8rr         18097         MOV.B   R5L,#SEG( __lc_bs )
004E88 71BB           18098         XOR.B   R5H,R5H
004E8A 404706         18099         LEA     R4,R7+6
004E8D 9128rr         18100         MOV.B   R1L,#SEG( __lc_bs )
004E90 7133           18101         XOR.B   R1H,R1H
004E92 400708         18102         LEA     R0,R7+8
004E95 0F03           18103         PUSH.W  R0, R1
004E97 0F30           18105         PUSH.W  R4, R5
004E99 0F0C           18107         PUSH.W  R2, R3
004E9B 9938rrrr       18109         MOV.W   R3,#SEG( _1175 )
004E9F 9928rrrr       18110         MOV.W   R2,#SOF( _1175 )
004EA3 0F0C           18111         PUSH.W  R2, R3
004EA5 9918rrrr       18113         MOV.W   R1,#SEG( _Cmd )
004EA9 9908rrrr       18114         MOV.W   R0,#SOF( _Cmd )
                      18115         CALL    _sscanf
004EAD C4rrrrrr       +18115 ;       FCALL   _sscanf
004EB1 99700010       18116         ADD.W   R7,#010H
004EB5 99040003       18118         CMP.W   R0,#03H
004EB9 F307           18119         BEQ     _1266
004EB9 F30700         18119         BEQ     _1266
004EBC                18120 _1265:
                      18121 ; rs232cmd.c 4948                                               SCPIError = SyntaxErr;
004EBC 964842rr       18123         MOV.B   ES,#SEG( _SCPIError )
004EC0 9908rrrr       18124         MOV.W   R0,#SOF( _SCPIError )
004EC4 BA03           18125         MOV.W   [R0],#03H
004EC6 FE36           18126         BR      _1274
004EC6 FE36           18126         BR      _1274
004EC8                18127 _1266:
                      18128 ; rs232cmd.c 4949                                       else
                      18129 ; rs232cmd.c 4950                                       {
                      18130 ; rs232cmd.c 4951                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
004EC8 8C0704         18132         MOV.W   R0,[R7+4]
004ECB 8C1706         18133         MOV.W   R1,[R7+6]
004ECE 8C2708         18134         MOV.W   R2,[R7+8]
                      18135         CALL    _ValidateDate
004ED1 C4rrrrrr       +18135 ;       FCALL   _ValidateDate
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 280

ADDR   CODE            LINE SOURCELINE
004ED5 6900           18136         OR.W    R0,R0
004ED7 F208           18137         BNE     _1267
                      18138 ; rs232cmd.c 4952                                                       SCPIError = ExecErr;
004ED9 964842rr       18140         MOV.B   ES,#SEG( _SCPIError )
004EDD 9908rrrr       18141         MOV.W   R0,#SOF( _SCPIError )
004EE1 9A08001D       18142         MOV.W   [R0],#01DH
004EE5 FE27           18143         BR      _1274
004EE5 FE2700         18143         BR      _1274
004EE8                18144 _1267:
                      18145 ; rs232cmd.c 4953                                               else
                      18146 ; rs232cmd.c 4954                                               {
                      18147 ; rs232cmd.c 4955                                                       Calibration.BBCalibration
                            [Suffix[0]].Date = day + 100*month + 10000*year;
004EE8 8C0706         18149         MOV.W   R0,[R7+6]
004EEB E9000064       18150         MULU.W  R0,#064H
004EEF 0C0708         18151         ADD.W   R0,[R7+8]
004EF2 8C2704         18152         MOV.W   R2,[R7+4]
004EF5 E9202710       18153         MULU.W  R2,#02710H
004EF9 0902           18154         ADD.W   R0,R2
004EFB B910           18155         MOVS.W  R1,#00H
004EFD 964842rr       18156         MOV.B   ES,#SEG( _Suffix )
004F01 9928rrrr       18157         MOV.W   R2,#SOF( _Suffix )
004F05 8A22           18158         MOV.W   R2,[R2]
004F07 E9200014       18159         MULU.W  R2,#014H
004F0B B930           18160         MOVS.W  R3,#00H
004F0D 964842rr       18161         MOV.B   ES,#SEG( _Calibration+140 )
004F11 8D0Arrrr       18162         MOV.W   [R2+SOF( _Calibration+140 )],R0
004F15 8D1Arrrr       18163         MOV.W   [R2+SOF( _Calibration+142 )],R1
                      18164 ; rs232cmd.c 4956                                               
                      18165 ; rs232cmd.c 4957                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
004F19 9918rrrr       18167         MOV.W   R1,#SEG( _Calibration )
004F1D 9908rrrr       18168         MOV.W   R0,#SOF( _Calibration )
004F21 964842rr       18169         MOV.B   ES,#SEG( _CalibrationPtr )
004F25 9928rrrr       18170         MOV.W   R2,#SOF( _CalibrationPtr )
004F29 8A22           18171         MOV.W   R2,[R2]
004F2B 993800E2       18172         MOV.W   R3,#0E2H
                      18173         CALL    _NV_Store
004F2F C4rrrrrr       +18173 ;       FCALL   _NV_Store
                      18174 ; rs232cmd.c 4958                                               }
                      18175 ; rs232cmd.c 4959                                       }                               
                      18176 ; rs232cmd.c 4960                               }
                      18177 ; rs232cmd.c 4961                       }
                      18178 ; rs232cmd.c 4962               }
004F34                18180 _1274:
                      18181 ; rs232cmd.c 4963       }
004F34 9970001E       18183         ADD.W   R7,#01EH
004F38 2F30           18185         POP.W   R4, R5
004F3A D680           18187         RET
                      18189 ; rs232cmd.c 4964       
                      18190 ; rs232cmd.c 4965       /************************************************************************
                            **/
                      18191 ; rs232cmd.c 4966       /* FactBBGenVersion                                                      
                                                                                                                             
                                       RS232CMD.C */
                      18192 ; rs232cmd.c 4967       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18193 ; rs232cmd.c 4968       /* Author:              Kim Engedahl, DEV, 000504                        
                                                                                                                             
                                  */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 281

ADDR   CODE            LINE SOURCELINE
                      18194 ; rs232cmd.c 4969       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      18195 ; rs232cmd.c 4970       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18196 ; rs232cmd.c 4971       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      18197 ; rs232cmd.c 4972       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      18198 ; rs232cmd.c 4973       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      18199 ; rs232cmd.c 4974       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      18200 ; rs232cmd.c 4975       /************************************************************************
                            **/
                      18201 ; rs232cmd.c 4976       void FactBBGenVersion( void)
                      18202 ; rs232cmd.c 4977       {
                      18203         ALIGN   1
                      18205         PUBLIC  _FactBBGenVersion
004F3C                18206 _FactBBGenVersion:
004F3C 0F30           18210         PUSH.W  R4, R5
004F3E 9972000A       18212         SUB.W   R7,#0AH
                      18215 ; rs232cmd.c 4978               char result[10];
                      18216 ; rs232cmd.c 4979       
                      18217 ; rs232cmd.c 4980               if ( CmdExecute && !SCPIError)
004F42 964842rr       18219         MOV.B   ES,#SEG( _CmdExecute )
004F46 9908rrrr       18220         MOV.W   R0,#SOF( _CmdExecute )
004F4A 8200           18221         MOV.B   R0L,[R0]
004F4C F33D           18222         BEQ     _1285
004F4E 964842rr       18223         MOV.B   ES,#SEG( _SCPIError )
004F52 9908rrrr       18224         MOV.W   R0,#SOF( _SCPIError )
004F56 8A00           18225         MOV.W   R0,[R0]
004F58 F237           18226         BNE     _1285
                      18227 ; rs232cmd.c 4981               {
                      18228 ; rs232cmd.c 4982                       if ( CmdRequest)
004F5A 964842rr       18230         MOV.B   ES,#SEG( _CmdRequest )
004F5E 9908rrrr       18231         MOV.W   R0,#SOF( _CmdRequest )
004F62 8200           18232         MOV.B   R0L,[R0]
004F64 F32C           18233         BEQ     _1280
                      18234 ; rs232cmd.c 4983                       {
                      18235 ; rs232cmd.c 4984                               if ( ParCnt || Suffix[0])
004F66 964842rr       18237         MOV.B   ES,#SEG( _ParCnt )
004F6A 9908rrrr       18238         MOV.W   R0,#SOF( _ParCnt )
004F6E 8200           18239         MOV.B   R0L,[R0]
004F70 F206           18240         BNE     _1277
004F72 964842rr       18241         MOV.B   ES,#SEG( _Suffix )
004F76 9908rrrr       18242         MOV.W   R0,#SOF( _Suffix )
004F7A 8A00           18243         MOV.W   R0,[R0]
004F7C F306           18244         BEQ     _1278
004F7C F306           18244         BEQ     _1278
004F7E                18245 _1277:
                      18246 ; rs232cmd.c 4985                                       SCPIError = SyntaxErr;
004F7E 964842rr       18248         MOV.B   ES,#SEG( _SCPIError )
004F82 9908rrrr       18249         MOV.W   R0,#SOF( _SCPIError )
004F86 BA03           18250         MOV.W   [R0],#03H
004F88 FE1F           18251         BR      _1285
004F88 FE1F           18251         BR      _1285
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 282

ADDR   CODE            LINE SOURCELINE
004F8A                18252 _1278:
                      18253 ; rs232cmd.c 4986                               else
                      18254 ; rs232cmd.c 4987                               {
                      18255 ; rs232cmd.c 4988                                       if ( BBVersion( result) == OK)
004F8A 91A8rr         18257         MOV.B   R5L,#SEG( __lc_bs )
004F8D 71BB           18258         XOR.B   R5H,R5H
004F8F 8947           18259         MOV.W   R4,R7
004F91 8915           18260         MOV.W   R1,R5
004F93 8904           18261         MOV.W   R0,R4
                      18262         CALL    _BBVersion
004F95 C4rrrrrr       +18262 ;       FCALL   _BBVersion
004F99 9904FFFF       18263         CMP.W   R0,#0FFFFH
004F9D F209           18264         BNE     _1279
                      18265 ; rs232cmd.c 4989                                       {
                      18266 ; rs232cmd.c 4990                                               rs232puts( result);
004F9F 8915           18268         MOV.W   R1,R5
004FA1 8904           18269         MOV.W   R0,R4
                      18270         CALL    _rs232puts
004FA3 C4rrrrrr       +18270 ;       FCALL   _rs232puts
                      18271 ; rs232cmd.c 4991                                               rs232putchar( '\n');
004FA7 91080A         18273         MOV.B   R0L,#0AH
                      18274         CALL    _rs232putchar
004FAA C4rrrrrr       +18274 ;       FCALL   _rs232putchar
                      18275 ; rs232cmd.c 4992                                       }
004FAE FE0C           18277         BR      _1285
004FAE FE0C           18277         BR      _1285
004FB0                18278 _1279:
                      18279 ; rs232cmd.c 4993                                       else
                      18280 ; rs232cmd.c 4994                                               SCPIError = ExecErr;             
                                   
004FB0 964842rr       18282         MOV.B   ES,#SEG( _SCPIError )
004FB4 9908rrrr       18283         MOV.W   R0,#SOF( _SCPIError )
004FB8 9A08001D       18284         MOV.W   [R0],#01DH
                      18285 ; rs232cmd.c 4995                               }
                      18286 ; rs232cmd.c 4996                       }
004FBC FE05           18288         BR      _1285
004FBC FE05           18288         BR      _1285
004FBE                18289 _1280:
                      18290 ; rs232cmd.c 4997                       else
                      18291 ; rs232cmd.c 4998                               SCPIError = SyntaxErr;
004FBE 964842rr       18293         MOV.B   ES,#SEG( _SCPIError )
004FC2 9908rrrr       18294         MOV.W   R0,#SOF( _SCPIError )
004FC6 BA03           18295         MOV.W   [R0],#03H
                      18296 ; rs232cmd.c 4999               }
004FC8                18298 _1285:
                      18299 ; rs232cmd.c 5000       }
004FC8 9970000A       18301         ADD.W   R7,#0AH
004FCC 2F30           18303         POP.W   R4, R5
004FCE D680           18305         RET
                      18307 ; rs232cmd.c 5001       
                      18308 ; rs232cmd.c 5002       /************************************************************************
                            **/
                      18309 ; rs232cmd.c 5003       /* FactBBGenSignal                                                       
                                                                                                                             
                                       RS232CMD.C */
                      18310 ; rs232cmd.c 5004       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18311 ; rs232cmd.c 5005       /* Author:              Kim Engedahl, DEV, 000503                        
                                                                                                                             
                                  */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 283

ADDR   CODE            LINE SOURCELINE
                      18312 ; rs232cmd.c 5006       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      18313 ; rs232cmd.c 5007       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18314 ; rs232cmd.c 5008       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      18315 ; rs232cmd.c 5009       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      18316 ; rs232cmd.c 5010       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      18317 ; rs232cmd.c 5011       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      18318 ; rs232cmd.c 5012       /************************************************************************
                            **/
                      18319 ; rs232cmd.c 5013       void FactBBGenSignal( void)
                      18320 ; rs232cmd.c 5014       {
                      18321         ALIGN   1
                      18323         PUBLIC  _FactBBGenSignal
004FD0                18324 _FactBBGenSignal:
                      18330 ; rs232cmd.c 5015               int signal;
                      18331 ; rs232cmd.c 5016       
                      18332 ; rs232cmd.c 5017               if ( CmdExecute && !SCPIError)
004FD0 964842rr       18334         MOV.B   ES,#SEG( _CmdExecute )
004FD4 9908rrrr       18335         MOV.W   R0,#SOF( _CmdExecute )
004FD8 8200           18336         MOV.B   R0L,[R0]
004FDA F349           18337         BEQ     _1298
004FDC 964842rr       18338         MOV.B   ES,#SEG( _SCPIError )
004FE0 9908rrrr       18339         MOV.W   R0,#SOF( _SCPIError )
004FE4 8A00           18340         MOV.W   R0,[R0]
004FE6 F243           18341         BNE     _1298
                      18342 ; rs232cmd.c 5018               {
                      18343 ; rs232cmd.c 5019                       if ( CmdRequest)
004FE8 964842rr       18345         MOV.B   ES,#SEG( _CmdRequest )
004FEC 9908rrrr       18346         MOV.W   R0,#SOF( _CmdRequest )
004FF0 8200           18347         MOV.B   R0L,[R0]
004FF2 F306           18348         BEQ     _1287
                      18349 ; rs232cmd.c 5020                               SCPIError = SyntaxErr;
004FF4 964842rr       18351         MOV.B   ES,#SEG( _SCPIError )
004FF8 9908rrrr       18352         MOV.W   R0,#SOF( _SCPIError )
004FFC BA03           18353         MOV.W   [R0],#03H
004FFE D680           18354         RET
004FFE D680           18354         RET
005000                18355 _1287:
                      18356 ; rs232cmd.c 5021                       else
                      18357 ; rs232cmd.c 5022                       {
                      18358 ; rs232cmd.c 5023                               if ( !PasswordProtected)
005000 964842rr       18360         MOV.B   ES,#SEG( _PasswordProtected )
005004 9908rrrr       18361         MOV.W   R0,#SOF( _PasswordProtected )
005008 8A00           18362         MOV.W   R0,[R0]
00500A F231           18363         BNE     _1298
                      18364 ; rs232cmd.c 5024                               {
                      18365 ; rs232cmd.c 5025                                       if ( ParCnt != 1)
00500C 964842rr       18367         MOV.B   ES,#SEG( _ParCnt )
005010 9908rrrr       18368         MOV.W   R0,#SOF( _ParCnt )
005014 8200           18369         MOV.B   R0L,[R0]
005016 910401         18370         CMP.B   R0L,#01H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 284

ADDR   CODE            LINE SOURCELINE
005019 F307           18371         BEQ     _1288
                      18372 ; rs232cmd.c 5026                                               SCPIError = SyntaxErr;
00501B 964842rr       18374         MOV.B   ES,#SEG( _SCPIError )
00501F 9908rrrr       18375         MOV.W   R0,#SOF( _SCPIError )
005023 BA03           18376         MOV.W   [R0],#03H
005025 D680           18377         RET
005025 D68000         18377         RET
005028                18378 _1288:
                      18379 ; rs232cmd.c 5027                                       else
                      18380 ; rs232cmd.c 5028                                       {
                      18381 ; rs232cmd.c 5029                                               signal = FindParameter( Cmd, Fact
                            BBGenSignalPar);
005028 9918rrrr       18383         MOV.W   R1,#SEG( _Cmd )
00502C 9908rrrr       18384         MOV.W   R0,#SOF( _Cmd )
005030 9938rrrr       18385         MOV.W   R3,#SEG( _FactBBGenSignalPar )
005034 9928rrrr       18386         MOV.W   R2,#SOF( _FactBBGenSignalPar )
005038 C5086E         18387         CALL    _FindParameter
                      18389 ; rs232cmd.c 5030               
                      18390 ; rs232cmd.c 5031                                               switch ( signal)
00503B 99040000       18392         CMP.W   R0,#00H
00503F F305           18393         BEQ     _1289
005041 99040001       18394         CMP.W   R0,#01H
005045 F308           18395         BEQ     _1290
005047 FE0D           18396         BR      _1291
                      18397 ; rs232cmd.c 5032                                               {
                      18398 ; rs232cmd.c 5033                                                       case 0:
00504A                18400 _1289:
                      18401 ; rs232cmd.c 5034                                                               BBControlPort = 0
                            ;
00504A 964842rr       18403         MOV.B   ES,#SEG( _BBControlPort )
00504E 9908rrrr       18404         MOV.W   R0,#SOF( _BBControlPort )
005052 BA00           18405         MOV.W   [R0],#00H
                      18406 ; rs232cmd.c 5035                                                               break;
005054 D680           18408         RET
                      18409 ; rs232cmd.c 5036       
                      18410 ; rs232cmd.c 5037                                                       case 1:
005056                18412 _1290:
                      18413 ; rs232cmd.c 5038                                                               BBControlPort = 1
                            ;
005056 964842rr       18415         MOV.B   ES,#SEG( _BBControlPort )
00505A 9908rrrr       18416         MOV.W   R0,#SOF( _BBControlPort )
00505E BA01           18417         MOV.W   [R0],#01H
                      18418 ; rs232cmd.c 5039                                                               break;
005060 D680           18420         RET
                      18421 ; rs232cmd.c 5040       
                      18422 ; rs232cmd.c 5041                                                       default:
005062                18424 _1291:
                      18425 ; rs232cmd.c 5042                                                               SCPIError = DataO
                            utOfRange;
005062 964842rr       18427         MOV.B   ES,#SEG( _SCPIError )
005066 9908rrrr       18428         MOV.W   R0,#SOF( _SCPIError )
00506A 9A080021       18429         MOV.W   [R0],#021H
                      18430 ; rs232cmd.c 5043                                                               break;
                      18431 ; rs232cmd.c 5044                                               }
                      18432 ; rs232cmd.c 5045                                       }
                      18433 ; rs232cmd.c 5046                               }
                      18434 ; rs232cmd.c 5047                       }
                      18435 ; rs232cmd.c 5048               }
00506E                18437 _1298:
                      18438 ; rs232cmd.c 5049       }
00506E D680           18440         RET
                      18443 ; rs232cmd.c 5050       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 285

ADDR   CODE            LINE SOURCELINE
                      18444 ; rs232cmd.c 5051       /************************************************************************
                            **/
                      18445 ; rs232cmd.c 5052       /* FactBBGenPhase                                                        
                                                                                                                             
                                               RS232CMD.C */
                      18446 ; rs232cmd.c 5053       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18447 ; rs232cmd.c 5054       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      18448 ; rs232cmd.c 5055       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      18449 ; rs232cmd.c 5056       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18450 ; rs232cmd.c 5057       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      18451 ; rs232cmd.c 5058       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      18452 ; rs232cmd.c 5059       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      18453 ; rs232cmd.c 5060       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      18454 ; rs232cmd.c 5061       /************************************************************************
                            **/
                      18455 ; rs232cmd.c 5062       void FactBBGenPhase( void)
                      18456 ; rs232cmd.c 5063       {
                      18457         ALIGN   1
                      18459         PUBLIC  _FactBBGenPhase
005070                18460 _FactBBGenPhase:
005070 0F30           18464         PUSH.W  R4, R5
005072 99720026       18466         SUB.W   R7,#026H
                      18471 ; rs232cmd.c 5064               char buffer[30];
                      18472 ; rs232cmd.c 5065               UL PhaseG, PhaseM;
                      18473 ; rs232cmd.c 5066       
                      18474 ; rs232cmd.c 5067               if ( CmdExecute && !SCPIError)
005076 964842rr       18476         MOV.B   ES,#SEG( _CmdExecute )
00507A 9908rrrr       18477         MOV.W   R0,#SOF( _CmdExecute )
00507E 8200           18478         MOV.B   R0L,[R0]
                      18479         BEQ     _1309
005080 F202           +18479 ;       BNE     _LG_1268
005082 D5009A         +18479 ;       JMP.L   _1309
005086 D5009A00       +18479 ;       JMP.L   _1309
005086                +18479 _LG_1268:
005086 964842rr       18480         MOV.B   ES,#SEG( _SCPIError )
00508A 9908rrrr       18481         MOV.W   R0,#SOF( _SCPIError )
00508E 8A00           18482         MOV.W   R0,[R0]
                      18483         BNE     _1309
005090 F302           +18483 ;       BEQ     _LG_1270
005092 D50092         +18483 ;       JMP.L   _1309
005096 D5009200       +18483 ;       JMP.L   _1309
005096                +18483 _LG_1270:
                      18484 ; rs232cmd.c 5068               {
                      18485 ; rs232cmd.c 5069                       if ( CmdRequest)
005096 964842rr       18487         MOV.B   ES,#SEG( _CmdRequest )
00509A 9908rrrr       18488         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 286

ADDR   CODE            LINE SOURCELINE
00509E 8200           18489         MOV.B   R0L,[R0]
0050A0 F336           18490         BEQ     _1301
                      18491 ; rs232cmd.c 5070                       {
                      18492 ; rs232cmd.c 5071                               if ( ParCnt)
0050A2 964842rr       18494         MOV.B   ES,#SEG( _ParCnt )
0050A6 9908rrrr       18495         MOV.W   R0,#SOF( _ParCnt )
0050AA 8200           18496         MOV.B   R0L,[R0]
0050AC F306           18497         BEQ     _1300
                      18498 ; rs232cmd.c 5072                                       SCPIError = SyntaxErr;
0050AE 964842rr       18500         MOV.B   ES,#SEG( _SCPIError )
0050B2 9908rrrr       18501         MOV.W   R0,#SOF( _SCPIError )
0050B6 BA03           18502         MOV.W   [R0],#03H
0050B8 FE7F           18503         BR      _1309
0050B8 FE7F           18503         BR      _1309
0050BA                18504 _1300:
                      18505 ; rs232cmd.c 5073                               else
                      18506 ; rs232cmd.c 5074                               {
                      18507 ; rs232cmd.c 5075                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .BBCalibration[Suffix[0]].PhaseG, 
                      18508 ; rs232cmd.c 5076                                                                                
                                                                                               Calibration.BBCalibration[Suff
                            ix[0]].PhaseM);
0050BA 91A8rr         18510         MOV.B   R5L,#SEG( __lc_bs )
0050BD 71BB           18511         XOR.B   R5H,R5H
0050BF 8947           18512         MOV.W   R4,R7
0050C1 964842rr       18513         MOV.B   ES,#SEG( _Suffix )
0050C5 9908rrrr       18514         MOV.W   R0,#SOF( _Suffix )
0050C9 8A00           18515         MOV.W   R0,[R0]
0050CB E9000014       18516         MULU.W  R0,#014H
0050CF B910           18517         MOVS.W  R1,#00H
0050D1 964842rr       18518         MOV.B   ES,#SEG( _Calibration+144 )
0050D5 8D20rrrr       18519         MOV.W   R2,[R0+SOF( _Calibration+144 )]
0050D9 8D30rrrr       18520         MOV.W   R3,[R0+SOF( _Calibration+146 )]
0050DD 964842rr       18521         MOV.B   ES,#SEG( _Calibration+150 )
0050E1 8D10rrrr       18522         MOV.W   R1,[R0+SOF( _Calibration+152 )]
0050E5 8D00rrrr       18523         MOV.W   R0,[R0+SOF( _Calibration+150 )]
0050E9 0F03           18524         PUSH.W  R0, R1
0050EB 0F0C           18526         PUSH.W  R2, R3
0050ED 9918rrrr       18528         MOV.W   R1,#SEG( _1238 )
0050F1 9908rrrr       18529         MOV.W   R0,#SOF( _1238 )
0050F5 0F03           18530         PUSH.W  R0, R1
0050F7 8915           18532         MOV.W   R1,R5
0050F9 8904           18533         MOV.W   R0,R4
                      18534         CALL    _sprintf
0050FB C4rrrrrr       +18534 ;       FCALL   _sprintf
0050FF 9970000C       18535         ADD.W   R7,#0CH
                      18537 ; rs232cmd.c 5077                                       rs232puts( buffer);
005103 8915           18539         MOV.W   R1,R5
005105 8904           18540         MOV.W   R0,R4
                      18541         CALL    _rs232puts
005107 C4rrrrrr       +18541 ;       FCALL   _rs232puts
                      18542 ; rs232cmd.c 5078                               }
                      18543 ; rs232cmd.c 5079                       }
00510B FE56           18545         BR      _1309
00510B FE5600         18545         BR      _1309
00510E                18546 _1301:
                      18547 ; rs232cmd.c 5080                       else
                      18548 ; rs232cmd.c 5081                       {
                      18549 ; rs232cmd.c 5082                               if ( !PasswordProtected)
00510E 964842rr       18551         MOV.B   ES,#SEG( _PasswordProtected )
005112 9908rrrr       18552         MOV.W   R0,#SOF( _PasswordProtected )
005116 8A00           18553         MOV.W   R0,[R0]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 287

ADDR   CODE            LINE SOURCELINE
005118 F24F           18554         BNE     _1309
                      18555 ; rs232cmd.c 5083                               {
                      18556 ; rs232cmd.c 5084                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
00511A 964842rr       18558         MOV.B   ES,#SEG( _ParCnt )
00511E 9908rrrr       18559         MOV.W   R0,#SOF( _ParCnt )
005122 8200           18560         MOV.B   R0L,[R0]
005124 910402         18561         CMP.B   R0L,#02H
005127 F21B           18562         BNE     _1302
005129 9918rrrr       18563         MOV.W   R1,#SEG( _Cmd )
00512D 9908rrrr       18564         MOV.W   R0,#SOF( _Cmd )
005131 9168rr         18565         MOV.B   R3L,#SEG( __lc_bs )
005134 7177           18566         XOR.B   R3H,R3H
005136 40271E         18567         LEA     R2,R7+30
005139 91A8rr         18568         MOV.B   R5L,#SEG( __lc_bs )
00513C 71BB           18569         XOR.B   R5H,R5H
00513E 404722         18570         LEA     R4,R7+34
005141 0F30           18571         PUSH.W  R4, R5
005143 0F0C           18573         PUSH.W  R2, R3
005145 9938rrrr       18575         MOV.W   R3,#SEG( _1037 )
005149 9928rrrr       18576         MOV.W   R2,#SOF( _1037 )
00514D 0F0C           18577         PUSH.W  R2, R3
                      18579         CALL    _sscanf
00514F C4rrrrrr       +18579 ;       FCALL   _sscanf
005153 9970000C       18580         ADD.W   R7,#0CH
005157 99040002       18582         CMP.W   R0,#02H
00515B F307           18583         BEQ     _1303
00515B F30700         18583         BEQ     _1303
00515E                18584 _1302:
                      18585 ; rs232cmd.c 5085                                               SCPIError = SyntaxErr;
00515E 964842rr       18587         MOV.B   ES,#SEG( _SCPIError )
005162 9908rrrr       18588         MOV.W   R0,#SOF( _SCPIError )
005166 BA03           18589         MOV.W   [R0],#03H
005168 FE27           18590         BR      _1309
005168 FE27           18590         BR      _1309
00516A                18591 _1303:
                      18592 ; rs232cmd.c 5086                                       else
                      18593 ; rs232cmd.c 5087                                       {
                      18594 ; rs232cmd.c 5088                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseG = PhaseG;
00516A 964842rr       18596         MOV.B   ES,#SEG( _Suffix )
00516E 9908rrrr       18597         MOV.W   R0,#SOF( _Suffix )
005172 8A00           18598         MOV.W   R0,[R0]
005174 E9000014       18599         MULU.W  R0,#014H
005178 B910           18600         MOVS.W  R1,#00H
00517A 8C3720         18601         MOV.W   R3,[R7+32]
00517D 8C271E         18602         MOV.W   R2,[R7+30]
005180 964842rr       18603         MOV.B   ES,#SEG( _Calibration+144 )
005184 8D28rrrr       18604         MOV.W   [R0+SOF( _Calibration+144 )],R2
005188 8D38rrrr       18605         MOV.W   [R0+SOF( _Calibration+146 )],R3
                      18606 ; rs232cmd.c 5089                                               Calibration.BBCalibration[Suffix[
                            0]].PhaseM = PhaseM;
00518C 8C3724         18608         MOV.W   R3,[R7+36]
00518F 8C2722         18609         MOV.W   R2,[R7+34]
005192 964842rr       18610         MOV.B   ES,#SEG( _Calibration+150 )
005196 8D28rrrr       18611         MOV.W   [R0+SOF( _Calibration+150 )],R2
00519A 8D38rrrr       18612         MOV.W   [R0+SOF( _Calibration+152 )],R3
                      18613 ; rs232cmd.c 5090                                       
                      18614 ; rs232cmd.c 5091                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
00519E 9918rrrr       18616         MOV.W   R1,#SEG( _Calibration )
0051A2 9908rrrr       18617         MOV.W   R0,#SOF( _Calibration )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 288

ADDR   CODE            LINE SOURCELINE
0051A6 964842rr       18618         MOV.B   ES,#SEG( _CalibrationPtr )
0051AA 9928rrrr       18619         MOV.W   R2,#SOF( _CalibrationPtr )
0051AE 8A22           18620         MOV.W   R2,[R2]
0051B0 993800E2       18621         MOV.W   R3,#0E2H
                      18622         CALL    _NV_Store
0051B4 C4rrrrrr       +18622 ;       FCALL   _NV_Store
                      18623 ; rs232cmd.c 5092                                       }
                      18624 ; rs232cmd.c 5093                               }
                      18625 ; rs232cmd.c 5094                       }
                      18626 ; rs232cmd.c 5095               }
0051B8                18628 _1309:
                      18629 ; rs232cmd.c 5096       }
0051B8 99700026       18631         ADD.W   R7,#026H
0051BC 2F30           18633         POP.W   R4, R5
0051BE D680           18635         RET
                      18637 ; rs232cmd.c 5097       
                      18638 ; rs232cmd.c 5098       /************************************************************************
                            **/
                      18639 ; rs232cmd.c 5099       /* FactBBGenScHPhase                                                     
                                                                                                                             
                               RS232CMD.C */
                      18640 ; rs232cmd.c 5100       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18641 ; rs232cmd.c 5101       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      18642 ; rs232cmd.c 5102       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      18643 ; rs232cmd.c 5103       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18644 ; rs232cmd.c 5104       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      18645 ; rs232cmd.c 5105       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      18646 ; rs232cmd.c 5106       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      18647 ; rs232cmd.c 5107       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      18648 ; rs232cmd.c 5108       /************************************************************************
                            **/
                      18649 ; rs232cmd.c 5109       void FactBBGenScHPhase( void)
                      18650 ; rs232cmd.c 5110       {
                      18651         ALIGN   1
                      18653         PUBLIC  _FactBBGenScHPhase
0051C0                18654 _FactBBGenScHPhase:
0051C0 0F30           18658         PUSH.W  R4, R5
0051C2 99720022       18660         SUB.W   R7,#022H
                      18665 ; rs232cmd.c 5111               char buffer[30];
                      18666 ; rs232cmd.c 5112               UI ScHPhaseG, ScHPhaseM;
                      18667 ; rs232cmd.c 5113       
                      18668 ; rs232cmd.c 5114               if ( CmdExecute && !SCPIError)
0051C6 964842rr       18670         MOV.B   ES,#SEG( _CmdExecute )
0051CA 9908rrrr       18671         MOV.W   R0,#SOF( _CmdExecute )
0051CE 8200           18672         MOV.B   R0L,[R0]
                      18673         BEQ     _1323
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 289

ADDR   CODE            LINE SOURCELINE
0051D0 F202           +18673 ;       BNE     _LG_1282
0051D2 D50097         +18673 ;       JMP.L   _1323
0051D6 D5009700       +18673 ;       JMP.L   _1323
0051D6                +18673 _LG_1282:
0051D6 964842rr       18674         MOV.B   ES,#SEG( _SCPIError )
0051DA 9908rrrr       18675         MOV.W   R0,#SOF( _SCPIError )
0051DE 8A00           18676         MOV.W   R0,[R0]
                      18677         BNE     _1323
0051E0 F302           +18677 ;       BEQ     _LG_1284
0051E2 D5008F         +18677 ;       JMP.L   _1323
0051E6 D5008F00       +18677 ;       JMP.L   _1323
0051E6                +18677 _LG_1284:
                      18678 ; rs232cmd.c 5115               {
                      18679 ; rs232cmd.c 5116                       if ( CmdRequest)
0051E6 964842rr       18681         MOV.B   ES,#SEG( _CmdRequest )
0051EA 9908rrrr       18682         MOV.W   R0,#SOF( _CmdRequest )
0051EE 8200           18683         MOV.B   R0L,[R0]
0051F0 F332           18684         BEQ     _1315
                      18685 ; rs232cmd.c 5117                       {
                      18686 ; rs232cmd.c 5118                               if ( ParCnt)
0051F2 964842rr       18688         MOV.B   ES,#SEG( _ParCnt )
0051F6 9908rrrr       18689         MOV.W   R0,#SOF( _ParCnt )
0051FA 8200           18690         MOV.B   R0L,[R0]
0051FC F306           18691         BEQ     _1314
                      18692 ; rs232cmd.c 5119                                       SCPIError = SyntaxErr;
0051FE 964842rr       18694         MOV.B   ES,#SEG( _SCPIError )
005202 9908rrrr       18695         MOV.W   R0,#SOF( _SCPIError )
005206 BA03           18696         MOV.W   [R0],#03H
005208 FE7C           18697         BR      _1323
005208 FE7C           18697         BR      _1323
00520A                18698 _1314:
                      18699 ; rs232cmd.c 5120                               else
                      18700 ; rs232cmd.c 5121                               {
                      18701 ; rs232cmd.c 5122                                       sprintf( buffer, "%u,%u\n", Calibration.B
                            BCalibration[Suffix[0]].ScHPhaseG, 
                      18702 ; rs232cmd.c 5123                                                                                
                                                                                       Calibration.BBCalibration[Suffix[0]].S
                            cHPhaseM);
00520A 91A8rr         18704         MOV.B   R5L,#SEG( __lc_bs )
00520D 71BB           18705         XOR.B   R5H,R5H
00520F 8947           18706         MOV.W   R4,R7
005211 964842rr       18707         MOV.B   ES,#SEG( _Suffix )
005215 9908rrrr       18708         MOV.W   R0,#SOF( _Suffix )
005219 8A00           18709         MOV.W   R0,[R0]
00521B E9000014       18710         MULU.W  R0,#014H
00521F B910           18711         MOVS.W  R1,#00H
005221 964842rr       18712         MOV.B   ES,#SEG( _Calibration+148 )
005225 8D20rrrr       18713         MOV.W   R2,[R0+SOF( _Calibration+148 )]
005229 964842rr       18714         MOV.B   ES,#SEG( _Calibration+154 )
00522D 8D00rrrr       18715         MOV.W   R0,[R0+SOF( _Calibration+154 )]
005231 0F01           18716         PUSH.W  R0
005233 0F04           18718         PUSH.W  R2
005235 9918rrrr       18720         MOV.W   R1,#SEG( _1312 )
005239 9908rrrr       18721         MOV.W   R0,#SOF( _1312 )
00523D 0F03           18722         PUSH.W  R0, R1
00523F 8915           18724         MOV.W   R1,R5
005241 8904           18725         MOV.W   R0,R4
                      18726         CALL    _sprintf
005243 C4rrrrrr       +18726 ;       FCALL   _sprintf
005247 99700008       18727         ADD.W   R7,#08H
                      18729 ; rs232cmd.c 5124                                       rs232puts( buffer);
00524B 8915           18731         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 290

ADDR   CODE            LINE SOURCELINE
00524D 8904           18732         MOV.W   R0,R4
                      18733         CALL    _rs232puts
00524F C4rrrrrr       +18733 ;       FCALL   _rs232puts
                      18734 ; rs232cmd.c 5125                               }
                      18735 ; rs232cmd.c 5126                       }
005253 FE57           18737         BR      _1323
005253 FE5700         18737         BR      _1323
005256                18738 _1315:
                      18739 ; rs232cmd.c 5127                       else
                      18740 ; rs232cmd.c 5128                       {
                      18741 ; rs232cmd.c 5129                               if ( !PasswordProtected)
005256 964842rr       18743         MOV.B   ES,#SEG( _PasswordProtected )
00525A 9908rrrr       18744         MOV.W   R0,#SOF( _PasswordProtected )
00525E 8A00           18745         MOV.W   R0,[R0]
005260 F250           18746         BNE     _1323
                      18747 ; rs232cmd.c 5130                               {
                      18748 ; rs232cmd.c 5131                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005262 964842rr       18750         MOV.B   ES,#SEG( _ParCnt )
005266 9908rrrr       18751         MOV.W   R0,#SOF( _ParCnt )
00526A 8200           18752         MOV.B   R0L,[R0]
00526C 910402         18753         CMP.B   R0L,#02H
00526F F21B           18754         BNE     _1316
005271 9918rrrr       18755         MOV.W   R1,#SEG( _Cmd )
005275 9908rrrr       18756         MOV.W   R0,#SOF( _Cmd )
005279 9168rr         18757         MOV.B   R3L,#SEG( __lc_bs )
00527C 7177           18758         XOR.B   R3H,R3H
00527E 40271E         18759         LEA     R2,R7+30
005281 91A8rr         18760         MOV.B   R5L,#SEG( __lc_bs )
005284 71BB           18761         XOR.B   R5H,R5H
005286 404720         18762         LEA     R4,R7+32
005289 0F30           18763         PUSH.W  R4, R5
00528B 0F0C           18765         PUSH.W  R2, R3
00528D 9938rrrr       18767         MOV.W   R3,#SEG( _1313 )
005291 9928rrrr       18768         MOV.W   R2,#SOF( _1313 )
005295 0F0C           18769         PUSH.W  R2, R3
                      18771         CALL    _sscanf
005297 C4rrrrrr       +18771 ;       FCALL   _sscanf
00529B 9970000C       18772         ADD.W   R7,#0CH
00529F 99040002       18774         CMP.W   R0,#02H
0052A3 F307           18775         BEQ     _1317
0052A3 F30700         18775         BEQ     _1317
0052A6                18776 _1316:
                      18777 ; rs232cmd.c 5132                                               SCPIError = SyntaxErr;
0052A6 964842rr       18779         MOV.B   ES,#SEG( _SCPIError )
0052AA 9908rrrr       18780         MOV.W   R0,#SOF( _SCPIError )
0052AE BA03           18781         MOV.W   [R0],#03H
0052B0 FE28           18782         BR      _1323
0052B0 FE28           18782         BR      _1323
0052B2                18783 _1317:
                      18784 ; rs232cmd.c 5133                                       else
                      18785 ; rs232cmd.c 5134                                       {
                      18786 ; rs232cmd.c 5135                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseG = ScHPhaseG;
0052B2 964842rr       18788         MOV.B   ES,#SEG( _Suffix )
0052B6 9908rrrr       18789         MOV.W   R0,#SOF( _Suffix )
0052BA 8A00           18790         MOV.W   R0,[R0]
0052BC E9000014       18791         MULU.W  R0,#014H
0052C0 B910           18792         MOVS.W  R1,#00H
0052C2 8C271E         18793         MOV.W   R2,[R7+30]
0052C5 964842rr       18794         MOV.B   ES,#SEG( _Calibration+148 )
0052C9 8D28rrrr       18795         MOV.W   [R0+SOF( _Calibration+148 )],R2
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 291

ADDR   CODE            LINE SOURCELINE
                      18796 ; rs232cmd.c 5136                                               Calibration.BBCalibration[Suffix[
                            0]].ScHPhaseM = ScHPhaseM;
0052CD 964842rr       18798         MOV.B   ES,#SEG( _Suffix )
0052D1 9908rrrr       18799         MOV.W   R0,#SOF( _Suffix )
0052D5 8A00           18800         MOV.W   R0,[R0]
0052D7 E9000014       18801         MULU.W  R0,#014H
0052DB B910           18802         MOVS.W  R1,#00H
0052DD 8C2720         18803         MOV.W   R2,[R7+32]
0052E0 964842rr       18804         MOV.B   ES,#SEG( _Calibration+154 )
0052E4 8D28rrrr       18805         MOV.W   [R0+SOF( _Calibration+154 )],R2
                      18806 ; rs232cmd.c 5137                                       
                      18807 ; rs232cmd.c 5138                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0052E8 9918rrrr       18809         MOV.W   R1,#SEG( _Calibration )
0052EC 9908rrrr       18810         MOV.W   R0,#SOF( _Calibration )
0052F0 964842rr       18811         MOV.B   ES,#SEG( _CalibrationPtr )
0052F4 9928rrrr       18812         MOV.W   R2,#SOF( _CalibrationPtr )
0052F8 8A22           18813         MOV.W   R2,[R2]
0052FA 993800E2       18814         MOV.W   R3,#0E2H
                      18815         CALL    _NV_Store
0052FE C4rrrrrr       +18815 ;       FCALL   _NV_Store
                      18816 ; rs232cmd.c 5139                                       }
                      18817 ; rs232cmd.c 5140                               }
                      18818 ; rs232cmd.c 5141                       }
                      18819 ; rs232cmd.c 5142               }
005302                18821 _1323:
                      18822 ; rs232cmd.c 5143       }
005302 99700022       18824         ADD.W   R7,#022H
005306 2F30           18826         POP.W   R4, R5
005308 D680           18828         RET
                      18830 ; rs232cmd.c 5144       
                      18831 ; rs232cmd.c 5145       /************************************************************************
                            **/
                      18832 ; rs232cmd.c 5146       /* FactBBGenDAC                                                          
                                                                                                                             
                                               RS232CMD.C */
                      18833 ; rs232cmd.c 5147       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18834 ; rs232cmd.c 5148       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      18835 ; rs232cmd.c 5149       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      18836 ; rs232cmd.c 5150       /*                                                                       
                                                                                                                             
                                                                                                                  
                      18837 ; rs232cmd.c 5151       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      18838 ; rs232cmd.c 5152       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      18839 ; rs232cmd.c 5153       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      18840 ; rs232cmd.c 5154       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      18841 ; rs232cmd.c 5155       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 292

ADDR   CODE            LINE SOURCELINE
                      18842 ; rs232cmd.c 5156       void FactBBGenDAC( void)
                      18843 ; rs232cmd.c 5157       {
                      18844         ALIGN   1
                      18846         PUBLIC  _FactBBGenDAC
00530A                18847 _FactBBGenDAC:
00530A 0F30           18851         PUSH.W  R4, R5
00530C 99720024       18853         SUB.W   R7,#024H
                      18859 ; rs232cmd.c 5158               char buffer[30];
                      18860 ; rs232cmd.c 5159               UI DACGain, DACOffset, DACLevel;
                      18861 ; rs232cmd.c 5160       
                      18862 ; rs232cmd.c 5161               if ( CmdExecute && !SCPIError)
005310 964842rr       18864         MOV.B   ES,#SEG( _CmdExecute )
005314 9908rrrr       18865         MOV.W   R0,#SOF( _CmdExecute )
005318 8200           18866         MOV.B   R0L,[R0]
                      18867         BEQ     _1335
00531A F202           +18867 ;       BNE     _LG_1296
00531C D500A3         +18867 ;       JMP.L   _1335
005320 D500A300       +18867 ;       JMP.L   _1335
005320                +18867 _LG_1296:
005320 964842rr       18868         MOV.B   ES,#SEG( _SCPIError )
005324 9908rrrr       18869         MOV.W   R0,#SOF( _SCPIError )
005328 8A00           18870         MOV.W   R0,[R0]
                      18871         BNE     _1335
00532A F302           +18871 ;       BEQ     _LG_1298
00532C D5009B         +18871 ;       JMP.L   _1335
005330 D5009B00       +18871 ;       JMP.L   _1335
005330                +18871 _LG_1298:
                      18872 ; rs232cmd.c 5162               {
                      18873 ; rs232cmd.c 5163                       if ( CmdRequest)
005330 964842rr       18875         MOV.B   ES,#SEG( _CmdRequest )
005334 9908rrrr       18876         MOV.W   R0,#SOF( _CmdRequest )
005338 8200           18877         MOV.B   R0L,[R0]
00533A F33B           18878         BEQ     _1327
                      18879 ; rs232cmd.c 5164                       {
                      18880 ; rs232cmd.c 5165                               if ( ParCnt)
00533C 964842rr       18882         MOV.B   ES,#SEG( _ParCnt )
005340 9908rrrr       18883         MOV.W   R0,#SOF( _ParCnt )
005344 8200           18884         MOV.B   R0L,[R0]
005346 F307           18885         BEQ     _1326
                      18886 ; rs232cmd.c 5166                                       SCPIError = SyntaxErr;
005348 964842rr       18888         MOV.B   ES,#SEG( _SCPIError )
00534C 9908rrrr       18889         MOV.W   R0,#SOF( _SCPIError )
005350 BA03           18890         MOV.W   [R0],#03H
                      18891         BR      _1335
005352 D50088         +18891         JMP.L   _1335
005352 D5008800       +18891         JMP.L   _1335
005356                18892 _1326:
                      18893 ; rs232cmd.c 5167                               else
                      18894 ; rs232cmd.c 5168                               {
                      18895 ; rs232cmd.c 5169                                       sprintf( buffer, "%u,%u,%u\n", Calibratio
                            n.BBCalibration[Suffix[0]].DACGain, 
                      18896 ; rs232cmd.c 5170                                                                                
                                                                                                Calibration.BBCalibration[Suf
                            fix[0]].DACOffset,
                      18897 ; rs232cmd.c 5171                                                                                
                                                                                                Calibration.BBCalibration[Suf
                            fix[0]].DACLevel);
005356 91A8rr         18899         MOV.B   R5L,#SEG( __lc_bs )
005359 71BB           18900         XOR.B   R5H,R5H
00535B 8947           18901         MOV.W   R4,R7
00535D 964842rr       18902         MOV.B   ES,#SEG( _Suffix )
005361 9908rrrr       18903         MOV.W   R0,#SOF( _Suffix )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 293

ADDR   CODE            LINE SOURCELINE
005365 8A00           18904         MOV.W   R0,[R0]
005367 E9000014       18905         MULU.W  R0,#014H
00536B B910           18906         MOVS.W  R1,#00H
00536D 964842rr       18907         MOV.B   ES,#SEG( _Calibration+156 )
005371 8540rrrr       18908         MOV.B   R2L,[R0+SOF( _Calibration+156 )]
005375 B150           18909         MOVS.B  R2H,#00H
005377 964842rr       18910         MOV.B   ES,#SEG( _Calibration+157 )
00537B 8560rrrr       18911         MOV.B   R3L,[R0+SOF( _Calibration+157 )]
00537F B170           18912         MOVS.B  R3H,#00H
005381 964842rr       18913         MOV.B   ES,#SEG( _Calibration+158 )
005385 8500rrrr       18914         MOV.B   R0L,[R0+SOF( _Calibration+158 )]
005389 B110           18915         MOVS.B  R0H,#00H
00538B 0F01           18916         PUSH.W  R0
00538D 0F08           18918         PUSH.W  R3
00538F 0F04           18920         PUSH.W  R2
005391 9918rrrr       18922         MOV.W   R1,#SEG( _1174 )
005395 9908rrrr       18923         MOV.W   R0,#SOF( _1174 )
005399 0F03           18924         PUSH.W  R0, R1
00539B 8915           18926         MOV.W   R1,R5
00539D 8904           18927         MOV.W   R0,R4
                      18928         CALL    _sprintf
00539F C4rrrrrr       +18928 ;       FCALL   _sprintf
0053A3 9970000A       18929         ADD.W   R7,#0AH
                      18931 ; rs232cmd.c 5172                                       rs232puts( buffer);
0053A7 8915           18933         MOV.W   R1,R5
0053A9 8904           18934         MOV.W   R0,R4
                      18935         CALL    _rs232puts
0053AB C4rrrrrr       +18935 ;       FCALL   _rs232puts
                      18936 ; rs232cmd.c 5173                               }
                      18937 ; rs232cmd.c 5174                       }
0053AF FE5A           18939         BR      _1335
0053AF FE5A00         18939         BR      _1335
0053B2                18940 _1327:
                      18941 ; rs232cmd.c 5175                       else
                      18942 ; rs232cmd.c 5176                       {
                      18943 ; rs232cmd.c 5177                               if ( !PasswordProtected)
0053B2 964842rr       18945         MOV.B   ES,#SEG( _PasswordProtected )
0053B6 9908rrrr       18946         MOV.W   R0,#SOF( _PasswordProtected )
0053BA 8A00           18947         MOV.W   R0,[R0]
0053BC F253           18948         BNE     _1335
                      18949 ; rs232cmd.c 5178                               {
                      18950 ; rs232cmd.c 5179                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &DACGain, &DACOffset, &DACLevel)) != 3))
0053BE 964842rr       18952         MOV.B   ES,#SEG( _ParCnt )
0053C2 9908rrrr       18953         MOV.W   R0,#SOF( _ParCnt )
0053C6 8200           18954         MOV.B   R0L,[R0]
0053C8 910403         18955         CMP.B   R0L,#03H
0053CB F220           18956         BNE     _1328
0053CD 9168rr         18957         MOV.B   R3L,#SEG( __lc_bs )
0053D0 7177           18958         XOR.B   R3H,R3H
0053D2 40271E         18959         LEA     R2,R7+30
0053D5 91A8rr         18960         MOV.B   R5L,#SEG( __lc_bs )
0053D8 71BB           18961         XOR.B   R5H,R5H
0053DA 404720         18962         LEA     R4,R7+32
0053DD 9128rr         18963         MOV.B   R1L,#SEG( __lc_bs )
0053E0 7133           18964         XOR.B   R1H,R1H
0053E2 400722         18965         LEA     R0,R7+34
0053E5 0F03           18966         PUSH.W  R0, R1
0053E7 0F30           18968         PUSH.W  R4, R5
0053E9 0F0C           18970         PUSH.W  R2, R3
0053EB 9938rrrr       18972         MOV.W   R3,#SEG( _1175 )
0053EF 9928rrrr       18973         MOV.W   R2,#SOF( _1175 )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 294

ADDR   CODE            LINE SOURCELINE
0053F3 0F0C           18974         PUSH.W  R2, R3
0053F5 9918rrrr       18976         MOV.W   R1,#SEG( _Cmd )
0053F9 9908rrrr       18977         MOV.W   R0,#SOF( _Cmd )
                      18978         CALL    _sscanf
0053FD C4rrrrrr       +18978 ;       FCALL   _sscanf
005401 99700010       18979         ADD.W   R7,#010H
005405 99040003       18981         CMP.W   R0,#03H
005409 F307           18982         BEQ     _1329
005409 F30700         18982         BEQ     _1329
00540C                18983 _1328:
                      18984 ; rs232cmd.c 5180                                               SCPIError = SyntaxErr;
00540C 964842rr       18986         MOV.B   ES,#SEG( _SCPIError )
005410 9908rrrr       18987         MOV.W   R0,#SOF( _SCPIError )
005414 BA03           18988         MOV.W   [R0],#03H
005416 FE26           18989         BR      _1335
005416 FE26           18989         BR      _1335
005418                18990 _1329:
                      18991 ; rs232cmd.c 5181                                       else
                      18992 ; rs232cmd.c 5182                                       {
                      18993 ; rs232cmd.c 5183                                               Calibration.BBCalibration[Suffix[
                            0]].DACGain = DACGain;
005418 8C271E         18995         MOV.W   R2,[R7+30]
00541B 964842rr       18996         MOV.B   ES,#SEG( _Suffix )
00541F 9908rrrr       18997         MOV.W   R0,#SOF( _Suffix )
005423 8A00           18998         MOV.W   R0,[R0]
005425 E9000014       18999         MULU.W  R0,#014H
005429 B910           19000         MOVS.W  R1,#00H
00542B 964842rr       19001         MOV.B   ES,#SEG( _Calibration+156 )
00542F 8548rrrr       19002         MOV.B   [R0+SOF( _Calibration+156 )],R2L
                      19003 ; rs232cmd.c 5184                                               Calibration.BBCalibration[Suffix[
                            0]].DACOffset = DACOffset;
005433 8C2720         19005         MOV.W   R2,[R7+32]
005436 964842rr       19006         MOV.B   ES,#SEG( _Calibration+157 )
00543A 8548rrrr       19007         MOV.B   [R0+SOF( _Calibration+157 )],R2L
                      19008 ; rs232cmd.c 5185                                               Calibration.BBCalibration[Suffix[
                            0]].DACLevel = DACLevel;       
00543E 8C2722         19010         MOV.W   R2,[R7+34]
005441 964842rr       19011         MOV.B   ES,#SEG( _Calibration+158 )
005445 8548rrrr       19012         MOV.B   [R0+SOF( _Calibration+158 )],R2L
                      19013 ; rs232cmd.c 5186                                                               
                      19014 ; rs232cmd.c 5187                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005449 9918rrrr       19016         MOV.W   R1,#SEG( _Calibration )
00544D 9908rrrr       19017         MOV.W   R0,#SOF( _Calibration )
005451 964842rr       19018         MOV.B   ES,#SEG( _CalibrationPtr )
005455 9928rrrr       19019         MOV.W   R2,#SOF( _CalibrationPtr )
005459 8A22           19020         MOV.W   R2,[R2]
00545B 993800E2       19021         MOV.W   R3,#0E2H
                      19022         CALL    _NV_Store
00545F C4rrrrrr       +19022 ;       FCALL   _NV_Store
                      19023 ; rs232cmd.c 5188                                       }
                      19024 ; rs232cmd.c 5189                               }
                      19025 ; rs232cmd.c 5190                       }
                      19026 ; rs232cmd.c 5191               }
005464                19028 _1335:
                      19029 ; rs232cmd.c 5192       }
005464 99700024       19031         ADD.W   R7,#024H
005468 2F30           19033         POP.W   R4, R5
00546A D680           19035         RET
                      19037 ; rs232cmd.c 5193       
                      19038 ; rs232cmd.c 5194       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 295

ADDR   CODE            LINE SOURCELINE
                      19039 ; rs232cmd.c 5195       /* FactTSGenDate                                                         
                                                                                                                             
                                               RS232CMD.C */
                      19040 ; rs232cmd.c 5196       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19041 ; rs232cmd.c 5197       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      19042 ; rs232cmd.c 5198       /* Revised:       000727                                                 
                                                                                                                             
                                                                                  */
                      19043 ; rs232cmd.c 5199       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19044 ; rs232cmd.c 5200       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      19045 ; rs232cmd.c 5201       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      19046 ; rs232cmd.c 5202       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      19047 ; rs232cmd.c 5203       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      19048 ; rs232cmd.c 5204       /************************************************************************
                            **/
                      19049 ; rs232cmd.c 5205       void FactTSGenDate( void)
                      19050 ; rs232cmd.c 5206       {
                      19051         ALIGN   1
                      19053         PUBLIC  _FactTSGenDate
00546C                19054 _FactTSGenDate:
00546C 0F30           19058         PUSH.W  R4, R5
00546E 9972001A       19060         SUB.W   R7,#01AH
                      19066 ; rs232cmd.c 5207               UI year, month, day;
                      19067 ; rs232cmd.c 5208               char buffer[20];
                      19068 ; rs232cmd.c 5209       
                      19069 ; rs232cmd.c 5210               if ( CmdExecute && !SCPIError)
005472 964842rr       19071         MOV.B   ES,#SEG( _CmdExecute )
005476 9908rrrr       19072         MOV.W   R0,#SOF( _CmdExecute )
00547A 8200           19073         MOV.B   R0L,[R0]
                      19074         BEQ     _1349
00547C F202           +19074 ;       BNE     _LG_1310
00547E D500C7         +19074 ;       JMP.L   _1349
005482 D500C700       +19074 ;       JMP.L   _1349
005482                +19074 _LG_1310:
005482 964842rr       19075         MOV.B   ES,#SEG( _SCPIError )
005486 9908rrrr       19076         MOV.W   R0,#SOF( _SCPIError )
00548A 8A00           19077         MOV.W   R0,[R0]
                      19078         BNE     _1349
00548C F302           +19078 ;       BEQ     _LG_1312
00548E D500BF         +19078 ;       JMP.L   _1349
005492 D500BF00       +19078 ;       JMP.L   _1349
005492                +19078 _LG_1312:
                      19079 ; rs232cmd.c 5211               {
                      19080 ; rs232cmd.c 5212                       if ( CmdRequest)
005492 964842rr       19082         MOV.B   ES,#SEG( _CmdRequest )
005496 9908rrrr       19083         MOV.W   R0,#SOF( _CmdRequest )
00549A 8200           19084         MOV.B   R0L,[R0]
00549C F35A           19085         BEQ     _1339
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 296

ADDR   CODE            LINE SOURCELINE
                      19086 ; rs232cmd.c 5213                       {
                      19087 ; rs232cmd.c 5214                               if ( ParCnt)
00549E 964842rr       19089         MOV.B   ES,#SEG( _ParCnt )
0054A2 9908rrrr       19090         MOV.W   R0,#SOF( _ParCnt )
0054A6 8200           19091         MOV.B   R0L,[R0]
0054A8 F307           19092         BEQ     _1338
                      19093 ; rs232cmd.c 5215                                       SCPIError = SyntaxErr;
0054AA 964842rr       19095         MOV.B   ES,#SEG( _SCPIError )
0054AE 9908rrrr       19096         MOV.W   R0,#SOF( _SCPIError )
0054B2 BA03           19097         MOV.W   [R0],#03H
                      19098         BR      _1349
0054B4 D500AC         +19098         JMP.L   _1349
0054B4 D500AC00       +19098         JMP.L   _1349
0054B8                19099 _1338:
                      19100 ; rs232cmd.c 5216                               else
                      19101 ; rs232cmd.c 5217                               {
                      19102 ; rs232cmd.c 5218                                       day = Calibration.CBCalibration.Date % 10
                            0;
0054B8 964842rr       19104         MOV.B   ES,#SEG( _Calibration+200 )
0054BC 9918rrrr       19105         MOV.W   R1,#SOF( _Calibration+200 )
0054C0 8B01           19106         MOV.W   R0,[R1+]
0054C2 8A11           19107         MOV.W   R1,[R1]
0054C4 B930           19108         MOV.W   R3,#00H
0054C6 99280064       19109         MOV.W   R2,#064H
0054CA 964842rr       19110         MOV.B   ES,#SEG( _Calibration+200 )
0054CE 9948rrrr       19111         MOV.W   R4,#SOF( _Calibration+200 )
0054D2 8B0C           19112         MOV.W   [R4+],R0
0054D4 8A1C           19113         MOV.W   [R4],R1
0054D6 C4rrrrrr       19114         FCALL   __UMODL
0054DA 8C0F04         19115         MOV.W   [R7+4],R0
0054DD 964842rr       19116         MOV.B   ES,#SEG( _Calibration+200 )
0054E1 9918rrrr       19117         MOV.W   R1,#SOF( _Calibration+200 )
0054E5 8B01           19118         MOV.W   R0,[R1+]
0054E7 8A11           19119         MOV.W   R1,[R1]
                      19120 ; rs232cmd.c 5219                                       month = ( Calibration.CBCalibration.Date 
                            / 100) % 100;
0054E9 B930           19122         MOV.W   R3,#00H
0054EB 99280064       19123         MOV.W   R2,#064H
0054EF 8953           19124         MOV.W   R5,R3
0054F1 8942           19125         MOV.W   R4,R2
0054F3 C4rrrrrr       19126         FCALL   __UDIVL
0054F7 8935           19127         MOV.W   R3,R5
0054F9 8924           19128         MOV.W   R2,R4
0054FB C4rrrrrr       19129         FCALL   __UMODL
0054FF 8C0F02         19130         MOV.W   [R7+2],R0
                      19131 ; rs232cmd.c 5220                                       year = ( Calibration.CBCalibration.Date /
                             10000);
005502 B930           19133         MOV.W   R3,#00H
005504 99282710       19134         MOV.W   R2,#02710H
005508 964842rr       19135         MOV.B   ES,#SEG( _Calibration+200 )
00550C 9918rrrr       19136         MOV.W   R1,#SOF( _Calibration+200 )
005510 8B01           19137         MOV.W   R0,[R1+]
005512 8A11           19138         MOV.W   R1,[R1]
005514 C4rrrrrr       19139         FCALL   __UDIVL
005518 8A0F           19140         MOV.W   [R7],R0
                      19141 ; rs232cmd.c 5221       
                      19142 ; rs232cmd.c 5222                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
00551A 91A8rr         19144         MOV.B   R5L,#SEG( __lc_bs )
00551D 71BB           19145         XOR.B   R5H,R5H
00551F 404706         19146         LEA     R4,R7+6
005522 8C0704         19147         MOV.W   R0,[R7+4]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 297

ADDR   CODE            LINE SOURCELINE
005525 0F01           19148         PUSH.W  R0
005527 8C0704         19150         MOV.W   R0,[R7+4]
00552A 0F01           19151         PUSH.W  R0
00552C 8C0704         19153         MOV.W   R0,[R7+4]
00552F 0F01           19154         PUSH.W  R0
005531 9918rrrr       19156         MOV.W   R1,#SEG( _1174 )
005535 9908rrrr       19157         MOV.W   R0,#SOF( _1174 )
005539 0F03           19158         PUSH.W  R0, R1
00553B 8915           19160         MOV.W   R1,R5
00553D 8904           19161         MOV.W   R0,R4
                      19162         CALL    _sprintf
00553F C4rrrrrr       +19162 ;       FCALL   _sprintf
005543 9970000A       19163         ADD.W   R7,#0AH
                      19165 ; rs232cmd.c 5223       
                      19166 ; rs232cmd.c 5224                                       rs232puts( buffer);
005547 8915           19168         MOV.W   R1,R5
005549 8904           19169         MOV.W   R0,R4
                      19170         CALL    _rs232puts
00554B C4rrrrrr       +19170 ;       FCALL   _rs232puts
                      19171 ; rs232cmd.c 5225                               }
                      19172 ; rs232cmd.c 5226                       }
00554F FE5F           19174         BR      _1349
00554F FE5F00         19174         BR      _1349
005552                19175 _1339:
                      19176 ; rs232cmd.c 5227                       else
                      19177 ; rs232cmd.c 5228                       {
                      19178 ; rs232cmd.c 5229                               if ( !PasswordProtected)
005552 964842rr       19180         MOV.B   ES,#SEG( _PasswordProtected )
005556 9908rrrr       19181         MOV.W   R0,#SOF( _PasswordProtected )
00555A 8A00           19182         MOV.W   R0,[R0]
00555C F258           19183         BNE     _1349
                      19184 ; rs232cmd.c 5230                               {
                      19185 ; rs232cmd.c 5231                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
00555E 964842rr       19187         MOV.B   ES,#SEG( _ParCnt )
005562 9908rrrr       19188         MOV.W   R0,#SOF( _ParCnt )
005566 8200           19189         MOV.B   R0L,[R0]
005568 910403         19190         CMP.B   R0L,#03H
00556B F21F           19191         BNE     _1340
00556D 9168rr         19192         MOV.B   R3L,#SEG( __lc_bs )
005570 7177           19193         XOR.B   R3H,R3H
005572 8927           19194         MOV.W   R2,R7
005574 91A8rr         19195         MOV.B   R5L,#SEG( __lc_bs )
005577 71BB           19196         XOR.B   R5H,R5H
005579 404702         19197         LEA     R4,R7+2
00557C 9128rr         19198         MOV.B   R1L,#SEG( __lc_bs )
00557F 7133           19199         XOR.B   R1H,R1H
005581 400704         19200         LEA     R0,R7+4
005584 0F03           19201         PUSH.W  R0, R1
005586 0F30           19203         PUSH.W  R4, R5
005588 0F0C           19205         PUSH.W  R2, R3
00558A 9938rrrr       19207         MOV.W   R3,#SEG( _1175 )
00558E 9928rrrr       19208         MOV.W   R2,#SOF( _1175 )
005592 0F0C           19209         PUSH.W  R2, R3
005594 9918rrrr       19211         MOV.W   R1,#SEG( _Cmd )
005598 9908rrrr       19212         MOV.W   R0,#SOF( _Cmd )
                      19213         CALL    _sscanf
00559C C4rrrrrr       +19213 ;       FCALL   _sscanf
0055A0 99700010       19214         ADD.W   R7,#010H
0055A4 99040003       19216         CMP.W   R0,#03H
0055A8 F306           19217         BEQ     _1341
0055A8 F306           19217         BEQ     _1341
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 298

ADDR   CODE            LINE SOURCELINE
0055AA                19218 _1340:
                      19219 ; rs232cmd.c 5232                                               SCPIError = SyntaxErr;
0055AA 964842rr       19221         MOV.B   ES,#SEG( _SCPIError )
0055AE 9908rrrr       19222         MOV.W   R0,#SOF( _SCPIError )
0055B2 BA03           19223         MOV.W   [R0],#03H
0055B4 FE2C           19224         BR      _1349
0055B4 FE2C           19224         BR      _1349
0055B6                19225 _1341:
                      19226 ; rs232cmd.c 5233                                       else
                      19227 ; rs232cmd.c 5234                                       {
                      19228 ; rs232cmd.c 5235                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
0055B6 8A07           19230         MOV.W   R0,[R7]
0055B8 8C1702         19231         MOV.W   R1,[R7+2]
0055BB 8C2704         19232         MOV.W   R2,[R7+4]
                      19233         CALL    _ValidateDate
0055BE C4rrrrrr       +19233 ;       FCALL   _ValidateDate
0055C2 6900           19234         OR.W    R0,R0
0055C4 F207           19235         BNE     _1342
                      19236 ; rs232cmd.c 5236                                                       SCPIError = ExecErr;
0055C6 964842rr       19238         MOV.B   ES,#SEG( _SCPIError )
0055CA 9908rrrr       19239         MOV.W   R0,#SOF( _SCPIError )
0055CE 9A08001D       19240         MOV.W   [R0],#01DH
0055D2 FE1D           19241         BR      _1349
0055D2 FE1D           19241         BR      _1349
0055D4                19242 _1342:
                      19243 ; rs232cmd.c 5237                                               else
                      19244 ; rs232cmd.c 5238                                               {
                      19245 ; rs232cmd.c 5239                                                       Calibration.CBCalibration
                            .Date = day + 100*month + 10000*year;
0055D4 8C0702         19247         MOV.W   R0,[R7+2]
0055D7 E9000064       19248         MULU.W  R0,#064H
0055DB 0C0704         19249         ADD.W   R0,[R7+4]
0055DE 8A27           19250         MOV.W   R2,[R7]
0055E0 E9202710       19251         MULU.W  R2,#02710H
0055E4 0902           19252         ADD.W   R0,R2
0055E6 B910           19253         MOVS.W  R1,#00H
0055E8 964842rr       19254         MOV.B   ES,#SEG( _Calibration+200 )
0055EC 9928rrrr       19255         MOV.W   R2,#SOF( _Calibration+200 )
0055F0 8B0A           19256         MOV.W   [R2+],R0
0055F2 8A1A           19257         MOV.W   [R2],R1
                      19258 ; rs232cmd.c 5240                                               
                      19259 ; rs232cmd.c 5241                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
0055F4 9918rrrr       19261         MOV.W   R1,#SEG( _Calibration )
0055F8 9908rrrr       19262         MOV.W   R0,#SOF( _Calibration )
0055FC 964842rr       19263         MOV.B   ES,#SEG( _CalibrationPtr )
005600 9928rrrr       19264         MOV.W   R2,#SOF( _CalibrationPtr )
005604 8A22           19265         MOV.W   R2,[R2]
005606 993800E2       19266         MOV.W   R3,#0E2H
                      19267         CALL    _NV_Store
00560A C4rrrrrr       +19267 ;       FCALL   _NV_Store
                      19268 ; rs232cmd.c 5242                                               }
                      19269 ; rs232cmd.c 5243                                       }                               
                      19270 ; rs232cmd.c 5244                               }
                      19271 ; rs232cmd.c 5245                       }
                      19272 ; rs232cmd.c 5246               }
00560E                19274 _1349:
                      19275 ; rs232cmd.c 5247       }
00560E 9970001A       19277         ADD.W   R7,#01AH
005612 2F30           19279         POP.W   R4, R5
005614 D680           19281         RET
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 299

ADDR   CODE            LINE SOURCELINE
                      19283 ; rs232cmd.c 5248       
                      19284 ; rs232cmd.c 5249       /************************************************************************
                            **/
                      19285 ; rs232cmd.c 5250       /* FactTSGenAGain                                                        
                                                                                                                             
                                               RS232CMD.C */
                      19286 ; rs232cmd.c 5251       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19287 ; rs232cmd.c 5252       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      19288 ; rs232cmd.c 5253       /* Revised:       000727,                                                
                                                                                                                             
                                                                                  */
                      19289 ; rs232cmd.c 5254       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19290 ; rs232cmd.c 5255       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      19291 ; rs232cmd.c 5256       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      19292 ; rs232cmd.c 5257       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      19293 ; rs232cmd.c 5258       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      19294 ; rs232cmd.c 5259       /************************************************************************
                            **/
                      19295 ; rs232cmd.c 5260       void FactTSGenAGain( void)
                      19296 ; rs232cmd.c 5261       {
                      19297         ALIGN   1
                      19299         PUBLIC  _FactTSGenAGain
005616                19300 _FactTSGenAGain:
005616 0F30           19304         PUSH.W  R4, R5
005618 99720018       19306         SUB.W   R7,#018H
                      19311 ; rs232cmd.c 5262               char buffer[20];
                      19312 ; rs232cmd.c 5263               UC GainG, GainM;
                      19313 ; rs232cmd.c 5264       
                      19314 ; rs232cmd.c 5265               if ( CmdExecute && !SCPIError)
00561C 964842rr       19316         MOV.B   ES,#SEG( _CmdExecute )
005620 9908rrrr       19317         MOV.W   R0,#SOF( _CmdExecute )
005624 8200           19318         MOV.B   R0L,[R0]
                      19319         BEQ     _1363
005626 F202           +19319 ;       BNE     _LG_1326
005628 D50095         +19319 ;       JMP.L   _1363
00562C D5009500       +19319 ;       JMP.L   _1363
00562C                +19319 _LG_1326:
00562C 964842rr       19320         MOV.B   ES,#SEG( _SCPIError )
005630 9908rrrr       19321         MOV.W   R0,#SOF( _SCPIError )
005634 8A00           19322         MOV.W   R0,[R0]
                      19323         BNE     _1363
005636 F302           +19323 ;       BEQ     _LG_1328
005638 D5008D         +19323 ;       JMP.L   _1363
00563C D5008D00       +19323 ;       JMP.L   _1363
00563C                +19323 _LG_1328:
                      19324 ; rs232cmd.c 5266               {
                      19325 ; rs232cmd.c 5267                       if ( CmdRequest)
00563C 964842rr       19327         MOV.B   ES,#SEG( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 300

ADDR   CODE            LINE SOURCELINE
005640 9908rrrr       19328         MOV.W   R0,#SOF( _CmdRequest )
005644 8200           19329         MOV.B   R0L,[R0]
005646 F32E           19330         BEQ     _1353
                      19331 ; rs232cmd.c 5268                       {
                      19332 ; rs232cmd.c 5269                               if ( ParCnt)
005648 964842rr       19334         MOV.B   ES,#SEG( _ParCnt )
00564C 9908rrrr       19335         MOV.W   R0,#SOF( _ParCnt )
005650 8200           19336         MOV.B   R0L,[R0]
005652 F306           19337         BEQ     _1352
                      19338 ; rs232cmd.c 5270                                       SCPIError = SyntaxErr;
005654 964842rr       19340         MOV.B   ES,#SEG( _SCPIError )
005658 9908rrrr       19341         MOV.W   R0,#SOF( _SCPIError )
00565C BA03           19342         MOV.W   [R0],#03H
00565E FE7A           19343         BR      _1363
00565E FE7A           19343         BR      _1363
005660                19344 _1352:
                      19345 ; rs232cmd.c 5271                               else
                      19346 ; rs232cmd.c 5272                               {
                      19347 ; rs232cmd.c 5273                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.GainG, 
                      19348 ; rs232cmd.c 5274                                                                                
                                                                                       Calibration.CBCalibration.GainM);
005660 91A8rr         19350         MOV.B   R5L,#SEG( __lc_bs )
005663 71BB           19351         XOR.B   R5H,R5H
005665 8947           19352         MOV.W   R4,R7
005667 964842rr       19353         MOV.B   ES,#SEG( _Calibration+215 )
00566B 9908rrrr       19354         MOV.W   R0,#SOF( _Calibration+215 )
00566F 8200           19355         MOV.B   R0L,[R0]
005671 B110           19356         MOVS.B  R0H,#00H
005673 964842rr       19357         MOV.B   ES,#SEG( _Calibration+217 )
005677 9918rrrr       19358         MOV.W   R1,#SOF( _Calibration+217 )
00567B 8221           19359         MOV.B   R1L,[R1]
00567D B130           19360         MOVS.B  R1H,#00H
00567F 0F02           19361         PUSH.W  R1
005681 0F01           19363         PUSH.W  R0
005683 9918rrrr       19365         MOV.W   R1,#SEG( _1312 )
005687 9908rrrr       19366         MOV.W   R0,#SOF( _1312 )
00568B 0F03           19367         PUSH.W  R0, R1
00568D 8915           19369         MOV.W   R1,R5
00568F 8904           19370         MOV.W   R0,R4
                      19371         CALL    _sprintf
005691 C4rrrrrr       +19371 ;       FCALL   _sprintf
005695 99700008       19372         ADD.W   R7,#08H
                      19374 ; rs232cmd.c 5275                                       rs232puts( buffer);
005699 8915           19376         MOV.W   R1,R5
00569B 8904           19377         MOV.W   R0,R4
                      19378         CALL    _rs232puts
00569D C4rrrrrr       +19378 ;       FCALL   _rs232puts
                      19379 ; rs232cmd.c 5276                               }
                      19380 ; rs232cmd.c 5277                       }
0056A1 FE59           19382         BR      _1363
0056A1 FE5900         19382         BR      _1363
0056A4                19383 _1353:
                      19384 ; rs232cmd.c 5278                       else
                      19385 ; rs232cmd.c 5279                       {
                      19386 ; rs232cmd.c 5280                               if ( !PasswordProtected)
0056A4 964842rr       19388         MOV.B   ES,#SEG( _PasswordProtected )
0056A8 9908rrrr       19389         MOV.W   R0,#SOF( _PasswordProtected )
0056AC 8A00           19390         MOV.W   R0,[R0]
0056AE F252           19391         BNE     _1363
                      19392 ; rs232cmd.c 5281                               {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 301

ADDR   CODE            LINE SOURCELINE
                      19393 ; rs232cmd.c 5282                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &GainG, &GainM)) != 2))
0056B0 964842rr       19395         MOV.B   ES,#SEG( _ParCnt )
0056B4 9908rrrr       19396         MOV.W   R0,#SOF( _ParCnt )
0056B8 8200           19397         MOV.B   R0L,[R0]
0056BA 910402         19398         CMP.B   R0L,#02H
0056BD F21B           19399         BNE     _1354
0056BF 9918rrrr       19400         MOV.W   R1,#SEG( _Cmd )
0056C3 9908rrrr       19401         MOV.W   R0,#SOF( _Cmd )
0056C7 9168rr         19402         MOV.B   R3L,#SEG( __lc_bs )
0056CA 7177           19403         XOR.B   R3H,R3H
0056CC 402714         19404         LEA     R2,R7+20
0056CF 91A8rr         19405         MOV.B   R5L,#SEG( __lc_bs )
0056D2 71BB           19406         XOR.B   R5H,R5H
0056D4 404716         19407         LEA     R4,R7+22
0056D7 0F30           19408         PUSH.W  R4, R5
0056D9 0F0C           19410         PUSH.W  R2, R3
0056DB 9938rrrr       19412         MOV.W   R3,#SEG( _1313 )
0056DF 9928rrrr       19413         MOV.W   R2,#SOF( _1313 )
0056E3 0F0C           19414         PUSH.W  R2, R3
                      19416         CALL    _sscanf
0056E5 C4rrrrrr       +19416 ;       FCALL   _sscanf
0056E9 9970000C       19417         ADD.W   R7,#0CH
0056ED 99040002       19419         CMP.W   R0,#02H
0056F1 F307           19420         BEQ     _1355
0056F1 F30700         19420         BEQ     _1355
0056F4                19421 _1354:
                      19422 ; rs232cmd.c 5283                                               SCPIError = SyntaxErr;
0056F4 964842rr       19424         MOV.B   ES,#SEG( _SCPIError )
0056F8 9908rrrr       19425         MOV.W   R0,#SOF( _SCPIError )
0056FC BA03           19426         MOV.W   [R0],#03H
0056FE FE2A           19427         BR      _1363
0056FE FE2A           19427         BR      _1363
005700                19428 _1355:
                      19429 ; rs232cmd.c 5284                                       else
                      19430 ; rs232cmd.c 5285                                       {
                      19431 ; rs232cmd.c 5286                                               Calibration.CBCalibration.GainG =
                             GainG;
005700 840714         19433         MOV.B   R0L,[R7+20]
005703 964842rr       19434         MOV.B   ES,#SEG( _Calibration+215 )
005707 9918rrrr       19435         MOV.W   R1,#SOF( _Calibration+215 )
00570B 8209           19436         MOV.B   [R1],R0L
                      19437 ; rs232cmd.c 5287                                               Calibration.CBCalibration.GainM =
                             GainM;
00570D 840716         19439         MOV.B   R0L,[R7+22]
005710 964842rr       19440         MOV.B   ES,#SEG( _Calibration+217 )
005714 9918rrrr       19441         MOV.W   R1,#SOF( _Calibration+217 )
005718 8209           19442         MOV.B   [R1],R0L
                      19443 ; rs232cmd.c 5288                                                                                
                                                                                                                             
                                                                                                                  
                      19444 ; rs232cmd.c 5289                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
00571A 9918rrrr       19446         MOV.W   R1,#SEG( _Calibration )
00571E 9908rrrr       19447         MOV.W   R0,#SOF( _Calibration )
005722 964842rr       19448         MOV.B   ES,#SEG( _CalibrationPtr )
005726 9928rrrr       19449         MOV.W   R2,#SOF( _CalibrationPtr )
00572A 8A22           19450         MOV.W   R2,[R2]
00572C 993800E2       19451         MOV.W   R3,#0E2H
                      19452         CALL    _NV_Store
005730 C4rrrrrr       +19452 ;       FCALL   _NV_Store
                      19453 ; rs232cmd.c 5290       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 302

ADDR   CODE            LINE SOURCELINE
                      19454 ; rs232cmd.c 5291                                               if ( CBSetup.System < NTSC_US)
005734 964842rr       19456         MOV.B   ES,#SEG( _CBSetup )
005738 9908rrrr       19457         MOV.W   R0,#SOF( _CBSetup )
00573C 8200           19458         MOV.B   R0L,[R0]
00573E 910402         19459         CMP.B   R0L,#02H
005741 F005           19460         BCC     _1356
                      19461 ; rs232cmd.c 5292                                                       WriteCBGain( GainG);
005743 840714         19463         MOV.B   R0L,[R7+20]
                      19464         CALL    _WriteCBGain
005746 C4rrrrrr       +19464 ;       FCALL   _WriteCBGain
00574A FE04           19465         BR      _1363
00574A FE04           19465         BR      _1363
00574C                19466 _1356:
                      19467 ; rs232cmd.c 5293                                               else
                      19468 ; rs232cmd.c 5294                                                       WriteCBGain( GainM);
00574C 840716         19470         MOV.B   R0L,[R7+22]
                      19471         CALL    _WriteCBGain
00574F C4rrrrrr       +19471 ;       FCALL   _WriteCBGain
                      19472 ; rs232cmd.c 5295                                       }
                      19473 ; rs232cmd.c 5296                               }
                      19474 ; rs232cmd.c 5297                       }
                      19475 ; rs232cmd.c 5298               }
005754                19477 _1363:
                      19478 ; rs232cmd.c 5299       }
005754 99700018       19480         ADD.W   R7,#018H
005758 2F30           19482         POP.W   R4, R5
00575A D680           19484         RET
                      19486 ; rs232cmd.c 5300       
                      19487 ; rs232cmd.c 5301       /************************************************************************
                            **/
                      19488 ; rs232cmd.c 5302       /* FactTSGenCGain                                                        
                                                                                                                             
                                               RS232CMD.C */
                      19489 ; rs232cmd.c 5303       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19490 ; rs232cmd.c 5304       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      19491 ; rs232cmd.c 5305       /* Revised:       000727,                                                
                                                                                                                             
                                                                                  */
                      19492 ; rs232cmd.c 5306       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19493 ; rs232cmd.c 5307       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      19494 ; rs232cmd.c 5308       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      19495 ; rs232cmd.c 5309       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      19496 ; rs232cmd.c 5310       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      19497 ; rs232cmd.c 5311       /************************************************************************
                            **/
                      19498 ; rs232cmd.c 5312       void FactTSGenCGain( void)
                      19499 ; rs232cmd.c 5313       {
                      19500         ALIGN   1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 303

ADDR   CODE            LINE SOURCELINE
                      19502         PUBLIC  _FactTSGenCGain
00575C                19503 _FactTSGenCGain:
00575C 0F30           19507         PUSH.W  R4, R5
00575E 99720018       19509         SUB.W   R7,#018H
                      19514 ; rs232cmd.c 5314               char buffer[20];
                      19515 ; rs232cmd.c 5315               UC ChromaGainG, ChromaGainM;
                      19516 ; rs232cmd.c 5316       
                      19517 ; rs232cmd.c 5317               if ( CmdExecute && !SCPIError)
005762 964842rr       19519         MOV.B   ES,#SEG( _CmdExecute )
005766 9908rrrr       19520         MOV.W   R0,#SOF( _CmdExecute )
00576A 8200           19521         MOV.B   R0L,[R0]
                      19522         BEQ     _1378
00576C F202           +19522 ;       BNE     _LG_1342
00576E D50095         +19522 ;       JMP.L   _1378
005772 D5009500       +19522 ;       JMP.L   _1378
005772                +19522 _LG_1342:
005772 964842rr       19523         MOV.B   ES,#SEG( _SCPIError )
005776 9908rrrr       19524         MOV.W   R0,#SOF( _SCPIError )
00577A 8A00           19525         MOV.W   R0,[R0]
                      19526         BNE     _1378
00577C F302           +19526 ;       BEQ     _LG_1344
00577E D5008D         +19526 ;       JMP.L   _1378
005782 D5008D00       +19526 ;       JMP.L   _1378
005782                +19526 _LG_1344:
                      19527 ; rs232cmd.c 5318               {
                      19528 ; rs232cmd.c 5319                       if ( CmdRequest)
005782 964842rr       19530         MOV.B   ES,#SEG( _CmdRequest )
005786 9908rrrr       19531         MOV.W   R0,#SOF( _CmdRequest )
00578A 8200           19532         MOV.B   R0L,[R0]
00578C F32E           19533         BEQ     _1368
                      19534 ; rs232cmd.c 5320                       {
                      19535 ; rs232cmd.c 5321                               if ( ParCnt)
00578E 964842rr       19537         MOV.B   ES,#SEG( _ParCnt )
005792 9908rrrr       19538         MOV.W   R0,#SOF( _ParCnt )
005796 8200           19539         MOV.B   R0L,[R0]
005798 F306           19540         BEQ     _1367
                      19541 ; rs232cmd.c 5322                                       SCPIError = SyntaxErr;
00579A 964842rr       19543         MOV.B   ES,#SEG( _SCPIError )
00579E 9908rrrr       19544         MOV.W   R0,#SOF( _SCPIError )
0057A2 BA03           19545         MOV.W   [R0],#03H
0057A4 FE7A           19546         BR      _1378
0057A4 FE7A           19546         BR      _1378
0057A6                19547 _1367:
                      19548 ; rs232cmd.c 5323                               else
                      19549 ; rs232cmd.c 5324                               {
                      19550 ; rs232cmd.c 5325                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ChromaGainG, 
                      19551 ; rs232cmd.c 5326                                                                                
                                                                                       Calibration.CBCalibration.ChromaGainM)
                            ;
0057A6 91A8rr         19553         MOV.B   R5L,#SEG( __lc_bs )
0057A9 71BB           19554         XOR.B   R5H,R5H
0057AB 8947           19555         MOV.W   R4,R7
0057AD 964842rr       19556         MOV.B   ES,#SEG( _Calibration+216 )
0057B1 9908rrrr       19557         MOV.W   R0,#SOF( _Calibration+216 )
0057B5 8200           19558         MOV.B   R0L,[R0]
0057B7 B110           19559         MOVS.B  R0H,#00H
0057B9 964842rr       19560         MOV.B   ES,#SEG( _Calibration+218 )
0057BD 9918rrrr       19561         MOV.W   R1,#SOF( _Calibration+218 )
0057C1 8221           19562         MOV.B   R1L,[R1]
0057C3 B130           19563         MOVS.B  R1H,#00H
0057C5 0F02           19564         PUSH.W  R1
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 304

ADDR   CODE            LINE SOURCELINE
0057C7 0F01           19566         PUSH.W  R0
0057C9 9918rrrr       19568         MOV.W   R1,#SEG( _1312 )
0057CD 9908rrrr       19569         MOV.W   R0,#SOF( _1312 )
0057D1 0F03           19570         PUSH.W  R0, R1
0057D3 8915           19572         MOV.W   R1,R5
0057D5 8904           19573         MOV.W   R0,R4
                      19574         CALL    _sprintf
0057D7 C4rrrrrr       +19574 ;       FCALL   _sprintf
0057DB 99700008       19575         ADD.W   R7,#08H
                      19577 ; rs232cmd.c 5327                                       rs232puts( buffer);
0057DF 8915           19579         MOV.W   R1,R5
0057E1 8904           19580         MOV.W   R0,R4
                      19581         CALL    _rs232puts
0057E3 C4rrrrrr       +19581 ;       FCALL   _rs232puts
                      19582 ; rs232cmd.c 5328                               }
                      19583 ; rs232cmd.c 5329                       }
0057E7 FE59           19585         BR      _1378
0057E7 FE5900         19585         BR      _1378
0057EA                19586 _1368:
                      19587 ; rs232cmd.c 5330                       else
                      19588 ; rs232cmd.c 5331                       {
                      19589 ; rs232cmd.c 5332                               if ( !PasswordProtected)
0057EA 964842rr       19591         MOV.B   ES,#SEG( _PasswordProtected )
0057EE 9908rrrr       19592         MOV.W   R0,#SOF( _PasswordProtected )
0057F2 8A00           19593         MOV.W   R0,[R0]
0057F4 F252           19594         BNE     _1378
                      19595 ; rs232cmd.c 5333                               {
                      19596 ; rs232cmd.c 5334                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ChromaGainG, &ChromaGainM)) != 2))
0057F6 964842rr       19598         MOV.B   ES,#SEG( _ParCnt )
0057FA 9908rrrr       19599         MOV.W   R0,#SOF( _ParCnt )
0057FE 8200           19600         MOV.B   R0L,[R0]
005800 910402         19601         CMP.B   R0L,#02H
005803 F21B           19602         BNE     _1369
005805 9918rrrr       19603         MOV.W   R1,#SEG( _Cmd )
005809 9908rrrr       19604         MOV.W   R0,#SOF( _Cmd )
00580D 9168rr         19605         MOV.B   R3L,#SEG( __lc_bs )
005810 7177           19606         XOR.B   R3H,R3H
005812 402714         19607         LEA     R2,R7+20
005815 91A8rr         19608         MOV.B   R5L,#SEG( __lc_bs )
005818 71BB           19609         XOR.B   R5H,R5H
00581A 404716         19610         LEA     R4,R7+22
00581D 0F30           19611         PUSH.W  R4, R5
00581F 0F0C           19613         PUSH.W  R2, R3
005821 9938rrrr       19615         MOV.W   R3,#SEG( _1313 )
005825 9928rrrr       19616         MOV.W   R2,#SOF( _1313 )
005829 0F0C           19617         PUSH.W  R2, R3
                      19619         CALL    _sscanf
00582B C4rrrrrr       +19619 ;       FCALL   _sscanf
00582F 9970000C       19620         ADD.W   R7,#0CH
005833 99040002       19622         CMP.W   R0,#02H
005837 F307           19623         BEQ     _1370
005837 F30700         19623         BEQ     _1370
00583A                19624 _1369:
                      19625 ; rs232cmd.c 5335                                               SCPIError = SyntaxErr;
00583A 964842rr       19627         MOV.B   ES,#SEG( _SCPIError )
00583E 9908rrrr       19628         MOV.W   R0,#SOF( _SCPIError )
005842 BA03           19629         MOV.W   [R0],#03H
005844 FE2A           19630         BR      _1378
005844 FE2A           19630         BR      _1378
005846                19631 _1370:
                      19632 ; rs232cmd.c 5336                                       else
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 305

ADDR   CODE            LINE SOURCELINE
                      19633 ; rs232cmd.c 5337                                       {
                      19634 ; rs232cmd.c 5338                                               Calibration.CBCalibration.ChromaG
                            ainG = ChromaGainG;
005846 840714         19636         MOV.B   R0L,[R7+20]
005849 964842rr       19637         MOV.B   ES,#SEG( _Calibration+216 )
00584D 9918rrrr       19638         MOV.W   R1,#SOF( _Calibration+216 )
005851 8209           19639         MOV.B   [R1],R0L
                      19640 ; rs232cmd.c 5339                                               Calibration.CBCalibration.ChromaG
                            ainM = ChromaGainM;
005853 840716         19642         MOV.B   R0L,[R7+22]
005856 964842rr       19643         MOV.B   ES,#SEG( _Calibration+218 )
00585A 9918rrrr       19644         MOV.W   R1,#SOF( _Calibration+218 )
00585E 8209           19645         MOV.B   [R1],R0L
                      19646 ; rs232cmd.c 5340                                                                                
                                                                                                                             
                                                                                                                  
                      19647 ; rs232cmd.c 5341                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005860 9918rrrr       19649         MOV.W   R1,#SEG( _Calibration )
005864 9908rrrr       19650         MOV.W   R0,#SOF( _Calibration )
005868 964842rr       19651         MOV.B   ES,#SEG( _CalibrationPtr )
00586C 9928rrrr       19652         MOV.W   R2,#SOF( _CalibrationPtr )
005870 8A22           19653         MOV.W   R2,[R2]
005872 993800E2       19654         MOV.W   R3,#0E2H
                      19655         CALL    _NV_Store
005876 C4rrrrrr       +19655 ;       FCALL   _NV_Store
                      19656 ; rs232cmd.c 5342       
                      19657 ; rs232cmd.c 5343                                               if ( CBSetup.System < NTSC_US )
00587A 964842rr       19659         MOV.B   ES,#SEG( _CBSetup )
00587E 9908rrrr       19660         MOV.W   R0,#SOF( _CBSetup )
005882 8200           19661         MOV.B   R0L,[R0]
005884 910402         19662         CMP.B   R0L,#02H
005887 F005           19663         BCC     _1371
                      19664 ; rs232cmd.c 5344                                                       WriteCBChromaGain( Chroma
                            GainG);
005889 840714         19666         MOV.B   R0L,[R7+20]
                      19667         CALL    _WriteCBChromaGain
00588C C4rrrrrr       +19667 ;       FCALL   _WriteCBChromaGain
005890 FE04           19668         BR      _1378
005890 FE04           19668         BR      _1378
005892                19669 _1371:
                      19670 ; rs232cmd.c 5345                                               else
                      19671 ; rs232cmd.c 5346                                                       WriteCBChromaGain( Chroma
                            GainM);
005892 840716         19673         MOV.B   R0L,[R7+22]
                      19674         CALL    _WriteCBChromaGain
005895 C4rrrrrr       +19674 ;       FCALL   _WriteCBChromaGain
                      19675 ; rs232cmd.c 5347                                       }
                      19676 ; rs232cmd.c 5348                               }
                      19677 ; rs232cmd.c 5349                       }
                      19678 ; rs232cmd.c 5350               }
00589A                19680 _1378:
                      19681 ; rs232cmd.c 5351       }
00589A 99700018       19683         ADD.W   R7,#018H
00589E 2F30           19685         POP.W   R4, R5
0058A0 D680           19687         RET
                      19689 ; rs232cmd.c 5352       
                      19690 ; rs232cmd.c 5353       /************************************************************************
                            **/
                      19691 ; rs232cmd.c 5354       /* FactTSGenPhase                                                        
                                                                                                                             
                                               RS232CMD.C */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 306

ADDR   CODE            LINE SOURCELINE
                      19692 ; rs232cmd.c 5355       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19693 ; rs232cmd.c 5356       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      19694 ; rs232cmd.c 5357       /* Revised:       000727                                                 
                                                                                                                             
                                                                                  */
                      19695 ; rs232cmd.c 5358       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19696 ; rs232cmd.c 5359       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      19697 ; rs232cmd.c 5360       /* Remarks:             PAL range: 0-4*625*1728, NTSC range: 0-2*525*1716
                                                                           */
                      19698 ; rs232cmd.c 5361       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      19699 ; rs232cmd.c 5362       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      19700 ; rs232cmd.c 5363       /************************************************************************
                            **/
                      19701 ; rs232cmd.c 5364       void FactTSGenPhase( void)
                      19702 ; rs232cmd.c 5365       {
                      19703         ALIGN   1
                      19705         PUBLIC  _FactTSGenPhase
0058A2                19706 _FactTSGenPhase:
0058A2 0F30           19710         PUSH.W  R4, R5
0058A4 99720026       19712         SUB.W   R7,#026H
                      19717 ; rs232cmd.c 5366               char buffer[30];
                      19718 ; rs232cmd.c 5367               UL PhaseG, PhaseM;
                      19719 ; rs232cmd.c 5368       
                      19720 ; rs232cmd.c 5369               if ( CmdExecute && !SCPIError)
0058A8 964842rr       19722         MOV.B   ES,#SEG( _CmdExecute )
0058AC 9908rrrr       19723         MOV.W   R0,#SOF( _CmdExecute )
0058B0 8200           19724         MOV.B   R0L,[R0]
                      19725         BEQ     _1391
0058B2 F202           +19725 ;       BNE     _LG_1358
0058B4 D50092         +19725 ;       JMP.L   _1391
0058B8 D5009200       +19725 ;       JMP.L   _1391
0058B8                +19725 _LG_1358:
0058B8 964842rr       19726         MOV.B   ES,#SEG( _SCPIError )
0058BC 9908rrrr       19727         MOV.W   R0,#SOF( _SCPIError )
0058C0 8A00           19728         MOV.W   R0,[R0]
                      19729         BNE     _1391
0058C2 F302           +19729 ;       BEQ     _LG_1360
0058C4 D5008A         +19729 ;       JMP.L   _1391
0058C8 D5008A00       +19729 ;       JMP.L   _1391
0058C8                +19729 _LG_1360:
                      19730 ; rs232cmd.c 5370               {
                      19731 ; rs232cmd.c 5371                       if ( CmdRequest)
0058C8 964842rr       19733         MOV.B   ES,#SEG( _CmdRequest )
0058CC 9908rrrr       19734         MOV.W   R0,#SOF( _CmdRequest )
0058D0 8200           19735         MOV.B   R0L,[R0]
0058D2 F32E           19736         BEQ     _1383
                      19737 ; rs232cmd.c 5372                       {
                      19738 ; rs232cmd.c 5373                               if ( ParCnt)
0058D4 964842rr       19740         MOV.B   ES,#SEG( _ParCnt )
0058D8 9908rrrr       19741         MOV.W   R0,#SOF( _ParCnt )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 307

ADDR   CODE            LINE SOURCELINE
0058DC 8200           19742         MOV.B   R0L,[R0]
0058DE F306           19743         BEQ     _1382
                      19744 ; rs232cmd.c 5374                                       SCPIError = SyntaxErr;
0058E0 964842rr       19746         MOV.B   ES,#SEG( _SCPIError )
0058E4 9908rrrr       19747         MOV.W   R0,#SOF( _SCPIError )
0058E8 BA03           19748         MOV.W   [R0],#03H
0058EA FE77           19749         BR      _1391
0058EA FE77           19749         BR      _1391
0058EC                19750 _1382:
                      19751 ; rs232cmd.c 5375                               else
                      19752 ; rs232cmd.c 5376                               {
                      19753 ; rs232cmd.c 5377                                       sprintf( buffer, "%lu,%lu\n", Calibration
                            .CBCalibration.PhaseG, 
                      19754 ; rs232cmd.c 5378                                                                                
                                                                                               Calibration.CBCalibration.Phas
                            eM);
0058EC 91A8rr         19756         MOV.B   R5L,#SEG( __lc_bs )
0058EF 71BB           19757         XOR.B   R5H,R5H
0058F1 8947           19758         MOV.W   R4,R7
0058F3 964842rr       19759         MOV.B   ES,#SEG( _Calibration+204 )
0058F7 9918rrrr       19760         MOV.W   R1,#SOF( _Calibration+204 )
0058FB 8B01           19761         MOV.W   R0,[R1+]
0058FD 8A11           19762         MOV.W   R1,[R1]
0058FF 964842rr       19763         MOV.B   ES,#SEG( _Calibration+210 )
005903 9938rrrr       19764         MOV.W   R3,#SOF( _Calibration+210 )
005907 8B23           19765         MOV.W   R2,[R3+]
005909 8A33           19766         MOV.W   R3,[R3]
00590B 0F0C           19767         PUSH.W  R2, R3
00590D 0F03           19769         PUSH.W  R0, R1
00590F 9918rrrr       19771         MOV.W   R1,#SEG( _1238 )
005913 9908rrrr       19772         MOV.W   R0,#SOF( _1238 )
005917 0F03           19773         PUSH.W  R0, R1
005919 8915           19775         MOV.W   R1,R5
00591B 8904           19776         MOV.W   R0,R4
                      19777         CALL    _sprintf
00591D C4rrrrrr       +19777 ;       FCALL   _sprintf
005921 9970000C       19778         ADD.W   R7,#0CH
                      19780 ; rs232cmd.c 5379                                       rs232puts( buffer);
005925 8915           19782         MOV.W   R1,R5
005927 8904           19783         MOV.W   R0,R4
                      19784         CALL    _rs232puts
005929 C4rrrrrr       +19784 ;       FCALL   _rs232puts
                      19785 ; rs232cmd.c 5380                               }
                      19786 ; rs232cmd.c 5381                       }
00592D FE56           19788         BR      _1391
00592D FE5600         19788         BR      _1391
005930                19789 _1383:
                      19790 ; rs232cmd.c 5382                       else
                      19791 ; rs232cmd.c 5383                       {
                      19792 ; rs232cmd.c 5384                               if ( !PasswordProtected)
005930 964842rr       19794         MOV.B   ES,#SEG( _PasswordProtected )
005934 9908rrrr       19795         MOV.W   R0,#SOF( _PasswordProtected )
005938 8A00           19796         MOV.W   R0,[R0]
00593A F24F           19797         BNE     _1391
                      19798 ; rs232cmd.c 5385                               {
                      19799 ; rs232cmd.c 5386                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%l
                            u,%lu", &PhaseG, &PhaseM)) != 2))
00593C 964842rr       19801         MOV.B   ES,#SEG( _ParCnt )
005940 9908rrrr       19802         MOV.W   R0,#SOF( _ParCnt )
005944 8200           19803         MOV.B   R0L,[R0]
005946 910402         19804         CMP.B   R0L,#02H
005949 F21B           19805         BNE     _1384
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 308

ADDR   CODE            LINE SOURCELINE
00594B 9918rrrr       19806         MOV.W   R1,#SEG( _Cmd )
00594F 9908rrrr       19807         MOV.W   R0,#SOF( _Cmd )
005953 9168rr         19808         MOV.B   R3L,#SEG( __lc_bs )
005956 7177           19809         XOR.B   R3H,R3H
005958 40271E         19810         LEA     R2,R7+30
00595B 91A8rr         19811         MOV.B   R5L,#SEG( __lc_bs )
00595E 71BB           19812         XOR.B   R5H,R5H
005960 404722         19813         LEA     R4,R7+34
005963 0F30           19814         PUSH.W  R4, R5
005965 0F0C           19816         PUSH.W  R2, R3
005967 9938rrrr       19818         MOV.W   R3,#SEG( _1037 )
00596B 9928rrrr       19819         MOV.W   R2,#SOF( _1037 )
00596F 0F0C           19820         PUSH.W  R2, R3
                      19822         CALL    _sscanf
005971 C4rrrrrr       +19822 ;       FCALL   _sscanf
005975 9970000C       19823         ADD.W   R7,#0CH
005979 99040002       19825         CMP.W   R0,#02H
00597D F307           19826         BEQ     _1385
00597D F30700         19826         BEQ     _1385
005980                19827 _1384:
                      19828 ; rs232cmd.c 5387                                               SCPIError = SyntaxErr;
005980 964842rr       19830         MOV.B   ES,#SEG( _SCPIError )
005984 9908rrrr       19831         MOV.W   R0,#SOF( _SCPIError )
005988 BA03           19832         MOV.W   [R0],#03H
00598A FE27           19833         BR      _1391
00598A FE27           19833         BR      _1391
00598C                19834 _1385:
                      19835 ; rs232cmd.c 5388                                       else
                      19836 ; rs232cmd.c 5389                                       {
                      19837 ; rs232cmd.c 5390                                               Calibration.CBCalibration.PhaseG 
                            = PhaseG;
00598C 8C1720         19839         MOV.W   R1,[R7+32]
00598F 8C071E         19840         MOV.W   R0,[R7+30]
005992 964842rr       19841         MOV.B   ES,#SEG( _Calibration+204 )
005996 9928rrrr       19842         MOV.W   R2,#SOF( _Calibration+204 )
00599A 8B0A           19843         MOV.W   [R2+],R0
00599C 8A1A           19844         MOV.W   [R2],R1
                      19845 ; rs232cmd.c 5391                                               Calibration.CBCalibration.PhaseM 
                            = PhaseM;
00599E 8C1724         19847         MOV.W   R1,[R7+36]
0059A1 8C0722         19848         MOV.W   R0,[R7+34]
0059A4 964842rr       19849         MOV.B   ES,#SEG( _Calibration+210 )
0059A8 9928rrrr       19850         MOV.W   R2,#SOF( _Calibration+210 )
0059AC 8B0A           19851         MOV.W   [R2+],R0
0059AE 8A1A           19852         MOV.W   [R2],R1
                      19853 ; rs232cmd.c 5392                                       
                      19854 ; rs232cmd.c 5393                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
0059B0 9918rrrr       19856         MOV.W   R1,#SEG( _Calibration )
0059B4 9908rrrr       19857         MOV.W   R0,#SOF( _Calibration )
0059B8 964842rr       19858         MOV.B   ES,#SEG( _CalibrationPtr )
0059BC 9928rrrr       19859         MOV.W   R2,#SOF( _CalibrationPtr )
0059C0 8A22           19860         MOV.W   R2,[R2]
0059C2 993800E2       19861         MOV.W   R3,#0E2H
                      19862         CALL    _NV_Store
0059C6 C4rrrrrr       +19862 ;       FCALL   _NV_Store
                      19863 ; rs232cmd.c 5394       
                      19864 ; rs232cmd.c 5395                                               SetCBDelay( CBSetup.Delay);
0059CA 964842rr       19866         MOV.B   ES,#SEG( _CBSetup+4 )
0059CE 9918rrrr       19867         MOV.W   R1,#SOF( _CBSetup+4 )
0059D2 8B01           19868         MOV.W   R0,[R1+]
0059D4 8A11           19869         MOV.W   R1,[R1]
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 309

ADDR   CODE            LINE SOURCELINE
                      19870         CALL    _SetCBDelay
0059D6 C4rrrrrr       +19870 ;       FCALL   _SetCBDelay
                      19871 ; rs232cmd.c 5396                                       }
                      19872 ; rs232cmd.c 5397                               }
                      19873 ; rs232cmd.c 5398                       }
                      19874 ; rs232cmd.c 5399               }
0059DA                19876 _1391:
                      19877 ; rs232cmd.c 5400       }
0059DA 99700026       19879         ADD.W   R7,#026H
0059DE 2F30           19881         POP.W   R4, R5
0059E0 D680           19883         RET
                      19885 ; rs232cmd.c 5401       
                      19886 ; rs232cmd.c 5402       /************************************************************************
                            **/
                      19887 ; rs232cmd.c 5403       /* FactTSGenScHPhase                                                     
                                                                                                                             
                               RS232CMD.C */
                      19888 ; rs232cmd.c 5404       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19889 ; rs232cmd.c 5405       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      19890 ; rs232cmd.c 5406       /* Revised:       000727                                                 
                                                                                                                             
                                                                                  */
                      19891 ; rs232cmd.c 5407       /*                                                                       
                                                                                                                             
                                                                                                                  
                      19892 ; rs232cmd.c 5408       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      19893 ; rs232cmd.c 5409       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      19894 ; rs232cmd.c 5410       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      19895 ; rs232cmd.c 5411       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      19896 ; rs232cmd.c 5412       /************************************************************************
                            **/
                      19897 ; rs232cmd.c 5413       void FactTSGenScHPhase( void)
                      19898 ; rs232cmd.c 5414       {
                      19899         ALIGN   1
                      19901         PUBLIC  _FactTSGenScHPhase
0059E2                19902 _FactTSGenScHPhase:
0059E2 0F30           19906         PUSH.W  R4, R5
0059E4 99720022       19908         SUB.W   R7,#022H
                      19913 ; rs232cmd.c 5415               char buffer[30];
                      19914 ; rs232cmd.c 5416               UC ScHPhaseG, ScHPhaseM;
                      19915 ; rs232cmd.c 5417       
                      19916 ; rs232cmd.c 5418               if ( CmdExecute && !SCPIError)
0059E8 964842rr       19918         MOV.B   ES,#SEG( _CmdExecute )
0059EC 9908rrrr       19919         MOV.W   R0,#SOF( _CmdExecute )
0059F0 8200           19920         MOV.B   R0L,[R0]
                      19921         BEQ     _1403
0059F2 F202           +19921 ;       BNE     _LG_1372
0059F4 D5008C         +19921 ;       JMP.L   _1403
0059F8 D5008C00       +19921 ;       JMP.L   _1403
0059F8                +19921 _LG_1372:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 310

ADDR   CODE            LINE SOURCELINE
0059F8 964842rr       19922         MOV.B   ES,#SEG( _SCPIError )
0059FC 9908rrrr       19923         MOV.W   R0,#SOF( _SCPIError )
005A00 8A00           19924         MOV.W   R0,[R0]
                      19925         BNE     _1403
005A02 F302           +19925 ;       BEQ     _LG_1374
005A04 D50084         +19925 ;       JMP.L   _1403
005A08 D5008400       +19925 ;       JMP.L   _1403
005A08                +19925 _LG_1374:
                      19926 ; rs232cmd.c 5419               {
                      19927 ; rs232cmd.c 5420                       if ( CmdRequest)
005A08 964842rr       19929         MOV.B   ES,#SEG( _CmdRequest )
005A0C 9908rrrr       19930         MOV.W   R0,#SOF( _CmdRequest )
005A10 8200           19931         MOV.B   R0L,[R0]
005A12 F32E           19932         BEQ     _1395
                      19933 ; rs232cmd.c 5421                       {
                      19934 ; rs232cmd.c 5422                               if ( ParCnt)
005A14 964842rr       19936         MOV.B   ES,#SEG( _ParCnt )
005A18 9908rrrr       19937         MOV.W   R0,#SOF( _ParCnt )
005A1C 8200           19938         MOV.B   R0L,[R0]
005A1E F306           19939         BEQ     _1394
                      19940 ; rs232cmd.c 5423                                       SCPIError = SyntaxErr;
005A20 964842rr       19942         MOV.B   ES,#SEG( _SCPIError )
005A24 9908rrrr       19943         MOV.W   R0,#SOF( _SCPIError )
005A28 BA03           19944         MOV.W   [R0],#03H
005A2A FE71           19945         BR      _1403
005A2A FE71           19945         BR      _1403
005A2C                19946 _1394:
                      19947 ; rs232cmd.c 5424                               else
                      19948 ; rs232cmd.c 5425                               {
                      19949 ; rs232cmd.c 5426                                       sprintf( buffer, "%u,%u\n", Calibration.C
                            BCalibration.ScHPhaseG, 
                      19950 ; rs232cmd.c 5427                                                                                
                                                                                       Calibration.CBCalibration.ScHPhaseM);
005A2C 91A8rr         19952         MOV.B   R5L,#SEG( __lc_bs )
005A2F 71BB           19953         XOR.B   R5H,R5H
005A31 8947           19954         MOV.W   R4,R7
005A33 964842rr       19955         MOV.B   ES,#SEG( _Calibration+208 )
005A37 9908rrrr       19956         MOV.W   R0,#SOF( _Calibration+208 )
005A3B 8200           19957         MOV.B   R0L,[R0]
005A3D B110           19958         MOVS.B  R0H,#00H
005A3F 964842rr       19959         MOV.B   ES,#SEG( _Calibration+214 )
005A43 9918rrrr       19960         MOV.W   R1,#SOF( _Calibration+214 )
005A47 8221           19961         MOV.B   R1L,[R1]
005A49 B130           19962         MOVS.B  R1H,#00H
005A4B 0F02           19963         PUSH.W  R1
005A4D 0F01           19965         PUSH.W  R0
005A4F 9918rrrr       19967         MOV.W   R1,#SEG( _1312 )
005A53 9908rrrr       19968         MOV.W   R0,#SOF( _1312 )
005A57 0F03           19969         PUSH.W  R0, R1
005A59 8915           19971         MOV.W   R1,R5
005A5B 8904           19972         MOV.W   R0,R4
                      19973         CALL    _sprintf
005A5D C4rrrrrr       +19973 ;       FCALL   _sprintf
005A61 99700008       19974         ADD.W   R7,#08H
                      19976 ; rs232cmd.c 5428                                       rs232puts( buffer);
005A65 8915           19978         MOV.W   R1,R5
005A67 8904           19979         MOV.W   R0,R4
                      19980         CALL    _rs232puts
005A69 C4rrrrrr       +19980 ;       FCALL   _rs232puts
                      19981 ; rs232cmd.c 5429                               }
                      19982 ; rs232cmd.c 5430                       }
005A6D FE50           19984         BR      _1403
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 311

ADDR   CODE            LINE SOURCELINE
005A6D FE5000         19984         BR      _1403
005A70                19985 _1395:
                      19986 ; rs232cmd.c 5431                       else
                      19987 ; rs232cmd.c 5432                       {
                      19988 ; rs232cmd.c 5433                               if ( !PasswordProtected)
005A70 964842rr       19990         MOV.B   ES,#SEG( _PasswordProtected )
005A74 9908rrrr       19991         MOV.W   R0,#SOF( _PasswordProtected )
005A78 8A00           19992         MOV.W   R0,[R0]
005A7A F249           19993         BNE     _1403
                      19994 ; rs232cmd.c 5434                               {
                      19995 ; rs232cmd.c 5435                                       if (( ParCnt != 2) || (( sscanf( Cmd, "%u
                            ,%u", &ScHPhaseG, &ScHPhaseM)) != 2))
005A7C 964842rr       19997         MOV.B   ES,#SEG( _ParCnt )
005A80 9908rrrr       19998         MOV.W   R0,#SOF( _ParCnt )
005A84 8200           19999         MOV.B   R0L,[R0]
005A86 910402         20000         CMP.B   R0L,#02H
005A89 F21B           20001         BNE     _1396
005A8B 9918rrrr       20002         MOV.W   R1,#SEG( _Cmd )
005A8F 9908rrrr       20003         MOV.W   R0,#SOF( _Cmd )
005A93 9168rr         20004         MOV.B   R3L,#SEG( __lc_bs )
005A96 7177           20005         XOR.B   R3H,R3H
005A98 40271E         20006         LEA     R2,R7+30
005A9B 91A8rr         20007         MOV.B   R5L,#SEG( __lc_bs )
005A9E 71BB           20008         XOR.B   R5H,R5H
005AA0 404720         20009         LEA     R4,R7+32
005AA3 0F30           20010         PUSH.W  R4, R5
005AA5 0F0C           20012         PUSH.W  R2, R3
005AA7 9938rrrr       20014         MOV.W   R3,#SEG( _1313 )
005AAB 9928rrrr       20015         MOV.W   R2,#SOF( _1313 )
005AAF 0F0C           20016         PUSH.W  R2, R3
                      20018         CALL    _sscanf
005AB1 C4rrrrrr       +20018 ;       FCALL   _sscanf
005AB5 9970000C       20019         ADD.W   R7,#0CH
005AB9 99040002       20021         CMP.W   R0,#02H
005ABD F307           20022         BEQ     _1397
005ABD F30700         20022         BEQ     _1397
005AC0                20023 _1396:
                      20024 ; rs232cmd.c 5436                                               SCPIError = SyntaxErr;
005AC0 964842rr       20026         MOV.B   ES,#SEG( _SCPIError )
005AC4 9908rrrr       20027         MOV.W   R0,#SOF( _SCPIError )
005AC8 BA03           20028         MOV.W   [R0],#03H
005ACA FE21           20029         BR      _1403
005ACA FE21           20029         BR      _1403
005ACC                20030 _1397:
                      20031 ; rs232cmd.c 5437                                       else
                      20032 ; rs232cmd.c 5438                                       {
                      20033 ; rs232cmd.c 5439                                               Calibration.CBCalibration.ScHPhas
                            eG = ScHPhaseG;
005ACC 84071E         20035         MOV.B   R0L,[R7+30]
005ACF 964842rr       20036         MOV.B   ES,#SEG( _Calibration+208 )
005AD3 9918rrrr       20037         MOV.W   R1,#SOF( _Calibration+208 )
005AD7 8209           20038         MOV.B   [R1],R0L
                      20039 ; rs232cmd.c 5440                                               Calibration.CBCalibration.ScHPhas
                            eM = ScHPhaseM;
005AD9 840720         20041         MOV.B   R0L,[R7+32]
005ADC 964842rr       20042         MOV.B   ES,#SEG( _Calibration+214 )
005AE0 9918rrrr       20043         MOV.W   R1,#SOF( _Calibration+214 )
005AE4 8209           20044         MOV.B   [R1],R0L
                      20045 ; rs232cmd.c 5441                                       
                      20046 ; rs232cmd.c 5442                                               NV_Store( &Calibration, Calibrati
                            onPtr, sizeof( Calibration));
005AE6 9918rrrr       20048         MOV.W   R1,#SEG( _Calibration )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 312

ADDR   CODE            LINE SOURCELINE
005AEA 9908rrrr       20049         MOV.W   R0,#SOF( _Calibration )
005AEE 964842rr       20050         MOV.B   ES,#SEG( _CalibrationPtr )
005AF2 9928rrrr       20051         MOV.W   R2,#SOF( _CalibrationPtr )
005AF6 8A22           20052         MOV.W   R2,[R2]
005AF8 993800E2       20053         MOV.W   R3,#0E2H
                      20054         CALL    _NV_Store
005AFC C4rrrrrr       +20054 ;       FCALL   _NV_Store
                      20055 ; rs232cmd.c 5443       
                      20056 ; rs232cmd.c 5444                                               SetCBScHPhase( CBSetup.ScHPhase);
                            
005B00 964842rr       20058         MOV.B   ES,#SEG( _CBSetup+8 )
005B04 9908rrrr       20059         MOV.W   R0,#SOF( _CBSetup+8 )
005B08 8A00           20060         MOV.W   R0,[R0]
                      20061         CALL    _SetCBScHPhase
005B0A C4rrrrrr       +20061 ;       FCALL   _SetCBScHPhase
                      20062 ; rs232cmd.c 5445                                       }
                      20063 ; rs232cmd.c 5446                               }
                      20064 ; rs232cmd.c 5447                       }
                      20065 ; rs232cmd.c 5448               }
005B0E                20067 _1403:
                      20068 ; rs232cmd.c 5449       }
005B0E 99700022       20070         ADD.W   R7,#022H
005B12 2F30           20072         POP.W   R4, R5
005B14 D680           20074         RET
                      20076 ; rs232cmd.c 5450       
                      20077 ; rs232cmd.c 5451       /************************************************************************
                            **/
                      20078 ; rs232cmd.c 5452       /* FactAudioGenStatus                                                    
                                                                                                                             
                               RS232CMD.C */
                      20079 ; rs232cmd.c 5453       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20080 ; rs232cmd.c 5454       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                  */
                      20081 ; rs232cmd.c 5455       /* Revised:       000625                                                 
                                                                                                                             
                                                                                  */
                      20082 ; rs232cmd.c 5456       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20083 ; rs232cmd.c 5457       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20084 ; rs232cmd.c 5458       /* Remarks:                                                              
                                                                                                                             
                                                                                                                  
                      20085 ; rs232cmd.c 5459       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20086 ; rs232cmd.c 5460       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20087 ; rs232cmd.c 5461       /************************************************************************
                            **/
                      20088 ; rs232cmd.c 5462       void FactAudioGenStatus( void)
                      20089 ; rs232cmd.c 5463       {
                      20090         ALIGN   1
                      20092         PUBLIC  _FactAudioGenStatus
005B16                20093 _FactAudioGenStatus:
005B16 0F30           20097         PUSH.W  R4, R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 313

ADDR   CODE            LINE SOURCELINE
005B18 99720014       20099         SUB.W   R7,#014H
                      20102 ; rs232cmd.c 5464               char buffer[20];
                      20103 ; rs232cmd.c 5465       
                      20104 ; rs232cmd.c 5466               if ( CmdExecute && !SCPIError)
005B1C 964842rr       20106         MOV.B   ES,#SEG( _CmdExecute )
005B20 9908rrrr       20107         MOV.W   R0,#SOF( _CmdExecute )
005B24 8200           20108         MOV.B   R0L,[R0]
005B26 F337           20109         BEQ     _1411
005B28 964842rr       20110         MOV.B   ES,#SEG( _SCPIError )
005B2C 9908rrrr       20111         MOV.W   R0,#SOF( _SCPIError )
005B30 8A00           20112         MOV.W   R0,[R0]
005B32 F231           20113         BNE     _1411
                      20114 ; rs232cmd.c 5467               {
                      20115 ; rs232cmd.c 5468                       if ( CmdRequest)
005B34 964842rr       20117         MOV.B   ES,#SEG( _CmdRequest )
005B38 9908rrrr       20118         MOV.W   R0,#SOF( _CmdRequest )
005B3C 8200           20119         MOV.B   R0L,[R0]
005B3E F326           20120         BEQ     _1407
                      20121 ; rs232cmd.c 5469                       {
                      20122 ; rs232cmd.c 5470                               if ( ParCnt)
005B40 964842rr       20124         MOV.B   ES,#SEG( _ParCnt )
005B44 9908rrrr       20125         MOV.W   R0,#SOF( _ParCnt )
005B48 8200           20126         MOV.B   R0L,[R0]
005B4A F306           20127         BEQ     _1406
                      20128 ; rs232cmd.c 5471                                       SCPIError = SyntaxErr;
005B4C 964842rr       20130         MOV.B   ES,#SEG( _SCPIError )
005B50 9908rrrr       20131         MOV.W   R0,#SOF( _SCPIError )
005B54 BA03           20132         MOV.W   [R0],#03H
005B56 FE1F           20133         BR      _1411
005B56 FE1F           20133         BR      _1411
005B58                20134 _1406:
                      20135 ; rs232cmd.c 5472                               else
                      20136 ; rs232cmd.c 5473                               {
                      20137 ; rs232cmd.c 5474                                       sprintf( buffer, "%u\n", 0, AudioStatus()
                            );
                      20139         CALL    _AudioStatus
005B58 C4rrrrrr       +20139 ;       FCALL   _AudioStatus
005B5C B110           20140         MOVS.B  R0H,#00H
005B5E 91A8rr         20141         MOV.B   R5L,#SEG( __lc_bs )
005B61 71BB           20142         XOR.B   R5H,R5H
005B63 8947           20143         MOV.W   R4,R7
005B65 0F01           20144         PUSH.W  R0
005B67 B900           20146         MOV.W   R0,#00H
005B69 0F01           20147         PUSH.W  R0
005B6B 9918rrrr       20149         MOV.W   R1,#SEG( _1012 )
005B6F 9908rrrr       20150         MOV.W   R0,#SOF( _1012 )
005B73 0F03           20151         PUSH.W  R0, R1
005B75 8915           20153         MOV.W   R1,R5
005B77 8904           20154         MOV.W   R0,R4
                      20155         CALL    _sprintf
005B79 C4rrrrrr       +20155 ;       FCALL   _sprintf
005B7D 99700008       20156         ADD.W   R7,#08H
                      20158 ; rs232cmd.c 5475                                       rs232puts( buffer);
005B81 8915           20160         MOV.W   R1,R5
005B83 8904           20161         MOV.W   R0,R4
                      20162         CALL    _rs232puts
005B85 C4rrrrrr       +20162 ;       FCALL   _rs232puts
                      20163 ; rs232cmd.c 5476                               }
                      20164 ; rs232cmd.c 5477                       }
005B89 FE06           20166         BR      _1411
005B89 FE0600         20166         BR      _1411
005B8C                20167 _1407:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 314

ADDR   CODE            LINE SOURCELINE
                      20168 ; rs232cmd.c 5478                       else
                      20169 ; rs232cmd.c 5479                               SCPIError = SyntaxErr;
005B8C 964842rr       20171         MOV.B   ES,#SEG( _SCPIError )
005B90 9908rrrr       20172         MOV.W   R0,#SOF( _SCPIError )
005B94 BA03           20173         MOV.W   [R0],#03H
                      20174 ; rs232cmd.c 5480               }
005B96                20176 _1411:
                      20177 ; rs232cmd.c 5481       }
005B96 99700014       20179         ADD.W   R7,#014H
005B9A 2F30           20181         POP.W   R4, R5
005B9C D680           20183         RET
                      20185 ; rs232cmd.c 5482       
                      20186 ; rs232cmd.c 5483       /************************************************************************
                            **/
                      20187 ; rs232cmd.c 5484       /* FactAudioGenDate                                                      
                                                                                                                             
                                       RS232CMD.C */
                      20188 ; rs232cmd.c 5485       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20189 ; rs232cmd.c 5486       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      20190 ; rs232cmd.c 5487       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      20191 ; rs232cmd.c 5488       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20192 ; rs232cmd.c 5489       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20193 ; rs232cmd.c 5490       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      20194 ; rs232cmd.c 5491       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20195 ; rs232cmd.c 5492       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20196 ; rs232cmd.c 5493       /************************************************************************
                            **/
                      20197 ; rs232cmd.c 5494       void FactAudioGenDate( void)
                      20198 ; rs232cmd.c 5495       {
                      20199         ALIGN   1
                      20201         PUBLIC  _FactAudioGenDate
005B9E                20202 _FactAudioGenDate:
005B9E 0F30           20206         PUSH.W  R4, R5
005BA0 9972001A       20208         SUB.W   R7,#01AH
                      20214 ; rs232cmd.c 5496               UI year, month, day;
                      20215 ; rs232cmd.c 5497               char buffer[20];
                      20216 ; rs232cmd.c 5498       
                      20217 ; rs232cmd.c 5499               if ( CmdExecute && !SCPIError)
005BA4 964842rr       20219         MOV.B   ES,#SEG( _CmdExecute )
005BA8 9908rrrr       20220         MOV.W   R0,#SOF( _CmdExecute )
005BAC 8200           20221         MOV.B   R0L,[R0]
                      20222         BEQ     _1423
005BAE F202           +20222 ;       BNE     _LG_1394
005BB0 D500C7         +20222 ;       JMP.L   _1423
005BB4 D500C700       +20222 ;       JMP.L   _1423
005BB4                +20222 _LG_1394:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 315

ADDR   CODE            LINE SOURCELINE
005BB4 964842rr       20223         MOV.B   ES,#SEG( _SCPIError )
005BB8 9908rrrr       20224         MOV.W   R0,#SOF( _SCPIError )
005BBC 8A00           20225         MOV.W   R0,[R0]
                      20226         BNE     _1423
005BBE F302           +20226 ;       BEQ     _LG_1396
005BC0 D500BF         +20226 ;       JMP.L   _1423
005BC4 D500BF00       +20226 ;       JMP.L   _1423
005BC4                +20226 _LG_1396:
                      20227 ; rs232cmd.c 5500               {
                      20228 ; rs232cmd.c 5501                       if ( CmdRequest)
005BC4 964842rr       20230         MOV.B   ES,#SEG( _CmdRequest )
005BC8 9908rrrr       20231         MOV.W   R0,#SOF( _CmdRequest )
005BCC 8200           20232         MOV.B   R0L,[R0]
005BCE F35A           20233         BEQ     _1413
                      20234 ; rs232cmd.c 5502                       {
                      20235 ; rs232cmd.c 5503                               if ( ParCnt)
005BD0 964842rr       20237         MOV.B   ES,#SEG( _ParCnt )
005BD4 9908rrrr       20238         MOV.W   R0,#SOF( _ParCnt )
005BD8 8200           20239         MOV.B   R0L,[R0]
005BDA F307           20240         BEQ     _1412
                      20241 ; rs232cmd.c 5504                                       SCPIError = SyntaxErr;
005BDC 964842rr       20243         MOV.B   ES,#SEG( _SCPIError )
005BE0 9908rrrr       20244         MOV.W   R0,#SOF( _SCPIError )
005BE4 BA03           20245         MOV.W   [R0],#03H
                      20246         BR      _1423
005BE6 D500AC         +20246         JMP.L   _1423
005BE6 D500AC00       +20246         JMP.L   _1423
005BEA                20247 _1412:
                      20248 ; rs232cmd.c 5505                               else
                      20249 ; rs232cmd.c 5506                               {
                      20250 ; rs232cmd.c 5507                                       day = Calibration.AudioCalibration.Date %
                             100;
005BEA 964842rr       20252         MOV.B   ES,#SEG( _Calibration+220 )
005BEE 9918rrrr       20253         MOV.W   R1,#SOF( _Calibration+220 )
005BF2 8B01           20254         MOV.W   R0,[R1+]
005BF4 8A11           20255         MOV.W   R1,[R1]
005BF6 B930           20256         MOV.W   R3,#00H
005BF8 99280064       20257         MOV.W   R2,#064H
005BFC 964842rr       20258         MOV.B   ES,#SEG( _Calibration+220 )
005C00 9948rrrr       20259         MOV.W   R4,#SOF( _Calibration+220 )
005C04 8B0C           20260         MOV.W   [R4+],R0
005C06 8A1C           20261         MOV.W   [R4],R1
005C08 C4rrrrrr       20262         FCALL   __UMODL
005C0C 8C0F04         20263         MOV.W   [R7+4],R0
005C0F 964842rr       20264         MOV.B   ES,#SEG( _Calibration+220 )
005C13 9918rrrr       20265         MOV.W   R1,#SOF( _Calibration+220 )
005C17 8B01           20266         MOV.W   R0,[R1+]
005C19 8A11           20267         MOV.W   R1,[R1]
                      20268 ; rs232cmd.c 5508                                       month = ( Calibration.AudioCalibration.Da
                            te / 100) % 100;
005C1B B930           20270         MOV.W   R3,#00H
005C1D 99280064       20271         MOV.W   R2,#064H
005C21 8953           20272         MOV.W   R5,R3
005C23 8942           20273         MOV.W   R4,R2
005C25 C4rrrrrr       20274         FCALL   __UDIVL
005C29 8935           20275         MOV.W   R3,R5
005C2B 8924           20276         MOV.W   R2,R4
005C2D C4rrrrrr       20277         FCALL   __UMODL
005C31 8C0F02         20278         MOV.W   [R7+2],R0
                      20279 ; rs232cmd.c 5509                                       year = ( Calibration.AudioCalibration.Dat
                            e / 10000);
005C34 B930           20281         MOV.W   R3,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 316

ADDR   CODE            LINE SOURCELINE
005C36 99282710       20282         MOV.W   R2,#02710H
005C3A 964842rr       20283         MOV.B   ES,#SEG( _Calibration+220 )
005C3E 9918rrrr       20284         MOV.W   R1,#SOF( _Calibration+220 )
005C42 8B01           20285         MOV.W   R0,[R1+]
005C44 8A11           20286         MOV.W   R1,[R1]
005C46 C4rrrrrr       20287         FCALL   __UDIVL
005C4A 8A0F           20288         MOV.W   [R7],R0
                      20289 ; rs232cmd.c 5510       
                      20290 ; rs232cmd.c 5511                                       sprintf( buffer, "%u,%u,%u\n", year, mont
                            h, day);
005C4C 91A8rr         20292         MOV.B   R5L,#SEG( __lc_bs )
005C4F 71BB           20293         XOR.B   R5H,R5H
005C51 404706         20294         LEA     R4,R7+6
005C54 8C0704         20295         MOV.W   R0,[R7+4]
005C57 0F01           20296         PUSH.W  R0
005C59 8C0704         20298         MOV.W   R0,[R7+4]
005C5C 0F01           20299         PUSH.W  R0
005C5E 8C0704         20301         MOV.W   R0,[R7+4]
005C61 0F01           20302         PUSH.W  R0
005C63 9918rrrr       20304         MOV.W   R1,#SEG( _1174 )
005C67 9908rrrr       20305         MOV.W   R0,#SOF( _1174 )
005C6B 0F03           20306         PUSH.W  R0, R1
005C6D 8915           20308         MOV.W   R1,R5
005C6F 8904           20309         MOV.W   R0,R4
                      20310         CALL    _sprintf
005C71 C4rrrrrr       +20310 ;       FCALL   _sprintf
005C75 9970000A       20311         ADD.W   R7,#0AH
                      20313 ; rs232cmd.c 5512       
                      20314 ; rs232cmd.c 5513                                       rs232puts( buffer);
005C79 8915           20316         MOV.W   R1,R5
005C7B 8904           20317         MOV.W   R0,R4
                      20318         CALL    _rs232puts
005C7D C4rrrrrr       +20318 ;       FCALL   _rs232puts
                      20319 ; rs232cmd.c 5514                               }
                      20320 ; rs232cmd.c 5515                       }
005C81 FE5F           20322         BR      _1423
005C81 FE5F00         20322         BR      _1423
005C84                20323 _1413:
                      20324 ; rs232cmd.c 5516                       else
                      20325 ; rs232cmd.c 5517                       {
                      20326 ; rs232cmd.c 5518                               if ( !PasswordProtected)
005C84 964842rr       20328         MOV.B   ES,#SEG( _PasswordProtected )
005C88 9908rrrr       20329         MOV.W   R0,#SOF( _PasswordProtected )
005C8C 8A00           20330         MOV.W   R0,[R0]
005C8E F258           20331         BNE     _1423
                      20332 ; rs232cmd.c 5519                               {
                      20333 ; rs232cmd.c 5520                                       if (( ParCnt != 3) || (( sscanf( Cmd, "%u
                            ,%u,%u", &year, &month, &day)) != 3))
005C90 964842rr       20335         MOV.B   ES,#SEG( _ParCnt )
005C94 9908rrrr       20336         MOV.W   R0,#SOF( _ParCnt )
005C98 8200           20337         MOV.B   R0L,[R0]
005C9A 910403         20338         CMP.B   R0L,#03H
005C9D F21F           20339         BNE     _1414
005C9F 9168rr         20340         MOV.B   R3L,#SEG( __lc_bs )
005CA2 7177           20341         XOR.B   R3H,R3H
005CA4 8927           20342         MOV.W   R2,R7
005CA6 91A8rr         20343         MOV.B   R5L,#SEG( __lc_bs )
005CA9 71BB           20344         XOR.B   R5H,R5H
005CAB 404702         20345         LEA     R4,R7+2
005CAE 9128rr         20346         MOV.B   R1L,#SEG( __lc_bs )
005CB1 7133           20347         XOR.B   R1H,R1H
005CB3 400704         20348         LEA     R0,R7+4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 317

ADDR   CODE            LINE SOURCELINE
005CB6 0F03           20349         PUSH.W  R0, R1
005CB8 0F30           20351         PUSH.W  R4, R5
005CBA 0F0C           20353         PUSH.W  R2, R3
005CBC 9938rrrr       20355         MOV.W   R3,#SEG( _1175 )
005CC0 9928rrrr       20356         MOV.W   R2,#SOF( _1175 )
005CC4 0F0C           20357         PUSH.W  R2, R3
005CC6 9918rrrr       20359         MOV.W   R1,#SEG( _Cmd )
005CCA 9908rrrr       20360         MOV.W   R0,#SOF( _Cmd )
                      20361         CALL    _sscanf
005CCE C4rrrrrr       +20361 ;       FCALL   _sscanf
005CD2 99700010       20362         ADD.W   R7,#010H
005CD6 99040003       20364         CMP.W   R0,#03H
005CDA F306           20365         BEQ     _1415
005CDA F306           20365         BEQ     _1415
005CDC                20366 _1414:
                      20367 ; rs232cmd.c 5521                                               SCPIError = SyntaxErr;
005CDC 964842rr       20369         MOV.B   ES,#SEG( _SCPIError )
005CE0 9908rrrr       20370         MOV.W   R0,#SOF( _SCPIError )
005CE4 BA03           20371         MOV.W   [R0],#03H
005CE6 FE2C           20372         BR      _1423
005CE6 FE2C           20372         BR      _1423
005CE8                20373 _1415:
                      20374 ; rs232cmd.c 5522                                       else
                      20375 ; rs232cmd.c 5523                                       {
                      20376 ; rs232cmd.c 5524                                               if ( ValidateDate( year, month, d
                            ay) == FAIL)
005CE8 8A07           20378         MOV.W   R0,[R7]
005CEA 8C1702         20379         MOV.W   R1,[R7+2]
005CED 8C2704         20380         MOV.W   R2,[R7+4]
                      20381         CALL    _ValidateDate
005CF0 C4rrrrrr       +20381 ;       FCALL   _ValidateDate
005CF4 6900           20382         OR.W    R0,R0
005CF6 F207           20383         BNE     _1416
                      20384 ; rs232cmd.c 5525                                                       SCPIError = ExecErr;
005CF8 964842rr       20386         MOV.B   ES,#SEG( _SCPIError )
005CFC 9908rrrr       20387         MOV.W   R0,#SOF( _SCPIError )
005D00 9A08001D       20388         MOV.W   [R0],#01DH
005D04 FE1D           20389         BR      _1423
005D04 FE1D           20389         BR      _1423
005D06                20390 _1416:
                      20391 ; rs232cmd.c 5526                                               else
                      20392 ; rs232cmd.c 5527                                               {
                      20393 ; rs232cmd.c 5528                                                       Calibration.AudioCalibrat
                            ion.Date = day + 100*month + 10000*year;
005D06 8C0702         20395         MOV.W   R0,[R7+2]
005D09 E9000064       20396         MULU.W  R0,#064H
005D0D 0C0704         20397         ADD.W   R0,[R7+4]
005D10 8A27           20398         MOV.W   R2,[R7]
005D12 E9202710       20399         MULU.W  R2,#02710H
005D16 0902           20400         ADD.W   R0,R2
005D18 B910           20401         MOVS.W  R1,#00H
005D1A 964842rr       20402         MOV.B   ES,#SEG( _Calibration+220 )
005D1E 9928rrrr       20403         MOV.W   R2,#SOF( _Calibration+220 )
005D22 8B0A           20404         MOV.W   [R2+],R0
005D24 8A1A           20405         MOV.W   [R2],R1
                      20406 ; rs232cmd.c 5529                                               
                      20407 ; rs232cmd.c 5530                                                       NV_Store( &Calibration, C
                            alibrationPtr, sizeof( Calibration));
005D26 9918rrrr       20409         MOV.W   R1,#SEG( _Calibration )
005D2A 9908rrrr       20410         MOV.W   R0,#SOF( _Calibration )
005D2E 964842rr       20411         MOV.B   ES,#SEG( _CalibrationPtr )
005D32 9928rrrr       20412         MOV.W   R2,#SOF( _CalibrationPtr )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 318

ADDR   CODE            LINE SOURCELINE
005D36 8A22           20413         MOV.W   R2,[R2]
005D38 993800E2       20414         MOV.W   R3,#0E2H
                      20415         CALL    _NV_Store
005D3C C4rrrrrr       +20415 ;       FCALL   _NV_Store
                      20416 ; rs232cmd.c 5531                                               }
                      20417 ; rs232cmd.c 5532                                       }                               
                      20418 ; rs232cmd.c 5533                               }
                      20419 ; rs232cmd.c 5534                       }
                      20420 ; rs232cmd.c 5535               }
005D40                20422 _1423:
                      20423 ; rs232cmd.c 5536       }
005D40 9970001A       20425         ADD.W   R7,#01AH
005D44 2F30           20427         POP.W   R4, R5
005D46 D680           20429         RET
                      20431 ; rs232cmd.c 5537       
                      20432 ; rs232cmd.c 5538       /************************************************************************
                            **/
                      20433 ; rs232cmd.c 5539       /* FactAudioGenLevel                                                     
                                                                                                                             
                               RS232CMD.C */
                      20434 ; rs232cmd.c 5540       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20435 ; rs232cmd.c 5541       /* Author:              Kim Engedahl, DEV, 000411                        
                                                                                                                             
                                  */
                      20436 ; rs232cmd.c 5542       /* Revised:       000622                                                 
                                                                                                                             
                                                                                  */
                      20437 ; rs232cmd.c 5543       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20438 ; rs232cmd.c 5544       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20439 ; rs232cmd.c 5545       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      20440 ; rs232cmd.c 5546       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20441 ; rs232cmd.c 5547       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20442 ; rs232cmd.c 5548       /************************************************************************
                            **/
                      20443 ; rs232cmd.c 5549       void FactAudioGenLevel( void)
                      20444 ; rs232cmd.c 5550       {
                      20445         ALIGN   1
                      20447         PUBLIC  _FactAudioGenLevel
005D48                20448 _FactAudioGenLevel:
005D48 0F30           20452         PUSH.W  R4, R5
005D4A 99720018       20454         SUB.W   R7,#018H
                      20459 ; rs232cmd.c 5551           char buffer[20];
                      20460 ; rs232cmd.c 5552           UC AnalogLeft, AnalogRight;
                      20461 ; rs232cmd.c 5553       
                      20462 ; rs232cmd.c 5554           if ( CmdExecute && !SCPIError)
005D4E 964842rr       20464         MOV.B   ES,#SEG( _CmdExecute )
005D52 9908rrrr       20465         MOV.W   R0,#SOF( _CmdExecute )
005D56 8200           20466         MOV.B   R0L,[R0]
                      20467         BEQ     _1435
005D58 F202           +20467 ;       BNE     _LG_1410
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 319

ADDR   CODE            LINE SOURCELINE
005D5A D5008A         +20467 ;       JMP.L   _1435
005D5E D5008A00       +20467 ;       JMP.L   _1435
005D5E                +20467 _LG_1410:
005D5E 964842rr       20468         MOV.B   ES,#SEG( _SCPIError )
005D62 9908rrrr       20469         MOV.W   R0,#SOF( _SCPIError )
005D66 8A00           20470         MOV.W   R0,[R0]
                      20471         BNE     _1435
005D68 F302           +20471 ;       BEQ     _LG_1412
005D6A D50082         +20471 ;       JMP.L   _1435
005D6E D5008200       +20471 ;       JMP.L   _1435
005D6E                +20471 _LG_1412:
                      20472 ; rs232cmd.c 5555           {
                      20473 ; rs232cmd.c 5556           if ( CmdRequest)
005D6E 964842rr       20475         MOV.B   ES,#SEG( _CmdRequest )
005D72 9908rrrr       20476         MOV.W   R0,#SOF( _CmdRequest )
005D76 8200           20477         MOV.B   R0L,[R0]
005D78 F32E           20478         BEQ     _1427
                      20479 ; rs232cmd.c 5557           {
                      20480 ; rs232cmd.c 5558                   if ( ParCnt)
005D7A 964842rr       20482         MOV.B   ES,#SEG( _ParCnt )
005D7E 9908rrrr       20483         MOV.W   R0,#SOF( _ParCnt )
005D82 8200           20484         MOV.B   R0L,[R0]
005D84 F306           20485         BEQ     _1426
                      20486 ; rs232cmd.c 5559                           SCPIError = SyntaxErr;
005D86 964842rr       20488         MOV.B   ES,#SEG( _SCPIError )
005D8A 9908rrrr       20489         MOV.W   R0,#SOF( _SCPIError )
005D8E BA03           20490         MOV.W   [R0],#03H
005D90 FE6F           20491         BR      _1435
005D90 FE6F           20491         BR      _1435
005D92                20492 _1426:
                      20493 ; rs232cmd.c 5560                   else
                      20494 ; rs232cmd.c 5561                   {
                      20495 ; rs232cmd.c 5562                           sprintf( buffer, "%u,%u\n", Calibration.AudioCalibrat
                            ion.AnalogLeftChannel, 
                      20496 ; rs232cmd.c 5563                                                                                
                                                                           Calibration.AudioCalibration.AnalogRightChannel);
005D92 91A8rr         20498         MOV.B   R5L,#SEG( __lc_bs )
005D95 71BB           20499         XOR.B   R5H,R5H
005D97 8947           20500         MOV.W   R4,R7
005D99 964842rr       20501         MOV.B   ES,#SEG( _Calibration+224 )
005D9D 9908rrrr       20502         MOV.W   R0,#SOF( _Calibration+224 )
005DA1 8200           20503         MOV.B   R0L,[R0]
005DA3 B110           20504         MOVS.B  R0H,#00H
005DA5 964842rr       20505         MOV.B   ES,#SEG( _Calibration+225 )
005DA9 9918rrrr       20506         MOV.W   R1,#SOF( _Calibration+225 )
005DAD 8221           20507         MOV.B   R1L,[R1]
005DAF B130           20508         MOVS.B  R1H,#00H
005DB1 0F02           20509         PUSH.W  R1
005DB3 0F01           20511         PUSH.W  R0
005DB5 9918rrrr       20513         MOV.W   R1,#SEG( _1312 )
005DB9 9908rrrr       20514         MOV.W   R0,#SOF( _1312 )
005DBD 0F03           20515         PUSH.W  R0, R1
005DBF 8915           20517         MOV.W   R1,R5
005DC1 8904           20518         MOV.W   R0,R4
                      20519         CALL    _sprintf
005DC3 C4rrrrrr       +20519 ;       FCALL   _sprintf
005DC7 99700008       20520         ADD.W   R7,#08H
                      20522 ; rs232cmd.c 5564                           rs232puts( buffer);
005DCB 8915           20524         MOV.W   R1,R5
005DCD 8904           20525         MOV.W   R0,R4
                      20526         CALL    _rs232puts
005DCF C4rrrrrr       +20526 ;       FCALL   _rs232puts
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 320

ADDR   CODE            LINE SOURCELINE
                      20527 ; rs232cmd.c 5565                   }
                      20528 ; rs232cmd.c 5566           }
005DD3 FE4E           20530         BR      _1435
005DD3 FE4E00         20530         BR      _1435
005DD6                20531 _1427:
                      20532 ; rs232cmd.c 5567                   else
                      20533 ; rs232cmd.c 5568                   {
                      20534 ; rs232cmd.c 5569                   if ( !PasswordProtected)
005DD6 964842rr       20536         MOV.B   ES,#SEG( _PasswordProtected )
005DDA 9908rrrr       20537         MOV.W   R0,#SOF( _PasswordProtected )
005DDE 8A00           20538         MOV.W   R0,[R0]
005DE0 F247           20539         BNE     _1435
                      20540 ; rs232cmd.c 5570                   {
                      20541 ; rs232cmd.c 5571                           if (( ParCnt != 2) || (( sscanf( Cmd, "%u,%u", &Analo
                            gLeft, &AnalogRight)) != 2))
005DE2 964842rr       20543         MOV.B   ES,#SEG( _ParCnt )
005DE6 9908rrrr       20544         MOV.W   R0,#SOF( _ParCnt )
005DEA 8200           20545         MOV.B   R0L,[R0]
005DEC 910402         20546         CMP.B   R0L,#02H
005DEF F21B           20547         BNE     _1428
005DF1 9918rrrr       20548         MOV.W   R1,#SEG( _Cmd )
005DF5 9908rrrr       20549         MOV.W   R0,#SOF( _Cmd )
005DF9 9168rr         20550         MOV.B   R3L,#SEG( __lc_bs )
005DFC 7177           20551         XOR.B   R3H,R3H
005DFE 402714         20552         LEA     R2,R7+20
005E01 91A8rr         20553         MOV.B   R5L,#SEG( __lc_bs )
005E04 71BB           20554         XOR.B   R5H,R5H
005E06 404716         20555         LEA     R4,R7+22
005E09 0F30           20556         PUSH.W  R4, R5
005E0B 0F0C           20558         PUSH.W  R2, R3
005E0D 9938rrrr       20560         MOV.W   R3,#SEG( _1313 )
005E11 9928rrrr       20561         MOV.W   R2,#SOF( _1313 )
005E15 0F0C           20562         PUSH.W  R2, R3
                      20564         CALL    _sscanf
005E17 C4rrrrrr       +20564 ;       FCALL   _sscanf
005E1B 9970000C       20565         ADD.W   R7,#0CH
005E1F 99040002       20567         CMP.W   R0,#02H
005E23 F307           20568         BEQ     _1429
005E23 F30700         20568         BEQ     _1429
005E26                20569 _1428:
                      20570 ; rs232cmd.c 5572                                   SCPIError = SyntaxErr;
005E26 964842rr       20572         MOV.B   ES,#SEG( _SCPIError )
005E2A 9908rrrr       20573         MOV.W   R0,#SOF( _SCPIError )
005E2E BA03           20574         MOV.W   [R0],#03H
005E30 FE1F           20575         BR      _1435
005E30 FE1F           20575         BR      _1435
005E32                20576 _1429:
                      20577 ; rs232cmd.c 5573                           else
                      20578 ; rs232cmd.c 5574                           {
                      20579 ; rs232cmd.c 5575                                   Calibration.AudioCalibration.AnalogLeftChanne
                            l = AnalogLeft;
005E32 840714         20581         MOV.B   R0L,[R7+20]
005E35 964842rr       20582         MOV.B   ES,#SEG( _Calibration+224 )
005E39 9918rrrr       20583         MOV.W   R1,#SOF( _Calibration+224 )
005E3D 8209           20584         MOV.B   [R1],R0L
                      20585 ; rs232cmd.c 5576                                   Calibration.AudioCalibration.AnalogRightChann
                            el = AnalogRight;
005E3F 840716         20587         MOV.B   R0L,[R7+22]
005E42 964842rr       20588         MOV.B   ES,#SEG( _Calibration+225 )
005E46 9918rrrr       20589         MOV.W   R1,#SOF( _Calibration+225 )
005E4A 8209           20590         MOV.B   [R1],R0L
                      20591 ; rs232cmd.c 5577                                                   
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 321

ADDR   CODE            LINE SOURCELINE
                      20592 ; rs232cmd.c 5578                                   NV_Store( &Calibration, CalibrationPtr, sizeo
                            f( Calibration));
005E4C 9918rrrr       20594         MOV.W   R1,#SEG( _Calibration )
005E50 9908rrrr       20595         MOV.W   R0,#SOF( _Calibration )
005E54 964842rr       20596         MOV.B   ES,#SEG( _CalibrationPtr )
005E58 9928rrrr       20597         MOV.W   R2,#SOF( _CalibrationPtr )
005E5C 8A22           20598         MOV.W   R2,[R2]
005E5E 993800E2       20599         MOV.W   R3,#0E2H
                      20600         CALL    _NV_Store
005E62 C4rrrrrr       +20600 ;       FCALL   _NV_Store
                      20601 ; rs232cmd.c 5579       
                      20602 ; rs232cmd.c 5580                                   WriteAnlAudioDACLevel( AnalogLeft, AnalogRigh
                            t);
005E66 840714         20604         MOV.B   R0L,[R7+20]
005E69 841716         20605         MOV.B   R0H,[R7+22]
                      20606         CALL    _WriteAnlAudioDACLevel
005E6C C4rrrrrr       +20606 ;       FCALL   _WriteAnlAudioDACLevel
                      20607 ; rs232cmd.c 5581                           }
                      20608 ; rs232cmd.c 5582                   }
                      20609 ; rs232cmd.c 5583                   }
                      20610 ; rs232cmd.c 5584           }
005E70                20612 _1435:
                      20613 ; rs232cmd.c 5585       }
005E70 99700018       20615         ADD.W   R7,#018H
005E74 2F30           20617         POP.W   R4, R5
005E76 D680           20619         RET
                      20621 ; rs232cmd.c 5586       
                      20622 ; rs232cmd.c 5587       /************************************************************************
                            **/
                      20623 ; rs232cmd.c 5588       /* FactPLDVersion                                                        
                                                                                                                             
                                               RS232CMD.C */
                      20624 ; rs232cmd.c 5589       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20625 ; rs232cmd.c 5590       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                  */
                      20626 ; rs232cmd.c 5591       /* Revised:       000625                                                 
                                                                                                                             
                                                                                  */
                      20627 ; rs232cmd.c 5592       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20628 ; rs232cmd.c 5593       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20629 ; rs232cmd.c 5594       /* Remarks:             NOTE! The video PLD version has not been implemen
                            ted at this*/
                      20630 ; rs232cmd.c 5595       /*                                              this time, hence the retu
                            rn value of 0 does NOT reflect the     */
                      20631 ; rs232cmd.c 5596       /*                                              video PLD version.       
                                                                                                                             
                                                                                          */
                      20632 ; rs232cmd.c 5597       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20633 ; rs232cmd.c 5598       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20634 ; rs232cmd.c 5599       /************************************************************************
                            **/
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 322

ADDR   CODE            LINE SOURCELINE
                      20635 ; rs232cmd.c 5600       void FactPLDVersion( void)
                      20636 ; rs232cmd.c 5601       {
                      20637         ALIGN   1
                      20639         PUBLIC  _FactPLDVersion
005E78                20640 _FactPLDVersion:
005E78 0F30           20644         PUSH.W  R4, R5
005E7A 99720014       20646         SUB.W   R7,#014H
                      20649 ; rs232cmd.c 5602               char buffer[20];
                      20650 ; rs232cmd.c 5603       
                      20651 ; rs232cmd.c 5604               if ( CmdExecute && !SCPIError)
005E7E 964842rr       20653         MOV.B   ES,#SEG( _CmdExecute )
005E82 9908rrrr       20654         MOV.W   R0,#SOF( _CmdExecute )
005E86 8200           20655         MOV.B   R0L,[R0]
005E88 F336           20656         BEQ     _1443
005E8A 964842rr       20657         MOV.B   ES,#SEG( _SCPIError )
005E8E 9908rrrr       20658         MOV.W   R0,#SOF( _SCPIError )
005E92 8A00           20659         MOV.W   R0,[R0]
005E94 F230           20660         BNE     _1443
                      20661 ; rs232cmd.c 5605               {
                      20662 ; rs232cmd.c 5606                       if ( CmdRequest)
005E96 964842rr       20664         MOV.B   ES,#SEG( _CmdRequest )
005E9A 9908rrrr       20665         MOV.W   R0,#SOF( _CmdRequest )
005E9E 8200           20666         MOV.B   R0L,[R0]
005EA0 F325           20667         BEQ     _1439
                      20668 ; rs232cmd.c 5607                       {
                      20669 ; rs232cmd.c 5608                               if ( ParCnt)
005EA2 964842rr       20671         MOV.B   ES,#SEG( _ParCnt )
005EA6 9908rrrr       20672         MOV.W   R0,#SOF( _ParCnt )
005EAA 8200           20673         MOV.B   R0L,[R0]
005EAC F306           20674         BEQ     _1438
                      20675 ; rs232cmd.c 5609                                       SCPIError = SyntaxErr;
005EAE 964842rr       20677         MOV.B   ES,#SEG( _SCPIError )
005EB2 9908rrrr       20678         MOV.W   R0,#SOF( _SCPIError )
005EB6 BA03           20679         MOV.W   [R0],#03H
005EB8 FE1E           20680         BR      _1443
005EB8 FE1E           20680         BR      _1443
005EBA                20681 _1438:
                      20682 ; rs232cmd.c 5610                               else
                      20683 ; rs232cmd.c 5611                               {
                      20684 ; rs232cmd.c 5612                                       sprintf( buffer, "%u,%u\n", 0, pld_versio
                            n());
                      20686         CALL    _pld_version
005EBA C4rrrrrr       +20686 ;       FCALL   _pld_version
005EBE 91A8rr         20687         MOV.B   R5L,#SEG( __lc_bs )
005EC1 71BB           20688         XOR.B   R5H,R5H
005EC3 8947           20689         MOV.W   R4,R7
005EC5 0F01           20690         PUSH.W  R0
005EC7 B900           20692         MOV.W   R0,#00H
005EC9 0F01           20693         PUSH.W  R0
005ECB 9918rrrr       20695         MOV.W   R1,#SEG( _1312 )
005ECF 9908rrrr       20696         MOV.W   R0,#SOF( _1312 )
005ED3 0F03           20697         PUSH.W  R0, R1
005ED5 8915           20699         MOV.W   R1,R5
005ED7 8904           20700         MOV.W   R0,R4
                      20701         CALL    _sprintf
005ED9 C4rrrrrr       +20701 ;       FCALL   _sprintf
005EDD 99700008       20702         ADD.W   R7,#08H
                      20704 ; rs232cmd.c 5613                                       rs232puts( buffer);
005EE1 8915           20706         MOV.W   R1,R5
005EE3 8904           20707         MOV.W   R0,R4
                      20708         CALL    _rs232puts
005EE5 C4rrrrrr       +20708 ;       FCALL   _rs232puts
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 323

ADDR   CODE            LINE SOURCELINE
                      20709 ; rs232cmd.c 5614                               }
                      20710 ; rs232cmd.c 5615                       }
005EE9 FE06           20712         BR      _1443
005EE9 FE0600         20712         BR      _1443
005EEC                20713 _1439:
                      20714 ; rs232cmd.c 5616                       else
                      20715 ; rs232cmd.c 5617                               SCPIError = SyntaxErr;
005EEC 964842rr       20717         MOV.B   ES,#SEG( _SCPIError )
005EF0 9908rrrr       20718         MOV.W   R0,#SOF( _SCPIError )
005EF4 BA03           20719         MOV.W   [R0],#03H
                      20720 ; rs232cmd.c 5618               }
005EF6                20722 _1443:
                      20723 ; rs232cmd.c 5619       }
005EF6 99700014       20725         ADD.W   R7,#014H
005EFA 2F30           20727         POP.W   R4, R5
005EFC D680           20729         RET
                      20731 ; rs232cmd.c 5620       
                      20732 ; rs232cmd.c 5621       /************************************************************************
                            **/
                      20733 ; rs232cmd.c 5622       /* FactTCXOStatus                                                        
                                                                                                                             
                                               RS232CMD.C */
                      20734 ; rs232cmd.c 5623       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20735 ; rs232cmd.c 5624       /* Author:              Kim Engedahl, DEV, 000628                        
                                                                                                                             
                                  */
                      20736 ; rs232cmd.c 5625       /* Revised:       000628                                                 
                                                                                                                             
                                                                                  */
                      20737 ; rs232cmd.c 5626       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20738 ; rs232cmd.c 5627       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20739 ; rs232cmd.c 5628       /* Remarks:                                                              
                                                                                                                             
                                                                                                                  
                      20740 ; rs232cmd.c 5629       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20741 ; rs232cmd.c 5630       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20742 ; rs232cmd.c 5631       /************************************************************************
                            **/
                      20743 ; rs232cmd.c 5632       void FactTCXOStatus( void)
                      20744 ; rs232cmd.c 5633       {
                      20745         ALIGN   1
                      20747         PUBLIC  _FactTCXOStatus
005EFE                20748 _FactTCXOStatus:
005EFE 0F30           20752         PUSH.W  R4, R5
005F00 99720014       20754         SUB.W   R7,#014H
                      20757 ; rs232cmd.c 5634               char buffer[20];
                      20758 ; rs232cmd.c 5635       
                      20759 ; rs232cmd.c 5636               if ( CmdExecute && !SCPIError)
005F04 964842rr       20761         MOV.B   ES,#SEG( _CmdExecute )
005F08 9908rrrr       20762         MOV.W   R0,#SOF( _CmdExecute )
005F0C 8200           20763         MOV.B   R0L,[R0]
005F0E F333           20764         BEQ     _1449
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 324

ADDR   CODE            LINE SOURCELINE
005F10 964842rr       20765         MOV.B   ES,#SEG( _SCPIError )
005F14 9908rrrr       20766         MOV.W   R0,#SOF( _SCPIError )
005F18 8A00           20767         MOV.W   R0,[R0]
005F1A F22D           20768         BNE     _1449
                      20769 ; rs232cmd.c 5637               {
                      20770 ; rs232cmd.c 5638                       if ( CmdRequest)
005F1C 964842rr       20772         MOV.B   ES,#SEG( _CmdRequest )
005F20 9908rrrr       20773         MOV.W   R0,#SOF( _CmdRequest )
005F24 8200           20774         MOV.B   R0L,[R0]
005F26 F322           20775         BEQ     _1445
                      20776 ; rs232cmd.c 5639                       {
                      20777 ; rs232cmd.c 5640                               if ( ParCnt)
005F28 964842rr       20779         MOV.B   ES,#SEG( _ParCnt )
005F2C 9908rrrr       20780         MOV.W   R0,#SOF( _ParCnt )
005F30 8200           20781         MOV.B   R0L,[R0]
005F32 F306           20782         BEQ     _1444
                      20783 ; rs232cmd.c 5641                                       SCPIError = SyntaxErr;
005F34 964842rr       20785         MOV.B   ES,#SEG( _SCPIError )
005F38 9908rrrr       20786         MOV.W   R0,#SOF( _SCPIError )
005F3C BA03           20787         MOV.W   [R0],#03H
005F3E FE1B           20788         BR      _1449
005F3E FE1B           20788         BR      _1449
005F40                20789 _1444:
                      20790 ; rs232cmd.c 5642                               else
                      20791 ; rs232cmd.c 5643                               {
                      20792 ; rs232cmd.c 5644                                       sprintf( buffer, "%u\n", tcxo_status());
                      20794         CALL    _tcxo_status
005F40 C4rrrrrr       +20794 ;       FCALL   _tcxo_status
005F44 91A8rr         20795         MOV.B   R5L,#SEG( __lc_bs )
005F47 71BB           20796         XOR.B   R5H,R5H
005F49 8947           20797         MOV.W   R4,R7
005F4B 0F01           20798         PUSH.W  R0
005F4D 9918rrrr       20800         MOV.W   R1,#SEG( _1012 )
005F51 9908rrrr       20801         MOV.W   R0,#SOF( _1012 )
005F55 0F03           20802         PUSH.W  R0, R1
005F57 8915           20804         MOV.W   R1,R5
005F59 8904           20805         MOV.W   R0,R4
                      20806         CALL    _sprintf
005F5B C4rrrrrr       +20806 ;       FCALL   _sprintf
005F5F A976           20807         ADDS.W  R7,#06H
                      20809 ; rs232cmd.c 5645                                       rs232puts( buffer);
005F61 8915           20811         MOV.W   R1,R5
005F63 8904           20812         MOV.W   R0,R4
                      20813         CALL    _rs232puts
005F65 C4rrrrrr       +20813 ;       FCALL   _rs232puts
                      20814 ; rs232cmd.c 5646                               }
                      20815 ; rs232cmd.c 5647                       }
005F69 FE06           20817         BR      _1449
005F69 FE0600         20817         BR      _1449
005F6C                20818 _1445:
                      20819 ; rs232cmd.c 5648                       else
                      20820 ; rs232cmd.c 5649                               SCPIError = SyntaxErr;
005F6C 964842rr       20822         MOV.B   ES,#SEG( _SCPIError )
005F70 9908rrrr       20823         MOV.W   R0,#SOF( _SCPIError )
005F74 BA03           20824         MOV.W   [R0],#03H
                      20825 ; rs232cmd.c 5650               }
005F76                20827 _1449:
                      20828 ; rs232cmd.c 5651       }
005F76 99700014       20830         ADD.W   R7,#014H
005F7A 2F30           20832         POP.W   R4, R5
005F7C D680           20834         RET
                      20836 ; rs232cmd.c 5652       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 325

ADDR   CODE            LINE SOURCELINE
                      20837 ; rs232cmd.c 5653       /************************************************************************
                            **/
                      20838 ; rs232cmd.c 5654       /* FactMultiMediaChip                                                    
                                                                                                                             
                               RS232CMD.C */
                      20839 ; rs232cmd.c 5655       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20840 ; rs232cmd.c 5656       /* Author:              Kim Engedahl, DEV, 000505                        
                                                                                                                             
                                  */
                      20841 ; rs232cmd.c 5657       /* Revised:       000614                                                 
                                                                                                                             
                                                                                  */
                      20842 ; rs232cmd.c 5658       /*                                                                       
                                                                                                                             
                                                                                                                  
                      20843 ; rs232cmd.c 5659       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      20844 ; rs232cmd.c 5660       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      20845 ; rs232cmd.c 5661       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      20846 ; rs232cmd.c 5662       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      20847 ; rs232cmd.c 5663       /************************************************************************
                            **/
                      20848 ; rs232cmd.c 5664       void FactMultiMediaChip( void)
                      20849 ; rs232cmd.c 5665       {
                      20850         ALIGN   1
                      20852         PUBLIC  _FactMultiMediaChip
005F7E                20853 _FactMultiMediaChip:
005F7E 0F30           20857         PUSH.W  R4, R5
005F80 A97A           20859         ADDS.W  R7,#0AH
                      20865 ; rs232cmd.c 5666               UI test[2];
                      20866 ; rs232cmd.c 5667               UC tmp[2];
                      20867 ; rs232cmd.c 5668       
                      20868 ; rs232cmd.c 5669               if ( CmdExecute && !SCPIError)
005F82 964842rr       20870         MOV.B   ES,#SEG( _CmdExecute )
005F86 9908rrrr       20871         MOV.W   R0,#SOF( _CmdExecute )
005F8A 8200           20872         MOV.B   R0L,[R0]
                      20873         BEQ     _1460
005F8C F202           +20873 ;       BNE     _LG_1440
005F8E D500C0         +20873 ;       JMP.L   _1460
005F92 D500C000       +20873 ;       JMP.L   _1460
005F92                +20873 _LG_1440:
005F92 964842rr       20874         MOV.B   ES,#SEG( _SCPIError )
005F96 9908rrrr       20875         MOV.W   R0,#SOF( _SCPIError )
005F9A 8A00           20876         MOV.W   R0,[R0]
                      20877         BNE     _1460
005F9C F302           +20877 ;       BEQ     _LG_1442
005F9E D500B8         +20877 ;       JMP.L   _1460
005FA2 D500B800       +20877 ;       JMP.L   _1460
005FA2                +20877 _LG_1442:
                      20878 ; rs232cmd.c 5670               {
                      20879 ; rs232cmd.c 5671                       if ( CmdRequest)
005FA2 964842rr       20881         MOV.B   ES,#SEG( _CmdRequest )
005FA6 9908rrrr       20882         MOV.W   R0,#SOF( _CmdRequest )
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 326

ADDR   CODE            LINE SOURCELINE
005FAA 8200           20883         MOV.B   R0L,[R0]
005FAC F34C           20884         BEQ     _1453
                      20885 ; rs232cmd.c 5672                       {
                      20886 ; rs232cmd.c 5673                               if ( ParCnt != 1)
005FAE 964842rr       20888         MOV.B   ES,#SEG( _ParCnt )
005FB2 9908rrrr       20889         MOV.W   R0,#SOF( _ParCnt )
005FB6 8200           20890         MOV.B   R0L,[R0]
005FB8 910401         20891         CMP.B   R0L,#01H
005FBB F307           20892         BEQ     _1452
                      20893 ; rs232cmd.c 5674                                       SCPIError = SyntaxErr;
005FBD 964842rr       20895         MOV.B   ES,#SEG( _SCPIError )
005FC1 9908rrrr       20896         MOV.W   R0,#SOF( _SCPIError )
005FC5 BA03           20897         MOV.W   [R0],#03H
                      20898         BR      _1460
005FC7 D500A3         +20898         JMP.L   _1460
005FC7 D500A3         +20898         JMP.L   _1460
005FCA                20899 _1452:
                      20900 ; rs232cmd.c 5675                               else
                      20901 ; rs232cmd.c 5676                               {
                      20902 ; rs232cmd.c 5677                                       sscanf( Cmd, "%d", &test[0]);
005FCA 9918rrrr       20904         MOV.W   R1,#SEG( _Cmd )
005FCE 9908rrrr       20905         MOV.W   R0,#SOF( _Cmd )
005FD2 9168rr         20906         MOV.B   R3L,#SEG( __lc_bs )
005FD5 7177           20907         XOR.B   R3H,R3H
005FD7 8927           20908         MOV.W   R2,R7
005FD9 0F0C           20909         PUSH.W  R2, R3
005FDB 9938rrrr       20911         MOV.W   R3,#SEG( _10 )
005FDF 9928rrrr       20912         MOV.W   R2,#SOF( _10 )
005FE3 0F0C           20913         PUSH.W  R2, R3
                      20915         CALL    _sscanf
005FE5 C4rrrrrr       +20915 ;       FCALL   _sscanf
005FE9 99700008       20916         ADD.W   R7,#08H
                      20918 ; rs232cmd.c 5678       
                      20919 ; rs232cmd.c 5679                                       tmp[0] = test[0] & 0x0FF;
005FED 8A07           20921         MOV.W   R0,[R7]
005FEF 9105FF         20922         AND.B   R0L,#0FFH
005FF2 840F04         20923         MOV.B   [R7+4],R0L
                      20924 ; rs232cmd.c 5680       
                      20925 ; rs232cmd.c 5681                                       TransmitIIC( 0x40, 1, tmp, IIC_PTV);
005FF5 9168rr         20927         MOV.B   R3L,#SEG( __lc_bs )
005FF8 7177           20928         XOR.B   R3H,R3H
005FFA 402704         20929         LEA     R2,R7+4
005FFD 912800         20930         MOV.B   R1L,#00H
006000 911801         20931         MOV.B   R0H,#01H
006003 910840         20932         MOV.B   R0L,#040H
                      20933         CALL    _TransmitIIC
006006 C4rrrrrr       +20933 ;       FCALL   _TransmitIIC
                      20934 ; rs232cmd.c 5682                                       ReceiveIIC( 0x40, 1, &tmp[1], IIC_PTV);
00600A 9168rr         20936         MOV.B   R3L,#SEG( __lc_bs )
00600D 7177           20937         XOR.B   R3H,R3H
00600F 402705         20938         LEA     R2,R7+5
006012 910840         20939         MOV.B   R0L,#040H
006015 911801         20940         MOV.B   R0H,#01H
006018 912800         20941         MOV.B   R1L,#00H
                      20942         CALL    _ReceiveIIC
00601B C4rrrrrr       +20942 ;       FCALL   _ReceiveIIC
                      20943 ; rs232cmd.c 5683       
                      20944 ; rs232cmd.c 5684                                       rs232printf( 12,"%03d,%03d\n", ( int) tmp
                            [0], ( int) tmp[1]);
00601F 9908000C       20946         MOV.W   R0,#0CH
006023 842704         20947         MOV.B   R1L,[R7+4]
006026 B130           20948         MOVS.B  R1H,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 327

ADDR   CODE            LINE SOURCELINE
006028 844705         20949         MOV.B   R2L,[R7+5]
00602B B150           20950         MOVS.B  R2H,#00H
00602D 0F04           20951         PUSH.W  R2
00602F 0F02           20953         PUSH.W  R1
006031 9938rrrr       20955         MOV.W   R3,#SEG( _1450 )
006035 9928rrrr       20956         MOV.W   R2,#SOF( _1450 )
006039 0F0C           20957         PUSH.W  R2, R3
                      20959         CALL    _rs232printf
00603B C4rrrrrr       +20959 ;       FCALL   _rs232printf
00603F 99700008       20960         ADD.W   R7,#08H
                      20962 ; rs232cmd.c 5685                               }
                      20963 ; rs232cmd.c 5686                       }
006043 FE66           20965         BR      _1460
006043 FE6600         20965         BR      _1460
006046                20966 _1453:
                      20967 ; rs232cmd.c 5687                       else
                      20968 ; rs232cmd.c 5688                       {
                      20969 ; rs232cmd.c 5689                               if ( !PasswordProtected)
006046 964842rr       20971         MOV.B   ES,#SEG( _PasswordProtected )
00604A 9908rrrr       20972         MOV.W   R0,#SOF( _PasswordProtected )
00604E 8A00           20973         MOV.W   R0,[R0]
006050 F25F           20974         BNE     _1460
                      20975 ; rs232cmd.c 5690                               {
                      20976 ; rs232cmd.c 5691                                       if ( ParCnt != 2)
006052 964842rr       20978         MOV.B   ES,#SEG( _ParCnt )
006056 9908rrrr       20979         MOV.W   R0,#SOF( _ParCnt )
00605A 8200           20980         MOV.B   R0L,[R0]
00605C 910402         20981         CMP.B   R0L,#02H
00605F F307           20982         BEQ     _1454
                      20983 ; rs232cmd.c 5692                                               SCPIError = SyntaxErr;  
006061 964842rr       20985         MOV.B   ES,#SEG( _SCPIError )
006065 9908rrrr       20986         MOV.W   R0,#SOF( _SCPIError )
006069 BA03           20987         MOV.W   [R0],#03H
00606B FE52           20988         BR      _1460
00606B FE5200         20988         BR      _1460
00606E                20989 _1454:
                      20990 ; rs232cmd.c 5693                                       else
                      20991 ; rs232cmd.c 5694                                       {
                      20992 ; rs232cmd.c 5695                                               sscanf( Cmd, "%d,%d", &test[0], &
                            test[1]);
00606E 9918rrrr       20994         MOV.W   R1,#SEG( _Cmd )
006072 9908rrrr       20995         MOV.W   R0,#SOF( _Cmd )
006076 9168rr         20996         MOV.B   R3L,#SEG( __lc_bs )
006079 7177           20997         XOR.B   R3H,R3H
00607B 8927           20998         MOV.W   R2,R7
00607D 91A8rr         20999         MOV.B   R5L,#SEG( __lc_bs )
006080 71BB           21000         XOR.B   R5H,R5H
006082 404702         21001         LEA     R4,R7+2
006085 0F30           21002         PUSH.W  R4, R5
006087 0F0C           21004         PUSH.W  R2, R3
006089 9938rrrr       21006         MOV.W   R3,#SEG( _1451 )
00608D 9928rrrr       21007         MOV.W   R2,#SOF( _1451 )
006091 0F0C           21008         PUSH.W  R2, R3
                      21010         CALL    _sscanf
006093 C4rrrrrr       +21010 ;       FCALL   _sscanf
006097 9970000C       21011         ADD.W   R7,#0CH
                      21013 ; rs232cmd.c 5696       
                      21014 ; rs232cmd.c 5697                                               tmp[0] = test[0] & 0x0FF;
00609B 8A07           21016         MOV.W   R0,[R7]
00609D 9105FF         21017         AND.B   R0L,#0FFH
0060A0 840F04         21018         MOV.B   [R7+4],R0L
                      21019 ; rs232cmd.c 5698                                               tmp[1] = test[1] & 0x0FF;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 328

ADDR   CODE            LINE SOURCELINE
0060A3 8C0702         21021         MOV.W   R0,[R7+2]
0060A6 9105FF         21022         AND.B   R0L,#0FFH
0060A9 840F05         21023         MOV.B   [R7+5],R0L
                      21024 ; rs232cmd.c 5699       
                      21025 ; rs232cmd.c 5700                                               TransmitIIC( 0x40, 2, tmp, IIC_PT
                            V);
0060AC 911802         21027         MOV.B   R0H,#02H
0060AF 91A8rr         21028         MOV.B   R5L,#SEG( __lc_bs )
0060B2 71BB           21029         XOR.B   R5H,R5H
0060B4 404704         21030         LEA     R4,R7+4
0060B7 912800         21031         MOV.B   R1L,#00H
0060BA 8935           21032         MOV.W   R3,R5
0060BC 8924           21033         MOV.W   R2,R4
0060BE 910840         21034         MOV.B   R0L,#040H
                      21035         CALL    _TransmitIIC
0060C1 C4rrrrrr       +21035 ;       FCALL   _TransmitIIC
                      21036 ; rs232cmd.c 5701       
                      21037 ; rs232cmd.c 5702                                               TransmitIIC( 0x40, 1, tmp, IIC_PT
                            V);
0060C5 912800         21039         MOV.B   R1L,#00H
0060C8 911801         21040         MOV.B   R0H,#01H
0060CB 910840         21041         MOV.B   R0L,#040H
0060CE 8935           21042         MOV.W   R3,R5
0060D0 8924           21043         MOV.W   R2,R4
                      21044         CALL    _TransmitIIC
0060D2 C4rrrrrr       +21044 ;       FCALL   _TransmitIIC
                      21045 ; rs232cmd.c 5703                                               ReceiveIIC( 0x40, 1, &tmp[1], IIC
                            _PTV);
0060D6 9168rr         21047         MOV.B   R3L,#SEG( __lc_bs )
0060D9 7177           21048         XOR.B   R3H,R3H
0060DB 402705         21049         LEA     R2,R7+5
0060DE 910840         21050         MOV.B   R0L,#040H
0060E1 911801         21051         MOV.B   R0H,#01H
0060E4 912800         21052         MOV.B   R1L,#00H
                      21053         CALL    _ReceiveIIC
0060E7 C4rrrrrr       +21053 ;       FCALL   _ReceiveIIC
                      21054 ; rs232cmd.c 5704       
                      21055 ; rs232cmd.c 5705                                               rs232printf( 12,"%03d,%03d\n", ( 
                            int) tmp[0], ( int) tmp[1]);
0060EB 9908000C       21057         MOV.W   R0,#0CH
0060EF 842704         21058         MOV.B   R1L,[R7+4]
0060F2 B130           21059         MOVS.B  R1H,#00H
0060F4 844705         21060         MOV.B   R2L,[R7+5]
0060F7 B150           21061         MOVS.B  R2H,#00H
0060F9 0F04           21062         PUSH.W  R2
0060FB 0F02           21064         PUSH.W  R1
0060FD 9938rrrr       21066         MOV.W   R3,#SEG( _1450 )
006101 9928rrrr       21067         MOV.W   R2,#SOF( _1450 )
006105 0F0C           21068         PUSH.W  R2, R3
                      21070         CALL    _rs232printf
006107 C4rrrrrr       +21070 ;       FCALL   _rs232printf
00610B 99700008       21071         ADD.W   R7,#08H
                      21073 ; rs232cmd.c 5706                                       }
                      21074 ; rs232cmd.c 5707                               }
                      21075 ; rs232cmd.c 5708                       }
                      21076 ; rs232cmd.c 5709               }
006110                21078 _1460:
                      21079 ; rs232cmd.c 5710       }
006110 A976           21081         ADDS.W  R7,#06H
006112 2F30           21083         POP.W   R4, R5
006114 D680           21085         RET
                      21087 ; rs232cmd.c 5711       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 329

ADDR   CODE            LINE SOURCELINE
                      21088 ; rs232cmd.c 5712       /************************************************************************
                            **/
                      21089 ; rs232cmd.c 5713       /* FindParameter                                                         
                                                                                                                             
                                               RS232CMD.C */
                      21090 ; rs232cmd.c 5714       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21091 ; rs232cmd.c 5715       /* Author:              Kim Engedahl, DEV, 941124                        
                                                                                                                             
                                  */
                      21092 ; rs232cmd.c 5716       /* Revised:             000603                                           
                                                                                                                             
                                                                                  */
                      21093 ; rs232cmd.c 5717       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21094 ; rs232cmd.c 5718       /* Function:    Find the character defined parameter                     
                                                                                                   */
                      21095 ; rs232cmd.c 5719       /* Remarks:             --                                               
                                                                                                                             
                                                                                                                  
                      21096 ; rs232cmd.c 5720       /* Returns:             The array number containing the parameter or max.
                             array+1               */
                      21097 ; rs232cmd.c 5721       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      21098 ; rs232cmd.c 5722       /************************************************************************
                            **/
                      21099 ; rs232cmd.c 5723       int FindParameter( char* par, struct PAR_STRUCT code* ParPtr)
                      21100 ; rs232cmd.c 5724         {
                      21101         ALIGN   1
                      21103         PUBLIC  _FindParameter
006116                21104 _FindParameter:
006116 0F70           21108         PUSH.W  R4, R5, R6
006118 A97C           21110         ADDS.W  R7,#0CH
00611A 8951           21114         MOV.W   R5,R1
00611C 8940           21115         MOV.W   R4,R0
                      21122 ; rs232cmd.c 5725               int tmp = 0;
00611E B960           21124         MOV.W   R6,#00H
                      21126 ; rs232cmd.c 5726       
                      21127 ; rs232cmd.c 5727               while ( ParPtr)
006120 8913           21129         MOV.W   R1,R3
006122 8902           21130         MOV.W   R0,R2
006124 6932           21131         OR.W    R3,R2
006126 F33F           21134         BEQ     _1467
006126 F33F           21134         BEQ     _1467
006128                21135 _1463:
                      21136 ; rs232cmd.c 5728                 {
                      21137 ; rs232cmd.c 5729                       if (( !Cstrcmp( par, ParPtr->LongName)) || ( !Cstrcmp( pa
                            r, ParPtr->ShortName)))
006128 8C1F02         21139         MOV.W   [R7+2],R1
00612B 8A0F           21140         MOV.W   [R7],R0
00612D 862C43         21141         MOV.B   CS,R1L
006130 8820           21142         MOVC.W  R2,[R0+]
006132 99040000       21143         CMP.W   R0,#00H
006136 F202           21144         BNE     _1469
006138 A64143         21145         ADDS.B  CS,#01H
006138 A6414300       21145         ADDS.B  CS,#01H
00613C                21146 _1469:
00613C 8830           21147         MOVC.W  R3,[R0+]
00613E 8915           21150         MOV.W   R1,R5
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 330

ADDR   CODE            LINE SOURCELINE
006140 8904           21151         MOV.W   R0,R4
                      21154         CALL    _Cstrcmp
006142 C4rrrrrr       +21154 ;       FCALL   _Cstrcmp
006146 6900           21157         OR.W    R0,R0
006148 F315           21158         BEQ     _1464
00614A 8C1702         21159         MOV.W   R1,[R7+2]
00614D 8A07           21160         MOV.W   R0,[R7]
00614F 99000004       21161         ADD.W   R0,#04H
006153 99110000       21162         ADDC.W  R1,#00H
006157 862C43         21163         MOV.B   CS,R1L
00615A 8820           21164         MOVC.W  R2,[R0+]
00615C 99040000       21165         CMP.W   R0,#00H
006160 F202           21166         BNE     _1470
006162 A64143         21167         ADDS.B  CS,#01H
006162 A6414300       21167         ADDS.B  CS,#01H
006166                21168 _1470:
006166 8830           21169         MOVC.W  R3,[R0+]
006168 8915           21170         MOV.W   R1,R5
00616A 8904           21171         MOV.W   R0,R4
                      21174         CALL    _Cstrcmp
00616C C4rrrrrr       +21174 ;       FCALL   _Cstrcmp
006170 6900           21177         OR.W    R0,R0
006172 F202           21178         BNE     _1465
006172 F202           21178         BNE     _1465
006174                21179 _1464:
                      21180 ; rs232cmd.c 5730                               return( tmp);
006174 8906           21182         MOV.W   R0,R6
006176 FE19           21185         BR      _1468
006176 FE19           21185         BR      _1468
006178                21186 _1465:
                      21193 ; rs232cmd.c 5731       
                      21194 ; rs232cmd.c 5732                       ParPtr = ParPtr->SameLevel;
006178 8C1702         21196         MOV.W   R1,[R7+2]
00617B 8A07           21197         MOV.W   R0,[R7]
00617D 99000008       21198         ADD.W   R0,#08H
006181 99110000       21199         ADDC.W  R1,#00H
006185 862C43         21203         MOV.B   CS,R1L
006188 8820           21204         MOVC.W  R2,[R0+]
00618A 99040000       21205         CMP.W   R0,#00H
00618E F202           21206         BNE     _1471
006190 A64143         21207         ADDS.B  CS,#01H
006190 A6414300       21207         ADDS.B  CS,#01H
006194                21208 _1471:
006194 8830           21209         MOVC.W  R3,[R0+]
                      21211 ; rs232cmd.c 5733       
                      21212 ; rs232cmd.c 5734                       if ( tmp < 255)
006196 996400FF       21214         CMP.W   R6,#0FFH
00619A FA05           21215         BGE     _1467
                      21216 ; rs232cmd.c 5735                               tmp++;
00619C A961           21218         ADDS.W  R6,#01H
00619E 8913           21222         MOV.W   R1,R3
0061A0 8902           21223         MOV.W   R0,R2
0061A2 6932           21224         OR.W    R3,R2
0061A4 F2C1           21227         BNE     _1463
                      21228 ; rs232cmd.c 5736                       else
                      21229 ; rs232cmd.c 5737                               break;
                      21230 ; rs232cmd.c 5738                 }
0061A6                21232 _1467:
                      21233 ; rs232cmd.c 5739               return( -1);
0061A6 9908FFFF       21235         MOV.W   R0,#0FFFFH
                      21237 ; rs232cmd.c 5740         }
0061AA                21239 _1468:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 331

ADDR   CODE            LINE SOURCELINE
0061AA A974           21240         ADDS.W  R7,#04H
0061AC 2F70           21242         POP.W   R4, R5, R6
0061AE D680           21244         RET
                      21248 ; rs232cmd.c 5741       
                      21249 ; rs232cmd.c 5742       
                      21250 ; rs232cmd.c 5743       /************************************************************************
                            **/
                      21251 ; rs232cmd.c 5744       /* FLTToSamples                                                          
                                                                                                                             
                                                   RS232CMD.C */
                      21252 ; rs232cmd.c 5745       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21253 ; rs232cmd.c 5746       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                  */
                      21254 ; rs232cmd.c 5747       /* Revised:             000530                                           
                                                                                                                             
                                                                                  */
                      21255 ; rs232cmd.c 5748       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21256 ; rs232cmd.c 5749       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      21257 ; rs232cmd.c 5750       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                   */
                      21258 ; rs232cmd.c 5751       /* Returns:             FLT in samples, or -1 if illegal                 
                                                                                                                           */
                            
                      21259 ; rs232cmd.c 5752       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      21260 ; rs232cmd.c 5753       /************************************************************************
                            ***/
                      21261 ; rs232cmd.c 5754       long FLTToSamples( UC system, int F, int L, float T) {
                      21262         ALIGN   1
                      21264         PUBLIC  _FLTToSamples
0061B0                21265 _FLTToSamples:
0061B0 0F70           21269         PUSH.W  R4, R5, R6
0061B2 99720018       21271         SUB.W   R7,#018H
0061B6 840F12         21274         MOV.B   [R7+18],R0L
0061B9 8C2F0E         21277         MOV.W   [R7+14],R2
                      21287 ; rs232cmd.c 5755       
                      21288 ; rs232cmd.c 5756               long samples;
                      21289 ; rs232cmd.c 5757               char minus;
                      21290 ; rs232cmd.c 5758       
                      21291 ; rs232cmd.c 5759               if (( F == 0) && ( L == 0) && ( T == 0))
0061BC 8C1F10         21293         MOV.W   [R7+16],R1
0061BF 6911           21294         OR.W    R1,R1
0061C1 F210           21295         BNE     _1478
0061C3 8C070E         21296         MOV.W   R0,[R7+14]
0061C6 F20D           21297         BNE     _1478
0061C8 B930           21298         MOV.W   R3,#00H
0061CA B920           21299         MOV.W   R2,#00H
0061CC 8C1724         21300         MOV.W   R1,[R7+36]
0061CF 8C0722         21301         MOV.W   R0,[R7+34]
0061D2 C4rrrrrr       21302         FCALL   __CMP_SPF
0061D6 910400         21303         CMP.B   R0L,#00H
0061D9 F204           21304         BNE     _1478
                      21305 ; rs232cmd.c 5760                       return( 0);
0061DB B910           21307         MOV.W   R1,#00H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 332

ADDR   CODE            LINE SOURCELINE
0061DD B900           21308         MOV.W   R0,#00H
                      21309         BR      _1545
0061DF D5021E         +21309         JMP.L   _1545
0061DF D5021E         +21309         JMP.L   _1545
0061E2                21310 _1478:
                      21313 ; rs232cmd.c 5761       
                      21314 ; rs232cmd.c 5762               if (( F <= 0) && ( L <= 0) && ( T <= 0))
0061E2 9C74100000     21316         CMP.W   [R7+16],#00H
0061E7 FC10           21317         BGT     _1481
0061E9 9C740E0000     21318         CMP.W   [R7+14],#00H
0061EE FC0C           21319         BGT     _1481
0061F0 B930           21320         MOV.W   R3,#00H
0061F2 B920           21321         MOV.W   R2,#00H
0061F4 8C1724         21322         MOV.W   R1,[R7+36]
0061F7 8C0722         21323         MOV.W   R0,[R7+34]
0061FA C4rrrrrr       21324         FCALL   __CMP_SPF
0061FE 910400         21325         CMP.B   R0L,#00H
006201 FC03           21326         BGT     _1481
                      21327 ; rs232cmd.c 5763               {
                      21328 ; rs232cmd.c 5764                       minus = 1;
006203 B4710C         21330         MOV.B   [R7+12],#01H
                      21332 ; rs232cmd.c 5765               }
006206 FE19           21334         BR      _1485
006206 FE19           21334         BR      _1485
006208                21335 _1481:
                      21336 ; rs232cmd.c 5766               else
                      21337 ; rs232cmd.c 5767               {
                      21338 ; rs232cmd.c 5768                       if (( F >= 0) && ( L >= 0) && ( T >= 0))
006208 9C74100000     21340         CMP.W   [R7+16],#00H
00620D FB0E           21341         BLT     _1483
00620F 9C740E0000     21342         CMP.W   [R7+14],#00H
006214 FB0A           21343         BLT     _1483
006216 B930           21344         MOV.W   R3,#00H
006218 B920           21345         MOV.W   R2,#00H
00621A 8C1724         21346         MOV.W   R1,[R7+36]
00621D 8C0722         21347         MOV.W   R0,[R7+34]
006220 C4rrrrrr       21348         FCALL   __CMP_SPF
006224 910400         21349         CMP.B   R0L,#00H
006227 FA07           21350         BGE     _1484
                      21351 ; rs232cmd.c 5769                               minus = 0;
00622A                21353 _1483:
                      21354 ; rs232cmd.c 5770                       else
                      21355 ; rs232cmd.c 5771                               return( -1);
00622A 9918FFFF       21357         MOV.W   R1,#0FFFFH
00622E 9908FFFF       21358         MOV.W   R0,#0FFFFH
                      21359         BR      _1545
006232 D501F5         +21359         JMP.L   _1545
006236                21361 _1484:
006236 B4700C         21364         MOV.B   [R7+12],#00H
                      21367 ; rs232cmd.c 5772               }
00623A                21369 _1485:
                      21370 ; rs232cmd.c 5773       
                      21371 ; rs232cmd.c 5774                                                                                
                                                                                                           // 1 sample = (1/2
                            7MHz)/256
                      21372 ; rs232cmd.c 5775               samples = ( long)(( T*6912L)/1000L + 0.5);      
00623A 991845D8       21374         MOV.W   R1,#045D8H
00623E B900           21375         MOV.W   R0,#00H
006240 8C3724         21376         MOV.W   R3,[R7+36]
006243 8C2722         21377         MOV.W   R2,[R7+34]
006246 C4rrrrrr       21378         FCALL   __MUL_SPF
00624A 9938447A       21379         MOV.W   R3,#0447AH
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 333

ADDR   CODE            LINE SOURCELINE
00624E B920           21380         MOV.W   R2,#00H
006250 C4rrrrrr       21381         FCALL   __DIV_SPF
006254 C4rrrrrr       21382         FCALL   __SPF2DPF
006258 9C780A3FE0     21383         MOV.W   [R7+10],#03FE0H
00625D BC7008         21384         MOV.W   [R7+8],#00H
006260 BC7006         21385         MOV.W   [R7+6],#00H
006263 BC7004         21386         MOV.W   [R7+4],#00H
006266 406704         21387         LEA     R6,R7+4
006269 C4rrrrrr       21388         FCALL   __ADD_DPF
00626D C4rrrrrr       21389         FCALL   __DPF2L
006271 8C1F16         21390         MOV.W   [R7+22],R1
006274 8C0F14         21391         MOV.W   [R7+20],R0
                      21392 ; rs232cmd.c 5776       
                      21393 ; rs232cmd.c 5777               if ( system < NTSC_US)                                           
                                                   // If selected system is PAL..
006277 844712         21395         MOV.B   R2L,[R7+18]
00627A 914402         21396         CMP.B   R2L,#02H
                      21399         BCC     _1510
00627D F102           +21399 ;       BCS     _LG_1486
00627F D500EB         +21399 ;       JMP.L   _1510
006282 D500EB         +21399 ;       JMP.L   _1510
006282                +21399 _LG_1486:
006282 8C1F0A         21400         MOV.W   [R7+10],R1
006285 8C0F08         21401         MOV.W   [R7+8],R0
                      21402 ; rs232cmd.c 5778               {
                      21403 ; rs232cmd.c 5779       
                      21404 ; rs232cmd.c 5780                       if ( labs( samples) > 442367L)          // Test for illeg
                            al time var
                      21406         CALL    _labs
006288 C4rrrrrr       +21406 ;       FCALL   _labs
00628C 99140006       21408         CMP.W   R1,#06H
006290 FB0A           21409         BLT     _1486
006292 FC03           21410         BGT     _1551
006294 9904BFFF       21411         CMP.W   R0,#0BFFFH
006298 F906           21412         BL      _1486
006298 F906           21412         BL      _1486
00629A                21413 _1551:
                      21414 ; rs232cmd.c 5781                               return( -1);
00629A 9918FFFF       21416         MOV.W   R1,#0FFFFH
00629E 9908FFFF       21417         MOV.W   R0,#0FFFFH
                      21418         BR      _1545
0062A2 D501BD         +21418         JMP.L   _1545
0062A2 D501BD00       +21418         JMP.L   _1545
0062A6                21419 _1486:
                      21422 ; rs232cmd.c 5782       
                      21423 ; rs232cmd.c 5783                       switch ( F)                                              
                                                                           // Test for illegal field & line
0062A6 9C74100000     21425         CMP.W   [R7+16],#00H
0062AB F31A           21426         BEQ     _1487
0062AD 9C7410FFFF     21427         CMP.W   [R7+16],#0FFFFH
0062B2 F328           21428         BEQ     _1492
0062B4 9C7410FFFD     21429         CMP.W   [R7+16],#0FFFDH
0062B9 F325           21430         BEQ     _1492
0062BB 9C74100002     21431         CMP.W   [R7+16],#02H
0062C0 F321           21432         BEQ     _1492
0062C2 9C7410FFFE     21433         CMP.W   [R7+16],#0FFFEH
0062C7 F32A           21434         BEQ     _1495
0062C9 9C74100001     21435         CMP.W   [R7+16],#01H
0062CE F326           21436         BEQ     _1495
0062D0 9C74100003     21437         CMP.W   [R7+16],#03H
0062D5 F323           21438         BEQ     _1495
0062D7 9C74100004     21439         CMP.W   [R7+16],#04H
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 334

ADDR   CODE            LINE SOURCELINE
0062DC F32B           21440         BEQ     _1496
0062DE FE44           21441         BR      _1498
                      21442 ; rs232cmd.c 5784                       {
                      21443 ; rs232cmd.c 5785                               case 0:
0062E0                21445 _1487:
                      21446 ; rs232cmd.c 5786                                       if (( minus && ( L < -311)) || ( !minus &
                            & ( L > 312)))
0062E0 84070C         21448         MOV.B   R0L,[R7+12]
0062E3 F304           21449         BEQ     _1488
0062E5 9C740EFEC9     21450         CMP.W   [R7+14],#0FEC9H
0062EA FB06           21451         BLT     _1489
0062EA FB06           21451         BLT     _1489
0062EC                21452 _1488:
0062EC 84070C         21453         MOV.B   R0L,[R7+12]
0062EF F242           21454         BNE     _1503
0062F1 9C740E0138     21455         CMP.W   [R7+14],#0138H
0062F6 FD3E           21456         BLE     _1503
0062F6 FD3E           21456         BLE     _1503
0062F8                21457 _1489:
                      21458 ; rs232cmd.c 5787                                               return( -1);
0062F8 9918FFFF       21460         MOV.W   R1,#0FFFFH
0062FC 9908FFFF       21461         MOV.W   R0,#0FFFFH
                      21462         BR      _1545
006300 D5018E         +21462         JMP.L   _1545
                      21463 ; rs232cmd.c 5788                                       break;
                      21464 ; rs232cmd.c 5789       
                      21465 ; rs232cmd.c 5790                               case -1:
                      21466 ; rs232cmd.c 5791                               case -3:
                      21467 ; rs232cmd.c 5792                               case 2:
006304                21469 _1492:
                      21472 ; rs232cmd.c 5793                                       if ( abs( L) > 312)
006304 8C070E         21474         MOV.W   R0,[R7+14]
                      21475         CALL    _abs
006307 C4rrrrrr       +21475 ;       FCALL   _abs
00630B 99040138       21476         CMP.W   R0,#0138H
00630F FD32           21477         BLE     _1503
                      21478 ; rs232cmd.c 5794                                               return( -1);
006311 9918FFFF       21480         MOV.W   R1,#0FFFFH
006315 9908FFFF       21481         MOV.W   R0,#0FFFFH
                      21482         BR      _1545
006319 D50181         +21482         JMP.L   _1545
                      21483 ; rs232cmd.c 5795                                       break;
                      21484 ; rs232cmd.c 5796       
                      21485 ; rs232cmd.c 5797                               case -2:
                      21486 ; rs232cmd.c 5798                               case 1:
                      21487 ; rs232cmd.c 5799                               case 3:
00631C                21489 _1495:
                      21492 ; rs232cmd.c 5800                                       if ( abs( L) > 311)
00631C 8C070E         21494         MOV.W   R0,[R7+14]
                      21495         CALL    _abs
00631F C4rrrrrr       +21495 ;       FCALL   _abs
006323 99040137       21496         CMP.W   R0,#0137H
006327 FD26           21497         BLE     _1503
                      21498 ; rs232cmd.c 5801                                               return( -1);
006329 9918FFFF       21500         MOV.W   R1,#0FFFFH
00632D 9908FFFF       21501         MOV.W   R0,#0FFFFH
                      21502         BR      _1545
006331 D50175         +21502         JMP.L   _1545
                      21503 ; rs232cmd.c 5802                                       break;
                      21504 ; rs232cmd.c 5803       
                      21505 ; rs232cmd.c 5804                               case 4:
006334                21507 _1496:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 335

ADDR   CODE            LINE SOURCELINE
                      21510 ; rs232cmd.c 5805                                       if (( L > 0) || ( T > 0.0))
006334 9C740E0000     21512         CMP.W   [R7+14],#00H
006339 FC11           21513         BGT     _1497
00633B 8C1724         21514         MOV.W   R1,[R7+36]
00633E 8C0722         21515         MOV.W   R0,[R7+34]
006341 C4rrrrrr       21516         FCALL   __SPF2DPF
006345 BC7006         21517         MOV.W   [R7+6],#00H
006348 BC7004         21518         MOV.W   [R7+4],#00H
00634B BC7002         21519         MOV.W   [R7+2],#00H
00634E BA70           21520         MOV.W   [R7],#00H
006350 8967           21521         MOV.W   R6,R7
006352 C4rrrrrr       21522         FCALL   __CMP_DPF
006356 910401         21523         CMP.B   R0L,#01H
006359 F20D           21524         BNE     _1503
006359 F20D00         21524         BNE     _1503
00635C                21525 _1497:
                      21526 ; rs232cmd.c 5806                                               return( -1);
00635C 9918FFFF       21528         MOV.W   R1,#0FFFFH
006360 9908FFFF       21529         MOV.W   R0,#0FFFFH
                      21530         BR      _1545
006364 D5015C         +21530         JMP.L   _1545
                      21531 ; rs232cmd.c 5807                                       break;
                      21532 ; rs232cmd.c 5808       
                      21533 ; rs232cmd.c 5809                               default:
006368                21535 _1498:
                      21536 ; rs232cmd.c 5810                                       return( -1);
006368 9918FFFF       21538         MOV.W   R1,#0FFFFH
00636C 9908FFFF       21539         MOV.W   R0,#0FFFFH
                      21540         BR      _1545
006370 D50156         +21540         JMP.L   _1545
                      21541 ; rs232cmd.c 5811                       }
006374                21543 _1503:
                      21546 ; rs232cmd.c 5812       
                      21547 ; rs232cmd.c 5813                       if ( !minus)                                             
                                                                   // if posistive delay..
006374 84070C         21549         MOV.B   R0L,[R7+12]
006377 F212           21552         BNE     _1504
                      21553 ; rs232cmd.c 5814                       {
                      21554 ; rs232cmd.c 5815                               if ( F % 2)
006379 8C0710         21556         MOV.W   R0,[R7+16]
00637C 8910           21557         MOV.W   R1,R0
00637E 9819           21558         SEXT.W  R1
006380 E9090002       21559         DIV.D   R0,#02H
006384 6911           21560         OR.W    R1,R1
006386 F341           21561         BEQ     _1509
                      21562 ; rs232cmd.c 5816                               {
                      21563 ; rs232cmd.c 5817                                       L += 313;
006388 8C070E         21565         MOV.W   R0,[R7+14]
00638B 99000139       21566         ADD.W   R0,#0139H
00638F 8C0F0E         21568         MOV.W   [R7+14],R0
                      21569 ; rs232cmd.c 5818                                       F--;
006392 8C0710         21571         MOV.W   R0,[R7+16]
006395 A90F           21572         ADDS.W  R0,#0FH
006397 8C0F10         21573         MOV.W   [R7+16],R0
                      21574 ; rs232cmd.c 5819                               }
                      21575 ; rs232cmd.c 5820                       }
00639A FE37           21577         BR      _1509
00639A FE37           21577         BR      _1509
00639C                21578 _1504:
                      21579 ; rs232cmd.c 5821                       else                                                     
                                                                                           // ..else delay is negative
                      21580 ; rs232cmd.c 5822                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 336

ADDR   CODE            LINE SOURCELINE
                      21581 ; rs232cmd.c 5823                               F += 7;
00639C 8C0710         21583         MOV.W   R0,[R7+16]
00639F A907           21584         ADDS.W  R0,#07H
                      21585 ; rs232cmd.c 5824       
                      21586 ; rs232cmd.c 5825                               samples += 442367L;
0063A1 8C370A         21588         MOV.W   R3,[R7+10]
0063A4 8C2708         21589         MOV.W   R2,[R7+8]
0063A7 9920BFFF       21590         ADD.W   R2,#0BFFFH
0063AB 99310006       21591         ADDC.W  R3,#06H
0063AF 8C3F16         21592         MOV.W   [R7+22],R3
0063B2 8C2F14         21593         MOV.W   [R7+20],R2
                      21594 ; rs232cmd.c 5826       
                      21595 ; rs232cmd.c 5827                               if ( F % 2) {
0063B5 8C0F10         21597         MOV.W   [R7+16],R0
0063B8 8910           21598         MOV.W   R1,R0
0063BA 9819           21599         SEXT.W  R1
0063BC E9090002       21600         DIV.D   R0,#02H
0063C0 6911           21601         OR.W    R1,R1
0063C2 F30A           21602         BEQ     _1505
                      21603 ; rs232cmd.c 5828                                       L += 624;
0063C4 8C070E         21605         MOV.W   R0,[R7+14]
0063C7 99000270       21606         ADD.W   R0,#0270H
0063CB 8C0F0E         21607         MOV.W   [R7+14],R0
                      21608 ; rs232cmd.c 5829                                       F--;
0063CE 8C0710         21610         MOV.W   R0,[R7+16]
0063D1 A90F           21611         ADDS.W  R0,#0FH
0063D3 8C0F10         21612         MOV.W   [R7+16],R0
                      21613 ; rs232cmd.c 5830                               }
0063D6 FE05           21615         BR      _1506
0063D6 FE05           21615         BR      _1506
0063D8                21616 _1505:
                      21617 ; rs232cmd.c 5831                               else
                      21618 ; rs232cmd.c 5832                                       L += 312;
0063D8 8C070E         21620         MOV.W   R0,[R7+14]
0063DB 99000138       21621         ADD.W   R0,#0138H
0063DF 8C0F0E         21622         MOV.W   [R7+14],R0
0063DF 8C0F0E         21622         MOV.W   [R7+14],R0
0063E2                21623 _1506:
                      21624 ; rs232cmd.c 5833       
                      21625 ; rs232cmd.c 5834                               if ( T == 0)
0063E2 B930           21627         MOV.W   R3,#00H
0063E4 B920           21628         MOV.W   R2,#00H
0063E6 8C1724         21629         MOV.W   R1,[R7+36]
0063E9 8C0722         21630         MOV.W   R0,[R7+34]
0063EC C4rrrrrr       21631         FCALL   __CMP_SPF
0063F0 910400         21632         CMP.B   R0L,#00H
0063F3 F20B           21633         BNE     _1509
                      21634 ; rs232cmd.c 5835                                       samples++;
0063F5 8C1716         21636         MOV.W   R1,[R7+22]
0063F8 8C0714         21637         MOV.W   R0,[R7+20]
0063FB 99000001       21638         ADD.W   R0,#01H
0063FF 99110000       21639         ADDC.W  R1,#00H
006403 8C1F16         21640         MOV.W   [R7+22],R1
006406 8C0F14         21641         MOV.W   [R7+20],R0
                      21642 ; rs232cmd.c 5836                       }
00640A                21644 _1509:
                      21645 ; rs232cmd.c 5837       
                      21646 ; rs232cmd.c 5838                       samples += F*138240000L + L*442368L;
00640A 8C0710         21648         MOV.W   R0,[R7+16]
00640D 9819           21649         SEXT.W  R1
00640F 8931           21650         MOV.W   R3,R1
006411 8920           21651         MOV.W   R2,R0
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 337

ADDR   CODE            LINE SOURCELINE
006413 DD25           21652         ASL.D   R2,#05H
006415 0920           21653         ADD.W   R2,R0
006417 1931           21654         ADDC.W  R3,R1
006419 DD25           21655         ASL.D   R2,#05H
00641B 2920           21656         SUB.W   R2,R0
00641D 3931           21657         SUBB.W  R3,R1
00641F DD22           21658         ASL.D   R2,#02H
006421 2920           21659         SUB.W   R2,R0
006423 3931           21660         SUBB.W  R3,R1
006425 DD22           21661         ASL.D   R2,#02H
006427 2920           21662         SUB.W   R2,R0
006429 3931           21663         SUBB.W  R3,R1
00642B DD2D           21664         ASL.D   R2,#0DH
00642D 8C070E         21665         MOV.W   R0,[R7+14]
006430 8940           21666         MOV.W   R4,R0
006432 9859           21667         SEXT.W  R5
006434 8915           21668         MOV.W   R1,R5
006436 8904           21669         MOV.W   R0,R4
006438 DD03           21670         ASL.D   R0,#03H
00643A 2904           21671         SUB.W   R0,R4
00643C 3915           21672         SUBB.W  R1,R5
00643E DD02           21673         ASL.D   R0,#02H
006440 2904           21674         SUB.W   R0,R4
006442 3915           21675         SUBB.W  R1,R5
006444 DD0E           21676         ASL.D   R0,#0EH
006446 0920           21677         ADD.W   R2,R0
006448 1931           21678         ADDC.W  R3,R1
00644A 8C1716         21679         MOV.W   R1,[R7+22]
00644D 8C0714         21680         MOV.W   R0,[R7+20]
006450 0902           21681         ADD.W   R0,R2
006452 1913           21682         ADDC.W  R1,R3
                      21683 ; rs232cmd.c 5839               }
                      21685         BR      _1531
006454 D500E4         +21685         JMP.L   _1531
006454 D500E400       +21685         JMP.L   _1531
006458                21686 _1510:
                      21688 ; rs232cmd.c 5840               else                                                             
                                                                                           // ..else system is NTSC
                      21689 ; rs232cmd.c 5841               {
                      21690 ; rs232cmd.c 5842       
                      21691 ; rs232cmd.c 5843                       if ( labs( samples) > 439295L)          // Test for illeg
                            al time var
006458 8C1716         21693         MOV.W   R1,[R7+22]
00645B 8C0714         21694         MOV.W   R0,[R7+20]
                      21695         CALL    _labs
00645E C4rrrrrr       +21695 ;       FCALL   _labs
006462 99140006       21696         CMP.W   R1,#06H
006466 FB0A           21697         BLT     _1511
006468 FC03           21698         BGT     _1557
00646A 9904B3FF       21699         CMP.W   R0,#0B3FFH
00646E F906           21700         BL      _1511
00646E F906           21700         BL      _1511
006470                21701 _1557:
                      21702 ; rs232cmd.c 5844                               return( -1);
006470 9918FFFF       21704         MOV.W   R1,#0FFFFH
006474 9908FFFF       21705         MOV.W   R0,#0FFFFH
                      21706         BR      _1545
006478 D500D2         +21706         JMP.L   _1545
006478 D500D200       +21706         JMP.L   _1545
00647C                21707 _1511:
                      21710 ; rs232cmd.c 5845       
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 338

ADDR   CODE            LINE SOURCELINE
                      21711 ; rs232cmd.c 5846                       switch ( F)                                              
                                                                           // Test for illegal field & line
00647C 9C74100000     21713         CMP.W   [R7+16],#00H
006481 F30C           21714         BEQ     _1512
006483 9C7410FFFF     21715         CMP.W   [R7+16],#0FFFFH
006488 F31A           21716         BEQ     _1515
00648A 9C74100001     21717         CMP.W   [R7+16],#01H
00648F F323           21718         BEQ     _1516
006491 9C74100002     21719         CMP.W   [R7+16],#02H
006496 F32B           21720         BEQ     _1517
006498 FE44           21721         BR      _1519
                      21722 ; rs232cmd.c 5847                       {
                      21723 ; rs232cmd.c 5848                               case 0:
00649A                21725 _1512:
                      21726 ; rs232cmd.c 5849                                       if (( minus && ( L < -261)) || ( !minus &
                            & ( L > 262)))
00649A 84070C         21728         MOV.B   R0L,[R7+12]
00649D F304           21729         BEQ     _1513
00649F 9C740EFEFB     21730         CMP.W   [R7+14],#0FEFBH
0064A4 FB06           21731         BLT     _1514
0064A4 FB06           21731         BLT     _1514
0064A6                21732 _1513:
0064A6 84070C         21733         MOV.B   R0L,[R7+12]
0064A9 F241           21734         BNE     _1524
0064AB 9C740E0106     21735         CMP.W   [R7+14],#0106H
0064B0 FD3D           21736         BLE     _1524
0064B0 FD3D           21736         BLE     _1524
0064B2                21737 _1514:
                      21738 ; rs232cmd.c 5850                                               return( -1);
0064B2 9918FFFF       21740         MOV.W   R1,#0FFFFH
0064B6 9908FFFF       21741         MOV.W   R0,#0FFFFH
                      21742         BR      _1545
0064BA D500B1         +21742         JMP.L   _1545
                      21743 ; rs232cmd.c 5851                                       break;
                      21744 ; rs232cmd.c 5852       
                      21745 ; rs232cmd.c 5853                               case -1:
0064BE                21747 _1515:
                      21750 ; rs232cmd.c 5854                                       if ( abs( L) > 262)
0064BE 8C070E         21752         MOV.W   R0,[R7+14]
                      21753         CALL    _abs
0064C1 C4rrrrrr       +21753 ;       FCALL   _abs
0064C5 99040106       21754         CMP.W   R0,#0106H
0064C9 FD31           21755         BLE     _1524
                      21756 ; rs232cmd.c 5855                                               return( -1);
0064CB 9918FFFF       21758         MOV.W   R1,#0FFFFH
0064CF 9908FFFF       21759         MOV.W   R0,#0FFFFH
                      21760         BR      _1545
0064D3 D500A4         +21760         JMP.L   _1545
                      21761 ; rs232cmd.c 5856                                       break;
                      21762 ; rs232cmd.c 5857       
                      21763 ; rs232cmd.c 5858                               case 1:
0064D6                21765 _1516:
                      21768 ; rs232cmd.c 5859                                       if ( abs( L) > 261)
0064D6 8C070E         21770         MOV.W   R0,[R7+14]
                      21771         CALL    _abs
0064D9 C4rrrrrr       +21771 ;       FCALL   _abs
0064DD 99040105       21772         CMP.W   R0,#0105H
0064E1 FD25           21773         BLE     _1524
                      21774 ; rs232cmd.c 5860                                               return( -1);
0064E3 9918FFFF       21776         MOV.W   R1,#0FFFFH
0064E7 9908FFFF       21777         MOV.W   R0,#0FFFFH
                      21778         BR      _1545
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 339

ADDR   CODE            LINE SOURCELINE
0064EB D50098         +21778         JMP.L   _1545
                      21779 ; rs232cmd.c 5861                                       break;
                      21780 ; rs232cmd.c 5862       
                      21781 ; rs232cmd.c 5863                               case 2:
0064EE                21783 _1517:
                      21786 ; rs232cmd.c 5864                                       if (( L > 0) || ( T > 0.0))
0064EE 9C740E0000     21788         CMP.W   [R7+14],#00H
0064F3 FC12           21789         BGT     _1518
0064F5 8C1724         21790         MOV.W   R1,[R7+36]
0064F8 8C0722         21791         MOV.W   R0,[R7+34]
0064FB C4rrrrrr       21792         FCALL   __SPF2DPF
0064FF BC700A         21793         MOV.W   [R7+10],#00H
006502 BC7008         21794         MOV.W   [R7+8],#00H
006505 BC7006         21795         MOV.W   [R7+6],#00H
006508 BC7004         21796         MOV.W   [R7+4],#00H
00650B 406704         21797         LEA     R6,R7+4
00650E C4rrrrrr       21798         FCALL   __CMP_DPF
006512 910401         21799         CMP.B   R0L,#01H
006515 F20B           21800         BNE     _1524
006515 F20B00         21800         BNE     _1524
006518                21801 _1518:
                      21802 ; rs232cmd.c 5865                                               return( -1);
006518 9918FFFF       21804         MOV.W   R1,#0FFFFH
00651C 9908FFFF       21805         MOV.W   R0,#0FFFFH
006520 FE7E           21806         BR      _1545
                      21807 ; rs232cmd.c 5866                                       break;
                      21808 ; rs232cmd.c 5867       
                      21809 ; rs232cmd.c 5868                               default:
006522                21811 _1519:
                      21812 ; rs232cmd.c 5869                                       return( -1);
006522 9918FFFF       21814         MOV.W   R1,#0FFFFH
006526 9908FFFF       21815         MOV.W   R0,#0FFFFH
00652A FE79           21816         BR      _1545
                      21817 ; rs232cmd.c 5870                       }
00652C                21819 _1524:
                      21822 ; rs232cmd.c 5871       
                      21823 ; rs232cmd.c 5872                       if ( !minus)                                             
                                                           // if posistive delay..
00652C 84070C         21825         MOV.B   R0L,[R7+12]
00652F F212           21828         BNE     _1525
                      21829 ; rs232cmd.c 5873                       {                                               
                      21830 ; rs232cmd.c 5874       
                      21831 ; rs232cmd.c 5875                               if ( F % 2)
006531 8C0710         21833         MOV.W   R0,[R7+16]
006534 8910           21834         MOV.W   R1,R0
006536 9819           21835         SEXT.W  R1
006538 E9090002       21836         DIV.D   R0,#02H
00653C 6911           21837         OR.W    R1,R1
00653E F341           21838         BEQ     _1530
                      21839 ; rs232cmd.c 5876                               {
                      21840 ; rs232cmd.c 5877                                       L += 263;
006540 8C070E         21842         MOV.W   R0,[R7+14]
006543 99000107       21843         ADD.W   R0,#0107H
006547 8C0F0E         21845         MOV.W   [R7+14],R0
                      21846 ; rs232cmd.c 5878                                       F--;
00654A 8C0710         21848         MOV.W   R0,[R7+16]
00654D A90F           21849         ADDS.W  R0,#0FH
00654F 8C0F10         21850         MOV.W   [R7+16],R0
                      21851 ; rs232cmd.c 5879                               }
                      21852 ; rs232cmd.c 5880                       }
006552 FE37           21854         BR      _1530
006552 FE37           21854         BR      _1530
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 340

ADDR   CODE            LINE SOURCELINE
006554                21855 _1525:
                      21856 ; rs232cmd.c 5881                       else                                                     
                                                                                           // ..else delay is negative
                      21857 ; rs232cmd.c 5882                       {                                                        
                                                                                                           
                      21858 ; rs232cmd.c 5883                               F += 3;
006554 8C0710         21860         MOV.W   R0,[R7+16]
006557 A903           21861         ADDS.W  R0,#03H
                      21862 ; rs232cmd.c 5884       
                      21863 ; rs232cmd.c 5885                               samples += 439295;
006559 8C3716         21865         MOV.W   R3,[R7+22]
00655C 8C2714         21866         MOV.W   R2,[R7+20]
00655F 9920B3FF       21867         ADD.W   R2,#0B3FFH
006563 99310006       21868         ADDC.W  R3,#06H
006567 8C3F16         21869         MOV.W   [R7+22],R3
00656A 8C2F14         21870         MOV.W   [R7+20],R2
                      21871 ; rs232cmd.c 5886       
                      21872 ; rs232cmd.c 5887                               if ( F % 2)
00656D 8C0F10         21874         MOV.W   [R7+16],R0
006570 8910           21875         MOV.W   R1,R0
006572 9819           21876         SEXT.W  R1
006574 E9090002       21877         DIV.D   R0,#02H
006578 6911           21878         OR.W    R1,R1
00657A F30A           21879         BEQ     _1526
                      21880 ; rs232cmd.c 5888                               {
                      21881 ; rs232cmd.c 5889                                       L += 524;
00657C 8C070E         21883         MOV.W   R0,[R7+14]
00657F 9900020C       21884         ADD.W   R0,#020CH
006583 8C0F0E         21885         MOV.W   [R7+14],R0
                      21886 ; rs232cmd.c 5890                                       F--;
006586 8C0710         21888         MOV.W   R0,[R7+16]
006589 A90F           21889         ADDS.W  R0,#0FH
00658B 8C0F10         21890         MOV.W   [R7+16],R0
                      21891 ; rs232cmd.c 5891                               }
00658E FE05           21893         BR      _1527
00658E FE05           21893         BR      _1527
006590                21894 _1526:
                      21895 ; rs232cmd.c 5892                               else
                      21896 ; rs232cmd.c 5893                                       L += 262;
006590 8C070E         21898         MOV.W   R0,[R7+14]
006593 99000106       21899         ADD.W   R0,#0106H
006597 8C0F0E         21900         MOV.W   [R7+14],R0
006597 8C0F0E         21900         MOV.W   [R7+14],R0
00659A                21901 _1527:
                      21902 ; rs232cmd.c 5894       
                      21903 ; rs232cmd.c 5895                               if ( T == 0)
00659A B930           21905         MOV.W   R3,#00H
00659C B920           21906         MOV.W   R2,#00H
00659E 8C1724         21907         MOV.W   R1,[R7+36]
0065A1 8C0722         21908         MOV.W   R0,[R7+34]
0065A4 C4rrrrrr       21909         FCALL   __CMP_SPF
0065A8 910400         21910         CMP.B   R0L,#00H
0065AB F20B           21911         BNE     _1530
                      21912 ; rs232cmd.c 5896                                       samples++;
0065AD 8C1716         21914         MOV.W   R1,[R7+22]
0065B0 8C0714         21915         MOV.W   R0,[R7+20]
0065B3 99000001       21916         ADD.W   R0,#01H
0065B7 99110000       21917         ADDC.W  R1,#00H
0065BB 8C1F16         21918         MOV.W   [R7+22],R1
0065BE 8C0F14         21919         MOV.W   [R7+20],R0
                      21920 ; rs232cmd.c 5897                       }
0065C2                21922 _1530:
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 341

ADDR   CODE            LINE SOURCELINE
                      21923 ; rs232cmd.c 5898       
                      21924 ; rs232cmd.c 5899                       samples += F*115315200L + L*439296L;
0065C2 8C0710         21926         MOV.W   R0,[R7+16]
0065C5 9819           21927         SEXT.W  R1
0065C7 8931           21928         MOV.W   R3,R1
0065C9 8920           21929         MOV.W   R2,R0
0065CB DD23           21930         ASL.D   R2,#03H
0065CD 2920           21931         SUB.W   R2,R0
0065CF 3931           21932         SUBB.W  R3,R1
0065D1 DD23           21933         ASL.D   R2,#03H
0065D3 2920           21934         SUB.W   R2,R0
0065D5 3931           21935         SUBB.W  R3,R1
0065D7 DD26           21936         ASL.D   R2,#06H
0065D9 2920           21937         SUB.W   R2,R0
0065DB 3931           21938         SUBB.W  R3,R1
0065DD DD23           21939         ASL.D   R2,#03H
0065DF 0920           21940         ADD.W   R2,R0
0065E1 1931           21941         ADDC.W  R3,R1
0065E3 DD23           21942         ASL.D   R2,#03H
0065E5 0920           21943         ADD.W   R2,R0
0065E7 1931           21944         ADDC.W  R3,R1
0065E9 DD29           21945         ASL.D   R2,#09H
0065EB 8C070E         21946         MOV.W   R0,[R7+14]
0065EE 8940           21947         MOV.W   R4,R0
0065F0 9859           21948         SEXT.W  R5
0065F2 8915           21949         MOV.W   R1,R5
0065F4 8904           21950         MOV.W   R0,R4
0065F6 DD03           21951         ASL.D   R0,#03H
0065F8 2904           21952         SUB.W   R0,R4
0065FA 3915           21953         SUBB.W  R1,R5
0065FC DD02           21954         ASL.D   R0,#02H
0065FE 2904           21955         SUB.W   R0,R4
006600 3915           21956         SUBB.W  R1,R5
006602 DD02           21957         ASL.D   R0,#02H
006604 2904           21958         SUB.W   R0,R4
006606 3915           21959         SUBB.W  R1,R5
006608 DD02           21960         ASL.D   R0,#02H
00660A 0904           21961         ADD.W   R0,R4
00660C 1915           21962         ADDC.W  R1,R5
00660E DD0A           21963         ASL.D   R0,#0AH
006610 0920           21964         ADD.W   R2,R0
006612 1931           21965         ADDC.W  R3,R1
006614 8C1716         21966         MOV.W   R1,[R7+22]
006617 8C0714         21967         MOV.W   R0,[R7+20]
00661A 0902           21968         ADD.W   R0,R2
00661C 1913           21969         ADDC.W  R1,R3
                      21970 ; rs232cmd.c 5900               }
00661E                21972 _1531:
                      21973 ; rs232cmd.c 5901       
                      21974 ; rs232cmd.c 5902               return( samples);
                      21975 ; rs232cmd.c 5903       }
00661E                21977 _1545:
00661E 99700018       21978         ADD.W   R7,#018H
006622 2F70           21980         POP.W   R4, R5, R6
006624 D680           21982         RET
                      21984 ; rs232cmd.c 5904       
                      21985 ; rs232cmd.c 5905       /************************************************************************
                            **/
                      21986 ; rs232cmd.c 5906       /* PrintSamplesToFLT                                                     
                                                                                                                             
                                   RS232CMD.C */
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 342

ADDR   CODE            LINE SOURCELINE
                      21987 ; rs232cmd.c 5907       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21988 ; rs232cmd.c 5908       /* Author:              Kim Engedahl, DEV, 970211                        
                                                                                                                             
                                  */
                      21989 ; rs232cmd.c 5909       /* Revised:             000530                                           
                                                                                                                             
                                                                                  */
                      21990 ; rs232cmd.c 5910       /*                                                                       
                                                                                                                             
                                                                                                                  
                      21991 ; rs232cmd.c 5911       /* Function:    --                                                       
                                                                                                                             
                                                                                                          */
                      21992 ; rs232cmd.c 5912       /* Remarks:             PAL Range: 1728*256, NTSC Range: 1716*256        
                                                                                                   */
                      21993 ; rs232cmd.c 5913       /* Returns:             --                                               
                                                                                                                             
                                                                                                                  
                      21994 ; rs232cmd.c 5914       /* Updates:             --                                               
                                                                                                                             
                                                                                                                  
                      21995 ; rs232cmd.c 5915       /************************************************************************
                            **/
                      21996 ; rs232cmd.c 5916       void PrintSamplesToFLT( UC system, long samples) {
                      21997         ALIGN   1
                      21999         PUBLIC  _PrintSamplesToFLT
006626                22000 _PrintSamplesToFLT:
006626 0F70           22004         PUSH.W  R4, R5, R6
006628 A97A           22006         ADDS.W  R7,#0AH
                      22019 ; rs232cmd.c 5917       
                      22020 ; rs232cmd.c 5918               char sign;
                      22021 ; rs232cmd.c 5919               int frame, field, line;
                      22022 ; rs232cmd.c 5920       
                      22023 ; rs232cmd.c 5921               sign = '+';
00662A 9478022B       22025         MOV.B   [R7+2],#02BH
                      22027 ; rs232cmd.c 5922       
                      22028 ; rs232cmd.c 5923               if ( system < NTSC_US)                                           
                                   // If system selected is PAL..
00662E 910402         22030         CMP.B   R0L,#02H
                      22031         BCC     _1568
006631 F102           +22031 ;       BCS     _LG_1572
006633 D50087         +22031 ;       JMP.L   _1568
006636 D50087         +22031 ;       JMP.L   _1568
006636                +22031 _LG_1572:
                      22032 ; rs232cmd.c 5924               {
                      22033 ; rs232cmd.c 5925                       // 552960000 = 2*625*1728*256
                      22034 ; rs232cmd.c 5926                       // 276480000 = 625*1728*256
                      22035 ; rs232cmd.c 5927                       // 442368    = 1728*256
                      22036 ; rs232cmd.c 5928       
                      22037 ; rs232cmd.c 5929                       if ( samples >= 552960000L)
006636 8953           22039         MOV.W   R5,R3
006638 8942           22040         MOV.W   R4,R2
00663A 993420F5       22041         CMP.W   R3,#020F5H
00663E FB50           22042         BLT     _1567
006640 FC03           22043         BGT     _1580
006642 99248000       22044         CMP.W   R2,#08000H
006646 F14C           22045         BCS     _1567
006646 F14C           22045         BCS     _1567
006648                22046 _1580:
                      22047 ; rs232cmd.c 5930                       {
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 343

ADDR   CODE            LINE SOURCELINE
                      22048 ; rs232cmd.c 5931                               samples--;
006648 99420001       22050         SUB.W   R4,#01H
00664C 99530000       22051         SUBB.W  R5,#00H
006650 8915           22052         MOV.W   R1,R5
006652 8904           22053         MOV.W   R0,R4
                      22056 ; rs232cmd.c 5932       
                      22057 ; rs232cmd.c 5933                               frame = samples / 276480000L;
006654 9938107A       22059         MOV.W   R3,#0107AH
006658 9928C000       22060         MOV.W   R2,#0C000H
00665C 8951           22061         MOV.W   R5,R1
00665E 8940           22062         MOV.W   R4,R0
006660 C4rrrrrr       22063         FCALL   __SDIVL
006664 8A0F           22066         MOV.W   [R7],R0
                      22068 ; rs232cmd.c 5934                               line = ( samples % 276480000L) /  442368L;
006666 9938107A       22070         MOV.W   R3,#0107AH
00666A 9928C000       22071         MOV.W   R2,#0C000H
00666E 8915           22072         MOV.W   R1,R5
006670 8904           22073         MOV.W   R0,R4
006672 C4rrrrrr       22074         FCALL   __SMODL
006676 B936           22078         MOV.W   R3,#06H
006678 9928C000       22079         MOV.W   R2,#0C000H
00667C 8951           22080         MOV.W   R5,R1
00667E 8940           22081         MOV.W   R4,R0
006680 C4rrrrrr       22082         FCALL   __SDIVL
006684 8960           22083         MOV.W   R6,R0
006686 8C6F04         22084         MOV.W   [R7+4],R6
                      22085 ; rs232cmd.c 5935                               samples = ( samples % 276480000L) %  442368L;
006689 8915           22087         MOV.W   R1,R5
00668B 8904           22088         MOV.W   R0,R4
00668D B936           22089         MOV.W   R3,#06H
00668F 9928C000       22090         MOV.W   R2,#0C000H
006693 C4rrrrrr       22091         FCALL   __SMODL
                      22093 ; rs232cmd.c 5936                               field = 2*frame;
006697 8A27           22095         MOV.W   R2,[R7]
006699 D921           22096         ASL.W   R2,#01H
00669B 8932           22100         MOV.W   R3,R2
                      22102 ; rs232cmd.c 5937       
                      22103 ; rs232cmd.c 5938                               if ( line > 312)
00669D 99480138       22105         MOV.W   R4,#0138H
0066A1 99640138       22106         CMP.W   R6,#0138H
0066A5 FD08           22107         BLE     _1565
                      22108 ; rs232cmd.c 5939                               {
                      22109 ; rs232cmd.c 5940                                       field++;
0066A7 A921           22111         ADDS.W  R2,#01H
0066A9 8932           22112         MOV.W   R3,R2
                      22115 ; rs232cmd.c 5941                                       line = 624-line;
0066AB 99280270       22117         MOV.W   R2,#0270H
0066AF 2926           22118         SUB.W   R2,R6
0066B1 8C2F04         22119         MOV.W   [R7+4],R2
                      22120 ; rs232cmd.c 5942                               }
0066B4 FE04           22122         BR      _1566
0066B4 FE04           22122         BR      _1566
0066B6                22123 _1565:
                      22124 ; rs232cmd.c 5943                               else
                      22125 ; rs232cmd.c 5944                                       line = 312-line;
0066B6 8C2704         22127         MOV.W   R2,[R7+4]
0066B9 2942           22128         SUB.W   R4,R2
0066BB 8C4F04         22129         MOV.W   [R7+4],R4
0066BB 8C4F04         22129         MOV.W   [R7+4],R4
0066BE                22130 _1566:
                      22131 ; rs232cmd.c 5945       
                      22132 ; rs232cmd.c 5946                               samples = 442368L - 1 - samples;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 344

ADDR   CODE            LINE SOURCELINE
0066BE B956           22134         MOV.W   R5,#06H
0066C0 9948BFFF       22135         MOV.W   R4,#0BFFFH
0066C4 2940           22136         SUB.W   R4,R0
0066C6 3951           22137         SUBB.W  R5,R1
                      22140 ; rs232cmd.c 5947                               field = 7-field;
0066C8 B917           22142         MOV.W   R1,#07H
0066CA 2913           22143         SUB.W   R1,R3
0066CC 8901           22144         MOV.W   R0,R1
                      22147 ; rs232cmd.c 5948       
                      22148 ; rs232cmd.c 5949                               if ( field != 4)
0066CE 99140004       22150         CMP.W   R1,#04H
                      22151         BEQ     _1578
0066D2 F202           +22151 ;       BNE     _LG_1582
0066D4 D500B8         +22151 ;       JMP.L   _1578
0066D8 D500B800       +22151 ;       JMP.L   _1578
0066D8                +22151 _LG_1582:
                      22152 ; rs232cmd.c 5950                                       sign = '-';
0066D8 9478022D       22154         MOV.B   [R7+2],#02DH
                      22157 ; rs232cmd.c 5951                       }
                      22159         BR      _1578
0066DC D500B4         +22159         JMP.L   _1578
0066DC D500B400       +22159         JMP.L   _1578
0066E0                22160 _1567:
                      22161 ; rs232cmd.c 5952                       else
                      22162 ; rs232cmd.c 5953                       {
                      22163 ; rs232cmd.c 5954                               frame = samples / 276480000L;
0066E0 9938107A       22165         MOV.W   R3,#0107AH
0066E4 9928C000       22166         MOV.W   R2,#0C000H
0066E8 8915           22167         MOV.W   R1,R5
0066EA 8904           22168         MOV.W   R0,R4
0066EC C4rrrrrr       22169         FCALL   __SDIVL
0066F0 8A0F           22171         MOV.W   [R7],R0
                      22173 ; rs232cmd.c 5955                               line = ( samples % 276480000L) / 442368L;
0066F2 9938107A       22175         MOV.W   R3,#0107AH
0066F6 9928C000       22176         MOV.W   R2,#0C000H
0066FA 8915           22177         MOV.W   R1,R5
0066FC 8904           22178         MOV.W   R0,R4
0066FE C4rrrrrr       22179         FCALL   __SMODL
006702 B936           22183         MOV.W   R3,#06H
006704 9928C000       22184         MOV.W   R2,#0C000H
006708 8951           22185         MOV.W   R5,R1
00670A 8940           22186         MOV.W   R4,R0
00670C C4rrrrrr       22187         FCALL   __SDIVL
006710 8960           22188         MOV.W   R6,R0
006712 8C6F04         22189         MOV.W   [R7+4],R6
                      22190 ; rs232cmd.c 5956                               samples = ( samples % 276480000L) % 442368L;
006715 8915           22192         MOV.W   R1,R5
006717 8904           22193         MOV.W   R0,R4
006719 B936           22194         MOV.W   R3,#06H
00671B 9928C000       22195         MOV.W   R2,#0C000H
00671F C4rrrrrr       22196         FCALL   __SMODL
006723 8951           22197         MOV.W   R5,R1
006725 8940           22198         MOV.W   R4,R0
                      22200 ; rs232cmd.c 5957                               field = 2*frame;
006727 8A17           22202         MOV.W   R1,[R7]
006729 D911           22203         ASL.W   R1,#01H
00672B 8901           22207         MOV.W   R0,R1
                      22209 ; rs232cmd.c 5958       
                      22210 ; rs232cmd.c 5959                               if ( line > 312)
00672D 99640138       22212         CMP.W   R6,#0138H
                      22213         BLE     _1578
006731 FC02           +22213 ;       BGT     _LG_1584
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 345

ADDR   CODE            LINE SOURCELINE
006733 D50088         +22213 ;       JMP.L   _1578
006736 D50088         +22213 ;       JMP.L   _1578
006736                +22213 _LG_1584:
                      22214 ; rs232cmd.c 5960                               {
                      22215 ; rs232cmd.c 5961                                       field++;
006736 A911           22217         ADDS.W  R1,#01H
006738 8901           22218         MOV.W   R0,R1
                      22221 ; rs232cmd.c 5962                                       line -= 313;
00673A 99620139       22223         SUB.W   R6,#0139H
00673E 8C6F04         22224         MOV.W   [R7+4],R6
                      22225 ; rs232cmd.c 5963                               }
                      22226 ; rs232cmd.c 5964                       }
                      22227 ; rs232cmd.c 5965               }
                      22229         BR      _1578
006741 D50081         +22229         JMP.L   _1578
006741 D50081         +22229         JMP.L   _1578
006744                22230 _1568:
                      22233 ; rs232cmd.c 5966               else {                                                           
                                                           // ..system selected is NTSC
                      22234 ; rs232cmd.c 5967                       if ( samples >= 230630400L)
006744 8953           22236         MOV.W   R5,R3
006746 8942           22237         MOV.W   R4,R2
006748 99340DBF       22238         CMP.W   R3,#0DBFH
00674C FB4D           22239         BLT     _1571
00674E FC03           22240         BGT     _1584
006750 99242400       22241         CMP.W   R2,#02400H
006754 F149           22242         BCS     _1571
006754 F149           22242         BCS     _1571
006756                22243 _1584:
                      22246 ; rs232cmd.c 5968                       {
                      22247 ; rs232cmd.c 5969                               // 230630400 = 525*1716*256
                      22248 ; rs232cmd.c 5970                               // 439296    = 1716*256
                      22249 ; rs232cmd.c 5971       
                      22250 ; rs232cmd.c 5972                               samples--;
006756 99420001       22252         SUB.W   R4,#01H
00675A 99530000       22253         SUBB.W  R5,#00H
00675E 8915           22255         MOV.W   R1,R5
006760 8904           22256         MOV.W   R0,R4
                      22259 ; rs232cmd.c 5973       
                      22260 ; rs232cmd.c 5974                               frame = samples / 230630400L;
006762 99380DBF       22262         MOV.W   R3,#0DBFH
006766 99282400       22263         MOV.W   R2,#02400H
00676A 8951           22264         MOV.W   R5,R1
00676C 8940           22265         MOV.W   R4,R0
00676E C4rrrrrr       22266         FCALL   __SDIVL
006772 8A0F           22269         MOV.W   [R7],R0
                      22271 ; rs232cmd.c 5975                               line = ( samples % 230630400L) / 439296L;
006774 99380DBF       22273         MOV.W   R3,#0DBFH
006778 99282400       22274         MOV.W   R2,#02400H
00677C 8915           22275         MOV.W   R1,R5
00677E 8904           22276         MOV.W   R0,R4
006780 C4rrrrrr       22277         FCALL   __SMODL
006784 B936           22281         MOV.W   R3,#06H
006786 9928B400       22282         MOV.W   R2,#0B400H
00678A 8951           22283         MOV.W   R5,R1
00678C 8940           22284         MOV.W   R4,R0
00678E C4rrrrrr       22285         FCALL   __SDIVL
006792 8960           22286         MOV.W   R6,R0
006794 8C6F04         22287         MOV.W   [R7+4],R6
                      22288 ; rs232cmd.c 5976                               samples = ( samples % 230630400L) % 439296L;
006797 8915           22290         MOV.W   R1,R5
006799 8904           22291         MOV.W   R0,R4
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 346

ADDR   CODE            LINE SOURCELINE
00679B B936           22292         MOV.W   R3,#06H
00679D 9928B400       22293         MOV.W   R2,#0B400H
0067A1 C4rrrrrr       22294         FCALL   __SMODL
                      22296 ; rs232cmd.c 5977       
                      22297 ; rs232cmd.c 5978                               field = 2*frame;
0067A5 8A27           22299         MOV.W   R2,[R7]
0067A7 D921           22300         ASL.W   R2,#01H
0067A9 8932           22304         MOV.W   R3,R2
                      22306 ; rs232cmd.c 5979       
                      22307 ; rs232cmd.c 5980                               if ( line > 262)
0067AB 99480106       22309         MOV.W   R4,#0106H
0067AF 99640106       22310         CMP.W   R6,#0106H
0067B3 FD08           22311         BLE     _1569
                      22312 ; rs232cmd.c 5981                               {
                      22313 ; rs232cmd.c 5982                                       field++;
0067B5 A921           22315         ADDS.W  R2,#01H
0067B7 8932           22316         MOV.W   R3,R2
                      22319 ; rs232cmd.c 5983                                       line = 524-line;
0067B9 9928020C       22321         MOV.W   R2,#020CH
0067BD 2926           22322         SUB.W   R2,R6
0067BF 8C2F04         22323         MOV.W   [R7+4],R2
                      22324 ; rs232cmd.c 5984                               }
0067C2 FE04           22326         BR      _1570
0067C2 FE04           22326         BR      _1570
0067C4                22327 _1569:
                      22328 ; rs232cmd.c 5985                               else
                      22329 ; rs232cmd.c 5986                                       line = 262-line;
0067C4 8C2704         22331         MOV.W   R2,[R7+4]
0067C7 2942           22332         SUB.W   R4,R2
0067C9 8C4F04         22333         MOV.W   [R7+4],R4
0067C9 8C4F04         22333         MOV.W   [R7+4],R4
0067CC                22334 _1570:
                      22335 ; rs232cmd.c 5987       
                      22336 ; rs232cmd.c 5988                               samples = 439296L - 1 - samples;
0067CC B956           22338         MOV.W   R5,#06H
0067CE 9948B3FF       22339         MOV.W   R4,#0B3FFH
0067D2 2940           22340         SUB.W   R4,R0
0067D4 3951           22341         SUBB.W  R5,R1
                      22344 ; rs232cmd.c 5989                               field = 3 - field;
0067D6 B913           22346         MOV.W   R1,#03H
0067D8 2913           22347         SUB.W   R1,R3
0067DA 8901           22348         MOV.W   R0,R1
                      22351 ; rs232cmd.c 5990       
                      22352 ; rs232cmd.c 5991                               if ( field != 2)
0067DC 99140002       22354         CMP.W   R1,#02H
0067E0 F332           22355         BEQ     _1578
                      22356 ; rs232cmd.c 5992                                       sign = '-';
0067E2 9478022D       22358         MOV.B   [R7+2],#02DH
                      22361 ; rs232cmd.c 5993                       }
0067E6 FE2F           22363         BR      _1578
0067E6 FE2F           22363         BR      _1578
0067E8                22364 _1571:
                      22365 ; rs232cmd.c 5994                       else
                      22366 ; rs232cmd.c 5995                       {
                      22367 ; rs232cmd.c 5996                               frame = samples / 230630400L;
0067E8 99380DBF       22369         MOV.W   R3,#0DBFH
0067EC 99282400       22370         MOV.W   R2,#02400H
0067F0 8915           22371         MOV.W   R1,R5
0067F2 8904           22372         MOV.W   R0,R4
0067F4 C4rrrrrr       22373         FCALL   __SDIVL
0067F8 8A0F           22375         MOV.W   [R7],R0
                      22377 ; rs232cmd.c 5997                               line = ( samples % 230630400L) / 439296L;
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 347

ADDR   CODE            LINE SOURCELINE
0067FA 99380DBF       22379         MOV.W   R3,#0DBFH
0067FE 99282400       22380         MOV.W   R2,#02400H
006802 8915           22381         MOV.W   R1,R5
006804 8904           22382         MOV.W   R0,R4
006806 C4rrrrrr       22383         FCALL   __SMODL
00680A B936           22387         MOV.W   R3,#06H
00680C 9928B400       22388         MOV.W   R2,#0B400H
006810 8951           22389         MOV.W   R5,R1
006812 8940           22390         MOV.W   R4,R0
006814 C4rrrrrr       22391         FCALL   __SDIVL
006818 8960           22392         MOV.W   R6,R0
00681A 8C6F04         22393         MOV.W   [R7+4],R6
                      22394 ; rs232cmd.c 5998                               samples = ( samples % 230630400L) % 439296L;
00681D B936           22396         MOV.W   R3,#06H
00681F 9928B400       22397         MOV.W   R2,#0B400H
006823 8915           22398         MOV.W   R1,R5
006825 8904           22399         MOV.W   R0,R4
006827 C4rrrrrr       22400         FCALL   __SMODL
00682B 8951           22401         MOV.W   R5,R1
00682D 8940           22402         MOV.W   R4,R0
                      22404 ; rs232cmd.c 5999                               field = 2*frame;
00682F 8A17           22406         MOV.W   R1,[R7]
006831 D911           22407         ASL.W   R1,#01H
006833 8901           22411         MOV.W   R0,R1
                      22413 ; rs232cmd.c 6000       
                      22414 ; rs232cmd.c 6001                               if ( line > 262)
006835 99640106       22416         CMP.W   R6,#0106H
006839 FD06           22417         BLE     _1578
                      22418 ; rs232cmd.c 6002                               {
                      22419 ; rs232cmd.c 6003                                       field++;
00683B A911           22421         ADDS.W  R1,#01H
00683D 8901           22422         MOV.W   R0,R1
                      22425 ; rs232cmd.c 6004                                       line -= 263;
00683F 99620107       22427         SUB.W   R6,#0107H
006843 8C6F04         22428         MOV.W   [R7+4],R6
                      22429 ; rs232cmd.c 6005                               }
                      22430 ; rs232cmd.c 6006                       }
                      22431 ; rs232cmd.c 6007               }
006846                22433 _1578:
                      22434 ; rs232cmd.c 6008       
                      22435 ; rs232cmd.c 6009               rs232printf( 12, "%c%d,", sign, abs( field));
                      22437         CALL    _abs
006846 C4rrrrrr       +22437 ;       FCALL   _abs
00684A 842702         22439         MOV.B   R1L,[R7+2]
00684D 9039           22440         SEXT.B  R1H
00684F 0F01           22444         PUSH.W  R0
006851 8961           22446         MOV.W   R6,R1
006853 0F02           22447         PUSH.W  R1
006855 9918rrrr       22449         MOV.W   R1,#SEG( _1563 )
006859 9908rrrr       22450         MOV.W   R0,#SOF( _1563 )
00685D 0F03           22451         PUSH.W  R0, R1
00685F 9908000C       22453         MOV.W   R0,#0CH
                      22454         CALL    _rs232printf
006863 C4rrrrrr       +22454 ;       FCALL   _rs232printf
006867 99700008       22455         ADD.W   R7,#08H
                      22457 ; rs232cmd.c 6010               rs232printf( 12, "%c%d,", sign, abs( line));
00686B 8C0704         22459         MOV.W   R0,[R7+4]
                      22460         CALL    _abs
00686E C4rrrrrr       +22460 ;       FCALL   _abs
006872 0F01           22461         PUSH.W  R0
006874 8C6F02         22463         MOV.W   [R7+2],R6
006877 0F40           22464         PUSH.W  R6
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 348

ADDR   CODE            LINE SOURCELINE
006879 9918rrrr       22466         MOV.W   R1,#SEG( _1563 )
00687D 9908rrrr       22467         MOV.W   R0,#SOF( _1563 )
006881 0F03           22468         PUSH.W  R0, R1
006883 9908000C       22470         MOV.W   R0,#0CH
                      22471         CALL    _rs232printf
006887 C4rrrrrr       +22471 ;       FCALL   _rs232printf
00688B 99700008       22472         ADD.W   R7,#08H
                      22474 ; rs232cmd.c 6011               rs232printf( 12, "%c%.1f", sign, fabs((float) ( samples*1000L)/69
                            12L));
00688F 8915           22476         MOV.W   R1,R5
006891 8904           22477         MOV.W   R0,R4
006893 DD05           22478         ASL.D   R0,#05H
006895 2904           22479         SUB.W   R0,R4
006897 3915           22480         SUBB.W  R1,R5
006899 DD02           22481         ASL.D   R0,#02H
00689B 0904           22482         ADD.W   R0,R4
00689D 1915           22483         ADDC.W  R1,R5
00689F DD03           22484         ASL.D   R0,#03H
0068A1 C4rrrrrr       22485         FCALL   __L2SPF
0068A5 993845D8       22486         MOV.W   R3,#045D8H
0068A9 B920           22487         MOV.W   R2,#00H
0068AB C4rrrrrr       22488         FCALL   __DIV_SPF
0068AF C4rrrrrr       22489         FCALL   __SPF2DPF
                      22490         CALL    _fabs
0068B3 C4rrrrrr       +22490 ;       FCALL   _fabs
0068B7 0F0F           22491         PUSH.W  R0, R1, R2, R3
0068B9 8C0708         22493         MOV.W   R0,[R7+8]
0068BC 0F01           22494         PUSH.W  R0
0068BE 9918rrrr       22496         MOV.W   R1,#SEG( _1564 )
0068C2 9908rrrr       22497         MOV.W   R0,#SOF( _1564 )
0068C6 0F03           22498         PUSH.W  R0, R1
0068C8 9908000C       22500         MOV.W   R0,#0CH
                      22501         CALL    _rs232printf
0068CC C4rrrrrr       +22501 ;       FCALL   _rs232printf
0068D0 9970000E       22502         ADD.W   R7,#0EH
                      22504 ; rs232cmd.c 6012       }
0068D4 A976           22506         ADDS.W  R7,#06H
0068D6 2F70           22508         POP.W   R4, R5, R6
0068D8 D680           22510         RET
                      22513 ; rs232cmd.c 6013       
00000E                22516         RSEG    RS232CMD_INI_FA
00000E 2C25640A00     22517 _365:   DB      02CH,025H,064H,00AH,000H
                      22520         EXTRN   HDATA(_PresetPtr)
                      22522         EXTRN   HDATA(_CmdExecute)
000013 256C752C256C75 22523 _1238:  DB      025H,06CH,075H,02CH,025H,06CH,075H,00AH,000H
       0A00                 
                      22526         EXTRN   HCODE(_ValidateDate)
                      22529         EXTRN   HCODE(_SetGenlockSystem)
                      22532         EXTRN   HCODE(_StorePreset)
                      22535         EXTRN   HCODE(_UpdateSTBRegister)
00001C 25733B00       22536 _986:   DB      025H,073H,03BH,000H
000020 25640A00       22537 _9:     DB      025H,064H,00AH,000H
                      22540         EXTRN   HCODE(_SetBBSystem)
000024 220A00         22541 _110:   DB      022H,00AH,000H
                      22544         EXTRN   HCODE(_SetBBDelay)
                      22547         EXTRN   HCODE(_strlen)
000027 25752C25752C25 22548 _1174:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,00AH,000H
       750A00               
                      22551         EXTRN   HCODE(_SetCBDelay)
000031 256325642C00   22552 _1563:  DB      025H,063H,025H,064H,02CH,000H
                      22555         EXTRN   HCODE(_SetBBScHPhase)
                      22558         EXTRN   HCODE(_BBUpdate)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 349

ADDR   CODE            LINE SOURCELINE
                      22559         EXTRN   HCODE(__UMODL)
                      22562         EXTRN   HCODE(_ResetErrorEventQueue)
                      22565         EXTRN   HCODE(_GenlockVersion)
                      22568         EXTRN   HCODE(_Cstrcmp)
                      22571         EXTRN   HCODE(_SetAudioTiming)
000037 25752C25752C25 22572 _1175:  DB      025H,075H,02CH,025H,075H,02CH,025H,075H,000H
       7500                 
                      22575         EXTRN   HCODE(_strncpy)
                      22577         EXTRN   HDATA(_AudioOutput)
                      22580         EXTRN   HCODE(_SetAudioWordClock)
                      22581         EXTRN   HCODE(__DIV_DPF)
000040 252E31662C00   22582 _784:   DB      025H,02EH,031H,066H,02CH,000H
                      22585         EXTRN   HCODE(_abs)
000046 25750A00       22586 _1012:  DB      025H,075H,00AH,000H
                      22589         EXTRN   HCODE(_ReadErrorEventQueue)
                      22594         EXTRN   HCODE(_TransmitIIC)
                      22597         EXTRN   HCODE(_CBUpdate)
                      22600         EXTRN   HCODE(_SetAudioSystem)
                      22603         EXTRN   HCODE(_sio0SndCommand)
                      22606         EXTRN   HCODE(_strcmp)
                      22609         EXTRN   HCODE(_AudioStatus)
00004A 25752C25750A00 22610 _1312:  DB      025H,075H,02CH,025H,075H,00AH,000H
                      22613         EXTRN   HCODE(_sscanf)
000051 253033642C2530 22614 _1450:  DB      025H,030H,033H,064H,02CH,025H,030H,033H,064H,00AH,000H
       33640A00             
00005C 25752C257500   22615 _1313:  DB      025H,075H,02CH,025H,075H,000H
000062 256400         22616 _10:    DB      025H,064H,000H
000065 256600         22617 _901:   DB      025H,066H,000H
                      22618         EXTRN   HCODE(__MUL_SPF)
                      22621         EXTRN   HCODE(_SetCBSystem)
                      22623         EXTRN   HDATA(_CBSetup)
                      22625         EXTRN   HDATA(_BBSetup)
000068 256C00         22626 _220:   DB      025H,06CH,000H
                      22628         EXTRN   HDATA(_OperEnableReg)
00006B 475825643B00   22629 _315:   DB      047H,058H,025H,064H,03BH,000H
                      22630         EXTRN   HCODE(__SUBR_DPF)
000071 257300         22631 _985:   DB      025H,073H,000H
                      22634         EXTRN   HCODE(_GenlockInit)
                      22637         EXTRN   HDATA(_Cmd)
                      22640         EXTRN   HCODE(_GenlockUpdate)
000074 4F4E00         22641 _959:   DB      04FH,04EH,000H
000077 257500         22642 _1190:  DB      025H,075H,000H
                      22645         EXTRN   HCODE(_SetAudioSignal)
                      22646         EXTRN   HCODE(__SPF2DPF)
                      22649         EXTRN   HCODE(_CBInit)
                      22652         EXTRN   HCODE(_strcpy)
00007A 252E31660A00   22653 _900:   DB      025H,02EH,031H,066H,00AH,000H
                      22656         EXTRN   HCODE(_WriteCBChromaGain)
                      22659         EXTRN   HCODE(_fabs)
                      22661         EXTRN   HDATA(_ParCnt)
                      22664         EXTRN   HCODE(_NV_Recall)
                      22667         EXTRN   HCODE(_labs)
000080 4F464600       22668 _261:   DB      04FH,046H,046H,000H
                      22670         EXTRN   HDATA(_GenlockStatus)
                      22673         EXTRN   HCODE(_ReceiveIIC)
                      22676         EXTRN   HCODE(_SetAudioOutput)
                      22678         EXTRN   HDATA(_NumSuffix)
                      22681         EXTRN   HCODE(_rs232puts)
                      22683         EXTRN   HDATA(_CalibrationPtr)
                      22685         EXTRN   HDATA(_CmdRequest)
                      22687         EXTRN   HDATA(_ESRReg)
                      22689         EXTRN   HDATA(_STBReg)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 350

ADDR   CODE            LINE SOURCELINE
                      22691         EXTRN   HDATA(_AudioSetup)
000084 256C752C256C75 22692 _1037:  DB      025H,06CH,075H,02CH,025H,06CH,075H,000H
       00                   
                      22698         EXTRN   HCODE(_ErrorTxt_Array)
                      22701         EXTRN   HCODE(_SetGenlockDelay)
                      22704         EXTRN   HCODE(_WriteCBGain)
00008C 25642C256400   22705 _1451:  DB      025H,064H,02CH,025H,064H,000H
000092 2563252E316600 22706 _1564:  DB      025H,063H,025H,02EH,031H,066H,000H
                      22708         EXTRN   HDATA(_BBControlPort)
000099 4847256C643B00 22709 _314:   DB      048H,047H,025H,06CH,064H,03BH,000H
                      22712         EXTRN   HCODE(_BBDefaults)
                      22714         EXTRN   HDATA(_SettingsPtr)
0000A0 474D3000       22715 _313:   DB      047H,04DH,030H,000H
                      22716         EXTRN   HCODE(__L2SPF)
                      22718         EXTRN   HDATA(_ESEReg)
                      22721         EXTRN   HCODE(_BBVersion)
0000A4 4F46460A00     22722 _958:   DB      04FH,046H,046H,00AH,000H
                      22725         EXTRN   HCODE(_BBInit)
                      22728         EXTRN   HCODE(_CBDefaults)
0000A9 25642C257300   22729 _984:   DB      025H,064H,02CH,025H,073H,000H
0000AF 475825753B00   22730 _333:   DB      047H,058H,025H,075H,03BH,000H
                      22732         EXTRN   HDATA(_GenlockSetup)
                      22735         EXTRN   HCODE(_SetCBEmbAudioSignal)
                      22738         EXTRN   HCODE(_rs232printf)
                      22741         EXTRN   HCODE(_AudioUpdate)
                      22743         EXTRN   HDATA(_Settings)
                      22746         EXTRN   HCODE(_sprintf)
                      22748         EXTRN   HDATA(_OperEventReg)
                      22749         EXTRN   HCODE(__CMP_SPF)
                      22750         EXTRN   HCODE(__DIV_SPF)
                      22752         EXTRN   HDATA(_SREReg)
                      22755         EXTRN   HCODE(_NV_Store)
0000B5 25642C25642C25 22756 _183:   DB      025H,064H,02CH,025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       642C256400           
                      22759         EXTRN   HCODE(_pld_version)
                      22762         EXTRN   HCODE(_RecallPreset)
                      22765         EXTRN   HCODE(_AudioInit)
                      22767         EXTRN   HDATA(_Calibration)
                      22770         EXTRN   HCODE(_BBSPGCommunication)
0000C1 25642C25642C25 22771 _1122:  DB      025H,064H,02CH,025H,064H,02CH,025H,064H,000H
       6400                 
0000CA 25642C25642C25 22772 _298:   DB      025H,064H,02CH,025H,064H,02CH,025H,066H,000H
       6600                 
                      22773         EXTRN   HCODE(__ADD_DPF)
                      22774         EXTRN   HCODE(__SMODL)
                      22777         EXTRN   HCODE(_tcxo_status)
                      22779         EXTRN   HDATA(_QuestEnableReg)
                      22780         EXTRN   IDATA(__lc_bs)
                      22783         EXTRN   HCODE(_ResetInstrument)
                      22785         EXTRN   HDATA(_QuestConditionReg)
                      22788         EXTRN   HCODE(_SetAudioClick)
0000D3 25387300       22789 _1078:  DB      025H,038H,073H,000H
                      22792         EXTRN   HCODE(_SetCBPattern)
                      22793         EXTRN   HCODE(__SDIVL)
0000D7 2533327300     22794 _1053:  DB      025H,033H,032H,073H,000H
                      22797         EXTRN   HCODE(_GenlockDefaults)
0000DC 25642C00       22798 _532:   DB      025H,064H,02CH,000H
                      22801         EXTRN   HCODE(_rs232putchar)
                      22802         EXTRN   HCODE(__DPF2L)
                      22803         EXTRN   HCODE(__CMP_DPF)
                      22805         EXTRN   HDATA(_OperConditionReg)
                      22808         EXTRN   HCODE(_AudioDefaults)
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 351

ADDR   CODE            LINE SOURCELINE
0000E0 253032642C2530 22809 _182:   DB      025H,030H,032H,064H,02CH,025H,030H,032H,064H,02CH,025H,030H
       32642C2530           
0000EC 32640A00       22810         DB      032H,064H,00AH,000H
0000F0 25642C25642C25 22811 _1121:  DB      025H,064H,02CH,025H,064H,02CH,025H,064H,00AH,000H
       640A00               
0000FA 25642C25313773 22812 _131:   DB      025H,064H,02CH,025H,031H,037H,073H,000H
       00                   
                      22814         EXTRN   HDATA(_SCPIError)
                      22815         EXTRN   HCODE(__UDIVL)
                      22818         EXTRN   HCODE(_ROMChecksum)
                      22821         EXTRN   HCODE(_WriteAnlAudioDACLevel)
000102 25642C2200     22822 _109:   DB      025H,064H,02CH,022H,000H
000107 4F4E0A00       22823 _957:   DB      04FH,04EH,00AH,000H
                      22826         EXTRN   HCODE(_SetAudioLevel)
00010B 2C25642C00     22827 _420:   DB      02CH,025H,064H,02CH,000H
                      22828         EXTRN   HCODE(__DPF2S)
                      22831         EXTRN   HCODE(_sio0SndRequest)
                      22834         EXTRN   HCODE(_UpdateESRRegister)
                      22836         EXTRN   HDATA(_QuestEventReg)
                      22839         EXTRN   HCODE(_SetCBScHPhase)
                      22840         EXTRN   DATA(__lc_ub_xvwbuffer)
                      22841         EXTRN   DATA(__lc_ue_xvwbuffer)
                      22842         CALLS   'CLSCommand', 'ResetErrorEventQueue'
                      22843         CALLS   'ESECommand', 'rs232printf'
                      22844         CALLS   'ESECommand', 'sscanf'
                      22845         CALLS   'ESRCommand', 'UpdateESRRegister'
                      22846         CALLS   'ESRCommand', 'rs232printf'
                      22847         CALLS   'SRECommand', 'rs232printf'
                      22848         CALLS   'SRECommand', 'sscanf'
                      22849         CALLS   'STBCommand', 'UpdateSTBRegister'
                      22850         CALLS   'STBCommand', 'rs232printf'
                      22851         CALLS   'RSTCommand', 'ResetInstrument'
                      22852         CALLS   'IDNCommand', 'rs232puts'
                      22853         CALLS   'IDNCommand', 'rs232putchar'
                      22854         CALLS   'IDNCommand', 'rs232puts'
                      22855         CALLS   'IDNCommand', 'rs232putchar'
                      22856         CALLS   'IDNCommand', 'rs232puts'
                      22857         CALLS   'IDNCommand', 'rs232putchar'
                      22858         CALLS   'IDNCommand', 'rs232puts'
                      22859         CALLS   'IDNCommand', 'rs232putchar'
                      22860         CALLS   'RCLCommand', 'sscanf'
                      22861         CALLS   'RCLCommand', 'RecallPreset'
                      22862         CALLS   'SAVCommand', 'sscanf'
                      22863         CALLS   'SAVCommand', 'StorePreset'
                      22864         CALLS   'SystemError', 'ReadErrorEventQueue'
                      22865         CALLS   'SystemError', 'sprintf'
                      22866         CALLS   'SystemError', 'rs232puts'
                      22867         CALLS   'SystemError', 'rs232putchar'
                      22868         CALLS   'SystemError', 'rs232puts'
                      22869         CALLS   'SystemVersion', 'rs232putchar'
                      22870         CALLS   'SystemPresetName', 'sscanf'
                      22871         CALLS   'SystemPresetName', 'NV_Recall'
                      22872         CALLS   'SystemPresetName', 'rs232puts'
                      22873         CALLS   'SystemPresetName', 'rs232putchar'
                      22874         CALLS   'SystemPresetName', 'sscanf'
                      22875         CALLS   'SystemPresetName', 'strlen'
                      22876         CALLS   'SystemPresetName', 'NV_Recall'
                      22877         CALLS   'SystemPresetName', 'strcpy'
                      22878         CALLS   'SystemPresetName', 'NV_Store'
                      22879         CALLS   'SystemPresetAuthor', 'sscanf'
                      22880         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22881         CALLS   'SystemPresetAuthor', 'rs232puts'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 352

ADDR   CODE            LINE SOURCELINE
                      22882         CALLS   'SystemPresetAuthor', 'rs232putchar'
                      22883         CALLS   'SystemPresetAuthor', 'sscanf'
                      22884         CALLS   'SystemPresetAuthor', 'strlen'
                      22885         CALLS   'SystemPresetAuthor', 'NV_Recall'
                      22886         CALLS   'SystemPresetAuthor', 'strcpy'
                      22887         CALLS   'SystemPresetAuthor', 'NV_Store'
                      22888         CALLS   'SystemPresetDate', 'sscanf'
                      22889         CALLS   'SystemPresetDate', 'NV_Recall'
                      22890         CALLS   'SystemPresetDate', 'sprintf'
                      22891         CALLS   'SystemPresetDate', 'rs232puts'
                      22892         CALLS   'SystemPresetDate', 'sscanf'
                      22893         CALLS   'SystemPresetDate', 'ValidateDate'
                      22894         CALLS   'SystemPresetDate', 'NV_Recall'
                      22895         CALLS   'SystemPresetDate', 'NV_Store'
                      22896         CALLS   'StatusOperEvent', 'rs232printf'
                      22897         CALLS   'StatusOperCondition', 'rs232printf'
                      22898         CALLS   'StatusOperEnable', 'rs232printf'
                      22899         CALLS   'StatusOperEnable', 'sscanf'
                      22900         CALLS   'StatusQuestEvent', 'rs232printf'
                      22901         CALLS   'StatusQuestCondition', 'rs232printf'
                      22902         CALLS   'StatusQuestEnable', 'rs232printf'
                      22903         CALLS   'StatusQuestEnable', 'sscanf'
                      22904         CALLS   'StatusPreset', 'rs232putchar'
                      22905         CALLS   'StatusPreset', 'rs232puts'
                      22906         CALLS   'StatusPreset', 'rs232putchar'
                      22907         CALLS   'GenlockGen', 'rs232putchar'
                      22908         CALLS   'GenlockGen', 'PrintSamplesToFLT'
                      22909         CALLS   'GenlockGen', 'rs232putchar'
                      22910         CALLS   'GenlockGenSystem', 'rs232putchar'
                      22911         CALLS   'GenlockGenSystem', 'FindParameter'
                      22912         CALLS   'GenlockGenSystem', 'SetGenlockSystem'
                      22913         CALLS   'GenlockGenDelay', 'PrintSamplesToFLT'
                      22914         CALLS   'GenlockGenDelay', 'rs232putchar'
                      22915         CALLS   'GenlockGenDelay', 'sscanf'
                      22916         CALLS   'GenlockGenDelay', 'FLTToSamples'
                      22917         CALLS   'GenlockGenDelay', 'SetGenlockDelay'
                      22918         CALLS   'GenlockGenCalibrateEnable', 'rs232putchar'
                      22919         CALLS   'GenlockGenCalibrateEnable', 'FindParameter'
                      22920         CALLS   'GenlockGenCalibrateEnable', 'SetGenlockSystem'
                      22921         CALLS   'GenlockGenCalibrateEnable', 'SetBBSystem'
                      22922         CALLS   'GenlockGenCalibrateEnable', 'sio0SndCommand'
                      22923         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22924         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22925         CALLS   'GenlockGenCalibrateAdjust', 'FindParameter'
                      22926         CALLS   'GenlockGenCalibrateAdjust', 'sio0SndCommand'
                      22927         CALLS   'GenlockGenCalibrateStore', 'NV_Store'
                      22928         CALLS   'BBGen', 'rs232putchar'
                      22929         CALLS   'BBGen', 'PrintSamplesToFLT'
                      22930         CALLS   'BBGen', 'rs232printf'
                      22931         CALLS   'BBGenSystem', 'rs232putchar'
                      22932         CALLS   'BBGenSystem', 'FindParameter'
                      22933         CALLS   'BBGenSystem', 'SetBBSystem'
                      22934         CALLS   'BBGenDelay', 'PrintSamplesToFLT'
                      22935         CALLS   'BBGenDelay', 'rs232putchar'
                      22936         CALLS   'BBGenDelay', 'sscanf'
                      22937         CALLS   'BBGenDelay', 'FLTToSamples'
                      22938         CALLS   'BBGenDelay', 'SetBBDelay'
                      22939         CALLS   'BBGenScHPhase', 'rs232printf'
                      22940         CALLS   'BBGenScHPhase', 'sscanf'
                      22941         CALLS   'BBGenScHPhase', 'SetBBScHPhase'
                      22942         CALLS   'TSGen', 'rs232putchar'
                      22943         CALLS   'TSGen', 'PrintSamplesToFLT'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 353

ADDR   CODE            LINE SOURCELINE
                      22944         CALLS   'TSGen', 'rs232printf'
                      22945         CALLS   'TSGen', 'rs232putchar'
                      22946         CALLS   'TSGenPattern', 'rs232putchar'
                      22947         CALLS   'TSGenPattern', 'FindParameter'
                      22948         CALLS   'TSGenPattern', 'SetCBPattern'
                      22949         CALLS   'TSGenSystem', 'rs232putchar'
                      22950         CALLS   'TSGenSystem', 'FindParameter'
                      22951         CALLS   'TSGenSystem', 'SetCBSystem'
                      22952         CALLS   'TSGenDelay', 'PrintSamplesToFLT'
                      22953         CALLS   'TSGenDelay', 'rs232putchar'
                      22954         CALLS   'TSGenDelay', 'sscanf'
                      22955         CALLS   'TSGenDelay', 'FLTToSamples'
                      22956         CALLS   'TSGenDelay', 'SetCBDelay'
                      22957         CALLS   'TSGenScHPhase', 'rs232printf'
                      22958         CALLS   'TSGenScHPhase', 'sscanf'
                      22959         CALLS   'TSGenScHPhase', 'SetCBScHPhase'
                      22960         CALLS   'TSGenEmbAudioSignal', 'rs232putchar'
                      22961         CALLS   'TSGenEmbAudioSignal', 'FindParameter'
                      22962         CALLS   'TSGenEmbAudioSignal', 'SetCBEmbAudioSignal'
                      22963         CALLS   'AudioGenOutput', 'rs232putchar'
                      22964         CALLS   'AudioGenOutput', 'FindParameter'
                      22965         CALLS   'AudioGenOutput', 'SetAudioOutput'
                      22966         CALLS   'AudioGenAnalog', 'rs232putchar'
                      22967         CALLS   'AudioGenAnalog', 'rs232printf'
                      22968         CALLS   'AudioGenAnalogSignal', 'rs232putchar'
                      22969         CALLS   'AudioGenAnalogSignal', 'FindParameter'
                      22970         CALLS   'AudioGenAnalogSignal', 'SetAudioSignal'
                      22971         CALLS   'AudioGenAnalogLevel', 'rs232putchar'
                      22972         CALLS   'AudioGenAnalogLevel', 'rs232printf'
                      22973         CALLS   'AudioGenAnalogLevel', 'FindParameter'
                      22974         CALLS   'AudioGenAnalogLevel', 'sscanf'
                      22975         CALLS   'AudioGenAnalogLevel', 'SetAudioLevel'
                      22976         CALLS   'AudioGenAnalogClick', 'rs232printf'
                      22977         CALLS   'AudioGenAnalogClick', 'sscanf'
                      22978         CALLS   'AudioGenAnalogClick', 'SetAudioClick'
                      22979         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22980         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22981         CALLS   'AudioGenAESEBU', 'rs232putchar'
                      22982         CALLS   'AudioGenAESEBU', 'rs232printf'
                      22983         CALLS   'AudioGenAESEBUSystem', 'rs232putchar'
                      22984         CALLS   'AudioGenAESEBUSystem', 'FindParameter'
                      22985         CALLS   'AudioGenAESEBUSystem', 'SetAudioSystem'
                      22986         CALLS   'AudioGenAESEBUSignal', 'rs232putchar'
                      22987         CALLS   'AudioGenAESEBUSignal', 'FindParameter'
                      22988         CALLS   'AudioGenAESEBUSignal', 'SetAudioSignal'
                      22989         CALLS   'AudioGenAESEBULevel', 'rs232putchar'
                      22990         CALLS   'AudioGenAESEBULevel', 'rs232printf'
                      22991         CALLS   'AudioGenAESEBULevel', 'FindParameter'
                      22992         CALLS   'AudioGenAESEBULevel', 'sscanf'
                      22993         CALLS   'AudioGenAESEBULevel', 'SetAudioLevel'
                      22994         CALLS   'AudioGenAESEBUTiming', 'rs232printf'
                      22995         CALLS   'AudioGenAESEBUTiming', 'sscanf'
                      22996         CALLS   'AudioGenAESEBUTiming', 'SetAudioTiming'
                      22997         CALLS   'AudioGenAESEBUWordClock', 'rs232putchar'
                      22998         CALLS   'AudioGenAESEBUWordClock', 'FindParameter'
                      22999         CALLS   'AudioGenAESEBUWordClock', 'SetAudioWordClock'
                      23000         CALLS   'AudioGenAESEBUClick', 'rs232printf'
                      23001         CALLS   'AudioGenAESEBUClick', 'sscanf'
                      23002         CALLS   'AudioGenAESEBUClick', 'SetAudioClick'
                      23003         CALLS   'FactPassword', 'rs232puts'
                      23004         CALLS   'FactPassword', 'strcmp'
                      23005         CALLS   'FactPassword', 'Cstrcmp'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 354

ADDR   CODE            LINE SOURCELINE
                      23006         CALLS   'FactReset', 'GenlockDefaults'
                      23007         CALLS   'FactReset', 'BBDefaults'
                      23008         CALLS   'FactReset', 'CBDefaults'
                      23009         CALLS   'FactReset', 'AudioDefaults'
                      23010         CALLS   'FactReset', 'GenlockInit'
                      23011         CALLS   'FactReset', 'BBInit'
                      23012         CALLS   'FactReset', 'CBInit'
                      23013         CALLS   'FactReset', 'AudioInit'
                      23014         CALLS   'FactReset', 'GenlockUpdate'
                      23015         CALLS   'FactReset', 'CBUpdate'
                      23016         CALLS   'FactReset', 'BBUpdate'
                      23017         CALLS   'FactReset', 'AudioUpdate'
                      23018         CALLS   'FactReset', 'StorePreset'
                      23019         CALLS   'FactReset', 'NV_Store'
                      23020         CALLS   'FactV24Command', 'sscanf'
                      23021         CALLS   'FactV24Command', 'sio0SndRequest'
                      23022         CALLS   'FactV24Command', 'rs232puts'
                      23023         CALLS   'FactV24Command', 'sio0SndCommand'
                      23024         CALLS   'FactV24Transparent', 'FindParameter'
                      23025         CALLS   'FactV24Transparent', 'BBSPGCommunication'
                      23026         CALLS   'FactChecksumCode', 'ROMChecksum'
                      23027         CALLS   'FactChecksumCode', 'sprintf'
                      23028         CALLS   'FactChecksumCode', 'rs232puts'
                      23029         CALLS   'FactChecksumPLD', 'ROMChecksum'
                      23030         CALLS   'FactChecksumPLD', 'sprintf'
                      23031         CALLS   'FactChecksumPLD', 'rs232puts'
                      23032         CALLS   'FactChecksumEmbAudio', 'ROMChecksum'
                      23033         CALLS   'FactChecksumEmbAudio', 'sprintf'
                      23034         CALLS   'FactChecksumEmbAudio', 'rs232puts'
                      23035         CALLS   'FactChecksumPattern', 'ROMChecksum'
                      23036         CALLS   'FactChecksumPattern', 'sprintf'
                      23037         CALLS   'FactChecksumPattern', 'rs232puts'
                      23038         CALLS   'FactChecksumRange', 'sscanf'
                      23039         CALLS   'FactChecksumRange', 'ROMChecksum'
                      23040         CALLS   'FactChecksumRange', 'sprintf'
                      23041         CALLS   'FactChecksumRange', 'rs232puts'
                      23042         CALLS   'FactMainVersion', 'sprintf'
                      23043         CALLS   'FactMainVersion', 'rs232puts'
                      23044         CALLS   'FactMainIDNCompany', 'rs232puts'
                      23045         CALLS   'FactMainIDNCompany', 'rs232putchar'
                      23046         CALLS   'FactMainIDNCompany', 'sscanf'
                      23047         CALLS   'FactMainIDNCompany', 'strncpy'
                      23048         CALLS   'FactMainIDNCompany', 'NV_Store'
                      23049         CALLS   'FactMainIDNType', 'rs232puts'
                      23050         CALLS   'FactMainIDNType', 'rs232putchar'
                      23051         CALLS   'FactMainIDNType', 'sscanf'
                      23052         CALLS   'FactMainIDNType', 'strncpy'
                      23053         CALLS   'FactMainIDNType', 'NV_Store'
                      23054         CALLS   'FactMainIDNKUNumber', 'rs232puts'
                      23055         CALLS   'FactMainIDNKUNumber', 'rs232putchar'
                      23056         CALLS   'FactMainIDNKUNumber', 'sscanf'
                      23057         CALLS   'FactMainIDNKUNumber', 'strncpy'
                      23058         CALLS   'FactMainIDNKUNumber', 'NV_Store'
                      23059         CALLS   'FactMainIDNSWRevision', 'rs232puts'
                      23060         CALLS   'FactMainIDNSWRevision', 'rs232putchar'
                      23061         CALLS   'FactMainIDNSWRevision', 'sscanf'
                      23062         CALLS   'FactMainIDNSWRevision', 'strncpy'
                      23063         CALLS   'FactMainIDNSWRevision', 'NV_Store'
                      23064         CALLS   'FactMainSystem', 'rs232putchar'
                      23065         CALLS   'FactMainSystem', 'FindParameter'
                      23066         CALLS   'FactMainSystem', 'NV_Store'
                      23067         CALLS   'FactMainFMSDateProd', 'sprintf'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 355

ADDR   CODE            LINE SOURCELINE
                      23068         CALLS   'FactMainFMSDateProd', 'rs232puts'
                      23069         CALLS   'FactMainFMSDateProd', 'sscanf'
                      23070         CALLS   'FactMainFMSDateProd', 'ValidateDate'
                      23071         CALLS   'FactMainFMSDateProd', 'NV_Store'
                      23072         CALLS   'FactMainFMSDateUpd', 'sprintf'
                      23073         CALLS   'FactMainFMSDateUpd', 'rs232puts'
                      23074         CALLS   'FactMainFMSDateUpd', 'sscanf'
                      23075         CALLS   'FactMainFMSDateUpd', 'ValidateDate'
                      23076         CALLS   'FactMainFMSDateUpd', 'NV_Store'
                      23077         CALLS   'FactGenlockGenDate', 'sprintf'
                      23078         CALLS   'FactGenlockGenDate', 'rs232puts'
                      23079         CALLS   'FactGenlockGenDate', 'sscanf'
                      23080         CALLS   'FactGenlockGenDate', 'ValidateDate'
                      23081         CALLS   'FactGenlockGenDate', 'NV_Store'
                      23082         CALLS   'FactGenlockGenVersion', 'GenlockVersion'
                      23083         CALLS   'FactGenlockGenVersion', 'rs232puts'
                      23084         CALLS   'FactGenlockGenVersion', 'rs232putchar'
                      23085         CALLS   'FactGenlockGenFRefDate', 'sprintf'
                      23086         CALLS   'FactGenlockGenFRefDate', 'rs232puts'
                      23087         CALLS   'FactGenlockGenFRefDate', 'sscanf'
                      23088         CALLS   'FactGenlockGenFRefDate', 'ValidateDate'
                      23089         CALLS   'FactGenlockGenFRefDate', 'NV_Store'
                      23090         CALLS   'FactGenlockGenFRefDAC', 'sprintf'
                      23091         CALLS   'FactGenlockGenFRefDAC', 'rs232puts'
                      23092         CALLS   'FactGenlockGenFRefDAC', 'sscanf'
                      23093         CALLS   'FactGenlockGenFRefDAC', 'NV_Store'
                      23094         CALLS   'FactGenlockGenUOffDAC', 'sprintf'
                      23095         CALLS   'FactGenlockGenUOffDAC', 'rs232puts'
                      23096         CALLS   'FactGenlockGenUOffDAC', 'sscanf'
                      23097         CALLS   'FactGenlockGenUOffDAC', 'NV_Store'
                      23098         CALLS   'FactGenlockGenURefDAC', 'sprintf'
                      23099         CALLS   'FactGenlockGenURefDAC', 'rs232puts'
                      23100         CALLS   'FactGenlockGenURefDAC', 'sscanf'
                      23101         CALLS   'FactGenlockGenURefDAC', 'NV_Store'
                      23102         CALLS   'FactGenlockGenURefDate', 'sprintf'
                      23103         CALLS   'FactGenlockGenURefDate', 'rs232puts'
                      23104         CALLS   'FactGenlockGenURefDate', 'sscanf'
                      23105         CALLS   'FactGenlockGenURefDate', 'ValidateDate'
                      23106         CALLS   'FactGenlockGenURefDate', 'NV_Store'
                      23107         CALLS   'FactGenlockGenHPHZero', 'sprintf'
                      23108         CALLS   'FactGenlockGenHPHZero', 'rs232puts'
                      23109         CALLS   'FactGenlockGenHPHZero', 'sscanf'
                      23110         CALLS   'FactGenlockGenHPHZero', 'NV_Store'
                      23111         CALLS   'FactGenlockGenPhase', 'sprintf'
                      23112         CALLS   'FactGenlockGenPhase', 'rs232puts'
                      23113         CALLS   'FactGenlockGenPhase', 'sscanf'
                      23114         CALLS   'FactGenlockGenPhase', 'NV_Store'
                      23115         CALLS   'FactBBGenDate', 'sprintf'
                      23116         CALLS   'FactBBGenDate', 'rs232puts'
                      23117         CALLS   'FactBBGenDate', 'sscanf'
                      23118         CALLS   'FactBBGenDate', 'ValidateDate'
                      23119         CALLS   'FactBBGenDate', 'NV_Store'
                      23120         CALLS   'FactBBGenVersion', 'BBVersion'
                      23121         CALLS   'FactBBGenVersion', 'rs232puts'
                      23122         CALLS   'FactBBGenVersion', 'rs232putchar'
                      23123         CALLS   'FactBBGenSignal', 'FindParameter'
                      23124         CALLS   'FactBBGenPhase', 'sprintf'
                      23125         CALLS   'FactBBGenPhase', 'rs232puts'
                      23126         CALLS   'FactBBGenPhase', 'sscanf'
                      23127         CALLS   'FactBBGenPhase', 'NV_Store'
                      23128         CALLS   'FactBBGenScHPhase', 'sprintf'
                      23129         CALLS   'FactBBGenScHPhase', 'rs232puts'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 356

ADDR   CODE            LINE SOURCELINE
                      23130         CALLS   'FactBBGenScHPhase', 'sscanf'
                      23131         CALLS   'FactBBGenScHPhase', 'NV_Store'
                      23132         CALLS   'FactBBGenDAC', 'sprintf'
                      23133         CALLS   'FactBBGenDAC', 'rs232puts'
                      23134         CALLS   'FactBBGenDAC', 'sscanf'
                      23135         CALLS   'FactBBGenDAC', 'NV_Store'
                      23136         CALLS   'FactTSGenDate', 'sprintf'
                      23137         CALLS   'FactTSGenDate', 'rs232puts'
                      23138         CALLS   'FactTSGenDate', 'sscanf'
                      23139         CALLS   'FactTSGenDate', 'ValidateDate'
                      23140         CALLS   'FactTSGenDate', 'NV_Store'
                      23141         CALLS   'FactTSGenAGain', 'sprintf'
                      23142         CALLS   'FactTSGenAGain', 'rs232puts'
                      23143         CALLS   'FactTSGenAGain', 'sscanf'
                      23144         CALLS   'FactTSGenAGain', 'NV_Store'
                      23145         CALLS   'FactTSGenAGain', 'WriteCBGain'
                      23146         CALLS   'FactTSGenCGain', 'sprintf'
                      23147         CALLS   'FactTSGenCGain', 'rs232puts'
                      23148         CALLS   'FactTSGenCGain', 'sscanf'
                      23149         CALLS   'FactTSGenCGain', 'NV_Store'
                      23150         CALLS   'FactTSGenCGain', 'WriteCBChromaGain'
                      23151         CALLS   'FactTSGenPhase', 'sprintf'
                      23152         CALLS   'FactTSGenPhase', 'rs232puts'
                      23153         CALLS   'FactTSGenPhase', 'sscanf'
                      23154         CALLS   'FactTSGenPhase', 'NV_Store'
                      23155         CALLS   'FactTSGenPhase', 'SetCBDelay'
                      23156         CALLS   'FactTSGenScHPhase', 'sprintf'
                      23157         CALLS   'FactTSGenScHPhase', 'rs232puts'
                      23158         CALLS   'FactTSGenScHPhase', 'sscanf'
                      23159         CALLS   'FactTSGenScHPhase', 'NV_Store'
                      23160         CALLS   'FactTSGenScHPhase', 'SetCBScHPhase'
                      23161         CALLS   'FactAudioGenStatus', 'AudioStatus'
                      23162         CALLS   'FactAudioGenStatus', 'sprintf'
                      23163         CALLS   'FactAudioGenStatus', 'rs232puts'
                      23164         CALLS   'FactAudioGenDate', 'sprintf'
                      23165         CALLS   'FactAudioGenDate', 'rs232puts'
                      23166         CALLS   'FactAudioGenDate', 'sscanf'
                      23167         CALLS   'FactAudioGenDate', 'ValidateDate'
                      23168         CALLS   'FactAudioGenDate', 'NV_Store'
                      23169         CALLS   'FactAudioGenLevel', 'sprintf'
                      23170         CALLS   'FactAudioGenLevel', 'rs232puts'
                      23171         CALLS   'FactAudioGenLevel', 'sscanf'
                      23172         CALLS   'FactAudioGenLevel', 'NV_Store'
                      23173         CALLS   'FactAudioGenLevel', 'WriteAnlAudioDACLevel'
                      23174         CALLS   'FactPLDVersion', 'pld_version'
                      23175         CALLS   'FactPLDVersion', 'sprintf'
                      23176         CALLS   'FactPLDVersion', 'rs232puts'
                      23177         CALLS   'FactTCXOStatus', 'tcxo_status'
                      23178         CALLS   'FactTCXOStatus', 'sprintf'
                      23179         CALLS   'FactTCXOStatus', 'rs232puts'
                      23180         CALLS   'FactMultiMediaChip', 'sscanf'
                      23181         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23182         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23183         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23184         CALLS   'FactMultiMediaChip', 'sscanf'
                      23185         CALLS   'FactMultiMediaChip', 'TransmitIIC'
                      23186         CALLS   'FactMultiMediaChip', 'ReceiveIIC'
                      23187         CALLS   'FactMultiMediaChip', 'rs232printf'
                      23188         CALLS   'FindParameter', 'Cstrcmp'
                      23189         CALLS   'FLTToSamples', 'labs'
                      23190         CALLS   'FLTToSamples', 'abs'
                      23191         CALLS   'FLTToSamples', 'labs'
XA assembler v2.0 r2                    SN00085795-037 (c) 1998 TASKING, Inc.
                                                                                                                            Page 357

ADDR   CODE            LINE SOURCELINE
                      23192         CALLS   'FLTToSamples', 'abs'
                      23193         CALLS   'PrintSamplesToFLT', 'abs'
                      23194         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23195         CALLS   'PrintSamplesToFLT', 'abs'
                      23196         CALLS   'PrintSamplesToFLT', 'rs232printf'
                      23197         CALLS   'PrintSamplesToFLT', 'fabs'
                      23198         CALLS   'PrintSamplesToFLT', 'rs232printf'
