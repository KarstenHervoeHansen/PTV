; XA C compiler v2.0 r2                   SN00085795-Ccz (c) 1998 TASKING, Inc.
; options: -A1 -Cxag3 -e -g -IcF:\PT5202\prog\include
;          -IF:\PT5202\prog\rtxc\xa\include -I. -Ml -O2 -s
$CASE
$NOZPAGE
	NAME	FRONT
	SYMB	TOOL, "XA C compiler v2.0", 1
	SYMB	TYPE, 256, "bit", 'g', 0, 1
	SYMB	FILE, "front.c"
; front.c     1	/****************************************************************************/
; front.c     2	/* MODULE:                                                                  */
; front.c     3	/*  front.c - 												                               	      */
; front.c     4	/****************************************************************************/
; front.c     5	/* FUNCTIONS:                                                               */
; front.c     6	/*                                                                          */
; front.c     7	/*                                                                          */
; front.c     8	/* TASKS:                                                                   */
; front.c     9	    void front(void);
; front.c    10	/*                                                                          */
; front.c    11	/* NOTES:                                                                   */
; front.c    12	/****************************************************************************/
; front.c    13	/*
; front.c    14	 *   PTV software for PT5201    
; front.c    15	 *   Copyright (c) 
; front.c    16	  *   ProTeleVision Technologies A/S.
; front.c    17	 *   ALL RIGHTS RESERVED
; front.c    18	*/
; front.c    19	/****************************************************************************/
; front.c    20	
; front.c    21	#include "rtxcobj.h"
	SYMB	FILE, "rtxcobj.h"
	SYMB	FILE, "F:\\PT5202\\prog\\rtxc\\xa\\include\\rtxcapi.h"
	SYMB	FILE, "F:\\PT5202\\prog\\rtxc\\xa\\include\\typedef.h"
	SYMB	FILE, "F:\\PT5202\\prog\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 257, "KOBJNUM", 'T', #3
	SYMB	TYPE, 258, "TASK", 'T', #2
	SYMB	ENDF
	SYMB	FILE, "F:\\PT5202\\prog\\rtxc\\xa\\include\\rtxstruc.h"
	SYMB	FILE, "F:\\PT5202\\prog\\rtxc\\xa\\include\\rtxcopts.h"
	SYMB	ENDF
	SYMB	TYPE, 259, "KSNUM", 'T', #3
	SYMB	TYPE, 260, "PRIORITY", 'T', #258
	SYMB	TYPE, 261, "TSTATE", 'T', #5
	SYMB	TYPE, 262, "size_t", 'T', #18
	SYMB	TYPE, 263, "TSLICE", 'T', #3
	SYMB	TYPE, 265, 'n', #264, 130
	SYMB	TYPE, 266, 'P', #265
	SYMB	TYPE, 268, 'n', #267, 130
	SYMB	TYPE, 269, 'P', #268
	SYMB	TYPE, 270, 'n', #259, 130
	SYMB	TYPE, 271, 'P', #270
	SYMB	TYPE, 272, 'X', 12, #1, 30, 0
	SYMB	TYPE, 273, 'n', #272, 129
	SYMB	TYPE, 274, 'P', #273
	SYMB	TYPE, 275, "frame", 'S', 24,\
		 "es", #3, 0,\
		 "cs", #3, 1,\
		 "ssel", #3, 2,\
		 "ds", #3, 3,\
		 "pksnum", #271, 4,\
		 "R2", #18, 8,\
		 "R3", #18, 10,\
		 "R4", #18, 12,\
		 "R5", #18, 14,\
		 "R6", #18, 16,\
		 "psw", #18, 18,\
		 "pc", #274, 20
	SYMB	TYPE, 276, 'n', #275, 130
	SYMB	TYPE, 277, 'P', #276
	SYMB	TYPE, 278, 'X', 12, #1, 30, 0
	SYMB	TYPE, 279, 'n', #278, 129
	SYMB	TYPE, 280, 'P', #279
	SYMB	TYPE, 281, 'n', #2, 130
	SYMB	TYPE, 282, 'P', #281
	SYMB	TYPE, 283, 'n', #1, 130
	SYMB	TYPE, 284, 'P', #283
	SYMB	TYPE, 264, "tcb", 'S', 36,\
		 "flink", #266, 0,\
		 "blink", #266, 4,\
		 "pclkblk", #269, 8,\
		 "task", #258, 12,\
		 "priority", #260, 13,\
		 "sp", #277, 14,\
		 "status", #261, 18,\
		 "pc_t0", #280, 20,\
		 "stackbase", #282, 24,\
		 "stacksize", #262, 28,\
		 "tslice", #263, 30,\
		 "newslice", #263, 31,\
		 "arg", #284, 32
	SYMB	TYPE, 285, "TCB", 'T', #264
	SYMB	TYPE, 286, "SEMA", 'T', #257
	SYMB	TYPE, 287, "MAP", 'T', #257
	SYMB	TYPE, 289, 'n', #288, 130
	SYMB	TYPE, 290, 'P', #289
	SYMB	TYPE, 288, "rtxcmsg", 'S', 8,\
		 "link", #290, 0,\
		 "task", #258, 4,\
		 "priority", #260, 5,\
		 "sema", #286, 6
	SYMB	TYPE, 291, "RTXCMSG", 'T', #288
	SYMB	TYPE, 292, "TICKS", 'T', #16
	SYMB	TYPE, 293, 'N',\
		 "DELAY_OBJ", 0,\
		 "SEMAPHORE_OBJ", 1,\
		 "PARTITION_OBJ", 2,\
		 "QUEUE_OBJ", 3,\
		 "RESOURCE_OBJ", 4,\
		 "MAILBOX_OBJ", 5,\
		 "TIMER_OBJ", 6
	SYMB	TYPE, 294, "OBJTYPE", 'T', #293
	SYMB	TYPE, 267, "clkblk", 'S', 18,\
		 "flink", #269, 0,\
		 "blink", #269, 4,\
		 "remain", #292, 8,\
		 "recycle", #292, 10,\
		 "task", #258, 12,\
		 "state", #2, 13,\
		 "objtype", #294, 14,\
		 "objid", #257, 16
	SYMB	TYPE, 295, 'N',\
		 "PRIORITY_INVERSION_OFF", 0,\
		 "PRIORITY_INVERSION_ON", 1
	SYMB	TYPE, 296, "RESATTR", 'T', #295
	SYMB	ENDF
	SYMB	TYPE, 297, 'N',\
		 "RC_GOOD", 0,\
		 "RC_WAIT_CONFLICT", 1,\
		 "RC_NO_TIMERS", 2,\
		 "RC_TIMER_INACTIVE", 3,\
		 "RC_TIMER_ILLEGAL", 4,\
		 "RC_TIMEOUT", 5,\
		 "RC_QUEUE_FULL", 6,\
		 "RC_QUEUE_EMPTY", 7,\
		 "RC_ILLEGAL_QUEUE_SIZE", 8,\
		 "RC_BUSY", 9,\
		 "RC_NESTED", 10,\
		 "RC_ILLEGAL_TASK", 11,\
		 "RC_ACTIVE_TASK", 12,\
		 "RC_NO_YIELD", 13,\
		 "RC_MISSED_EVENT", 14
	SYMB	TYPE, 298, "KSRC", 'T', #297
	SYMB	TYPE, 299, "SSTATE", 'T', #258
	SYMB	TYPE, 300, "MBOX", 'T', #257
	SYMB	TYPE, 301, "QUEUE", 'T', #257
	SYMB	TYPE, 302, 'N',\
		 "QNE", 0,\
		 "QNF", 1,\
		 "QF", 2,\
		 "QE", 3
	SYMB	TYPE, 303, "QCOND", 'T', #302
	SYMB	TYPE, 304, "RESOURCE", 'T', #257
	SYMB	TYPE, 305, "CLKBLK", 'T', #267
	SYMB	TYPE, 306, "time_t", 'T', #6
	SYMB	TYPE, 307, "FRAME", 'T', #275
	SYMB	ENDF
	SYMB	FILE, "ctask.h"
	SYMB	ENDF
	SYMB	FILE, "csema.h"
	SYMB	ENDF
	SYMB	FILE, "cres.h"
	SYMB	ENDF
	SYMB	FILE, "cqueue.h"
	SYMB	ENDF
	SYMB	FILE, "cpart.h"
	SYMB	ENDF
	SYMB	FILE, "cmbox.h"
	SYMB	ENDF
	SYMB	FILE, "cclock.h"
	SYMB	ENDF
	SYMB	TYPE, 309, 'n', #308, 130
	SYMB	TYPE, 310, 'P', #309
	SYMB	TYPE, 308, 'X', 12, #1, 30, 2, #310, #282
	SYMB	TYPE, 312, 'n', #311, 129
	SYMB	TYPE, 313, 'P', #312
	SYMB	TYPE, 314, 'X', 12, #1, 30, 1, #310
	SYMB	TYPE, 315, 'n', #314, 129
	SYMB	TYPE, 316, 'P', #315
	SYMB	TYPE, 317, 'n', #6, 130
	SYMB	TYPE, 318, 'P', #317
	SYMB	TYPE, 317, 'X', 12, #16, 30, 2, #310, #318
	SYMB	TYPE, 320, 'n', #319, 129
	SYMB	TYPE, 321, 'P', #320
	SYMB	TYPE, 322, 'X', 12, #1, 30, 1, #310
	SYMB	TYPE, 323, 'n', #322, 129
	SYMB	TYPE, 324, 'P', #323
	SYMB	TYPE, 325, 'X', 12, #1, 30, 1, #310
	SYMB	TYPE, 326, 'n', #325, 129
	SYMB	TYPE, 327, 'P', #326
	SYMB	TYPE, 328, 'X', 12, #16, 30, 1, #310
	SYMB	TYPE, 329, 'n', #328, 129
	SYMB	TYPE, 330, 'P', #329
	SYMB	TYPE, 308, "TEvent", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TEvent", #313, 2,\
		 "_TEvent", #316, 6,\
		 "Wait", #321, 10,\
		 "Set", #324, 14,\
		 "Clear", #327, 18,\
		 "IsSet", #330, 22,\
		 "ID", #286, 26,\
		 "Name", #282, 28
	SYMB	TYPE, 331, "TEvent", 'T', #308
	SYMB	TYPE, 333, 'n', #332, 130
	SYMB	TYPE, 334, 'P', #333
	SYMB	TYPE, 332, 'X', 12, #1, 30, 1, #334
	SYMB	TYPE, 336, 'n', #335, 129
	SYMB	TYPE, 337, 'P', #336
	SYMB	TYPE, 338, 'X', 12, #1, 30, 1, #334
	SYMB	TYPE, 339, 'n', #338, 129
	SYMB	TYPE, 340, 'P', #339
	SYMB	TYPE, 341, 'n', #331, 130
	SYMB	TYPE, 342, 'P', #341
	SYMB	TYPE, 341, 'X', 12, #16, 30, 2, #334, #342
	SYMB	TYPE, 344, 'n', #343, 129
	SYMB	TYPE, 345, 'P', #344
	SYMB	TYPE, 346, 'X', 12, #1, 30, 2, #334, #342
	SYMB	TYPE, 347, 'n', #346, 129
	SYMB	TYPE, 348, 'P', #347
	SYMB	TYPE, 349, 'X', 12, #16, 30, 2, #334, #342
	SYMB	TYPE, 350, 'n', #349, 129
	SYMB	TYPE, 351, 'P', #350
	SYMB	TYPE, 352, 'X', 12, #342, 30, 2, #334, #318
	SYMB	TYPE, 353, 'n', #352, 129
	SYMB	TYPE, 354, 'P', #353
	SYMB	TYPE, 355, 'Z', #2, 95
	SYMB	TYPE, 332, "TEventList", 'S', 122,\
		 "ObjectID", #16, 0,\
		 "TEventList", #337, 2,\
		 "_TEventList", #340, 6,\
		 "Append", #345, 10,\
		 "Clear", #348, 14,\
		 "InList", #351, 18,\
		 "Wait", #354, 22,\
		 "Align", #355, 26
	SYMB	TYPE, 357, "TEventList", 'T', #332
	SYMB	TYPE, 359, 'n', #358, 130
	SYMB	TYPE, 360, 'P', #359
	SYMB	TYPE, 358, 'X', 12, #1, 30, 2, #360, #282
	SYMB	TYPE, 362, 'n', #361, 129
	SYMB	TYPE, 363, 'P', #362
	SYMB	TYPE, 364, 'X', 12, #1, 30, 1, #360
	SYMB	TYPE, 365, 'n', #364, 129
	SYMB	TYPE, 366, 'P', #365
	SYMB	TYPE, 367, 'X', 12, #1, 30, 1, #360
	SYMB	TYPE, 368, 'n', #367, 129
	SYMB	TYPE, 369, 'P', #368
	SYMB	TYPE, 370, 'X', 12, #1, 30, 1, #360
	SYMB	TYPE, 371, 'n', #370, 129
	SYMB	TYPE, 372, 'P', #371
	SYMB	TYPE, 373, 'X', 12, #16, 30, 1, #360
	SYMB	TYPE, 374, 'n', #373, 129
	SYMB	TYPE, 375, 'P', #374
	SYMB	TYPE, 358, "TResource", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TResource", #363, 2,\
		 "_TResource", #366, 6,\
		 "Lock", #369, 10,\
		 "Unlock", #372, 14,\
		 "Owner", #375, 18,\
		 "ID", #304, 22,\
		 "Name", #282, 24
	SYMB	TYPE, 376, "TResource", 'T', #358
	SYMB	TYPE, 377, 'X', 12, #1, 30, 0
	SYMB	TYPE, 378, 'n', #377, 129
	SYMB	TYPE, 379, 'P', #378
	SYMB	TYPE, 381, 'n', #380, 130
	SYMB	TYPE, 382, 'P', #381
	SYMB	TYPE, 377, 'X', 12, #1, 30, 3, #382, #16, #379
	SYMB	TYPE, 384, 'n', #383, 129
	SYMB	TYPE, 385, 'P', #384
	SYMB	TYPE, 386, 'X', 12, #1, 30, 1, #382
	SYMB	TYPE, 387, 'n', #386, 129
	SYMB	TYPE, 388, 'P', #387
	SYMB	TYPE, 389, 'X', 12, #1, 30, 1, #382
	SYMB	TYPE, 390, 'n', #389, 129
	SYMB	TYPE, 391, 'P', #390
	SYMB	TYPE, 392, 'X', 12, #1, 30, 2, #382, #16
	SYMB	TYPE, 393, 'n', #392, 129
	SYMB	TYPE, 394, 'P', #393
	SYMB	TYPE, 395, 'X', 12, #1, 30, 1, #382
	SYMB	TYPE, 396, 'n', #395, 129
	SYMB	TYPE, 397, 'P', #396
	SYMB	TYPE, 398, 'X', 12, #16, 30, 1, #382
	SYMB	TYPE, 399, 'n', #398, 129
	SYMB	TYPE, 400, 'P', #399
	SYMB	TYPE, 401, 'X', 12, #1, 30, 2, #382, #16
	SYMB	TYPE, 402, 'n', #401, 129
	SYMB	TYPE, 403, 'P', #402
	SYMB	TYPE, 380, "TThread", 'S', 36,\
		 "ObjectID", #16, 0,\
		 "TThread", #385, 2,\
		 "Execute", #388, 6,\
		 "Terminate", #391, 10,\
		 "Suspend", #394, 14,\
		 "Resume", #397, 18,\
		 "GetPriority", #400, 22,\
		 "SetPriority", #403, 26,\
		 "ID", #258, 30,\
		 "Status", #2, 31,\
		 "Stack", #282, 32
	SYMB	TYPE, 404, "TThread", 'T', #380
	SYMB	TYPE, 406, 'n', #405, 130
	SYMB	TYPE, 407, 'P', #406
	SYMB	TYPE, 405, 'X', 12, #1, 30, 1, #407
	SYMB	TYPE, 409, 'n', #408, 129
	SYMB	TYPE, 410, 'P', #409
	SYMB	TYPE, 411, 'X', 12, #1, 30, 1, #407
	SYMB	TYPE, 412, 'n', #411, 129
	SYMB	TYPE, 413, 'P', #412
	SYMB	TYPE, 414, 'X', 12, #1, 30, 2, #407, #16
	SYMB	TYPE, 415, 'n', #414, 129
	SYMB	TYPE, 416, 'P', #415
	SYMB	TYPE, 417, 'X', 12, #16, 30, 1, #407
	SYMB	TYPE, 418, 'n', #417, 129
	SYMB	TYPE, 419, 'P', #418
	SYMB	TYPE, 420, 'X', 12, #1, 30, 2, #407, #16
	SYMB	TYPE, 421, 'n', #420, 129
	SYMB	TYPE, 422, 'P', #421
	SYMB	TYPE, 423, 'n', #305, 130
	SYMB	TYPE, 424, 'P', #423
	SYMB	TYPE, 405, "TTimer", 'S', 32,\
		 "ObjectID", #16, 0,\
		 "TTimer", #410, 2,\
		 "_TTimer", #413, 6,\
		 "SetPeriod", #416, 10,\
		 "GetPeriod", #419, 14,\
		 "Tick", #422, 18,\
		 "TimeOut", #342, 22,\
		 "Period", #4, 26,\
		 "Handle", #424, 28
	SYMB	TYPE, 425, "TTimer", 'T', #405
	SYMB	TYPE, 427, 'n', #426, 130
	SYMB	TYPE, 428, 'P', #427
	SYMB	TYPE, 426, 'X', 12, #1, 30, 3, #428, #16, #16
	SYMB	TYPE, 430, 'n', #429, 129
	SYMB	TYPE, 431, 'P', #430
	SYMB	TYPE, 432, 'X', 12, #1, 30, 1, #428
	SYMB	TYPE, 433, 'n', #432, 129
	SYMB	TYPE, 434, 'P', #433
	SYMB	TYPE, 435, 'X', 12, #282, 30, 2, #428, #284
	SYMB	TYPE, 436, 'n', #435, 129
	SYMB	TYPE, 437, 'P', #436
	SYMB	TYPE, 438, 'X', 12, #1, 30, 2, #428, #284
	SYMB	TYPE, 439, 'n', #438, 129
	SYMB	TYPE, 440, 'P', #439
	SYMB	TYPE, 426, "TStream", 'S', 28,\
		 "ObjectID", #16, 0,\
		 "TStream", #431, 2,\
		 "_TStream", #434, 6,\
		 "Get", #437, 10,\
		 "Put", #440, 14,\
		 "ID", #301, 18,\
		 "Width", #16, 20,\
		 "Depth", #16, 22,\
		 "Handle", #282, 24
	SYMB	TYPE, 441, "TStream", 'T', #426
	SYMB	ENDF
; front.c    22	
; front.c    23	#include "define.h"
	SYMB	FILE, "define.h"
	SYMB	ENDF
; front.c    24	#include "instru.h"
	SYMB	FILE, "instru.h"
	SYMB	FILE, "nv_drv.h"
	SYMB	TYPE, 442, "NvPointer", 'T', #18
	SYMB	ENDF
	SYMB	FILE, "genlock.h"
	SYMB	TYPE, 443, 'S', 6,\
		 "System", #3, 0,\
		 "Delay", #7, 2
	SYMB	TYPE, 444, "GenlockObject", 'T', #443
	SYMB	ENDF
	SYMB	FILE, "bb.h"
	SYMB	TYPE, 445, 'S', 8,\
		 "System", #3, 0,\
		 "Delay", #7, 2,\
		 "ScHPhase", #16, 6
	SYMB	TYPE, 446, "BBObject", 'T', #445
	SYMB	ENDF
	SYMB	FILE, "cbar.h"
	SYMB	TYPE, 447, 'S', 12,\
		 "System", #3, 0,\
		 "Pattern", #18, 2,\
		 "Delay", #7, 4,\
		 "ScHPhase", #16, 8,\
		 "EmbAudioSignal", #3, 10
	SYMB	TYPE, 448, "CBObject", 'T', #447
	SYMB	ENDF
	SYMB	FILE, "audio.h"
	SYMB	TYPE, 449, 'S', 14,\
		 "System", #16, 0,\
		 "Signal", #16, 2,\
		 "Level", #16, 4,\
		 "Timing", #10, 6,\
		 "Frequency", #16, 10,\
		 "Click", #16, 12
	SYMB	TYPE, 450, "AudioObject", 'T', #449
	SYMB	ENDF
	SYMB	TYPE, 451, 'S', 34,\
		 "Date", #7, 0,\
		 "DACFactDate", #7, 4,\
		 "DACUserDate", #7, 8,\
		 "DACFactValue", #18, 12,\
		 "DACUserValue", #18, 14,\
		 "HPHZeroG", #7, 16,\
		 "PhaseG", #7, 20,\
		 "HPHZeroM", #7, 24,\
		 "PhaseM", #7, 28,\
		 "DACOffset", #16, 32
	SYMB	TYPE, 452, "GenlockCalibrationObject", 'T', #451
	SYMB	TYPE, 453, 'S', 20,\
		 "Date", #7, 0,\
		 "PhaseG", #7, 4,\
		 "ScHPhaseG", #18, 8,\
		 "PhaseM", #7, 10,\
		 "ScHPhaseM", #18, 14,\
		 "DACGain", #3, 16,\
		 "DACOffset", #3, 17,\
		 "DACLevel", #3, 18
	SYMB	TYPE, 454, "BBCalibrationObject", 'T', #453
	SYMB	TYPE, 455, 'S', 20,\
		 "Date", #7, 0,\
		 "PhaseG", #7, 4,\
		 "ScHPhaseG", #3, 8,\
		 "PhaseM", #7, 10,\
		 "ScHPhaseM", #3, 14,\
		 "GainG", #3, 15,\
		 "ChromaGainG", #3, 16,\
		 "GainM", #3, 17,\
		 "ChromaGainM", #3, 18
	SYMB	TYPE, 456, "CBCalibrationObject", 'T', #455
	SYMB	TYPE, 457, 'S', 6,\
		 "Date", #7, 0,\
		 "AnalogLeftChannel", #3, 4,\
		 "AnalogRightChannel", #3, 5
	SYMB	TYPE, 458, "AudioCalibrationObject", 'T', #457
	SYMB	TYPE, 459, 'Z', #446, 2
	SYMB	TYPE, 461, 'Z', #450, 1
	SYMB	TYPE, 463, 'S', 74,\
		 "ActivePreset", #16, 0,\
		 "GenlockSetup", #444, 2,\
		 "BBSetup", #459, 8,\
		 "CBSetup", #448, 32,\
		 "AudioOutput", #16, 44,\
		 "AudioSetup", #461, 46
	SYMB	TYPE, 464, "SettingsObject", 'T', #463
	SYMB	TYPE, 465, 'Z', #2, 32
	SYMB	TYPE, 467, 'Z', #2, 8
	SYMB	TYPE, 469, 'Z', #2, 12
	SYMB	TYPE, 471, 'Z', #454, 2
	SYMB	TYPE, 473, 'S', 226,\
		 "Company", #465, 0,\
		 "Type", #465, 33,\
		 "KUNumber", #467, 66,\
		 "SWRevision", #467, 75,\
		 "NC12", #469, 84,\
		 "ResetSystem", #3, 97,\
		 "ProdDate", #7, 98,\
		 "UpdateDate", #7, 102,\
		 "GenlockCalibration", #452, 106,\
		 "BBCalibration", #471, 140,\
		 "CBCalibration", #456, 200,\
		 "AudioCalibration", #458, 220
	SYMB	TYPE, 474, "CalibrationObject", 'T', #473
	SYMB	ENDF
; front.c    25	#include "KeyScan.h"
	SYMB	FILE, "KeyScan.h"
	SYMB	ENDF
; front.c    26	#include "KeyCodes.h"					// defines codes used for key queue
	SYMB	FILE, "KeyCodes.h"
	SYMB	ENDF
; front.c    27	#include "Key_hw.h"     			// Hardware interface to keyboard 
	SYMB	FILE, "Key_hw.h"
	SYMB	ENDF
; front.c    28	#include "led_hw.h"     			// Hardware interface to LEDs
	SYMB	FILE, "led_hw.h"
	SYMB	TYPE, 475, 'N',\
		 "true", -1,\
		 "false", 0
	SYMB	TYPE, 476, "bool", 'T', #475
	SYMB	ENDF
; front.c    29	
; front.c    30	enum KeyStates			{ StateNone = 0, StateDisplay, StateSelect, StateReset };
; front.c    31	
; front.c    32	static RepeatCnt;
; front.c    33	static KeyState;
; front.c    34	
; front.c    35	/**************************************************************************/
; front.c    36	/* front																											   FRONT.C	*/
; front.c    37	/*																																				*/
; front.c    38	/* Author:	 Kim Engedahl, DEV, 000609																		*/
; front.c    39	/* Revised:	 000620, KEn, DEV     																				*/
; front.c    40	/*																																				*/
; front.c    41	/* Function:   																														*/
; front.c    42	/* Remarks:																																*/
; front.c    43	/* Returns:																																*/
; front.c    44	/* Updates:																																*/
; front.c    45	/**************************************************************************/
; front.c    46	void front( void)
; front.c    47	{
FRONT_PR	SEGMENT	HCODE
	RSEG	FRONT_PR
	ALIGN	1
	SYMB	LINE, 47
	SYMB	TYPE, 477, "keystruk", 'S', 2,\
		 "Code", #3, 0,\
		 "Repeat", #3, 1
	SYMB	TYPE, 478, "KeyPress", 'T', #477
	PUBLIC	_front
_front:
	SYMB	TYPE, 479, 'X', 12, #1, 30, 0
	SYMB	GFUN, "front", _front, #479, 0, 0, 48
	SYMB	ALAB, _front, #479
	PUSH.W	R4, R5
	SYMB	SOFF, 4
	ADDS.W	R7,#0EH
	SYMB	SOFF, 6
	SYMB	IDEN, "key", -6, #478, 130, 5
; front.c    48		KeyPress key;
; front.c    49	
; front.c    50		key.Code = KeyNone;
	SYMB	LINE, 50
	MOV.B	[R7],#0FFH
; front.c    51			
; front.c    52		for ( ;;)
	SYMB	LINE, 52
_4:
_5:
_6:
_7:
_8:
; front.c    53		{
; front.c    54			KeyScanStream->Get( KeyScanStream, &key);
	SYMB	LINE, 54
	MOV.B	ES,#SEG( _KeyScanStream )
	MOV.W	R1,#SOF( _KeyScanStream )
	MOV.W	R0,[R1+]
	MOV.W	R1,[R1]
	MOV.B	ES,R1L
	MOV.W	R4,[R0+10]
	MOV.W	R5,[R0+12]
	MOV.B	R3L,#SEG( __lc_bs )
	XOR.B	R3H,R3H
	MOV.W	R2,R7
	FCALL	__ICALL
; front.c    55	
; front.c    56			switch ( key.Code)
	SYMB	LINE, 56
	CMP.B	[R7],#0FFH
	BEQ	_9
	CMP.B	[R7],#0CFH
	BEQ	_15
	BR	_4
; front.c    57			{
; front.c    58				case KeyNone:
	SYMB	LINE, 58
_9:
; front.c    59						switch ( KeyState)
	SYMB	LINE, 59
	MOV.B	ES,#SEG( _KeyState )
	MOV.W	R0,#SOF( _KeyState )
	MOV.W	R0,[R0]
	CMP.W	R0,#03H
	BEQ	_10
	CMP.W	R0,#02H
	BEQ	_11
	BR	_14
; front.c    60						{
; front.c    61							case StateReset:
	SYMB	LINE, 61
_10:
; front.c    62								ResetInstrument();
	SYMB	LINE, 62
	CALL	_ResetInstrument
; front.c    63								break;
	SYMB	LINE, 63
	BR	_14
; front.c    64	
; front.c    65							case StateSelect:
	SYMB	LINE, 65
_11:
; front.c    66								if ( Settings.ActivePreset)
	SYMB	LINE, 66
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.W	R0,[R0]
	BEQ	_14
; front.c    67									RecallPreset( Settings.ActivePreset);
	SYMB	LINE, 67
	CALL	_RecallPreset
; front.c    68								break;
; front.c    69						}
	SYMB	LINE, 69
_14:
; front.c    70	
; front.c    71						KeyState = StateNone;
	SYMB	LINE, 71
	MOV.B	ES,#SEG( _KeyState )
	MOV.W	R0,#SOF( _KeyState )
	MOV.W	[R0],#00H
; front.c    72	
; front.c    73						Sleep( 100);									// Display LEDs for 100ms before returning to normal
	SYMB	LINE, 73
	MOV.W	R0,#064H
	CALL	_Sleep
; front.c    74	
; front.c    75						SystemsLEDSet( NormLEDs, 0);
	SYMB	LINE, 75
	MOV.B	R0H,#00H
	MOV.B	R0L,R0H
	CALL	_SystemsLEDSet
; front.c    76						break;
	SYMB	LINE, 76
	BR	_8
; front.c    77	
; front.c    78					case KeyExecute:
	SYMB	LINE, 78
_15:
; front.c    79						switch ( key.Repeat)
	SYMB	LINE, 79
	CMP.B	[R7+1],#00H
	BEQ	_16
	CMP.B	[R7+1],#02H
	BEQ	_17
	CMP.B	[R7+1],#03H
	BEQ	_20
	BR	_4
; front.c    80						{
; front.c    81							case RepeatOff:							// Display active preset, (if any)
	SYMB	LINE, 81
_16:
; front.c    82								SystemsLEDSet( PresetLEDs, Settings.ActivePreset);
	SYMB	LINE, 82
	MOV.B	R0L,#01H
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R1,#SOF( _Settings )
	MOV.W	R1,[R1]
	MOV.B	R0H,R1L
	CALL	_SystemsLEDSet
; front.c    83	
; front.c    84								RepeatCnt = 0;
	SYMB	LINE, 84
	MOV.B	ES,#SEG( _RepeatCnt )
	MOV.W	R0,#SOF( _RepeatCnt )
	MOV.W	[R0],#00H
; front.c    85	
; front.c    86								KeyState = StateDisplay;
	SYMB	LINE, 86
	MOV.B	ES,#SEG( _KeyState )
	MOV.W	R0,#SOF( _KeyState )
	MOV.W	[R0],#01H
; front.c    87								break;
	SYMB	LINE, 87
	BR	_7
; front.c    88	
; front.c    89							case Repeat2:								// Display/select next preset when releasing button
	SYMB	LINE, 89
_17:
; front.c    90								if ( RepeatCnt-- == 0)
	SYMB	LINE, 90
	MOV.B	ES,#SEG( _RepeatCnt )
	MOV.W	R0,#SOF( _RepeatCnt )
	MOV.W	R0,[R0]
	MOV.W	R1,R0
	ADDS.W	R0,#0FH
	MOV.B	ES,#SEG( _RepeatCnt )
	MOV.W	R2,#SOF( _RepeatCnt )
	MOV.W	[R2],R0
	OR.W	R1,R1
	BNE	_19
; front.c    91								{
; front.c    92									RepeatCnt = 2;
	SYMB	LINE, 92
	MOV.B	ES,#SEG( _RepeatCnt )
	MOV.W	R0,#SOF( _RepeatCnt )
	MOV.W	[R0],#02H
; front.c    93	
; front.c    94									if ( ++Settings.ActivePreset > NoOfPresets)
	SYMB	LINE, 94
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.W	R0,[R0]
	ADDS.W	R0,#01H
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R1,#SOF( _Settings )
	MOV.W	[R1],R0
	CMP.W	R0,#04H
	BLE	_18
; front.c    95										Settings.ActivePreset = 0;
	SYMB	LINE, 95
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R0,#SOF( _Settings )
	MOV.W	[R0],#00H
_18:
; front.c    96	
; front.c    97									SystemsLEDSet( PresetLEDs, Settings.ActivePreset);
	SYMB	LINE, 97
	MOV.B	R0L,#01H
	MOV.B	ES,#SEG( _Settings )
	MOV.W	R1,#SOF( _Settings )
	MOV.W	R1,[R1]
	MOV.B	R0H,R1L
	CALL	_SystemsLEDSet
; front.c    98								}
	SYMB	LINE, 98
_19:
; front.c    99	
; front.c   100								KeyState = StateSelect;
	SYMB	LINE, 100
	MOV.B	ES,#SEG( _KeyState )
	MOV.W	R0,#SOF( _KeyState )
	MOV.W	[R0],#02H
; front.c   101								break;
	SYMB	LINE, 101
	BR	_6
; front.c   102	
; front.c   103							case Repeat3:								// Reset the unit when releasing button
	SYMB	LINE, 103
_20:
; front.c   104								KeyState = StateReset;
	SYMB	LINE, 104
	MOV.B	ES,#SEG( _KeyState )
	MOV.W	R0,#SOF( _KeyState )
	MOV.W	[R0],#03H
; front.c   105	
; front.c   106								SystemsLEDSet( ResetLEDs, 0);
	SYMB	LINE, 106
	MOV.B	R0L,#02H
	MOV.B	R0H,#00H
	CALL	_SystemsLEDSet
	SYMB	LINE, 52
	BR	_5
; front.c   107								break;
; front.c   108						}
; front.c   109						break;
; front.c   110			}
; front.c   111		}
; front.c   112	}
	SYMB	LINE, 112
	ADDS.W	R7,#02H
	SYMB	SOFF, 4
	POP.W	R4, R5
	SYMB	SOFF, 0
	RET
	SYMB	EFUN
	SYMB	ENDF

	SYMB	IDEN, "RepeatCnt", _RepeatCnt, #16, 130, 4
FRONT_CLR_FA	SEGMENT	HDATA INSEGMENT CLEAR
	RSEG	FRONT_CLR_FA
	ALIGN	1
_RepeatCnt:	DS	2
	SYMB	TYPE, 480, 'n', #441, 130
	SYMB	TYPE, 481, 'P', #480
	SYMB	ALAB, _KeyScanStream, #481
	EXTRN	HDATA(_KeyScanStream)
	SYMB	ALAB, _Settings, #464
	EXTRN	HDATA(_Settings)
	SYMB	TYPE, 482, 'X', 12, #16, 30, 2, #3, #3
	SYMB	ALAB, _SystemsLEDSet, #482
	EXTRN	HCODE(_SystemsLEDSet)
	EXTRN	HCODE(__ICALL)
	SYMB	TYPE, 483, 'X', 12, #16, 30, 1, #16
	SYMB	ALAB, _RecallPreset, #483
	EXTRN	HCODE(_RecallPreset)
	EXTRN	IDATA(__lc_bs)
	SYMB	TYPE, 484, 'X', 12, #16, 30, 0
	SYMB	ALAB, _ResetInstrument, #484
	EXTRN	HCODE(_ResetInstrument)
	SYMB	TYPE, 485, 'X', 12, #1, 30, 1, #16
	SYMB	ALAB, _Sleep, #485
	EXTRN	HCODE(_Sleep)
	SYMB	IDEN, "KeyState", _KeyState, #16, 130, 4
	ALIGN	1
_KeyState:	DS	2
	EXTRN	DATA(__lc_ub_xvwbuffer)
	EXTRN	DATA(__lc_ue_xvwbuffer)
	CALLS	'front', 'ResetInstrument'
	CALLS	'front', 'RecallPreset'
	CALLS	'front', 'Sleep'
	CALLS	'front', 'SystemsLEDSet'
	END
